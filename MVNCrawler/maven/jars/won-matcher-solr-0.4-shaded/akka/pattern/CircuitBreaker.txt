Compiled from "CircuitBreaker.scala"
public class akka.pattern.CircuitBreaker extends akka.pattern.AbstractCircuitBreaker {
  public final akka.actor.Scheduler akka$pattern$CircuitBreaker$$scheduler;

  public final int akka$pattern$CircuitBreaker$$maxFailures;

  public final scala.concurrent.duration.FiniteDuration akka$pattern$CircuitBreaker$$callTimeout;

  public final scala.concurrent.duration.FiniteDuration akka$pattern$CircuitBreaker$$resetTimeout;

  public final scala.concurrent.duration.FiniteDuration akka$pattern$CircuitBreaker$$maxResetTimeout;

  public final double akka$pattern$CircuitBreaker$$exponentialBackoffFactor;

  public final scala.concurrent.ExecutionContext akka$pattern$CircuitBreaker$$executor;

  private volatile akka.pattern.CircuitBreaker$State _currentStateDoNotCallMeDirectly;

  private volatile scala.concurrent.duration.FiniteDuration _currentResetTimeoutDoNotCallMeDirectly;

  private final scala.concurrent.Future<scala.runtime.Nothing$> akka$pattern$CircuitBreaker$$timeoutFuture;

  private volatile akka.pattern.CircuitBreaker$Closed$ akka$pattern$CircuitBreaker$$Closed$module;

  private volatile akka.pattern.CircuitBreaker$HalfOpen$ akka$pattern$CircuitBreaker$$HalfOpen$module;

  private volatile akka.pattern.CircuitBreaker$Open$ akka$pattern$CircuitBreaker$$Open$module;

  public static akka.pattern.CircuitBreaker create(akka.actor.Scheduler, int, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #16                 // Field akka/pattern/CircuitBreaker$.MODULE$:Lakka/pattern/CircuitBreaker$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #18                 // Method akka/pattern/CircuitBreaker$.create:(Lakka/actor/Scheduler;ILscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;)Lakka/pattern/CircuitBreaker;
      10: areturn

  public static akka.pattern.CircuitBreaker apply(akka.actor.Scheduler, int, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #16                 // Field akka/pattern/CircuitBreaker$.MODULE$:Lakka/pattern/CircuitBreaker$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #21                 // Method akka/pattern/CircuitBreaker$.apply:(Lakka/actor/Scheduler;ILscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;)Lakka/pattern/CircuitBreaker;
      10: areturn

  private akka.pattern.CircuitBreaker$Closed$ akka$pattern$CircuitBreaker$$Closed$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #49                 // Field akka$pattern$CircuitBreaker$$Closed$module:Lakka/pattern/CircuitBreaker$Closed$;
       8: ifnonnull     23
      11: aload_0
      12: new           #51                 // class akka/pattern/CircuitBreaker$Closed$
      15: dup
      16: aload_0
      17: invokespecial #55                 // Method akka/pattern/CircuitBreaker$Closed$."<init>":(Lakka/pattern/CircuitBreaker;)V
      20: putfield      #49                 // Field akka$pattern$CircuitBreaker$$Closed$module:Lakka/pattern/CircuitBreaker$Closed$;
      23: getstatic     #61                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #49                 // Field akka$pattern$CircuitBreaker$$Closed$module:Lakka/pattern/CircuitBreaker$Closed$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  private akka.pattern.CircuitBreaker$HalfOpen$ akka$pattern$CircuitBreaker$$HalfOpen$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #69                 // Field akka$pattern$CircuitBreaker$$HalfOpen$module:Lakka/pattern/CircuitBreaker$HalfOpen$;
       8: ifnonnull     23
      11: aload_0
      12: new           #71                 // class akka/pattern/CircuitBreaker$HalfOpen$
      15: dup
      16: aload_0
      17: invokespecial #72                 // Method akka/pattern/CircuitBreaker$HalfOpen$."<init>":(Lakka/pattern/CircuitBreaker;)V
      20: putfield      #69                 // Field akka$pattern$CircuitBreaker$$HalfOpen$module:Lakka/pattern/CircuitBreaker$HalfOpen$;
      23: getstatic     #61                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #69                 // Field akka$pattern$CircuitBreaker$$HalfOpen$module:Lakka/pattern/CircuitBreaker$HalfOpen$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  private akka.pattern.CircuitBreaker$Open$ akka$pattern$CircuitBreaker$$Open$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #76                 // Field akka$pattern$CircuitBreaker$$Open$module:Lakka/pattern/CircuitBreaker$Open$;
       8: ifnonnull     23
      11: aload_0
      12: new           #78                 // class akka/pattern/CircuitBreaker$Open$
      15: dup
      16: aload_0
      17: invokespecial #79                 // Method akka/pattern/CircuitBreaker$Open$."<init>":(Lakka/pattern/CircuitBreaker;)V
      20: putfield      #76                 // Field akka$pattern$CircuitBreaker$$Open$module:Lakka/pattern/CircuitBreaker$Open$;
      23: getstatic     #61                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #76                 // Field akka$pattern$CircuitBreaker$$Open$module:Lakka/pattern/CircuitBreaker$Open$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public akka.pattern.CircuitBreaker withExponentialBackoff(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/pattern/CircuitBreaker
       3: dup
       4: aload_0
       5: getfield      #83                 // Field akka$pattern$CircuitBreaker$$scheduler:Lakka/actor/Scheduler;
       8: aload_0
       9: getfield      #85                 // Field akka$pattern$CircuitBreaker$$maxFailures:I
      12: aload_0
      13: getfield      #87                 // Field akka$pattern$CircuitBreaker$$callTimeout:Lscala/concurrent/duration/FiniteDuration;
      16: aload_0
      17: getfield      #89                 // Field akka$pattern$CircuitBreaker$$resetTimeout:Lscala/concurrent/duration/FiniteDuration;
      20: aload_1
      21: ldc2_w        #90                 // double 2.0d
      24: aload_0
      25: getfield      #93                 // Field akka$pattern$CircuitBreaker$$executor:Lscala/concurrent/ExecutionContext;
      28: invokespecial #96                 // Method "<init>":(Lakka/actor/Scheduler;ILscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;DLscala/concurrent/ExecutionContext;)V
      31: areturn

  private boolean swapState(akka.pattern.CircuitBreaker$State, akka.pattern.CircuitBreaker$State);
    Code:
       0: getstatic     #105                // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #109                // Field akka/pattern/AbstractCircuitBreaker.stateOffset:J
       7: aload_1
       8: aload_2
       9: invokevirtual #115                // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  private akka.pattern.CircuitBreaker$State currentState();
    Code:
       0: getstatic     #105                // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #109                // Field akka/pattern/AbstractCircuitBreaker.stateOffset:J
       7: invokevirtual #123                // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      10: checkcast     #125                // class akka/pattern/CircuitBreaker$State
      13: areturn

  public boolean akka$pattern$CircuitBreaker$$swapResetTimeout(scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #105                // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #130                // Field akka/pattern/AbstractCircuitBreaker.resetTimeoutOffset:J
       7: aload_1
       8: aload_2
       9: invokevirtual #115                // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  public scala.concurrent.duration.FiniteDuration akka$pattern$CircuitBreaker$$currentResetTimeout();
    Code:
       0: getstatic     #105                // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #130                // Field akka/pattern/AbstractCircuitBreaker.resetTimeoutOffset:J
       7: invokevirtual #123                // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      10: checkcast     #136                // class scala/concurrent/duration/FiniteDuration
      13: areturn

  public <T> scala.concurrent.Future<T> withCircuitBreaker(scala.Function0<scala.concurrent.Future<T>>);
    Code:
       0: aload_0
       1: invokespecial #140                // Method currentState:()Lakka/pattern/CircuitBreaker$State;
       4: aload_1
       5: invokeinterface #143,  2          // InterfaceMethod akka/pattern/CircuitBreaker$State.invoke:(Lscala/Function0;)Lscala/concurrent/Future;
      10: areturn

  public <T> scala.concurrent.Future<T> callWithCircuitBreaker(java.util.concurrent.Callable<scala.concurrent.Future<T>>);
    Code:
       0: aload_0
       1: new           #149                // class akka/pattern/CircuitBreaker$$anonfun$callWithCircuitBreaker$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #152                // Method akka/pattern/CircuitBreaker$$anonfun$callWithCircuitBreaker$1."<init>":(Lakka/pattern/CircuitBreaker;Ljava/util/concurrent/Callable;)V
      10: invokevirtual #154                // Method withCircuitBreaker:(Lscala/Function0;)Lscala/concurrent/Future;
      13: areturn

  public <T> java.util.concurrent.CompletionStage<T> callWithCircuitBreakerCS(java.util.concurrent.Callable<java.util.concurrent.CompletionStage<T>>);
    Code:
       0: getstatic     #162                // Field scala/compat/java8/FutureConverters$.MODULE$:Lscala/compat/java8/FutureConverters$;
       3: aload_0
       4: new           #164                // class akka/pattern/CircuitBreaker$$anon$2
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #165                // Method akka/pattern/CircuitBreaker$$anon$2."<init>":(Lakka/pattern/CircuitBreaker;Ljava/util/concurrent/Callable;)V
      13: invokevirtual #167                // Method callWithCircuitBreaker:(Ljava/util/concurrent/Callable;)Lscala/concurrent/Future;
      16: invokevirtual #171                // Method scala/compat/java8/FutureConverters$.toJava:(Lscala/concurrent/Future;)Ljava/util/concurrent/CompletionStage;
      19: areturn

  public <T> T withSyncCircuitBreaker(scala.Function0<T>);
    Code:
       0: getstatic     #178                // Field scala/concurrent/Await$.MODULE$:Lscala/concurrent/Await$;
       3: aload_0
       4: new           #180                // class akka/pattern/CircuitBreaker$$anonfun$withSyncCircuitBreaker$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #183                // Method akka/pattern/CircuitBreaker$$anonfun$withSyncCircuitBreaker$1."<init>":(Lakka/pattern/CircuitBreaker;Lscala/Function0;)V
      13: invokevirtual #154                // Method withCircuitBreaker:(Lscala/Function0;)Lscala/concurrent/Future;
      16: aload_0
      17: getfield      #87                 // Field akka$pattern$CircuitBreaker$$callTimeout:Lscala/concurrent/duration/FiniteDuration;
      20: invokevirtual #187                // Method scala/concurrent/Await$.result:(Lscala/concurrent/Awaitable;Lscala/concurrent/duration/Duration;)Ljava/lang/Object;
      23: areturn

  public <T> T callWithSyncCircuitBreaker(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: new           #191                // class akka/pattern/CircuitBreaker$$anonfun$callWithSyncCircuitBreaker$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #192                // Method akka/pattern/CircuitBreaker$$anonfun$callWithSyncCircuitBreaker$1."<init>":(Lakka/pattern/CircuitBreaker;Ljava/util/concurrent/Callable;)V
      10: invokevirtual #194                // Method withSyncCircuitBreaker:(Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public void succeed();
    Code:
       0: aload_0
       1: invokespecial #140                // Method currentState:()Lakka/pattern/CircuitBreaker$State;
       4: invokeinterface #199,  1          // InterfaceMethod akka/pattern/CircuitBreaker$State.callSucceeds:()V
       9: return

  public void fail();
    Code:
       0: aload_0
       1: invokespecial #140                // Method currentState:()Lakka/pattern/CircuitBreaker$State;
       4: invokeinterface #203,  1          // InterfaceMethod akka/pattern/CircuitBreaker$State.callFails:()V
       9: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: invokespecial #140                // Method currentState:()Lakka/pattern/CircuitBreaker$State;
       4: aload_0
       5: invokevirtual #208                // Method akka$pattern$CircuitBreaker$$Closed:()Lakka/pattern/CircuitBreaker$Closed$;
       8: astore_1
       9: dup
      10: ifnonnull     21
      13: pop
      14: aload_1
      15: ifnull        28
      18: goto          32
      21: aload_1
      22: invokevirtual #214                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #140                // Method currentState:()Lakka/pattern/CircuitBreaker$State;
       4: aload_0
       5: invokevirtual #218                // Method akka$pattern$CircuitBreaker$$Open:()Lakka/pattern/CircuitBreaker$Open$;
       8: astore_1
       9: dup
      10: ifnonnull     21
      13: pop
      14: aload_1
      15: ifnull        28
      18: goto          32
      21: aload_1
      22: invokevirtual #214                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean isHalfOpen();
    Code:
       0: aload_0
       1: invokespecial #140                // Method currentState:()Lakka/pattern/CircuitBreaker$State;
       4: aload_0
       5: invokevirtual #222                // Method akka$pattern$CircuitBreaker$$HalfOpen:()Lakka/pattern/CircuitBreaker$HalfOpen$;
       8: astore_1
       9: dup
      10: ifnonnull     21
      13: pop
      14: aload_1
      15: ifnull        28
      18: goto          32
      21: aload_1
      22: invokevirtual #214                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public akka.pattern.CircuitBreaker onOpen(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: new           #226                // class akka/pattern/CircuitBreaker$$anon$3
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #227                // Method akka/pattern/CircuitBreaker$$anon$3."<init>":(Lakka/pattern/CircuitBreaker;Lscala/Function0;)V
      10: invokevirtual #230                // Method onOpen:(Ljava/lang/Runnable;)Lakka/pattern/CircuitBreaker;
      13: areturn

  public akka.pattern.CircuitBreaker onOpen(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #218                // Method akka$pattern$CircuitBreaker$$Open:()Lakka/pattern/CircuitBreaker$Open$;
       4: aload_1
       5: invokevirtual #235                // Method akka/pattern/CircuitBreaker$Open$.addListener:(Ljava/lang/Runnable;)V
       8: aload_0
       9: areturn

  public akka.pattern.CircuitBreaker onHalfOpen(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: new           #239                // class akka/pattern/CircuitBreaker$$anon$4
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #240                // Method akka/pattern/CircuitBreaker$$anon$4."<init>":(Lakka/pattern/CircuitBreaker;Lscala/Function0;)V
      10: invokevirtual #242                // Method onHalfOpen:(Ljava/lang/Runnable;)Lakka/pattern/CircuitBreaker;
      13: areturn

  public akka.pattern.CircuitBreaker onHalfOpen(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #222                // Method akka$pattern$CircuitBreaker$$HalfOpen:()Lakka/pattern/CircuitBreaker$HalfOpen$;
       4: aload_1
       5: invokevirtual #243                // Method akka/pattern/CircuitBreaker$HalfOpen$.addListener:(Ljava/lang/Runnable;)V
       8: aload_0
       9: areturn

  public akka.pattern.CircuitBreaker onClose(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: new           #246                // class akka/pattern/CircuitBreaker$$anon$5
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #247                // Method akka/pattern/CircuitBreaker$$anon$5."<init>":(Lakka/pattern/CircuitBreaker;Lscala/Function0;)V
      10: invokevirtual #249                // Method onClose:(Ljava/lang/Runnable;)Lakka/pattern/CircuitBreaker;
      13: areturn

  public akka.pattern.CircuitBreaker onClose(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #208                // Method akka$pattern$CircuitBreaker$$Closed:()Lakka/pattern/CircuitBreaker$Closed$;
       4: aload_1
       5: invokevirtual #250                // Method akka/pattern/CircuitBreaker$Closed$.addListener:(Ljava/lang/Runnable;)V
       8: aload_0
       9: areturn

  public int currentFailureCount();
    Code:
       0: aload_0
       1: invokevirtual #208                // Method akka$pattern$CircuitBreaker$$Closed:()Lakka/pattern/CircuitBreaker$Closed$;
       4: invokevirtual #255                // Method akka/pattern/CircuitBreaker$Closed$.get:()I
       7: ireturn

  private void transition(akka.pattern.CircuitBreaker$State, akka.pattern.CircuitBreaker$State);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #259                // Method swapState:(Lakka/pattern/CircuitBreaker$State;Lakka/pattern/CircuitBreaker$State;)Z
       6: ifeq          15
       9: aload_2
      10: invokeinterface #262,  1          // InterfaceMethod akka/pattern/CircuitBreaker$State.enter:()V
      15: return

  public void akka$pattern$CircuitBreaker$$tripBreaker(akka.pattern.CircuitBreaker$State);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #218                // Method akka$pattern$CircuitBreaker$$Open:()Lakka/pattern/CircuitBreaker$Open$;
       6: invokespecial #268                // Method transition:(Lakka/pattern/CircuitBreaker$State;Lakka/pattern/CircuitBreaker$State;)V
       9: return

  public void akka$pattern$CircuitBreaker$$resetBreaker();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #222                // Method akka$pattern$CircuitBreaker$$HalfOpen:()Lakka/pattern/CircuitBreaker$HalfOpen$;
       5: aload_0
       6: invokevirtual #208                // Method akka$pattern$CircuitBreaker$$Closed:()Lakka/pattern/CircuitBreaker$Closed$;
       9: invokespecial #268                // Method transition:(Lakka/pattern/CircuitBreaker$State;Lakka/pattern/CircuitBreaker$State;)V
      12: return

  public void akka$pattern$CircuitBreaker$$attemptReset();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #218                // Method akka$pattern$CircuitBreaker$$Open:()Lakka/pattern/CircuitBreaker$Open$;
       5: aload_0
       6: invokevirtual #222                // Method akka$pattern$CircuitBreaker$$HalfOpen:()Lakka/pattern/CircuitBreaker$HalfOpen$;
       9: invokespecial #268                // Method transition:(Lakka/pattern/CircuitBreaker$State;Lakka/pattern/CircuitBreaker$State;)V
      12: return

  public scala.concurrent.Future<scala.runtime.Nothing$> akka$pattern$CircuitBreaker$$timeoutFuture();
    Code:
       0: aload_0
       1: getfield      #273                // Field akka$pattern$CircuitBreaker$$timeoutFuture:Lscala/concurrent/Future;
       4: areturn

  public akka.pattern.CircuitBreaker$Closed$ akka$pattern$CircuitBreaker$$Closed();
    Code:
       0: aload_0
       1: getfield      #49                 // Field akka$pattern$CircuitBreaker$$Closed$module:Lakka/pattern/CircuitBreaker$Closed$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #275                // Method akka$pattern$CircuitBreaker$$Closed$lzycompute:()Lakka/pattern/CircuitBreaker$Closed$;
      11: goto          18
      14: aload_0
      15: getfield      #49                 // Field akka$pattern$CircuitBreaker$$Closed$module:Lakka/pattern/CircuitBreaker$Closed$;
      18: areturn

  public akka.pattern.CircuitBreaker$HalfOpen$ akka$pattern$CircuitBreaker$$HalfOpen();
    Code:
       0: aload_0
       1: getfield      #69                 // Field akka$pattern$CircuitBreaker$$HalfOpen$module:Lakka/pattern/CircuitBreaker$HalfOpen$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #277                // Method akka$pattern$CircuitBreaker$$HalfOpen$lzycompute:()Lakka/pattern/CircuitBreaker$HalfOpen$;
      11: goto          18
      14: aload_0
      15: getfield      #69                 // Field akka$pattern$CircuitBreaker$$HalfOpen$module:Lakka/pattern/CircuitBreaker$HalfOpen$;
      18: areturn

  public akka.pattern.CircuitBreaker$Open$ akka$pattern$CircuitBreaker$$Open();
    Code:
       0: aload_0
       1: getfield      #76                 // Field akka$pattern$CircuitBreaker$$Open$module:Lakka/pattern/CircuitBreaker$Open$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #279                // Method akka$pattern$CircuitBreaker$$Open$lzycompute:()Lakka/pattern/CircuitBreaker$Open$;
      11: goto          18
      14: aload_0
      15: getfield      #76                 // Field akka$pattern$CircuitBreaker$$Open$module:Lakka/pattern/CircuitBreaker$Open$;
      18: areturn

  public akka.pattern.CircuitBreaker(akka.actor.Scheduler, int, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, double, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field akka$pattern$CircuitBreaker$$scheduler:Lakka/actor/Scheduler;
       5: aload_0
       6: iload_2
       7: putfield      #85                 // Field akka$pattern$CircuitBreaker$$maxFailures:I
      10: aload_0
      11: aload_3
      12: putfield      #87                 // Field akka$pattern$CircuitBreaker$$callTimeout:Lscala/concurrent/duration/FiniteDuration;
      15: aload_0
      16: aload         4
      18: putfield      #89                 // Field akka$pattern$CircuitBreaker$$resetTimeout:Lscala/concurrent/duration/FiniteDuration;
      21: aload_0
      22: aload         5
      24: putfield      #281                // Field akka$pattern$CircuitBreaker$$maxResetTimeout:Lscala/concurrent/duration/FiniteDuration;
      27: aload_0
      28: dload         6
      30: putfield      #283                // Field akka$pattern$CircuitBreaker$$exponentialBackoffFactor:D
      33: aload_0
      34: aload         8
      36: putfield      #93                 // Field akka$pattern$CircuitBreaker$$executor:Lscala/concurrent/ExecutionContext;
      39: aload_0
      40: invokespecial #285                // Method akka/pattern/AbstractCircuitBreaker."<init>":()V
      43: getstatic     #290                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      46: dload         6
      48: dconst_1
      49: dcmpl
      50: iflt          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: new           #292                // class akka/pattern/CircuitBreaker$$anonfun$2
      61: dup
      62: aload_0
      63: invokespecial #293                // Method akka/pattern/CircuitBreaker$$anonfun$2."<init>":(Lakka/pattern/CircuitBreaker;)V
      66: invokevirtual #297                // Method scala/Predef$.require:(ZLscala/Function0;)V
      69: aload_0
      70: aload_0
      71: invokevirtual #208                // Method akka$pattern$CircuitBreaker$$Closed:()Lakka/pattern/CircuitBreaker$Closed$;
      74: putfield      #299                // Field _currentStateDoNotCallMeDirectly:Lakka/pattern/CircuitBreaker$State;
      77: aload_0
      78: aload         4
      80: putfield      #301                // Field _currentResetTimeoutDoNotCallMeDirectly:Lscala/concurrent/duration/FiniteDuration;
      83: aload_0
      84: getstatic     #306                // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      87: new           #308                // class akka/pattern/CircuitBreaker$$anon$1
      90: dup
      91: aload_0
      92: invokespecial #309                // Method akka/pattern/CircuitBreaker$$anon$1."<init>":(Lakka/pattern/CircuitBreaker;)V
      95: invokevirtual #313                // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
      98: putfield      #273                // Field akka$pattern$CircuitBreaker$$timeoutFuture:Lscala/concurrent/Future;
     101: return

  public akka.pattern.CircuitBreaker(scala.concurrent.ExecutionContext, akka.actor.Scheduler, int, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: aload         4
       5: aload         5
       7: new           #326                // class scala/concurrent/duration/package$DurationInt
      10: dup
      11: getstatic     #331                // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
      14: ldc_w         #332                // int 36500
      17: invokevirtual #336                // Method scala/concurrent/duration/package$.DurationInt:(I)I
      20: invokespecial #339                // Method scala/concurrent/duration/package$DurationInt."<init>":(I)V
      23: invokevirtual #342                // Method scala/concurrent/duration/package$DurationInt.days:()Lscala/concurrent/duration/FiniteDuration;
      26: dconst_1
      27: aload_1
      28: invokespecial #96                 // Method "<init>":(Lakka/actor/Scheduler;ILscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;DLscala/concurrent/ExecutionContext;)V
      31: return

  public akka.pattern.CircuitBreaker(akka.actor.Scheduler, int, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: new           #326                // class scala/concurrent/duration/package$DurationInt
       9: dup
      10: getstatic     #331                // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
      13: ldc_w         #332                // int 36500
      16: invokevirtual #336                // Method scala/concurrent/duration/package$.DurationInt:(I)I
      19: invokespecial #339                // Method scala/concurrent/duration/package$DurationInt."<init>":(I)V
      22: invokevirtual #342                // Method scala/concurrent/duration/package$DurationInt.days:()Lscala/concurrent/duration/FiniteDuration;
      25: dconst_1
      26: aload         5
      28: invokespecial #96                 // Method "<init>":(Lakka/actor/Scheduler;ILscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;DLscala/concurrent/ExecutionContext;)V
      31: return
}
