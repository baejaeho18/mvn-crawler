Compiled from "AskSupport.scala"
public final class akka.pattern.AskableActorSelection {
  private final akka.actor.ActorSelection actorSel;

  public static boolean equals$extension(akka.actor.ActorSelection, java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: invokevirtual #18                 // Method akka/pattern/AskableActorSelection$.equals$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;)Z
       8: ireturn

  public static int hashCode$extension(akka.actor.ActorSelection);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/pattern/AskableActorSelection$.hashCode$extension:(Lakka/actor/ActorSelection;)I
       7: ireturn

  public static scala.concurrent.Future<java.lang.Object> internalAsk$extension(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #26                 // Method akka/pattern/AskableActorSelection$.internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      10: areturn

  public static akka.actor.ActorRef $qmark$default$3$extension(akka.actor.ActorSelection, java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method akka/pattern/AskableActorSelection$.$qmark$default$3$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;)Lakka/actor/ActorRef;
       8: areturn

  public static scala.concurrent.Future<java.lang.Object> $qmark$extension1(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #33                 // Method akka/pattern/AskableActorSelection$.$qmark$extension1:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      10: areturn

  public static scala.concurrent.Future<java.lang.Object> $qmark$extension0(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #37                 // Method akka/pattern/AskableActorSelection$.$qmark$extension0:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;)Lscala/concurrent/Future;
       9: areturn

  public static akka.actor.ActorRef ask$default$3$extension(akka.actor.ActorSelection, java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: invokevirtual #40                 // Method akka/pattern/AskableActorSelection$.ask$default$3$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;)Lakka/actor/ActorRef;
       8: areturn

  public static scala.concurrent.Future<java.lang.Object> ask$extension1(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #43                 // Method akka/pattern/AskableActorSelection$.ask$extension1:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      10: areturn

  public static scala.concurrent.Future<java.lang.Object> ask$extension0(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #46                 // Method akka/pattern/AskableActorSelection$.ask$extension0:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;)Lscala/concurrent/Future;
       9: areturn

  public akka.actor.ActorSelection actorSel();
    Code:
       0: aload_0
       1: getfield      #51                 // Field actorSel:Lakka/actor/ActorSelection;
       4: areturn

  public scala.concurrent.Future<java.lang.Object> ask(java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: aload_2
       9: invokevirtual #46                 // Method akka/pattern/AskableActorSelection$.ask$extension0:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;)Lscala/concurrent/Future;
      12: areturn

  public scala.concurrent.Future<java.lang.Object> ask(java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #43                 // Method akka/pattern/AskableActorSelection$.ask$extension1:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      13: areturn

  public akka.actor.ActorRef ask$default$3(java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: invokevirtual #40                 // Method akka/pattern/AskableActorSelection$.ask$default$3$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;)Lakka/actor/ActorRef;
      11: areturn

  public scala.concurrent.Future<java.lang.Object> $qmark(java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: aload_2
       9: invokevirtual #37                 // Method akka/pattern/AskableActorSelection$.$qmark$extension0:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;)Lscala/concurrent/Future;
      12: areturn

  public scala.concurrent.Future<java.lang.Object> $qmark(java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #33                 // Method akka/pattern/AskableActorSelection$.$qmark$extension1:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      13: areturn

  public akka.actor.ActorRef $qmark$default$3(java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: invokevirtual #30                 // Method akka/pattern/AskableActorSelection$.$qmark$default$3$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;)Lakka/actor/ActorRef;
      11: areturn

  public scala.concurrent.Future<java.lang.Object> internalAsk(java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #26                 // Method akka/pattern/AskableActorSelection$.internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      13: areturn

  public int hashCode();
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: invokevirtual #22                 // Method akka/pattern/AskableActorSelection$.hashCode$extension:(Lakka/actor/ActorSelection;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: invokevirtual #57                 // Method actorSel:()Lakka/actor/ActorSelection;
       7: aload_1
       8: invokevirtual #18                 // Method akka/pattern/AskableActorSelection$.equals$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;)Z
      11: ireturn

  public akka.pattern.AskableActorSelection(akka.actor.ActorSelection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field actorSel:Lakka/actor/ActorSelection;
       5: aload_0
       6: invokespecial #79                 // Method java/lang/Object."<init>":()V
       9: return
}
