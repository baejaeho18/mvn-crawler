Compiled from "BackoffOptions.scala"
public final class akka.pattern.BackoffOptionsImpl$ extends scala.runtime.AbstractFunction8<akka.pattern.BackoffType, akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, java.lang.Object, scala.Option<akka.pattern.BackoffReset>, akka.actor.OneForOneStrategy, akka.pattern.BackoffOptionsImpl> implements scala.Serializable {
  public static final akka.pattern.BackoffOptionsImpl$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/pattern/BackoffOptionsImpl$
       3: invokespecial #15                 // Method "<init>":()V
       6: return

  public final java.lang.String toString();
    Code:
       0: ldc           #19                 // String BackoffOptionsImpl
       2: areturn

  public akka.pattern.BackoffOptionsImpl apply(akka.pattern.BackoffType, akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, double, scala.Option<akka.pattern.BackoffReset>, akka.actor.OneForOneStrategy);
    Code:
       0: new           #24                 // class akka/pattern/BackoffOptionsImpl
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: dload         6
      13: aload         8
      15: aload         9
      17: invokespecial #27                 // Method akka/pattern/BackoffOptionsImpl."<init>":(Lakka/pattern/BackoffType;Lakka/actor/Props;Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;DLscala/Option;Lakka/actor/OneForOneStrategy;)V
      20: areturn

  public scala.Option<scala.Tuple8<akka.pattern.BackoffType, akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, java.lang.Object, scala.Option<akka.pattern.BackoffReset>, akka.actor.OneForOneStrategy>> unapply(akka.pattern.BackoffOptionsImpl);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #49                 // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          59
      10: new           #51                 // class scala/Some
      13: dup
      14: new           #53                 // class scala/Tuple8
      17: dup
      18: aload_1
      19: invokevirtual #56                 // Method akka/pattern/BackoffOptionsImpl.backoffType:()Lakka/pattern/BackoffType;
      22: aload_1
      23: invokevirtual #59                 // Method akka/pattern/BackoffOptionsImpl.childProps:()Lakka/actor/Props;
      26: aload_1
      27: invokevirtual #61                 // Method akka/pattern/BackoffOptionsImpl.childName:()Ljava/lang/String;
      30: aload_1
      31: invokevirtual #64                 // Method akka/pattern/BackoffOptionsImpl.minBackoff:()Lscala/concurrent/duration/FiniteDuration;
      34: aload_1
      35: invokevirtual #66                 // Method akka/pattern/BackoffOptionsImpl.maxBackoff:()Lscala/concurrent/duration/FiniteDuration;
      38: aload_1
      39: invokevirtual #69                 // Method akka/pattern/BackoffOptionsImpl.randomFactor:()D
      42: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      45: aload_1
      46: invokevirtual #78                 // Method akka/pattern/BackoffOptionsImpl.reset:()Lscala/Option;
      49: aload_1
      50: invokevirtual #81                 // Method akka/pattern/BackoffOptionsImpl.supervisorStrategy:()Lakka/actor/OneForOneStrategy;
      53: invokespecial #84                 // Method scala/Tuple8."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      56: invokespecial #87                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      59: areturn

  public akka.pattern.BackoffType apply$default$1();
    Code:
       0: getstatic     #97                 // Field akka/pattern/RestartImpliesFailure$.MODULE$:Lakka/pattern/RestartImpliesFailure$;
       3: areturn

  public scala.Option<akka.pattern.BackoffReset> apply$default$7();
    Code:
       0: getstatic     #49                 // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public akka.actor.OneForOneStrategy apply$default$8();
    Code:
       0: new           #101                // class akka/actor/OneForOneStrategy
       3: dup
       4: getstatic     #106                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
       7: invokevirtual #109                // Method akka/actor/OneForOneStrategy$.apply$default$1:()I
      10: getstatic     #106                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      13: invokevirtual #113                // Method akka/actor/OneForOneStrategy$.apply$default$2:()Lscala/concurrent/duration/Duration;
      16: getstatic     #106                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      19: invokevirtual #117                // Method akka/actor/OneForOneStrategy$.apply$default$3:()Z
      22: getstatic     #122                // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
      25: invokevirtual #126                // Method akka/actor/SupervisorStrategy$.defaultStrategy:()Lakka/actor/SupervisorStrategy;
      28: invokevirtual #132                // Method akka/actor/SupervisorStrategy.decider:()Lscala/PartialFunction;
      31: invokespecial #135                // Method akka/actor/OneForOneStrategy."<init>":(ILscala/concurrent/duration/Duration;ZLscala/PartialFunction;)V
      34: areturn

  public akka.pattern.BackoffType $lessinit$greater$default$1();
    Code:
       0: getstatic     #97                 // Field akka/pattern/RestartImpliesFailure$.MODULE$:Lakka/pattern/RestartImpliesFailure$;
       3: areturn

  public scala.Option<akka.pattern.BackoffReset> $lessinit$greater$default$7();
    Code:
       0: getstatic     #49                 // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public akka.actor.OneForOneStrategy $lessinit$greater$default$8();
    Code:
       0: new           #101                // class akka/actor/OneForOneStrategy
       3: dup
       4: getstatic     #106                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
       7: invokevirtual #109                // Method akka/actor/OneForOneStrategy$.apply$default$1:()I
      10: getstatic     #106                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      13: invokevirtual #113                // Method akka/actor/OneForOneStrategy$.apply$default$2:()Lscala/concurrent/duration/Duration;
      16: getstatic     #106                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      19: invokevirtual #117                // Method akka/actor/OneForOneStrategy$.apply$default$3:()Z
      22: getstatic     #122                // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
      25: invokevirtual #126                // Method akka/actor/SupervisorStrategy$.defaultStrategy:()Lakka/actor/SupervisorStrategy;
      28: invokevirtual #132                // Method akka/actor/SupervisorStrategy.decider:()Lscala/PartialFunction;
      31: invokespecial #135                // Method akka/actor/OneForOneStrategy."<init>":(ILscala/concurrent/duration/Duration;ZLscala/PartialFunction;)V
      34: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #142                // Field MODULE$:Lakka/pattern/BackoffOptionsImpl$;
       3: areturn

  public java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #145                // class akka/pattern/BackoffType
       5: aload_2
       6: checkcast     #147                // class akka/actor/Props
       9: aload_3
      10: checkcast     #149                // class java/lang/String
      13: aload         4
      15: checkcast     #151                // class scala/concurrent/duration/FiniteDuration
      18: aload         5
      20: checkcast     #151                // class scala/concurrent/duration/FiniteDuration
      23: aload         6
      25: invokestatic  #155                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
      28: aload         7
      30: checkcast     #91                 // class scala/Option
      33: aload         8
      35: checkcast     #101                // class akka/actor/OneForOneStrategy
      38: invokevirtual #157                // Method apply:(Lakka/pattern/BackoffType;Lakka/actor/Props;Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;DLscala/Option;Lakka/actor/OneForOneStrategy;)Lakka/pattern/BackoffOptionsImpl;
      41: areturn

  private akka.pattern.BackoffOptionsImpl$();
    Code:
       0: aload_0
       1: invokespecial #167                // Method scala/runtime/AbstractFunction8."<init>":()V
       4: aload_0
       5: putstatic     #142                // Field MODULE$:Lakka/pattern/BackoffOptionsImpl$;
       8: return
}
