Compiled from "PromiseRef.scala"
public class akka.pattern.PromiseRefImpl<T> implements akka.pattern.PromiseRef<T>, akka.pattern.FutureRef<T> {
  private final akka.actor.ActorRef ref;

  private final scala.concurrent.Promise<T> promise;

  public final scala.concurrent.Future<T> future();
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method akka/pattern/PromiseRef$class.future:(Lakka/pattern/PromiseRef;)Lscala/concurrent/Future;
       4: areturn

  public akka.actor.ActorRef ref();
    Code:
       0: aload_0
       1: getfield      #30                 // Field ref:Lakka/actor/ActorRef;
       4: areturn

  public scala.concurrent.Promise<T> promise();
    Code:
       0: aload_0
       1: getfield      #33                 // Field promise:Lscala/concurrent/Promise;
       4: areturn

  public akka.pattern.FutureRef<T> toFutureRef();
    Code:
       0: aload_0
       1: areturn

  public akka.pattern.PromiseRefImpl(akka.actor.ActorRef, scala.concurrent.Promise<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field ref:Lakka/actor/ActorRef;
       5: aload_0
       6: aload_2
       7: putfield      #33                 // Field promise:Lscala/concurrent/Promise;
      10: aload_0
      11: invokespecial #40                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #44                 // Method akka/pattern/PromiseRef$class.$init$:(Lakka/pattern/PromiseRef;)V
      18: return
}
