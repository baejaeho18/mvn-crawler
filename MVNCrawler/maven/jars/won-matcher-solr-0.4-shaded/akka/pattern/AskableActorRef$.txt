Compiled from "AskSupport.scala"
public final class akka.pattern.AskableActorRef$ {
  public static final akka.pattern.AskableActorRef$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/pattern/AskableActorRef$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public scala.concurrent.Future<java.lang.Object> ask$extension(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field akka/pattern/package$.MODULE$:Lakka/pattern/package$;
       4: aload_1
       5: invokevirtual #23                 // Method akka/pattern/package$.ask:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
       8: aload_2
       9: aload_3
      10: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
      13: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      16: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      19: areturn

  public scala.concurrent.Future<java.lang.Object> $qmark$extension(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field akka/pattern/package$.MODULE$:Lakka/pattern/package$;
       4: aload_1
       5: invokevirtual #23                 // Method akka/pattern/package$.ask:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
       8: aload_2
       9: aload_3
      10: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
      13: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      16: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      19: areturn

  public final scala.concurrent.Future<java.lang.Object> ask$extension0(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
       7: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      10: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      13: areturn

  public final scala.concurrent.Future<java.lang.Object> ask$extension1(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
       9: areturn

  public final akka.actor.ActorRef ask$default$3$extension(akka.actor.ActorRef, java.lang.Object);
    Code:
       0: getstatic     #55                 // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       3: invokevirtual #56                 // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
       6: areturn

  public final scala.concurrent.Future<java.lang.Object> $qmark$extension0(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
       7: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      10: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      13: areturn

  public final scala.concurrent.Future<java.lang.Object> $qmark$extension1(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
       9: areturn

  public final akka.actor.ActorRef $qmark$default$3$extension(akka.actor.ActorRef, java.lang.Object);
    Code:
       0: getstatic     #55                 // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       3: invokevirtual #56                 // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
       6: areturn

  public final scala.concurrent.Future<java.lang.Object> internalAsk$extension(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: iconst_0
       1: istore        5
       3: aconst_null
       4: astore        6
       6: aload_1
       7: astore        7
       9: aload         7
      11: instanceof    #61                 // class akka/actor/InternalActorRef
      14: ifeq          159
      17: iconst_1
      18: istore        5
      20: aload         7
      22: checkcast     #61                 // class akka/actor/InternalActorRef
      25: astore        6
      27: aload         6
      29: invokevirtual #65                 // Method akka/actor/InternalActorRef.isTerminated:()Z
      32: ifeq          159
      35: getstatic     #70                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      38: aload_1
      39: invokevirtual #74                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      42: astore        9
      44: aload_2
      45: astore        10
      47: aload         9
      49: aload         10
      51: invokeinterface #80,  2           // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      56: astore        11
      58: aload         9
      60: aload         10
      62: aload         11
      64: invokeinterface #84,  3           // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      69: getstatic     #89                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      72: new           #91                 // class akka/pattern/AskTimeoutException
      75: dup
      76: new           #93                 // class scala/StringContext
      79: dup
      80: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      83: iconst_4
      84: anewarray     #100                // class java/lang/String
      87: dup
      88: iconst_0
      89: ldc           #102                // String Recipient[
      91: aastore
      92: dup
      93: iconst_1
      94: ldc           #104                // String ] had already been terminated. Sender[
      96: aastore
      97: dup
      98: iconst_2
      99: ldc           #106                // String ] sent the message of type \"
     101: aastore
     102: dup
     103: iconst_3
     104: ldc           #108                // String \".
     106: aastore
     107: checkcast     #110                // class "[Ljava/lang/Object;"
     110: invokevirtual #114                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     113: invokespecial #117                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     116: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     119: iconst_3
     120: anewarray     #4                  // class java/lang/Object
     123: dup
     124: iconst_0
     125: aload_1
     126: aastore
     127: dup
     128: iconst_1
     129: aload         4
     131: aastore
     132: dup
     133: iconst_2
     134: aload_2
     135: invokevirtual #121                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     138: invokevirtual #127                // Method java/lang/Class.getName:()Ljava/lang/String;
     141: aastore
     142: invokevirtual #131                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     145: invokevirtual #135                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     148: invokespecial #138                // Method akka/pattern/AskTimeoutException."<init>":(Ljava/lang/String;)V
     151: invokevirtual #142                // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
     154: astore        8
     156: goto          397
     159: iload         5
     161: ifeq          310
     164: aload_3
     165: invokevirtual #148                // Method akka/util/Timeout.duration:()Lscala/concurrent/duration/FiniteDuration;
     168: invokevirtual #154                // Method scala/concurrent/duration/FiniteDuration.length:()J
     171: lconst_0
     172: lcmp
     173: ifgt          264
     176: getstatic     #89                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     179: new           #156                // class java/lang/IllegalArgumentException
     182: dup
     183: new           #93                 // class scala/StringContext
     186: dup
     187: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     190: iconst_4
     191: anewarray     #100                // class java/lang/String
     194: dup
     195: iconst_0
     196: ldc           #158                // String Timeout length must be positive, question not sent to [
     198: aastore
     199: dup
     200: iconst_1
     201: ldc           #160                // String ]. Sender[
     203: aastore
     204: dup
     205: iconst_2
     206: ldc           #106                // String ] sent the message of type \"
     208: aastore
     209: dup
     210: iconst_3
     211: ldc           #108                // String \".
     213: aastore
     214: checkcast     #110                // class "[Ljava/lang/Object;"
     217: invokevirtual #114                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     220: invokespecial #117                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     223: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     226: iconst_3
     227: anewarray     #4                  // class java/lang/Object
     230: dup
     231: iconst_0
     232: aload_1
     233: aastore
     234: dup
     235: iconst_1
     236: aload         4
     238: aastore
     239: dup
     240: iconst_2
     241: aload_2
     242: invokevirtual #121                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     245: invokevirtual #127                // Method java/lang/Class.getName:()Ljava/lang/String;
     248: aastore
     249: invokevirtual #131                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     252: invokevirtual #135                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     255: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     258: invokevirtual #142                // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
     261: goto          305
     264: getstatic     #166                // Field akka/pattern/PromiseActorRef$.MODULE$:Lakka/pattern/PromiseActorRef$;
     267: aload         6
     269: invokevirtual #170                // Method akka/actor/InternalActorRef.provider:()Lakka/actor/ActorRefProvider;
     272: aload_3
     273: aload_1
     274: aload_2
     275: invokevirtual #121                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     278: invokevirtual #127                // Method java/lang/Class.getName:()Ljava/lang/String;
     281: aload         4
     283: invokevirtual #174                // Method akka/pattern/PromiseActorRef$.apply:(Lakka/actor/ActorRefProvider;Lakka/util/Timeout;Ljava/lang/Object;Ljava/lang/String;Lakka/actor/ActorRef;)Lakka/pattern/PromiseActorRef;
     286: astore        12
     288: aload_1
     289: aload_2
     290: aload         12
     292: invokevirtual #179                // Method akka/actor/ActorRef.tell:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     295: aload         12
     297: invokevirtual #185                // Method akka/pattern/PromiseActorRef.result:()Lscala/concurrent/Promise;
     300: invokeinterface #191,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
     305: astore        8
     307: goto          397
     310: getstatic     #89                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     313: new           #156                // class java/lang/IllegalArgumentException
     316: dup
     317: new           #93                 // class scala/StringContext
     320: dup
     321: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     324: iconst_4
     325: anewarray     #100                // class java/lang/String
     328: dup
     329: iconst_0
     330: ldc           #193                // String Unsupported recipient ActorRef type, question not sent to [
     332: aastore
     333: dup
     334: iconst_1
     335: ldc           #160                // String ]. Sender[
     337: aastore
     338: dup
     339: iconst_2
     340: ldc           #106                // String ] sent the message of type \"
     342: aastore
     343: dup
     344: iconst_3
     345: ldc           #108                // String \".
     347: aastore
     348: checkcast     #110                // class "[Ljava/lang/Object;"
     351: invokevirtual #114                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     354: invokespecial #117                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     357: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     360: iconst_3
     361: anewarray     #4                  // class java/lang/Object
     364: dup
     365: iconst_0
     366: aload_1
     367: aastore
     368: dup
     369: iconst_1
     370: aload         4
     372: aastore
     373: dup
     374: iconst_2
     375: aload_2
     376: invokevirtual #121                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     379: invokevirtual #127                // Method java/lang/Class.getName:()Ljava/lang/String;
     382: aastore
     383: invokevirtual #131                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     386: invokevirtual #135                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     389: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     392: invokevirtual #142                // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
     395: astore        8
     397: aload         8
     399: areturn

  public final int hashCode$extension(akka.actor.ActorRef);
    Code:
       0: aload_1
       1: invokevirtual #207                // Method akka/actor/ActorRef.hashCode:()I
       4: ireturn

  public final boolean equals$extension(akka.actor.ActorRef, java.lang.Object);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #211                // class akka/pattern/AskableActorRef
       6: ifeq          15
       9: iconst_1
      10: istore        4
      12: goto          18
      15: iconst_0
      16: istore        4
      18: iload         4
      20: ifeq          78
      23: aload_2
      24: ifnonnull     31
      27: aconst_null
      28: goto          38
      31: aload_2
      32: checkcast     #211                // class akka/pattern/AskableActorRef
      35: invokevirtual #213                // Method akka/pattern/AskableActorRef.actorRef:()Lakka/actor/ActorRef;
      38: astore        5
      40: aload_1
      41: aload         5
      43: astore        6
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         6
      52: ifnull        66
      55: goto          70
      58: aload         6
      60: invokevirtual #217                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn

  private akka.pattern.AskableActorRef$();
    Code:
       0: aload_0
       1: invokespecial #219                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #221                // Field MODULE$:Lakka/pattern/AskableActorRef$;
       8: return
}
