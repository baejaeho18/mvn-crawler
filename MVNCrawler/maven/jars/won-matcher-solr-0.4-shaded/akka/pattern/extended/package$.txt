Compiled from "package.scala"
public final class akka.pattern.extended.package$ implements akka.pattern.ExplicitAskSupport {
  public static final akka.pattern.extended.package$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/pattern/extended/package$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public akka.actor.ActorRef ask(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method akka/pattern/ExplicitAskSupport$class.ask:(Lakka/pattern/ExplicitAskSupport;Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
       5: areturn

  public scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorRef, scala.Function1<akka.actor.ActorRef, java.lang.Object>, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #28                 // Method akka/pattern/ExplicitAskSupport$class.ask:(Lakka/pattern/ExplicitAskSupport;Lakka/actor/ActorRef;Lscala/Function1;Lakka/util/Timeout;)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorRef, scala.Function1<akka.actor.ActorRef, java.lang.Object>, akka.actor.ActorRef, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #36                 // Method akka/pattern/ExplicitAskSupport$class.ask:(Lakka/pattern/ExplicitAskSupport;Lakka/actor/ActorRef;Lscala/Function1;Lakka/actor/ActorRef;Lakka/util/Timeout;)Lscala/concurrent/Future;
       9: areturn

  public akka.actor.ActorSelection ask(akka.actor.ActorSelection);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method akka/pattern/ExplicitAskSupport$class.ask:(Lakka/pattern/ExplicitAskSupport;Lakka/actor/ActorSelection;)Lakka/actor/ActorSelection;
       5: areturn

  public scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorSelection, scala.Function1<akka.actor.ActorRef, java.lang.Object>, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #47                 // Method akka/pattern/ExplicitAskSupport$class.ask:(Lakka/pattern/ExplicitAskSupport;Lakka/actor/ActorSelection;Lscala/Function1;Lakka/util/Timeout;)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorSelection, scala.Function1<akka.actor.ActorRef, java.lang.Object>, akka.actor.ActorRef, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #51                 // Method akka/pattern/ExplicitAskSupport$class.ask:(Lakka/pattern/ExplicitAskSupport;Lakka/actor/ActorSelection;Lscala/Function1;Lakka/actor/ActorRef;Lakka/util/Timeout;)Lscala/concurrent/Future;
       9: areturn

  private akka.pattern.extended.package$();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #54                 // Field MODULE$:Lakka/pattern/extended/package$;
       8: aload_0
       9: invokestatic  #58                 // Method akka/pattern/ExplicitAskSupport$class.$init$:(Lakka/pattern/ExplicitAskSupport;)V
      12: return
}
