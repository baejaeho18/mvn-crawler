Compiled from "AskSupport.scala"
public abstract class akka.pattern.AskSupport$class {
  public static akka.actor.ActorRef ask(akka.pattern.AskSupport, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: areturn

  public static scala.concurrent.Future ask(akka.pattern.AskSupport, akka.actor.ActorRef, java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #18                 // Field akka/pattern/AskableActorRef$.MODULE$:Lakka/pattern/AskableActorRef$;
       3: aload_0
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod akka/pattern/AskSupport.ask:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
      10: aload_2
      11: aload_3
      12: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
      15: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      18: invokevirtual #36                 // Method akka/pattern/AskableActorRef$.internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      21: areturn

  public static scala.concurrent.Future ask(akka.pattern.AskSupport, akka.actor.ActorRef, java.lang.Object, akka.actor.ActorRef, akka.util.Timeout);
    Code:
       0: getstatic     #18                 // Field akka/pattern/AskableActorRef$.MODULE$:Lakka/pattern/AskableActorRef$;
       3: aload_0
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod akka/pattern/AskSupport.ask:(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
      10: aload_2
      11: aload         4
      13: aload_3
      14: invokevirtual #36                 // Method akka/pattern/AskableActorRef$.internalAsk$extension:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      17: areturn

  public static akka.actor.ActorSelection ask(akka.pattern.AskSupport, akka.actor.ActorSelection);
    Code:
       0: aload_1
       1: areturn

  public static scala.concurrent.Future ask(akka.pattern.AskSupport, akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #51                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: invokeinterface #54,  2           // InterfaceMethod akka/pattern/AskSupport.ask:(Lakka/actor/ActorSelection;)Lakka/actor/ActorSelection;
      10: aload_2
      11: aload_3
      12: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
      15: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      18: invokevirtual #57                 // Method akka/pattern/AskableActorSelection$.internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      21: areturn

  public static scala.concurrent.Future ask(akka.pattern.AskSupport, akka.actor.ActorSelection, java.lang.Object, akka.actor.ActorRef, akka.util.Timeout);
    Code:
       0: getstatic     #51                 // Field akka/pattern/AskableActorSelection$.MODULE$:Lakka/pattern/AskableActorSelection$;
       3: aload_0
       4: aload_1
       5: invokeinterface #54,  2           // InterfaceMethod akka/pattern/AskSupport.ask:(Lakka/actor/ActorSelection;)Lakka/actor/ActorSelection;
      10: aload_2
      11: aload         4
      13: aload_3
      14: invokevirtual #57                 // Method akka/pattern/AskableActorSelection$.internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      17: areturn

  public static void $init$(akka.pattern.AskSupport);
    Code:
       0: return
}
