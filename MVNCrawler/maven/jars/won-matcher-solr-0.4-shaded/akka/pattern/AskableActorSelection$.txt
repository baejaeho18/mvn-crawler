Compiled from "AskSupport.scala"
public final class akka.pattern.AskableActorSelection$ {
  public static final akka.pattern.AskableActorSelection$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/pattern/AskableActorSelection$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public scala.concurrent.Future<java.lang.Object> ask$extension(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field akka/pattern/package$.MODULE$:Lakka/pattern/package$;
       4: aload_1
       5: invokevirtual #23                 // Method akka/pattern/package$.ask:(Lakka/actor/ActorSelection;)Lakka/actor/ActorSelection;
       8: aload_2
       9: aload_3
      10: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
      13: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      16: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      19: areturn

  public scala.concurrent.Future<java.lang.Object> $qmark$extension(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field akka/pattern/package$.MODULE$:Lakka/pattern/package$;
       4: aload_1
       5: invokevirtual #23                 // Method akka/pattern/package$.ask:(Lakka/actor/ActorSelection;)Lakka/actor/ActorSelection;
       8: aload_2
       9: aload_3
      10: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
      13: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      16: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      19: areturn

  public final scala.concurrent.Future<java.lang.Object> ask$extension0(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
       7: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      10: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      13: areturn

  public final scala.concurrent.Future<java.lang.Object> ask$extension1(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
       9: areturn

  public final akka.actor.ActorRef ask$default$3$extension(akka.actor.ActorSelection, java.lang.Object);
    Code:
       0: getstatic     #56                 // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       3: invokevirtual #57                 // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
       6: areturn

  public final scala.concurrent.Future<java.lang.Object> $qmark$extension0(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #28                 // Field akka/actor/ActorRef$.MODULE$:Lakka/actor/ActorRef$;
       7: invokevirtual #32                 // Method akka/actor/ActorRef$.noSender:()Lakka/actor/ActorRef;
      10: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
      13: areturn

  public final scala.concurrent.Future<java.lang.Object> $qmark$extension1(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #36                 // Method internalAsk$extension:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;Lakka/actor/ActorRef;)Lscala/concurrent/Future;
       9: areturn

  public final akka.actor.ActorRef $qmark$default$3$extension(akka.actor.ActorSelection, java.lang.Object);
    Code:
       0: getstatic     #56                 // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       3: invokevirtual #57                 // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
       6: areturn

  public final scala.concurrent.Future<java.lang.Object> internalAsk$extension(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method akka/actor/ActorSelection.anchor:()Lakka/actor/ActorRef;
       4: astore        5
       6: aload         5
       8: instanceof    #67                 // class akka/actor/InternalActorRef
      11: ifeq          167
      14: aload         5
      16: checkcast     #67                 // class akka/actor/InternalActorRef
      19: astore        6
      21: aload_3
      22: invokevirtual #73                 // Method akka/util/Timeout.duration:()Lscala/concurrent/duration/FiniteDuration;
      25: invokevirtual #79                 // Method scala/concurrent/duration/FiniteDuration.length:()J
      28: lconst_0
      29: lcmp
      30: ifgt          121
      33: getstatic     #84                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      36: new           #86                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #88                 // class scala/StringContext
      43: dup
      44: getstatic     #93                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      47: iconst_4
      48: anewarray     #95                 // class java/lang/String
      51: dup
      52: iconst_0
      53: ldc           #97                 // String Timeout length must be positive, question not sent to [
      55: aastore
      56: dup
      57: iconst_1
      58: ldc           #99                 // String ]. Sender[
      60: aastore
      61: dup
      62: iconst_2
      63: ldc           #101                // String ] sent the message of type \"
      65: aastore
      66: dup
      67: iconst_3
      68: ldc           #103                // String \".
      70: aastore
      71: checkcast     #105                // class "[Ljava/lang/Object;"
      74: invokevirtual #109                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      77: invokespecial #112                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      80: getstatic     #93                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      83: iconst_3
      84: anewarray     #4                  // class java/lang/Object
      87: dup
      88: iconst_0
      89: aload_1
      90: aastore
      91: dup
      92: iconst_1
      93: aload         4
      95: aastore
      96: dup
      97: iconst_2
      98: aload_2
      99: invokevirtual #116                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     102: invokevirtual #122                // Method java/lang/Class.getName:()Ljava/lang/String;
     105: aastore
     106: invokevirtual #126                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     109: invokevirtual #130                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     112: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     115: invokevirtual #137                // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
     118: goto          162
     121: getstatic     #142                // Field akka/pattern/PromiseActorRef$.MODULE$:Lakka/pattern/PromiseActorRef$;
     124: aload         6
     126: invokevirtual #146                // Method akka/actor/InternalActorRef.provider:()Lakka/actor/ActorRefProvider;
     129: aload_3
     130: aload_1
     131: aload_2
     132: invokevirtual #116                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     135: invokevirtual #122                // Method java/lang/Class.getName:()Ljava/lang/String;
     138: aload         4
     140: invokevirtual #150                // Method akka/pattern/PromiseActorRef$.apply:(Lakka/actor/ActorRefProvider;Lakka/util/Timeout;Ljava/lang/Object;Ljava/lang/String;Lakka/actor/ActorRef;)Lakka/pattern/PromiseActorRef;
     143: astore        8
     145: aload_1
     146: aload_2
     147: aload         8
     149: invokevirtual #154                // Method akka/actor/ActorSelection.tell:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     152: aload         8
     154: invokevirtual #160                // Method akka/pattern/PromiseActorRef.result:()Lscala/concurrent/Promise;
     157: invokeinterface #166,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
     162: astore        7
     164: goto          254
     167: getstatic     #84                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     170: new           #86                 // class java/lang/IllegalArgumentException
     173: dup
     174: new           #88                 // class scala/StringContext
     177: dup
     178: getstatic     #93                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     181: iconst_4
     182: anewarray     #95                 // class java/lang/String
     185: dup
     186: iconst_0
     187: ldc           #168                // String Unsupported recipient ActorRef type, question not sent to [
     189: aastore
     190: dup
     191: iconst_1
     192: ldc           #99                 // String ]. Sender[
     194: aastore
     195: dup
     196: iconst_2
     197: ldc           #101                // String ] sent the message of type \"
     199: aastore
     200: dup
     201: iconst_3
     202: ldc           #103                // String \".
     204: aastore
     205: checkcast     #105                // class "[Ljava/lang/Object;"
     208: invokevirtual #109                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     211: invokespecial #112                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     214: getstatic     #93                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     217: iconst_3
     218: anewarray     #4                  // class java/lang/Object
     221: dup
     222: iconst_0
     223: aload_1
     224: aastore
     225: dup
     226: iconst_1
     227: aload         4
     229: aastore
     230: dup
     231: iconst_2
     232: aload_2
     233: invokevirtual #116                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     236: invokevirtual #122                // Method java/lang/Class.getName:()Ljava/lang/String;
     239: aastore
     240: invokevirtual #126                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     243: invokevirtual #130                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     246: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     249: invokevirtual #137                // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
     252: astore        7
     254: aload         7
     256: areturn

  public final int hashCode$extension(akka.actor.ActorSelection);
    Code:
       0: aload_1
       1: invokevirtual #180                // Method akka/actor/ActorSelection.hashCode:()I
       4: ireturn

  public final boolean equals$extension(akka.actor.ActorSelection, java.lang.Object);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #184                // class akka/pattern/AskableActorSelection
       6: ifeq          15
       9: iconst_1
      10: istore        4
      12: goto          18
      15: iconst_0
      16: istore        4
      18: iload         4
      20: ifeq          78
      23: aload_2
      24: ifnonnull     31
      27: aconst_null
      28: goto          38
      31: aload_2
      32: checkcast     #184                // class akka/pattern/AskableActorSelection
      35: invokevirtual #187                // Method akka/pattern/AskableActorSelection.actorSel:()Lakka/actor/ActorSelection;
      38: astore        5
      40: aload_1
      41: aload         5
      43: astore        6
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         6
      52: ifnull        66
      55: goto          70
      58: aload         6
      60: invokevirtual #191                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn

  private akka.pattern.AskableActorSelection$();
    Code:
       0: aload_0
       1: invokespecial #193                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #195                // Field MODULE$:Lakka/pattern/AskableActorSelection$;
       8: return
}
