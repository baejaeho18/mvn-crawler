Compiled from "PromiseRef.scala"
public final class akka.pattern.PromiseRef$ {
  public static final akka.pattern.PromiseRef$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/pattern/PromiseRef$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public <T> akka.pattern.PromiseRef<T> wrap(akka.actor.ActorRef, scala.concurrent.Promise<T>);
    Code:
       0: new           #16                 // class akka/pattern/PromiseRefImpl
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #19                 // Method akka/pattern/PromiseRefImpl."<init>":(Lakka/actor/ActorRef;Lscala/concurrent/Promise;)V
       9: areturn

  public akka.pattern.PromiseRef<java.lang.Object> apply(akka.actor.ActorSystem, akka.util.Timeout);
    Code:
       0: aload_1
       1: checkcast     #28                 // class akka/actor/ExtendedActorSystem
       4: invokevirtual #32                 // Method akka/actor/ExtendedActorSystem.provider:()Lakka/actor/ActorRefProvider;
       7: astore_3
       8: getstatic     #37                 // Field akka/pattern/AskPromiseRef$.MODULE$:Lakka/pattern/AskPromiseRef$;
      11: aload_3
      12: aload_2
      13: invokevirtual #40                 // Method akka/pattern/AskPromiseRef$.apply:(Lakka/actor/ActorRefProvider;Lakka/util/Timeout;)Lakka/pattern/AskPromiseRef;
      16: areturn

  public akka.pattern.PromiseRef<java.lang.Object> apply(akka.util.Timeout, akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #48                 // Method apply:(Lakka/actor/ActorSystem;Lakka/util/Timeout;)Lakka/pattern/PromiseRef;
       6: areturn

  private akka.pattern.PromiseRef$();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #51                 // Field MODULE$:Lakka/pattern/PromiseRef$;
       8: return
}
