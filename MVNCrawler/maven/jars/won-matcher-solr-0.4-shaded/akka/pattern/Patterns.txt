Compiled from "Patterns.scala"
public final class akka.pattern.Patterns {
  public static <T> scala.concurrent.Future<T> after(scala.concurrent.duration.FiniteDuration, akka.actor.Scheduler, scala.concurrent.ExecutionContext, scala.concurrent.Future<T>);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #18                 // Method akka/pattern/Patterns$.after:(Lscala/concurrent/duration/FiniteDuration;Lakka/actor/Scheduler;Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;)Lscala/concurrent/Future;
      10: areturn

  public static <T> scala.concurrent.Future<T> after(scala.concurrent.duration.FiniteDuration, akka.actor.Scheduler, scala.concurrent.ExecutionContext, java.util.concurrent.Callable<scala.concurrent.Future<T>>);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #21                 // Method akka/pattern/Patterns$.after:(Lscala/concurrent/duration/FiniteDuration;Lakka/actor/Scheduler;Lscala/concurrent/ExecutionContext;Ljava/util/concurrent/Callable;)Lscala/concurrent/Future;
      10: areturn

  public static scala.concurrent.Future<java.lang.Boolean> gracefulStop(akka.actor.ActorRef, scala.concurrent.duration.FiniteDuration, java.lang.Object);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #25                 // Method akka/pattern/Patterns$.gracefulStop:(Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;Ljava/lang/Object;)Lscala/concurrent/Future;
       9: areturn

  public static scala.concurrent.Future<java.lang.Boolean> gracefulStop(akka.actor.ActorRef, scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: invokevirtual #28                 // Method akka/pattern/Patterns$.gracefulStop:(Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
       8: areturn

  public static <T> akka.pattern.PipeToSupport$PipeableFuture<T> pipe(scala.concurrent.Future<T>, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method akka/pattern/Patterns$.pipe:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lakka/pattern/PipeToSupport$PipeableFuture;
       8: areturn

  public static scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorSelection, akka.japi.Function<akka.actor.ActorRef, java.lang.Object>, long);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: lload_2
       6: invokevirtual #36                 // Method akka/pattern/Patterns$.ask:(Lakka/actor/ActorSelection;Lakka/japi/Function;J)Lscala/concurrent/Future;
       9: areturn

  public static scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorSelection, java.lang.Object, long);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: lload_2
       6: invokevirtual #39                 // Method akka/pattern/Patterns$.ask:(Lakka/actor/ActorSelection;Ljava/lang/Object;J)Lscala/concurrent/Future;
       9: areturn

  public static scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorSelection, java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #42                 // Method akka/pattern/Patterns$.ask:(Lakka/actor/ActorSelection;Ljava/lang/Object;Lakka/util/Timeout;)Lscala/concurrent/Future;
       9: areturn

  public static scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorRef, akka.japi.Function<akka.actor.ActorRef, java.lang.Object>, long);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: lload_2
       6: invokevirtual #45                 // Method akka/pattern/Patterns$.ask:(Lakka/actor/ActorRef;Lakka/japi/Function;J)Lscala/concurrent/Future;
       9: areturn

  public static scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorRef, java.lang.Object, long);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: lload_2
       6: invokevirtual #48                 // Method akka/pattern/Patterns$.ask:(Lakka/actor/ActorRef;Ljava/lang/Object;J)Lscala/concurrent/Future;
       9: areturn

  public static scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorRef, akka.japi.Function<akka.actor.ActorRef, java.lang.Object>, akka.util.Timeout);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #51                 // Method akka/pattern/Patterns$.ask:(Lakka/actor/ActorRef;Lakka/japi/Function;Lakka/util/Timeout;)Lscala/concurrent/Future;
       9: areturn

  public static scala.concurrent.Future<java.lang.Object> ask(akka.actor.ActorRef, java.lang.Object, akka.util.Timeout);
    Code:
       0: getstatic     #16                 // Field akka/pattern/Patterns$.MODULE$:Lakka/pattern/Patterns$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #54                 // Method akka/pattern/Patterns$.ask:(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/util/Timeout;)Lscala/concurrent/Future;
       9: areturn
}
