Compiled from "AskSupport.scala"
public final class akka.pattern.PromiseActorRef$ implements scala.Serializable {
  public static final akka.pattern.PromiseActorRef$ MODULE$;

  private final scala.util.Failure<scala.runtime.Nothing$> akka$pattern$PromiseActorRef$$ActorStopResult;

  public static {};
    Code:
       0: new           #2                  // class akka/pattern/PromiseActorRef$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public scala.util.Failure<scala.runtime.Nothing$> akka$pattern$PromiseActorRef$$ActorStopResult();
    Code:
       0: aload_0
       1: getfield      #20                 // Field akka$pattern$PromiseActorRef$$ActorStopResult:Lscala/util/Failure;
       4: areturn

  public akka.pattern.PromiseActorRef apply(akka.actor.ActorRefProvider, akka.util.Timeout, java.lang.Object, java.lang.String, akka.actor.ActorRef);
    Code:
       0: getstatic     #28                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #31                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore        6
       8: aload_1
       9: invokeinterface #37,  1           // InterfaceMethod akka/actor/ActorRefProvider.guardian:()Lakka/actor/LocalActorRef;
      14: invokevirtual #43                 // Method akka/actor/LocalActorRef.underlying:()Lakka/actor/ActorCell;
      17: invokevirtual #49                 // Method akka/actor/ActorCell.system:()Lakka/actor/ActorSystemImpl;
      20: invokevirtual #55                 // Method akka/actor/ActorSystemImpl.scheduler:()Lakka/actor/Scheduler;
      23: astore        7
      25: new           #57                 // class akka/pattern/PromiseActorRef
      28: dup
      29: aload_1
      30: aload         6
      32: aload         4
      34: invokespecial #60                 // Method akka/pattern/PromiseActorRef."<init>":(Lakka/actor/ActorRefProvider;Lscala/concurrent/Promise;Ljava/lang/String;)V
      37: astore        8
      39: aload         8
      41: invokevirtual #64                 // Method akka/pattern/PromiseActorRef.internalCallingThreadExecutionContext:()Lscala/concurrent/ExecutionContext;
      44: astore        9
      46: aload         7
      48: aload_2
      49: invokevirtual #70                 // Method akka/util/Timeout.duration:()Lscala/concurrent/duration/FiniteDuration;
      52: new           #72                 // class akka/pattern/PromiseActorRef$$anonfun$1
      55: dup
      56: aload_2
      57: aload_3
      58: aload         5
      60: aload         6
      62: aload         8
      64: invokespecial #75                 // Method akka/pattern/PromiseActorRef$$anonfun$1."<init>":(Lakka/util/Timeout;Ljava/lang/Object;Lakka/actor/ActorRef;Lscala/concurrent/Promise;Lakka/pattern/PromiseActorRef;)V
      67: aload         9
      69: invokeinterface #81,  4           // InterfaceMethod akka/actor/Scheduler.scheduleOnce:(Lscala/concurrent/duration/FiniteDuration;Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lakka/actor/Cancellable;
      74: astore        10
      76: aload         6
      78: invokeinterface #87,  1           // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      83: new           #89                 // class akka/pattern/PromiseActorRef$$anonfun$apply$1
      86: dup
      87: aload         8
      89: aload         10
      91: invokespecial #92                 // Method akka/pattern/PromiseActorRef$$anonfun$apply$1."<init>":(Lakka/pattern/PromiseActorRef;Lakka/actor/Cancellable;)V
      94: aload         9
      96: invokeinterface #98,  3           // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
     101: aload         8
     103: areturn

  public akka.pattern.PromiseActorRef apply(akka.actor.ActorRefProvider, akka.util.Timeout, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: ldc           #120                // String unknown
       6: getstatic     #125                // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       9: invokevirtual #129                // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
      12: invokevirtual #131                // Method apply:(Lakka/actor/ActorRefProvider;Lakka/util/Timeout;Ljava/lang/Object;Ljava/lang/String;Lakka/actor/ActorRef;)Lakka/pattern/PromiseActorRef;
      15: areturn

  public akka.actor.ActorRef apply$default$5();
    Code:
       0: getstatic     #125                // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       3: invokevirtual #129                // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
       6: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #136                // Field MODULE$:Lakka/pattern/PromiseActorRef$;
       3: areturn

  private akka.pattern.PromiseActorRef$();
    Code:
       0: aload_0
       1: invokespecial #137                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #136                // Field MODULE$:Lakka/pattern/PromiseActorRef$;
       8: aload_0
       9: new           #139                // class scala/util/Failure
      12: dup
      13: new           #141                // class akka/actor/ActorKilledException
      16: dup
      17: ldc           #143                // String Stopped
      19: invokespecial #146                // Method akka/actor/ActorKilledException."<init>":(Ljava/lang/String;)V
      22: invokespecial #149                // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
      25: putfield      #20                 // Field akka$pattern$PromiseActorRef$$ActorStopResult:Lscala/util/Failure;
      28: return
}
