Compiled from "BackoffSupervisor.scala"
public final class akka.pattern.BackoffSupervisor$$anonfun$1 extends scala.runtime.AbstractPartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.pattern.BackoffSupervisor $outer;

  public final <A1 extends java.lang.Throwable, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_0
       3: getfield      #20                 // Field $outer:Lakka/pattern/BackoffSupervisor;
       6: invokevirtual #24                 // Method akka/pattern/BackoffSupervisor.akka$pattern$BackoffSupervisor$$super$supervisorStrategy:()Lakka/actor/SupervisorStrategy;
       9: invokevirtual #30                 // Method akka/actor/SupervisorStrategy.decider:()Lscala/PartialFunction;
      12: aload_3
      13: new           #32                 // class akka/pattern/BackoffSupervisor$$anonfun$1$$anonfun$2
      16: dup
      17: aload_0
      18: invokespecial #36                 // Method akka/pattern/BackoffSupervisor$$anonfun$1$$anonfun$2."<init>":(Lakka/pattern/BackoffSupervisor$$anonfun$1;)V
      21: invokeinterface #41,  3           // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      26: checkcast     #43                 // class akka/actor/SupervisorStrategy$Directive
      29: astore        5
      31: aload_0
      32: getfield      #20                 // Field $outer:Lakka/pattern/BackoffSupervisor;
      35: getfield      #47                 // Field akka/pattern/BackoffSupervisor.akka$pattern$BackoffSupervisor$$strategy:Lakka/actor/SupervisorStrategy;
      38: invokevirtual #30                 // Method akka/actor/SupervisorStrategy.decider:()Lscala/PartialFunction;
      41: aload_3
      42: new           #49                 // class akka/pattern/BackoffSupervisor$$anonfun$1$$anonfun$applyOrElse$1
      45: dup
      46: aload_0
      47: aload         5
      49: invokespecial #52                 // Method akka/pattern/BackoffSupervisor$$anonfun$1$$anonfun$applyOrElse$1."<init>":(Lakka/pattern/BackoffSupervisor$$anonfun$1;Lakka/actor/SupervisorStrategy$Directive;)V
      52: invokeinterface #41,  3           // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      57: astore        4
      59: aload         4
      61: areturn

  public final boolean isDefinedAt(java.lang.Throwable);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_1
       3: istore_3
       4: iload_3
       5: ireturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #65                 // class java/lang/Throwable
       5: invokevirtual #67                 // Method isDefinedAt:(Ljava/lang/Throwable;)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #65                 // class java/lang/Throwable
       5: aload_2
       6: invokevirtual #71                 // Method applyOrElse:(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public akka.pattern.BackoffSupervisor$$anonfun$1(akka.pattern.BackoffSupervisor);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #20                 // Field $outer:Lakka/pattern/BackoffSupervisor;
      11: aload_0
      12: invokespecial #75                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
      15: return
}
