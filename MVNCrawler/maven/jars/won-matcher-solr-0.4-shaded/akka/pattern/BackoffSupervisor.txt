Compiled from "BackoffSupervisor.scala"
public final class akka.pattern.BackoffSupervisor implements akka.actor.Actor,akka.pattern.HandleBackoff {
  private final akka.actor.Props childProps;

  private final java.lang.String childName;

  public final scala.concurrent.duration.FiniteDuration akka$pattern$BackoffSupervisor$$minBackoff;

  public final scala.concurrent.duration.FiniteDuration akka$pattern$BackoffSupervisor$$maxBackoff;

  private final akka.pattern.BackoffReset reset;

  public final double akka$pattern$BackoffSupervisor$$randomFactor;

  public final akka.actor.SupervisorStrategy akka$pattern$BackoffSupervisor$$strategy;

  private final akka.actor.SupervisorStrategy supervisorStrategy;

  private scala.Option<akka.actor.ActorRef> child;

  private int restartCount;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static akka.pattern.BackoffSupervisor$GetRestartCount$ getRestartCount();
    Code:
       0: getstatic     #20                 // Field akka/pattern/BackoffSupervisor$.MODULE$:Lakka/pattern/BackoffSupervisor$;
       3: invokevirtual #22                 // Method akka/pattern/BackoffSupervisor$.getRestartCount:()Lakka/pattern/BackoffSupervisor$GetRestartCount$;
       6: areturn

  public static akka.pattern.BackoffSupervisor$GetCurrentChild$ getCurrentChild();
    Code:
       0: getstatic     #20                 // Field akka/pattern/BackoffSupervisor$.MODULE$:Lakka/pattern/BackoffSupervisor$;
       3: invokevirtual #26                 // Method akka/pattern/BackoffSupervisor$.getCurrentChild:()Lakka/pattern/BackoffSupervisor$GetCurrentChild$;
       6: areturn

  public static akka.actor.Props props(akka.pattern.BackoffOptions);
    Code:
       0: getstatic     #20                 // Field akka/pattern/BackoffSupervisor$.MODULE$:Lakka/pattern/BackoffSupervisor$;
       3: aload_0
       4: invokevirtual #30                 // Method akka/pattern/BackoffSupervisor$.props:(Lakka/pattern/BackoffOptions;)Lakka/actor/Props;
       7: areturn

  public static akka.actor.Props propsWithSupervisorStrategy(akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, double, akka.actor.SupervisorStrategy);
    Code:
       0: getstatic     #20                 // Field akka/pattern/BackoffSupervisor$.MODULE$:Lakka/pattern/BackoffSupervisor$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: dload         4
       9: aload         6
      11: invokevirtual #34                 // Method akka/pattern/BackoffSupervisor$.propsWithSupervisorStrategy:(Lakka/actor/Props;Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;DLakka/actor/SupervisorStrategy;)Lakka/actor/Props;
      14: areturn

  public static akka.actor.Props props(akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, double);
    Code:
       0: getstatic     #20                 // Field akka/pattern/BackoffSupervisor$.MODULE$:Lakka/pattern/BackoffSupervisor$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: dload         4
       9: invokevirtual #37                 // Method akka/pattern/BackoffSupervisor$.props:(Lakka/actor/Props;Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;D)Lakka/actor/Props;
      12: areturn

  public scala.Option<akka.actor.ActorRef> child();
    Code:
       0: aload_0
       1: getfield      #63                 // Field child:Lscala/Option;
       4: areturn

  public void child_$eq(scala.Option<akka.actor.ActorRef>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field child:Lscala/Option;
       5: return

  public int restartCount();
    Code:
       0: aload_0
       1: getfield      #71                 // Field restartCount:I
       4: ireturn

  public void restartCount_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field restartCount:I
       5: return

  public void preStart();
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method akka/pattern/HandleBackoff$class.preStart:(Lakka/pattern/HandleBackoff;)V
       4: return

  public void startChild();
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method akka/pattern/HandleBackoff$class.startChild:(Lakka/pattern/HandleBackoff;)V
       4: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> handleBackoff();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method akka/pattern/HandleBackoff$class.handleBackoff:(Lakka/pattern/HandleBackoff;)Lscala/PartialFunction;
       4: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #91                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #94                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #104                // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #109                // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #117                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #120                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void postStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #138                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #141                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #149                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.actor.SupervisorStrategy akka$pattern$BackoffSupervisor$$super$supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #154                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public akka.actor.Props childProps();
    Code:
       0: aload_0
       1: getfield      #157                // Field childProps:Lakka/actor/Props;
       4: areturn

  public java.lang.String childName();
    Code:
       0: aload_0
       1: getfield      #160                // Field childName:Ljava/lang/String;
       4: areturn

  public akka.pattern.BackoffReset reset();
    Code:
       0: aload_0
       1: getfield      #163                // Field reset:Lakka/pattern/BackoffReset;
       4: areturn

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: getfield      #165                // Field supervisorStrategy:Lakka/actor/SupervisorStrategy;
       4: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> onTerminated();
    Code:
       0: new           #168                // class akka/pattern/BackoffSupervisor$$anonfun$onTerminated$1
       3: dup
       4: aload_0
       5: invokespecial #172                // Method akka/pattern/BackoffSupervisor$$anonfun$onTerminated$1."<init>":(Lakka/pattern/BackoffSupervisor;)V
       8: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: aload_0
       1: invokevirtual #174                // Method onTerminated:()Lscala/PartialFunction;
       4: aload_0
       5: invokevirtual #176                // Method handleBackoff:()Lscala/PartialFunction;
       8: invokeinterface #182,  2          // InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
      13: areturn

  public akka.pattern.BackoffSupervisor(akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, akka.pattern.BackoffReset, double, akka.actor.SupervisorStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field childProps:Lakka/actor/Props;
       5: aload_0
       6: aload_2
       7: putfield      #160                // Field childName:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #185                // Field akka$pattern$BackoffSupervisor$$minBackoff:Lscala/concurrent/duration/FiniteDuration;
      15: aload_0
      16: aload         4
      18: putfield      #187                // Field akka$pattern$BackoffSupervisor$$maxBackoff:Lscala/concurrent/duration/FiniteDuration;
      21: aload_0
      22: aload         5
      24: putfield      #163                // Field reset:Lakka/pattern/BackoffReset;
      27: aload_0
      28: dload         6
      30: putfield      #189                // Field akka$pattern$BackoffSupervisor$$randomFactor:D
      33: aload_0
      34: aload         8
      36: putfield      #191                // Field akka$pattern$BackoffSupervisor$$strategy:Lakka/actor/SupervisorStrategy;
      39: aload_0
      40: invokespecial #193                // Method java/lang/Object."<init>":()V
      43: aload_0
      44: invokestatic  #196                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      47: aload_0
      48: invokestatic  #198                // Method akka/pattern/HandleBackoff$class.$init$:(Lakka/pattern/HandleBackoff;)V
      51: aload_0
      52: aload         8
      54: astore        9
      56: aload         9
      58: instanceof    #200                // class akka/actor/OneForOneStrategy
      61: ifeq          106
      64: aload         9
      66: checkcast     #200                // class akka/actor/OneForOneStrategy
      69: astore        10
      71: new           #200                // class akka/actor/OneForOneStrategy
      74: dup
      75: aload         10
      77: invokevirtual #203                // Method akka/actor/OneForOneStrategy.maxNrOfRetries:()I
      80: aload         10
      82: invokevirtual #207                // Method akka/actor/OneForOneStrategy.withinTimeRange:()Lscala/concurrent/duration/Duration;
      85: aload         10
      87: invokevirtual #211                // Method akka/actor/OneForOneStrategy.loggingEnabled:()Z
      90: new           #213                // class akka/pattern/BackoffSupervisor$$anonfun$1
      93: dup
      94: aload_0
      95: invokespecial #214                // Method akka/pattern/BackoffSupervisor$$anonfun$1."<init>":(Lakka/pattern/BackoffSupervisor;)V
      98: invokespecial #217                // Method akka/actor/OneForOneStrategy."<init>":(ILscala/concurrent/duration/Duration;ZLscala/PartialFunction;)V
     101: astore        11
     103: goto          110
     106: aload         9
     108: astore        11
     110: aload         11
     112: putfield      #165                // Field supervisorStrategy:Lakka/actor/SupervisorStrategy;
     115: return

  public akka.pattern.BackoffSupervisor(akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, double, akka.actor.SupervisorStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: new           #234                // class akka/pattern/AutoReset
       9: dup
      10: aload_3
      11: invokespecial #237                // Method akka/pattern/AutoReset."<init>":(Lscala/concurrent/duration/FiniteDuration;)V
      14: dload         5
      16: aload         7
      18: invokespecial #239                // Method "<init>":(Lakka/actor/Props;Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/pattern/BackoffReset;DLakka/actor/SupervisorStrategy;)V
      21: return

  public akka.pattern.BackoffSupervisor(akka.actor.Props, java.lang.String, scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: dload         5
       8: getstatic     #245                // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
      11: invokevirtual #248                // Method akka/actor/SupervisorStrategy$.defaultStrategy:()Lakka/actor/SupervisorStrategy;
      14: invokespecial #250                // Method "<init>":(Lakka/actor/Props;Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;DLakka/actor/SupervisorStrategy;)V
      17: return
}
