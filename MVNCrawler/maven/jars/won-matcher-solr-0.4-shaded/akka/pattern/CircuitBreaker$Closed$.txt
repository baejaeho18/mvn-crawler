Compiled from "CircuitBreaker.scala"
public class akka.pattern.CircuitBreaker$Closed$ extends java.util.concurrent.atomic.AtomicInteger implements akka.pattern.CircuitBreaker$State {
  private final akka.pattern.CircuitBreaker $outer;

  private final java.util.concurrent.CopyOnWriteArrayList<java.lang.Runnable> akka$pattern$CircuitBreaker$State$$listeners;

  public java.util.concurrent.CopyOnWriteArrayList<java.lang.Runnable> akka$pattern$CircuitBreaker$State$$listeners();
    Code:
       0: aload_0
       1: getfield      #15                 // Field akka$pattern$CircuitBreaker$State$$listeners:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  public void akka$pattern$CircuitBreaker$State$_setter_$akka$pattern$CircuitBreaker$State$$listeners_$eq(java.util.concurrent.CopyOnWriteArrayList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field akka$pattern$CircuitBreaker$State$$listeners:Ljava/util/concurrent/CopyOnWriteArrayList;
       5: return

  public void addListener(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method akka/pattern/CircuitBreaker$State$class.addListener:(Lakka/pattern/CircuitBreaker$State;Ljava/lang/Runnable;)V
       5: return

  public void notifyTransitionListeners();
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method akka/pattern/CircuitBreaker$State$class.notifyTransitionListeners:(Lakka/pattern/CircuitBreaker$State;)V
       4: return

  public <T> scala.concurrent.Future<T> callThrough(scala.Function0<scala.concurrent.Future<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method akka/pattern/CircuitBreaker$State$class.callThrough:(Lakka/pattern/CircuitBreaker$State;Lscala/Function0;)Lscala/concurrent/Future;
       5: areturn

  public final void enter();
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method akka/pattern/CircuitBreaker$State$class.enter:(Lakka/pattern/CircuitBreaker$State;)V
       4: return

  public <T> scala.concurrent.Future<T> invoke(scala.Function0<scala.concurrent.Future<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method callThrough:(Lscala/Function0;)Lscala/concurrent/Future;
       5: areturn

  public void callSucceeds();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #52                 // Method set:(I)V
       5: return

  public void callFails();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method incrementAndGet:()I
       4: aload_0
       5: getfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
       8: getfield      #65                 // Field akka/pattern/CircuitBreaker.akka$pattern$CircuitBreaker$$maxFailures:I
      11: if_icmpne     28
      14: aload_0
      15: getfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
      18: aload_0
      19: getfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
      22: invokevirtual #69                 // Method akka/pattern/CircuitBreaker.akka$pattern$CircuitBreaker$$Closed:()Lakka/pattern/CircuitBreaker$Closed$;
      25: invokevirtual #72                 // Method akka/pattern/CircuitBreaker.akka$pattern$CircuitBreaker$$tripBreaker:(Lakka/pattern/CircuitBreaker$State;)V
      28: return

  public void _enter();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #52                 // Method set:(I)V
       5: aload_0
       6: getfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
       9: aload_0
      10: getfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
      13: invokevirtual #77                 // Method akka/pattern/CircuitBreaker.akka$pattern$CircuitBreaker$$currentResetTimeout:()Lscala/concurrent/duration/FiniteDuration;
      16: aload_0
      17: getfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
      20: getfield      #81                 // Field akka/pattern/CircuitBreaker.akka$pattern$CircuitBreaker$$resetTimeout:Lscala/concurrent/duration/FiniteDuration;
      23: invokevirtual #85                 // Method akka/pattern/CircuitBreaker.akka$pattern$CircuitBreaker$$swapResetTimeout:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;)Z
      26: pop
      27: return

  public java.lang.String toString();
    Code:
       0: new           #89                 // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #92                 // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: ldc           #94                 // String Closed with failure count =
       9: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      12: aload_0
      13: invokevirtual #101                // Method get:()I
      16: invokestatic  #107                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      19: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      22: invokevirtual #109                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public akka.pattern.CircuitBreaker akka$pattern$CircuitBreaker$State$$$outer();
    Code:
       0: aload_0
       1: getfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
       4: areturn

  public akka.pattern.CircuitBreaker$Closed$(akka.pattern.CircuitBreaker);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #59                 // Field $outer:Lakka/pattern/CircuitBreaker;
      11: aload_0
      12: invokespecial #113                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      15: aload_0
      16: invokestatic  #116                // Method akka/pattern/CircuitBreaker$State$class.$init$:(Lakka/pattern/CircuitBreaker$State;)V
      19: return
}
