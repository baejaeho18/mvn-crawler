Compiled from "ActorMaterializer.scala"
public final class akka.stream.ActorMaterializer$ {
  public static final akka.stream.ActorMaterializer$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/ActorMaterializer$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public akka.stream.ActorMaterializer apply(scala.Option<akka.stream.ActorMaterializerSettings>, scala.Option<java.lang.String>, akka.actor.ActorRefFactory);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #18                 // Method actorSystemOf:(Lakka/actor/ActorRefFactory;)Lakka/actor/ActorSystem;
       5: astore        4
       7: aload_1
       8: new           #20                 // class akka/stream/ActorMaterializer$$anonfun$1
      11: dup
      12: aload         4
      14: invokespecial #23                 // Method akka/stream/ActorMaterializer$$anonfun$1."<init>":(Lakka/actor/ActorSystem;)V
      17: invokevirtual #29                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      20: checkcast     #31                 // class akka/stream/ActorMaterializerSettings
      23: astore        5
      25: aload_0
      26: aload         5
      28: aload_2
      29: new           #33                 // class akka/stream/ActorMaterializer$$anonfun$apply$1
      32: dup
      33: invokespecial #34                 // Method akka/stream/ActorMaterializer$$anonfun$apply$1."<init>":()V
      36: invokevirtual #29                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      39: checkcast     #36                 // class java/lang/String
      42: aload_3
      43: invokevirtual #39                 // Method apply:(Lakka/stream/ActorMaterializerSettings;Ljava/lang/String;Lakka/actor/ActorRefFactory;)Lakka/stream/ActorMaterializer;
      46: areturn

  public akka.stream.ActorMaterializer apply(akka.stream.ActorMaterializerSettings, java.lang.String, akka.actor.ActorRefFactory);
    Code:
       0: new           #51                 // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #54                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore        4
      10: aload_0
      11: aload_3
      12: invokespecial #18                 // Method actorSystemOf:(Lakka/actor/ActorRefFactory;)Lakka/actor/ActorSystem;
      15: astore        5
      17: new           #56                 // class akka/stream/impl/ActorMaterializerImpl
      20: dup
      21: aload         5
      23: aload_1
      24: aload         5
      26: invokevirtual #62                 // Method akka/actor/ActorSystem.dispatchers:()Lakka/dispatch/Dispatchers;
      29: aload_3
      30: getstatic     #67                 // Field akka/stream/impl/StreamSupervisor$.MODULE$:Lakka/stream/impl/StreamSupervisor$;
      33: aload_1
      34: aload         4
      36: invokevirtual #71                 // Method akka/stream/impl/StreamSupervisor$.props:(Lakka/stream/ActorMaterializerSettings;Ljava/util/concurrent/atomic/AtomicBoolean;)Lakka/actor/Props;
      39: aload_1
      40: invokevirtual #75                 // Method akka/stream/ActorMaterializerSettings.dispatcher:()Ljava/lang/String;
      43: invokevirtual #81                 // Method akka/actor/Props.withDispatcher:(Ljava/lang/String;)Lakka/actor/Props;
      46: getstatic     #67                 // Field akka/stream/impl/StreamSupervisor$.MODULE$:Lakka/stream/impl/StreamSupervisor$;
      49: invokevirtual #84                 // Method akka/stream/impl/StreamSupervisor$.nextName:()Ljava/lang/String;
      52: invokeinterface #90,  3           // InterfaceMethod akka/actor/ActorRefFactory.actorOf:(Lakka/actor/Props;Ljava/lang/String;)Lakka/actor/ActorRef;
      57: aload         4
      59: getstatic     #95                 // Field akka/stream/impl/FlowNames$.MODULE$:Lakka/stream/impl/FlowNames$;
      62: aload         5
      64: invokevirtual #98                 // Method akka/stream/impl/FlowNames$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      67: checkcast     #100                // class akka/stream/impl/FlowNames
      70: invokevirtual #104                // Method akka/stream/impl/FlowNames.name:()Lakka/stream/impl/SeqActorNameImpl;
      73: aload_2
      74: invokevirtual #110                // Method akka/stream/impl/SeqActorNameImpl.copy:(Ljava/lang/String;)Lakka/stream/impl/SeqActorName;
      77: invokespecial #113                // Method akka/stream/impl/ActorMaterializerImpl."<init>":(Lakka/actor/ActorSystem;Lakka/stream/ActorMaterializerSettings;Lakka/dispatch/Dispatchers;Lakka/actor/ActorRef;Ljava/util/concurrent/atomic/AtomicBoolean;Lakka/stream/impl/SeqActorName;)V
      80: areturn

  public akka.stream.ActorMaterializer apply(akka.stream.ActorMaterializerSettings, akka.actor.ActorRefFactory);
    Code:
       0: aload_0
       1: new           #119                // class scala/Some
       4: dup
       5: aload_1
       6: invokespecial #122                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       9: getstatic     #127                // Field scala/None$.MODULE$:Lscala/None$;
      12: aload_2
      13: invokevirtual #129                // Method apply:(Lscala/Option;Lscala/Option;Lakka/actor/ActorRefFactory;)Lakka/stream/ActorMaterializer;
      16: areturn

  public scala.Option<akka.stream.ActorMaterializerSettings> apply$default$1();
    Code:
       0: getstatic     #127                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public scala.Option<java.lang.String> apply$default$2();
    Code:
       0: getstatic     #127                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public akka.stream.ActorMaterializer systemMaterializer(akka.stream.ActorMaterializerSettings, java.lang.String, akka.actor.ExtendedActorSystem);
    Code:
       0: new           #51                 // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #54                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore        4
      10: new           #56                 // class akka/stream/impl/ActorMaterializerImpl
      13: dup
      14: aload_3
      15: aload_1
      16: aload_3
      17: invokevirtual #137                // Method akka/actor/ExtendedActorSystem.dispatchers:()Lakka/dispatch/Dispatchers;
      20: aload_3
      21: getstatic     #67                 // Field akka/stream/impl/StreamSupervisor$.MODULE$:Lakka/stream/impl/StreamSupervisor$;
      24: aload_1
      25: aload         4
      27: invokevirtual #71                 // Method akka/stream/impl/StreamSupervisor$.props:(Lakka/stream/ActorMaterializerSettings;Ljava/util/concurrent/atomic/AtomicBoolean;)Lakka/actor/Props;
      30: aload_1
      31: invokevirtual #75                 // Method akka/stream/ActorMaterializerSettings.dispatcher:()Ljava/lang/String;
      34: invokevirtual #81                 // Method akka/actor/Props.withDispatcher:(Ljava/lang/String;)Lakka/actor/Props;
      37: getstatic     #67                 // Field akka/stream/impl/StreamSupervisor$.MODULE$:Lakka/stream/impl/StreamSupervisor$;
      40: invokevirtual #84                 // Method akka/stream/impl/StreamSupervisor$.nextName:()Ljava/lang/String;
      43: invokevirtual #140                // Method akka/actor/ExtendedActorSystem.systemActorOf:(Lakka/actor/Props;Ljava/lang/String;)Lakka/actor/ActorRef;
      46: aload         4
      48: getstatic     #95                 // Field akka/stream/impl/FlowNames$.MODULE$:Lakka/stream/impl/FlowNames$;
      51: aload_3
      52: invokevirtual #98                 // Method akka/stream/impl/FlowNames$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      55: checkcast     #100                // class akka/stream/impl/FlowNames
      58: invokevirtual #104                // Method akka/stream/impl/FlowNames.name:()Lakka/stream/impl/SeqActorNameImpl;
      61: aload_2
      62: invokevirtual #110                // Method akka/stream/impl/SeqActorNameImpl.copy:(Ljava/lang/String;)Lakka/stream/impl/SeqActorName;
      65: invokespecial #113                // Method akka/stream/impl/ActorMaterializerImpl."<init>":(Lakka/actor/ActorSystem;Lakka/stream/ActorMaterializerSettings;Lakka/dispatch/Dispatchers;Lakka/actor/ActorRef;Ljava/util/concurrent/atomic/AtomicBoolean;Lakka/stream/impl/SeqActorName;)V
      68: areturn

  public akka.stream.ActorMaterializer create(akka.actor.ActorRefFactory);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #145                // Method apply$default$1:()Lscala/Option;
       5: aload_0
       6: invokevirtual #147                // Method apply$default$2:()Lscala/Option;
       9: aload_1
      10: invokevirtual #129                // Method apply:(Lscala/Option;Lscala/Option;Lakka/actor/ActorRefFactory;)Lakka/stream/ActorMaterializer;
      13: areturn

  public akka.stream.ActorMaterializer create(akka.stream.ActorMaterializerSettings, akka.actor.ActorRefFactory);
    Code:
       0: aload_0
       1: getstatic     #152                // Field scala/Option$.MODULE$:Lscala/Option$;
       4: aload_1
       5: invokevirtual #155                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
       8: getstatic     #127                // Field scala/None$.MODULE$:Lscala/None$;
      11: aload_2
      12: invokevirtual #129                // Method apply:(Lscala/Option;Lscala/Option;Lakka/actor/ActorRefFactory;)Lakka/stream/ActorMaterializer;
      15: areturn

  public akka.stream.ActorMaterializer create(akka.stream.ActorMaterializerSettings, akka.actor.ActorRefFactory, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #152                // Field scala/Option$.MODULE$:Lscala/Option$;
       4: aload_1
       5: invokevirtual #155                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
       8: getstatic     #152                // Field scala/Option$.MODULE$:Lscala/Option$;
      11: aload_3
      12: invokevirtual #155                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      15: aload_2
      16: invokevirtual #129                // Method apply:(Lscala/Option;Lscala/Option;Lakka/actor/ActorRefFactory;)Lakka/stream/ActorMaterializer;
      19: areturn

  private akka.actor.ActorSystem actorSystemOf(akka.actor.ActorRefFactory);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #136                // class akka/actor/ExtendedActorSystem
       6: ifeq          22
       9: aload_3
      10: checkcast     #136                // class akka/actor/ExtendedActorSystem
      13: astore        4
      15: aload         4
      17: astore        5
      19: goto          44
      22: aload_3
      23: instanceof    #158                // class akka/actor/ActorContext
      26: ifeq          49
      29: aload_3
      30: checkcast     #158                // class akka/actor/ActorContext
      33: astore        6
      35: aload         6
      37: invokeinterface #161,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      42: astore        5
      44: aload         5
      46: astore_2
      47: aload_2
      48: areturn
      49: aload_3
      50: ifnonnull     63
      53: new           #163                // class java/lang/IllegalArgumentException
      56: dup
      57: ldc           #165                // String ActorRefFactory context must be defined
      59: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: new           #163                // class java/lang/IllegalArgumentException
      66: dup
      67: new           #170                // class scala/StringContext
      70: dup
      71: getstatic     #175                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      74: iconst_2
      75: anewarray     #36                 // class java/lang/String
      78: dup
      79: iconst_0
      80: ldc           #177                // String ActorRefFactory context must be a ActorSystem or ActorContext, got [
      82: aastore
      83: dup
      84: iconst_1
      85: ldc           #179                // String ]
      87: aastore
      88: checkcast     #181                // class "[Ljava/lang/Object;"
      91: invokevirtual #185                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      94: invokespecial #188                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      97: getstatic     #175                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     100: iconst_1
     101: anewarray     #4                  // class java/lang/Object
     104: dup
     105: iconst_0
     106: aload_1
     107: invokevirtual #192                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #197                // Method java/lang/Class.getName:()Ljava/lang/String;
     113: aastore
     114: invokevirtual #201                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     117: invokevirtual #205                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     120: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow

  private akka.stream.ActorMaterializer$();
    Code:
       0: aload_0
       1: invokespecial #206                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #208                // Field MODULE$:Lakka/stream/ActorMaterializer$;
       8: return
}
