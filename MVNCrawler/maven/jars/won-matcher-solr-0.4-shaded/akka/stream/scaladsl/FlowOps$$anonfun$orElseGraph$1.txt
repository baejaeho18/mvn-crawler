Compiled from "Flow.scala"
public final class akka.stream.scaladsl.FlowOps$$anonfun$orElseGraph$1 extends scala.runtime.AbstractFunction1<akka.stream.scaladsl.GraphDSL$Builder<Mat2>, scala.Function1<akka.stream.SourceShape<U>, akka.stream.FlowShape<U, U>>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.Function1<akka.stream.SourceShape<U>, akka.stream.FlowShape<U, U>> apply(akka.stream.scaladsl.GraphDSL$Builder<Mat2>);
    Code:
       0: new           #21                 // class akka/stream/scaladsl/FlowOps$$anonfun$orElseGraph$1$$anonfun$apply$16
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #25                 // Method akka/stream/scaladsl/FlowOps$$anonfun$orElseGraph$1$$anonfun$apply$16."<init>":(Lakka/stream/scaladsl/FlowOps$$anonfun$orElseGraph$1;Lakka/stream/scaladsl/GraphDSL$Builder;)V
       9: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #32                 // class akka/stream/scaladsl/GraphDSL$Builder
       5: invokevirtual #34                 // Method apply:(Lakka/stream/scaladsl/GraphDSL$Builder;)Lscala/Function1;
       8: areturn

  public akka.stream.scaladsl.FlowOps$$anonfun$orElseGraph$1(akka.stream.scaladsl.FlowOps<Out, Mat>);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
