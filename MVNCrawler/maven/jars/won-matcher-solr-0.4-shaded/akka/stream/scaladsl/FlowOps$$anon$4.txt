Compiled from "Flow.scala"
public final class akka.stream.scaladsl.FlowOps$$anon$4 implements akka.stream.impl.SubFlowImpl$MergeBack<Out, akka.stream.scaladsl.FlowOps> {
  private final akka.stream.scaladsl.FlowOps $outer;

  private final akka.stream.SubstreamCancelStrategy substreamCancelStrategy$2;

  private final scala.Function1 p$3;

  public <T> akka.stream.scaladsl.FlowOps apply(akka.stream.scaladsl.Flow<Out, T, akka.NotUsed>, int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field $outer:Lakka/stream/scaladsl/FlowOps;
       4: getstatic     #29                 // Field akka/stream/impl/fusing/Split$.MODULE$:Lakka/stream/impl/fusing/Split$;
       7: aload_0
       8: getfield      #31                 // Field p$3:Lscala/Function1;
      11: aload_0
      12: getfield      #33                 // Field substreamCancelStrategy$2:Lakka/stream/SubstreamCancelStrategy;
      15: invokevirtual #37                 // Method akka/stream/impl/fusing/Split$.after:(Lscala/Function1;Lakka/stream/SubstreamCancelStrategy;)Lakka/stream/Graph;
      18: invokeinterface #41,  2           // InterfaceMethod akka/stream/scaladsl/FlowOps.via:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      23: new           #43                 // class akka/stream/scaladsl/FlowOps$$anon$4$$anonfun$apply$6
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #47                 // Method akka/stream/scaladsl/FlowOps$$anon$4$$anonfun$apply$6."<init>":(Lakka/stream/scaladsl/FlowOps$$anon$4;Lakka/stream/scaladsl/Flow;)V
      32: invokeinterface #51,  2           // InterfaceMethod akka/stream/scaladsl/FlowOps.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      37: new           #53                 // class akka/stream/impl/fusing/FlattenMerge
      40: dup
      41: iload_2
      42: invokespecial #56                 // Method akka/stream/impl/fusing/FlattenMerge."<init>":(I)V
      45: invokeinterface #41,  2           // InterfaceMethod akka/stream/scaladsl/FlowOps.via:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      50: areturn

  public java.lang.Object apply(akka.stream.scaladsl.Flow, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #65                 // Method apply:(Lakka/stream/scaladsl/Flow;I)Lakka/stream/scaladsl/FlowOps;
       6: areturn

  public akka.stream.scaladsl.FlowOps$$anon$4(akka.stream.scaladsl.FlowOps<Out, Mat>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lakka/stream/scaladsl/FlowOps;
      11: aload_0
      12: aload_2
      13: putfield      #33                 // Field substreamCancelStrategy$2:Lakka/stream/SubstreamCancelStrategy;
      16: aload_0
      17: aload_3
      18: putfield      #31                 // Field p$3:Lscala/Function1;
      21: aload_0
      22: invokespecial #70                 // Method java/lang/Object."<init>":()V
      25: return
}
