Compiled from "Sink.scala"
public final class akka.stream.scaladsl.Sink<In, Mat> implements akka.stream.Graph<akka.stream.SinkShape<In>, Mat> {
  private final akka.stream.impl.StreamLayout$Module module;

  private final akka.stream.SinkShape<In> shape;

  public static <T> scala.Function1<java.lang.Throwable, java.lang.Object> actorRefWithAck$default$5();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #21                 // Method akka/stream/scaladsl/Sink$.actorRefWithAck$default$5:()Lscala/Function1;
       6: areturn

  public static <T, M> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<M>> lazyInit(scala.Function1<T, scala.concurrent.Future<akka.stream.scaladsl.Sink<T, M>>>, scala.Function0<M>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #25                 // Method akka/stream/scaladsl/Sink$.lazyInit:(Lscala/Function1;Lscala/Function0;)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static <T> akka.stream.scaladsl.Sink<T, akka.stream.scaladsl.SinkQueueWithCancel<T>> queue();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #29                 // Method akka/stream/scaladsl/Sink$.queue:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, akka.actor.ActorRef> actorSubscriber(akka.actor.Props);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: invokevirtual #33                 // Method akka/stream/scaladsl/Sink$.actorSubscriber:(Lakka/actor/Props;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> actorRefWithAck(akka.actor.ActorRef, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function1<java.lang.Throwable, java.lang.Object>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #37                 // Method akka/stream/scaladsl/Sink$.actorRefWithAck:(Lakka/actor/ActorRef;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lakka/stream/scaladsl/Sink;
      12: areturn

  public static <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> actorRef(akka.actor.ActorRef, java.lang.Object);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #41                 // Method akka/stream/scaladsl/Sink$.actorRef:(Lakka/actor/ActorRef;Ljava/lang/Object;)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> onComplete(scala.Function1<scala.util.Try<akka.Done>, scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: invokevirtual #45                 // Method akka/stream/scaladsl/Sink$.onComplete:(Lscala/Function1;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<T>> reduce(scala.Function2<T, T, T>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: invokevirtual #49                 // Method akka/stream/scaladsl/Sink$.reduce:(Lscala/Function2;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static <U, T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<U>> foldAsync(U, scala.Function2<U, T, scala.concurrent.Future<U>>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #53                 // Method akka/stream/scaladsl/Sink$.foldAsync:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static <U, T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<U>> fold(U, scala.Function2<U, T, U>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #56                 // Method akka/stream/scaladsl/Sink$.fold:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<akka.Done>> foreachParallel(int, scala.Function1<T, scala.runtime.BoxedUnit>, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #60                 // Method akka/stream/scaladsl/Sink$.foreachParallel:(ILscala/Function1;Lscala/concurrent/ExecutionContext;)Lakka/stream/scaladsl/Sink;
       9: areturn

  public static <T, U> akka.stream.scaladsl.Sink<T, akka.NotUsed> combine(akka.stream.scaladsl.Sink<U, ?>, akka.stream.scaladsl.Sink<U, ?>, scala.collection.Seq<akka.stream.scaladsl.Sink<U, ?>>, scala.Function1<java.lang.Object, akka.stream.Graph<akka.stream.UniformFanOutShape<T, U>, akka.NotUsed>>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #64                 // Method akka/stream/scaladsl/Sink$.combine:(Lakka/stream/scaladsl/Sink;Lakka/stream/scaladsl/Sink;Lscala/collection/Seq;Lscala/Function1;)Lakka/stream/scaladsl/Sink;
      10: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<akka.Done>> foreach(scala.Function1<T, scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: invokevirtual #67                 // Method akka/stream/scaladsl/Sink$.foreach:(Lscala/Function1;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static akka.stream.scaladsl.Sink<java.lang.Object, scala.concurrent.Future<akka.Done>> ignore();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #70                 // Method akka/stream/scaladsl/Sink$.ignore:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, org.reactivestreams.Publisher<T>> asPublisher(boolean);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: iload_0
       4: invokevirtual #74                 // Method akka/stream/scaladsl/Sink$.asPublisher:(Z)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<scala.collection.immutable.Seq<T>>> seq();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #77                 // Method akka/stream/scaladsl/Sink$.seq:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<scala.Option<T>>> lastOption();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #80                 // Method akka/stream/scaladsl/Sink$.lastOption:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<T>> last();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #83                 // Method akka/stream/scaladsl/Sink$.last:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<scala.Option<T>>> headOption();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #86                 // Method akka/stream/scaladsl/Sink$.headOption:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<T>> head();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #89                 // Method akka/stream/scaladsl/Sink$.head:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> cancelled();
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: invokevirtual #92                 // Method akka/stream/scaladsl/Sink$.cancelled:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> fromSubscriber(org.reactivestreams.Subscriber<T>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: invokevirtual #96                 // Method akka/stream/scaladsl/Sink$.fromSubscriber:(Lorg/reactivestreams/Subscriber;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static <T, M> akka.stream.scaladsl.Sink<T, M> fromGraph(akka.stream.Graph<akka.stream.SinkShape<T>, M>);
    Code:
       0: getstatic     #19                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: aload_0
       4: invokevirtual #100                // Method akka/stream/scaladsl/Sink$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public akka.stream.impl.StreamLayout$Module module();
    Code:
       0: aload_0
       1: getfield      #108                // Field module:Lakka/stream/impl/StreamLayout$Module;
       4: areturn

  public akka.stream.SinkShape<In> shape();
    Code:
       0: aload_0
       1: getfield      #113                // Field shape:Lakka/stream/SinkShape;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #117                // class scala/StringContext
       3: dup
       4: getstatic     #122                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_3
       8: anewarray     #124                // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #126                // String Sink(
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #128                // String ,
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #130                // String )
      25: aastore
      26: checkcast     #132                // class "[Ljava/lang/Object;"
      29: invokevirtual #136                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      32: invokespecial #140                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      35: getstatic     #122                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      38: iconst_2
      39: anewarray     #5                  // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: invokevirtual #142                // Method shape:()Lakka/stream/SinkShape;
      48: aastore
      49: dup
      50: iconst_1
      51: aload_0
      52: invokevirtual #144                // Method module:()Lakka/stream/impl/StreamLayout$Module;
      55: aastore
      56: invokevirtual #148                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      59: invokevirtual #152                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      62: areturn

  public <In2> akka.stream.scaladsl.Sink<In2, Mat> contramap(scala.Function1<In2, In>);
    Code:
       0: getstatic     #158                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: aload_1
       4: invokevirtual #162                // Method akka/stream/scaladsl/Flow$.fromFunction:(Lscala/Function1;)Lakka/stream/scaladsl/Flow;
       7: aload_0
       8: getstatic     #167                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      11: invokevirtual #171                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      14: invokevirtual #177                // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      17: areturn

  public <Mat2> Mat2 runWith(akka.stream.Graph<akka.stream.SourceShape<In>, Mat2>, akka.stream.Materializer);
    Code:
       0: getstatic     #186                // Field akka/stream/scaladsl/Source$.MODULE$:Lakka/stream/scaladsl/Source$;
       3: aload_1
       4: invokevirtual #189                // Method akka/stream/scaladsl/Source$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
       7: aload_0
       8: invokevirtual #195                // Method akka/stream/scaladsl/Source.to:(Lakka/stream/Graph;)Lakka/stream/scaladsl/RunnableGraph;
      11: aload_2
      12: invokevirtual #201                // Method akka/stream/scaladsl/RunnableGraph.run:(Lakka/stream/Materializer;)Ljava/lang/Object;
      15: areturn

  public <Mat2> akka.stream.scaladsl.Sink<In, Mat2> mapMaterializedValue(scala.Function1<Mat, Mat2>);
    Code:
       0: new           #2                  // class akka/stream/scaladsl/Sink
       3: dup
       4: aload_0
       5: invokevirtual #144                // Method module:()Lakka/stream/impl/StreamLayout$Module;
       8: aload_1
       9: invokeinterface #212,  2          // InterfaceMethod akka/stream/impl/StreamLayout$Module.transformMaterializedValue:(Lscala/Function1;)Lakka/stream/impl/StreamLayout$Module;
      14: invokespecial #215                // Method "<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      17: areturn

  public akka.stream.scaladsl.Sink<In, Mat> withAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/scaladsl/Sink
       3: dup
       4: aload_0
       5: invokevirtual #144                // Method module:()Lakka/stream/impl/StreamLayout$Module;
       8: aload_1
       9: invokeinterface #220,  2          // InterfaceMethod akka/stream/impl/StreamLayout$Module.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/impl/StreamLayout$Module;
      14: invokespecial #215                // Method "<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      17: areturn

  public akka.stream.scaladsl.Sink<In, Mat> addAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #144                // Method module:()Lakka/stream/impl/StreamLayout$Module;
       5: invokeinterface #227,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.attributes:()Lakka/stream/Attributes;
      10: aload_1
      11: invokevirtual #233                // Method akka/stream/Attributes.and:(Lakka/stream/Attributes;)Lakka/stream/Attributes;
      14: invokevirtual #235                // Method withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      17: areturn

  public akka.stream.scaladsl.Sink<In, Mat> named(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #242                // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
       4: aload_1
       5: invokevirtual #246                // Method akka/stream/Attributes$.name:(Ljava/lang/String;)Lakka/stream/Attributes;
       8: invokevirtual #248                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      11: areturn

  public akka.stream.scaladsl.Sink<In, Mat> async();
    Code:
       0: aload_0
       1: getstatic     #242                // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
       4: invokevirtual #253                // Method akka/stream/Attributes$.asyncBoundary:()Lakka/stream/Attributes;
       7: invokevirtual #248                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      10: areturn

  public akka.stream.javadsl.Sink<In, Mat> asJava();
    Code:
       0: new           #257                // class akka/stream/javadsl/Sink
       3: dup
       4: aload_0
       5: invokespecial #260                // Method akka/stream/javadsl/Sink."<init>":(Lakka/stream/scaladsl/Sink;)V
       8: areturn

  public akka.stream.Graph async();
    Code:
       0: aload_0
       1: invokevirtual #263                // Method async:()Lakka/stream/scaladsl/Sink;
       4: areturn

  public akka.stream.Graph named(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #266                // Method named:(Ljava/lang/String;)Lakka/stream/scaladsl/Sink;
       5: areturn

  public akka.stream.Graph addAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #248                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
       5: areturn

  public akka.stream.Graph withAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #235                // Method withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
       5: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #142                // Method shape:()Lakka/stream/SinkShape;
       4: areturn

  public akka.stream.scaladsl.Sink(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field module:Lakka/stream/impl/StreamLayout$Module;
       5: aload_0
       6: invokespecial #271                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #277                // Method akka/stream/Graph$class.$init$:(Lakka/stream/Graph;)V
      13: aload_0
      14: aload_1
      15: invokeinterface #279,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.shape:()Lakka/stream/Shape;
      20: checkcast     #281                // class akka/stream/SinkShape
      23: putfield      #113                // Field shape:Lakka/stream/SinkShape;
      26: return
}
