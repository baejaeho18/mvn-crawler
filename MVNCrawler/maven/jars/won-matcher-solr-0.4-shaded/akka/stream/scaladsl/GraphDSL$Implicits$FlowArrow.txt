Compiled from "Graph.scala"
public final class akka.stream.scaladsl.GraphDSL$Implicits$FlowArrow<I, O, M> {
  private final akka.stream.Graph<akka.stream.FlowShape<I, O>, M> f;

  public akka.stream.Graph<akka.stream.FlowShape<I, O>, M> f();
    Code:
       0: aload_0
       1: getfield      #12                 // Field f:Lakka/stream/Graph;
       4: areturn

  public <I2, O2, Mat> akka.stream.BidiShape<O, O2, I2, I> $less$tilde$greater(akka.stream.Graph<akka.stream.BidiShape<O, O2, I2, I>, Mat>, akka.stream.scaladsl.GraphDSL$Builder<?>);
    Code:
       0: getstatic     #22                 // Field akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.MODULE$:Lakka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$;
       3: aload_0
       4: invokevirtual #24                 // Method f:()Lakka/stream/Graph;
       7: aload_1
       8: aload_2
       9: invokevirtual #28                 // Method akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.$less$tilde$greater$extension0:(Lakka/stream/Graph;Lakka/stream/Graph;Lakka/stream/scaladsl/GraphDSL$Builder;)Lakka/stream/BidiShape;
      12: areturn

  public <I2, O2> akka.stream.BidiShape<O, O2, I2, I> $less$tilde$greater(akka.stream.BidiShape<O, O2, I2, I>, akka.stream.scaladsl.GraphDSL$Builder<?>);
    Code:
       0: getstatic     #22                 // Field akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.MODULE$:Lakka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$;
       3: aload_0
       4: invokevirtual #24                 // Method f:()Lakka/stream/Graph;
       7: aload_1
       8: aload_2
       9: invokevirtual #36                 // Method akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.$less$tilde$greater$extension1:(Lakka/stream/Graph;Lakka/stream/BidiShape;Lakka/stream/scaladsl/GraphDSL$Builder;)Lakka/stream/BidiShape;
      12: areturn

  public <M2> void $less$tilde$greater(akka.stream.Graph<akka.stream.FlowShape<O, I>, M2>, akka.stream.scaladsl.GraphDSL$Builder<?>);
    Code:
       0: getstatic     #22                 // Field akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.MODULE$:Lakka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$;
       3: aload_0
       4: invokevirtual #24                 // Method f:()Lakka/stream/Graph;
       7: aload_1
       8: aload_2
       9: invokevirtual #42                 // Method akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.$less$tilde$greater$extension2:(Lakka/stream/Graph;Lakka/stream/Graph;Lakka/stream/scaladsl/GraphDSL$Builder;)V
      12: return

  public int hashCode();
    Code:
       0: getstatic     #22                 // Field akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.MODULE$:Lakka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$;
       3: aload_0
       4: invokevirtual #24                 // Method f:()Lakka/stream/Graph;
       7: invokevirtual #49                 // Method akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.hashCode$extension:(Lakka/stream/Graph;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #22                 // Field akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.MODULE$:Lakka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$;
       3: aload_0
       4: invokevirtual #24                 // Method f:()Lakka/stream/Graph;
       7: aload_1
       8: invokevirtual #55                 // Method akka/stream/scaladsl/GraphDSL$Implicits$FlowArrow$.equals$extension:(Lakka/stream/Graph;Ljava/lang/Object;)Z
      11: ireturn

  public akka.stream.scaladsl.GraphDSL$Implicits$FlowArrow(akka.stream.Graph<akka.stream.FlowShape<I, O>, M>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field f:Lakka/stream/Graph;
       5: aload_0
       6: invokespecial #62                 // Method java/lang/Object."<init>":()V
       9: return
}
