Compiled from "Flow.scala"
public abstract class akka.stream.scaladsl.FlowOpsMat$class {
  public static akka.stream.scaladsl.FlowOpsMat zipMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #13,  2           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.zipGraph:(Lakka/stream/Graph;)Lakka/stream/Graph;
       8: aload_2
       9: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      14: areturn

  public static akka.stream.scaladsl.FlowOpsMat zipWithMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokeinterface #29,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.zipWithGraph:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/Graph;
       9: aload_3
      10: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      15: areturn

  public static akka.stream.scaladsl.FlowOpsMat mergeMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, boolean, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: invokeinterface #36,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.mergeGraph:(Lakka/stream/Graph;Z)Lakka/stream/Graph;
       9: aload_3
      10: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      15: areturn

  public static boolean mergeMat$default$2(akka.stream.scaladsl.FlowOpsMat);
    Code:
       0: iconst_0
       1: ireturn

  public static akka.stream.scaladsl.FlowOpsMat interleaveMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, int, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: invokeinterface #46,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.interleaveGraph:(Lakka/stream/Graph;I)Lakka/stream/Graph;
       9: aload_3
      10: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      15: areturn

  public static akka.stream.scaladsl.FlowOpsMat mergeSortedMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, scala.Function2, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_3
       4: invokeinterface #54,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.mergeSortedGraph:(Lakka/stream/Graph;Lscala/math/Ordering;)Lakka/stream/Graph;
       9: aload_2
      10: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      15: areturn

  public static akka.stream.scaladsl.FlowOpsMat concatMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #60,  2           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.concatGraph:(Lakka/stream/Graph;)Lakka/stream/Graph;
       8: aload_2
       9: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      14: areturn

  public static akka.stream.scaladsl.FlowOpsMat prependMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #64,  2           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.prependGraph:(Lakka/stream/Graph;)Lakka/stream/Graph;
       8: aload_2
       9: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      14: areturn

  public static akka.stream.scaladsl.FlowOpsMat orElseMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #68,  2           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.orElseGraph:(Lakka/stream/Graph;)Lakka/stream/Graph;
       8: aload_2
       9: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      14: areturn

  public static akka.stream.scaladsl.FlowOpsMat alsoToMat(akka.stream.scaladsl.FlowOpsMat, akka.stream.Graph, scala.Function2);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #73,  2           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.alsoToGraph:(Lakka/stream/Graph;)Lakka/stream/Graph;
       8: aload_2
       9: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      14: areturn

  public static akka.stream.scaladsl.FlowOpsMat watchTermination(akka.stream.scaladsl.FlowOpsMat, scala.Function2);
    Code:
       0: aload_0
       1: getstatic     #81                 // Field akka/stream/impl/fusing/GraphStages$.MODULE$:Lakka/stream/impl/fusing/GraphStages$;
       4: invokevirtual #85                 // Method akka/stream/impl/fusing/GraphStages$.terminationWatcher:()Lakka/stream/stage/GraphStageWithMaterializedValue;
       7: aload_1
       8: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      13: areturn

  public static akka.stream.scaladsl.FlowOpsMat monitor(akka.stream.scaladsl.FlowOpsMat, scala.Function2);
    Code:
       0: aload_0
       1: getstatic     #81                 // Field akka/stream/impl/fusing/GraphStages$.MODULE$:Lakka/stream/impl/fusing/GraphStages$;
       4: invokevirtual #88                 // Method akka/stream/impl/fusing/GraphStages$.monitor:()Lakka/stream/stage/GraphStageWithMaterializedValue;
       7: aload_1
       8: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      13: areturn

  public static akka.stream.scaladsl.FlowOpsMat transformMaterializing(akka.stream.scaladsl.FlowOpsMat, scala.Function0);
    Code:
       0: aload_0
       1: new           #92                 // class akka/stream/stage/AbstractStage$PushPullGraphStageWithMaterializedValue
       4: dup
       5: new           #94                 // class akka/stream/scaladsl/FlowOpsMat$$anonfun$transformMaterializing$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #98                 // Method akka/stream/scaladsl/FlowOpsMat$$anonfun$transformMaterializing$1."<init>":(Lakka/stream/scaladsl/FlowOpsMat;Lscala/Function0;)V
      14: getstatic     #103                // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
      17: invokevirtual #107                // Method akka/stream/Attributes$.none:()Lakka/stream/Attributes;
      20: invokespecial #110                // Method akka/stream/stage/AbstractStage$PushPullGraphStageWithMaterializedValue."<init>":(Lscala/Function1;Lakka/stream/Attributes;)V
      23: getstatic     #115                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      26: invokevirtual #119                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      29: invokeinterface #17,  3           // InterfaceMethod akka/stream/scaladsl/FlowOpsMat.viaMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOpsMat;
      34: areturn

  public static void $init$(akka.stream.scaladsl.FlowOpsMat);
    Code:
       0: return
}
