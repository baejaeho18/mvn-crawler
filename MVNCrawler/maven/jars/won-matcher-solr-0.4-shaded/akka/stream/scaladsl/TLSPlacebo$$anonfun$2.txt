Compiled from "TLS.scala"
public final class akka.stream.scaladsl.TLSPlacebo$$anonfun$2 extends scala.runtime.AbstractFunction1<akka.stream.scaladsl.GraphDSL$Builder<akka.NotUsed>, akka.stream.BidiShape<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SessionBytes>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final akka.stream.BidiShape<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SessionBytes> apply(akka.stream.scaladsl.GraphDSL$Builder<akka.NotUsed>);
    Code:
       0: aload_1
       1: getstatic     #22                 // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       4: invokevirtual #25                 // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       7: new           #27                 // class akka/stream/scaladsl/TLSPlacebo$$anonfun$2$$anonfun$1
      10: dup
      11: aload_0
      12: invokespecial #31                 // Method akka/stream/scaladsl/TLSPlacebo$$anonfun$2$$anonfun$1."<init>":(Lakka/stream/scaladsl/TLSPlacebo$$anonfun$2;)V
      15: invokevirtual #37                 // Method akka/stream/scaladsl/Flow.collect:(Lscala/PartialFunction;)Lakka/stream/scaladsl/FlowOps;
      18: checkcast     #39                 // class akka/stream/Graph
      21: invokevirtual #45                 // Method akka/stream/scaladsl/GraphDSL$Builder.add:(Lakka/stream/Graph;)Lakka/stream/Shape;
      24: checkcast     #47                 // class akka/stream/FlowShape
      27: astore_2
      28: aload_1
      29: getstatic     #22                 // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
      32: invokevirtual #25                 // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
      35: new           #49                 // class akka/stream/scaladsl/TLSPlacebo$$anonfun$2$$anonfun$3
      38: dup
      39: aload_0
      40: invokespecial #50                 // Method akka/stream/scaladsl/TLSPlacebo$$anonfun$2$$anonfun$3."<init>":(Lakka/stream/scaladsl/TLSPlacebo$$anonfun$2;)V
      43: invokevirtual #54                 // Method akka/stream/scaladsl/Flow.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      46: checkcast     #39                 // class akka/stream/Graph
      49: invokevirtual #45                 // Method akka/stream/scaladsl/GraphDSL$Builder.add:(Lakka/stream/Graph;)Lakka/stream/Shape;
      52: checkcast     #47                 // class akka/stream/FlowShape
      55: astore_3
      56: getstatic     #59                 // Field akka/stream/BidiShape$.MODULE$:Lakka/stream/BidiShape$;
      59: aload_2
      60: aload_3
      61: invokevirtual #63                 // Method akka/stream/BidiShape$.fromFlows:(Lakka/stream/FlowShape;Lakka/stream/FlowShape;)Lakka/stream/BidiShape;
      64: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #41                 // class akka/stream/scaladsl/GraphDSL$Builder
       5: invokevirtual #73                 // Method apply:(Lakka/stream/scaladsl/GraphDSL$Builder;)Lakka/stream/BidiShape;
       8: areturn

  public akka.stream.scaladsl.TLSPlacebo$$anonfun$2();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
