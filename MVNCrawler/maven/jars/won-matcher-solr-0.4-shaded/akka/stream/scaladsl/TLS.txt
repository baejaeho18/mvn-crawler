Compiled from "TLS.scala"
public final class akka.stream.scaladsl.TLS {
  public static scala.Option<scala.Tuple2<java.lang.String, java.lang.Object>> apply$default$6();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       3: invokevirtual #18                 // Method akka/stream/scaladsl/TLS$.apply$default$6:()Lscala/Option;
       6: areturn

  public static akka.stream.TLSClosing apply$default$5();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       3: invokevirtual #22                 // Method akka/stream/scaladsl/TLS$.apply$default$5:()Lakka/stream/TLSClosing;
       6: areturn

  public static akka.stream.scaladsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> apply(javax.net.ssl.SSLContext, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #26                 // Method akka/stream/scaladsl/TLS$.apply:(Ljavax/net/ssl/SSLContext;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;)Lakka/stream/scaladsl/BidiFlow;
       9: areturn

  public static akka.stream.scaladsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> apply(javax.net.ssl.SSLContext, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole, akka.stream.TLSClosing, scala.Option<scala.Tuple2<java.lang.String, java.lang.Object>>);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #29                 // Method akka/stream/scaladsl/TLS$.apply:(Ljavax/net/ssl/SSLContext;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Lakka/stream/TLSClosing;Lscala/Option;)Lakka/stream/scaladsl/BidiFlow;
      12: areturn

  public static akka.stream.scaladsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> apply(javax.net.ssl.SSLContext, scala.Option<com.typesafe.sslconfig.akka.AkkaSSLConfig>, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole, akka.stream.TLSClosing, scala.Option<scala.Tuple2<java.lang.String, java.lang.Object>>);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #32                 // Method akka/stream/scaladsl/TLS$.apply:(Ljavax/net/ssl/SSLContext;Lscala/Option;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Lakka/stream/TLSClosing;Lscala/Option;)Lakka/stream/scaladsl/BidiFlow;
      14: areturn
}
