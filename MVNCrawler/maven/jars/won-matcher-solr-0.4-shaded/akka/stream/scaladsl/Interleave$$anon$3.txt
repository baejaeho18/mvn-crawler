Compiled from "Graph.scala"
public final class akka.stream.scaladsl.Interleave$$anon$3 extends akka.stream.stage.GraphStageLogic implements akka.stream.stage.OutHandler {
  private int akka$stream$scaladsl$Interleave$$anon$$counter;

  private int currentUpstreamIndex;

  private int akka$stream$scaladsl$Interleave$$anon$$runningUpstreams;

  private final akka.stream.scaladsl.Interleave $outer;

  public void onDownstreamFinish() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method akka/stream/stage/OutHandler$class.onDownstreamFinish:(Lakka/stream/stage/OutHandler;)V
       4: return

  public int akka$stream$scaladsl$Interleave$$anon$$counter();
    Code:
       0: aload_0
       1: getfield      #32                 // Field akka$stream$scaladsl$Interleave$$anon$$counter:I
       4: ireturn

  public void akka$stream$scaladsl$Interleave$$anon$$counter_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field akka$stream$scaladsl$Interleave$$anon$$counter:I
       5: return

  private int currentUpstreamIndex();
    Code:
       0: aload_0
       1: getfield      #37                 // Field currentUpstreamIndex:I
       4: ireturn

  private void currentUpstreamIndex_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field currentUpstreamIndex:I
       5: return

  public int akka$stream$scaladsl$Interleave$$anon$$runningUpstreams();
    Code:
       0: aload_0
       1: getfield      #40                 // Field akka$stream$scaladsl$Interleave$$anon$$runningUpstreams:I
       4: ireturn

  public void akka$stream$scaladsl$Interleave$$anon$$runningUpstreams_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field akka$stream$scaladsl$Interleave$$anon$$runningUpstreams:I
       5: return

  public boolean akka$stream$scaladsl$Interleave$$anon$$upstreamsClosed();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method akka$stream$scaladsl$Interleave$$anon$$runningUpstreams:()I
       4: iconst_0
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public akka.stream.Inlet<T> akka$stream$scaladsl$Interleave$$anon$$currentUpstream();
    Code:
       0: aload_0
       1: getfield      #49                 // Field $outer:Lakka/stream/scaladsl/Interleave;
       4: invokevirtual #53                 // Method akka/stream/scaladsl/Interleave.in:()Lscala/collection/immutable/IndexedSeq;
       7: aload_0
       8: invokespecial #55                 // Method currentUpstreamIndex:()I
      11: invokeinterface #61,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
      16: checkcast     #63                 // class akka/stream/Inlet
      19: areturn

  public void akka$stream$scaladsl$Interleave$$anon$$switchToNextInput();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #66                 // Method akka$stream$scaladsl$Interleave$$anon$$counter_$eq:(I)V
       5: aload_0
       6: aload_0
       7: aload_0
       8: invokespecial #55                 // Method currentUpstreamIndex:()I
      11: invokespecial #70                 // Method nextInletIndex$1:(I)I
      14: invokespecial #72                 // Method currentUpstreamIndex_$eq:(I)V
      17: return

  public void onPull();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #75                 // Method akka$stream$scaladsl$Interleave$$anon$$currentUpstream:()Lakka/stream/Inlet;
       5: invokevirtual #79                 // Method hasBeenPulled:(Lakka/stream/Inlet;)Z
       8: ifne          19
      11: aload_0
      12: aload_0
      13: invokevirtual #75                 // Method akka$stream$scaladsl$Interleave$$anon$$currentUpstream:()Lakka/stream/Inlet;
      16: invokevirtual #83                 // Method tryPull:(Lakka/stream/Inlet;)V
      19: return

  public akka.stream.scaladsl.Interleave akka$stream$scaladsl$Interleave$$anon$$$outer();
    Code:
       0: aload_0
       1: getfield      #49                 // Field $outer:Lakka/stream/scaladsl/Interleave;
       4: areturn

  private final int nextInletIndex$1(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: istore        4
       5: aload_0
       6: getfield      #49                 // Field $outer:Lakka/stream/scaladsl/Interleave;
       9: invokevirtual #88                 // Method akka/stream/scaladsl/Interleave.inputPorts:()I
      12: iload         4
      14: if_icmpne     23
      17: iconst_0
      18: istore        5
      20: goto          27
      23: iload         4
      25: istore        5
      27: iload         5
      29: istore_3
      30: aload_0
      31: aload_0
      32: getfield      #49                 // Field $outer:Lakka/stream/scaladsl/Interleave;
      35: invokevirtual #53                 // Method akka/stream/scaladsl/Interleave.in:()Lscala/collection/immutable/IndexedSeq;
      38: iload_3
      39: invokeinterface #61,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
      44: checkcast     #63                 // class akka/stream/Inlet
      47: invokevirtual #91                 // Method isClosed:(Lakka/stream/Inlet;)Z
      50: ifeq          74
      53: iload_3
      54: aload_0
      55: invokespecial #55                 // Method currentUpstreamIndex:()I
      58: if_icmpeq     66
      61: iload_3
      62: istore_1
      63: goto          0
      66: aload_0
      67: invokevirtual #94                 // Method completeStage:()V
      70: iconst_0
      71: goto          75
      74: iload_3
      75: ireturn

  public akka.stream.scaladsl.Interleave$$anon$3(akka.stream.scaladsl.Interleave<T>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #49                 // Field $outer:Lakka/stream/scaladsl/Interleave;
      11: aload_0
      12: aload_1
      13: invokevirtual #102                // Method akka/stream/scaladsl/Interleave.shape:()Lakka/stream/UniformFanInShape;
      16: invokespecial #105                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: invokestatic  #108                // Method akka/stream/stage/OutHandler$class.$init$:(Lakka/stream/stage/OutHandler;)V
      23: aload_0
      24: iconst_0
      25: putfield      #32                 // Field akka$stream$scaladsl$Interleave$$anon$$counter:I
      28: aload_0
      29: iconst_0
      30: putfield      #37                 // Field currentUpstreamIndex:I
      33: aload_0
      34: aload_1
      35: invokevirtual #88                 // Method akka/stream/scaladsl/Interleave.inputPorts:()I
      38: putfield      #40                 // Field akka$stream$scaladsl$Interleave$$anon$$runningUpstreams:I
      41: aload_1
      42: invokevirtual #53                 // Method akka/stream/scaladsl/Interleave.in:()Lscala/collection/immutable/IndexedSeq;
      45: new           #110                // class akka/stream/scaladsl/Interleave$$anon$3$$anonfun$15
      48: dup
      49: aload_0
      50: invokespecial #113                // Method akka/stream/scaladsl/Interleave$$anon$3$$anonfun$15."<init>":(Lakka/stream/scaladsl/Interleave$$anon$3;)V
      53: invokeinterface #117,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.foreach:(Lscala/Function1;)V
      58: aload_0
      59: aload_1
      60: invokevirtual #121                // Method akka/stream/scaladsl/Interleave.out:()Lakka/stream/Outlet;
      63: aload_0
      64: invokevirtual #125                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
      67: return
}
