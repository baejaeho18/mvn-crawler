Compiled from "Tcp.scala"
public final class akka.stream.scaladsl.Tcp implements akka.actor.Extension {
  private final akka.actor.ExtendedActorSystem system;

  private final scala.concurrent.duration.FiniteDuration bindShutdownTimeout;

  public static akka.stream.scaladsl.Tcp createExtension(akka.actor.ExtendedActorSystem);
    Code:
       0: getstatic     #18                 // Field akka/stream/scaladsl/Tcp$.MODULE$:Lakka/stream/scaladsl/Tcp$;
       3: aload_0
       4: invokevirtual #20                 // Method akka/stream/scaladsl/Tcp$.createExtension:(Lakka/actor/ExtendedActorSystem;)Lakka/stream/scaladsl/Tcp;
       7: areturn

  public static akka.stream.scaladsl.Tcp$ lookup();
    Code:
       0: getstatic     #18                 // Field akka/stream/scaladsl/Tcp$.MODULE$:Lakka/stream/scaladsl/Tcp$;
       3: invokevirtual #24                 // Method akka/stream/scaladsl/Tcp$.lookup:()Lakka/stream/scaladsl/Tcp$;
       6: areturn

  public static akka.stream.scaladsl.Tcp get(akka.actor.ActorSystem);
    Code:
       0: getstatic     #18                 // Field akka/stream/scaladsl/Tcp$.MODULE$:Lakka/stream/scaladsl/Tcp$;
       3: aload_0
       4: invokevirtual #28                 // Method akka/stream/scaladsl/Tcp$.get:(Lakka/actor/ActorSystem;)Lakka/stream/scaladsl/Tcp;
       7: areturn

  public static akka.stream.scaladsl.Tcp apply(akka.actor.ActorSystem);
    Code:
       0: getstatic     #18                 // Field akka/stream/scaladsl/Tcp$.MODULE$:Lakka/stream/scaladsl/Tcp$;
       3: aload_0
       4: invokevirtual #31                 // Method akka/stream/scaladsl/Tcp$.apply:(Lakka/actor/ActorSystem;)Lakka/stream/scaladsl/Tcp;
       7: areturn

  public scala.concurrent.duration.FiniteDuration bindShutdownTimeout();
    Code:
       0: aload_0
       1: getfield      #38                 // Field bindShutdownTimeout:Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  public akka.stream.scaladsl.Source<akka.stream.scaladsl.Tcp$IncomingConnection, scala.concurrent.Future<akka.stream.scaladsl.Tcp$ServerBinding>> bind(java.lang.String, int, int, scala.collection.immutable.Traversable<akka.io.Inet$SocketOption>, boolean, scala.concurrent.duration.Duration);
    Code:
       0: getstatic     #47                 // Field akka/stream/scaladsl/Source$.MODULE$:Lakka/stream/scaladsl/Source$;
       3: new           #49                 // class akka/stream/impl/io/ConnectionSourceStage
       6: dup
       7: getstatic     #54                 // Field akka/io/IO$.MODULE$:Lakka/io/IO$;
      10: getstatic     #59                 // Field akka/io/Tcp$.MODULE$:Lakka/io/Tcp$;
      13: aload_0
      14: getfield      #61                 // Field system:Lakka/actor/ExtendedActorSystem;
      17: invokevirtual #64                 // Method akka/io/IO$.apply:(Lakka/actor/ExtensionId;Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
      20: new           #66                 // class java/net/InetSocketAddress
      23: dup
      24: aload_1
      25: iload_2
      26: invokespecial #70                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      29: iload_3
      30: aload         4
      32: iload         5
      34: aload         6
      36: aload_0
      37: invokevirtual #72                 // Method bindShutdownTimeout:()Lscala/concurrent/duration/FiniteDuration;
      40: invokespecial #75                 // Method akka/stream/impl/io/ConnectionSourceStage."<init>":(Lakka/actor/ActorRef;Ljava/net/InetSocketAddress;ILscala/collection/immutable/Traversable;ZLscala/concurrent/duration/Duration;Lscala/concurrent/duration/FiniteDuration;)V
      43: invokevirtual #79                 // Method akka/stream/scaladsl/Source$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      46: areturn

  public int bind$default$3();
    Code:
       0: bipush        100
       2: ireturn

  public scala.collection.immutable.Traversable<akka.io.Inet$SocketOption> bind$default$4();
    Code:
       0: getstatic     #99                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public boolean bind$default$5();
    Code:
       0: iconst_0
       1: ireturn

  public scala.concurrent.duration.Duration bind$default$6();
    Code:
       0: getstatic     #108                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
       3: invokevirtual #112                // Method scala/concurrent/duration/Duration$.Inf:()Lscala/concurrent/duration/Duration$Infinite;
       6: areturn

  public scala.concurrent.Future<akka.stream.scaladsl.Tcp$ServerBinding> bindAndHandle(akka.stream.scaladsl.Flow<akka.util.ByteString, akka.util.ByteString, ?>, java.lang.String, int, int, scala.collection.immutable.Traversable<akka.io.Inet$SocketOption>, boolean, scala.concurrent.duration.Duration, akka.stream.Materializer);
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: iload         4
       5: aload         5
       7: iload         6
       9: aload         7
      11: invokevirtual #116                // Method bind:(Ljava/lang/String;IILscala/collection/immutable/Traversable;ZLscala/concurrent/duration/Duration;)Lakka/stream/scaladsl/Source;
      14: getstatic     #121                // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
      17: new           #123                // class akka/stream/scaladsl/Tcp$$anonfun$bindAndHandle$1
      20: dup
      21: aload_0
      22: aload_1
      23: aload         8
      25: invokespecial #126                // Method akka/stream/scaladsl/Tcp$$anonfun$bindAndHandle$1."<init>":(Lakka/stream/scaladsl/Tcp;Lakka/stream/scaladsl/Flow;Lakka/stream/Materializer;)V
      28: invokevirtual #130                // Method akka/stream/scaladsl/Sink$.foreach:(Lscala/Function1;)Lakka/stream/scaladsl/Sink;
      31: invokevirtual #136                // Method akka/stream/scaladsl/Source.to:(Lakka/stream/Graph;)Lakka/stream/scaladsl/RunnableGraph;
      34: aload         8
      36: invokevirtual #142                // Method akka/stream/scaladsl/RunnableGraph.run:(Lakka/stream/Materializer;)Ljava/lang/Object;
      39: checkcast     #144                // class scala/concurrent/Future
      42: areturn

  public int bindAndHandle$default$4();
    Code:
       0: bipush        100
       2: ireturn

  public scala.collection.immutable.Traversable<akka.io.Inet$SocketOption> bindAndHandle$default$5();
    Code:
       0: getstatic     #99                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public boolean bindAndHandle$default$6();
    Code:
       0: iconst_0
       1: ireturn

  public scala.concurrent.duration.Duration bindAndHandle$default$7();
    Code:
       0: getstatic     #108                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
       3: invokevirtual #112                // Method scala/concurrent/duration/Duration$.Inf:()Lscala/concurrent/duration/Duration$Infinite;
       6: areturn

  public akka.stream.scaladsl.Flow<akka.util.ByteString, akka.util.ByteString, scala.concurrent.Future<akka.stream.scaladsl.Tcp$OutgoingConnection>> outgoingConnection(java.net.InetSocketAddress, scala.Option<java.net.InetSocketAddress>, scala.collection.immutable.Traversable<akka.io.Inet$SocketOption>, boolean, scala.concurrent.duration.Duration, scala.concurrent.duration.Duration);
    Code:
       0: getstatic     #159                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: new           #161                // class akka/stream/impl/io/OutgoingConnectionStage
       6: dup
       7: getstatic     #54                 // Field akka/io/IO$.MODULE$:Lakka/io/IO$;
      10: getstatic     #59                 // Field akka/io/Tcp$.MODULE$:Lakka/io/Tcp$;
      13: aload_0
      14: getfield      #61                 // Field system:Lakka/actor/ExtendedActorSystem;
      17: invokevirtual #64                 // Method akka/io/IO$.apply:(Lakka/actor/ExtensionId;Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
      20: aload_1
      21: aload_2
      22: aload_3
      23: iload         4
      25: aload         5
      27: invokespecial #164                // Method akka/stream/impl/io/OutgoingConnectionStage."<init>":(Lakka/actor/ActorRef;Ljava/net/InetSocketAddress;Lscala/Option;Lscala/collection/immutable/Traversable;ZLscala/concurrent/duration/Duration;)V
      30: invokevirtual #167                // Method akka/stream/scaladsl/Flow$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      33: getstatic     #172                // Field akka/stream/impl/fusing/GraphStages$.MODULE$:Lakka/stream/impl/fusing/GraphStages$;
      36: invokevirtual #176                // Method akka/stream/impl/fusing/GraphStages$.detacher:()Lakka/stream/stage/GraphStage;
      39: invokevirtual #181                // Method akka/stream/scaladsl/Flow.via:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      42: astore        7
      44: aload         6
      46: astore        8
      48: aload         8
      50: instanceof    #183                // class scala/concurrent/duration/FiniteDuration
      53: ifeq          81
      56: aload         8
      58: checkcast     #183                // class scala/concurrent/duration/FiniteDuration
      61: astore        9
      63: aload         7
      65: getstatic     #188                // Field akka/stream/scaladsl/BidiFlow$.MODULE$:Lakka/stream/scaladsl/BidiFlow$;
      68: aload         9
      70: invokevirtual #192                // Method akka/stream/scaladsl/BidiFlow$.bidirectionalIdleTimeout:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/BidiFlow;
      73: invokevirtual #195                // Method akka/stream/scaladsl/Flow.join:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      76: astore        10
      78: goto          85
      81: aload         7
      83: astore        10
      85: aload         10
      87: areturn

  public akka.stream.scaladsl.Flow<akka.util.ByteString, akka.util.ByteString, scala.concurrent.Future<akka.stream.scaladsl.Tcp$OutgoingConnection>> outgoingConnection(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #208                // Method java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
       6: aload_0
       7: invokevirtual #212                // Method outgoingConnection$default$2:()Lscala/Option;
      10: aload_0
      11: invokevirtual #215                // Method outgoingConnection$default$3:()Lscala/collection/immutable/Traversable;
      14: aload_0
      15: invokevirtual #218                // Method outgoingConnection$default$4:()Z
      18: aload_0
      19: invokevirtual #221                // Method outgoingConnection$default$5:()Lscala/concurrent/duration/Duration;
      22: aload_0
      23: invokevirtual #224                // Method outgoingConnection$default$6:()Lscala/concurrent/duration/Duration;
      26: invokevirtual #226                // Method outgoingConnection:(Ljava/net/InetSocketAddress;Lscala/Option;Lscala/collection/immutable/Traversable;ZLscala/concurrent/duration/Duration;Lscala/concurrent/duration/Duration;)Lakka/stream/scaladsl/Flow;
      29: areturn

  public scala.Option<java.net.InetSocketAddress> outgoingConnection$default$2();
    Code:
       0: getstatic     #232                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public scala.collection.immutable.Traversable<akka.io.Inet$SocketOption> outgoingConnection$default$3();
    Code:
       0: getstatic     #99                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public boolean outgoingConnection$default$4();
    Code:
       0: iconst_1
       1: ireturn

  public scala.concurrent.duration.Duration outgoingConnection$default$5();
    Code:
       0: getstatic     #108                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
       3: invokevirtual #112                // Method scala/concurrent/duration/Duration$.Inf:()Lscala/concurrent/duration/Duration$Infinite;
       6: areturn

  public scala.concurrent.duration.Duration outgoingConnection$default$6();
    Code:
       0: getstatic     #108                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
       3: invokevirtual #112                // Method scala/concurrent/duration/Duration$.Inf:()Lscala/concurrent/duration/Duration$Infinite;
       6: areturn

  public akka.stream.scaladsl.Tcp(akka.actor.ExtendedActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field system:Lakka/actor/ExtendedActorSystem;
       5: aload_0
       6: invokespecial #236                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: getstatic     #241                // Field akka/stream/ActorMaterializer$.MODULE$:Lakka/stream/ActorMaterializer$;
      13: getstatic     #241                // Field akka/stream/ActorMaterializer$.MODULE$:Lakka/stream/ActorMaterializer$;
      16: invokevirtual #244                // Method akka/stream/ActorMaterializer$.apply$default$1:()Lscala/Option;
      19: getstatic     #241                // Field akka/stream/ActorMaterializer$.MODULE$:Lakka/stream/ActorMaterializer$;
      22: invokevirtual #247                // Method akka/stream/ActorMaterializer$.apply$default$2:()Lscala/Option;
      25: aload_1
      26: invokevirtual #250                // Method akka/stream/ActorMaterializer$.apply:(Lscala/Option;Lscala/Option;Lakka/actor/ActorRefFactory;)Lakka/stream/ActorMaterializer;
      29: invokevirtual #256                // Method akka/stream/ActorMaterializer.settings:()Lakka/stream/ActorMaterializerSettings;
      32: invokevirtual #262                // Method akka/stream/ActorMaterializerSettings.subscriptionTimeoutSettings:()Lakka/stream/StreamSubscriptionTimeoutSettings;
      35: invokevirtual #267                // Method akka/stream/StreamSubscriptionTimeoutSettings.timeout:()Lscala/concurrent/duration/FiniteDuration;
      38: putfield      #38                 // Field bindShutdownTimeout:Lscala/concurrent/duration/FiniteDuration;
      41: return
}
