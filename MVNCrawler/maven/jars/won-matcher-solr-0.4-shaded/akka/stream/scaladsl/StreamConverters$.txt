Compiled from "StreamConverters.scala"
public final class akka.stream.scaladsl.StreamConverters$ {
  public static final akka.stream.scaladsl.StreamConverters$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/scaladsl/StreamConverters$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public akka.stream.scaladsl.Source<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> fromInputStream(scala.Function0<java.io.InputStream>, int);
    Code:
       0: new           #16                 // class akka/stream/scaladsl/Source
       3: dup
       4: new           #18                 // class akka/stream/impl/io/InputStreamSource
       7: dup
       8: aload_1
       9: iload_2
      10: getstatic     #23                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      13: invokevirtual #27                 // Method akka/stream/impl/Stages$DefaultAttributes$.inputStreamSource:()Lakka/stream/Attributes;
      16: getstatic     #32                 // Field akka/stream/scaladsl/Source$.MODULE$:Lakka/stream/scaladsl/Source$;
      19: ldc           #34                 // String InputStreamSource
      21: invokevirtual #38                 // Method akka/stream/scaladsl/Source$.shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      24: invokespecial #41                 // Method akka/stream/impl/io/InputStreamSource."<init>":(Lscala/Function0;ILakka/stream/Attributes;Lakka/stream/SourceShape;)V
      27: invokespecial #44                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      30: areturn

  public int fromInputStream$default$2();
    Code:
       0: sipush        8192
       3: ireturn

  public akka.stream.scaladsl.Source<akka.util.ByteString, java.io.OutputStream> asOutputStream(scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #32                 // Field akka/stream/scaladsl/Source$.MODULE$:Lakka/stream/scaladsl/Source$;
       3: new           #55                 // class akka/stream/impl/io/OutputStreamSourceStage
       6: dup
       7: aload_1
       8: invokespecial #58                 // Method akka/stream/impl/io/OutputStreamSourceStage."<init>":(Lscala/concurrent/duration/FiniteDuration;)V
      11: invokevirtual #62                 // Method akka/stream/scaladsl/Source$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      14: areturn

  public scala.concurrent.duration.FiniteDuration asOutputStream$default$1();
    Code:
       0: new           #68                 // class scala/concurrent/duration/package$DurationInt
       3: dup
       4: getstatic     #73                 // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
       7: iconst_5
       8: invokevirtual #77                 // Method scala/concurrent/duration/package$.DurationInt:(I)I
      11: invokespecial #80                 // Method scala/concurrent/duration/package$DurationInt."<init>":(I)V
      14: invokevirtual #83                 // Method scala/concurrent/duration/package$DurationInt.seconds:()Lscala/concurrent/duration/FiniteDuration;
      17: areturn

  public akka.stream.scaladsl.Sink<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> fromOutputStream(scala.Function0<java.io.OutputStream>, boolean);
    Code:
       0: new           #87                 // class akka/stream/scaladsl/Sink
       3: dup
       4: new           #89                 // class akka/stream/impl/io/OutputStreamSink
       7: dup
       8: aload_1
       9: getstatic     #23                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      12: invokevirtual #92                 // Method akka/stream/impl/Stages$DefaultAttributes$.outputStreamSink:()Lakka/stream/Attributes;
      15: getstatic     #97                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
      18: ldc           #99                 // String OutputStreamSink
      20: invokevirtual #102                // Method akka/stream/scaladsl/Sink$.shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      23: iload_2
      24: invokespecial #105                // Method akka/stream/impl/io/OutputStreamSink."<init>":(Lscala/Function0;Lakka/stream/Attributes;Lakka/stream/SinkShape;Z)V
      27: invokespecial #106                // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      30: areturn

  public boolean fromOutputStream$default$2();
    Code:
       0: iconst_0
       1: ireturn

  public akka.stream.scaladsl.Sink<akka.util.ByteString, java.io.InputStream> asInputStream(scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #97                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: new           #115                // class akka/stream/impl/io/InputStreamSinkStage
       6: dup
       7: aload_1
       8: invokespecial #116                // Method akka/stream/impl/io/InputStreamSinkStage."<init>":(Lscala/concurrent/duration/FiniteDuration;)V
      11: invokevirtual #119                // Method akka/stream/scaladsl/Sink$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      14: areturn

  public scala.concurrent.duration.FiniteDuration asInputStream$default$1();
    Code:
       0: new           #68                 // class scala/concurrent/duration/package$DurationInt
       3: dup
       4: getstatic     #73                 // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
       7: iconst_5
       8: invokevirtual #77                 // Method scala/concurrent/duration/package$.DurationInt:(I)I
      11: invokespecial #80                 // Method scala/concurrent/duration/package$DurationInt."<init>":(I)V
      14: invokevirtual #83                 // Method scala/concurrent/duration/package$DurationInt.seconds:()Lscala/concurrent/duration/FiniteDuration;
      17: areturn

  public <T, R> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<R>> javaCollector(scala.Function0<java.util.stream.Collector<T, ?, R>>);
    Code:
       0: getstatic     #128                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #132                // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: new           #134                // class akka/stream/scaladsl/StreamConverters$$anonfun$javaCollector$1
       9: dup
      10: aload_1
      11: invokespecial #137                // Method akka/stream/scaladsl/StreamConverters$$anonfun$javaCollector$1."<init>":(Lscala/Function0;)V
      14: new           #139                // class akka/stream/scaladsl/StreamConverters$$anonfun$javaCollector$2
      17: dup
      18: invokespecial #140                // Method akka/stream/scaladsl/StreamConverters$$anonfun$javaCollector$2."<init>":()V
      21: invokevirtual #146                // Method akka/stream/scaladsl/Flow.fold:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      24: new           #148                // class akka/stream/scaladsl/StreamConverters$$anonfun$javaCollector$3
      27: dup
      28: invokespecial #149                // Method akka/stream/scaladsl/StreamConverters$$anonfun$javaCollector$3."<init>":()V
      31: invokeinterface #155,  2          // InterfaceMethod akka/stream/scaladsl/FlowOps.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      36: checkcast     #142                // class akka/stream/scaladsl/Flow
      39: getstatic     #97                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
      42: invokevirtual #159                // Method akka/stream/scaladsl/Sink$.head:()Lakka/stream/scaladsl/Sink;
      45: getstatic     #164                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      48: invokevirtual #168                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      51: invokevirtual #172                // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      54: getstatic     #23                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      57: invokevirtual #174                // Method akka/stream/impl/Stages$DefaultAttributes$.javaCollector:()Lakka/stream/Attributes;
      60: invokevirtual #178                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      63: areturn

  public <T, R> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<R>> javaCollectorParallelUnordered(int, scala.Function0<java.util.stream.Collector<T, ?, R>>);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     13
       5: aload_0
       6: aload_2
       7: invokevirtual #183                // Method javaCollector:(Lscala/Function0;)Lakka/stream/scaladsl/Sink;
      10: goto          49
      13: getstatic     #97                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
      16: getstatic     #188                // Field akka/stream/scaladsl/GraphDSL$.MODULE$:Lakka/stream/scaladsl/GraphDSL$;
      19: getstatic     #97                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
      22: invokevirtual #159                // Method akka/stream/scaladsl/Sink$.head:()Lakka/stream/scaladsl/Sink;
      25: new           #190                // class akka/stream/scaladsl/StreamConverters$$anonfun$javaCollectorParallelUnordered$1
      28: dup
      29: iload_1
      30: aload_2
      31: invokespecial #193                // Method akka/stream/scaladsl/StreamConverters$$anonfun$javaCollectorParallelUnordered$1."<init>":(ILscala/Function0;)V
      34: invokevirtual #197                // Method akka/stream/scaladsl/GraphDSL$.create:(Lakka/stream/Graph;Lscala/Function1;)Lakka/stream/Graph;
      37: invokevirtual #119                // Method akka/stream/scaladsl/Sink$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      40: getstatic     #23                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      43: invokevirtual #199                // Method akka/stream/impl/Stages$DefaultAttributes$.javaCollectorParallelUnordered:()Lakka/stream/Attributes;
      46: invokevirtual #178                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      49: areturn

  public <T> akka.stream.scaladsl.Sink<T, java.util.stream.Stream<T>> asJavaStream();
    Code:
       0: getstatic     #97                 // Field akka/stream/scaladsl/Sink$.MODULE$:Lakka/stream/scaladsl/Sink$;
       3: new           #203                // class akka/stream/impl/QueueSink
       6: dup
       7: invokespecial #204                // Method akka/stream/impl/QueueSink."<init>":()V
      10: invokevirtual #119                // Method akka/stream/scaladsl/Sink$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      13: new           #206                // class akka/stream/scaladsl/StreamConverters$$anonfun$asJavaStream$1
      16: dup
      17: invokespecial #207                // Method akka/stream/scaladsl/StreamConverters$$anonfun$asJavaStream$1."<init>":()V
      20: invokevirtual #211                // Method akka/stream/scaladsl/Sink.mapMaterializedValue:(Lscala/Function1;)Lakka/stream/scaladsl/Sink;
      23: getstatic     #23                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      26: invokevirtual #213                // Method akka/stream/impl/Stages$DefaultAttributes$.asJavaStream:()Lakka/stream/Attributes;
      29: invokevirtual #178                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      32: areturn

  public <T, S extends java.util.stream.BaseStream<T, S>> akka.stream.scaladsl.Source<T, akka.NotUsed> fromJavaStream(scala.Function0<java.util.stream.BaseStream<T, S>>);
    Code:
       0: getstatic     #32                 // Field akka/stream/scaladsl/Source$.MODULE$:Lakka/stream/scaladsl/Source$;
       3: new           #217                // class akka/stream/scaladsl/StreamConverters$$anonfun$fromJavaStream$1
       6: dup
       7: aload_1
       8: invokespecial #218                // Method akka/stream/scaladsl/StreamConverters$$anonfun$fromJavaStream$1."<init>":(Lscala/Function0;)V
      11: invokevirtual #221                // Method akka/stream/scaladsl/Source$.fromIterator:(Lscala/Function0;)Lakka/stream/scaladsl/Source;
      14: getstatic     #23                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      17: invokevirtual #223                // Method akka/stream/impl/Stages$DefaultAttributes$.fromJavaStream:()Lakka/stream/Attributes;
      20: invokevirtual #226                // Method akka/stream/scaladsl/Source.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Source;
      23: areturn

  private akka.stream.scaladsl.StreamConverters$();
    Code:
       0: aload_0
       1: invokespecial #228                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #230                // Field MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       8: return
}
