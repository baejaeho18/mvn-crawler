Compiled from "Framing.scala"
public final class akka.stream.scaladsl.Framing$$anonfun$2 extends scala.runtime.AbstractFunction2<akka.util.ByteIterator, java.lang.Object, java.lang.Object> implements scala.Serializable {
  public static final long serialVersionUID;

  public final int apply(akka.util.ByteIterator, int);
    Code:
       0: iload_2
       1: iconst_1
       2: isub
       3: iconst_3
       4: ishl
       5: istore_3
       6: lconst_1
       7: iload_2
       8: iconst_3
       9: ishl
      10: lshl
      11: lconst_1
      12: lsub
      13: l2i
      14: istore        4
      16: iload_2
      17: istore        5
      19: iconst_0
      20: istore        6
      22: iload         5
      24: iconst_0
      25: if_icmple     59
      28: iload         6
      30: bipush        8
      32: iushr
      33: istore        6
      35: iload         6
      37: aload_1
      38: invokevirtual #22                 // Method akka/util/ByteIterator.next:()B
      41: sipush        255
      44: iand
      45: iload_3
      46: ishl
      47: iadd
      48: istore        6
      50: iload         5
      52: iconst_1
      53: isub
      54: istore        5
      56: goto          22
      59: iload         6
      61: iload         4
      63: iand
      64: ireturn

  public final java.lang.Object apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class akka/util/ByteIterator
       5: aload_2
       6: invokestatic  #39                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: invokevirtual #41                 // Method apply:(Lakka/util/ByteIterator;I)I
      12: invokestatic  #45                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      15: areturn

  public akka.stream.scaladsl.Framing$$anonfun$2();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method scala/runtime/AbstractFunction2."<init>":()V
       4: return
}
