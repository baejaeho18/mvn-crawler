Compiled from "StreamConverters.scala"
public final class akka.stream.scaladsl.StreamConverters {
  public static scala.concurrent.duration.FiniteDuration asOutputStream$default$1();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: invokevirtual #18                 // Method akka/stream/scaladsl/StreamConverters$.asOutputStream$default$1:()Lscala/concurrent/duration/FiniteDuration;
       6: areturn

  public static int fromInputStream$default$2();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: invokevirtual #22                 // Method akka/stream/scaladsl/StreamConverters$.fromInputStream$default$2:()I
       6: ireturn

  public static scala.concurrent.duration.FiniteDuration asInputStream$default$1();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: invokevirtual #25                 // Method akka/stream/scaladsl/StreamConverters$.asInputStream$default$1:()Lscala/concurrent/duration/FiniteDuration;
       6: areturn

  public static boolean fromOutputStream$default$2();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: invokevirtual #29                 // Method akka/stream/scaladsl/StreamConverters$.fromOutputStream$default$2:()Z
       6: ireturn

  public static <T, S extends java.util.stream.BaseStream<T, S>> akka.stream.scaladsl.Source<T, akka.NotUsed> fromJavaStream(scala.Function0<java.util.stream.BaseStream<T, S>>);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: aload_0
       4: invokevirtual #33                 // Method akka/stream/scaladsl/StreamConverters$.fromJavaStream:(Lscala/Function0;)Lakka/stream/scaladsl/Source;
       7: areturn

  public static <T> akka.stream.scaladsl.Sink<T, java.util.stream.Stream<T>> asJavaStream();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: invokevirtual #37                 // Method akka/stream/scaladsl/StreamConverters$.asJavaStream:()Lakka/stream/scaladsl/Sink;
       6: areturn

  public static <T, R> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<R>> javaCollectorParallelUnordered(int, scala.Function0<java.util.stream.Collector<T, ?, R>>);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: iload_0
       4: aload_1
       5: invokevirtual #41                 // Method akka/stream/scaladsl/StreamConverters$.javaCollectorParallelUnordered:(ILscala/Function0;)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static <T, R> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<R>> javaCollector(scala.Function0<java.util.stream.Collector<T, ?, R>>);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: aload_0
       4: invokevirtual #45                 // Method akka/stream/scaladsl/StreamConverters$.javaCollector:(Lscala/Function0;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static akka.stream.scaladsl.Sink<akka.util.ByteString, java.io.InputStream> asInputStream(scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: aload_0
       4: invokevirtual #49                 // Method akka/stream/scaladsl/StreamConverters$.asInputStream:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/Sink;
       7: areturn

  public static akka.stream.scaladsl.Sink<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> fromOutputStream(scala.Function0<java.io.OutputStream>, boolean);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: aload_0
       4: iload_1
       5: invokevirtual #53                 // Method akka/stream/scaladsl/StreamConverters$.fromOutputStream:(Lscala/Function0;Z)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static akka.stream.scaladsl.Source<akka.util.ByteString, java.io.OutputStream> asOutputStream(scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: aload_0
       4: invokevirtual #57                 // Method akka/stream/scaladsl/StreamConverters$.asOutputStream:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/Source;
       7: areturn

  public static akka.stream.scaladsl.Source<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> fromInputStream(scala.Function0<java.io.InputStream>, int);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/StreamConverters$.MODULE$:Lakka/stream/scaladsl/StreamConverters$;
       3: aload_0
       4: iload_1
       5: invokevirtual #61                 // Method akka/stream/scaladsl/StreamConverters$.fromInputStream:(Lscala/Function0;I)Lakka/stream/scaladsl/Source;
       8: areturn
}
