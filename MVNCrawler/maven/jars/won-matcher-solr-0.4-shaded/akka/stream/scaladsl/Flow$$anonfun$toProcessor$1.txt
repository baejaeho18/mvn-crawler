Compiled from "Flow.scala"
public final class akka.stream.scaladsl.Flow$$anonfun$toProcessor$1 extends scala.runtime.AbstractFunction1<scala.Tuple2<org.reactivestreams.Subscriber<In>, org.reactivestreams.Publisher<Out>>, org.reactivestreams.Processor<In, Out>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final org.reactivestreams.Processor<In, Out> apply(scala.Tuple2<org.reactivestreams.Subscriber<In>, org.reactivestreams.Publisher<Out>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        39
       6: aload_2
       7: invokevirtual #25                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #27                 // class org/reactivestreams/Subscriber
      13: astore_3
      14: aload_2
      15: invokevirtual #30                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #32                 // class org/reactivestreams/Publisher
      21: astore        4
      23: new           #34                 // class akka/stream/scaladsl/Flow$$anonfun$toProcessor$1$$anon$1
      26: dup
      27: aload_0
      28: aload_3
      29: aload         4
      31: invokespecial #38                 // Method akka/stream/scaladsl/Flow$$anonfun$toProcessor$1$$anon$1."<init>":(Lakka/stream/scaladsl/Flow$$anonfun$toProcessor$1;Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V
      34: astore        5
      36: aload         5
      38: areturn
      39: new           #40                 // class scala/MatchError
      42: dup
      43: aload_2
      44: invokespecial #43                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class scala/Tuple2
       5: invokevirtual #54                 // Method apply:(Lscala/Tuple2;)Lorg/reactivestreams/Processor;
       8: areturn

  public akka.stream.scaladsl.Flow$$anonfun$toProcessor$1(akka.stream.scaladsl.Flow<In, Out, Mat>);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
