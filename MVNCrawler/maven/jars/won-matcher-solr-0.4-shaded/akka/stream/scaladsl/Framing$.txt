Compiled from "Framing.scala"
public final class akka.stream.scaladsl.Framing$ {
  public static final akka.stream.scaladsl.Framing$ MODULE$;

  private final scala.Function2<akka.util.ByteIterator, java.lang.Object, java.lang.Object> akka$stream$scaladsl$Framing$$bigEndianDecoder;

  private final scala.Function2<akka.util.ByteIterator, java.lang.Object, java.lang.Object> akka$stream$scaladsl$Framing$$littleEndianDecoder;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/scaladsl/Framing$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public akka.stream.scaladsl.Flow<akka.util.ByteString, akka.util.ByteString, akka.NotUsed> delimiter(akka.util.ByteString, int, boolean);
    Code:
       0: getstatic     #23                 // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #27                 // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: new           #29                 // class akka/stream/scaladsl/Framing$DelimiterFramingStage
       9: dup
      10: aload_1
      11: iload_2
      12: iload_3
      13: invokespecial #32                 // Method akka/stream/scaladsl/Framing$DelimiterFramingStage."<init>":(Lakka/util/ByteString;IZ)V
      16: invokevirtual #38                 // Method akka/stream/scaladsl/Flow.via:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      19: ldc           #40                 // String delimiterFraming
      21: invokevirtual #44                 // Method akka/stream/scaladsl/Flow.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Flow;
      24: areturn

  public boolean delimiter$default$3();
    Code:
       0: iconst_0
       1: ireturn

  public akka.stream.scaladsl.Flow<akka.util.ByteString, akka.util.ByteString, akka.NotUsed> lengthField(int, int, int, java.nio.ByteOrder);
    Code:
       0: getstatic     #59                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_1
       4: iconst_1
       5: if_icmplt     17
       8: iload_1
       9: iconst_4
      10: if_icmpgt     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: new           #61                 // class akka/stream/scaladsl/Framing$$anonfun$lengthField$1
      21: dup
      22: invokespecial #62                 // Method akka/stream/scaladsl/Framing$$anonfun$lengthField$1."<init>":()V
      25: invokevirtual #66                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      28: getstatic     #23                 // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
      31: invokevirtual #27                 // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
      34: new           #68                 // class akka/stream/scaladsl/Framing$LengthFieldFramingStage
      37: dup
      38: iload_1
      39: iload_2
      40: iload_3
      41: aload         4
      43: invokespecial #71                 // Method akka/stream/scaladsl/Framing$LengthFieldFramingStage."<init>":(IIILjava/nio/ByteOrder;)V
      46: invokevirtual #38                 // Method akka/stream/scaladsl/Flow.via:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      49: ldc           #73                 // String lengthFieldFraming
      51: invokevirtual #44                 // Method akka/stream/scaladsl/Flow.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Flow;
      54: areturn

  public int lengthField$default$2();
    Code:
       0: iconst_0
       1: ireturn

  public java.nio.ByteOrder lengthField$default$4();
    Code:
       0: getstatic     #86                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       3: areturn

  public akka.stream.scaladsl.BidiFlow<akka.util.ByteString, akka.util.ByteString, akka.util.ByteString, akka.util.ByteString, akka.NotUsed> simpleFramingProtocol(int);
    Code:
       0: getstatic     #93                 // Field akka/stream/scaladsl/BidiFlow$.MODULE$:Lakka/stream/scaladsl/BidiFlow$;
       3: aload_0
       4: iload_1
       5: invokevirtual #97                 // Method simpleFramingProtocolEncoder:(I)Lakka/stream/scaladsl/Flow;
       8: aload_0
       9: iload_1
      10: invokevirtual #100                // Method simpleFramingProtocolDecoder:(I)Lakka/stream/scaladsl/Flow;
      13: getstatic     #105                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      16: invokevirtual #109                // Method akka/stream/scaladsl/Keep$.left:()Lscala/Function2;
      19: invokevirtual #113                // Method akka/stream/scaladsl/BidiFlow$.fromFlowsMat:(Lakka/stream/Graph;Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/BidiFlow;
      22: areturn

  public akka.stream.scaladsl.Flow<akka.util.ByteString, akka.util.ByteString, akka.NotUsed> simpleFramingProtocolDecoder(int);
    Code:
       0: aload_0
       1: iconst_4
       2: iconst_0
       3: iload_1
       4: iconst_4
       5: iadd
       6: getstatic     #117                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       9: invokevirtual #119                // Method lengthField:(IIILjava/nio/ByteOrder;)Lakka/stream/scaladsl/Flow;
      12: new           #121                // class akka/stream/scaladsl/Framing$$anonfun$simpleFramingProtocolDecoder$1
      15: dup
      16: invokespecial #122                // Method akka/stream/scaladsl/Framing$$anonfun$simpleFramingProtocolDecoder$1."<init>":()V
      19: invokevirtual #126                // Method akka/stream/scaladsl/Flow.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #34                 // class akka/stream/scaladsl/Flow
      25: areturn

  public akka.stream.scaladsl.Flow<akka.util.ByteString, akka.util.ByteString, akka.NotUsed> simpleFramingProtocolEncoder(int);
    Code:
       0: getstatic     #23                 // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #27                 // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: new           #128                // class akka/stream/scaladsl/Framing$$anonfun$simpleFramingProtocolEncoder$1
       9: dup
      10: iload_1
      11: invokespecial #131                // Method akka/stream/scaladsl/Framing$$anonfun$simpleFramingProtocolEncoder$1."<init>":(I)V
      14: invokevirtual #135                // Method akka/stream/scaladsl/Flow.transform:(Lscala/Function0;)Lakka/stream/scaladsl/FlowOps;
      17: checkcast     #34                 // class akka/stream/scaladsl/Flow
      20: areturn

  public final scala.Function2<akka.util.ByteIterator, java.lang.Object, java.lang.Object> akka$stream$scaladsl$Framing$$bigEndianDecoder();
    Code:
       0: aload_0
       1: getfield      #137                // Field akka$stream$scaladsl$Framing$$bigEndianDecoder:Lscala/Function2;
       4: areturn

  public final scala.Function2<akka.util.ByteIterator, java.lang.Object, java.lang.Object> akka$stream$scaladsl$Framing$$littleEndianDecoder();
    Code:
       0: aload_0
       1: getfield      #139                // Field akka$stream$scaladsl$Framing$$littleEndianDecoder:Lscala/Function2;
       4: areturn

  private akka.stream.scaladsl.Framing$();
    Code:
       0: aload_0
       1: invokespecial #140                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #142                // Field MODULE$:Lakka/stream/scaladsl/Framing$;
       8: aload_0
       9: new           #144                // class akka/stream/scaladsl/Framing$$anonfun$1
      12: dup
      13: invokespecial #145                // Method akka/stream/scaladsl/Framing$$anonfun$1."<init>":()V
      16: putfield      #137                // Field akka$stream$scaladsl$Framing$$bigEndianDecoder:Lscala/Function2;
      19: aload_0
      20: new           #147                // class akka/stream/scaladsl/Framing$$anonfun$2
      23: dup
      24: invokespecial #148                // Method akka/stream/scaladsl/Framing$$anonfun$2."<init>":()V
      27: putfield      #139                // Field akka$stream$scaladsl$Framing$$littleEndianDecoder:Lscala/Function2;
      30: return
}
