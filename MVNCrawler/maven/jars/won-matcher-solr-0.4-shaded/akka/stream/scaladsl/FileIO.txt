Compiled from "FileIO.scala"
public final class akka.stream.scaladsl.FileIO {
  public static scala.collection.immutable.Set<java.nio.file.StandardOpenOption> toFile$default$2();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: invokevirtual #18                 // Method akka/stream/scaladsl/FileIO$.toFile$default$2:()Lscala/collection/immutable/Set;
       6: areturn

  public static int fromFile$default$2();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: invokevirtual #22                 // Method akka/stream/scaladsl/FileIO$.fromFile$default$2:()I
       6: ireturn

  public static int fromPath$default$2();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: invokevirtual #25                 // Method akka/stream/scaladsl/FileIO$.fromPath$default$2:()I
       6: ireturn

  public static scala.collection.immutable.Set<java.nio.file.StandardOpenOption> toPath$default$2();
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: invokevirtual #28                 // Method akka/stream/scaladsl/FileIO$.toPath$default$2:()Lscala/collection/immutable/Set;
       6: areturn

  public static akka.stream.scaladsl.Sink<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> toPath(java.nio.file.Path, scala.collection.immutable.Set<java.nio.file.StandardOpenOption>);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: aload_0
       4: aload_1
       5: invokevirtual #32                 // Method akka/stream/scaladsl/FileIO$.toPath:(Ljava/nio/file/Path;Lscala/collection/immutable/Set;)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static akka.stream.scaladsl.Sink<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> toFile(java.io.File, scala.collection.immutable.Set<java.nio.file.StandardOpenOption>);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: aload_0
       4: aload_1
       5: invokevirtual #36                 // Method akka/stream/scaladsl/FileIO$.toFile:(Ljava/io/File;Lscala/collection/immutable/Set;)Lakka/stream/scaladsl/Sink;
       8: areturn

  public static akka.stream.scaladsl.Source<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> fromPath(java.nio.file.Path, int);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: aload_0
       4: iload_1
       5: invokevirtual #40                 // Method akka/stream/scaladsl/FileIO$.fromPath:(Ljava/nio/file/Path;I)Lakka/stream/scaladsl/Source;
       8: areturn

  public static akka.stream.scaladsl.Source<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> fromFile(java.io.File, int);
    Code:
       0: getstatic     #16                 // Field akka/stream/scaladsl/FileIO$.MODULE$:Lakka/stream/scaladsl/FileIO$;
       3: aload_0
       4: iload_1
       5: invokevirtual #44                 // Method akka/stream/scaladsl/FileIO$.fromFile:(Ljava/io/File;I)Lakka/stream/scaladsl/Source;
       8: areturn
}
