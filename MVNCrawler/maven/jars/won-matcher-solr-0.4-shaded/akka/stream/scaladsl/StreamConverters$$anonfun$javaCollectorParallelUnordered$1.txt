Compiled from "StreamConverters.scala"
public final class akka.stream.scaladsl.StreamConverters$$anonfun$javaCollectorParallelUnordered$1 extends scala.runtime.AbstractFunction1<akka.stream.scaladsl.GraphDSL$Builder<scala.concurrent.Future<R>>, scala.Function1<akka.stream.SinkShape<R>, akka.stream.SinkShape<T>>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final int parallelism$1;

  public final scala.Function0 collectorFactory$2;

  public final scala.Function1<akka.stream.SinkShape<R>, akka.stream.SinkShape<T>> apply(akka.stream.scaladsl.GraphDSL$Builder<scala.concurrent.Future<R>>);
    Code:
       0: new           #25                 // class akka/stream/scaladsl/StreamConverters$$anonfun$javaCollectorParallelUnordered$1$$anonfun$apply$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #29                 // Method akka/stream/scaladsl/StreamConverters$$anonfun$javaCollectorParallelUnordered$1$$anonfun$apply$3."<init>":(Lakka/stream/scaladsl/StreamConverters$$anonfun$javaCollectorParallelUnordered$1;Lakka/stream/scaladsl/GraphDSL$Builder;)V
       9: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class akka/stream/scaladsl/GraphDSL$Builder
       5: invokevirtual #38                 // Method apply:(Lakka/stream/scaladsl/GraphDSL$Builder;)Lscala/Function1;
       8: areturn

  public akka.stream.scaladsl.StreamConverters$$anonfun$javaCollectorParallelUnordered$1(int, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field parallelism$1:I
       5: aload_0
       6: aload_2
       7: putfield      #45                 // Field collectorFactory$2:Lscala/Function0;
      10: aload_0
      11: invokespecial #48                 // Method scala/runtime/AbstractFunction1."<init>":()V
      14: return
}
