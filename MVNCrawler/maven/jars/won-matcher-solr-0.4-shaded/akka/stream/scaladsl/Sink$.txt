Compiled from "Sink.scala"
public final class akka.stream.scaladsl.Sink$ {
  public static final akka.stream.scaladsl.Sink$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/scaladsl/Sink$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public <T> akka.stream.SinkShape<T> shape(java.lang.String);
    Code:
       0: new           #16                 // class akka/stream/SinkShape
       3: dup
       4: getstatic     #21                 // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
       7: new           #23                 // class scala/collection/mutable/StringBuilder
      10: dup
      11: invokespecial #24                 // Method scala/collection/mutable/StringBuilder."<init>":()V
      14: aload_1
      15: invokevirtual #28                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      18: ldc           #30                 // String .in
      20: invokevirtual #28                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      23: invokevirtual #34                 // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #38                 // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      29: invokespecial #41                 // Method akka/stream/SinkShape."<init>":(Lakka/stream/Inlet;)V
      32: areturn

  public <T, M> akka.stream.scaladsl.Sink<T, M> fromGraph(akka.stream.Graph<akka.stream.SinkShape<T>, M>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #48                 // class akka/stream/scaladsl/Sink
       6: ifeq          20
       9: aload_2
      10: checkcast     #48                 // class akka/stream/scaladsl/Sink
      13: astore_3
      14: aload_3
      15: astore        4
      17: goto          58
      20: aload_2
      21: instanceof    #50                 // class akka/stream/javadsl/Sink
      24: ifeq          43
      27: aload_2
      28: checkcast     #50                 // class akka/stream/javadsl/Sink
      31: astore        5
      33: aload         5
      35: invokevirtual #54                 // Method akka/stream/javadsl/Sink.asScala:()Lakka/stream/scaladsl/Sink;
      38: astore        4
      40: goto          58
      43: new           #48                 // class akka/stream/scaladsl/Sink
      46: dup
      47: aload_2
      48: invokeinterface #60,  1           // InterfaceMethod akka/stream/Graph.module:()Lakka/stream/impl/StreamLayout$Module;
      53: invokespecial #63                 // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      56: astore        4
      58: aload         4
      60: areturn

  public <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> fromSubscriber(org.reactivestreams.Subscriber<T>);
    Code:
       0: new           #48                 // class akka/stream/scaladsl/Sink
       3: dup
       4: new           #69                 // class akka/stream/impl/SubscriberSink
       7: dup
       8: aload_1
       9: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      12: invokevirtual #78                 // Method akka/stream/impl/Stages$DefaultAttributes$.subscriberSink:()Lakka/stream/Attributes;
      15: aload_0
      16: ldc           #80                 // String SubscriberSink
      18: invokevirtual #82                 // Method shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      21: invokespecial #85                 // Method akka/stream/impl/SubscriberSink."<init>":(Lorg/reactivestreams/Subscriber;Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      24: invokespecial #63                 // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      27: areturn

  public <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> cancelled();
    Code:
       0: new           #48                 // class akka/stream/scaladsl/Sink
       3: dup
       4: new           #90                 // class akka/stream/impl/CancelSink
       7: dup
       8: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      11: invokevirtual #93                 // Method akka/stream/impl/Stages$DefaultAttributes$.cancelledSink:()Lakka/stream/Attributes;
      14: aload_0
      15: ldc           #95                 // String CancelledSink
      17: invokevirtual #82                 // Method shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      20: invokespecial #98                 // Method akka/stream/impl/CancelSink."<init>":(Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      23: invokespecial #63                 // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      26: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<T>> head();
    Code:
       0: aload_0
       1: new           #101                // class akka/stream/impl/HeadOptionStage
       4: dup
       5: invokespecial #102                // Method akka/stream/impl/HeadOptionStage."<init>":()V
       8: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      11: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      14: invokevirtual #107                // Method akka/stream/impl/Stages$DefaultAttributes$.headSink:()Lakka/stream/Attributes;
      17: invokevirtual #111                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      20: new           #113                // class akka/stream/scaladsl/Sink$$anonfun$head$1
      23: dup
      24: invokespecial #114                // Method akka/stream/scaladsl/Sink$$anonfun$head$1."<init>":()V
      27: invokevirtual #118                // Method akka/stream/scaladsl/Sink.mapMaterializedValue:(Lscala/Function1;)Lakka/stream/scaladsl/Sink;
      30: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<scala.Option<T>>> headOption();
    Code:
       0: aload_0
       1: new           #101                // class akka/stream/impl/HeadOptionStage
       4: dup
       5: invokespecial #102                // Method akka/stream/impl/HeadOptionStage."<init>":()V
       8: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      11: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      14: invokevirtual #122                // Method akka/stream/impl/Stages$DefaultAttributes$.headOptionSink:()Lakka/stream/Attributes;
      17: invokevirtual #111                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      20: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<T>> last();
    Code:
       0: aload_0
       1: new           #125                // class akka/stream/impl/LastOptionStage
       4: dup
       5: invokespecial #126                // Method akka/stream/impl/LastOptionStage."<init>":()V
       8: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      11: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      14: invokevirtual #129                // Method akka/stream/impl/Stages$DefaultAttributes$.lastSink:()Lakka/stream/Attributes;
      17: invokevirtual #111                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      20: new           #131                // class akka/stream/scaladsl/Sink$$anonfun$last$1
      23: dup
      24: invokespecial #132                // Method akka/stream/scaladsl/Sink$$anonfun$last$1."<init>":()V
      27: invokevirtual #118                // Method akka/stream/scaladsl/Sink.mapMaterializedValue:(Lscala/Function1;)Lakka/stream/scaladsl/Sink;
      30: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<scala.Option<T>>> lastOption();
    Code:
       0: aload_0
       1: new           #125                // class akka/stream/impl/LastOptionStage
       4: dup
       5: invokespecial #126                // Method akka/stream/impl/LastOptionStage."<init>":()V
       8: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      11: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      14: invokevirtual #136                // Method akka/stream/impl/Stages$DefaultAttributes$.lastOptionSink:()Lakka/stream/Attributes;
      17: invokevirtual #111                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      20: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<scala.collection.immutable.Seq<T>>> seq();
    Code:
       0: aload_0
       1: new           #139                // class akka/stream/impl/SeqStage
       4: dup
       5: invokespecial #140                // Method akka/stream/impl/SeqStage."<init>":()V
       8: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      11: areturn

  public <T> akka.stream.scaladsl.Sink<T, org.reactivestreams.Publisher<T>> asPublisher(boolean);
    Code:
       0: new           #48                 // class akka/stream/scaladsl/Sink
       3: dup
       4: iload_1
       5: ifeq          30
       8: new           #144                // class akka/stream/impl/FanoutPublisherSink
      11: dup
      12: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      15: invokevirtual #147                // Method akka/stream/impl/Stages$DefaultAttributes$.fanoutPublisherSink:()Lakka/stream/Attributes;
      18: aload_0
      19: ldc           #149                // String FanoutPublisherSink
      21: invokevirtual #82                 // Method shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      24: invokespecial #150                // Method akka/stream/impl/FanoutPublisherSink."<init>":(Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      27: goto          49
      30: new           #152                // class akka/stream/impl/PublisherSink
      33: dup
      34: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      37: invokevirtual #155                // Method akka/stream/impl/Stages$DefaultAttributes$.publisherSink:()Lakka/stream/Attributes;
      40: aload_0
      41: ldc           #157                // String PublisherSink
      43: invokevirtual #82                 // Method shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      46: invokespecial #158                // Method akka/stream/impl/PublisherSink."<init>":(Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      49: invokespecial #63                 // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      52: areturn

  public akka.stream.scaladsl.Sink<java.lang.Object, scala.concurrent.Future<akka.Done>> ignore();
    Code:
       0: new           #48                 // class akka/stream/scaladsl/Sink
       3: dup
       4: new           #165                // class akka/stream/impl/SinkholeSink
       7: dup
       8: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      11: invokevirtual #168                // Method akka/stream/impl/Stages$DefaultAttributes$.ignoreSink:()Lakka/stream/Attributes;
      14: aload_0
      15: ldc           #170                // String SinkholeSink
      17: invokevirtual #82                 // Method shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      20: invokespecial #171                // Method akka/stream/impl/SinkholeSink."<init>":(Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      23: invokespecial #63                 // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      26: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<akka.Done>> foreach(scala.Function1<T, scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #177                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #180                // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: aload_1
       7: invokevirtual #186                // Method akka/stream/scaladsl/Flow.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      10: checkcast     #182                // class akka/stream/scaladsl/Flow
      13: aload_0
      14: invokevirtual #188                // Method ignore:()Lakka/stream/scaladsl/Sink;
      17: getstatic     #193                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      20: invokevirtual #197                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      23: invokevirtual #201                // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      26: ldc           #203                // String foreachSink
      28: invokevirtual #207                // Method akka/stream/scaladsl/Sink.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Sink;
      31: areturn

  public <T, U> akka.stream.scaladsl.Sink<T, akka.NotUsed> combine(akka.stream.scaladsl.Sink<U, ?>, akka.stream.scaladsl.Sink<U, ?>, scala.collection.Seq<akka.stream.scaladsl.Sink<U, ?>>, scala.Function1<java.lang.Object, akka.stream.Graph<akka.stream.UniformFanOutShape<T, U>, akka.NotUsed>>);
    Code:
       0: aload_0
       1: getstatic     #216                // Field akka/stream/scaladsl/GraphDSL$.MODULE$:Lakka/stream/scaladsl/GraphDSL$;
       4: new           #218                // class akka/stream/scaladsl/Sink$$anonfun$combine$1
       7: dup
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokespecial #221                // Method akka/stream/scaladsl/Sink$$anonfun$combine$1."<init>":(Lakka/stream/scaladsl/Sink;Lakka/stream/scaladsl/Sink;Lscala/collection/Seq;Lscala/Function1;)V
      16: invokevirtual #225                // Method akka/stream/scaladsl/GraphDSL$.create:(Lscala/Function1;)Lakka/stream/Graph;
      19: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      22: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<akka.Done>> foreachParallel(int, scala.Function1<T, scala.runtime.BoxedUnit>, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #177                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #180                // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: iload_1
       7: new           #235                // class akka/stream/scaladsl/Sink$$anonfun$foreachParallel$1
      10: dup
      11: aload_2
      12: aload_3
      13: invokespecial #238                // Method akka/stream/scaladsl/Sink$$anonfun$foreachParallel$1."<init>":(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      16: invokevirtual #242                // Method akka/stream/scaladsl/Flow.mapAsyncUnordered:(ILscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      19: checkcast     #182                // class akka/stream/scaladsl/Flow
      22: aload_0
      23: invokevirtual #188                // Method ignore:()Lakka/stream/scaladsl/Sink;
      26: getstatic     #193                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      29: invokevirtual #197                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      32: invokevirtual #201                // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      35: areturn

  public <U, T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<U>> fold(U, scala.Function2<U, T, U>);
    Code:
       0: getstatic     #177                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #180                // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: aload_1
       7: aload_2
       8: invokevirtual #251                // Method akka/stream/scaladsl/Flow.fold:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      11: checkcast     #182                // class akka/stream/scaladsl/Flow
      14: aload_0
      15: invokevirtual #253                // Method head:()Lakka/stream/scaladsl/Sink;
      18: getstatic     #193                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      21: invokevirtual #197                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      24: invokevirtual #201                // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      27: ldc           #255                // String foldSink
      29: invokevirtual #207                // Method akka/stream/scaladsl/Sink.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Sink;
      32: areturn

  public <U, T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<U>> foldAsync(U, scala.Function2<U, T, scala.concurrent.Future<U>>);
    Code:
       0: getstatic     #177                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #180                // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: aload_1
       7: aload_2
       8: invokevirtual #261                // Method akka/stream/scaladsl/Flow.foldAsync:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      11: checkcast     #182                // class akka/stream/scaladsl/Flow
      14: aload_0
      15: invokevirtual #253                // Method head:()Lakka/stream/scaladsl/Sink;
      18: getstatic     #193                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      21: invokevirtual #197                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      24: invokevirtual #201                // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      27: ldc_w         #263                // String foldAsyncSink
      30: invokevirtual #207                // Method akka/stream/scaladsl/Sink.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Sink;
      33: areturn

  public <T> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<T>> reduce(scala.Function2<T, T, T>);
    Code:
       0: getstatic     #177                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #180                // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: aload_1
       7: invokevirtual #268                // Method akka/stream/scaladsl/Flow.reduce:(Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      10: checkcast     #182                // class akka/stream/scaladsl/Flow
      13: aload_0
      14: invokevirtual #253                // Method head:()Lakka/stream/scaladsl/Sink;
      17: getstatic     #193                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      20: invokevirtual #197                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
      23: invokevirtual #201                // Method akka/stream/scaladsl/Flow.toMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Sink;
      26: ldc_w         #270                // String reduceSink
      29: invokevirtual #207                // Method akka/stream/scaladsl/Sink.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Sink;
      32: areturn

  public <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> onComplete(scala.Function1<scala.util.Try<akka.Done>, scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #177                // Field akka/stream/scaladsl/Flow$.MODULE$:Lakka/stream/scaladsl/Flow$;
       3: invokevirtual #180                // Method akka/stream/scaladsl/Flow$.apply:()Lakka/stream/scaladsl/Flow;
       6: aload_0
       7: aload_1
       8: invokespecial #275                // Method newOnCompleteStage$1:(Lscala/Function1;)Lakka/stream/stage/GraphStage;
      11: invokevirtual #279                // Method akka/stream/scaladsl/Flow.via:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      14: aload_0
      15: invokevirtual #188                // Method ignore:()Lakka/stream/scaladsl/Sink;
      18: invokevirtual #282                // Method akka/stream/scaladsl/Flow.to:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      21: ldc_w         #284                // String onCompleteSink
      24: invokevirtual #207                // Method akka/stream/scaladsl/Sink.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Sink;
      27: areturn

  public <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> actorRef(akka.actor.ActorRef, java.lang.Object);
    Code:
       0: new           #48                 // class akka/stream/scaladsl/Sink
       3: dup
       4: new           #289                // class akka/stream/impl/ActorRefSink
       7: dup
       8: aload_1
       9: aload_2
      10: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      13: invokevirtual #292                // Method akka/stream/impl/Stages$DefaultAttributes$.actorRefSink:()Lakka/stream/Attributes;
      16: aload_0
      17: ldc_w         #294                // String ActorRefSink
      20: invokevirtual #82                 // Method shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      23: invokespecial #297                // Method akka/stream/impl/ActorRefSink."<init>":(Lakka/actor/ActorRef;Ljava/lang/Object;Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      26: invokespecial #63                 // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      29: areturn

  public <T> akka.stream.scaladsl.Sink<T, akka.NotUsed> actorRefWithAck(akka.actor.ActorRef, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function1<java.lang.Throwable, java.lang.Object>);
    Code:
       0: aload_0
       1: new           #304                // class akka/stream/impl/ActorRefBackpressureSinkStage
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokespecial #307                // Method akka/stream/impl/ActorRefBackpressureSinkStage."<init>":(Lakka/actor/ActorRef;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)V
      15: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      18: areturn

  public <T> scala.Function1<java.lang.Throwable, java.lang.Object> actorRefWithAck$default$5();
    Code:
       0: getstatic     #317                // Field akka/actor/Status$Failure$.MODULE$:Lakka/actor/Status$Failure$;
       3: areturn

  public <T> akka.stream.scaladsl.Sink<T, akka.actor.ActorRef> actorSubscriber(akka.actor.Props);
    Code:
       0: getstatic     #324                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: ldc_w         #326                // class akka/stream/actor/ActorSubscriber
       6: aload_1
       7: invokevirtual #332                // Method akka/actor/Props.actorClass:()Ljava/lang/Class;
      10: invokevirtual #338                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      13: new           #340                // class akka/stream/scaladsl/Sink$$anonfun$actorSubscriber$1
      16: dup
      17: invokespecial #341                // Method akka/stream/scaladsl/Sink$$anonfun$actorSubscriber$1."<init>":()V
      20: invokevirtual #345                // Method scala/Predef$.require:(ZLscala/Function0;)V
      23: new           #48                 // class akka/stream/scaladsl/Sink
      26: dup
      27: new           #347                // class akka/stream/impl/ActorSubscriberSink
      30: dup
      31: aload_1
      32: getstatic     #74                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      35: invokevirtual #350                // Method akka/stream/impl/Stages$DefaultAttributes$.actorSubscriberSink:()Lakka/stream/Attributes;
      38: aload_0
      39: ldc_w         #352                // String ActorSubscriberSink
      42: invokevirtual #82                 // Method shape:(Ljava/lang/String;)Lakka/stream/SinkShape;
      45: invokespecial #355                // Method akka/stream/impl/ActorSubscriberSink."<init>":(Lakka/actor/Props;Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      48: invokespecial #63                 // Method akka/stream/scaladsl/Sink."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      51: areturn

  public <T> akka.stream.scaladsl.Sink<T, akka.stream.scaladsl.SinkQueueWithCancel<T>> queue();
    Code:
       0: aload_0
       1: new           #360                // class akka/stream/impl/QueueSink
       4: dup
       5: invokespecial #361                // Method akka/stream/impl/QueueSink."<init>":()V
       8: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      11: areturn

  public <T, M> akka.stream.scaladsl.Sink<T, scala.concurrent.Future<M>> lazyInit(scala.Function1<T, scala.concurrent.Future<akka.stream.scaladsl.Sink<T, M>>>, scala.Function0<M>);
    Code:
       0: aload_0
       1: new           #365                // class akka/stream/impl/LazySink
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #368                // Method akka/stream/impl/LazySink."<init>":(Lscala/Function1;Lscala/Function0;)V
      10: invokevirtual #104                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Sink;
      13: areturn

  private final akka.stream.stage.GraphStage newOnCompleteStage$1(scala.Function1);
    Code:
       0: new           #373                // class akka/stream/scaladsl/Sink$$anon$1
       3: dup
       4: aload_1
       5: invokespecial #376                // Method akka/stream/scaladsl/Sink$$anon$1."<init>":(Lscala/Function1;)V
       8: areturn

  private akka.stream.scaladsl.Sink$();
    Code:
       0: aload_0
       1: invokespecial #378                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #380                // Field MODULE$:Lakka/stream/scaladsl/Sink$;
       8: return
}
