Compiled from "Flow.scala"
public final class akka.stream.scaladsl.FlowOps$$anonfun$zipWithGraph$1 extends scala.runtime.AbstractFunction1<akka.stream.scaladsl.GraphDSL$Builder<M>, scala.Function1<akka.stream.SourceShape<Out2>, akka.stream.FlowShape<Out, Out3>>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.Function2 combine$2;

  public final scala.Function1<akka.stream.SourceShape<Out2>, akka.stream.FlowShape<Out, Out3>> apply(akka.stream.scaladsl.GraphDSL$Builder<M>);
    Code:
       0: new           #23                 // class akka/stream/scaladsl/FlowOps$$anonfun$zipWithGraph$1$$anonfun$apply$9
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #27                 // Method akka/stream/scaladsl/FlowOps$$anonfun$zipWithGraph$1$$anonfun$apply$9."<init>":(Lakka/stream/scaladsl/FlowOps$$anonfun$zipWithGraph$1;Lakka/stream/scaladsl/GraphDSL$Builder;)V
       9: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class akka/stream/scaladsl/GraphDSL$Builder
       5: invokevirtual #36                 // Method apply:(Lakka/stream/scaladsl/GraphDSL$Builder;)Lscala/Function1;
       8: areturn

  public akka.stream.scaladsl.FlowOps$$anonfun$zipWithGraph$1(akka.stream.scaladsl.FlowOps<Out, Mat>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #41                 // Field combine$2:Lscala/Function2;
       5: aload_0
       6: invokespecial #44                 // Method scala/runtime/AbstractFunction1."<init>":()V
       9: return
}
