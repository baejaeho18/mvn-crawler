Compiled from "UnzipWithApply.scala"
public interface akka.stream.scaladsl.UnzipWithApply {
  public abstract <In, A1, A2> akka.stream.scaladsl.UnzipWith2<In, A1, A2> apply(scala.Function1<In, scala.Tuple2<A1, A2>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator2<java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3> akka.stream.scaladsl.UnzipWith3<In, A1, A2, A3> apply(scala.Function1<In, scala.Tuple3<A1, A2, A3>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator3<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4> akka.stream.scaladsl.UnzipWith4<In, A1, A2, A3, A4> apply(scala.Function1<In, scala.Tuple4<A1, A2, A3, A4>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator4<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5> akka.stream.scaladsl.UnzipWith5<In, A1, A2, A3, A4, A5> apply(scala.Function1<In, scala.Tuple5<A1, A2, A3, A4, A5>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator5<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6> akka.stream.scaladsl.UnzipWith6<In, A1, A2, A3, A4, A5, A6> apply(scala.Function1<In, scala.Tuple6<A1, A2, A3, A4, A5, A6>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator6<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7> akka.stream.scaladsl.UnzipWith7<In, A1, A2, A3, A4, A5, A6, A7> apply(scala.Function1<In, scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator7<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8> akka.stream.scaladsl.UnzipWith8<In, A1, A2, A3, A4, A5, A6, A7, A8> apply(scala.Function1<In, scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator8<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9> akka.stream.scaladsl.UnzipWith9<In, A1, A2, A3, A4, A5, A6, A7, A8, A9> apply(scala.Function1<In, scala.Tuple9<A1, A2, A3, A4, A5, A6, A7, A8, A9>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator9<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10> akka.stream.scaladsl.UnzipWith10<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10> apply(scala.Function1<In, scala.Tuple10<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator10<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11> akka.stream.scaladsl.UnzipWith11<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11> apply(scala.Function1<In, scala.Tuple11<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator11<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12> akka.stream.scaladsl.UnzipWith12<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12> apply(scala.Function1<In, scala.Tuple12<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator12<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13> akka.stream.scaladsl.UnzipWith13<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13> apply(scala.Function1<In, scala.Tuple13<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator13<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14> akka.stream.scaladsl.UnzipWith14<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14> apply(scala.Function1<In, scala.Tuple14<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator14<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15> akka.stream.scaladsl.UnzipWith15<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15> apply(scala.Function1<In, scala.Tuple15<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator15<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16> akka.stream.scaladsl.UnzipWith16<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16> apply(scala.Function1<In, scala.Tuple16<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator16<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17> akka.stream.scaladsl.UnzipWith17<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17> apply(scala.Function1<In, scala.Tuple17<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator17<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18> akka.stream.scaladsl.UnzipWith18<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18> apply(scala.Function1<In, scala.Tuple18<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator18<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19> akka.stream.scaladsl.UnzipWith19<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19> apply(scala.Function1<In, scala.Tuple19<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator19<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);

  public abstract <In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20> akka.stream.scaladsl.UnzipWith20<In, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20> apply(scala.Function1<In, scala.Tuple20<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20>>, akka.stream.scaladsl.UnzipWithApply$UnzipWithCreator20<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>);
}
