Compiled from "Flow.scala"
public final class akka.stream.scaladsl.RunnableGraph<Mat> implements akka.stream.Graph<akka.stream.ClosedShape, Mat>, scala.Product, scala.Serializable {
  private final akka.stream.impl.StreamLayout$Module module;

  public static <Mat> scala.Option<akka.stream.impl.StreamLayout$Module> unapply(akka.stream.scaladsl.RunnableGraph<Mat>);
    Code:
       0: getstatic     #23                 // Field akka/stream/scaladsl/RunnableGraph$.MODULE$:Lakka/stream/scaladsl/RunnableGraph$;
       3: aload_0
       4: invokevirtual #25                 // Method akka/stream/scaladsl/RunnableGraph$.unapply:(Lakka/stream/scaladsl/RunnableGraph;)Lscala/Option;
       7: areturn

  public static <Mat> akka.stream.scaladsl.RunnableGraph<Mat> apply(akka.stream.impl.StreamLayout$Module);
    Code:
       0: getstatic     #23                 // Field akka/stream/scaladsl/RunnableGraph$.MODULE$:Lakka/stream/scaladsl/RunnableGraph$;
       3: aload_0
       4: invokevirtual #29                 // Method akka/stream/scaladsl/RunnableGraph$.apply:(Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/scaladsl/RunnableGraph;
       7: areturn

  public static <Mat> akka.stream.scaladsl.RunnableGraph<Mat> fromGraph(akka.stream.Graph<akka.stream.ClosedShape, Mat>);
    Code:
       0: getstatic     #23                 // Field akka/stream/scaladsl/RunnableGraph$.MODULE$:Lakka/stream/scaladsl/RunnableGraph$;
       3: aload_0
       4: invokevirtual #33                 // Method akka/stream/scaladsl/RunnableGraph$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/RunnableGraph;
       7: areturn

  public akka.stream.impl.StreamLayout$Module module();
    Code:
       0: aload_0
       1: getfield      #38                 // Field module:Lakka/stream/impl/StreamLayout$Module;
       4: areturn

  public akka.stream.ClosedShape$ shape();
    Code:
       0: getstatic     #47                 // Field akka/stream/ClosedShape$.MODULE$:Lakka/stream/ClosedShape$;
       3: areturn

  public <Mat2> akka.stream.scaladsl.RunnableGraph<Mat2> mapMaterializedValue(scala.Function1<Mat, Mat2>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #51                 // Method module:()Lakka/stream/impl/StreamLayout$Module;
       5: aload_1
       6: invokeinterface #57,  2           // InterfaceMethod akka/stream/impl/StreamLayout$Module.transformMaterializedValue:(Lscala/Function1;)Lakka/stream/impl/StreamLayout$Module;
      11: invokevirtual #60                 // Method copy:(Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/scaladsl/RunnableGraph;
      14: areturn

  public Mat run(akka.stream.Materializer);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #70                 // Method akka/stream/Materializer.materialize:(Lakka/stream/Graph;)Ljava/lang/Object;
       5: areturn

  public akka.stream.scaladsl.RunnableGraph<Mat> addAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #51                 // Method module:()Lakka/stream/impl/StreamLayout$Module;
       5: invokeinterface #78,  1           // InterfaceMethod akka/stream/impl/StreamLayout$Module.attributes:()Lakka/stream/Attributes;
      10: aload_1
      11: invokevirtual #84                 // Method akka/stream/Attributes.and:(Lakka/stream/Attributes;)Lakka/stream/Attributes;
      14: invokevirtual #87                 // Method withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/RunnableGraph;
      17: areturn

  public akka.stream.scaladsl.RunnableGraph<Mat> withAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/scaladsl/RunnableGraph
       3: dup
       4: aload_0
       5: invokevirtual #51                 // Method module:()Lakka/stream/impl/StreamLayout$Module;
       8: aload_1
       9: invokeinterface #92,  2           // InterfaceMethod akka/stream/impl/StreamLayout$Module.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/impl/StreamLayout$Module;
      14: invokespecial #96                 // Method "<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      17: areturn

  public akka.stream.scaladsl.RunnableGraph<Mat> named(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #103                // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
       4: aload_1
       5: invokevirtual #107                // Method akka/stream/Attributes$.name:(Ljava/lang/String;)Lakka/stream/Attributes;
       8: invokevirtual #109                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/RunnableGraph;
      11: areturn

  public akka.stream.scaladsl.RunnableGraph<Mat> async();
    Code:
       0: aload_0
       1: getstatic     #103                // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
       4: invokevirtual #115                // Method akka/stream/Attributes$.asyncBoundary:()Lakka/stream/Attributes;
       7: invokevirtual #109                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/RunnableGraph;
      10: areturn

  public <Mat> akka.stream.scaladsl.RunnableGraph<Mat> copy(akka.stream.impl.StreamLayout$Module);
    Code:
       0: new           #2                  // class akka/stream/scaladsl/RunnableGraph
       3: dup
       4: aload_1
       5: invokespecial #96                 // Method "<init>":(Lakka/stream/impl/StreamLayout$Module;)V
       8: areturn

  public <Mat> akka.stream.impl.StreamLayout$Module copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method module:()Lakka/stream/impl/StreamLayout$Module;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #120                // String RunnableGraph
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #126                // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #132                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #135                // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #138                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #51                 // Method module:()Lakka/stream/impl/StreamLayout$Module;
      39: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #147                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #151                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/scaladsl/RunnableGraph
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #147                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #159                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #147                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #163                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     71
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/scaladsl/RunnableGraph
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          75
      25: aload_1
      26: checkcast     #2                  // class akka/stream/scaladsl/RunnableGraph
      29: astore        4
      31: aload_0
      32: invokevirtual #51                 // Method module:()Lakka/stream/impl/StreamLayout$Module;
      35: aload         4
      37: invokevirtual #51                 // Method module:()Lakka/stream/impl/StreamLayout$Module;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          67
      55: aload         5
      57: invokevirtual #166                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  public akka.stream.Graph async();
    Code:
       0: aload_0
       1: invokevirtual #169                // Method async:()Lakka/stream/scaladsl/RunnableGraph;
       4: areturn

  public akka.stream.Graph named(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #172                // Method named:(Ljava/lang/String;)Lakka/stream/scaladsl/RunnableGraph;
       5: areturn

  public akka.stream.Graph withAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/RunnableGraph;
       5: areturn

  public akka.stream.Graph addAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/RunnableGraph;
       5: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #176                // Method shape:()Lakka/stream/ClosedShape$;
       4: areturn

  public akka.stream.scaladsl.RunnableGraph(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field module:Lakka/stream/impl/StreamLayout$Module;
       5: aload_0
       6: invokespecial #179                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #185                // Method akka/stream/Graph$class.$init$:(Lakka/stream/Graph;)V
      13: aload_0
      14: invokestatic  #190                // Method scala/Product$class.$init$:(Lscala/Product;)V
      17: getstatic     #195                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: aload_1
      21: invokeinterface #199,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.isRunnable:()Z
      26: invokevirtual #203                // Method scala/Predef$.require:(Z)V
      29: return
}
