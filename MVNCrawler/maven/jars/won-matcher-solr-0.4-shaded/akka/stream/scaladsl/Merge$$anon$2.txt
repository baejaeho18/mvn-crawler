Compiled from "Graph.scala"
public final class akka.stream.scaladsl.Merge$$anon$2 extends akka.stream.stage.GraphStageLogic implements akka.stream.stage.OutHandler {
  private final akka.stream.impl.FixedSizeBuffer$FixedSizeBuffer<akka.stream.Inlet<T>> akka$stream$scaladsl$Merge$$anon$$pendingQueue;

  private int akka$stream$scaladsl$Merge$$anon$$runningUpstreams;

  private final akka.stream.scaladsl.Merge $outer;

  public void onDownstreamFinish() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #28                 // Method akka/stream/stage/OutHandler$class.onDownstreamFinish:(Lakka/stream/stage/OutHandler;)V
       4: return

  public akka.stream.impl.FixedSizeBuffer$FixedSizeBuffer<akka.stream.Inlet<T>> akka$stream$scaladsl$Merge$$anon$$pendingQueue();
    Code:
       0: aload_0
       1: getfield      #33                 // Field akka$stream$scaladsl$Merge$$anon$$pendingQueue:Lakka/stream/impl/FixedSizeBuffer$FixedSizeBuffer;
       4: areturn

  public boolean akka$stream$scaladsl$Merge$$anon$$pending();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method akka$stream$scaladsl$Merge$$anon$$pendingQueue:()Lakka/stream/impl/FixedSizeBuffer$FixedSizeBuffer;
       4: invokevirtual #42                 // Method akka/stream/impl/FixedSizeBuffer$FixedSizeBuffer.nonEmpty:()Z
       7: ireturn

  public int akka$stream$scaladsl$Merge$$anon$$runningUpstreams();
    Code:
       0: aload_0
       1: getfield      #45                 // Field akka$stream$scaladsl$Merge$$anon$$runningUpstreams:I
       4: ireturn

  public void akka$stream$scaladsl$Merge$$anon$$runningUpstreams_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field akka$stream$scaladsl$Merge$$anon$$runningUpstreams:I
       5: return

  public boolean akka$stream$scaladsl$Merge$$anon$$upstreamsClosed();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method akka$stream$scaladsl$Merge$$anon$$runningUpstreams:()I
       4: iconst_0
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void preStart();
    Code:
       0: aload_0
       1: getfield      #54                 // Field $outer:Lakka/stream/scaladsl/Merge;
       4: invokevirtual #58                 // Method akka/stream/scaladsl/Merge.in:()Lscala/collection/immutable/IndexedSeq;
       7: new           #60                 // class akka/stream/scaladsl/Merge$$anon$2$$anonfun$preStart$2
      10: dup
      11: aload_0
      12: invokespecial #64                 // Method akka/stream/scaladsl/Merge$$anon$2$$anonfun$preStart$2."<init>":(Lakka/stream/scaladsl/Merge$$anon$2;)V
      15: invokeinterface #70,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.foreach:(Lscala/Function1;)V
      20: return

  private void dequeueAndDispatch();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method akka$stream$scaladsl$Merge$$anon$$pendingQueue:()Lakka/stream/impl/FixedSizeBuffer$FixedSizeBuffer;
       4: invokevirtual #75                 // Method akka/stream/impl/FixedSizeBuffer$FixedSizeBuffer.dequeue:()Ljava/lang/Object;
       7: checkcast     #77                 // class akka/stream/Inlet
      10: astore_2
      11: aload_2
      12: ifnonnull     38
      15: aload_0
      16: invokevirtual #79                 // Method akka$stream$scaladsl$Merge$$anon$$upstreamsClosed:()Z
      19: ifeq          32
      22: aload_0
      23: invokevirtual #82                 // Method completeStage:()V
      26: getstatic     #88                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      29: goto          94
      32: getstatic     #88                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      35: goto          94
      38: aload_0
      39: aload_2
      40: invokevirtual #92                 // Method isAvailable:(Lakka/stream/Inlet;)Z
      43: ifeq          0
      46: aload_0
      47: aload_0
      48: getfield      #54                 // Field $outer:Lakka/stream/scaladsl/Merge;
      51: invokevirtual #96                 // Method akka/stream/scaladsl/Merge.out:()Lakka/stream/Outlet;
      54: aload_0
      55: aload_2
      56: invokevirtual #100                // Method grab:(Lakka/stream/Inlet;)Ljava/lang/Object;
      59: invokevirtual #104                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      62: aload_0
      63: invokevirtual #79                 // Method akka$stream$scaladsl$Merge$$anon$$upstreamsClosed:()Z
      66: ifeq          86
      69: aload_0
      70: invokevirtual #106                // Method akka$stream$scaladsl$Merge$$anon$$pending:()Z
      73: ifne          86
      76: aload_0
      77: invokevirtual #82                 // Method completeStage:()V
      80: getstatic     #88                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      83: goto          94
      86: aload_0
      87: aload_2
      88: invokevirtual #110                // Method tryPull:(Lakka/stream/Inlet;)V
      91: getstatic     #88                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      94: pop
      95: return

  public void onPull();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method akka$stream$scaladsl$Merge$$anon$$pending:()Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #114                // Method dequeueAndDispatch:()V
      11: return

  public akka.stream.scaladsl.Merge akka$stream$scaladsl$Merge$$anon$$$outer();
    Code:
       0: aload_0
       1: getfield      #54                 // Field $outer:Lakka/stream/scaladsl/Merge;
       4: areturn

  public akka.stream.scaladsl.Merge$$anon$2(akka.stream.scaladsl.Merge<T>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #54                 // Field $outer:Lakka/stream/scaladsl/Merge;
      11: aload_0
      12: aload_1
      13: invokevirtual #121                // Method akka/stream/scaladsl/Merge.shape:()Lakka/stream/UniformFanInShape;
      16: invokespecial #124                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: invokestatic  #127                // Method akka/stream/stage/OutHandler$class.$init$:(Lakka/stream/stage/OutHandler;)V
      23: aload_0
      24: getstatic     #133                // Field akka/stream/impl/FixedSizeBuffer$.MODULE$:Lakka/stream/impl/FixedSizeBuffer$;
      27: aload_1
      28: invokevirtual #136                // Method akka/stream/scaladsl/Merge.inputPorts:()I
      31: invokevirtual #140                // Method akka/stream/impl/FixedSizeBuffer$.apply:(I)Lakka/stream/impl/FixedSizeBuffer$FixedSizeBuffer;
      34: putfield      #33                 // Field akka$stream$scaladsl$Merge$$anon$$pendingQueue:Lakka/stream/impl/FixedSizeBuffer$FixedSizeBuffer;
      37: aload_0
      38: aload_1
      39: invokevirtual #136                // Method akka/stream/scaladsl/Merge.inputPorts:()I
      42: putfield      #45                 // Field akka$stream$scaladsl$Merge$$anon$$runningUpstreams:I
      45: aload_1
      46: invokevirtual #58                 // Method akka/stream/scaladsl/Merge.in:()Lscala/collection/immutable/IndexedSeq;
      49: new           #142                // class akka/stream/scaladsl/Merge$$anon$2$$anonfun$9
      52: dup
      53: aload_0
      54: invokespecial #143                // Method akka/stream/scaladsl/Merge$$anon$2$$anonfun$9."<init>":(Lakka/stream/scaladsl/Merge$$anon$2;)V
      57: invokeinterface #70,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.foreach:(Lscala/Function1;)V
      62: aload_0
      63: aload_1
      64: invokevirtual #96                 // Method akka/stream/scaladsl/Merge.out:()Lakka/stream/Outlet;
      67: aload_0
      68: invokevirtual #147                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
      71: return
}
