Compiled from "Source.scala"
public final class akka.stream.scaladsl.Source$ {
  public static final akka.stream.scaladsl.Source$ MODULE$;

  private final akka.stream.scaladsl.Source<scala.runtime.Nothing$, akka.NotUsed> _empty;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/scaladsl/Source$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public <T> akka.stream.SourceShape<T> shape(java.lang.String);
    Code:
       0: new           #19                 // class akka/stream/SourceShape
       3: dup
       4: getstatic     #24                 // Field akka/stream/Outlet$.MODULE$:Lakka/stream/Outlet$;
       7: new           #26                 // class scala/collection/mutable/StringBuilder
      10: dup
      11: invokespecial #27                 // Method scala/collection/mutable/StringBuilder."<init>":()V
      14: aload_1
      15: invokevirtual #31                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      18: ldc           #33                 // String .out
      20: invokevirtual #31                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      23: invokevirtual #37                 // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #41                 // Method akka/stream/Outlet$.apply:(Ljava/lang/String;)Lakka/stream/Outlet;
      29: invokespecial #44                 // Method akka/stream/SourceShape."<init>":(Lakka/stream/Outlet;)V
      32: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> fromPublisher(org.reactivestreams.Publisher<T>);
    Code:
       0: new           #51                 // class akka/stream/scaladsl/Source
       3: dup
       4: new           #53                 // class akka/stream/impl/PublisherSource
       7: dup
       8: aload_1
       9: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      12: invokevirtual #62                 // Method akka/stream/impl/Stages$DefaultAttributes$.publisherSource:()Lakka/stream/Attributes;
      15: aload_0
      16: ldc           #64                 // String PublisherSource
      18: invokevirtual #66                 // Method shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      21: invokespecial #69                 // Method akka/stream/impl/PublisherSource."<init>":(Lorg/reactivestreams/Publisher;Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      24: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      27: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> fromIterator(scala.Function0<scala.collection.Iterator<T>>);
    Code:
       0: aload_0
       1: new           #78                 // class akka/stream/scaladsl/Source$$anon$1
       4: dup
       5: aload_1
       6: invokespecial #81                 // Method akka/stream/scaladsl/Source$$anon$1."<init>":(Lscala/Function0;)V
       9: invokevirtual #84                 // Method apply:(Lscala/collection/immutable/Iterable;)Lakka/stream/scaladsl/Source;
      12: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> cycle(scala.Function0<scala.collection.Iterator<T>>);
    Code:
       0: getstatic     #92                 // Field scala/collection/TraversableOnce$.MODULE$:Lscala/collection/TraversableOnce$;
       3: getstatic     #97                 // Field scala/package$.MODULE$:Lscala/package$;
       6: invokevirtual #101                // Method scala/package$.Iterator:()Lscala/collection/Iterator$;
       9: new           #103                // class akka/stream/scaladsl/Source$$anonfun$1
      12: dup
      13: aload_1
      14: invokespecial #104                // Method akka/stream/scaladsl/Source$$anonfun$1."<init>":(Lscala/Function0;)V
      17: invokevirtual #110                // Method scala/collection/Iterator$.continually:(Lscala/Function0;)Lscala/collection/Iterator;
      20: getstatic     #115                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      23: invokevirtual #119                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      26: invokevirtual #123                // Method scala/collection/TraversableOnce$.flattenTraversableOnce:(Lscala/collection/TraversableOnce;Lscala/Function1;)Lscala/collection/TraversableOnce$FlattenOps;
      29: invokevirtual #129                // Method scala/collection/TraversableOnce$FlattenOps.flatten:()Lscala/collection/Iterator;
      32: astore_2
      33: aload_0
      34: new           #131                // class akka/stream/scaladsl/Source$$anonfun$cycle$1
      37: dup
      38: aload_2
      39: invokespecial #134                // Method akka/stream/scaladsl/Source$$anonfun$cycle$1."<init>":(Lscala/collection/Iterator;)V
      42: invokevirtual #136                // Method fromIterator:(Lscala/Function0;)Lakka/stream/scaladsl/Source;
      45: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      48: invokevirtual #139                // Method akka/stream/impl/Stages$DefaultAttributes$.cycledSource:()Lakka/stream/Attributes;
      51: invokevirtual #143                // Method akka/stream/scaladsl/Source.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Source;
      54: areturn

  public <T, M> akka.stream.scaladsl.Source<T, M> fromGraph(akka.stream.Graph<akka.stream.SourceShape<T>, M>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #51                 // class akka/stream/scaladsl/Source
       6: ifeq          20
       9: aload_2
      10: checkcast     #51                 // class akka/stream/scaladsl/Source
      13: astore_3
      14: aload_3
      15: astore        4
      17: goto          58
      20: aload_2
      21: instanceof    #149                // class akka/stream/javadsl/Source
      24: ifeq          43
      27: aload_2
      28: checkcast     #149                // class akka/stream/javadsl/Source
      31: astore        5
      33: aload         5
      35: invokevirtual #153                // Method akka/stream/javadsl/Source.asScala:()Lakka/stream/scaladsl/Source;
      38: astore        4
      40: goto          58
      43: new           #51                 // class akka/stream/scaladsl/Source
      46: dup
      47: aload_2
      48: invokeinterface #159,  1          // InterfaceMethod akka/stream/Graph.module:()Lakka/stream/impl/StreamLayout$Module;
      53: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      56: astore        4
      58: aload         4
      60: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> apply(scala.collection.immutable.Iterable<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #165                // Method single:(Ljava/lang/Object;)Lakka/stream/scaladsl/Source;
       5: getstatic     #170                // Field akka/stream/impl/ConstantFun$.MODULE$:Lakka/stream/impl/ConstantFun$;
       8: invokevirtual #174                // Method akka/stream/impl/ConstantFun$.scalaIdentityFunction:()Lscala/Function1;
      11: invokevirtual #178                // Method akka/stream/scaladsl/Source.mapConcat:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #51                 // class akka/stream/scaladsl/Source
      17: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      20: invokevirtual #181                // Method akka/stream/impl/Stages$DefaultAttributes$.iterableSource:()Lakka/stream/Attributes;
      23: invokevirtual #143                // Method akka/stream/scaladsl/Source.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Source;
      26: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> fromFuture(scala.concurrent.Future<T>);
    Code:
       0: aload_0
       1: new           #187                // class akka/stream/impl/fusing/GraphStages$FutureSource
       4: dup
       5: aload_1
       6: invokespecial #190                // Method akka/stream/impl/fusing/GraphStages$FutureSource."<init>":(Lscala/concurrent/Future;)V
       9: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      12: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> fromCompletionStage(java.util.concurrent.CompletionStage<T>);
    Code:
       0: aload_0
       1: new           #187                // class akka/stream/impl/fusing/GraphStages$FutureSource
       4: dup
       5: getstatic     #201                // Field scala/compat/java8/FutureConverters$CompletionStageOps$.MODULE$:Lscala/compat/java8/FutureConverters$CompletionStageOps$;
       8: getstatic     #206                // Field scala/compat/java8/FutureConverters$.MODULE$:Lscala/compat/java8/FutureConverters$;
      11: aload_1
      12: invokevirtual #210                // Method scala/compat/java8/FutureConverters$.CompletionStageOps:(Ljava/util/concurrent/CompletionStage;)Ljava/util/concurrent/CompletionStage;
      15: invokevirtual #214                // Method scala/compat/java8/FutureConverters$CompletionStageOps$.toScala$extension:(Ljava/util/concurrent/CompletionStage;)Lscala/concurrent/Future;
      18: invokespecial #190                // Method akka/stream/impl/fusing/GraphStages$FutureSource."<init>":(Lscala/concurrent/Future;)V
      21: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      24: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.actor.Cancellable> tick(scala.concurrent.duration.FiniteDuration, scala.concurrent.duration.FiniteDuration, T);
    Code:
       0: aload_0
       1: new           #219                // class akka/stream/impl/fusing/GraphStages$TickSource
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #222                // Method akka/stream/impl/fusing/GraphStages$TickSource."<init>":(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Ljava/lang/Object;)V
      11: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      14: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> single(T);
    Code:
       0: aload_0
       1: new           #228                // class akka/stream/impl/fusing/GraphStages$SingleSource
       4: dup
       5: aload_1
       6: invokespecial #231                // Method akka/stream/impl/fusing/GraphStages$SingleSource."<init>":(Ljava/lang/Object;)V
       9: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      12: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> repeat(T);
    Code:
       0: new           #235                // class scala/Some
       3: dup
       4: new           #237                // class scala/Tuple2
       7: dup
       8: aload_1
       9: aload_1
      10: invokespecial #240                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      13: invokespecial #241                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: astore_2
      17: aload_0
      18: aload_1
      19: new           #243                // class akka/stream/scaladsl/Source$$anonfun$repeat$1
      22: dup
      23: aload_2
      24: invokespecial #246                // Method akka/stream/scaladsl/Source$$anonfun$repeat$1."<init>":(Lscala/Some;)V
      27: invokevirtual #250                // Method unfold:(Ljava/lang/Object;Lscala/Function1;)Lakka/stream/scaladsl/Source;
      30: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      33: invokevirtual #252                // Method akka/stream/impl/Stages$DefaultAttributes$.repeat:()Lakka/stream/Attributes;
      36: invokevirtual #143                // Method akka/stream/scaladsl/Source.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Source;
      39: areturn

  public <S, E> akka.stream.scaladsl.Source<E, akka.NotUsed> unfold(S, scala.Function1<S, scala.Option<scala.Tuple2<S, E>>>);
    Code:
       0: aload_0
       1: new           #256                // class akka/stream/scaladsl/Unfold
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #259                // Method akka/stream/scaladsl/Unfold."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      10: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      13: areturn

  public <S, E> akka.stream.scaladsl.Source<E, akka.NotUsed> unfoldAsync(S, scala.Function1<S, scala.concurrent.Future<scala.Option<scala.Tuple2<S, E>>>>);
    Code:
       0: aload_0
       1: new           #264                // class akka/stream/scaladsl/UnfoldAsync
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #265                // Method akka/stream/scaladsl/UnfoldAsync."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      10: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      13: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> empty();
    Code:
       0: aload_0
       1: getfield      #268                // Field _empty:Lakka/stream/scaladsl/Source;
       4: areturn

  public <T> akka.stream.scaladsl.Source<T, scala.concurrent.Promise<scala.Option<T>>> maybe();
    Code:
       0: new           #51                 // class akka/stream/scaladsl/Source
       3: dup
       4: new           #271                // class akka/stream/impl/MaybeSource
       7: dup
       8: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      11: invokevirtual #274                // Method akka/stream/impl/Stages$DefaultAttributes$.maybeSource:()Lakka/stream/Attributes;
      14: aload_0
      15: ldc_w         #276                // String MaybeSource
      18: invokevirtual #66                 // Method shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      21: invokespecial #279                // Method akka/stream/impl/MaybeSource."<init>":(Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      24: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      27: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.NotUsed> failed(java.lang.Throwable);
    Code:
       0: new           #51                 // class akka/stream/scaladsl/Source
       3: dup
       4: new           #53                 // class akka/stream/impl/PublisherSource
       7: dup
       8: new           #283                // class akka/stream/impl/ErrorPublisher
      11: dup
      12: aload_1
      13: ldc_w         #285                // String FailedSource
      16: invokespecial #288                // Method akka/stream/impl/ErrorPublisher."<init>":(Ljava/lang/Throwable;Ljava/lang/String;)V
      19: invokevirtual #291                // Method akka/stream/impl/ErrorPublisher.apply:()Lorg/reactivestreams/Publisher;
      22: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      25: invokevirtual #294                // Method akka/stream/impl/Stages$DefaultAttributes$.failedSource:()Lakka/stream/Attributes;
      28: aload_0
      29: ldc_w         #285                // String FailedSource
      32: invokevirtual #66                 // Method shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      35: invokespecial #69                 // Method akka/stream/impl/PublisherSource."<init>":(Lorg/reactivestreams/Publisher;Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      38: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      41: areturn

  public <T> akka.stream.scaladsl.Source<T, org.reactivestreams.Subscriber<T>> asSubscriber();
    Code:
       0: new           #51                 // class akka/stream/scaladsl/Source
       3: dup
       4: new           #299                // class akka/stream/impl/SubscriberSource
       7: dup
       8: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      11: invokevirtual #302                // Method akka/stream/impl/Stages$DefaultAttributes$.subscriberSource:()Lakka/stream/Attributes;
      14: aload_0
      15: ldc_w         #304                // String SubscriberSource
      18: invokevirtual #66                 // Method shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      21: invokespecial #305                // Method akka/stream/impl/SubscriberSource."<init>":(Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      24: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      27: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.actor.ActorRef> actorPublisher(akka.actor.Props);
    Code:
       0: getstatic     #115                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: ldc_w         #309                // class akka/stream/actor/ActorPublisher
       6: aload_1
       7: invokevirtual #315                // Method akka/actor/Props.actorClass:()Ljava/lang/Class;
      10: invokevirtual #321                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      13: new           #323                // class akka/stream/scaladsl/Source$$anonfun$actorPublisher$1
      16: dup
      17: invokespecial #324                // Method akka/stream/scaladsl/Source$$anonfun$actorPublisher$1."<init>":()V
      20: invokevirtual #328                // Method scala/Predef$.require:(ZLscala/Function0;)V
      23: new           #51                 // class akka/stream/scaladsl/Source
      26: dup
      27: new           #330                // class akka/stream/impl/ActorPublisherSource
      30: dup
      31: aload_1
      32: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      35: invokevirtual #333                // Method akka/stream/impl/Stages$DefaultAttributes$.actorPublisherSource:()Lakka/stream/Attributes;
      38: aload_0
      39: ldc_w         #335                // String ActorPublisherSource
      42: invokevirtual #66                 // Method shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      45: invokespecial #338                // Method akka/stream/impl/ActorPublisherSource."<init>":(Lakka/actor/Props;Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      48: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      51: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.actor.ActorRef> actorRef(int, akka.stream.OverflowStrategy);
    Code:
       0: getstatic     #115                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_1
       4: iconst_0
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: new           #344                // class akka/stream/scaladsl/Source$$anonfun$actorRef$1
      16: dup
      17: invokespecial #345                // Method akka/stream/scaladsl/Source$$anonfun$actorRef$1."<init>":()V
      20: invokevirtual #328                // Method scala/Predef$.require:(ZLscala/Function0;)V
      23: getstatic     #115                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      26: aload_2
      27: getstatic     #350                // Field akka/stream/OverflowStrategies$Backpressure$.MODULE$:Lakka/stream/OverflowStrategies$Backpressure$;
      30: astore_3
      31: dup
      32: ifnonnull     43
      35: pop
      36: aload_3
      37: ifnull        50
      40: goto          54
      43: aload_3
      44: invokevirtual #354                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_0
      51: goto          55
      54: iconst_1
      55: new           #356                // class akka/stream/scaladsl/Source$$anonfun$actorRef$2
      58: dup
      59: invokespecial #357                // Method akka/stream/scaladsl/Source$$anonfun$actorRef$2."<init>":()V
      62: invokevirtual #328                // Method scala/Predef$.require:(ZLscala/Function0;)V
      65: new           #51                 // class akka/stream/scaladsl/Source
      68: dup
      69: new           #359                // class akka/stream/impl/ActorRefSource
      72: dup
      73: iload_1
      74: aload_2
      75: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      78: invokevirtual #362                // Method akka/stream/impl/Stages$DefaultAttributes$.actorRefSource:()Lakka/stream/Attributes;
      81: aload_0
      82: ldc_w         #364                // String ActorRefSource
      85: invokevirtual #66                 // Method shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      88: invokespecial #367                // Method akka/stream/impl/ActorRefSource."<init>":(ILakka/stream/OverflowStrategy;Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      91: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      94: areturn

  public <T, U> akka.stream.scaladsl.Source<U, akka.NotUsed> combine(akka.stream.scaladsl.Source<T, ?>, akka.stream.scaladsl.Source<T, ?>, scala.collection.Seq<akka.stream.scaladsl.Source<T, ?>>, scala.Function1<java.lang.Object, akka.stream.Graph<akka.stream.UniformFanInShape<T, U>, akka.NotUsed>>);
    Code:
       0: aload_0
       1: getstatic     #380                // Field akka/stream/scaladsl/GraphDSL$.MODULE$:Lakka/stream/scaladsl/GraphDSL$;
       4: new           #382                // class akka/stream/scaladsl/Source$$anonfun$combine$2
       7: dup
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokespecial #385                // Method akka/stream/scaladsl/Source$$anonfun$combine$2."<init>":(Lakka/stream/scaladsl/Source;Lakka/stream/scaladsl/Source;Lscala/collection/Seq;Lscala/Function1;)V
      16: invokevirtual #389                // Method akka/stream/scaladsl/GraphDSL$.create:(Lscala/Function1;)Lakka/stream/Graph;
      19: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      22: areturn

  public <T> akka.stream.scaladsl.Source<scala.collection.immutable.Seq<T>, akka.NotUsed> zipN(scala.collection.immutable.Seq<akka.stream.scaladsl.Source<T, ?>>);
    Code:
       0: aload_0
       1: getstatic     #170                // Field akka/stream/impl/ConstantFun$.MODULE$:Lakka/stream/impl/ConstantFun$;
       4: invokevirtual #174                // Method akka/stream/impl/ConstantFun$.scalaIdentityFunction:()Lscala/Function1;
       7: aload_1
       8: invokevirtual #400                // Method zipWithN:(Lscala/Function1;Lscala/collection/immutable/Seq;)Lakka/stream/scaladsl/Source;
      11: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      14: invokevirtual #402                // Method akka/stream/impl/Stages$DefaultAttributes$.zipN:()Lakka/stream/Attributes;
      17: invokevirtual #405                // Method akka/stream/scaladsl/Source.addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Source;
      20: areturn

  public <T, O> akka.stream.scaladsl.Source<O, akka.NotUsed> zipWithN(scala.Function1<scala.collection.immutable.Seq<T>, O>, scala.collection.immutable.Seq<akka.stream.scaladsl.Source<T, ?>>);
    Code:
       0: aload_2
       1: astore        4
       3: getstatic     #412                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
       6: aload         4
       8: invokevirtual #416                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/Seq;)Lscala/Some;
      11: astore        5
      13: aload         5
      15: invokevirtual #420                // Method scala/Some.isEmpty:()Z
      18: ifne          56
      21: aload         5
      23: invokevirtual #424                // Method scala/Some.get:()Ljava/lang/Object;
      26: ifnull        56
      29: aload         5
      31: invokevirtual #424                // Method scala/Some.get:()Ljava/lang/Object;
      34: checkcast     #426                // class scala/collection/SeqLike
      37: iconst_0
      38: invokeinterface #430,  2          // InterfaceMethod scala/collection/SeqLike.lengthCompare:(I)I
      43: iconst_0
      44: if_icmpne     56
      47: aload_0
      48: invokevirtual #432                // Method empty:()Lakka/stream/scaladsl/Source;
      51: astore        6
      53: goto          286
      56: getstatic     #412                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
      59: aload         4
      61: invokevirtual #416                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/Seq;)Lscala/Some;
      64: astore        7
      66: aload         7
      68: invokevirtual #420                // Method scala/Some.isEmpty:()Z
      71: ifne          150
      74: aload         7
      76: invokevirtual #424                // Method scala/Some.get:()Ljava/lang/Object;
      79: ifnull        150
      82: aload         7
      84: invokevirtual #424                // Method scala/Some.get:()Ljava/lang/Object;
      87: checkcast     #426                // class scala/collection/SeqLike
      90: iconst_1
      91: invokeinterface #430,  2          // InterfaceMethod scala/collection/SeqLike.lengthCompare:(I)I
      96: iconst_0
      97: if_icmpne     150
     100: aload         7
     102: invokevirtual #424                // Method scala/Some.get:()Ljava/lang/Object;
     105: checkcast     #426                // class scala/collection/SeqLike
     108: iconst_0
     109: invokeinterface #435,  2          // InterfaceMethod scala/collection/SeqLike.apply:(I)Ljava/lang/Object;
     114: checkcast     #51                 // class akka/stream/scaladsl/Source
     117: astore        8
     119: aload         8
     121: new           #437                // class akka/stream/scaladsl/Source$$anonfun$2
     124: dup
     125: aload_1
     126: invokespecial #440                // Method akka/stream/scaladsl/Source$$anonfun$2."<init>":(Lscala/Function1;)V
     129: invokevirtual #443                // Method akka/stream/scaladsl/Source.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
     132: checkcast     #51                 // class akka/stream/scaladsl/Source
     135: new           #445                // class akka/stream/scaladsl/Source$$anonfun$3
     138: dup
     139: invokespecial #446                // Method akka/stream/scaladsl/Source$$anonfun$3."<init>":()V
     142: invokevirtual #450                // Method akka/stream/scaladsl/Source.mapMaterializedValue:(Lscala/Function1;)Lakka/stream/scaladsl/Source;
     145: astore        6
     147: goto          286
     150: getstatic     #97                 // Field scala/package$.MODULE$:Lscala/package$;
     153: invokevirtual #454                // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
     156: aload         4
     158: invokevirtual #460                // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
     161: astore        9
     163: aload         9
     165: invokevirtual #463                // Method scala/Option.isEmpty:()Z
     168: ifne          224
     171: aload         9
     173: invokevirtual #464                // Method scala/Option.get:()Ljava/lang/Object;
     176: checkcast     #237                // class scala/Tuple2
     179: invokevirtual #467                // Method scala/Tuple2._1:()Ljava/lang/Object;
     182: checkcast     #51                 // class akka/stream/scaladsl/Source
     185: astore        10
     187: aload         9
     189: invokevirtual #464                // Method scala/Option.get:()Ljava/lang/Object;
     192: checkcast     #237                // class scala/Tuple2
     195: invokevirtual #470                // Method scala/Tuple2._2:()Ljava/lang/Object;
     198: checkcast     #472                // class scala/collection/immutable/Seq
     201: astore        11
     203: getstatic     #97                 // Field scala/package$.MODULE$:Lscala/package$;
     206: invokevirtual #454                // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
     209: aload         11
     211: invokevirtual #460                // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
     214: astore        12
     216: aload         12
     218: invokevirtual #463                // Method scala/Option.isEmpty:()Z
     221: ifeq          234
     224: new           #474                // class scala/MatchError
     227: dup
     228: aload         4
     230: invokespecial #475                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     233: athrow
     234: aload         12
     236: invokevirtual #464                // Method scala/Option.get:()Ljava/lang/Object;
     239: checkcast     #237                // class scala/Tuple2
     242: invokevirtual #467                // Method scala/Tuple2._1:()Ljava/lang/Object;
     245: checkcast     #51                 // class akka/stream/scaladsl/Source
     248: astore        13
     250: aload         12
     252: invokevirtual #464                // Method scala/Option.get:()Ljava/lang/Object;
     255: checkcast     #237                // class scala/Tuple2
     258: invokevirtual #470                // Method scala/Tuple2._2:()Ljava/lang/Object;
     261: checkcast     #472                // class scala/collection/immutable/Seq
     264: astore        14
     266: aload_0
     267: aload         10
     269: aload         13
     271: aload         14
     273: new           #477                // class akka/stream/scaladsl/Source$$anonfun$4
     276: dup
     277: aload_1
     278: invokespecial #478                // Method akka/stream/scaladsl/Source$$anonfun$4."<init>":(Lscala/Function1;)V
     281: invokevirtual #480                // Method combine:(Lakka/stream/scaladsl/Source;Lakka/stream/scaladsl/Source;Lscala/collection/Seq;Lscala/Function1;)Lakka/stream/scaladsl/Source;
     284: astore        6
     286: aload         6
     288: astore_3
     289: aload_3
     290: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
     293: invokevirtual #482                // Method akka/stream/impl/Stages$DefaultAttributes$.zipWithN:()Lakka/stream/Attributes;
     296: invokevirtual #405                // Method akka/stream/scaladsl/Source.addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Source;
     299: areturn

  public <T> akka.stream.scaladsl.Source<T, akka.stream.scaladsl.SourceQueueWithComplete<T>> queue(int, akka.stream.OverflowStrategy);
    Code:
       0: aload_0
       1: new           #492                // class akka/stream/impl/QueueSource
       4: dup
       5: iload_1
       6: aload_2
       7: invokespecial #495                // Method akka/stream/impl/QueueSource."<init>":(ILakka/stream/OverflowStrategy;)V
      10: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      13: invokevirtual #498                // Method akka/stream/impl/Stages$DefaultAttributes$.queueSource:()Lakka/stream/Attributes;
      16: invokevirtual #501                // Method akka/stream/impl/QueueSource.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/Graph;
      19: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      22: areturn

  public <T, S> akka.stream.scaladsl.Source<T, akka.NotUsed> unfoldResource(scala.Function0<S>, scala.Function1<S, scala.Option<T>>, scala.Function1<S, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: new           #505                // class akka/stream/impl/UnfoldResourceSource
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #508                // Method akka/stream/impl/UnfoldResourceSource."<init>":(Lscala/Function0;Lscala/Function1;Lscala/Function1;)V
      11: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      14: areturn

  public <T, S> akka.stream.scaladsl.Source<T, akka.NotUsed> unfoldResourceAsync(scala.Function0<scala.concurrent.Future<S>>, scala.Function1<S, scala.concurrent.Future<scala.Option<T>>>, scala.Function1<S, scala.concurrent.Future<akka.Done>>);
    Code:
       0: aload_0
       1: new           #513                // class akka/stream/impl/UnfoldResourceSourceAsync
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #514                // Method akka/stream/impl/UnfoldResourceSourceAsync."<init>":(Lscala/Function0;Lscala/Function1;Lscala/Function1;)V
      11: invokevirtual #192                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      14: areturn

  private akka.stream.scaladsl.Source$();
    Code:
       0: aload_0
       1: invokespecial #515                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #517                // Field MODULE$:Lakka/stream/scaladsl/Source$;
       8: aload_0
       9: new           #51                 // class akka/stream/scaladsl/Source
      12: dup
      13: new           #53                 // class akka/stream/impl/PublisherSource
      16: dup
      17: getstatic     #522                // Field akka/stream/impl/EmptyPublisher$.MODULE$:Lakka/stream/impl/EmptyPublisher$;
      20: getstatic     #58                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      23: invokevirtual #525                // Method akka/stream/impl/Stages$DefaultAttributes$.emptySource:()Lakka/stream/Attributes;
      26: aload_0
      27: ldc_w         #527                // String EmptySource
      30: invokevirtual #66                 // Method shape:(Ljava/lang/String;)Lakka/stream/SourceShape;
      33: invokespecial #69                 // Method akka/stream/impl/PublisherSource."<init>":(Lorg/reactivestreams/Publisher;Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      36: invokespecial #72                 // Method akka/stream/scaladsl/Source."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      39: putfield      #268                // Field _empty:Lakka/stream/scaladsl/Source;
      42: return
}
