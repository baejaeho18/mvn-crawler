Compiled from "Flow.scala"
public final class akka.stream.scaladsl.Flow$ {
  public static final akka.stream.scaladsl.Flow$ MODULE$;

  private final akka.stream.scaladsl.Flow<java.lang.Object, java.lang.Object, akka.NotUsed> identity;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/scaladsl/Flow$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public <I, O> akka.stream.scaladsl.Flow<I, O, akka.NotUsed> fromProcessor(scala.Function0<org.reactivestreams.Processor<I, O>>);
    Code:
       0: aload_0
       1: new           #19                 // class akka/stream/scaladsl/Flow$$anonfun$fromProcessor$1
       4: dup
       5: aload_1
       6: invokespecial #22                 // Method akka/stream/scaladsl/Flow$$anonfun$fromProcessor$1."<init>":(Lscala/Function0;)V
       9: invokevirtual #25                 // Method fromProcessorMat:(Lscala/Function0;)Lakka/stream/scaladsl/Flow;
      12: areturn

  public <I, O, M> akka.stream.scaladsl.Flow<I, O, M> fromProcessorMat(scala.Function0<scala.Tuple2<org.reactivestreams.Processor<I, O>, M>>);
    Code:
       0: new           #30                 // class akka/stream/scaladsl/Flow
       3: dup
       4: new           #32                 // class akka/stream/impl/ProcessorModule
       7: dup
       8: aload_1
       9: getstatic     #37                 // Field akka/stream/impl/ProcessorModule$.MODULE$:Lakka/stream/impl/ProcessorModule$;
      12: invokevirtual #41                 // Method akka/stream/impl/ProcessorModule$.apply$default$2:()Lakka/stream/Attributes;
      15: invokespecial #44                 // Method akka/stream/impl/ProcessorModule."<init>":(Lscala/Function0;Lakka/stream/Attributes;)V
      18: invokespecial #47                 // Method akka/stream/scaladsl/Flow."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      21: areturn

  public <T> akka.stream.scaladsl.Flow<T, T, akka.NotUsed> apply();
    Code:
       0: aload_0
       1: getfield      #51                 // Field identity:Lakka/stream/scaladsl/Flow;
       4: areturn

  public <A, B> akka.stream.scaladsl.Flow<A, B, akka.NotUsed> fromFunction(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method apply:()Lakka/stream/scaladsl/Flow;
       4: aload_1
       5: invokevirtual #59                 // Method akka/stream/scaladsl/Flow.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
       8: checkcast     #30                 // class akka/stream/scaladsl/Flow
      11: areturn

  public <I, O, M> akka.stream.scaladsl.Flow<I, O, M> fromGraph(akka.stream.Graph<akka.stream.FlowShape<I, O>, M>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #30                 // class akka/stream/scaladsl/Flow
       6: ifeq          20
       9: aload_2
      10: checkcast     #30                 // class akka/stream/scaladsl/Flow
      13: astore_3
      14: aload_3
      15: astore        4
      17: goto          58
      20: aload_2
      21: instanceof    #65                 // class akka/stream/javadsl/Flow
      24: ifeq          43
      27: aload_2
      28: checkcast     #65                 // class akka/stream/javadsl/Flow
      31: astore        5
      33: aload         5
      35: invokevirtual #68                 // Method akka/stream/javadsl/Flow.asScala:()Lakka/stream/scaladsl/Flow;
      38: astore        4
      40: goto          58
      43: new           #30                 // class akka/stream/scaladsl/Flow
      46: dup
      47: aload_2
      48: invokeinterface #74,  1           // InterfaceMethod akka/stream/Graph.module:()Lakka/stream/impl/StreamLayout$Module;
      53: invokespecial #47                 // Method akka/stream/scaladsl/Flow."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      56: astore        4
      58: aload         4
      60: areturn

  public <I, O> akka.stream.scaladsl.Flow<I, O, akka.NotUsed> fromSinkAndSource(akka.stream.Graph<akka.stream.SinkShape<I>, ?>, akka.stream.Graph<akka.stream.SourceShape<O>, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #83                 // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
       6: invokevirtual #87                 // Method akka/stream/scaladsl/Keep$.none:()Lscala/Function2;
       9: invokevirtual #91                 // Method fromSinkAndSourceMat:(Lakka/stream/Graph;Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Flow;
      12: areturn

  public <I, O, M1, M2, M> akka.stream.scaladsl.Flow<I, O, M> fromSinkAndSourceMat(akka.stream.Graph<akka.stream.SinkShape<I>, M1>, akka.stream.Graph<akka.stream.SourceShape<O>, M2>, scala.Function2<M1, M2, M>);
    Code:
       0: aload_0
       1: getstatic     #98                 // Field akka/stream/scaladsl/GraphDSL$.MODULE$:Lakka/stream/scaladsl/GraphDSL$;
       4: aload_1
       5: aload_2
       6: aload_3
       7: new           #100                // class akka/stream/scaladsl/Flow$$anonfun$fromSinkAndSourceMat$1
      10: dup
      11: invokespecial #101                // Method akka/stream/scaladsl/Flow$$anonfun$fromSinkAndSourceMat$1."<init>":()V
      14: invokevirtual #105                // Method akka/stream/scaladsl/GraphDSL$.create:(Lakka/stream/Graph;Lakka/stream/Graph;Lscala/Function2;Lscala/Function1;)Lakka/stream/Graph;
      17: invokevirtual #107                // Method fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      20: areturn

  private akka.stream.scaladsl.Flow$();
    Code:
       0: aload_0
       1: invokespecial #110                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #112                // Field MODULE$:Lakka/stream/scaladsl/Flow$;
       8: aload_0
       9: new           #30                 // class akka/stream/scaladsl/Flow
      12: dup
      13: getstatic     #117                // Field akka/stream/impl/fusing/GraphStages$Identity$.MODULE$:Lakka/stream/impl/fusing/GraphStages$Identity$;
      16: invokevirtual #118                // Method akka/stream/impl/fusing/GraphStages$Identity$.module:()Lakka/stream/impl/StreamLayout$Module;
      19: invokespecial #47                 // Method akka/stream/scaladsl/Flow."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      22: putfield      #51                 // Field identity:Lakka/stream/scaladsl/Flow;
      25: return
}
