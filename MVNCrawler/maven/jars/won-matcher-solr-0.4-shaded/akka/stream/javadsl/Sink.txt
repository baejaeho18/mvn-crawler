Compiled from "Sink.scala"
public final class akka.stream.javadsl.Sink<In, Mat> implements akka.stream.Graph<akka.stream.SinkShape<In>, Mat> {
  private final akka.stream.scaladsl.Sink<In, Mat> delegate;

  public static <T, M> akka.stream.javadsl.Sink<T, java.util.concurrent.CompletionStage<M>> lazyInit(akka.japi.function.Function<T, java.util.concurrent.CompletionStage<akka.stream.javadsl.Sink<T, M>>>, akka.japi.function.Creator<M>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #21                 // Method akka/stream/javadsl/Sink$.lazyInit:(Lakka/japi/function/Function;Lakka/japi/function/Creator;)Lakka/stream/javadsl/Sink;
       8: areturn

  public static <T> akka.stream.javadsl.Sink<T, akka.stream.javadsl.SinkQueueWithCancel<T>> queue();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #25                 // Method akka/stream/javadsl/Sink$.queue:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <T, U> akka.stream.javadsl.Sink<T, akka.NotUsed> combine(akka.stream.javadsl.Sink<U, ?>, akka.stream.javadsl.Sink<U, ?>, java.util.List<akka.stream.javadsl.Sink<U, ?>>, akka.japi.function.Function<java.lang.Integer, akka.stream.Graph<akka.stream.UniformFanOutShape<T, U>, akka.NotUsed>>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #29                 // Method akka/stream/javadsl/Sink$.combine:(Lakka/stream/javadsl/Sink;Lakka/stream/javadsl/Sink;Ljava/util/List;Lakka/japi/function/Function;)Lakka/stream/javadsl/Sink;
      10: areturn

  public static <T, M> akka.stream.javadsl.Sink<T, M> fromGraph(akka.stream.Graph<akka.stream.SinkShape<T>, M>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: invokevirtual #33                 // Method akka/stream/javadsl/Sink$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/javadsl/Sink;
       7: areturn

  public static <T> akka.stream.javadsl.Sink<T, akka.actor.ActorRef> actorSubscriber(akka.actor.Props);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: invokevirtual #37                 // Method akka/stream/javadsl/Sink$.actorSubscriber:(Lakka/actor/Props;)Lakka/stream/javadsl/Sink;
       7: areturn

  public static <In> akka.stream.javadsl.Sink<In, akka.NotUsed> actorRefWithAck(akka.actor.ActorRef, java.lang.Object, java.lang.Object, java.lang.Object, akka.japi.function.Function<java.lang.Throwable, java.lang.Object>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #41                 // Method akka/stream/javadsl/Sink$.actorRefWithAck:(Lakka/actor/ActorRef;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lakka/japi/function/Function;)Lakka/stream/javadsl/Sink;
      12: areturn

  public static <In> akka.stream.javadsl.Sink<In, akka.NotUsed> actorRef(akka.actor.ActorRef, java.lang.Object);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #45                 // Method akka/stream/javadsl/Sink$.actorRef:(Lakka/actor/ActorRef;Ljava/lang/Object;)Lakka/stream/javadsl/Sink;
       8: areturn

  public static <In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<java.util.List<In>>> seq();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #48                 // Method akka/stream/javadsl/Sink$.seq:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<java.util.Optional<In>>> lastOption();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #51                 // Method akka/stream/javadsl/Sink$.lastOption:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<In>> last();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #54                 // Method akka/stream/javadsl/Sink$.last:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<java.util.Optional<In>>> headOption();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #57                 // Method akka/stream/javadsl/Sink$.headOption:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<In>> head();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #60                 // Method akka/stream/javadsl/Sink$.head:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <In> akka.stream.javadsl.Sink<In, akka.NotUsed> onComplete(akka.japi.function.Procedure<scala.util.Try<akka.Done>>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: invokevirtual #64                 // Method akka/stream/javadsl/Sink$.onComplete:(Lakka/japi/function/Procedure;)Lakka/stream/javadsl/Sink;
       7: areturn

  public static <T> akka.stream.javadsl.Sink<T, java.util.concurrent.CompletionStage<akka.Done>> foreachParallel(int, akka.japi.function.Procedure<T>, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #68                 // Method akka/stream/javadsl/Sink$.foreachParallel:(ILakka/japi/function/Procedure;Lscala/concurrent/ExecutionContext;)Lakka/stream/javadsl/Sink;
       9: areturn

  public static <T> akka.stream.javadsl.Sink<T, java.util.concurrent.CompletionStage<akka.Done>> foreach(akka.japi.function.Procedure<T>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: invokevirtual #71                 // Method akka/stream/javadsl/Sink$.foreach:(Lakka/japi/function/Procedure;)Lakka/stream/javadsl/Sink;
       7: areturn

  public static <T> akka.stream.javadsl.Sink<T, org.reactivestreams.Publisher<T>> asPublisher(akka.stream.javadsl.AsPublisher);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: invokevirtual #75                 // Method akka/stream/javadsl/Sink$.asPublisher:(Lakka/stream/javadsl/AsPublisher;)Lakka/stream/javadsl/Sink;
       7: areturn

  public static <T> akka.stream.javadsl.Sink<T, java.util.concurrent.CompletionStage<akka.Done>> ignore();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #78                 // Method akka/stream/javadsl/Sink$.ignore:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <T> akka.stream.javadsl.Sink<T, akka.NotUsed> cancelled();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: invokevirtual #81                 // Method akka/stream/javadsl/Sink$.cancelled:()Lakka/stream/javadsl/Sink;
       6: areturn

  public static <In> akka.stream.javadsl.Sink<In, akka.NotUsed> fromSubscriber(org.reactivestreams.Subscriber<In>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: invokevirtual #85                 // Method akka/stream/javadsl/Sink$.fromSubscriber:(Lorg/reactivestreams/Subscriber;)Lakka/stream/javadsl/Sink;
       7: areturn

  public static <In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<In>> reduce(akka.japi.function.Function2<In, In, In>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: invokevirtual #89                 // Method akka/stream/javadsl/Sink$.reduce:(Lakka/japi/function/Function2;)Lakka/stream/javadsl/Sink;
       7: areturn

  public static <U, In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<U>> foldAsync(U, akka.japi.function.Function2<U, In, java.util.concurrent.CompletionStage<U>>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #93                 // Method akka/stream/javadsl/Sink$.foldAsync:(Ljava/lang/Object;Lakka/japi/function/Function2;)Lakka/stream/javadsl/Sink;
       8: areturn

  public static <U, In> akka.stream.javadsl.Sink<In, java.util.concurrent.CompletionStage<U>> fold(U, akka.japi.function.Function2<U, In, U>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/Sink$.MODULE$:Lakka/stream/javadsl/Sink$;
       3: aload_0
       4: aload_1
       5: invokevirtual #96                 // Method akka/stream/javadsl/Sink$.fold:(Ljava/lang/Object;Lakka/japi/function/Function2;)Lakka/stream/javadsl/Sink;
       8: areturn

  public akka.stream.SinkShape<In> shape();
    Code:
       0: aload_0
       1: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       4: invokevirtual #107                // Method akka/stream/scaladsl/Sink.shape:()Lakka/stream/SinkShape;
       7: areturn

  public akka.stream.impl.StreamLayout$Module module();
    Code:
       0: aload_0
       1: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       4: invokevirtual #113                // Method akka/stream/scaladsl/Sink.module:()Lakka/stream/impl/StreamLayout$Module;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       4: invokevirtual #117                // Method akka/stream/scaladsl/Sink.toString:()Ljava/lang/String;
       7: areturn

  public akka.stream.scaladsl.Sink<In, Mat> asScala();
    Code:
       0: aload_0
       1: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       4: areturn

  public <M> M runWith(akka.stream.Graph<akka.stream.SourceShape<In>, M>, akka.stream.Materializer);
    Code:
       0: aload_0
       1: invokevirtual #123                // Method asScala:()Lakka/stream/scaladsl/Sink;
       4: aload_1
       5: aload_2
       6: invokevirtual #125                // Method akka/stream/scaladsl/Sink.runWith:(Lakka/stream/Graph;Lakka/stream/Materializer;)Ljava/lang/Object;
       9: areturn

  public <In2> akka.stream.javadsl.Sink<In2, Mat> contramap(akka.japi.function.Function<In2, In>);
    Code:
       0: getstatic     #136                // Field akka/stream/javadsl/Flow$.MODULE$:Lakka/stream/javadsl/Flow$;
       3: aload_1
       4: invokevirtual #140                // Method akka/stream/javadsl/Flow$.fromFunction:(Lakka/japi/function/Function;)Lakka/stream/javadsl/Flow;
       7: aload_0
       8: getstatic     #145                // Field akka/stream/javadsl/Keep$.MODULE$:Lakka/stream/javadsl/Keep$;
      11: invokevirtual #149                // Method akka/stream/javadsl/Keep$.right:()Lakka/japi/function/Function2;
      14: invokevirtual #155                // Method akka/stream/javadsl/Flow.toMat:(Lakka/stream/Graph;Lakka/japi/function/Function2;)Lakka/stream/javadsl/Sink;
      17: areturn

  public <Mat2> akka.stream.javadsl.Sink<In, Mat2> mapMaterializedValue(akka.japi.function.Function<Mat, Mat2>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/Sink
       3: dup
       4: aload_0
       5: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       8: new           #160                // class akka/stream/javadsl/Sink$$anonfun$mapMaterializedValue$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #164                // Method akka/stream/javadsl/Sink$$anonfun$mapMaterializedValue$1."<init>":(Lakka/stream/javadsl/Sink;Lakka/japi/function/Function;)V
      17: invokevirtual #167                // Method akka/stream/scaladsl/Sink.mapMaterializedValue:(Lscala/Function1;)Lakka/stream/scaladsl/Sink;
      20: invokespecial #170                // Method "<init>":(Lakka/stream/scaladsl/Sink;)V
      23: areturn

  public akka.stream.javadsl.Sink<In, Mat> withAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/javadsl/Sink
       3: dup
       4: aload_0
       5: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       8: aload_1
       9: invokevirtual #175                // Method akka/stream/scaladsl/Sink.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      12: invokespecial #170                // Method "<init>":(Lakka/stream/scaladsl/Sink;)V
      15: areturn

  public akka.stream.javadsl.Sink<In, Mat> addAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/javadsl/Sink
       3: dup
       4: aload_0
       5: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       8: aload_1
       9: invokevirtual #180                // Method akka/stream/scaladsl/Sink.addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/Sink;
      12: invokespecial #170                // Method "<init>":(Lakka/stream/scaladsl/Sink;)V
      15: areturn

  public akka.stream.javadsl.Sink<In, Mat> named(java.lang.String);
    Code:
       0: new           #2                  // class akka/stream/javadsl/Sink
       3: dup
       4: aload_0
       5: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       8: aload_1
       9: invokevirtual #185                // Method akka/stream/scaladsl/Sink.named:(Ljava/lang/String;)Lakka/stream/scaladsl/Sink;
      12: invokespecial #170                // Method "<init>":(Lakka/stream/scaladsl/Sink;)V
      15: areturn

  public akka.stream.javadsl.Sink<In, Mat> async();
    Code:
       0: new           #2                  // class akka/stream/javadsl/Sink
       3: dup
       4: aload_0
       5: getfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       8: invokevirtual #190                // Method akka/stream/scaladsl/Sink.async:()Lakka/stream/scaladsl/Sink;
      11: invokespecial #170                // Method "<init>":(Lakka/stream/scaladsl/Sink;)V
      14: areturn

  public akka.stream.Graph async();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method async:()Lakka/stream/javadsl/Sink;
       4: areturn

  public akka.stream.Graph named(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #196                // Method named:(Ljava/lang/String;)Lakka/stream/javadsl/Sink;
       5: areturn

  public akka.stream.Graph addAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #199                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/javadsl/Sink;
       5: areturn

  public akka.stream.Graph withAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #201                // Method withAttributes:(Lakka/stream/Attributes;)Lakka/stream/javadsl/Sink;
       5: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method shape:()Lakka/stream/SinkShape;
       4: areturn

  public akka.stream.javadsl.Sink(akka.stream.scaladsl.Sink<In, Mat>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #103                // Field delegate:Lakka/stream/scaladsl/Sink;
       5: aload_0
       6: invokespecial #206                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #212                // Method akka/stream/Graph$class.$init$:(Lakka/stream/Graph;)V
      13: return
}
