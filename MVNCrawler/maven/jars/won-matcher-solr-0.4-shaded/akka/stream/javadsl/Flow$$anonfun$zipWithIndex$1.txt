Compiled from "Flow.scala"
public final class akka.stream.javadsl.Flow$$anonfun$zipWithIndex$1 extends scala.runtime.AbstractFunction1<scala.Tuple2<Out, java.lang.Object>, akka.japi.Pair<Out, java.lang.Object>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final akka.japi.Pair<Out, java.lang.Object> apply(scala.Tuple2<Out, java.lang.Object>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        35
       6: aload_2
       7: invokevirtual #25                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #29                 // Method scala/Tuple2._2$mcJ$sp:()J
      15: lstore        4
      17: new           #31                 // class akka/japi/Pair
      20: dup
      21: aload_3
      22: lload         4
      24: invokestatic  #37                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      27: invokespecial #41                 // Method akka/japi/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      30: astore        6
      32: aload         6
      34: areturn
      35: new           #43                 // class scala/MatchError
      38: dup
      39: aload_2
      40: invokespecial #46                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class scala/Tuple2
       5: invokevirtual #56                 // Method apply:(Lscala/Tuple2;)Lakka/japi/Pair;
       8: areturn

  public akka.stream.javadsl.Flow$$anonfun$zipWithIndex$1(akka.stream.javadsl.Flow<In, Out, Mat>);
    Code:
       0: aload_0
       1: invokespecial #61                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
