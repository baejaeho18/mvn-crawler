Compiled from "SubFlow.scala"
public final class akka.stream.javadsl.SubFlow$$anonfun$mapConcat$1 extends scala.runtime.AbstractFunction1<Out, scala.collection.immutable.Seq<T>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.japi.function.Function f$2;

  public final scala.collection.immutable.Seq<T> apply(Out);
    Code:
       0: getstatic     #27                 // Field akka/japi/Util$.MODULE$:Lakka/japi/Util$;
       3: aload_0
       4: getfield      #29                 // Field f$2:Lakka/japi/function/Function;
       7: aload_1
       8: invokeinterface #34,  2           // InterfaceMethod akka/japi/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #36                 // class java/lang/Iterable
      16: invokevirtual #40                 // Method akka/japi/Util$.immutableSeq:(Ljava/lang/Iterable;)Lscala/collection/immutable/Seq;
      19: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method apply:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
       5: areturn

  public akka.stream.javadsl.SubFlow$$anonfun$mapConcat$1(akka.stream.javadsl.SubFlow<In, Out, Mat>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #29                 // Field f$2:Lakka/japi/function/Function;
       5: aload_0
       6: invokespecial #52                 // Method scala/runtime/AbstractFunction1."<init>":()V
       9: return
}
