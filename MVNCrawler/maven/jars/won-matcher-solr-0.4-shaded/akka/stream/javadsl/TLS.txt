Compiled from "TLS.scala"
public final class akka.stream.javadsl.TLS {
  public static akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole, java.util.Optional<akka.japi.Pair<java.lang.String, java.lang.Integer>>, akka.stream.TLSClosing);
    Code:
       0: getstatic     #16                 // Field akka/stream/javadsl/TLS$.MODULE$:Lakka/stream/javadsl/TLS$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #18                 // Method akka/stream/javadsl/TLS$.create:(Ljavax/net/ssl/SSLContext;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Ljava/util/Optional;Lakka/stream/TLSClosing;)Lakka/stream/javadsl/BidiFlow;
      12: areturn

  public static akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, java.util.Optional<com.typesafe.sslconfig.akka.AkkaSSLConfig>, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole, java.util.Optional<akka.japi.Pair<java.lang.String, java.lang.Integer>>, akka.stream.TLSClosing);
    Code:
       0: getstatic     #16                 // Field akka/stream/javadsl/TLS$.MODULE$:Lakka/stream/javadsl/TLS$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #21                 // Method akka/stream/javadsl/TLS$.create:(Ljavax/net/ssl/SSLContext;Ljava/util/Optional;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Ljava/util/Optional;Lakka/stream/TLSClosing;)Lakka/stream/javadsl/BidiFlow;
      14: areturn

  public static akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole);
    Code:
       0: getstatic     #16                 // Field akka/stream/javadsl/TLS$.MODULE$:Lakka/stream/javadsl/TLS$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #24                 // Method akka/stream/javadsl/TLS$.create:(Ljavax/net/ssl/SSLContext;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;)Lakka/stream/javadsl/BidiFlow;
       9: areturn

  public static akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, java.util.Optional<com.typesafe.sslconfig.akka.AkkaSSLConfig>, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole);
    Code:
       0: getstatic     #16                 // Field akka/stream/javadsl/TLS$.MODULE$:Lakka/stream/javadsl/TLS$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #27                 // Method akka/stream/javadsl/TLS$.create:(Ljavax/net/ssl/SSLContext;Ljava/util/Optional;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;)Lakka/stream/javadsl/BidiFlow;
      10: areturn
}
