Compiled from "SubFlow.scala"
public class akka.stream.javadsl.SubFlow<In, Out, Mat> {
  private final akka.stream.scaladsl.SubFlow<Out, Mat, ?, akka.stream.scaladsl.Sink<In, Mat>> delegate;

  public akka.stream.scaladsl.SubFlow<Out, Mat, ?, akka.stream.scaladsl.Sink<In, Mat>> asScala();
    Code:
       0: aload_0
       1: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       4: areturn

  public akka.stream.javadsl.Flow<In, Out, Mat> mergeSubstreams();
    Code:
       0: new           #22                 // class akka/stream/javadsl/Flow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: invokeinterface #27,  1           // InterfaceMethod akka/stream/scaladsl/SubFlow.mergeSubstreams:()Ljava/lang/Object;
      13: checkcast     #29                 // class akka/stream/scaladsl/Flow
      16: invokespecial #33                 // Method akka/stream/javadsl/Flow."<init>":(Lakka/stream/scaladsl/Flow;)V
      19: areturn

  public akka.stream.javadsl.Flow<In, Out, Mat> mergeSubstreamsWithParallelism(int);
    Code:
       0: new           #22                 // class akka/stream/javadsl/Flow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: invokeinterface #38,  2           // InterfaceMethod akka/stream/scaladsl/SubFlow.mergeSubstreamsWithParallelism:(I)Ljava/lang/Object;
      14: checkcast     #29                 // class akka/stream/scaladsl/Flow
      17: invokespecial #33                 // Method akka/stream/javadsl/Flow."<init>":(Lakka/stream/scaladsl/Flow;)V
      20: areturn

  public akka.stream.javadsl.Flow<In, Out, Mat> concatSubstreams();
    Code:
       0: new           #22                 // class akka/stream/javadsl/Flow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: invokeinterface #43,  1           // InterfaceMethod akka/stream/scaladsl/SubFlow.concatSubstreams:()Ljava/lang/Object;
      13: checkcast     #29                 // class akka/stream/scaladsl/Flow
      16: invokespecial #33                 // Method akka/stream/javadsl/Flow."<init>":(Lakka/stream/scaladsl/Flow;)V
      19: areturn

  public <T, M> akka.stream.javadsl.SubFlow<In, T, Mat> via(akka.stream.Graph<akka.stream.FlowShape<Out, T>, M>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #48,  2           // InterfaceMethod akka/stream/scaladsl/SubFlow.via:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.Sink<In, Mat> to(akka.stream.Graph<akka.stream.SinkShape<Out>, ?>);
    Code:
       0: new           #57                 // class akka/stream/javadsl/Sink
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #60,  2           // InterfaceMethod akka/stream/scaladsl/SubFlow.to:(Lakka/stream/Graph;)Ljava/lang/Object;
      14: checkcast     #62                 // class akka/stream/scaladsl/Sink
      17: invokespecial #65                 // Method akka/stream/javadsl/Sink."<init>":(Lakka/stream/scaladsl/Sink;)V
      20: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> map(akka.japi.function.Function<Out, T>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #70                 // class akka/stream/javadsl/SubFlow$$anonfun$map$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #73                 // Method akka/stream/javadsl/SubFlow$$anonfun$map$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      17: invokeinterface #76,  2           // InterfaceMethod akka/stream/scaladsl/SubFlow.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> mapConcat(akka.japi.function.Function<Out, java.lang.Iterable<T>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #81                 // class akka/stream/javadsl/SubFlow$$anonfun$mapConcat$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #82                 // Method akka/stream/javadsl/SubFlow$$anonfun$mapConcat$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      17: invokeinterface #84,  2           // InterfaceMethod akka/stream/scaladsl/SubFlow.mapConcat:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> statefulMapConcat(akka.japi.function.Creator<akka.japi.function.Function<Out, java.lang.Iterable<T>>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #88                 // class akka/stream/javadsl/SubFlow$$anonfun$statefulMapConcat$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #91                 // Method akka/stream/javadsl/SubFlow$$anonfun$statefulMapConcat$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Creator;)V
      17: invokeinterface #94,  2           // InterfaceMethod akka/stream/scaladsl/SubFlow.statefulMapConcat:(Lscala/Function0;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> mapAsync(int, akka.japi.function.Function<Out, java.util.concurrent.CompletionStage<T>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: new           #99                 // class akka/stream/javadsl/SubFlow$$anonfun$mapAsync$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #100                // Method akka/stream/javadsl/SubFlow$$anonfun$mapAsync$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      18: invokeinterface #103,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.mapAsync:(ILscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> mapAsyncUnordered(int, akka.japi.function.Function<Out, java.util.concurrent.CompletionStage<T>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: new           #106                // class akka/stream/javadsl/SubFlow$$anonfun$mapAsyncUnordered$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #107                // Method akka/stream/javadsl/SubFlow$$anonfun$mapAsyncUnordered$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      18: invokeinterface #109,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.mapAsyncUnordered:(ILscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> filter(akka.japi.function.Predicate<Out>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #113                // class akka/stream/javadsl/SubFlow$$anonfun$filter$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #116                // Method akka/stream/javadsl/SubFlow$$anonfun$filter$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Predicate;)V
      17: invokeinterface #118,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.filter:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> filterNot(akka.japi.function.Predicate<Out>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #123                // class akka/stream/javadsl/SubFlow$$anonfun$filterNot$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #124                // Method akka/stream/javadsl/SubFlow$$anonfun$filterNot$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Predicate;)V
      17: invokeinterface #126,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.filterNot:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> collect(scala.PartialFunction<Out, T>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #131,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.collect:(Lscala/PartialFunction;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, java.util.List<Out>, Mat> grouped(int);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: invokeinterface #138,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.grouped:(I)Lakka/stream/scaladsl/FlowOps;
      14: new           #140                // class akka/stream/javadsl/SubFlow$$anonfun$grouped$1
      17: dup
      18: aload_0
      19: invokespecial #143                // Method akka/stream/javadsl/SubFlow$$anonfun$grouped$1."<init>":(Lakka/stream/javadsl/SubFlow;)V
      22: invokeinterface #146,  2          // InterfaceMethod akka/stream/scaladsl/FlowOps.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      27: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      30: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      33: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> limit(long);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: lload_1
       9: invokeinterface #152,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.limit:(J)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> limitWeighted(long, akka.japi.function.Function<Out, java.lang.Object>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: lload_1
       9: new           #157                // class akka/stream/javadsl/SubFlow$$anonfun$limitWeighted$1
      12: dup
      13: aload_0
      14: aload_3
      15: invokespecial #158                // Method akka/stream/javadsl/SubFlow$$anonfun$limitWeighted$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      18: invokeinterface #161,  4          // InterfaceMethod akka/stream/scaladsl/SubFlow.limitWeighted:(JLscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public akka.stream.javadsl.SubFlow<In, java.util.List<Out>, Mat> sliding(int, int);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: iload_2
      10: invokeinterface #167,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.sliding:(II)Lakka/stream/scaladsl/FlowOps;
      15: new           #169                // class akka/stream/javadsl/SubFlow$$anonfun$sliding$1
      18: dup
      19: aload_0
      20: invokespecial #170                // Method akka/stream/javadsl/SubFlow$$anonfun$sliding$1."<init>":(Lakka/stream/javadsl/SubFlow;)V
      23: invokeinterface #146,  2          // InterfaceMethod akka/stream/scaladsl/FlowOps.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      28: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      31: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      34: areturn

  public int sliding$default$2();
    Code:
       0: iconst_1
       1: ireturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> scan(T, akka.japi.function.Function2<T, Out, T>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: new           #177                // class akka/stream/javadsl/SubFlow$$anonfun$scan$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #180                // Method akka/stream/javadsl/SubFlow$$anonfun$scan$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      18: invokeinterface #183,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.scan:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> fold(T, akka.japi.function.Function2<T, Out, T>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: new           #189                // class akka/stream/javadsl/SubFlow$$anonfun$fold$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #190                // Method akka/stream/javadsl/SubFlow$$anonfun$fold$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      18: invokeinterface #192,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.fold:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> foldAsync(T, akka.japi.function.Function2<T, Out, java.util.concurrent.CompletionStage<T>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: new           #195                // class akka/stream/javadsl/SubFlow$$anonfun$foldAsync$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #196                // Method akka/stream/javadsl/SubFlow$$anonfun$foldAsync$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      18: invokeinterface #198,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.foldAsync:(Ljava/lang/Object;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> reduce(akka.japi.function.Function2<Out, Out, Out>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #202                // class akka/stream/javadsl/SubFlow$$anonfun$reduce$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #203                // Method akka/stream/javadsl/SubFlow$$anonfun$reduce$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      17: invokeinterface #206,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.reduce:(Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> intersperse(T, T, T);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #211,  4          // InterfaceMethod akka/stream/scaladsl/SubFlow.intersperse:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lakka/stream/scaladsl/FlowOps;
      16: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      19: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      22: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> intersperse(T);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #218,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.intersperse:(Ljava/lang/Object;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, java.util.List<Out>, Mat> groupedWithin(int, scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: aload_2
      10: invokeinterface #223,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.groupedWithin:(ILscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      15: new           #225                // class akka/stream/javadsl/SubFlow$$anonfun$groupedWithin$1
      18: dup
      19: aload_0
      20: invokespecial #226                // Method akka/stream/javadsl/SubFlow$$anonfun$groupedWithin$1."<init>":(Lakka/stream/javadsl/SubFlow;)V
      23: invokeinterface #146,  2          // InterfaceMethod akka/stream/scaladsl/FlowOps.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      28: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      31: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      34: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> delay(scala.concurrent.duration.FiniteDuration, akka.stream.DelayOverflowStrategy);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: aload_2
      10: invokeinterface #233,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.delay:(Lscala/concurrent/duration/FiniteDuration;Lakka/stream/DelayOverflowStrategy;)Lakka/stream/scaladsl/FlowOps;
      15: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      18: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      21: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> drop(long);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: lload_1
       9: invokeinterface #239,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.drop:(J)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> dropWithin(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #244,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.dropWithin:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> takeWhile(akka.japi.function.Predicate<Out>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #247                // class akka/stream/javadsl/SubFlow$$anonfun$takeWhile$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #248                // Method akka/stream/javadsl/SubFlow$$anonfun$takeWhile$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Predicate;)V
      17: invokeinterface #250,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.takeWhile:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> dropWhile(akka.japi.function.Predicate<Out>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #253                // class akka/stream/javadsl/SubFlow$$anonfun$dropWhile$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #254                // Method akka/stream/javadsl/SubFlow$$anonfun$dropWhile$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Predicate;)V
      17: invokeinterface #256,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.dropWhile:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> recover(scala.PartialFunction<java.lang.Throwable, T>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #259,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.recover:(Lscala/PartialFunction;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> recoverWith(scala.PartialFunction<java.lang.Throwable, ? extends akka.stream.Graph<akka.stream.SourceShape<T>, akka.NotUsed>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #262,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.recoverWith:(Lscala/PartialFunction;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> recoverWithRetries(int, scala.PartialFunction<java.lang.Throwable, ? extends akka.stream.Graph<akka.stream.SourceShape<T>, akka.NotUsed>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: aload_2
      10: invokeinterface #267,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.recoverWithRetries:(ILscala/PartialFunction;)Lakka/stream/scaladsl/FlowOps;
      15: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      18: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      21: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> take(long);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: lload_1
       9: invokeinterface #271,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.take:(J)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> takeWithin(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #274,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.takeWithin:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <S> akka.stream.javadsl.SubFlow<In, S, Mat> conflateWithSeed(akka.japi.function.Function<Out, S>, akka.japi.function.Function2<S, Out, S>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #278                // class akka/stream/javadsl/SubFlow$$anonfun$conflateWithSeed$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #279                // Method akka/stream/javadsl/SubFlow$$anonfun$conflateWithSeed$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      17: new           #281                // class akka/stream/javadsl/SubFlow$$anonfun$conflateWithSeed$2
      20: dup
      21: aload_0
      22: aload_2
      23: invokespecial #282                // Method akka/stream/javadsl/SubFlow$$anonfun$conflateWithSeed$2."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      26: invokeinterface #285,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.conflateWithSeed:(Lscala/Function1;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      31: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      34: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      37: areturn

  public <O2> akka.stream.javadsl.SubFlow<In, O2, Mat> conflate(akka.japi.function.Function2<O2, O2, O2>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #290                // class akka/stream/javadsl/SubFlow$$anonfun$conflate$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #291                // Method akka/stream/javadsl/SubFlow$$anonfun$conflate$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      17: invokeinterface #293,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.conflate:(Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <S> akka.stream.javadsl.SubFlow<In, S, Mat> batch(long, akka.japi.function.Function<Out, S>, akka.japi.function.Function2<S, Out, S>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: lload_1
       9: new           #297                // class akka/stream/javadsl/SubFlow$$anonfun$batch$1
      12: dup
      13: aload_0
      14: aload_3
      15: invokespecial #298                // Method akka/stream/javadsl/SubFlow$$anonfun$batch$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      18: new           #300                // class akka/stream/javadsl/SubFlow$$anonfun$batch$2
      21: dup
      22: aload_0
      23: aload         4
      25: invokespecial #301                // Method akka/stream/javadsl/SubFlow$$anonfun$batch$2."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      28: invokeinterface #304,  5          // InterfaceMethod akka/stream/scaladsl/SubFlow.batch:(JLscala/Function1;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      33: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      36: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      39: areturn

  public <S> akka.stream.javadsl.SubFlow<In, S, Mat> batchWeighted(long, akka.japi.function.Function<Out, java.lang.Object>, akka.japi.function.Function<Out, S>, akka.japi.function.Function2<S, Out, S>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: lload_1
       9: new           #309                // class akka/stream/javadsl/SubFlow$$anonfun$batchWeighted$1
      12: dup
      13: aload_0
      14: aload_3
      15: invokespecial #310                // Method akka/stream/javadsl/SubFlow$$anonfun$batchWeighted$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      18: new           #312                // class akka/stream/javadsl/SubFlow$$anonfun$batchWeighted$2
      21: dup
      22: aload_0
      23: aload         4
      25: invokespecial #313                // Method akka/stream/javadsl/SubFlow$$anonfun$batchWeighted$2."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      28: new           #315                // class akka/stream/javadsl/SubFlow$$anonfun$batchWeighted$3
      31: dup
      32: aload_0
      33: aload         5
      35: invokespecial #316                // Method akka/stream/javadsl/SubFlow$$anonfun$batchWeighted$3."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function2;)V
      38: invokeinterface #319,  6          // InterfaceMethod akka/stream/scaladsl/SubFlow.batchWeighted:(JLscala/Function1;Lscala/Function1;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      43: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      46: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      49: areturn

  public <U> akka.stream.javadsl.SubFlow<In, U, Mat> expand(akka.japi.function.Function<Out, java.util.Iterator<U>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #322                // class akka/stream/javadsl/SubFlow$$anonfun$expand$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #323                // Method akka/stream/javadsl/SubFlow$$anonfun$expand$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      17: invokeinterface #325,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.expand:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> buffer(int, akka.stream.OverflowStrategy);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: aload_2
      10: invokeinterface #331,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.buffer:(ILakka/stream/OverflowStrategy;)Lakka/stream/scaladsl/FlowOps;
      15: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      18: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      21: areturn

  public <U> akka.stream.javadsl.SubFlow<In, U, Mat> transform(akka.japi.function.Creator<akka.stream.stage.Stage<Out, U>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #337                // class akka/stream/javadsl/SubFlow$$anonfun$transform$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #338                // Method akka/stream/javadsl/SubFlow$$anonfun$transform$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Creator;)V
      17: invokeinterface #340,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.transform:(Lscala/Function0;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public akka.stream.javadsl.SubFlow<In, akka.japi.Pair<java.util.List<Out>, akka.stream.javadsl.Source<Out, akka.NotUsed>>, Mat> prefixAndTail(int);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: invokeinterface #344,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.prefixAndTail:(I)Lakka/stream/scaladsl/FlowOps;
      14: new           #346                // class akka/stream/javadsl/SubFlow$$anonfun$prefixAndTail$1
      17: dup
      18: aload_0
      19: invokespecial #347                // Method akka/stream/javadsl/SubFlow$$anonfun$prefixAndTail$1."<init>":(Lakka/stream/javadsl/SubFlow;)V
      22: invokeinterface #146,  2          // InterfaceMethod akka/stream/scaladsl/FlowOps.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      27: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      30: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      33: areturn

  public <T, M> akka.stream.javadsl.SubFlow<In, T, Mat> flatMapConcat(akka.japi.function.Function<Out, ? extends akka.stream.Graph<akka.stream.SourceShape<T>, M>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: new           #350                // class akka/stream/javadsl/SubFlow$$anonfun$flatMapConcat$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #351                // Method akka/stream/javadsl/SubFlow$$anonfun$flatMapConcat$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      17: invokeinterface #353,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.flatMapConcat:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      22: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      25: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      28: areturn

  public <T, M> akka.stream.javadsl.SubFlow<In, T, Mat> flatMapMerge(int, akka.japi.function.Function<Out, ? extends akka.stream.Graph<akka.stream.SourceShape<T>, M>>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: new           #356                // class akka/stream/javadsl/SubFlow$$anonfun$flatMapMerge$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #357                // Method akka/stream/javadsl/SubFlow$$anonfun$flatMapMerge$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      18: invokeinterface #359,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.flatMapMerge:(ILscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public <T, M> akka.stream.javadsl.SubFlow<In, T, Mat> concat(akka.stream.Graph<akka.stream.SourceShape<T>, M>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #363,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.concat:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <T, M> akka.stream.javadsl.SubFlow<In, T, Mat> prepend(akka.stream.Graph<akka.stream.SourceShape<T>, M>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #367,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.prepend:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <T, M> akka.stream.javadsl.SubFlow<In, T, Mat> orElse(akka.stream.Graph<akka.stream.SourceShape<T>, M>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #370,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.orElse:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> alsoTo(akka.stream.Graph<akka.stream.SinkShape<Out>, ?>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #374,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.alsoTo:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> merge(akka.stream.Graph<akka.stream.SourceShape<T>, ?>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: aload_0
      10: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
      13: invokeinterface #379,  1          // InterfaceMethod akka/stream/scaladsl/SubFlow.merge$default$2:()Z
      18: invokeinterface #382,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.merge:(Lakka/stream/Graph;Z)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public <T> akka.stream.javadsl.SubFlow<In, T, Mat> interleave(akka.stream.Graph<akka.stream.SourceShape<T>, ?>, int);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: iload_2
      10: invokeinterface #387,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.interleave:(Lakka/stream/Graph;I)Lakka/stream/scaladsl/FlowOps;
      15: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      18: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      21: areturn

  public <U, M> akka.stream.javadsl.SubFlow<In, U, Mat> mergeSorted(akka.stream.Graph<akka.stream.SourceShape<U>, M>, java.util.Comparator<U>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: getstatic     #396                // Field scala/package$.MODULE$:Lscala/package$;
      12: invokevirtual #400                // Method scala/package$.Ordering:()Lscala/math/Ordering$;
      15: aload_2
      16: invokevirtual #406                // Method scala/math/Ordering$.comparatorToOrdering:(Ljava/util/Comparator;)Lscala/math/Ordering;
      19: invokeinterface #409,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.mergeSorted:(Lakka/stream/Graph;Lscala/math/Ordering;)Lakka/stream/scaladsl/FlowOps;
      24: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      27: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      30: areturn

  public <T> akka.stream.javadsl.SubFlow<In, scala.Tuple2<Out, T>, Mat> zip(akka.stream.Graph<akka.stream.SourceShape<T>, ?>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #414,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.zip:(Lakka/stream/Graph;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <Out2, Out3> akka.stream.javadsl.SubFlow<In, Out3, Mat> zipWith(akka.stream.Graph<akka.stream.SourceShape<Out2>, ?>, akka.japi.function.Function2<Out, Out2, Out3>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: getstatic     #422                // Field akka/stream/javadsl/package$.MODULE$:Lakka/stream/javadsl/package$;
      12: aload_2
      13: invokevirtual #426                // Method akka/stream/javadsl/package$.combinerToScala:(Lakka/japi/function/Function2;)Lscala/Function2;
      16: invokeinterface #429,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.zipWith:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/FlowOps;
      21: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      24: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      27: areturn

  public akka.stream.javadsl.SubFlow<In, akka.japi.Pair<Out, java.lang.Object>, Mat> zipWithIndex();
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: invokeinterface #435,  1          // InterfaceMethod akka/stream/scaladsl/SubFlow.zipWithIndex:()Lakka/stream/scaladsl/FlowOps;
      13: new           #437                // class akka/stream/javadsl/SubFlow$$anonfun$zipWithIndex$1
      16: dup
      17: aload_0
      18: invokespecial #438                // Method akka/stream/javadsl/SubFlow$$anonfun$zipWithIndex$1."<init>":(Lakka/stream/javadsl/SubFlow;)V
      21: invokeinterface #146,  2          // InterfaceMethod akka/stream/scaladsl/FlowOps.map:(Lscala/Function1;)Lakka/stream/scaladsl/FlowOps;
      26: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      29: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      32: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> initialTimeout(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #441,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.initialTimeout:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> completionTimeout(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #445,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.completionTimeout:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> idleTimeout(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #448,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.idleTimeout:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> backpressureTimeout(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #451,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.backpressureTimeout:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public <U> akka.stream.javadsl.SubFlow<In, U, Mat> keepAlive(scala.concurrent.duration.FiniteDuration, akka.japi.function.Creator<U>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: new           #455                // class akka/stream/javadsl/SubFlow$$anonfun$keepAlive$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #456                // Method akka/stream/javadsl/SubFlow$$anonfun$keepAlive$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Creator;)V
      18: invokeinterface #459,  3          // InterfaceMethod akka/stream/scaladsl/SubFlow.keepAlive:(Lscala/concurrent/duration/FiniteDuration;Lscala/Function0;)Lakka/stream/scaladsl/FlowOps;
      23: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      26: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      29: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> throttle(int, scala.concurrent.duration.FiniteDuration, int, akka.stream.ThrottleMode);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: aload_2
      10: iload_3
      11: aload         4
      13: invokeinterface #466,  5          // InterfaceMethod akka/stream/scaladsl/SubFlow.throttle:(ILscala/concurrent/duration/FiniteDuration;ILakka/stream/ThrottleMode;)Lakka/stream/scaladsl/FlowOps;
      18: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      21: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      24: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> throttle(int, scala.concurrent.duration.FiniteDuration, int, akka.japi.function.Function<Out, java.lang.Integer>, akka.stream.ThrottleMode);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: iload_1
       9: aload_2
      10: iload_3
      11: new           #474                // class akka/stream/javadsl/SubFlow$$anonfun$throttle$1
      14: dup
      15: aload_0
      16: aload         4
      18: invokespecial #475                // Method akka/stream/javadsl/SubFlow$$anonfun$throttle$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      21: aload         5
      23: invokeinterface #478,  6          // InterfaceMethod akka/stream/scaladsl/SubFlow.throttle:(ILscala/concurrent/duration/FiniteDuration;ILscala/Function1;Lakka/stream/ThrottleMode;)Lakka/stream/scaladsl/FlowOps;
      28: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      31: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      34: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> detach();
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: invokeinterface #483,  1          // InterfaceMethod akka/stream/scaladsl/SubFlow.detach:()Lakka/stream/scaladsl/FlowOps;
      13: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      16: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      19: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> initialDelay(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #486,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.initialDelay:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> withAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #491,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> addAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #496,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> named(java.lang.String);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: invokeinterface #501,  2          // InterfaceMethod akka/stream/scaladsl/SubFlow.named:(Ljava/lang/String;)Lakka/stream/scaladsl/FlowOps;
      14: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      17: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      20: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> async();
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: invokeinterface #506,  1          // InterfaceMethod akka/stream/scaladsl/SubFlow.async:()Lakka/stream/scaladsl/FlowOps;
      13: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      16: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      19: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> log(java.lang.String, akka.japi.function.Function<Out, java.lang.Object>, akka.event.LoggingAdapter);
    Code:
       0: new           #2                  // class akka/stream/javadsl/SubFlow
       3: dup
       4: aload_0
       5: getfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       8: aload_1
       9: new           #510                // class akka/stream/javadsl/SubFlow$$anonfun$log$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #511                // Method akka/stream/javadsl/SubFlow$$anonfun$log$1."<init>":(Lakka/stream/javadsl/SubFlow;Lakka/japi/function/Function;)V
      18: aload_3
      19: invokeinterface #514,  4          // InterfaceMethod akka/stream/scaladsl/SubFlow.log:(Ljava/lang/String;Lscala/Function1;Lakka/event/LoggingAdapter;)Lakka/stream/scaladsl/FlowOps;
      24: checkcast     #24                 // class akka/stream/scaladsl/SubFlow
      27: invokespecial #51                 // Method "<init>":(Lakka/stream/scaladsl/SubFlow;)V
      30: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> log(java.lang.String, akka.japi.function.Function<Out, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #519                // Method log:(Ljava/lang/String;Lakka/japi/function/Function;Lakka/event/LoggingAdapter;)Lakka/stream/javadsl/SubFlow;
       7: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> log(java.lang.String, akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #525                // Field akka/stream/impl/ConstantFun$.MODULE$:Lakka/stream/impl/ConstantFun$;
       5: invokevirtual #529                // Method akka/stream/impl/ConstantFun$.javaIdentityFunction:()Lakka/japi/function/Function;
       8: aload_2
       9: invokevirtual #519                // Method log:(Ljava/lang/String;Lakka/japi/function/Function;Lakka/event/LoggingAdapter;)Lakka/stream/javadsl/SubFlow;
      12: areturn

  public akka.stream.javadsl.SubFlow<In, Out, Mat> log(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #525                // Field akka/stream/impl/ConstantFun$.MODULE$:Lakka/stream/impl/ConstantFun$;
       5: invokevirtual #529                // Method akka/stream/impl/ConstantFun$.javaIdentityFunction:()Lakka/japi/function/Function;
       8: aconst_null
       9: invokevirtual #519                // Method log:(Ljava/lang/String;Lakka/japi/function/Function;Lakka/event/LoggingAdapter;)Lakka/stream/javadsl/SubFlow;
      12: areturn

  public akka.stream.javadsl.SubFlow(akka.stream.scaladsl.SubFlow<Out, Mat, ?, akka.stream.scaladsl.Sink<In, Mat>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field delegate:Lakka/stream/scaladsl/SubFlow;
       5: aload_0
       6: invokespecial #532                // Method java/lang/Object."<init>":()V
       9: return
}
