Compiled from "Flow.scala"
public final class akka.stream.javadsl.Flow$$anonfun$statefulMapConcat$1$$anonfun$apply$1 extends scala.runtime.AbstractFunction1<Out, scala.collection.immutable.Seq<T>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.japi.function.Function fun$1;

  public final scala.collection.immutable.Seq<T> apply(Out);
    Code:
       0: getstatic     #24                 // Field akka/japi/Util$.MODULE$:Lakka/japi/Util$;
       3: aload_0
       4: getfield      #26                 // Field fun$1:Lakka/japi/function/Function;
       7: aload_1
       8: invokeinterface #31,  2           // InterfaceMethod akka/japi/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #33                 // class java/lang/Iterable
      16: invokevirtual #37                 // Method akka/japi/Util$.immutableSeq:(Ljava/lang/Iterable;)Lscala/collection/immutable/Seq;
      19: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method apply:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
       5: areturn

  public akka.stream.javadsl.Flow$$anonfun$statefulMapConcat$1$$anonfun$apply$1(akka.stream.javadsl.Flow<In, Out, Mat>.$anonfun$statefulMapConcat$1);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #26                 // Field fun$1:Lakka/japi/function/Function;
       5: aload_0
       6: invokespecial #49                 // Method scala/runtime/AbstractFunction1."<init>":()V
       9: return
}
