Compiled from "BidiFlow.scala"
public final class akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, Mat> implements akka.stream.Graph<akka.stream.BidiShape<I1, O1, I2, O2>, Mat> {
  private final akka.stream.scaladsl.BidiFlow<I1, O1, I2, O2, Mat> delegate;

  public static <I, O> akka.stream.javadsl.BidiFlow<I, I, O, O, akka.NotUsed> bidirectionalIdleTimeout(scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/BidiFlow$.MODULE$:Lakka/stream/javadsl/BidiFlow$;
       3: aload_0
       4: invokevirtual #21                 // Method akka/stream/javadsl/BidiFlow$.bidirectionalIdleTimeout:(Lscala/concurrent/duration/FiniteDuration;)Lakka/stream/javadsl/BidiFlow;
       7: areturn

  public static <I1, O1, I2, O2> akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, akka.NotUsed> fromFunctions(akka.japi.function.Function<I1, O1>, akka.japi.function.Function<I2, O2>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/BidiFlow$.MODULE$:Lakka/stream/javadsl/BidiFlow$;
       3: aload_0
       4: aload_1
       5: invokevirtual #25                 // Method akka/stream/javadsl/BidiFlow$.fromFunctions:(Lakka/japi/function/Function;Lakka/japi/function/Function;)Lakka/stream/javadsl/BidiFlow;
       8: areturn

  public static <I1, O1, I2, O2, M1, M2> akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, akka.NotUsed> fromFlows(akka.stream.Graph<akka.stream.FlowShape<I1, O1>, M1>, akka.stream.Graph<akka.stream.FlowShape<I2, O2>, M2>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/BidiFlow$.MODULE$:Lakka/stream/javadsl/BidiFlow$;
       3: aload_0
       4: aload_1
       5: invokevirtual #29                 // Method akka/stream/javadsl/BidiFlow$.fromFlows:(Lakka/stream/Graph;Lakka/stream/Graph;)Lakka/stream/javadsl/BidiFlow;
       8: areturn

  public static <I1, O1, I2, O2, M1, M2, M> akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, M> fromFlowsMat(akka.stream.Graph<akka.stream.FlowShape<I1, O1>, M1>, akka.stream.Graph<akka.stream.FlowShape<I2, O2>, M2>, akka.japi.function.Function2<M1, M2, M>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/BidiFlow$.MODULE$:Lakka/stream/javadsl/BidiFlow$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #33                 // Method akka/stream/javadsl/BidiFlow$.fromFlowsMat:(Lakka/stream/Graph;Lakka/stream/Graph;Lakka/japi/function/Function2;)Lakka/stream/javadsl/BidiFlow;
       9: areturn

  public static <I1, O1, I2, O2, M> akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, M> fromGraph(akka.stream.Graph<akka.stream.BidiShape<I1, O1, I2, O2>, M>);
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/BidiFlow$.MODULE$:Lakka/stream/javadsl/BidiFlow$;
       3: aload_0
       4: invokevirtual #37                 // Method akka/stream/javadsl/BidiFlow$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/javadsl/BidiFlow;
       7: areturn

  public static <A, B> akka.stream.javadsl.BidiFlow<A, A, B, B, akka.NotUsed> identity();
    Code:
       0: getstatic     #19                 // Field akka/stream/javadsl/BidiFlow$.MODULE$:Lakka/stream/javadsl/BidiFlow$;
       3: invokevirtual #41                 // Method akka/stream/javadsl/BidiFlow$.identity:()Lakka/stream/javadsl/BidiFlow;
       6: areturn

  public akka.stream.Graph<akka.stream.BidiShape<I1, O1, I2, O2>, Mat> async();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method akka/stream/Graph$class.async:(Lakka/stream/Graph;)Lakka/stream/Graph;
       4: areturn

  public akka.stream.impl.StreamLayout$Module module();
    Code:
       0: aload_0
       1: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       4: invokevirtual #61                 // Method akka/stream/scaladsl/BidiFlow.module:()Lakka/stream/impl/StreamLayout$Module;
       7: areturn

  public akka.stream.BidiShape<I1, O1, I2, O2> shape();
    Code:
       0: aload_0
       1: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       4: invokevirtual #65                 // Method akka/stream/scaladsl/BidiFlow.shape:()Lakka/stream/BidiShape;
       7: areturn

  public akka.stream.scaladsl.BidiFlow<I1, O1, I2, O2, Mat> asScala();
    Code:
       0: aload_0
       1: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       4: areturn

  public <OO1, II2, Mat2> akka.stream.javadsl.BidiFlow<I1, OO1, II2, O2, Mat> atop(akka.stream.javadsl.BidiFlow<O1, OO1, II2, I2, Mat2>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/BidiFlow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: aload_1
       9: invokevirtual #71                 // Method asScala:()Lakka/stream/scaladsl/BidiFlow;
      12: invokevirtual #74                 // Method akka/stream/scaladsl/BidiFlow.atop:(Lakka/stream/Graph;)Lakka/stream/scaladsl/BidiFlow;
      15: invokespecial #78                 // Method "<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      18: areturn

  public <OO1, II2, Mat2, M> akka.stream.javadsl.BidiFlow<I1, OO1, II2, O2, M> atop(akka.stream.javadsl.BidiFlow<O1, OO1, II2, I2, Mat2>, akka.japi.function.Function2<Mat, Mat2, M>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/BidiFlow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: aload_1
       9: invokevirtual #71                 // Method asScala:()Lakka/stream/scaladsl/BidiFlow;
      12: getstatic     #85                 // Field akka/stream/javadsl/package$.MODULE$:Lakka/stream/javadsl/package$;
      15: aload_2
      16: invokevirtual #89                 // Method akka/stream/javadsl/package$.combinerToScala:(Lakka/japi/function/Function2;)Lscala/Function2;
      19: invokevirtual #93                 // Method akka/stream/scaladsl/BidiFlow.atopMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/BidiFlow;
      22: invokespecial #78                 // Method "<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      25: areturn

  public <Mat2> akka.stream.javadsl.Flow<I1, O2, Mat> join(akka.stream.javadsl.Flow<O1, I2, Mat2>);
    Code:
       0: new           #99                 // class akka/stream/javadsl/Flow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: aload_1
       9: invokevirtual #102                // Method akka/stream/javadsl/Flow.asScala:()Lakka/stream/scaladsl/Flow;
      12: invokevirtual #105                // Method akka/stream/scaladsl/BidiFlow.join:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Flow;
      15: invokespecial #108                // Method akka/stream/javadsl/Flow."<init>":(Lakka/stream/scaladsl/Flow;)V
      18: areturn

  public <Mat2, M> akka.stream.javadsl.Flow<I1, O2, M> join(akka.stream.javadsl.Flow<O1, I2, Mat2>, akka.japi.function.Function2<Mat, Mat2, M>);
    Code:
       0: new           #99                 // class akka/stream/javadsl/Flow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: aload_1
       9: invokevirtual #102                // Method akka/stream/javadsl/Flow.asScala:()Lakka/stream/scaladsl/Flow;
      12: getstatic     #85                 // Field akka/stream/javadsl/package$.MODULE$:Lakka/stream/javadsl/package$;
      15: aload_2
      16: invokevirtual #89                 // Method akka/stream/javadsl/package$.combinerToScala:(Lakka/japi/function/Function2;)Lscala/Function2;
      19: invokevirtual #115                // Method akka/stream/scaladsl/BidiFlow.joinMat:(Lakka/stream/Graph;Lscala/Function2;)Lakka/stream/scaladsl/Flow;
      22: invokespecial #108                // Method akka/stream/javadsl/Flow."<init>":(Lakka/stream/scaladsl/Flow;)V
      25: areturn

  public akka.stream.javadsl.BidiFlow<I2, O2, I1, O1, Mat> reversed();
    Code:
       0: new           #2                  // class akka/stream/javadsl/BidiFlow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: invokevirtual #118                // Method akka/stream/scaladsl/BidiFlow.reversed:()Lakka/stream/scaladsl/BidiFlow;
      11: invokespecial #78                 // Method "<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      14: areturn

  public <Mat2> akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, Mat2> mapMaterializedValue(akka.japi.function.Function<Mat, Mat2>);
    Code:
       0: new           #2                  // class akka/stream/javadsl/BidiFlow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: new           #122                // class akka/stream/javadsl/BidiFlow$$anonfun$mapMaterializedValue$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #125                // Method akka/stream/javadsl/BidiFlow$$anonfun$mapMaterializedValue$1."<init>":(Lakka/stream/javadsl/BidiFlow;Lakka/japi/function/Function;)V
      17: invokevirtual #128                // Method akka/stream/scaladsl/BidiFlow.mapMaterializedValue:(Lscala/Function1;)Lakka/stream/scaladsl/BidiFlow;
      20: invokespecial #78                 // Method "<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      23: areturn

  public akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, Mat> withAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/javadsl/BidiFlow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: aload_1
       9: invokevirtual #135                // Method akka/stream/scaladsl/BidiFlow.withAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/BidiFlow;
      12: invokespecial #78                 // Method "<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      15: areturn

  public akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, Mat> addAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/javadsl/BidiFlow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: aload_1
       9: invokevirtual #140                // Method akka/stream/scaladsl/BidiFlow.addAttributes:(Lakka/stream/Attributes;)Lakka/stream/scaladsl/BidiFlow;
      12: invokespecial #78                 // Method "<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      15: areturn

  public akka.stream.javadsl.BidiFlow<I1, O1, I2, O2, Mat> named(java.lang.String);
    Code:
       0: new           #2                  // class akka/stream/javadsl/BidiFlow
       3: dup
       4: aload_0
       5: getfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       8: aload_1
       9: invokevirtual #145                // Method akka/stream/scaladsl/BidiFlow.named:(Ljava/lang/String;)Lakka/stream/scaladsl/BidiFlow;
      12: invokespecial #78                 // Method "<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      15: areturn

  public akka.stream.Graph named(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #150                // Method named:(Ljava/lang/String;)Lakka/stream/javadsl/BidiFlow;
       5: areturn

  public akka.stream.Graph addAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #153                // Method addAttributes:(Lakka/stream/Attributes;)Lakka/stream/javadsl/BidiFlow;
       5: areturn

  public akka.stream.Graph withAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #155                // Method withAttributes:(Lakka/stream/Attributes;)Lakka/stream/javadsl/BidiFlow;
       5: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #157                // Method shape:()Lakka/stream/BidiShape;
       4: areturn

  public akka.stream.javadsl.BidiFlow(akka.stream.scaladsl.BidiFlow<I1, O1, I2, O2, Mat>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field delegate:Lakka/stream/scaladsl/BidiFlow;
       5: aload_0
       6: invokespecial #160                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #164                // Method akka/stream/Graph$class.$init$:(Lakka/stream/Graph;)V
      13: return
}
