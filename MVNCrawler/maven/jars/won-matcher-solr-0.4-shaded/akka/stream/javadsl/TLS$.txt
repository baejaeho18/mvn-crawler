Compiled from "TLS.scala"
public final class akka.stream.javadsl.TLS$ {
  public static final akka.stream.javadsl.TLS$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/javadsl/TLS$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, java.util.Optional<com.typesafe.sslconfig.akka.AkkaSSLConfig>, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole);
    Code:
       0: new           #16                 // class akka/stream/javadsl/BidiFlow
       3: dup
       4: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       7: aload_1
       8: getstatic     #26                 // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
      11: aload_2
      12: invokevirtual #30                 // Method scala/compat/java8/OptionConverters$.toScala:(Ljava/util/Optional;)Lscala/Option;
      15: aload_3
      16: aload         4
      18: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
      21: invokevirtual #34                 // Method akka/stream/scaladsl/TLS$.apply$default$5:()Lakka/stream/TLSClosing;
      24: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
      27: invokevirtual #38                 // Method akka/stream/scaladsl/TLS$.apply$default$6:()Lscala/Option;
      30: invokevirtual #42                 // Method akka/stream/scaladsl/TLS$.apply:(Ljavax/net/ssl/SSLContext;Lscala/Option;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Lakka/stream/TLSClosing;Lscala/Option;)Lakka/stream/scaladsl/BidiFlow;
      33: invokespecial #45                 // Method akka/stream/javadsl/BidiFlow."<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      36: areturn

  public akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole);
    Code:
       0: new           #16                 // class akka/stream/javadsl/BidiFlow
       3: dup
       4: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       7: aload_1
       8: getstatic     #60                 // Field scala/None$.MODULE$:Lscala/None$;
      11: aload_2
      12: aload_3
      13: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
      16: invokevirtual #34                 // Method akka/stream/scaladsl/TLS$.apply$default$5:()Lakka/stream/TLSClosing;
      19: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
      22: invokevirtual #38                 // Method akka/stream/scaladsl/TLS$.apply$default$6:()Lscala/Option;
      25: invokevirtual #42                 // Method akka/stream/scaladsl/TLS$.apply:(Ljavax/net/ssl/SSLContext;Lscala/Option;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Lakka/stream/TLSClosing;Lscala/Option;)Lakka/stream/scaladsl/BidiFlow;
      28: invokespecial #45                 // Method akka/stream/javadsl/BidiFlow."<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      31: areturn

  public akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, java.util.Optional<com.typesafe.sslconfig.akka.AkkaSSLConfig>, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole, java.util.Optional<akka.japi.Pair<java.lang.String, java.lang.Integer>>, akka.stream.TLSClosing);
    Code:
       0: new           #16                 // class akka/stream/javadsl/BidiFlow
       3: dup
       4: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       7: aload_1
       8: getstatic     #26                 // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
      11: aload_2
      12: invokevirtual #30                 // Method scala/compat/java8/OptionConverters$.toScala:(Ljava/util/Optional;)Lscala/Option;
      15: aload_3
      16: aload         4
      18: aload         6
      20: getstatic     #26                 // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
      23: aload         5
      25: invokevirtual #30                 // Method scala/compat/java8/OptionConverters$.toScala:(Ljava/util/Optional;)Lscala/Option;
      28: new           #63                 // class akka/stream/javadsl/TLS$$anonfun$create$1
      31: dup
      32: invokespecial #64                 // Method akka/stream/javadsl/TLS$$anonfun$create$1."<init>":()V
      35: invokevirtual #70                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      38: invokevirtual #42                 // Method akka/stream/scaladsl/TLS$.apply:(Ljavax/net/ssl/SSLContext;Lscala/Option;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Lakka/stream/TLSClosing;Lscala/Option;)Lakka/stream/scaladsl/BidiFlow;
      41: invokespecial #45                 // Method akka/stream/javadsl/BidiFlow."<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      44: areturn

  public akka.stream.javadsl.BidiFlow<akka.stream.TLSProtocol$SslTlsOutbound, akka.util.ByteString, akka.util.ByteString, akka.stream.TLSProtocol$SslTlsInbound, akka.NotUsed> create(javax.net.ssl.SSLContext, akka.stream.TLSProtocol$NegotiateNewSession, akka.stream.TLSRole, java.util.Optional<akka.japi.Pair<java.lang.String, java.lang.Integer>>, akka.stream.TLSClosing);
    Code:
       0: new           #16                 // class akka/stream/javadsl/BidiFlow
       3: dup
       4: getstatic     #21                 // Field akka/stream/scaladsl/TLS$.MODULE$:Lakka/stream/scaladsl/TLS$;
       7: aload_1
       8: getstatic     #60                 // Field scala/None$.MODULE$:Lscala/None$;
      11: aload_2
      12: aload_3
      13: aload         5
      15: getstatic     #26                 // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
      18: aload         4
      20: invokevirtual #30                 // Method scala/compat/java8/OptionConverters$.toScala:(Ljava/util/Optional;)Lscala/Option;
      23: new           #76                 // class akka/stream/javadsl/TLS$$anonfun$create$2
      26: dup
      27: invokespecial #77                 // Method akka/stream/javadsl/TLS$$anonfun$create$2."<init>":()V
      30: invokevirtual #70                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      33: invokevirtual #42                 // Method akka/stream/scaladsl/TLS$.apply:(Ljavax/net/ssl/SSLContext;Lscala/Option;Lakka/stream/TLSProtocol$NegotiateNewSession;Lakka/stream/TLSRole;Lakka/stream/TLSClosing;Lscala/Option;)Lakka/stream/scaladsl/BidiFlow;
      36: invokespecial #45                 // Method akka/stream/javadsl/BidiFlow."<init>":(Lakka/stream/scaladsl/BidiFlow;)V
      39: areturn

  private akka.stream.javadsl.TLS$();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #80                 // Field MODULE$:Lakka/stream/javadsl/TLS$;
       8: return
}
