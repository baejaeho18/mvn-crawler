Compiled from "Shape.scala"
public final class akka.stream.SourceShape<T> extends akka.stream.Shape implements scala.Product, scala.Serializable {
  private final akka.stream.Outlet<T> out;

  private final scala.collection.immutable.Seq<akka.stream.Inlet<?>> inlets;

  private final scala.collection.immutable.Seq<akka.stream.Outlet<?>> outlets;

  public static <T> scala.Option<akka.stream.Outlet<T>> unapply(akka.stream.SourceShape<T>);
    Code:
       0: getstatic     #21                 // Field akka/stream/SourceShape$.MODULE$:Lakka/stream/SourceShape$;
       3: aload_0
       4: invokevirtual #23                 // Method akka/stream/SourceShape$.unapply:(Lakka/stream/SourceShape;)Lscala/Option;
       7: areturn

  public static <T> akka.stream.SourceShape<T> apply(akka.stream.Outlet<T>);
    Code:
       0: getstatic     #21                 // Field akka/stream/SourceShape$.MODULE$:Lakka/stream/SourceShape$;
       3: aload_0
       4: invokevirtual #27                 // Method akka/stream/SourceShape$.apply:(Lakka/stream/Outlet;)Lakka/stream/SourceShape;
       7: areturn

  public static <T> akka.stream.SourceShape<T> of(akka.stream.Outlet<T>);
    Code:
       0: getstatic     #21                 // Field akka/stream/SourceShape$.MODULE$:Lakka/stream/SourceShape$;
       3: aload_0
       4: invokevirtual #30                 // Method akka/stream/SourceShape$.of:(Lakka/stream/Outlet;)Lakka/stream/SourceShape;
       7: areturn

  public akka.stream.Outlet<T> out();
    Code:
       0: aload_0
       1: getfield      #41                 // Field out:Lakka/stream/Outlet;
       4: areturn

  public scala.collection.immutable.Seq<akka.stream.Inlet<?>> inlets();
    Code:
       0: aload_0
       1: getfield      #46                 // Field inlets:Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq<akka.stream.Outlet<?>> outlets();
    Code:
       0: aload_0
       1: getfield      #48                 // Field outlets:Lscala/collection/immutable/Seq;
       4: areturn

  public akka.stream.SourceShape<T> deepCopy();
    Code:
       0: new           #2                  // class akka/stream/SourceShape
       3: dup
       4: aload_0
       5: invokevirtual #52                 // Method out:()Lakka/stream/Outlet;
       8: invokevirtual #57                 // Method akka/stream/Outlet.carbonCopy:()Lakka/stream/Outlet;
      11: invokespecial #61                 // Method "<init>":(Lakka/stream/Outlet;)V
      14: areturn

  public akka.stream.Shape copyFromPorts(scala.collection.immutable.Seq<akka.stream.Inlet<?>>, scala.collection.immutable.Seq<akka.stream.Outlet<?>>);
    Code:
       0: getstatic     #68                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: invokeinterface #74,  1           // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
       9: new           #76                 // class akka/stream/SourceShape$$anonfun$copyFromPorts$3
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #79                 // Method akka/stream/SourceShape$$anonfun$copyFromPorts$3."<init>":(Lakka/stream/SourceShape;Lscala/collection/immutable/Seq;)V
      18: invokevirtual #83                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      21: getstatic     #68                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      24: aload_2
      25: invokeinterface #87,  1           // InterfaceMethod scala/collection/immutable/Seq.size:()I
      30: iconst_1
      31: if_icmpne     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: new           #89                 // class akka/stream/SourceShape$$anonfun$copyFromPorts$4
      42: dup
      43: aload_0
      44: aload_2
      45: invokespecial #90                 // Method akka/stream/SourceShape$$anonfun$copyFromPorts$4."<init>":(Lakka/stream/SourceShape;Lscala/collection/immutable/Seq;)V
      48: invokevirtual #83                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      51: new           #2                  // class akka/stream/SourceShape
      54: dup
      55: aload_2
      56: invokeinterface #94,  1           // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
      61: checkcast     #54                 // class akka/stream/Outlet
      64: invokespecial #61                 // Method "<init>":(Lakka/stream/Outlet;)V
      67: areturn

  public <T> akka.stream.SourceShape<T> copy(akka.stream.Outlet<T>);
    Code:
       0: new           #2                  // class akka/stream/SourceShape
       3: dup
       4: aload_1
       5: invokespecial #61                 // Method "<init>":(Lakka/stream/Outlet;)V
       8: areturn

  public <T> akka.stream.Outlet<T> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method out:()Lakka/stream/Outlet;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #100                // String SourceShape
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #105                // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #111                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #116                // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #119                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #52                 // Method out:()Lakka/stream/Outlet;
      39: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #128                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #132                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/SourceShape
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #128                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #140                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #128                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #144                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     71
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/SourceShape
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          75
      25: aload_1
      26: checkcast     #2                  // class akka/stream/SourceShape
      29: astore        4
      31: aload_0
      32: invokevirtual #52                 // Method out:()Lakka/stream/Outlet;
      35: aload         4
      37: invokevirtual #52                 // Method out:()Lakka/stream/Outlet;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          67
      55: aload         5
      57: invokevirtual #147                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  public akka.stream.Shape deepCopy();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method deepCopy:()Lakka/stream/SourceShape;
       4: areturn

  public akka.stream.SourceShape(akka.stream.Outlet<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field out:Lakka/stream/Outlet;
       5: aload_0
       6: invokespecial #153                // Method akka/stream/Shape."<init>":()V
       9: aload_0
      10: invokestatic  #159                // Method scala/Product$class.$init$:(Lscala/Product;)V
      13: aload_0
      14: getstatic     #164                // Field akka/util/Collections$EmptyImmutableSeq$.MODULE$:Lakka/util/Collections$EmptyImmutableSeq$;
      17: putfield      #46                 // Field inlets:Lscala/collection/immutable/Seq;
      20: aload_0
      21: getstatic     #169                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      24: getstatic     #68                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: iconst_1
      28: anewarray     #54                 // class akka/stream/Outlet
      31: dup
      32: iconst_0
      33: aload_1
      34: aastore
      35: checkcast     #171                // class "[Ljava/lang/Object;"
      38: invokevirtual #175                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      41: invokevirtual #178                // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      44: putfield      #48                 // Field outlets:Lscala/collection/immutable/Seq;
      47: return
}
