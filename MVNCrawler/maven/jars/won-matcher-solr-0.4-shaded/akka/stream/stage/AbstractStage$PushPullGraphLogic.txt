Compiled from "Stage.scala"
public class akka.stream.stage.AbstractStage$PushPullGraphLogic<In, Out> extends akka.stream.stage.GraphStageLogic implements akka.stream.stage.DetachedContext<Out> {
  private final akka.stream.FlowShape<In, Out> akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape;

  private final akka.stream.Attributes attributes;

  private final akka.stream.stage.AbstractStage<In, Out, akka.stream.stage.Directive, akka.stream.stage.Directive, akka.stream.stage.Context<Out>, akka.stream.stage.LifecycleContext> stage;

  private akka.stream.stage.AbstractStage<In, Out, akka.stream.stage.Directive, akka.stream.stage.Directive, akka.stream.stage.Context<Out>, akka.stream.stage.LifecycleContext> akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage;

  public boolean isHoldingBoth();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method akka/stream/stage/DetachedContext$class.isHoldingBoth:(Lakka/stream/stage/DetachedContext;)Z
       4: ireturn

  public akka.stream.FlowShape<In, Out> akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape();
    Code:
       0: aload_0
       1: getfield      #29                 // Field akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.Attributes attributes();
    Code:
       0: aload_0
       1: getfield      #32                 // Field attributes:Lakka/stream/Attributes;
       4: areturn

  public akka.stream.stage.AbstractStage<In, Out, akka.stream.stage.Directive, akka.stream.stage.Directive, akka.stream.stage.Context<Out>, akka.stream.stage.LifecycleContext> stage();
    Code:
       0: aload_0
       1: getfield      #35                 // Field stage:Lakka/stream/stage/AbstractStage;
       4: areturn

  public final akka.stream.Materializer materializer();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method interpreter:()Lakka/stream/impl/fusing/GraphInterpreter;
       4: invokevirtual #45                 // Method akka/stream/impl/fusing/GraphInterpreter.materializer:()Lakka/stream/Materializer;
       7: areturn

  public akka.stream.stage.DetachedContext<Out> akka$stream$stage$AbstractStage$PushPullGraphLogic$$ctx();
    Code:
       0: aload_0
       1: areturn

  public akka.stream.stage.AbstractStage<In, Out, akka.stream.stage.Directive, akka.stream.stage.Directive, akka.stream.stage.Context<Out>, akka.stream.stage.LifecycleContext> akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage();
    Code:
       0: aload_0
       1: getfield      #49                 // Field akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:Lakka/stream/stage/AbstractStage;
       4: areturn

  private void akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage_$eq(akka.stream.stage.AbstractStage<In, Out, akka.stream.stage.Directive, akka.stream.stage.Directive, akka.stream.stage.Context<Out>, akka.stream.stage.LifecycleContext>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:Lakka/stream/stage/AbstractStage;
       5: return

  public void akka$stream$stage$AbstractStage$PushPullGraphLogic$$onSupervision(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
       4: aload_1
       5: invokevirtual #62                 // Method akka/stream/stage/AbstractStage.decide:(Ljava/lang/Throwable;)Lakka/stream/Supervision$Directive;
       8: astore_2
       9: getstatic     #68                 // Field akka/stream/Supervision$Stop$.MODULE$:Lakka/stream/Supervision$Stop$;
      12: aload_2
      13: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      16: ifeq          31
      19: aload_0
      20: aload_1
      21: invokevirtual #77                 // Method failStage:(Ljava/lang/Throwable;)V
      24: getstatic     #83                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: astore_3
      28: goto          102
      31: getstatic     #88                 // Field akka/stream/Supervision$Resume$.MODULE$:Lakka/stream/Supervision$Resume$;
      34: aload_2
      35: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          52
      41: aload_0
      42: invokespecial #92                 // Method resetAfterSupervise:()V
      45: getstatic     #83                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      48: astore_3
      49: goto          102
      52: getstatic     #97                 // Field akka/stream/Supervision$Restart$.MODULE$:Lakka/stream/Supervision$Restart$;
      55: aload_2
      56: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      59: ifeq          103
      62: aload_0
      63: invokespecial #92                 // Method resetAfterSupervise:()V
      66: aload_0
      67: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
      70: invokevirtual #100                // Method akka/stream/stage/AbstractStage.postStop:()V
      73: aload_0
      74: aload_0
      75: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
      78: invokevirtual #104                // Method akka/stream/stage/AbstractStage.restart:()Lakka/stream/stage/Stage;
      81: checkcast     #58                 // class akka/stream/stage/AbstractStage
      84: invokespecial #106                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage_$eq:(Lakka/stream/stage/AbstractStage;)V
      87: aload_0
      88: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
      91: aload_0
      92: invokevirtual #108                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$ctx:()Lakka/stream/stage/DetachedContext;
      95: invokevirtual #112                // Method akka/stream/stage/AbstractStage.preStart:(Lakka/stream/stage/LifecycleContext;)V
      98: getstatic     #83                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     101: astore_3
     102: return
     103: new           #114                // class scala/MatchError
     106: dup
     107: aload_2
     108: invokespecial #118                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     111: athrow

  private void resetAfterSupervise();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
       4: invokevirtual #125                // Method akka/stream/stage/AbstractStage.isDetached:()Z
       7: ifne          24
      10: aload_0
      11: aload_0
      12: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
      15: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
      18: invokevirtual #137                // Method isAvailable:(Lakka/stream/Outlet;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore_1
      30: aload_0
      31: aload_0
      32: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
      35: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
      38: invokevirtual #145                // Method hasBeenPulled:(Lakka/stream/Inlet;)Z
      41: ifne          59
      44: iload_1
      45: ifeq          59
      48: aload_0
      49: aload_0
      50: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
      53: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
      56: invokevirtual #149                // Method pull:(Lakka/stream/Inlet;)V
      59: return

  public void beforePreStart();
    Code:
       0: aload_0
       1: invokespecial #154                // Method akka/stream/stage/GraphStageLogic.beforePreStart:()V
       4: aload_0
       5: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
       8: invokevirtual #125                // Method akka/stream/stage/AbstractStage.isDetached:()Z
      11: ifeq          25
      14: aload_0
      15: aload_0
      16: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
      19: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
      22: invokevirtual #149                // Method pull:(Lakka/stream/Inlet;)V
      25: return

  public final akka.stream.stage.DownstreamDirective push(Out);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
       8: aload_1
       9: invokevirtual #159                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      12: aconst_null
      13: areturn

  public final akka.stream.stage.UpstreamDirective pull();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
       8: invokevirtual #149                // Method pull:(Lakka/stream/Inlet;)V
      11: aconst_null
      12: areturn

  public final akka.stream.stage.FreeDirective finish();
    Code:
       0: aload_0
       1: invokevirtual #167                // Method completeStage:()V
       4: aconst_null
       5: areturn

  public final akka.stream.stage.DownstreamDirective pushAndFinish(Out);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
       8: aload_1
       9: invokevirtual #159                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      12: aload_0
      13: invokevirtual #167                // Method completeStage:()V
      16: aconst_null
      17: areturn

  public final akka.stream.stage.FreeDirective fail(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method failStage:(Ljava/lang/Throwable;)V
       5: aconst_null
       6: areturn

  public final boolean isFinishing();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
       8: invokevirtual #175                // Method isClosed:(Lakka/stream/Inlet;)Z
      11: ireturn

  public final akka.stream.stage.TerminationDirective absorbTermination();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
       8: invokevirtual #179                // Method isClosed:(Lakka/stream/Outlet;)Z
      11: ifeq          42
      14: new           #181                // class java/lang/UnsupportedOperationException
      17: dup
      18: ldc           #183                // String It is not allowed to call absorbTermination() from onDownstreamFinish.
      20: invokespecial #186                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      23: astore_1
      24: aload_0
      25: invokevirtual #41                 // Method interpreter:()Lakka/stream/impl/fusing/GraphInterpreter;
      28: invokevirtual #190                // Method akka/stream/impl/fusing/GraphInterpreter.log:()Lakka/event/LoggingAdapter;
      31: aload_1
      32: invokevirtual #194                // Method java/lang/UnsupportedOperationException.getMessage:()Ljava/lang/String;
      35: invokeinterface #199,  2          // InterfaceMethod akka/event/LoggingAdapter.error:(Ljava/lang/String;)V
      40: aload_1
      41: athrow
      42: aload_0
      43: aload_0
      44: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
      47: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
      50: invokevirtual #137                // Method isAvailable:(Lakka/stream/Outlet;)Z
      53: ifeq          70
      56: aload_0
      57: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
      60: aload_0
      61: invokevirtual #108                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$ctx:()Lakka/stream/stage/DetachedContext;
      64: invokevirtual #203                // Method akka/stream/stage/AbstractStage.onPull:(Lakka/stream/stage/Context;)Lakka/stream/stage/Directive;
      67: goto          73
      70: getstatic     #83                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      73: pop
      74: aconst_null
      75: areturn

  public akka.stream.stage.FreeDirective pushAndPull(Out);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
       8: aload_1
       9: invokevirtual #159                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      12: aload_0
      13: aload_0
      14: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
      17: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
      20: invokevirtual #149                // Method pull:(Lakka/stream/Inlet;)V
      23: aconst_null
      24: areturn

  public final akka.stream.stage.UpstreamDirective holdUpstreamAndPush(Out);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
       8: aload_1
       9: invokevirtual #159                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      12: aconst_null
      13: areturn

  public final akka.stream.stage.DownstreamDirective holdDownstreamAndPull();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
       8: invokevirtual #149                // Method pull:(Lakka/stream/Inlet;)V
      11: aconst_null
      12: areturn

  public final boolean isHoldingDownstream();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
       8: invokevirtual #137                // Method isAvailable:(Lakka/stream/Outlet;)Z
      11: ireturn

  public final boolean isHoldingUpstream();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
       5: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
       8: invokevirtual #175                // Method isClosed:(Lakka/stream/Inlet;)Z
      11: ifne          28
      14: aload_0
      15: aload_0
      16: invokevirtual #127                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:()Lakka/stream/FlowShape;
      19: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
      22: invokevirtual #145                // Method hasBeenPulled:(Lakka/stream/Inlet;)Z
      25: ifeq          32
      28: iconst_0
      29: goto          33
      32: iconst_1
      33: ireturn

  public final akka.stream.stage.DownstreamDirective holdDownstream();
    Code:
       0: aconst_null
       1: areturn

  public final akka.stream.stage.UpstreamDirective holdUpstream();
    Code:
       0: aconst_null
       1: areturn

  public void preStart();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
       4: aload_0
       5: invokevirtual #108                // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$ctx:()Lakka/stream/stage/DetachedContext;
       8: invokevirtual #112                // Method akka/stream/stage/AbstractStage.preStart:(Lakka/stream/stage/LifecycleContext;)V
      11: return

  public void postStop();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
       4: invokevirtual #100                // Method akka/stream/stage/AbstractStage.postStop:()V
       7: return

  public java.lang.String toString();
    Code:
       0: new           #217                // class scala/StringContext
       3: dup
       4: getstatic     #222                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_2
       8: anewarray     #224                // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #226                // String PushPullGraphLogic(
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #228                // String )
      20: aastore
      21: checkcast     #230                // class "[Ljava/lang/Object;"
      24: invokevirtual #234                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      27: invokespecial #237                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      30: getstatic     #222                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: iconst_1
      34: anewarray     #70                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_0
      40: invokevirtual #56                 // Method akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:()Lakka/stream/stage/AbstractStage;
      43: aastore
      44: invokevirtual #241                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      47: invokevirtual #245                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      50: areturn

  public akka.stream.stage.AbstractStage$PushPullGraphLogic(akka.stream.FlowShape<In, Out>, akka.stream.Attributes, akka.stream.stage.AbstractStage<In, Out, akka.stream.stage.Directive, akka.stream.stage.Directive, akka.stream.stage.Context<Out>, akka.stream.stage.LifecycleContext>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field akka$stream$stage$AbstractStage$PushPullGraphLogic$$shape:Lakka/stream/FlowShape;
       5: aload_0
       6: aload_2
       7: putfield      #32                 // Field attributes:Lakka/stream/Attributes;
      10: aload_0
      11: aload_3
      12: putfield      #35                 // Field stage:Lakka/stream/stage/AbstractStage;
      15: aload_0
      16: aload_1
      17: invokespecial #249                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      20: aload_0
      21: invokestatic  #253                // Method akka/stream/stage/DetachedContext$class.$init$:(Lakka/stream/stage/DetachedContext;)V
      24: aload_0
      25: aload_3
      26: putfield      #49                 // Field akka$stream$stage$AbstractStage$PushPullGraphLogic$$currentStage:Lakka/stream/stage/AbstractStage;
      29: new           #255                // class akka/stream/stage/AbstractStage$PushPullGraphLogic$$anon$1
      32: dup
      33: aload_0
      34: invokespecial #258                // Method akka/stream/stage/AbstractStage$PushPullGraphLogic$$anon$1."<init>":(Lakka/stream/stage/AbstractStage$PushPullGraphLogic;)V
      37: astore        4
      39: aload_0
      40: aload_1
      41: invokevirtual #141                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
      44: aload         4
      46: invokevirtual #262                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
      49: aload_0
      50: aload_1
      51: invokevirtual #133                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
      54: aload         4
      56: checkcast     #264                // class akka/stream/stage/OutHandler
      59: invokevirtual #267                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
      62: return
}
