Compiled from "GraphStage.scala"
public final class akka.stream.stage.GraphStageLogic$StageActor$$anonfun$2 extends scala.runtime.AbstractFunction2<akka.actor.ActorRef, java.lang.Object, scala.runtime.BoxedUnit> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.stream.stage.GraphStageLogic$StageActor $outer;

  public final void apply(akka.actor.ActorRef, java.lang.Object);
    Code:
       0: new           #20                 // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #24                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_3
      10: aload_3
      11: ifnull        99
      14: aload_3
      15: invokevirtual #28                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: astore        4
      20: getstatic     #34                 // Field akka/actor/PoisonPill$.MODULE$:Lakka/actor/PoisonPill$;
      23: aload         4
      25: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          37
      31: iconst_1
      32: istore        5
      34: goto          57
      37: getstatic     #45                 // Field akka/actor/Kill$.MODULE$:Lakka/actor/Kill$;
      40: aload         4
      42: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      45: ifeq          54
      48: iconst_1
      49: istore        5
      51: goto          57
      54: iconst_0
      55: istore        5
      57: iload         5
      59: ifeq          99
      62: aload_0
      63: getfield      #47                 // Field $outer:Lakka/stream/stage/GraphStageLogic$StageActor;
      66: getfield      #51                 // Field akka/stream/stage/GraphStageLogic$StageActor.akka$stream$stage$GraphStageLogic$StageActor$$materializer:Lakka/stream/ActorMaterializer;
      69: invokevirtual #57                 // Method akka/stream/ActorMaterializer.logger:()Lakka/event/LoggingAdapter;
      72: ldc           #59                 // String {} message sent to StageActor({}) will be ignored, since it is not a real Actor.Use a custom message type to communicate with it instead.
      74: aload         4
      76: aload_0
      77: getfield      #47                 // Field $outer:Lakka/stream/stage/GraphStageLogic$StageActor;
      80: invokevirtual #63                 // Method akka/stream/stage/GraphStageLogic$StageActor.akka$stream$stage$GraphStageLogic$StageActor$$functionRef:()Lakka/actor/FunctionRef;
      83: invokevirtual #69                 // Method akka/actor/FunctionRef.path:()Lakka/actor/ActorPath;
      86: invokeinterface #75,  4           // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      91: getstatic     #81                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      94: astore        6
      96: goto          117
      99: aload_0
     100: getfield      #47                 // Field $outer:Lakka/stream/stage/GraphStageLogic$StageActor;
     103: invokevirtual #85                 // Method akka/stream/stage/GraphStageLogic$StageActor.akka$stream$stage$GraphStageLogic$StageActor$$callback:()Lakka/stream/stage/AsyncCallback;
     106: aload_3
     107: invokeinterface #91,  2           // InterfaceMethod akka/stream/stage/AsyncCallback.invoke:(Ljava/lang/Object;)V
     112: getstatic     #81                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     115: astore        6
     117: return

  public final java.lang.Object apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #101                // class akka/actor/ActorRef
       5: aload_2
       6: invokevirtual #103                // Method apply:(Lakka/actor/ActorRef;Ljava/lang/Object;)V
       9: getstatic     #81                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      12: areturn

  public akka.stream.stage.GraphStageLogic$StageActor$$anonfun$2(akka.stream.stage.GraphStageLogic$StageActor);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #47                 // Field $outer:Lakka/stream/stage/GraphStageLogic$StageActor;
      11: aload_0
      12: invokespecial #109                // Method scala/runtime/AbstractFunction2."<init>":()V
      15: return
}
