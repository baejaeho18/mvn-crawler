Compiled from "FanIn.scala"
public final class akka.stream.impl.FanIn$SubInput<T> implements org.reactivestreams.Subscriber<T>, scala.Product, scala.Serializable {
  private final akka.actor.ActorRef impl;

  private final int id;

  public akka.actor.ActorRef impl();
    Code:
       0: aload_0
       1: getfield      #19                 // Field impl:Lakka/actor/ActorRef;
       4: areturn

  public int id();
    Code:
       0: aload_0
       1: getfield      #24                 // Field id:I
       4: ireturn

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #32                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #35                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullException:(Ljava/lang/Throwable;)V
       7: getstatic     #40                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      10: aload_0
      11: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
      14: invokevirtual #46                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      17: astore_2
      18: new           #48                 // class akka/stream/impl/FanIn$OnError
      21: dup
      22: aload_0
      23: invokevirtual #50                 // Method id:()I
      26: aload_1
      27: invokespecial #54                 // Method akka/stream/impl/FanIn$OnError."<init>":(ILjava/lang/Throwable;)V
      30: astore_3
      31: aload_2
      32: aload_3
      33: invokeinterface #60,  2           // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      38: astore        4
      40: aload_2
      41: aload_3
      42: aload         4
      44: invokeinterface #64,  3           // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      49: return

  public void onComplete();
    Code:
       0: getstatic     #40                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
       3: aload_0
       4: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
       7: invokevirtual #46                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      10: astore_1
      11: new           #75                 // class akka/stream/impl/FanIn$OnComplete
      14: dup
      15: aload_0
      16: invokevirtual #50                 // Method id:()I
      19: invokespecial #78                 // Method akka/stream/impl/FanIn$OnComplete."<init>":(I)V
      22: astore_2
      23: aload_1
      24: aload_2
      25: invokeinterface #60,  2           // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      30: astore_3
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokeinterface #64,  3           // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      39: return

  public void onNext(T);
    Code:
       0: getstatic     #32                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #87                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullElement:(Ljava/lang/Object;)V
       7: getstatic     #40                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      10: aload_0
      11: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
      14: invokevirtual #46                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      17: astore_2
      18: new           #89                 // class akka/stream/impl/FanIn$OnNext
      21: dup
      22: aload_0
      23: invokevirtual #50                 // Method id:()I
      26: aload_1
      27: invokespecial #92                 // Method akka/stream/impl/FanIn$OnNext."<init>":(ILjava/lang/Object;)V
      30: astore_3
      31: aload_2
      32: aload_3
      33: invokeinterface #60,  2           // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      38: astore        4
      40: aload_2
      41: aload_3
      42: aload         4
      44: invokeinterface #64,  3           // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      49: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #32                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #103                // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullSubscription:(Lorg/reactivestreams/Subscription;)V
       7: getstatic     #40                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      10: aload_0
      11: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
      14: invokevirtual #46                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      17: astore_2
      18: new           #105                // class akka/stream/impl/FanIn$OnSubscribe
      21: dup
      22: aload_0
      23: invokevirtual #50                 // Method id:()I
      26: aload_1
      27: invokespecial #108                // Method akka/stream/impl/FanIn$OnSubscribe."<init>":(ILorg/reactivestreams/Subscription;)V
      30: astore_3
      31: aload_2
      32: aload_3
      33: invokeinterface #60,  2           // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      38: astore        4
      40: aload_2
      41: aload_3
      42: aload         4
      44: invokeinterface #64,  3           // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      49: return

  public <T> akka.stream.impl.FanIn$SubInput<T> copy(akka.actor.ActorRef, int);
    Code:
       0: new           #2                  // class akka/stream/impl/FanIn$SubInput
       3: dup
       4: aload_1
       5: iload_2
       6: invokespecial #119                // Method "<init>":(Lakka/actor/ActorRef;I)V
       9: areturn

  public <T> akka.actor.ActorRef copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
       4: areturn

  public <T> int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method id:()I
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #125                // String SubInput
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 49
                     1: 39
               default: 24
          }
      24: new           #130                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #136                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #139                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #142                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #50                 // Method id:()I
      43: invokestatic  #136                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      46: goto          53
      49: aload_0
      50: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
      53: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #150                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/FanIn$SubInput
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #158                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
       8: invokestatic  #164                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #168                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #50                 // Method id:()I
      20: invokestatic  #168                // Method scala/runtime/Statics.mix:(II)I
      23: istore_1
      24: iload_1
      25: iconst_2
      26: invokestatic  #171                // Method scala/runtime/Statics.finalizeHash:(II)I
      29: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #150                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #175                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     83
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/FanIn$SubInput
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          87
      25: aload_1
      26: checkcast     #2                  // class akka/stream/impl/FanIn$SubInput
      29: astore        4
      31: aload_0
      32: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
      35: aload         4
      37: invokevirtual #42                 // Method impl:()Lakka/actor/ActorRef;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          79
      55: aload         5
      57: invokevirtual #178                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          79
      63: aload_0
      64: invokevirtual #50                 // Method id:()I
      67: aload         4
      69: invokevirtual #50                 // Method id:()I
      72: if_icmpne     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ifeq          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: ireturn

  public akka.stream.impl.FanIn$SubInput(akka.actor.ActorRef, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field impl:Lakka/actor/ActorRef;
       5: aload_0
       6: iload_2
       7: putfield      #24                 // Field id:I
      10: aload_0
      11: invokespecial #182                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #188                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: return
}
