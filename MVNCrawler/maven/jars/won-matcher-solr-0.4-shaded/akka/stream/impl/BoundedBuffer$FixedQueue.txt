Compiled from "Buffers.scala"
public final class akka.stream.impl.BoundedBuffer$FixedQueue implements akka.stream.impl.Buffer<T> {
  private final java.lang.Object[] queue;

  private int head;

  private int tail;

  private final akka.stream.impl.BoundedBuffer $outer;

  private java.lang.Object[] queue();
    Code:
       0: aload_0
       1: getfield      #18                 // Field queue:[Ljava/lang/Object;
       4: areturn

  private int head();
    Code:
       0: aload_0
       1: getfield      #23                 // Field head:I
       4: ireturn

  private void head_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field head:I
       5: return

  private int tail();
    Code:
       0: aload_0
       1: getfield      #28                 // Field tail:I
       4: ireturn

  private void tail_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field tail:I
       5: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #32                 // Field $outer:Lakka/stream/impl/BoundedBuffer;
       4: invokevirtual #36                 // Method akka/stream/impl/BoundedBuffer.capacity:()I
       7: ireturn

  public int used();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method tail:()I
       4: aload_0
       5: invokespecial #41                 // Method head:()I
       8: isub
       9: ireturn

  public boolean isFull();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method used:()I
       4: aload_0
       5: invokevirtual #46                 // Method capacity:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method tail:()I
       4: aload_0
       5: invokespecial #41                 // Method head:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method tail:()I
       4: aload_0
       5: invokespecial #41                 // Method head:()I
       8: if_icmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void enqueue(T);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method tail:()I
       4: aload_0
       5: invokespecial #41                 // Method head:()I
       8: isub
       9: getstatic     #56                 // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
      12: invokevirtual #59                 // Method akka/stream/impl/Buffer$.FixedQueueSize:()I
      15: if_icmpne     68
      18: new           #61                 // class akka/stream/impl/BoundedBuffer$DynamicQueue
      21: dup
      22: aload_0
      23: getfield      #32                 // Field $outer:Lakka/stream/impl/BoundedBuffer;
      26: aload_0
      27: invokespecial #41                 // Method head:()I
      30: invokespecial #65                 // Method akka/stream/impl/BoundedBuffer$DynamicQueue."<init>":(Lakka/stream/impl/BoundedBuffer;I)V
      33: astore_2
      34: aload_0
      35: invokevirtual #67                 // Method nonEmpty:()Z
      38: ifeq          52
      41: aload_2
      42: aload_0
      43: invokevirtual #71                 // Method dequeue:()Ljava/lang/Object;
      46: invokevirtual #73                 // Method akka/stream/impl/BoundedBuffer$DynamicQueue.enqueue:(Ljava/lang/Object;)V
      49: goto          34
      52: aload_0
      53: getfield      #32                 // Field $outer:Lakka/stream/impl/BoundedBuffer;
      56: aload_2
      57: invokevirtual #77                 // Method akka/stream/impl/BoundedBuffer.akka$stream$impl$BoundedBuffer$$q_$eq:(Lakka/stream/impl/Buffer;)V
      60: aload_2
      61: aload_1
      62: invokevirtual #73                 // Method akka/stream/impl/BoundedBuffer$DynamicQueue.enqueue:(Ljava/lang/Object;)V
      65: goto          95
      68: aload_0
      69: invokespecial #79                 // Method queue:()[Ljava/lang/Object;
      72: aload_0
      73: invokespecial #39                 // Method tail:()I
      76: getstatic     #56                 // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
      79: invokevirtual #82                 // Method akka/stream/impl/Buffer$.FixedQueueMask:()I
      82: iand
      83: aload_1
      84: aastore
      85: aload_0
      86: aload_0
      87: invokespecial #39                 // Method tail:()I
      90: iconst_1
      91: iadd
      92: invokespecial #84                 // Method tail_$eq:(I)V
      95: return

  public T dequeue();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method head:()I
       4: getstatic     #56                 // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
       7: invokevirtual #82                 // Method akka/stream/impl/Buffer$.FixedQueueMask:()I
      10: iand
      11: istore_1
      12: aload_0
      13: invokespecial #79                 // Method queue:()[Ljava/lang/Object;
      16: iload_1
      17: aaload
      18: astore_2
      19: aload_0
      20: invokespecial #79                 // Method queue:()[Ljava/lang/Object;
      23: iload_1
      24: aconst_null
      25: aastore
      26: aload_0
      27: aload_0
      28: invokespecial #41                 // Method head:()I
      31: iconst_1
      32: iadd
      33: invokespecial #89                 // Method head_$eq:(I)V
      36: aload_2
      37: areturn

  public T peek();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method tail:()I
       4: aload_0
       5: invokespecial #41                 // Method head:()I
       8: if_icmpne     15
      11: aconst_null
      12: goto          31
      15: aload_0
      16: invokespecial #79                 // Method queue:()[Ljava/lang/Object;
      19: aload_0
      20: invokespecial #41                 // Method head:()I
      23: getstatic     #56                 // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
      26: invokevirtual #82                 // Method akka/stream/impl/Buffer$.FixedQueueMask:()I
      29: iand
      30: aaload
      31: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method nonEmpty:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #71                 // Method dequeue:()Ljava/lang/Object;
      11: pop
      12: goto          0
      15: return

  public void dropHead();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method dequeue:()Ljava/lang/Object;
       4: pop
       5: return

  public void dropTail();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #39                 // Method tail:()I
       5: iconst_1
       6: isub
       7: invokespecial #84                 // Method tail_$eq:(I)V
      10: aload_0
      11: invokespecial #79                 // Method queue:()[Ljava/lang/Object;
      14: aload_0
      15: invokespecial #39                 // Method tail:()I
      18: getstatic     #56                 // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
      21: invokevirtual #82                 // Method akka/stream/impl/Buffer$.FixedQueueMask:()I
      24: iand
      25: aconst_null
      26: aastore
      27: return

  public akka.stream.impl.BoundedBuffer$FixedQueue(akka.stream.impl.BoundedBuffer<T>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #32                 // Field $outer:Lakka/stream/impl/BoundedBuffer;
      11: aload_0
      12: invokespecial #99                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: getstatic     #56                 // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
      19: invokevirtual #59                 // Method akka/stream/impl/Buffer$.FixedQueueSize:()I
      22: anewarray     #5                  // class java/lang/Object
      25: putfield      #18                 // Field queue:[Ljava/lang/Object;
      28: aload_0
      29: iconst_0
      30: putfield      #23                 // Field head:I
      33: aload_0
      34: iconst_0
      35: putfield      #28                 // Field tail:I
      38: return
}
