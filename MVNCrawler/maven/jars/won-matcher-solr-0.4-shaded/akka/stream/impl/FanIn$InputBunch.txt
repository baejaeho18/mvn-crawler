Compiled from "FanIn.scala"
public abstract class akka.stream.impl.FanIn$InputBunch {
  private final int inputCount;

  public final int akka$stream$impl$FanIn$InputBunch$$bufferSize;

  public final akka.stream.impl.Pump akka$stream$impl$FanIn$InputBunch$$pump;

  private boolean allCancelled;

  private final akka.stream.impl.BatchingInputBuffer[] akka$stream$impl$FanIn$InputBunch$$inputs;

  private final byte[] states;

  private int akka$stream$impl$FanIn$InputBunch$$markCount;

  private int akka$stream$impl$FanIn$InputBunch$$markedPending;

  private int akka$stream$impl$FanIn$InputBunch$$markedDepleted;

  private boolean akka$stream$impl$FanIn$InputBunch$$receivedInput;

  private int completedCounter;

  private int preferredId;

  private int _lastDequeuedId;

  private final akka.stream.impl.TransferState AllOfMarkedInputs;

  private final akka.stream.impl.TransferState AnyOfMarkedInputs;

  private boolean allCancelled();
    Code:
       0: aload_0
       1: getfield      #29                 // Field allCancelled:Z
       4: ireturn

  private void allCancelled_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field allCancelled:Z
       5: return

  public akka.stream.impl.BatchingInputBuffer[] akka$stream$impl$FanIn$InputBunch$$inputs();
    Code:
       0: aload_0
       1: getfield      #37                 // Field akka$stream$impl$FanIn$InputBunch$$inputs:[Lakka/stream/impl/BatchingInputBuffer;
       4: areturn

  public int akka$stream$impl$FanIn$InputBunch$$markCount();
    Code:
       0: aload_0
       1: getfield      #40                 // Field akka$stream$impl$FanIn$InputBunch$$markCount:I
       4: ireturn

  private void akka$stream$impl$FanIn$InputBunch$$markCount_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field akka$stream$impl$FanIn$InputBunch$$markCount:I
       5: return

  public int akka$stream$impl$FanIn$InputBunch$$markedPending();
    Code:
       0: aload_0
       1: getfield      #44                 // Field akka$stream$impl$FanIn$InputBunch$$markedPending:I
       4: ireturn

  public void akka$stream$impl$FanIn$InputBunch$$markedPending_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field akka$stream$impl$FanIn$InputBunch$$markedPending:I
       5: return

  public int akka$stream$impl$FanIn$InputBunch$$markedDepleted();
    Code:
       0: aload_0
       1: getfield      #47                 // Field akka$stream$impl$FanIn$InputBunch$$markedDepleted:I
       4: ireturn

  public void akka$stream$impl$FanIn$InputBunch$$markedDepleted_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field akka$stream$impl$FanIn$InputBunch$$markedDepleted:I
       5: return

  public boolean akka$stream$impl$FanIn$InputBunch$$receivedInput();
    Code:
       0: aload_0
       1: getfield      #50                 // Field akka$stream$impl$FanIn$InputBunch$$receivedInput:Z
       4: ireturn

  public void akka$stream$impl$FanIn$InputBunch$$receivedInput_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field akka$stream$impl$FanIn$InputBunch$$receivedInput:Z
       5: return

  private int completedCounter();
    Code:
       0: aload_0
       1: getfield      #53                 // Field completedCounter:I
       4: ireturn

  private void completedCounter_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field completedCounter:I
       5: return

  private final boolean hasState(int, int);
    Code:
       0: aload_0
       1: getfield      #58                 // Field states:[B
       4: iload_1
       5: baload
       6: iload_2
       7: iand
       8: iconst_0
       9: if_icmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private final void setState(int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field states:[B
       4: iload_1
       5: iload_3
       6: ifeq          21
       9: aload_0
      10: getfield      #58                 // Field states:[B
      13: iload_1
      14: baload
      15: iload_2
      16: ior
      17: i2b
      18: goto          32
      21: aload_0
      22: getfield      #58                 // Field states:[B
      25: iload_1
      26: baload
      27: iload_2
      28: iconst_m1
      29: ixor
      30: iand
      31: i2b
      32: bastore
      33: return

  public final boolean akka$stream$impl$FanIn$InputBunch$$cancelled(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        16
       4: invokespecial #68                 // Method hasState:(II)Z
       7: ireturn

  private final void cancelled(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        16
       4: iload_2
       5: invokespecial #72                 // Method setState:(IIZ)V
       8: return

  public final boolean akka$stream$impl$FanIn$InputBunch$$completed(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #68                 // Method hasState:(II)Z
       7: ireturn

  public final void akka$stream$impl$FanIn$InputBunch$$registerCompleted(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #76                 // Method completedCounter:()I
       5: iconst_1
       6: iadd
       7: invokespecial #78                 // Method completedCounter_$eq:(I)V
      10: aload_0
      11: iload_1
      12: bipush        8
      14: iconst_1
      15: invokespecial #72                 // Method setState:(IIZ)V
      18: return

  public final boolean akka$stream$impl$FanIn$InputBunch$$depleted(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #68                 // Method hasState:(II)Z
       6: ireturn

  public final void akka$stream$impl$FanIn$InputBunch$$depleted(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: iload_2
       4: invokespecial #72                 // Method setState:(IIZ)V
       7: return

  public final boolean akka$stream$impl$FanIn$InputBunch$$pending(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #68                 // Method hasState:(II)Z
       6: ireturn

  public final void akka$stream$impl$FanIn$InputBunch$$pending(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: iload_2
       4: invokespecial #72                 // Method setState:(IIZ)V
       7: return

  public final boolean akka$stream$impl$FanIn$InputBunch$$marked(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokespecial #68                 // Method hasState:(II)Z
       6: ireturn

  private final void marked(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: iload_2
       4: invokespecial #72                 // Method setState:(IIZ)V
       7: return

  public java.lang.String toString();
    Code:
       0: new           #86                 // class scala/collection/immutable/StringOps
       3: dup
       4: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: new           #94                 // class scala/StringContext
      10: dup
      11: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: bipush        10
      16: anewarray     #96                 // class java/lang/String
      19: dup
      20: iconst_0
      21: ldc           #98                 // String |InputBunch\n          |  marked:
      23: aastore
      24: dup
      25: iconst_1
      26: ldc           #100                // String \n          |  pending:
      28: aastore
      29: dup
      30: iconst_2
      31: ldc           #102                // String \n          |  depleted:
      33: aastore
      34: dup
      35: iconst_3
      36: ldc           #104                // String \n          |  completed:
      38: aastore
      39: dup
      40: iconst_4
      41: ldc           #106                // String \n          |  cancelled:
      43: aastore
      44: dup
      45: iconst_5
      46: ldc           #108                // String \n          |\n          |    mark=
      48: aastore
      49: dup
      50: bipush        6
      52: ldc           #110                // String  pend=
      54: aastore
      55: dup
      56: bipush        7
      58: ldc           #112                // String  depl=
      60: aastore
      61: dup
      62: bipush        8
      64: ldc           #114                // String  pref=
      66: aastore
      67: dup
      68: bipush        9
      70: ldc           #116                // String
      72: aastore
      73: checkcast     #118                // class "[Ljava/lang/Object;"
      76: invokevirtual #122                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      79: invokespecial #126                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      82: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      85: bipush        9
      87: anewarray     #4                  // class java/lang/Object
      90: dup
      91: iconst_0
      92: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      95: aload_0
      96: getfield      #58                 // Field states:[B
      99: invokevirtual #130                // Method scala/Predef$.byteArrayOps:([B)Lscala/collection/mutable/ArrayOps;
     102: invokeinterface #136,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.iterator:()Lscala/collection/Iterator;
     107: new           #138                // class akka/stream/impl/FanIn$InputBunch$$anonfun$toString$1
     110: dup
     111: aload_0
     112: invokespecial #141                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$toString$1."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
     115: invokeinterface #147,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
     120: ldc           #149                // String ,
     122: invokeinterface #153,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
     127: aastore
     128: dup
     129: iconst_1
     130: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     133: aload_0
     134: getfield      #58                 // Field states:[B
     137: invokevirtual #130                // Method scala/Predef$.byteArrayOps:([B)Lscala/collection/mutable/ArrayOps;
     140: invokeinterface #136,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.iterator:()Lscala/collection/Iterator;
     145: new           #155                // class akka/stream/impl/FanIn$InputBunch$$anonfun$toString$2
     148: dup
     149: aload_0
     150: invokespecial #156                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$toString$2."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
     153: invokeinterface #147,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
     158: ldc           #149                // String ,
     160: invokeinterface #153,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
     165: aastore
     166: dup
     167: iconst_2
     168: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     171: aload_0
     172: getfield      #58                 // Field states:[B
     175: invokevirtual #130                // Method scala/Predef$.byteArrayOps:([B)Lscala/collection/mutable/ArrayOps;
     178: invokeinterface #136,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.iterator:()Lscala/collection/Iterator;
     183: new           #158                // class akka/stream/impl/FanIn$InputBunch$$anonfun$toString$3
     186: dup
     187: aload_0
     188: invokespecial #159                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$toString$3."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
     191: invokeinterface #147,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
     196: ldc           #149                // String ,
     198: invokeinterface #153,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
     203: aastore
     204: dup
     205: iconst_3
     206: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     209: aload_0
     210: getfield      #58                 // Field states:[B
     213: invokevirtual #130                // Method scala/Predef$.byteArrayOps:([B)Lscala/collection/mutable/ArrayOps;
     216: invokeinterface #136,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.iterator:()Lscala/collection/Iterator;
     221: new           #161                // class akka/stream/impl/FanIn$InputBunch$$anonfun$toString$4
     224: dup
     225: aload_0
     226: invokespecial #162                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$toString$4."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
     229: invokeinterface #147,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
     234: ldc           #149                // String ,
     236: invokeinterface #153,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
     241: aastore
     242: dup
     243: iconst_4
     244: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     247: aload_0
     248: getfield      #58                 // Field states:[B
     251: invokevirtual #130                // Method scala/Predef$.byteArrayOps:([B)Lscala/collection/mutable/ArrayOps;
     254: invokeinterface #136,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.iterator:()Lscala/collection/Iterator;
     259: new           #164                // class akka/stream/impl/FanIn$InputBunch$$anonfun$toString$5
     262: dup
     263: aload_0
     264: invokespecial #165                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$toString$5."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
     267: invokeinterface #147,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
     272: ldc           #149                // String ,
     274: invokeinterface #153,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
     279: aastore
     280: dup
     281: iconst_5
     282: aload_0
     283: invokevirtual #167                // Method akka$stream$impl$FanIn$InputBunch$$markCount:()I
     286: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     289: aastore
     290: dup
     291: bipush        6
     293: aload_0
     294: invokevirtual #175                // Method akka$stream$impl$FanIn$InputBunch$$markedPending:()I
     297: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     300: aastore
     301: dup
     302: bipush        7
     304: aload_0
     305: invokevirtual #177                // Method akka$stream$impl$FanIn$InputBunch$$markedDepleted:()I
     308: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     311: aastore
     312: dup
     313: bipush        8
     315: aload_0
     316: invokespecial #179                // Method preferredId:()I
     319: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     322: aastore
     323: invokevirtual #183                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     326: invokevirtual #187                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     329: invokevirtual #190                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     332: invokespecial #193                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     335: invokevirtual #196                // Method scala/collection/immutable/StringOps.stripMargin:()Ljava/lang/String;
     338: areturn

  private int preferredId();
    Code:
       0: aload_0
       1: getfield      #198                // Field preferredId:I
       4: ireturn

  private void preferredId_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #198                // Field preferredId:I
       5: return

  private int _lastDequeuedId();
    Code:
       0: aload_0
       1: getfield      #201                // Field _lastDequeuedId:I
       4: ireturn

  private void _lastDequeuedId_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #201                // Field _lastDequeuedId:I
       5: return

  public int lastDequeuedId();
    Code:
       0: aload_0
       1: invokespecial #205                // Method _lastDequeuedId:()I
       4: ireturn

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #209                // Method allCancelled:()Z
       4: ifne          35
       7: aload_0
       8: iconst_1
       9: invokespecial #211                // Method allCancelled_$eq:(Z)V
      12: iconst_0
      13: istore_1
      14: iload_1
      15: aload_0
      16: invokevirtual #213                // Method akka$stream$impl$FanIn$InputBunch$$inputs:()[Lakka/stream/impl/BatchingInputBuffer;
      19: arraylength
      20: if_icmpge     35
      23: aload_0
      24: iload_1
      25: invokevirtual #215                // Method cancel:(I)V
      28: iload_1
      29: iconst_1
      30: iadd
      31: istore_1
      32: goto          14
      35: return

  public void cancel(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #218                // Method akka$stream$impl$FanIn$InputBunch$$cancelled:(I)Z
       5: ifne          28
       8: aload_0
       9: invokevirtual #213                // Method akka$stream$impl$FanIn$InputBunch$$inputs:()[Lakka/stream/impl/BatchingInputBuffer;
      12: iload_1
      13: aaload
      14: invokevirtual #222                // Method akka/stream/impl/BatchingInputBuffer.cancel:()V
      17: aload_0
      18: iload_1
      19: iconst_1
      20: invokespecial #224                // Method cancelled:(IZ)V
      23: aload_0
      24: iload_1
      25: invokevirtual #227                // Method unmarkInput:(I)V
      28: return

  public abstract void onError(int, java.lang.Throwable);

  public void onDepleted(int);
    Code:
       0: return

  public void onCompleteWhenNoInput();
    Code:
       0: return

  public void markInput(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #235                // Method akka$stream$impl$FanIn$InputBunch$$marked:(I)Z
       5: ifne          60
       8: aload_0
       9: iload_1
      10: invokevirtual #237                // Method akka$stream$impl$FanIn$InputBunch$$depleted:(I)Z
      13: ifeq          26
      16: aload_0
      17: aload_0
      18: invokevirtual #177                // Method akka$stream$impl$FanIn$InputBunch$$markedDepleted:()I
      21: iconst_1
      22: iadd
      23: invokevirtual #239                // Method akka$stream$impl$FanIn$InputBunch$$markedDepleted_$eq:(I)V
      26: aload_0
      27: iload_1
      28: invokevirtual #241                // Method akka$stream$impl$FanIn$InputBunch$$pending:(I)Z
      31: ifeq          44
      34: aload_0
      35: aload_0
      36: invokevirtual #175                // Method akka$stream$impl$FanIn$InputBunch$$markedPending:()I
      39: iconst_1
      40: iadd
      41: invokevirtual #243                // Method akka$stream$impl$FanIn$InputBunch$$markedPending_$eq:(I)V
      44: aload_0
      45: iload_1
      46: iconst_1
      47: invokespecial #245                // Method marked:(IZ)V
      50: aload_0
      51: aload_0
      52: invokevirtual #167                // Method akka$stream$impl$FanIn$InputBunch$$markCount:()I
      55: iconst_1
      56: iadd
      57: invokespecial #247                // Method akka$stream$impl$FanIn$InputBunch$$markCount_$eq:(I)V
      60: return

  public void unmarkInput(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #235                // Method akka$stream$impl$FanIn$InputBunch$$marked:(I)Z
       5: ifeq          60
       8: aload_0
       9: iload_1
      10: invokevirtual #237                // Method akka$stream$impl$FanIn$InputBunch$$depleted:(I)Z
      13: ifeq          26
      16: aload_0
      17: aload_0
      18: invokevirtual #177                // Method akka$stream$impl$FanIn$InputBunch$$markedDepleted:()I
      21: iconst_1
      22: isub
      23: invokevirtual #239                // Method akka$stream$impl$FanIn$InputBunch$$markedDepleted_$eq:(I)V
      26: aload_0
      27: iload_1
      28: invokevirtual #241                // Method akka$stream$impl$FanIn$InputBunch$$pending:(I)Z
      31: ifeq          44
      34: aload_0
      35: aload_0
      36: invokevirtual #175                // Method akka$stream$impl$FanIn$InputBunch$$markedPending:()I
      39: iconst_1
      40: isub
      41: invokevirtual #243                // Method akka$stream$impl$FanIn$InputBunch$$markedPending_$eq:(I)V
      44: aload_0
      45: iload_1
      46: iconst_0
      47: invokespecial #245                // Method marked:(IZ)V
      50: aload_0
      51: aload_0
      52: invokevirtual #167                // Method akka$stream$impl$FanIn$InputBunch$$markCount:()I
      55: iconst_1
      56: isub
      57: invokespecial #247                // Method akka$stream$impl$FanIn$InputBunch$$markCount_$eq:(I)V
      60: return

  public void markAllInputs();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #250                // Field inputCount:I
       7: if_icmpge     22
      10: aload_0
      11: iload_1
      12: invokevirtual #252                // Method markInput:(I)V
      15: iload_1
      16: iconst_1
      17: iadd
      18: istore_1
      19: goto          2
      22: return

  public void unmarkAllInputs();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #250                // Field inputCount:I
       7: if_icmpge     22
      10: aload_0
      11: iload_1
      12: invokevirtual #227                // Method unmarkInput:(I)V
      15: iload_1
      16: iconst_1
      17: iadd
      18: istore_1
      19: goto          2
      22: return

  public boolean isPending(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #241                // Method akka$stream$impl$FanIn$InputBunch$$pending:(I)Z
       5: ireturn

  public boolean isDepleted(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #237                // Method akka$stream$impl$FanIn$InputBunch$$depleted:(I)Z
       5: ireturn

  public boolean isCancelled(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #218                // Method akka$stream$impl$FanIn$InputBunch$$cancelled:(I)Z
       5: ireturn

  public boolean isAllCompleted();
    Code:
       0: aload_0
       1: getfield      #250                // Field inputCount:I
       4: aload_0
       5: invokespecial #76                 // Method completedCounter:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int idToDequeue();
    Code:
       0: aload_0
       1: invokespecial #179                // Method preferredId:()I
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokevirtual #235                // Method akka$stream$impl$FanIn$InputBunch$$marked:(I)Z
      10: ifeq          23
      13: aload_0
      14: iload_1
      15: invokevirtual #241                // Method akka$stream$impl$FanIn$InputBunch$$pending:(I)Z
      18: ifeq          23
      21: iload_1
      22: ireturn
      23: iload_1
      24: iconst_1
      25: iadd
      26: istore_1
      27: iload_1
      28: aload_0
      29: getfield      #250                // Field inputCount:I
      32: if_icmpne     37
      35: iconst_0
      36: istore_1
      37: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      40: iload_1
      41: aload_0
      42: invokespecial #179                // Method preferredId:()I
      45: if_icmpeq     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: new           #260                // class akka/stream/impl/FanIn$InputBunch$$anonfun$idToDequeue$1
      56: dup
      57: aload_0
      58: invokespecial #261                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$idToDequeue$1."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
      61: invokevirtual #265                // Method scala/Predef$.require:(ZLscala/Function0;)V
      64: goto          5

  public java.lang.Object dequeue(int);
    Code:
       0: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: iload_1
       5: invokevirtual #270                // Method isDepleted:(I)Z
       8: ifeq          15
      11: iconst_0
      12: goto          16
      15: iconst_1
      16: new           #272                // class akka/stream/impl/FanIn$InputBunch$$anonfun$dequeue$1
      19: dup
      20: aload_0
      21: iload_1
      22: invokespecial #275                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$dequeue$1."<init>":(Lakka/stream/impl/FanIn$InputBunch;I)V
      25: invokevirtual #265                // Method scala/Predef$.require:(ZLscala/Function0;)V
      28: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      31: aload_0
      32: iload_1
      33: invokevirtual #277                // Method isPending:(I)Z
      36: new           #279                // class akka/stream/impl/FanIn$InputBunch$$anonfun$dequeue$2
      39: dup
      40: aload_0
      41: iload_1
      42: invokespecial #280                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$dequeue$2."<init>":(Lakka/stream/impl/FanIn$InputBunch;I)V
      45: invokevirtual #265                // Method scala/Predef$.require:(ZLscala/Function0;)V
      48: aload_0
      49: iload_1
      50: invokespecial #282                // Method _lastDequeuedId_$eq:(I)V
      53: aload_0
      54: invokevirtual #213                // Method akka$stream$impl$FanIn$InputBunch$$inputs:()[Lakka/stream/impl/BatchingInputBuffer;
      57: iload_1
      58: aaload
      59: astore_2
      60: aload_2
      61: invokevirtual #286                // Method akka/stream/impl/BatchingInputBuffer.dequeueInputElement:()Ljava/lang/Object;
      64: astore_3
      65: aload_2
      66: invokevirtual #289                // Method akka/stream/impl/BatchingInputBuffer.inputsAvailable:()Z
      69: ifne          96
      72: aload_0
      73: iload_1
      74: invokevirtual #235                // Method akka$stream$impl$FanIn$InputBunch$$marked:(I)Z
      77: ifeq          90
      80: aload_0
      81: aload_0
      82: invokevirtual #175                // Method akka$stream$impl$FanIn$InputBunch$$markedPending:()I
      85: iconst_1
      86: isub
      87: invokevirtual #243                // Method akka$stream$impl$FanIn$InputBunch$$markedPending_$eq:(I)V
      90: aload_0
      91: iload_1
      92: iconst_0
      93: invokevirtual #291                // Method akka$stream$impl$FanIn$InputBunch$$pending:(IZ)V
      96: aload_2
      97: invokevirtual #294                // Method akka/stream/impl/BatchingInputBuffer.inputsDepleted:()Z
     100: ifeq          132
     103: aload_0
     104: iload_1
     105: invokevirtual #235                // Method akka$stream$impl$FanIn$InputBunch$$marked:(I)Z
     108: ifeq          121
     111: aload_0
     112: aload_0
     113: invokevirtual #177                // Method akka$stream$impl$FanIn$InputBunch$$markedDepleted:()I
     116: iconst_1
     117: iadd
     118: invokevirtual #239                // Method akka$stream$impl$FanIn$InputBunch$$markedDepleted_$eq:(I)V
     121: aload_0
     122: iload_1
     123: iconst_1
     124: invokevirtual #296                // Method akka$stream$impl$FanIn$InputBunch$$depleted:(IZ)V
     127: aload_0
     128: iload_1
     129: invokevirtual #298                // Method onDepleted:(I)V
     132: aload_3
     133: areturn

  public java.lang.Object dequeueAndYield();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #304                // Method idToDequeue:()I
       5: invokevirtual #306                // Method dequeueAndYield:(I)Ljava/lang/Object;
       8: areturn

  public java.lang.Object dequeueAndYield(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: iadd
       4: invokespecial #308                // Method preferredId_$eq:(I)V
       7: aload_0
       8: invokespecial #179                // Method preferredId:()I
      11: aload_0
      12: getfield      #250                // Field inputCount:I
      15: if_icmpne     23
      18: aload_0
      19: iconst_0
      20: invokespecial #308                // Method preferredId_$eq:(I)V
      23: aload_0
      24: iload_1
      25: invokevirtual #310                // Method dequeue:(I)Ljava/lang/Object;
      28: areturn

  public java.lang.Object dequeuePreferring(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #308                // Method preferredId_$eq:(I)V
       5: aload_0
       6: invokevirtual #304                // Method idToDequeue:()I
       9: istore_2
      10: aload_0
      11: iload_2
      12: invokevirtual #310                // Method dequeue:(I)Ljava/lang/Object;
      15: areturn

  public akka.stream.impl.TransferState AllOfMarkedInputs();
    Code:
       0: aload_0
       1: getfield      #315                // Field AllOfMarkedInputs:Lakka/stream/impl/TransferState;
       4: areturn

  public akka.stream.impl.TransferState AnyOfMarkedInputs();
    Code:
       0: aload_0
       1: getfield      #317                // Field AnyOfMarkedInputs:Lakka/stream/impl/TransferState;
       4: areturn

  public akka.stream.impl.TransferState inputsAvailableFor(int);
    Code:
       0: new           #321                // class akka/stream/impl/FanIn$InputBunch$$anon$4
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #322                // Method akka/stream/impl/FanIn$InputBunch$$anon$4."<init>":(Lakka/stream/impl/FanIn$InputBunch;I)V
       9: areturn

  public akka.stream.impl.TransferState inputsOrCompleteAvailableFor(int);
    Code:
       0: new           #325                // class akka/stream/impl/FanIn$InputBunch$$anon$5
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #326                // Method akka/stream/impl/FanIn$InputBunch$$anon$5."<init>":(Lakka/stream/impl/FanIn$InputBunch;I)V
       9: areturn

  public akka.stream.impl.SubReceive subreceive();
    Code:
       0: new           #330                // class akka/stream/impl/SubReceive
       3: dup
       4: new           #332                // class akka/stream/impl/FanIn$InputBunch$$anonfun$subreceive$1
       7: dup
       8: aload_0
       9: invokespecial #333                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$subreceive$1."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
      12: invokespecial #336                // Method akka/stream/impl/SubReceive."<init>":(Lscala/PartialFunction;)V
      15: areturn

  public akka.stream.impl.FanIn$InputBunch(int, int, akka.stream.impl.Pump);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #250                // Field inputCount:I
       5: aload_0
       6: iload_2
       7: putfield      #339                // Field akka$stream$impl$FanIn$InputBunch$$bufferSize:I
      10: aload_0
      11: aload_3
      12: putfield      #341                // Field akka$stream$impl$FanIn$InputBunch$$pump:Lakka/stream/impl/Pump;
      15: aload_0
      16: invokespecial #343                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: iconst_0
      21: putfield      #29                 // Field allCancelled:Z
      24: aload_0
      25: getstatic     #348                // Field scala/Array$.MODULE$:Lscala/Array$;
      28: iload_1
      29: new           #350                // class akka/stream/impl/FanIn$InputBunch$$anonfun$1
      32: dup
      33: aload_0
      34: invokespecial #351                // Method akka/stream/impl/FanIn$InputBunch$$anonfun$1."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
      37: getstatic     #356                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      40: ldc           #220                // class akka/stream/impl/BatchingInputBuffer
      42: invokevirtual #360                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      45: invokevirtual #364                // Method scala/Array$.tabulate:(ILscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      48: checkcast     #365                // class "[Lakka/stream/impl/BatchingInputBuffer;"
      51: putfield      #37                 // Field akka$stream$impl$FanIn$InputBunch$$inputs:[Lakka/stream/impl/BatchingInputBuffer;
      54: aload_0
      55: getstatic     #348                // Field scala/Array$.MODULE$:Lscala/Array$;
      58: iload_1
      59: getstatic     #356                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      62: getstatic     #371                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      65: invokevirtual #360                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      68: invokevirtual #375                // Method scala/Array$.ofDim:(ILscala/reflect/ClassTag;)Ljava/lang/Object;
      71: checkcast     #64                 // class "[B"
      74: putfield      #58                 // Field states:[B
      77: aload_0
      78: iconst_0
      79: putfield      #40                 // Field akka$stream$impl$FanIn$InputBunch$$markCount:I
      82: aload_0
      83: iconst_0
      84: putfield      #44                 // Field akka$stream$impl$FanIn$InputBunch$$markedPending:I
      87: aload_0
      88: iconst_0
      89: putfield      #47                 // Field akka$stream$impl$FanIn$InputBunch$$markedDepleted:I
      92: aload_0
      93: iconst_0
      94: putfield      #50                 // Field akka$stream$impl$FanIn$InputBunch$$receivedInput:Z
      97: aload_0
      98: iconst_0
      99: putfield      #53                 // Field completedCounter:I
     102: aload_0
     103: iconst_0
     104: putfield      #198                // Field preferredId:I
     107: aload_0
     108: iconst_0
     109: putfield      #201                // Field _lastDequeuedId:I
     112: aload_0
     113: new           #377                // class akka/stream/impl/FanIn$InputBunch$$anon$2
     116: dup
     117: aload_0
     118: invokespecial #378                // Method akka/stream/impl/FanIn$InputBunch$$anon$2."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
     121: putfield      #315                // Field AllOfMarkedInputs:Lakka/stream/impl/TransferState;
     124: aload_0
     125: new           #380                // class akka/stream/impl/FanIn$InputBunch$$anon$3
     128: dup
     129: aload_0
     130: invokespecial #381                // Method akka/stream/impl/FanIn$InputBunch$$anon$3."<init>":(Lakka/stream/impl/FanIn$InputBunch;)V
     133: putfield      #317                // Field AnyOfMarkedInputs:Lakka/stream/impl/TransferState;
     136: return
}
