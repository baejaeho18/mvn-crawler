Compiled from "Sinks.scala"
public final class akka.stream.impl.QueueSink$$anon$1 extends akka.stream.stage.GraphStageLogic implements akka.stream.stage.CallbackWrapper<akka.stream.impl.QueueSink$Output<T>>, akka.stream.stage.InHandler {
  private final int maxBuffer;

  private akka.stream.impl.Buffer<scala.util.Try<scala.Option<T>>> buffer;

  private scala.Option<scala.concurrent.Promise<scala.Option<T>>> currentRequest;

  private final akka.stream.stage.AsyncCallback<akka.stream.impl.QueueSink$Output<T>> akka$stream$impl$QueueSink$$anon$$callback;

  private final akka.stream.impl.QueueSink $outer;

  private final java.util.concurrent.locks.ReentrantLock akka$stream$stage$CallbackWrapper$$lock;

  private final java.util.concurrent.atomic.AtomicReference akka$stream$stage$CallbackWrapper$$callbackState;

  private volatile akka.stream.stage.CallbackWrapper$NotInitialized$ akka$stream$stage$CallbackWrapper$$NotInitialized$module;

  private volatile akka.stream.stage.CallbackWrapper$Initialized$ akka$stream$stage$CallbackWrapper$$Initialized$module;

  private volatile akka.stream.stage.CallbackWrapper$Stopped$ akka$stream$stage$CallbackWrapper$$Stopped$module;

  private akka.stream.stage.CallbackWrapper$NotInitialized$ akka$stream$stage$CallbackWrapper$$NotInitialized$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #42                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
       8: ifnonnull     23
      11: aload_0
      12: new           #44                 // class akka/stream/stage/CallbackWrapper$NotInitialized$
      15: dup
      16: aload_0
      17: invokespecial #48                 // Method akka/stream/stage/CallbackWrapper$NotInitialized$."<init>":(Lakka/stream/stage/CallbackWrapper;)V
      20: putfield      #42                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      23: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #42                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public akka.stream.stage.CallbackWrapper$NotInitialized$ akka$stream$stage$CallbackWrapper$$NotInitialized();
    Code:
       0: aload_0
       1: getfield      #42                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #61                 // Method akka$stream$stage$CallbackWrapper$$NotInitialized$lzycompute:()Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      11: goto          18
      14: aload_0
      15: getfield      #42                 // Field akka$stream$stage$CallbackWrapper$$NotInitialized$module:Lakka/stream/stage/CallbackWrapper$NotInitialized$;
      18: areturn

  private akka.stream.stage.CallbackWrapper$Initialized$ akka$stream$stage$CallbackWrapper$$Initialized$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #65                 // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
       8: ifnonnull     23
      11: aload_0
      12: new           #67                 // class akka/stream/stage/CallbackWrapper$Initialized$
      15: dup
      16: aload_0
      17: invokespecial #68                 // Method akka/stream/stage/CallbackWrapper$Initialized$."<init>":(Lakka/stream/stage/CallbackWrapper;)V
      20: putfield      #65                 // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
      23: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #65                 // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public akka.stream.stage.CallbackWrapper$Initialized$ akka$stream$stage$CallbackWrapper$$Initialized();
    Code:
       0: aload_0
       1: getfield      #65                 // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #71                 // Method akka$stream$stage$CallbackWrapper$$Initialized$lzycompute:()Lakka/stream/stage/CallbackWrapper$Initialized$;
      11: goto          18
      14: aload_0
      15: getfield      #65                 // Field akka$stream$stage$CallbackWrapper$$Initialized$module:Lakka/stream/stage/CallbackWrapper$Initialized$;
      18: areturn

  private akka.stream.stage.CallbackWrapper$Stopped$ akka$stream$stage$CallbackWrapper$$Stopped$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #75                 // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
       8: ifnonnull     23
      11: aload_0
      12: new           #77                 // class akka/stream/stage/CallbackWrapper$Stopped$
      15: dup
      16: aload_0
      17: invokespecial #78                 // Method akka/stream/stage/CallbackWrapper$Stopped$."<init>":(Lakka/stream/stage/CallbackWrapper;)V
      20: putfield      #75                 // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
      23: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #75                 // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public akka.stream.stage.CallbackWrapper$Stopped$ akka$stream$stage$CallbackWrapper$$Stopped();
    Code:
       0: aload_0
       1: getfield      #75                 // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #81                 // Method akka$stream$stage$CallbackWrapper$$Stopped$lzycompute:()Lakka/stream/stage/CallbackWrapper$Stopped$;
      11: goto          18
      14: aload_0
      15: getfield      #75                 // Field akka$stream$stage$CallbackWrapper$$Stopped$module:Lakka/stream/stage/CallbackWrapper$Stopped$;
      18: areturn

  public final java.util.concurrent.locks.ReentrantLock akka$stream$stage$CallbackWrapper$$lock();
    Code:
       0: aload_0
       1: getfield      #84                 // Field akka$stream$stage$CallbackWrapper$$lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: areturn

  public final void akka$stream$stage$CallbackWrapper$_setter_$akka$stream$stage$CallbackWrapper$$lock_$eq(java.util.concurrent.locks.ReentrantLock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field akka$stream$stage$CallbackWrapper$$lock:Ljava/util/concurrent/locks/ReentrantLock;
       5: return

  public java.util.concurrent.atomic.AtomicReference akka$stream$stage$CallbackWrapper$$callbackState();
    Code:
       0: aload_0
       1: getfield      #90                 // Field akka$stream$stage$CallbackWrapper$$callbackState:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  public void akka$stream$stage$CallbackWrapper$_setter_$akka$stream$stage$CallbackWrapper$$callbackState_$eq(java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field akka$stream$stage$CallbackWrapper$$callbackState:Ljava/util/concurrent/atomic/AtomicReference;
       5: return

  public void stopCallback(scala.Function1<akka.stream.impl.QueueSink$Output<T>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method akka/stream/stage/CallbackWrapper$class.stopCallback:(Lakka/stream/stage/CallbackWrapper;Lscala/Function1;)V
       5: return

  public void initCallback(scala.Function1<akka.stream.impl.QueueSink$Output<T>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #104                // Method akka/stream/stage/CallbackWrapper$class.initCallback:(Lakka/stream/stage/CallbackWrapper;Lscala/Function1;)V
       5: return

  public void invoke(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method akka/stream/stage/CallbackWrapper$class.invoke:(Lakka/stream/stage/CallbackWrapper;Ljava/lang/Object;)V
       5: return

  public int maxBuffer();
    Code:
       0: aload_0
       1: getfield      #114                // Field maxBuffer:I
       4: ireturn

  public akka.stream.impl.Buffer<scala.util.Try<scala.Option<T>>> buffer();
    Code:
       0: aload_0
       1: getfield      #117                // Field buffer:Lakka/stream/impl/Buffer;
       4: areturn

  public void buffer_$eq(akka.stream.impl.Buffer<scala.util.Try<scala.Option<T>>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field buffer:Lakka/stream/impl/Buffer;
       5: return

  public scala.Option<scala.concurrent.Promise<scala.Option<T>>> currentRequest();
    Code:
       0: aload_0
       1: getfield      #122                // Field currentRequest:Lscala/Option;
       4: areturn

  public void currentRequest_$eq(scala.Option<scala.concurrent.Promise<scala.Option<T>>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #122                // Field currentRequest:Lscala/Option;
       5: return

  public void preStart();
    Code:
       0: aload_0
       1: getstatic     #132                // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
       4: aload_0
       5: invokevirtual #134                // Method maxBuffer:()I
       8: iconst_1
       9: iadd
      10: aload_0
      11: invokevirtual #138                // Method materializer:()Lakka/stream/Materializer;
      14: invokevirtual #142                // Method akka/stream/impl/Buffer$.apply:(ILakka/stream/Materializer;)Lakka/stream/impl/Buffer;
      17: invokevirtual #144                // Method buffer_$eq:(Lakka/stream/impl/Buffer;)V
      20: aload_0
      21: iconst_1
      22: invokevirtual #148                // Method setKeepGoing:(Z)V
      25: aload_0
      26: new           #150                // class akka/stream/impl/QueueSink$$anon$1$$anonfun$preStart$1
      29: dup
      30: aload_0
      31: invokespecial #153                // Method akka/stream/impl/QueueSink$$anon$1$$anonfun$preStart$1."<init>":(Lakka/stream/impl/QueueSink$$anon$1;)V
      34: invokevirtual #155                // Method initCallback:(Lscala/Function1;)V
      37: aload_0
      38: aload_0
      39: getfield      #157                // Field $outer:Lakka/stream/impl/QueueSink;
      42: invokevirtual #161                // Method akka/stream/impl/QueueSink.in:()Lakka/stream/Inlet;
      45: invokevirtual #165                // Method pull:(Lakka/stream/Inlet;)V
      48: return

  public void postStop();
    Code:
       0: aload_0
       1: new           #168                // class akka/stream/impl/QueueSink$$anon$1$$anonfun$postStop$1
       4: dup
       5: aload_0
       6: invokespecial #169                // Method akka/stream/impl/QueueSink$$anon$1$$anonfun$postStop$1."<init>":(Lakka/stream/impl/QueueSink$$anon$1;)V
       9: invokevirtual #171                // Method stopCallback:(Lscala/Function1;)V
      12: return

  public akka.stream.stage.AsyncCallback<akka.stream.impl.QueueSink$Output<T>> akka$stream$impl$QueueSink$$anon$$callback();
    Code:
       0: aload_0
       1: getfield      #174                // Field akka$stream$impl$QueueSink$$anon$$callback:Lakka/stream/stage/AsyncCallback;
       4: areturn

  public void sendDownstream(scala.concurrent.Promise<scala.Option<T>>);
    Code:
       0: aload_0
       1: invokevirtual #178                // Method buffer:()Lakka/stream/impl/Buffer;
       4: invokeinterface #184,  1          // InterfaceMethod akka/stream/impl/Buffer.dequeue:()Ljava/lang/Object;
       9: checkcast     #186                // class scala/util/Try
      12: astore_2
      13: aload_1
      14: aload_2
      15: invokeinterface #192,  2          // InterfaceMethod scala/concurrent/Promise.complete:(Lscala/util/Try;)Lscala/concurrent/Promise;
      20: pop
      21: iconst_0
      22: istore_3
      23: aconst_null
      24: astore        4
      26: aload_2
      27: astore        5
      29: aload         5
      31: instanceof    #194                // class scala/util/Success
      34: ifeq          65
      37: iconst_1
      38: istore_3
      39: aload         5
      41: checkcast     #194                // class scala/util/Success
      44: astore        4
      46: aload         4
      48: invokevirtual #197                // Method scala/util/Success.value:()Ljava/lang/Object;
      51: instanceof    #199                // class scala/Some
      54: ifeq          65
      57: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      60: astore        6
      62: goto          135
      65: iload_3
      66: ifeq          102
      69: aload         4
      71: invokevirtual #197                // Method scala/util/Success.value:()Ljava/lang/Object;
      74: checkcast     #201                // class scala/Option
      77: astore        7
      79: getstatic     #206                // Field scala/None$.MODULE$:Lscala/None$;
      82: aload         7
      84: invokevirtual #212                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          102
      90: aload_0
      91: invokevirtual #215                // Method completeStage:()V
      94: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      97: astore        6
      99: goto          135
     102: aload         5
     104: instanceof    #217                // class scala/util/Failure
     107: ifeq          136
     110: aload         5
     112: checkcast     #217                // class scala/util/Failure
     115: astore        8
     117: aload         8
     119: invokevirtual #221                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     122: astore        9
     124: aload_0
     125: aload         9
     127: invokevirtual #225                // Method failStage:(Ljava/lang/Throwable;)V
     130: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     133: astore        6
     135: return
     136: new           #227                // class scala/MatchError
     139: dup
     140: aload         5
     142: invokespecial #229                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     145: athrow

  public void enqueueAndNotify(scala.util.Try<scala.Option<T>>);
    Code:
       0: aload_0
       1: invokevirtual #178                // Method buffer:()Lakka/stream/impl/Buffer;
       4: aload_1
       5: invokeinterface #240,  2          // InterfaceMethod akka/stream/impl/Buffer.enqueue:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #242                // Method currentRequest:()Lscala/Option;
      14: astore_2
      15: aload_2
      16: instanceof    #199                // class scala/Some
      19: ifeq          57
      22: aload_2
      23: checkcast     #199                // class scala/Some
      26: astore_3
      27: aload_3
      28: invokevirtual #245                // Method scala/Some.x:()Ljava/lang/Object;
      31: checkcast     #188                // class scala/concurrent/Promise
      34: astore        4
      36: aload_0
      37: aload         4
      39: invokevirtual #247                // Method sendDownstream:(Lscala/concurrent/Promise;)V
      42: aload_0
      43: getstatic     #206                // Field scala/None$.MODULE$:Lscala/None$;
      46: invokevirtual #249                // Method currentRequest_$eq:(Lscala/Option;)V
      49: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      52: astore        5
      54: goto          72
      57: getstatic     #206                // Field scala/None$.MODULE$:Lscala/None$;
      60: aload_2
      61: invokevirtual #212                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      64: ifeq          73
      67: getstatic     #54                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      70: astore        5
      72: return
      73: new           #227                // class scala/MatchError
      76: dup
      77: aload_2
      78: invokespecial #229                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow

  public void onPush();
    Code:
       0: aload_0
       1: new           #194                // class scala/util/Success
       4: dup
       5: new           #199                // class scala/Some
       8: dup
       9: aload_0
      10: aload_0
      11: getfield      #157                // Field $outer:Lakka/stream/impl/QueueSink;
      14: invokevirtual #161                // Method akka/stream/impl/QueueSink.in:()Lakka/stream/Inlet;
      17: invokevirtual #256                // Method grab:(Lakka/stream/Inlet;)Ljava/lang/Object;
      20: invokespecial #257                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      23: invokespecial #258                // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
      26: invokevirtual #260                // Method enqueueAndNotify:(Lscala/util/Try;)V
      29: aload_0
      30: invokevirtual #178                // Method buffer:()Lakka/stream/impl/Buffer;
      33: invokeinterface #263,  1          // InterfaceMethod akka/stream/impl/Buffer.used:()I
      38: aload_0
      39: invokevirtual #134                // Method maxBuffer:()I
      42: if_icmpge     56
      45: aload_0
      46: aload_0
      47: getfield      #157                // Field $outer:Lakka/stream/impl/QueueSink;
      50: invokevirtual #161                // Method akka/stream/impl/QueueSink.in:()Lakka/stream/Inlet;
      53: invokevirtual #165                // Method pull:(Lakka/stream/Inlet;)V
      56: return

  public void onUpstreamFinish();
    Code:
       0: aload_0
       1: new           #194                // class scala/util/Success
       4: dup
       5: getstatic     #206                // Field scala/None$.MODULE$:Lscala/None$;
       8: invokespecial #258                // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
      11: invokevirtual #260                // Method enqueueAndNotify:(Lscala/util/Try;)V
      14: return

  public void onUpstreamFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: new           #217                // class scala/util/Failure
       4: dup
       5: aload_1
       6: invokespecial #267                // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
       9: invokevirtual #260                // Method enqueueAndNotify:(Lscala/util/Try;)V
      12: return

  public akka.stream.impl.QueueSink akka$stream$impl$QueueSink$$anon$$$outer();
    Code:
       0: aload_0
       1: getfield      #157                // Field $outer:Lakka/stream/impl/QueueSink;
       4: areturn

  public akka.stream.impl.QueueSink$$anon$1(akka.stream.impl.QueueSink<T>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #157                // Field $outer:Lakka/stream/impl/QueueSink;
      11: aload_0
      12: aload_1
      13: invokevirtual #275                // Method akka/stream/impl/QueueSink.shape:()Lakka/stream/SinkShape;
      16: invokespecial #278                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: invokestatic  #281                // Method akka/stream/stage/CallbackWrapper$class.$init$:(Lakka/stream/stage/CallbackWrapper;)V
      23: aload_0
      24: invokestatic  #286                // Method akka/stream/stage/InHandler$class.$init$:(Lakka/stream/stage/InHandler;)V
      27: aload_0
      28: aload_2
      29: ldc_w         #288                // class akka/stream/Attributes$InputBuffer
      32: new           #288                // class akka/stream/Attributes$InputBuffer
      35: dup
      36: bipush        16
      38: bipush        16
      40: invokespecial #291                // Method akka/stream/Attributes$InputBuffer."<init>":(II)V
      43: invokevirtual #297                // Method akka/stream/Attributes.getAttribute:(Ljava/lang/Class;Lakka/stream/Attributes$Attribute;)Lakka/stream/Attributes$Attribute;
      46: checkcast     #288                // class akka/stream/Attributes$InputBuffer
      49: invokevirtual #300                // Method akka/stream/Attributes$InputBuffer.max:()I
      52: putfield      #114                // Field maxBuffer:I
      55: getstatic     #305                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      58: aload_0
      59: invokevirtual #134                // Method maxBuffer:()I
      62: iconst_0
      63: if_icmple     70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: new           #307                // class akka/stream/impl/QueueSink$$anon$1$$anonfun$1
      74: dup
      75: aload_0
      76: invokespecial #308                // Method akka/stream/impl/QueueSink$$anon$1$$anonfun$1."<init>":(Lakka/stream/impl/QueueSink$$anon$1;)V
      79: invokevirtual #312                // Method scala/Predef$.require:(ZLscala/Function0;)V
      82: aload_0
      83: getstatic     #206                // Field scala/None$.MODULE$:Lscala/None$;
      86: putfield      #122                // Field currentRequest:Lscala/Option;
      89: aload_0
      90: aload_0
      91: new           #314                // class akka/stream/impl/QueueSink$$anon$1$$anonfun$2
      94: dup
      95: aload_0
      96: invokespecial #315                // Method akka/stream/impl/QueueSink$$anon$1$$anonfun$2."<init>":(Lakka/stream/impl/QueueSink$$anon$1;)V
      99: invokevirtual #319                // Method getAsyncCallback:(Lscala/Function1;)Lakka/stream/stage/AsyncCallback;
     102: putfield      #174                // Field akka$stream$impl$QueueSink$$anon$$callback:Lakka/stream/stage/AsyncCallback;
     105: aload_0
     106: aload_1
     107: invokevirtual #161                // Method akka/stream/impl/QueueSink.in:()Lakka/stream/Inlet;
     110: aload_0
     111: invokevirtual #323                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
     114: return
}
