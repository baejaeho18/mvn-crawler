Compiled from "IteratorInterpreter.scala"
public final class akka.stream.impl.fusing.IteratorInterpreter$IteratorDownstream<T> extends akka.stream.impl.fusing.GraphInterpreter$DownstreamBoundaryStageLogic<T> implements scala.collection.Iterator<T>, akka.stream.stage.InHandler, scala.Product, scala.Serializable {
  private final akka.stream.Inlet<T> in;

  private boolean done;

  private T nextElem;

  private boolean needsPull;

  private java.lang.Throwable lastFailure;

  public scala.collection.Iterator<T> seq();
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<T> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #50                 // Method scala/collection/Iterator$class.take:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #55                 // Method scala/collection/Iterator$class.drop:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #60                 // Method scala/collection/Iterator$class.slice:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method scala/collection/Iterator$class.map:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method scala/collection/Iterator$class.$plus$plus:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<T, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> filter(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<T, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<T> withFilter(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> filterNot(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #108                // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #113                // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<T> takeWhile(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // Method scala/collection/Iterator$class.takeWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> partition(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #121                // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> span(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #124                // Method scala/collection/Iterator$class.span:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<T> dropWhile(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #127                // Method scala/collection/Iterator$class.dropWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<T, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #137                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<T, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #142                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #147                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // Method scala/collection/Iterator$class.foreach:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #159                // Method scala/collection/Iterator$class.forall:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #162                // Method scala/collection/Iterator$class.exists:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<T> find(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // Method scala/collection/Iterator$class.find:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // Method scala/collection/Iterator$class.indexWhere:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #182                // Method scala/collection/Iterator$class.indexOf:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public scala.collection.BufferedIterator<T> buffered();
    Code:
       0: aload_0
       1: invokestatic  #187                // Method scala/collection/Iterator$class.buffered:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<T>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #192                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<T>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #198                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #204                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #209                // Method scala/collection/Iterator$class.duplicate:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #214                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #221                // Method scala/collection/Iterator$class.copyToArray:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #227                // Method scala/collection/Iterator$class.sameElements:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<T> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #232                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<T> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #235                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<T> toStream();
    Code:
       0: aload_0
       1: invokestatic  #240                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #243                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<T> reversed();
    Code:
       0: aload_0
       1: invokestatic  #250                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #253                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #257                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #261                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #266                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #271                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #274                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #277                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #280                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #285                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #296                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #299                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #302                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #305                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, T, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #310                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #317                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #322                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> T min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #327                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> T max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #332                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> T maxBy(scala.Function1<T, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #337                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> T minBy(scala.Function1<T, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #340                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #345                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #351                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #355                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #360                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<T> toList();
    Code:
       0: aload_0
       1: invokestatic  #365                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<T> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #370                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<T> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #375                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<T> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #380                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #385                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #390                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<T> toVector();
    Code:
       0: aload_0
       1: invokestatic  #395                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, T, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #400                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<T, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #407                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #414                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #425                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #430                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #436                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #440                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public akka.stream.Inlet<T> in();
    Code:
       0: aload_0
       1: getfield      #443                // Field in:Lakka/stream/Inlet;
       4: areturn

  private boolean done();
    Code:
       0: aload_0
       1: getfield      #445                // Field done:Z
       4: ireturn

  private void done_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #445                // Field done:Z
       5: return

  private T nextElem();
    Code:
       0: aload_0
       1: getfield      #451                // Field nextElem:Ljava/lang/Object;
       4: areturn

  private void nextElem_$eq(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #451                // Field nextElem:Ljava/lang/Object;
       5: return

  private boolean needsPull();
    Code:
       0: aload_0
       1: getfield      #454                // Field needsPull:Z
       4: ireturn

  private void needsPull_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #454                // Field needsPull:Z
       5: return

  private java.lang.Throwable lastFailure();
    Code:
       0: aload_0
       1: getfield      #458                // Field lastFailure:Ljava/lang/Throwable;
       4: areturn

  private void lastFailure_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #458                // Field lastFailure:Ljava/lang/Throwable;
       5: return

  public void onPush();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: invokevirtual #464                // Method in:()Lakka/stream/Inlet;
       6: invokevirtual #468                // Method grab:(Lakka/stream/Inlet;)Ljava/lang/Object;
       9: invokespecial #470                // Method nextElem_$eq:(Ljava/lang/Object;)V
      12: aload_0
      13: iconst_0
      14: invokespecial #472                // Method needsPull_$eq:(Z)V
      17: return

  public void onUpstreamFinish();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #475                // Method done_$eq:(Z)V
       5: return

  public void onUpstreamFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #475                // Method done_$eq:(Z)V
       5: aload_0
       6: aload_1
       7: invokespecial #478                // Method lastFailure_$eq:(Ljava/lang/Throwable;)V
      10: return

  private void pullIfNeeded();
    Code:
       0: aload_0
       1: invokespecial #482                // Method needsPull:()Z
       4: ifeq          26
       7: aload_0
       8: aload_0
       9: invokevirtual #464                // Method in:()Lakka/stream/Inlet;
      12: invokevirtual #486                // Method pull:(Lakka/stream/Inlet;)V
      15: aload_0
      16: invokevirtual #490                // Method interpreter:()Lakka/stream/impl/fusing/GraphInterpreter;
      19: ldc_w         #491                // int 2147483647
      22: invokevirtual #497                // Method akka/stream/impl/fusing/GraphInterpreter.execute:(I)I
      25: pop
      26: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokespecial #500                // Method done:()Z
       4: ifne          11
       7: aload_0
       8: invokespecial #502                // Method pullIfNeeded:()V
      11: aload_0
      12: invokespecial #500                // Method done:()Z
      15: ifeq          36
      18: aload_0
      19: invokespecial #482                // Method needsPull:()Z
      22: ifeq          36
      25: aload_0
      26: invokespecial #504                // Method lastFailure:()Ljava/lang/Throwable;
      29: ifnonnull     36
      32: iconst_0
      33: goto          37
      36: iconst_1
      37: ireturn

  public T next();
    Code:
       0: aload_0
       1: invokespecial #504                // Method lastFailure:()Ljava/lang/Throwable;
       4: ifnull        19
       7: aload_0
       8: invokespecial #504                // Method lastFailure:()Ljava/lang/Throwable;
      11: astore_1
      12: aload_0
      13: aconst_null
      14: invokespecial #478                // Method lastFailure_$eq:(Ljava/lang/Throwable;)V
      17: aload_1
      18: athrow
      19: aload_0
      20: invokevirtual #507                // Method hasNext:()Z
      23: ifeq          38
      26: aload_0
      27: iconst_1
      28: invokespecial #472                // Method needsPull_$eq:(Z)V
      31: aload_0
      32: invokespecial #509                // Method nextElem:()Ljava/lang/Object;
      35: goto          52
      38: getstatic     #515                // Field scala/package$.MODULE$:Lscala/package$;
      41: invokevirtual #519                // Method scala/package$.Iterator:()Lscala/collection/Iterator$;
      44: invokevirtual #524                // Method scala/collection/Iterator$.empty:()Lscala/collection/Iterator;
      47: invokeinterface #526,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      52: areturn

  public java.lang.String toString();
    Code:
       0: ldc_w         #532                // String IteratorDownstream
       3: areturn

  public <T> akka.stream.impl.fusing.IteratorInterpreter$IteratorDownstream<T> copy();
    Code:
       0: new           #2                  // class akka/stream/impl/fusing/IteratorInterpreter$IteratorDownstream
       3: dup
       4: invokespecial #537                // Method "<init>":()V
       7: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #532                // String IteratorDownstream
       3: areturn

  public int productArity();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: new           #543                // class java/lang/IndexOutOfBoundsException
       5: dup
       6: iload_1
       7: invokestatic  #549                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #551                // Method java/lang/Object.toString:()Ljava/lang/String;
      13: invokespecial #554                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #560                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #564                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/fusing/IteratorInterpreter$IteratorDownstream
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #560                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #570                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #2                  // class akka/stream/impl/fusing/IteratorInterpreter$IteratorDownstream
       6: ifeq          14
       9: iconst_1
      10: istore_3
      11: goto          16
      14: iconst_0
      15: istore_3
      16: iload_3
      17: ireturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #574                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #577                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #580                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #583                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #586                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #589                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public akka.stream.impl.fusing.IteratorInterpreter$IteratorDownstream();
    Code:
       0: aload_0
       1: invokespecial #590                // Method akka/stream/impl/fusing/GraphInterpreter$DownstreamBoundaryStageLogic."<init>":()V
       4: aload_0
       5: invokestatic  #594                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
       8: aload_0
       9: invokestatic  #597                // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      12: aload_0
      13: invokestatic  #602                // Method akka/stream/stage/InHandler$class.$init$:(Lakka/stream/stage/InHandler;)V
      16: aload_0
      17: invokestatic  #607                // Method scala/Product$class.$init$:(Lscala/Product;)V
      20: aload_0
      21: getstatic     #612                // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      24: ldc_w         #614                // String IteratorDownstream.in
      27: invokevirtual #618                // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      30: putfield      #443                // Field in:Lakka/stream/Inlet;
      33: aload_0
      34: invokevirtual #464                // Method in:()Lakka/stream/Inlet;
      37: iconst_0
      38: invokevirtual #624                // Method akka/stream/Inlet.id_$eq:(I)V
      41: aload_0
      42: iconst_0
      43: putfield      #445                // Field done:Z
      46: aload_0
      47: iconst_1
      48: putfield      #454                // Field needsPull:Z
      51: aload_0
      52: aconst_null
      53: putfield      #458                // Field lastFailure:Ljava/lang/Throwable;
      56: aload_0
      57: aload_0
      58: invokevirtual #464                // Method in:()Lakka/stream/Inlet;
      61: aload_0
      62: invokevirtual #628                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
      65: return
}
