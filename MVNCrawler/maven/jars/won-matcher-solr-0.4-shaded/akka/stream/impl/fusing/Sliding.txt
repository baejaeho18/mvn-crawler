Compiled from "Ops.scala"
public final class akka.stream.impl.fusing.Sliding<T> extends akka.stream.stage.GraphStage<akka.stream.FlowShape<T, scala.collection.immutable.Seq<T>>> implements scala.Product, scala.Serializable {
  private final int n;

  private final int step;

  private final akka.stream.Inlet<T> in;

  private final akka.stream.Outlet<scala.collection.immutable.Seq<T>> out;

  private final akka.stream.FlowShape<T, scala.collection.immutable.Seq<T>> shape;

  private final akka.stream.Attributes initialAttributes;

  public static <T> scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> unapply(akka.stream.impl.fusing.Sliding<T>);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Sliding$.MODULE$:Lakka/stream/impl/fusing/Sliding$;
       3: aload_0
       4: invokevirtual #23                 // Method akka/stream/impl/fusing/Sliding$.unapply:(Lakka/stream/impl/fusing/Sliding;)Lscala/Option;
       7: areturn

  public static <T> akka.stream.impl.fusing.Sliding<T> apply(int, int);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Sliding$.MODULE$:Lakka/stream/impl/fusing/Sliding$;
       3: iload_0
       4: iload_1
       5: invokevirtual #27                 // Method akka/stream/impl/fusing/Sliding$.apply:(II)Lakka/stream/impl/fusing/Sliding;
       8: areturn

  public int n();
    Code:
       0: aload_0
       1: getfield      #44                 // Field n:I
       4: ireturn

  public int step();
    Code:
       0: aload_0
       1: getfield      #48                 // Field step:I
       4: ireturn

  public akka.stream.Inlet<T> in();
    Code:
       0: aload_0
       1: getfield      #51                 // Field in:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<scala.collection.immutable.Seq<T>> out();
    Code:
       0: aload_0
       1: getfield      #54                 // Field out:Lakka/stream/Outlet;
       4: areturn

  public akka.stream.FlowShape<T, scala.collection.immutable.Seq<T>> shape();
    Code:
       0: aload_0
       1: getfield      #57                 // Field shape:Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.Attributes initialAttributes();
    Code:
       0: aload_0
       1: getfield      #60                 // Field initialAttributes:Lakka/stream/Attributes;
       4: areturn

  public akka.stream.stage.GraphStageLogic createLogic(akka.stream.Attributes);
    Code:
       0: new           #64                 // class akka/stream/impl/fusing/Sliding$$anon$18
       3: dup
       4: aload_0
       5: invokespecial #68                 // Method akka/stream/impl/fusing/Sliding$$anon$18."<init>":(Lakka/stream/impl/fusing/Sliding;)V
       8: areturn

  public <T> akka.stream.impl.fusing.Sliding<T> copy(int, int);
    Code:
       0: new           #2                  // class akka/stream/impl/fusing/Sliding
       3: dup
       4: iload_1
       5: iload_2
       6: invokespecial #73                 // Method "<init>":(II)V
       9: areturn

  public <T> int copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method n:()I
       4: ireturn

  public <T> int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method step:()I
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #83                 // String Sliding
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 49
                     1: 39
               default: 24
          }
      24: new           #88                 // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #99                 // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #102                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #79                 // Method step:()I
      43: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      46: goto          56
      49: aload_0
      50: invokevirtual #76                 // Method n:()I
      53: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #112                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #116                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/fusing/Sliding
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #121                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #76                 // Method n:()I
       8: invokestatic  #127                // Method scala/runtime/Statics.mix:(II)I
      11: istore_1
      12: iload_1
      13: aload_0
      14: invokevirtual #79                 // Method step:()I
      17: invokestatic  #127                // Method scala/runtime/Statics.mix:(II)I
      20: istore_1
      21: iload_1
      22: iconst_2
      23: invokestatic  #130                // Method scala/runtime/Statics.finalizeHash:(II)I
      26: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #112                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #134                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     63
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/fusing/Sliding
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          67
      25: aload_1
      26: checkcast     #2                  // class akka/stream/impl/fusing/Sliding
      29: astore        4
      31: aload_0
      32: invokevirtual #76                 // Method n:()I
      35: aload         4
      37: invokevirtual #76                 // Method n:()I
      40: if_icmpne     59
      43: aload_0
      44: invokevirtual #79                 // Method step:()I
      47: aload         4
      49: invokevirtual #79                 // Method step:()I
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #138                // Method shape:()Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.impl.fusing.Sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field n:I
       5: aload_0
       6: iload_2
       7: putfield      #48                 // Field step:I
      10: aload_0
      11: invokespecial #141                // Method akka/stream/stage/GraphStage."<init>":()V
      14: aload_0
      15: invokestatic  #147                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: getstatic     #152                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: iload_1
      22: iconst_0
      23: if_icmple     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: new           #154                // class akka/stream/impl/fusing/Sliding$$anonfun$16
      34: dup
      35: aload_0
      36: invokespecial #155                // Method akka/stream/impl/fusing/Sliding$$anonfun$16."<init>":(Lakka/stream/impl/fusing/Sliding;)V
      39: invokevirtual #159                // Method scala/Predef$.require:(ZLscala/Function0;)V
      42: getstatic     #152                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      45: iload_2
      46: iconst_0
      47: if_icmple     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: new           #161                // class akka/stream/impl/fusing/Sliding$$anonfun$17
      58: dup
      59: aload_0
      60: invokespecial #162                // Method akka/stream/impl/fusing/Sliding$$anonfun$17."<init>":(Lakka/stream/impl/fusing/Sliding;)V
      63: invokevirtual #159                // Method scala/Predef$.require:(ZLscala/Function0;)V
      66: aload_0
      67: getstatic     #167                // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      70: ldc           #169                // String Sliding.in
      72: invokevirtual #172                // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      75: putfield      #51                 // Field in:Lakka/stream/Inlet;
      78: aload_0
      79: getstatic     #177                // Field akka/stream/Outlet$.MODULE$:Lakka/stream/Outlet$;
      82: ldc           #179                // String Sliding.out
      84: invokevirtual #182                // Method akka/stream/Outlet$.apply:(Ljava/lang/String;)Lakka/stream/Outlet;
      87: putfield      #54                 // Field out:Lakka/stream/Outlet;
      90: aload_0
      91: new           #184                // class akka/stream/FlowShape
      94: dup
      95: aload_0
      96: invokevirtual #186                // Method in:()Lakka/stream/Inlet;
      99: aload_0
     100: invokevirtual #188                // Method out:()Lakka/stream/Outlet;
     103: invokespecial #191                // Method akka/stream/FlowShape."<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;)V
     106: putfield      #57                 // Field shape:Lakka/stream/FlowShape;
     109: aload_0
     110: getstatic     #196                // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
     113: invokevirtual #199                // Method akka/stream/impl/Stages$DefaultAttributes$.sliding:()Lakka/stream/Attributes;
     116: putfield      #60                 // Field initialAttributes:Lakka/stream/Attributes;
     119: return
}
