Compiled from "Ops.scala"
public final class akka.stream.impl.fusing.RecoverWith$$anon$35 extends akka.stream.stage.GraphStageLogic {
  private int attempt;

  private final akka.stream.impl.fusing.RecoverWith $outer;

  private int attempt();
    Code:
       0: aload_0
       1: getfield      #17                 // Field attempt:I
       4: ireturn

  private void attempt_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field attempt:I
       5: return

  public void akka$stream$impl$fusing$RecoverWith$$anon$$onFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
       4: invokevirtual #29                 // Method akka/stream/impl/fusing/RecoverWith.maximumRetries:()I
       7: getstatic     #35                 // Field akka/stream/impl/fusing/RecoverWith$.MODULE$:Lakka/stream/impl/fusing/RecoverWith$;
      10: invokevirtual #38                 // Method akka/stream/impl/fusing/RecoverWith$.InfiniteRetries:()I
      13: if_icmpeq     30
      16: aload_0
      17: invokespecial #40                 // Method attempt:()I
      20: aload_0
      21: getfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
      24: invokevirtual #29                 // Method akka/stream/impl/fusing/RecoverWith.maximumRetries:()I
      27: if_icmpge     79
      30: aload_0
      31: getfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
      34: invokevirtual #44                 // Method akka/stream/impl/fusing/RecoverWith.pf:()Lscala/PartialFunction;
      37: aload_1
      38: invokeinterface #50,  2           // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
      43: ifeq          79
      46: aload_0
      47: aload_0
      48: getfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
      51: invokevirtual #44                 // Method akka/stream/impl/fusing/RecoverWith.pf:()Lscala/PartialFunction;
      54: aload_1
      55: invokeinterface #54,  2           // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #56                 // class akka/stream/Graph
      63: invokespecial #60                 // Method switchTo:(Lakka/stream/Graph;)V
      66: aload_0
      67: aload_0
      68: invokespecial #40                 // Method attempt:()I
      71: iconst_1
      72: iadd
      73: invokespecial #62                 // Method attempt_$eq:(I)V
      76: goto          84
      79: aload_0
      80: aload_1
      81: invokevirtual #65                 // Method failStage:(Ljava/lang/Throwable;)V
      84: return

  private void switchTo(akka.stream.Graph<akka.stream.SourceShape<T>, M>);
    Code:
       0: new           #69                 // class akka/stream/stage/GraphStageLogic$SubSinkInlet
       3: dup
       4: aload_0
       5: ldc           #71                 // String RecoverWithSink
       7: invokespecial #75                 // Method akka/stream/stage/GraphStageLogic$SubSinkInlet."<init>":(Lakka/stream/stage/GraphStageLogic;Ljava/lang/String;)V
      10: astore_2
      11: aload_2
      12: new           #77                 // class akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$38
      15: dup
      16: aload_0
      17: aload_2
      18: invokespecial #80                 // Method akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$38."<init>":(Lakka/stream/impl/fusing/RecoverWith$$anon$35;Lakka/stream/stage/GraphStageLogic$SubSinkInlet;)V
      21: invokevirtual #84                 // Method akka/stream/stage/GraphStageLogic$SubSinkInlet.setHandler:(Lakka/stream/stage/InHandler;)V
      24: new           #86                 // class akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$39
      27: dup
      28: aload_0
      29: aload_2
      30: invokespecial #87                 // Method akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$39."<init>":(Lakka/stream/impl/fusing/RecoverWith$$anon$35;Lakka/stream/stage/GraphStageLogic$SubSinkInlet;)V
      33: astore_3
      34: getstatic     #92                 // Field akka/stream/scaladsl/Source$.MODULE$:Lakka/stream/scaladsl/Source$;
      37: aload_1
      38: invokevirtual #96                 // Method akka/stream/scaladsl/Source$.fromGraph:(Lakka/stream/Graph;)Lakka/stream/scaladsl/Source;
      41: aload_2
      42: invokevirtual #100                // Method akka/stream/stage/GraphStageLogic$SubSinkInlet.sink:()Lakka/stream/Graph;
      45: aload_0
      46: invokevirtual #104                // Method interpreter:()Lakka/stream/impl/fusing/GraphInterpreter;
      49: invokevirtual #110                // Method akka/stream/impl/fusing/GraphInterpreter.subFusingMaterializer:()Lakka/stream/Materializer;
      52: invokevirtual #116                // Method akka/stream/scaladsl/Source.runWith:(Lakka/stream/Graph;Lakka/stream/Materializer;)Ljava/lang/Object;
      55: pop
      56: aload_0
      57: aload_0
      58: getfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
      61: invokevirtual #120                // Method akka/stream/impl/fusing/RecoverWith.out:()Lakka/stream/Outlet;
      64: aload_3
      65: invokevirtual #123                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
      68: aload_0
      69: aload_0
      70: getfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
      73: invokevirtual #120                // Method akka/stream/impl/fusing/RecoverWith.out:()Lakka/stream/Outlet;
      76: invokevirtual #127                // Method isAvailable:(Lakka/stream/Outlet;)Z
      79: ifeq          86
      82: aload_2
      83: invokevirtual #131                // Method akka/stream/stage/GraphStageLogic$SubSinkInlet.pull:()V
      86: return

  public akka.stream.impl.fusing.RecoverWith akka$stream$impl$fusing$RecoverWith$$anon$$$outer();
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
       4: areturn

  public akka.stream.impl.fusing.RecoverWith$$anon$35(akka.stream.impl.fusing.RecoverWith<T, M>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #26                 // Field $outer:Lakka/stream/impl/fusing/RecoverWith;
      11: aload_0
      12: aload_1
      13: invokevirtual #144                // Method akka/stream/impl/fusing/RecoverWith.shape:()Lakka/stream/FlowShape;
      16: invokespecial #147                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: iconst_0
      21: putfield      #17                 // Field attempt:I
      24: aload_0
      25: aload_1
      26: invokevirtual #151                // Method akka/stream/impl/fusing/RecoverWith.in:()Lakka/stream/Inlet;
      29: new           #153                // class akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$36
      32: dup
      33: aload_0
      34: invokespecial #156                // Method akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$36."<init>":(Lakka/stream/impl/fusing/RecoverWith$$anon$35;)V
      37: invokevirtual #159                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
      40: aload_0
      41: aload_1
      42: invokevirtual #120                // Method akka/stream/impl/fusing/RecoverWith.out:()Lakka/stream/Outlet;
      45: new           #161                // class akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$37
      48: dup
      49: aload_0
      50: invokespecial #162                // Method akka/stream/impl/fusing/RecoverWith$$anon$35$$anon$37."<init>":(Lakka/stream/impl/fusing/RecoverWith$$anon$35;)V
      53: invokevirtual #123                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
      56: return
}
