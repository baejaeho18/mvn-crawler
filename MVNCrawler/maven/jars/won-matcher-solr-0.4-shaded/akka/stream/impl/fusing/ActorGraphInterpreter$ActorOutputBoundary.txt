Compiled from "ActorGraphInterpreter.scala"
public class akka.stream.impl.fusing.ActorGraphInterpreter$ActorOutputBoundary extends akka.stream.impl.fusing.GraphInterpreter$DownstreamBoundaryStageLogic<java.lang.Object> {
  public final akka.actor.ActorRef akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$actor;

  public final akka.stream.impl.fusing.GraphInterpreterShell akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$shell;

  public final int akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$id;

  private final akka.stream.Inlet<java.lang.Object> in;

  private akka.stream.impl.ActorPublisher<java.lang.Object> exposedPublisher;

  private org.reactivestreams.Subscriber<java.lang.Object> akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber;

  private long akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand;

  private boolean akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted;

  private scala.Option<java.lang.Throwable> upstreamFailed;

  private boolean upstreamCompleted;

  public akka.stream.Inlet<java.lang.Object> in();
    Code:
       0: aload_0
       1: getfield      #32                 // Field in:Lakka/stream/Inlet;
       4: areturn

  private akka.stream.impl.ActorPublisher<java.lang.Object> exposedPublisher();
    Code:
       0: aload_0
       1: getfield      #37                 // Field exposedPublisher:Lakka/stream/impl/ActorPublisher;
       4: areturn

  private void exposedPublisher_$eq(akka.stream.impl.ActorPublisher<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field exposedPublisher:Lakka/stream/impl/ActorPublisher;
       5: return

  public org.reactivestreams.Subscriber<java.lang.Object> akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber();
    Code:
       0: aload_0
       1: getfield      #43                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber:Lorg/reactivestreams/Subscriber;
       4: areturn

  public void akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber_$eq(org.reactivestreams.Subscriber<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber:Lorg/reactivestreams/Subscriber;
       5: return

  public long akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand();
    Code:
       0: aload_0
       1: getfield      #48                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand:J
       4: lreturn

  private void akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #48                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand:J
       5: return

  public boolean akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted();
    Code:
       0: aload_0
       1: getfield      #53                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted:Z
       4: ireturn

  private void akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted:Z
       5: return

  private scala.Option<java.lang.Throwable> upstreamFailed();
    Code:
       0: aload_0
       1: getfield      #58                 // Field upstreamFailed:Lscala/Option;
       4: areturn

  private void upstreamFailed_$eq(scala.Option<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field upstreamFailed:Lscala/Option;
       5: return

  private boolean upstreamCompleted();
    Code:
       0: aload_0
       1: getfield      #62                 // Field upstreamCompleted:Z
       4: ireturn

  private void upstreamCompleted_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field upstreamCompleted:Z
       5: return

  public void akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$onNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #67                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand:()J
       5: lconst_1
       6: lsub
       7: invokespecial #69                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand_$eq:(J)V
      10: getstatic     #75                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      13: aload_0
      14: invokevirtual #77                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber:()Lorg/reactivestreams/Subscriber;
      17: aload_1
      18: invokevirtual #81                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnNext:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V
      21: return

  public void akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$complete();
    Code:
       0: aload_0
       1: invokespecial #87                 // Method upstreamCompleted:()Z
       4: ifne          53
       7: aload_0
       8: invokevirtual #89                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted:()Z
      11: ifne          53
      14: aload_0
      15: iconst_1
      16: invokespecial #91                 // Method upstreamCompleted_$eq:(Z)V
      19: aload_0
      20: invokespecial #93                 // Method exposedPublisher:()Lakka/stream/impl/ActorPublisher;
      23: ifnull        36
      26: aload_0
      27: invokespecial #93                 // Method exposedPublisher:()Lakka/stream/impl/ActorPublisher;
      30: getstatic     #98                 // Field scala/None$.MODULE$:Lscala/None$;
      33: invokevirtual #103                // Method akka/stream/impl/ActorPublisher.shutdown:(Lscala/Option;)V
      36: aload_0
      37: invokevirtual #77                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber:()Lorg/reactivestreams/Subscriber;
      40: ifnull        53
      43: getstatic     #75                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      46: aload_0
      47: invokevirtual #77                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber:()Lorg/reactivestreams/Subscriber;
      50: invokevirtual #106                // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnComplete:(Lorg/reactivestreams/Subscriber;)V
      53: return

  public void fail(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted:()Z
       4: ifne          78
       7: aload_0
       8: invokespecial #87                 // Method upstreamCompleted:()Z
      11: ifne          78
      14: aload_0
      15: iconst_1
      16: invokespecial #91                 // Method upstreamCompleted_$eq:(Z)V
      19: aload_0
      20: new           #110                // class scala/Some
      23: dup
      24: aload_1
      25: invokespecial #113                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      28: invokespecial #115                // Method upstreamFailed_$eq:(Lscala/Option;)V
      31: aload_0
      32: invokespecial #93                 // Method exposedPublisher:()Lakka/stream/impl/ActorPublisher;
      35: ifnull        53
      38: aload_0
      39: invokespecial #93                 // Method exposedPublisher:()Lakka/stream/impl/ActorPublisher;
      42: new           #110                // class scala/Some
      45: dup
      46: aload_1
      47: invokespecial #113                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      50: invokevirtual #103                // Method akka/stream/impl/ActorPublisher.shutdown:(Lscala/Option;)V
      53: aload_0
      54: invokevirtual #77                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber:()Lorg/reactivestreams/Subscriber;
      57: ifnull        78
      60: aload_1
      61: instanceof    #117                // class akka/stream/impl/ReactiveStreamsCompliance$SpecViolation
      64: ifne          78
      67: getstatic     #75                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      70: aload_0
      71: invokevirtual #77                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber:()Lorg/reactivestreams/Subscriber;
      74: aload_1
      75: invokevirtual #121                // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnError:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      78: return

  public void subscribePending();
    Code:
       0: aload_0
       1: invokespecial #93                 // Method exposedPublisher:()Lakka/stream/impl/ActorPublisher;
       4: invokevirtual #128                // Method akka/stream/impl/ActorPublisher.takePendingSubscribers:()Lscala/collection/immutable/Seq;
       7: new           #130                // class akka/stream/impl/fusing/ActorGraphInterpreter$ActorOutputBoundary$$anonfun$subscribePending$1
      10: dup
      11: aload_0
      12: invokespecial #133                // Method akka/stream/impl/fusing/ActorGraphInterpreter$ActorOutputBoundary$$anonfun$subscribePending$1."<init>":(Lakka/stream/impl/fusing/ActorGraphInterpreter$ActorOutputBoundary;)V
      15: invokeinterface #139,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
      20: return

  public void exposedPublisher(akka.stream.impl.ActorPublisher<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #141                // Method exposedPublisher_$eq:(Lakka/stream/impl/ActorPublisher;)V
       5: aload_0
       6: invokespecial #143                // Method upstreamFailed:()Lscala/Option;
       9: astore_2
      10: aload_2
      11: instanceof    #110                // class scala/Some
      14: ifeq          32
      17: aload_1
      18: aload_0
      19: invokespecial #143                // Method upstreamFailed:()Lscala/Option;
      22: invokevirtual #103                // Method akka/stream/impl/ActorPublisher.shutdown:(Lscala/Option;)V
      25: getstatic     #149                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      28: astore_3
      29: goto          56
      32: aload_0
      33: invokespecial #87                 // Method upstreamCompleted:()Z
      36: ifeq          52
      39: aload_1
      40: getstatic     #98                 // Field scala/None$.MODULE$:Lscala/None$;
      43: invokevirtual #103                // Method akka/stream/impl/ActorPublisher.shutdown:(Lscala/Option;)V
      46: getstatic     #149                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      49: goto          55
      52: getstatic     #149                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      55: astore_3
      56: return

  public void requestMore(long);
    Code:
       0: lload_1
       1: lconst_1
       2: lcmp
       3: ifge          27
       6: aload_0
       7: aload_0
       8: invokevirtual #155                // Method in:()Lakka/stream/Inlet;
      11: invokevirtual #159                // Method cancel:(Lakka/stream/Inlet;)V
      14: aload_0
      15: getstatic     #75                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      18: invokevirtual #163                // Method akka/stream/impl/ReactiveStreamsCompliance$.numberOfElementsInRequestMustBePositiveException:()Ljava/lang/Throwable;
      21: invokevirtual #165                // Method fail:(Ljava/lang/Throwable;)V
      24: goto          83
      27: aload_0
      28: aload_0
      29: invokevirtual #67                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand:()J
      32: lload_1
      33: ladd
      34: invokespecial #69                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand_$eq:(J)V
      37: aload_0
      38: invokevirtual #67                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand:()J
      41: lconst_0
      42: lcmp
      43: ifge          53
      46: aload_0
      47: ldc2_w        #166                // long 9223372036854775807l
      50: invokespecial #69                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand_$eq:(J)V
      53: aload_0
      54: aload_0
      55: invokevirtual #155                // Method in:()Lakka/stream/Inlet;
      58: invokevirtual #171                // Method hasBeenPulled:(Lakka/stream/Inlet;)Z
      61: ifne          83
      64: aload_0
      65: aload_0
      66: invokevirtual #155                // Method in:()Lakka/stream/Inlet;
      69: invokevirtual #174                // Method isClosed:(Lakka/stream/Inlet;)Z
      72: ifne          83
      75: aload_0
      76: aload_0
      77: invokevirtual #155                // Method in:()Lakka/stream/Inlet;
      80: invokevirtual #177                // Method pull:(Lakka/stream/Inlet;)V
      83: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #180                // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted_$eq:(Z)V
       5: aload_0
       6: aconst_null
       7: invokevirtual #182                // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$subscriber_$eq:(Lorg/reactivestreams/Subscriber;)V
      10: aload_0
      11: invokespecial #93                 // Method exposedPublisher:()Lakka/stream/impl/ActorPublisher;
      14: new           #110                // class scala/Some
      17: dup
      18: new           #184                // class akka/stream/impl/ActorPublisher$NormalShutdownException
      21: dup
      22: invokespecial #186                // Method akka/stream/impl/ActorPublisher$NormalShutdownException."<init>":()V
      25: invokespecial #113                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      28: invokevirtual #103                // Method akka/stream/impl/ActorPublisher.shutdown:(Lscala/Option;)V
      31: aload_0
      32: aload_0
      33: invokevirtual #155                // Method in:()Lakka/stream/Inlet;
      36: invokevirtual #159                // Method cancel:(Lakka/stream/Inlet;)V
      39: return

  public java.lang.String toString();
    Code:
       0: new           #190                // class scala/StringContext
       3: dup
       4: getstatic     #195                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_4
       8: anewarray     #197                // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #199                // String ActorOutputBoundary(id=
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #201                // String , demand=
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #203                // String , finished=
      25: aastore
      26: dup
      27: iconst_3
      28: ldc           #205                // String )
      30: aastore
      31: checkcast     #207                // class "[Ljava/lang/Object;"
      34: invokevirtual #211                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      37: invokespecial #214                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      40: getstatic     #195                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      43: iconst_3
      44: anewarray     #216                // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_0
      50: getfield      #218                // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$id:I
      53: invokestatic  #224                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: aastore
      57: dup
      58: iconst_1
      59: aload_0
      60: invokevirtual #67                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand:()J
      63: invokestatic  #228                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      66: aastore
      67: dup
      68: iconst_2
      69: aload_0
      70: invokevirtual #89                 // Method akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted:()Z
      73: invokestatic  #232                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      76: aastore
      77: invokevirtual #236                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      80: invokevirtual #240                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      83: areturn

  public akka.stream.impl.fusing.ActorGraphInterpreter$ActorOutputBoundary(akka.actor.ActorRef, akka.stream.impl.fusing.GraphInterpreterShell, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #243                // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$actor:Lakka/actor/ActorRef;
       5: aload_0
       6: aload_2
       7: putfield      #245                // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$shell:Lakka/stream/impl/fusing/GraphInterpreterShell;
      10: aload_0
      11: iload_3
      12: putfield      #218                // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$id:I
      15: aload_0
      16: invokespecial #246                // Method akka/stream/impl/fusing/GraphInterpreter$DownstreamBoundaryStageLogic."<init>":()V
      19: aload_0
      20: getstatic     #251                // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      23: new           #253                // class scala/collection/mutable/StringBuilder
      26: dup
      27: invokespecial #254                // Method scala/collection/mutable/StringBuilder."<init>":()V
      30: ldc_w         #256                // String UpstreamBoundary
      33: invokevirtual #260                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      36: iload_3
      37: invokestatic  #224                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #260                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      43: invokevirtual #262                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      46: invokevirtual #266                // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      49: putfield      #32                 // Field in:Lakka/stream/Inlet;
      52: aload_0
      53: invokevirtual #155                // Method in:()Lakka/stream/Inlet;
      56: iconst_0
      57: invokevirtual #272                // Method akka/stream/Inlet.id_$eq:(I)V
      60: aload_0
      61: lconst_0
      62: putfield      #48                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamDemand:J
      65: aload_0
      66: iconst_0
      67: putfield      #53                 // Field akka$stream$impl$fusing$ActorGraphInterpreter$ActorOutputBoundary$$downstreamCompleted:Z
      70: aload_0
      71: getstatic     #98                 // Field scala/None$.MODULE$:Lscala/None$;
      74: putfield      #58                 // Field upstreamFailed:Lscala/Option;
      77: aload_0
      78: iconst_0
      79: putfield      #62                 // Field upstreamCompleted:Z
      82: aload_0
      83: aload_0
      84: invokevirtual #155                // Method in:()Lakka/stream/Inlet;
      87: new           #274                // class akka/stream/impl/fusing/ActorGraphInterpreter$ActorOutputBoundary$$anon$2
      90: dup
      91: aload_0
      92: invokespecial #275                // Method akka/stream/impl/fusing/ActorGraphInterpreter$ActorOutputBoundary$$anon$2."<init>":(Lakka/stream/impl/fusing/ActorGraphInterpreter$ActorOutputBoundary;)V
      95: invokevirtual #279                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
      98: return
}
