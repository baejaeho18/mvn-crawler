Compiled from "Ops.scala"
public final class akka.stream.impl.fusing.Buffer<T> extends akka.stream.stage.DetachedStage<T, T> implements scala.Product, scala.Serializable {
  private final int size;

  private final akka.stream.OverflowStrategy overflowStrategy;

  private akka.stream.impl.Buffer<T> akka$stream$impl$fusing$Buffer$$buffer;

  private final scala.Function2<akka.stream.stage.DetachedContext<T>, T, akka.stream.stage.UpstreamDirective> enqueueAction;

  public static <T> scala.Option<scala.Tuple2<java.lang.Object, akka.stream.OverflowStrategy>> unapply(akka.stream.impl.fusing.Buffer<T>);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Buffer$.MODULE$:Lakka/stream/impl/fusing/Buffer$;
       3: aload_0
       4: invokevirtual #23                 // Method akka/stream/impl/fusing/Buffer$.unapply:(Lakka/stream/impl/fusing/Buffer;)Lscala/Option;
       7: areturn

  public static <T> akka.stream.impl.fusing.Buffer<T> apply(int, akka.stream.OverflowStrategy);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Buffer$.MODULE$:Lakka/stream/impl/fusing/Buffer$;
       3: iload_0
       4: aload_1
       5: invokevirtual #27                 // Method akka/stream/impl/fusing/Buffer$.apply:(ILakka/stream/OverflowStrategy;)Lakka/stream/impl/fusing/Buffer;
       8: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #40                 // Field size:I
       4: ireturn

  public akka.stream.OverflowStrategy overflowStrategy();
    Code:
       0: aload_0
       1: getfield      #45                 // Field overflowStrategy:Lakka/stream/OverflowStrategy;
       4: areturn

  public akka.stream.impl.Buffer<T> akka$stream$impl$fusing$Buffer$$buffer();
    Code:
       0: aload_0
       1: getfield      #48                 // Field akka$stream$impl$fusing$Buffer$$buffer:Lakka/stream/impl/Buffer;
       4: areturn

  private void akka$stream$impl$fusing$Buffer$$buffer_$eq(akka.stream.impl.Buffer<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field akka$stream$impl$fusing$Buffer$$buffer:Lakka/stream/impl/Buffer;
       5: return

  public void preStart(akka.stream.stage.LifecycleContext);
    Code:
       0: aload_0
       1: getstatic     #58                 // Field akka/stream/impl/Buffer$.MODULE$:Lakka/stream/impl/Buffer$;
       4: aload_0
       5: invokevirtual #60                 // Method size:()I
       8: aload_1
       9: invokeinterface #66,  1           // InterfaceMethod akka/stream/stage/LifecycleContext.materializer:()Lakka/stream/Materializer;
      14: invokevirtual #69                 // Method akka/stream/impl/Buffer$.apply:(ILakka/stream/Materializer;)Lakka/stream/impl/Buffer;
      17: invokespecial #71                 // Method akka$stream$impl$fusing$Buffer$$buffer_$eq:(Lakka/stream/impl/Buffer;)V
      20: return

  public akka.stream.stage.UpstreamDirective onPush(T, akka.stream.stage.DetachedContext<T>);
    Code:
       0: aload_2
       1: invokeinterface #81,  1           // InterfaceMethod akka/stream/stage/DetachedContext.isHoldingDownstream:()Z
       6: ifeq          19
       9: aload_2
      10: aload_1
      11: invokeinterface #85,  2           // InterfaceMethod akka/stream/stage/DetachedContext.pushAndPull:(Ljava/lang/Object;)Lakka/stream/stage/FreeDirective;
      16: goto          33
      19: aload_0
      20: invokevirtual #88                 // Method enqueueAction:()Lscala/Function2;
      23: aload_2
      24: aload_1
      25: invokeinterface #93,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #95                 // class akka/stream/stage/UpstreamDirective
      33: areturn

  public akka.stream.stage.DownstreamDirective onPull(akka.stream.stage.DetachedContext<T>);
    Code:
       0: aload_1
       1: invokeinterface #103,  1          // InterfaceMethod akka/stream/stage/DetachedContext.isFinishing:()Z
       6: ifeq          51
       9: aload_0
      10: invokevirtual #105                // Method akka$stream$impl$fusing$Buffer$$buffer:()Lakka/stream/impl/Buffer;
      13: invokeinterface #111,  1          // InterfaceMethod akka/stream/impl/Buffer.dequeue:()Ljava/lang/Object;
      18: astore_2
      19: aload_0
      20: invokevirtual #105                // Method akka$stream$impl$fusing$Buffer$$buffer:()Lakka/stream/impl/Buffer;
      23: invokeinterface #114,  1          // InterfaceMethod akka/stream/impl/Buffer.isEmpty:()Z
      28: ifeq          41
      31: aload_1
      32: aload_2
      33: invokeinterface #118,  2          // InterfaceMethod akka/stream/stage/DetachedContext.pushAndFinish:(Ljava/lang/Object;)Lakka/stream/stage/DownstreamDirective;
      38: goto          114
      41: aload_1
      42: aload_2
      43: invokeinterface #121,  2          // InterfaceMethod akka/stream/stage/DetachedContext.push:(Ljava/lang/Object;)Lakka/stream/stage/DownstreamDirective;
      48: goto          114
      51: aload_1
      52: invokeinterface #124,  1          // InterfaceMethod akka/stream/stage/DetachedContext.isHoldingUpstream:()Z
      57: ifeq          78
      60: aload_1
      61: aload_0
      62: invokevirtual #105                // Method akka$stream$impl$fusing$Buffer$$buffer:()Lakka/stream/impl/Buffer;
      65: invokeinterface #111,  1          // InterfaceMethod akka/stream/impl/Buffer.dequeue:()Ljava/lang/Object;
      70: invokeinterface #85,  2           // InterfaceMethod akka/stream/stage/DetachedContext.pushAndPull:(Ljava/lang/Object;)Lakka/stream/stage/FreeDirective;
      75: goto          114
      78: aload_0
      79: invokevirtual #105                // Method akka$stream$impl$fusing$Buffer$$buffer:()Lakka/stream/impl/Buffer;
      82: invokeinterface #114,  1          // InterfaceMethod akka/stream/impl/Buffer.isEmpty:()Z
      87: ifeq          99
      90: aload_1
      91: invokeinterface #128,  1          // InterfaceMethod akka/stream/stage/DetachedContext.holdDownstream:()Lakka/stream/stage/DownstreamDirective;
      96: goto          114
      99: aload_1
     100: aload_0
     101: invokevirtual #105                // Method akka$stream$impl$fusing$Buffer$$buffer:()Lakka/stream/impl/Buffer;
     104: invokeinterface #111,  1          // InterfaceMethod akka/stream/impl/Buffer.dequeue:()Ljava/lang/Object;
     109: invokeinterface #121,  2          // InterfaceMethod akka/stream/stage/DetachedContext.push:(Ljava/lang/Object;)Lakka/stream/stage/DownstreamDirective;
     114: areturn

  public akka.stream.stage.TerminationDirective onUpstreamFinish(akka.stream.stage.DetachedContext<T>);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method akka$stream$impl$fusing$Buffer$$buffer:()Lakka/stream/impl/Buffer;
       4: invokeinterface #114,  1          // InterfaceMethod akka/stream/impl/Buffer.isEmpty:()Z
       9: ifeq          21
      12: aload_1
      13: invokeinterface #138,  1          // InterfaceMethod akka/stream/stage/DetachedContext.finish:()Lakka/stream/stage/FreeDirective;
      18: goto          27
      21: aload_1
      22: invokeinterface #142,  1          // InterfaceMethod akka/stream/stage/DetachedContext.absorbTermination:()Lakka/stream/stage/TerminationDirective;
      27: areturn

  public scala.Function2<akka.stream.stage.DetachedContext<T>, T, akka.stream.stage.UpstreamDirective> enqueueAction();
    Code:
       0: aload_0
       1: getfield      #146                // Field enqueueAction:Lscala/Function2;
       4: areturn

  public <T> akka.stream.impl.fusing.Buffer<T> copy(int, akka.stream.OverflowStrategy);
    Code:
       0: new           #2                  // class akka/stream/impl/fusing/Buffer
       3: dup
       4: iload_1
       5: aload_2
       6: invokespecial #151                // Method "<init>":(ILakka/stream/OverflowStrategy;)V
       9: areturn

  public <T> int copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method size:()I
       4: ireturn

  public <T> akka.stream.OverflowStrategy copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #155                // Method overflowStrategy:()Lakka/stream/OverflowStrategy;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #159                // String Buffer
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #164                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #170                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #173                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #176                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #155                // Method overflowStrategy:()Lakka/stream/OverflowStrategy;
      43: goto          53
      46: aload_0
      47: invokevirtual #60                 // Method size:()I
      50: invokestatic  #170                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      53: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #187                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/fusing/Buffer
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #191                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #60                 // Method size:()I
       8: invokestatic  #197                // Method scala/runtime/Statics.mix:(II)I
      11: istore_1
      12: iload_1
      13: aload_0
      14: invokevirtual #155                // Method overflowStrategy:()Lakka/stream/OverflowStrategy;
      17: invokestatic  #201                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      20: invokestatic  #197                // Method scala/runtime/Statics.mix:(II)I
      23: istore_1
      24: iload_1
      25: iconst_2
      26: invokestatic  #204                // Method scala/runtime/Statics.finalizeHash:(II)I
      29: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #208                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     83
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/fusing/Buffer
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          87
      25: aload_1
      26: checkcast     #2                  // class akka/stream/impl/fusing/Buffer
      29: astore        4
      31: aload_0
      32: invokevirtual #60                 // Method size:()I
      35: aload         4
      37: invokevirtual #60                 // Method size:()I
      40: if_icmpne     79
      43: aload_0
      44: invokevirtual #155                // Method overflowStrategy:()Lakka/stream/OverflowStrategy;
      47: aload         4
      49: invokevirtual #155                // Method overflowStrategy:()Lakka/stream/OverflowStrategy;
      52: astore        5
      54: dup
      55: ifnonnull     67
      58: pop
      59: aload         5
      61: ifnull        75
      64: goto          79
      67: aload         5
      69: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      72: ifeq          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ifeq          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: ireturn

  public akka.stream.stage.TerminationDirective onUpstreamFinish(akka.stream.stage.Context);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #77                 // class akka/stream/stage/DetachedContext
       5: invokevirtual #216                // Method onUpstreamFinish:(Lakka/stream/stage/DetachedContext;)Lakka/stream/stage/TerminationDirective;
       8: areturn

  public akka.stream.stage.Directive onPull(akka.stream.stage.Context);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #77                 // class akka/stream/stage/DetachedContext
       5: invokevirtual #220                // Method onPull:(Lakka/stream/stage/DetachedContext;)Lakka/stream/stage/DownstreamDirective;
       8: areturn

  public akka.stream.stage.Directive onPush(java.lang.Object, akka.stream.stage.Context);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #77                 // class akka/stream/stage/DetachedContext
       6: invokevirtual #223                // Method onPush:(Ljava/lang/Object;Lakka/stream/stage/DetachedContext;)Lakka/stream/stage/UpstreamDirective;
       9: areturn

  public akka.stream.impl.fusing.Buffer(int, akka.stream.OverflowStrategy);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field size:I
       5: aload_0
       6: aload_2
       7: putfield      #45                 // Field overflowStrategy:Lakka/stream/OverflowStrategy;
      10: aload_0
      11: invokespecial #226                // Method akka/stream/stage/DetachedStage."<init>":()V
      14: aload_0
      15: invokestatic  #232                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: aload_0
      19: aload_2
      20: astore_3
      21: getstatic     #237                // Field akka/stream/OverflowStrategies$DropHead$.MODULE$:Lakka/stream/OverflowStrategies$DropHead$;
      24: aload_3
      25: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          44
      31: new           #239                // class akka/stream/impl/fusing/Buffer$$anonfun$18
      34: dup
      35: aload_0
      36: invokespecial #242                // Method akka/stream/impl/fusing/Buffer$$anonfun$18."<init>":(Lakka/stream/impl/fusing/Buffer;)V
      39: astore        4
      41: goto          156
      44: getstatic     #247                // Field akka/stream/OverflowStrategies$DropTail$.MODULE$:Lakka/stream/OverflowStrategies$DropTail$;
      47: aload_3
      48: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          67
      54: new           #249                // class akka/stream/impl/fusing/Buffer$$anonfun$19
      57: dup
      58: aload_0
      59: invokespecial #250                // Method akka/stream/impl/fusing/Buffer$$anonfun$19."<init>":(Lakka/stream/impl/fusing/Buffer;)V
      62: astore        4
      64: goto          156
      67: getstatic     #255                // Field akka/stream/OverflowStrategies$DropBuffer$.MODULE$:Lakka/stream/OverflowStrategies$DropBuffer$;
      70: aload_3
      71: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          90
      77: new           #257                // class akka/stream/impl/fusing/Buffer$$anonfun$20
      80: dup
      81: aload_0
      82: invokespecial #258                // Method akka/stream/impl/fusing/Buffer$$anonfun$20."<init>":(Lakka/stream/impl/fusing/Buffer;)V
      85: astore        4
      87: goto          156
      90: getstatic     #263                // Field akka/stream/OverflowStrategies$DropNew$.MODULE$:Lakka/stream/OverflowStrategies$DropNew$;
      93: aload_3
      94: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifeq          113
     100: new           #265                // class akka/stream/impl/fusing/Buffer$$anonfun$21
     103: dup
     104: aload_0
     105: invokespecial #266                // Method akka/stream/impl/fusing/Buffer$$anonfun$21."<init>":(Lakka/stream/impl/fusing/Buffer;)V
     108: astore        4
     110: goto          156
     113: getstatic     #271                // Field akka/stream/OverflowStrategies$Backpressure$.MODULE$:Lakka/stream/OverflowStrategies$Backpressure$;
     116: aload_3
     117: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     120: ifeq          136
     123: new           #273                // class akka/stream/impl/fusing/Buffer$$anonfun$22
     126: dup
     127: aload_0
     128: invokespecial #274                // Method akka/stream/impl/fusing/Buffer$$anonfun$22."<init>":(Lakka/stream/impl/fusing/Buffer;)V
     131: astore        4
     133: goto          156
     136: getstatic     #279                // Field akka/stream/OverflowStrategies$Fail$.MODULE$:Lakka/stream/OverflowStrategies$Fail$;
     139: aload_3
     140: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     143: ifeq          162
     146: new           #281                // class akka/stream/impl/fusing/Buffer$$anonfun$23
     149: dup
     150: aload_0
     151: invokespecial #282                // Method akka/stream/impl/fusing/Buffer$$anonfun$23."<init>":(Lakka/stream/impl/fusing/Buffer;)V
     154: astore        4
     156: aload         4
     158: putfield      #146                // Field enqueueAction:Lscala/Function2;
     161: return
     162: new           #284                // class scala/MatchError
     165: dup
     166: aload_3
     167: invokespecial #287                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     170: athrow
}
