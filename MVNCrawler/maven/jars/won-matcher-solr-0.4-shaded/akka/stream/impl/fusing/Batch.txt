Compiled from "Ops.scala"
public final class akka.stream.impl.fusing.Batch<In, Out> extends akka.stream.stage.GraphStage<akka.stream.FlowShape<In, Out>> implements scala.Product, scala.Serializable {
  private final long max;

  private final scala.Function1<In, java.lang.Object> costFn;

  private final scala.Function1<In, Out> seed;

  private final scala.Function2<Out, In, Out> aggregate;

  private final akka.stream.Inlet<In> in;

  private final akka.stream.Outlet<Out> out;

  private final akka.stream.FlowShape<In, Out> shape;

  public static <In, Out> scala.Option<scala.Tuple4<java.lang.Object, scala.Function1<In, java.lang.Object>, scala.Function1<In, Out>, scala.Function2<Out, In, Out>>> unapply(akka.stream.impl.fusing.Batch<In, Out>);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Batch$.MODULE$:Lakka/stream/impl/fusing/Batch$;
       3: aload_0
       4: invokevirtual #23                 // Method akka/stream/impl/fusing/Batch$.unapply:(Lakka/stream/impl/fusing/Batch;)Lscala/Option;
       7: areturn

  public static <In, Out> akka.stream.impl.fusing.Batch<In, Out> apply(long, scala.Function1<In, java.lang.Object>, scala.Function1<In, Out>, scala.Function2<Out, In, Out>);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Batch$.MODULE$:Lakka/stream/impl/fusing/Batch$;
       3: lload_0
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokevirtual #27                 // Method akka/stream/impl/fusing/Batch$.apply:(JLscala/Function1;Lscala/Function1;Lscala/Function2;)Lakka/stream/impl/fusing/Batch;
      11: areturn

  public long max();
    Code:
       0: aload_0
       1: getfield      #49                 // Field max:J
       4: lreturn

  public scala.Function1<In, java.lang.Object> costFn();
    Code:
       0: aload_0
       1: getfield      #54                 // Field costFn:Lscala/Function1;
       4: areturn

  public scala.Function1<In, Out> seed();
    Code:
       0: aload_0
       1: getfield      #56                 // Field seed:Lscala/Function1;
       4: areturn

  public scala.Function2<Out, In, Out> aggregate();
    Code:
       0: aload_0
       1: getfield      #59                 // Field aggregate:Lscala/Function2;
       4: areturn

  public akka.stream.Inlet<In> in();
    Code:
       0: aload_0
       1: getfield      #62                 // Field in:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<Out> out();
    Code:
       0: aload_0
       1: getfield      #65                 // Field out:Lakka/stream/Outlet;
       4: areturn

  public akka.stream.FlowShape<In, Out> shape();
    Code:
       0: aload_0
       1: getfield      #68                 // Field shape:Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.stage.GraphStageLogic createLogic(akka.stream.Attributes);
    Code:
       0: new           #72                 // class akka/stream/impl/fusing/Batch$$anon$19
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #76                 // Method akka/stream/impl/fusing/Batch$$anon$19."<init>":(Lakka/stream/impl/fusing/Batch;Lakka/stream/Attributes;)V
       9: areturn

  public <In, Out> akka.stream.impl.fusing.Batch<In, Out> copy(long, scala.Function1<In, java.lang.Object>, scala.Function1<In, Out>, scala.Function2<Out, In, Out>);
    Code:
       0: new           #2                  // class akka/stream/impl/fusing/Batch
       3: dup
       4: lload_1
       5: aload_3
       6: aload         4
       8: aload         5
      10: invokespecial #82                 // Method "<init>":(JLscala/Function1;Lscala/Function1;Lscala/Function2;)V
      13: areturn

  public <In, Out> long copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method max:()J
       4: lreturn

  public <In, Out> scala.Function1<In, java.lang.Object> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method costFn:()Lscala/Function1;
       4: areturn

  public <In, Out> scala.Function1<In, Out> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method seed:()Lscala/Function1;
       4: areturn

  public <In, Out> scala.Function2<Out, In, Out> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method aggregate:()Lscala/Function2;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #98                 // String Batch
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 68
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #104                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #110                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #115                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #118                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #94                 // Method aggregate:()Lscala/Function2;
      51: goto          75
      54: aload_0
      55: invokevirtual #91                 // Method seed:()Lscala/Function1;
      58: goto          75
      61: aload_0
      62: invokevirtual #88                 // Method costFn:()Lscala/Function1;
      65: goto          75
      68: aload_0
      69: invokevirtual #85                 // Method max:()J
      72: invokestatic  #122                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      75: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #131                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #135                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/fusing/Batch
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #140                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #85                 // Method max:()J
       8: invokestatic  #146                // Method scala/runtime/Statics.longHash:(J)I
      11: invokestatic  #150                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #88                 // Method costFn:()Lscala/Function1;
      20: invokestatic  #154                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #150                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #91                 // Method seed:()Lscala/Function1;
      32: invokestatic  #154                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      35: invokestatic  #150                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: aload_0
      41: invokevirtual #94                 // Method aggregate:()Lscala/Function2;
      44: invokestatic  #154                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      47: invokestatic  #150                // Method scala/runtime/Statics.mix:(II)I
      50: istore_1
      51: iload_1
      52: iconst_4
      53: invokestatic  #157                // Method scala/runtime/Statics.finalizeHash:(II)I
      56: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #131                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #161                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     148
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/fusing/Batch
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          152
      25: aload_1
      26: checkcast     #2                  // class akka/stream/impl/fusing/Batch
      29: astore        4
      31: aload_0
      32: invokevirtual #85                 // Method max:()J
      35: aload         4
      37: invokevirtual #85                 // Method max:()J
      40: lcmp
      41: ifne          144
      44: aload_0
      45: invokevirtual #88                 // Method costFn:()Lscala/Function1;
      48: aload         4
      50: invokevirtual #88                 // Method costFn:()Lscala/Function1;
      53: astore        5
      55: dup
      56: ifnonnull     68
      59: pop
      60: aload         5
      62: ifnull        76
      65: goto          144
      68: aload         5
      70: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          144
      76: aload_0
      77: invokevirtual #91                 // Method seed:()Lscala/Function1;
      80: aload         4
      82: invokevirtual #91                 // Method seed:()Lscala/Function1;
      85: astore        6
      87: dup
      88: ifnonnull     100
      91: pop
      92: aload         6
      94: ifnull        108
      97: goto          144
     100: aload         6
     102: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     105: ifeq          144
     108: aload_0
     109: invokevirtual #94                 // Method aggregate:()Lscala/Function2;
     112: aload         4
     114: invokevirtual #94                 // Method aggregate:()Lscala/Function2;
     117: astore        7
     119: dup
     120: ifnonnull     132
     123: pop
     124: aload         7
     126: ifnull        140
     129: goto          144
     132: aload         7
     134: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     137: ifeq          144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: ifeq          152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: ireturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #171                // Method shape:()Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.impl.fusing.Batch(long, scala.Function1<In, java.lang.Object>, scala.Function1<In, Out>, scala.Function2<Out, In, Out>);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #49                 // Field max:J
       5: aload_0
       6: aload_3
       7: putfield      #54                 // Field costFn:Lscala/Function1;
      10: aload_0
      11: aload         4
      13: putfield      #56                 // Field seed:Lscala/Function1;
      16: aload_0
      17: aload         5
      19: putfield      #59                 // Field aggregate:Lscala/Function2;
      22: aload_0
      23: invokespecial #174                // Method akka/stream/stage/GraphStage."<init>":()V
      26: aload_0
      27: invokestatic  #180                // Method scala/Product$class.$init$:(Lscala/Product;)V
      30: aload_0
      31: getstatic     #185                // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      34: ldc           #187                // String Batch.in
      36: invokevirtual #190                // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      39: putfield      #62                 // Field in:Lakka/stream/Inlet;
      42: aload_0
      43: getstatic     #195                // Field akka/stream/Outlet$.MODULE$:Lakka/stream/Outlet$;
      46: ldc           #197                // String Batch.out
      48: invokevirtual #200                // Method akka/stream/Outlet$.apply:(Ljava/lang/String;)Lakka/stream/Outlet;
      51: putfield      #65                 // Field out:Lakka/stream/Outlet;
      54: aload_0
      55: getstatic     #205                // Field akka/stream/FlowShape$.MODULE$:Lakka/stream/FlowShape$;
      58: aload_0
      59: invokevirtual #207                // Method in:()Lakka/stream/Inlet;
      62: aload_0
      63: invokevirtual #209                // Method out:()Lakka/stream/Outlet;
      66: invokevirtual #213                // Method akka/stream/FlowShape$.of:(Lakka/stream/Inlet;Lakka/stream/Outlet;)Lakka/stream/FlowShape;
      69: putfield      #68                 // Field shape:Lakka/stream/FlowShape;
      72: return
}
