Compiled from "Ops.scala"
public final class akka.stream.impl.fusing.Expand<In, Out> extends akka.stream.stage.GraphStage<akka.stream.FlowShape<In, Out>> {
  private final scala.Function1<In, scala.collection.Iterator<Out>> extrapolate;

  private final akka.stream.Inlet<In> akka$stream$impl$fusing$Expand$$in;

  private final akka.stream.Outlet<Out> akka$stream$impl$fusing$Expand$$out;

  private final akka.stream.FlowShape<In, Out> shape;

  public scala.Function1<In, scala.collection.Iterator<Out>> extrapolate();
    Code:
       0: aload_0
       1: getfield      #24                 // Field extrapolate:Lscala/Function1;
       4: areturn

  public akka.stream.Inlet<In> akka$stream$impl$fusing$Expand$$in();
    Code:
       0: aload_0
       1: getfield      #29                 // Field akka$stream$impl$fusing$Expand$$in:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<Out> akka$stream$impl$fusing$Expand$$out();
    Code:
       0: aload_0
       1: getfield      #32                 // Field akka$stream$impl$fusing$Expand$$out:Lakka/stream/Outlet;
       4: areturn

  public akka.stream.Attributes initialAttributes();
    Code:
       0: getstatic     #40                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
       3: invokevirtual #43                 // Method akka/stream/impl/Stages$DefaultAttributes$.expand:()Lakka/stream/Attributes;
       6: areturn

  public akka.stream.FlowShape<In, Out> shape();
    Code:
       0: aload_0
       1: getfield      #46                 // Field shape:Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.stage.GraphStageLogic createLogic(akka.stream.Attributes);
    Code:
       0: new           #50                 // class akka/stream/impl/fusing/Expand$$anon$20
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method akka/stream/impl/fusing/Expand$$anon$20."<init>":(Lakka/stream/impl/fusing/Expand;)V
       8: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method shape:()Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.impl.fusing.Expand(scala.Function1<In, scala.collection.Iterator<Out>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field extrapolate:Lscala/Function1;
       5: aload_0
       6: invokespecial #63                 // Method akka/stream/stage/GraphStage."<init>":()V
       9: aload_0
      10: getstatic     #68                 // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      13: ldc           #70                 // String expand.in
      15: invokevirtual #74                 // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      18: putfield      #29                 // Field akka$stream$impl$fusing$Expand$$in:Lakka/stream/Inlet;
      21: aload_0
      22: getstatic     #79                 // Field akka/stream/Outlet$.MODULE$:Lakka/stream/Outlet$;
      25: ldc           #81                 // String expand.out
      27: invokevirtual #84                 // Method akka/stream/Outlet$.apply:(Ljava/lang/String;)Lakka/stream/Outlet;
      30: putfield      #32                 // Field akka$stream$impl$fusing$Expand$$out:Lakka/stream/Outlet;
      33: aload_0
      34: new           #86                 // class akka/stream/FlowShape
      37: dup
      38: aload_0
      39: invokevirtual #88                 // Method akka$stream$impl$fusing$Expand$$in:()Lakka/stream/Inlet;
      42: aload_0
      43: invokevirtual #90                 // Method akka$stream$impl$fusing$Expand$$out:()Lakka/stream/Outlet;
      46: invokespecial #93                 // Method akka/stream/FlowShape."<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;)V
      49: putfield      #46                 // Field shape:Lakka/stream/FlowShape;
      52: return
}
