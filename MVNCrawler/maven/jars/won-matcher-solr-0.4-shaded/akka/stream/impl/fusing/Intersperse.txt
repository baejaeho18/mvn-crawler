Compiled from "Ops.scala"
public final class akka.stream.impl.fusing.Intersperse<T> extends akka.stream.stage.GraphStage<akka.stream.FlowShape<T, T>> implements scala.Product, scala.Serializable {
  private final scala.Option<T> start;

  private final T inject;

  private final scala.Option<T> end;

  private final akka.stream.Inlet<T> akka$stream$impl$fusing$Intersperse$$in;

  private final akka.stream.Outlet<T> akka$stream$impl$fusing$Intersperse$$out;

  private final akka.stream.FlowShape<T, T> shape;

  public static <T> scala.Option<scala.Tuple3<scala.Option<T>, T, scala.Option<T>>> unapply(akka.stream.impl.fusing.Intersperse<T>);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Intersperse$.MODULE$:Lakka/stream/impl/fusing/Intersperse$;
       3: aload_0
       4: invokevirtual #23                 // Method akka/stream/impl/fusing/Intersperse$.unapply:(Lakka/stream/impl/fusing/Intersperse;)Lscala/Option;
       7: areturn

  public static <T> akka.stream.impl.fusing.Intersperse<T> apply(scala.Option<T>, T, scala.Option<T>);
    Code:
       0: getstatic     #21                 // Field akka/stream/impl/fusing/Intersperse$.MODULE$:Lakka/stream/impl/fusing/Intersperse$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #27                 // Method akka/stream/impl/fusing/Intersperse$.apply:(Lscala/Option;Ljava/lang/Object;Lscala/Option;)Lakka/stream/impl/fusing/Intersperse;
       9: areturn

  public scala.Option<T> start();
    Code:
       0: aload_0
       1: getfield      #46                 // Field start:Lscala/Option;
       4: areturn

  public T inject();
    Code:
       0: aload_0
       1: getfield      #51                 // Field inject:Ljava/lang/Object;
       4: areturn

  public scala.Option<T> end();
    Code:
       0: aload_0
       1: getfield      #53                 // Field end:Lscala/Option;
       4: areturn

  public akka.stream.Inlet<T> akka$stream$impl$fusing$Intersperse$$in();
    Code:
       0: aload_0
       1: getfield      #56                 // Field akka$stream$impl$fusing$Intersperse$$in:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<T> akka$stream$impl$fusing$Intersperse$$out();
    Code:
       0: aload_0
       1: getfield      #59                 // Field akka$stream$impl$fusing$Intersperse$$out:Lakka/stream/Outlet;
       4: areturn

  public akka.stream.FlowShape<T, T> shape();
    Code:
       0: aload_0
       1: getfield      #62                 // Field shape:Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.stage.GraphStageLogic createLogic(akka.stream.Attributes);
    Code:
       0: new           #66                 // class akka/stream/impl/fusing/Intersperse$$anon$26
       3: dup
       4: aload_0
       5: invokespecial #70                 // Method akka/stream/impl/fusing/Intersperse$$anon$26."<init>":(Lakka/stream/impl/fusing/Intersperse;)V
       8: areturn

  public <T> akka.stream.impl.fusing.Intersperse<T> copy(scala.Option<T>, T, scala.Option<T>);
    Code:
       0: new           #2                  // class akka/stream/impl/fusing/Intersperse
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #76                 // Method "<init>":(Lscala/Option;Ljava/lang/Object;Lscala/Option;)V
      10: areturn

  public <T> scala.Option<T> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method start:()Lscala/Option;
       4: areturn

  public <T> T copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method inject:()Ljava/lang/Object;
       4: areturn

  public <T> scala.Option<T> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method end:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #89                 // String Intersperse
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 57
                     1: 50
                     2: 43
               default: 28
          }
      28: new           #95                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #101                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #106                // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #109                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #85                 // Method end:()Lscala/Option;
      47: goto          61
      50: aload_0
      51: invokevirtual #82                 // Method inject:()Ljava/lang/Object;
      54: goto          61
      57: aload_0
      58: invokevirtual #79                 // Method start:()Lscala/Option;
      61: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #122                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/fusing/Intersperse
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #129                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #118                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #133                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     118
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/fusing/Intersperse
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          122
      25: aload_1
      26: checkcast     #2                  // class akka/stream/impl/fusing/Intersperse
      29: astore        4
      31: aload_0
      32: invokevirtual #79                 // Method start:()Lscala/Option;
      35: aload         4
      37: invokevirtual #79                 // Method start:()Lscala/Option;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          114
      55: aload         5
      57: invokevirtual #136                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          114
      63: aload_0
      64: invokevirtual #82                 // Method inject:()Ljava/lang/Object;
      67: aload         4
      69: invokevirtual #82                 // Method inject:()Ljava/lang/Object;
      72: invokestatic  #139                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      75: ifeq          114
      78: aload_0
      79: invokevirtual #85                 // Method end:()Lscala/Option;
      82: aload         4
      84: invokevirtual #85                 // Method end:()Lscala/Option;
      87: astore        6
      89: dup
      90: ifnonnull     102
      93: pop
      94: aload         6
      96: ifnull        110
      99: goto          114
     102: aload         6
     104: invokevirtual #136                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: ifeq          122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: ireturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method shape:()Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.impl.fusing.Intersperse(scala.Option<T>, T, scala.Option<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field start:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #51                 // Field inject:Ljava/lang/Object;
      10: aload_0
      11: aload_3
      12: putfield      #53                 // Field end:Lscala/Option;
      15: aload_0
      16: invokespecial #147                // Method akka/stream/stage/GraphStage."<init>":()V
      19: aload_0
      20: invokestatic  #153                // Method scala/Product$class.$init$:(Lscala/Product;)V
      23: getstatic     #158                // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      26: aload_2
      27: invokevirtual #162                // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullElement:(Ljava/lang/Object;)V
      30: aload_1
      31: invokevirtual #166                // Method scala/Option.isDefined:()Z
      34: ifeq          47
      37: getstatic     #158                // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      40: aload_1
      41: invokevirtual #169                // Method scala/Option.get:()Ljava/lang/Object;
      44: invokevirtual #162                // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullElement:(Ljava/lang/Object;)V
      47: aload_3
      48: invokevirtual #166                // Method scala/Option.isDefined:()Z
      51: ifeq          64
      54: getstatic     #158                // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      57: aload_3
      58: invokevirtual #169                // Method scala/Option.get:()Ljava/lang/Object;
      61: invokevirtual #162                // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullElement:(Ljava/lang/Object;)V
      64: aload_0
      65: getstatic     #174                // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      68: ldc           #176                // String in
      70: invokevirtual #179                // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      73: putfield      #56                 // Field akka$stream$impl$fusing$Intersperse$$in:Lakka/stream/Inlet;
      76: aload_0
      77: getstatic     #184                // Field akka/stream/Outlet$.MODULE$:Lakka/stream/Outlet$;
      80: ldc           #186                // String out
      82: invokevirtual #189                // Method akka/stream/Outlet$.apply:(Ljava/lang/String;)Lakka/stream/Outlet;
      85: putfield      #59                 // Field akka$stream$impl$fusing$Intersperse$$out:Lakka/stream/Outlet;
      88: aload_0
      89: new           #191                // class akka/stream/FlowShape
      92: dup
      93: aload_0
      94: invokevirtual #193                // Method akka$stream$impl$fusing$Intersperse$$in:()Lakka/stream/Inlet;
      97: aload_0
      98: invokevirtual #195                // Method akka$stream$impl$fusing$Intersperse$$out:()Lakka/stream/Outlet;
     101: invokespecial #198                // Method akka/stream/FlowShape."<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;)V
     104: putfield      #62                 // Field shape:Lakka/stream/FlowShape;
     107: return
}
