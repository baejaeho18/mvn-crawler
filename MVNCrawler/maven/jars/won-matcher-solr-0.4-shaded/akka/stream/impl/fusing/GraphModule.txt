Compiled from "ActorGraphInterpreter.scala"
public final class akka.stream.impl.fusing.GraphModule extends akka.stream.impl.StreamLayout$AtomicModule implements scala.Product,scala.Serializable {
  private final akka.stream.impl.fusing.GraphInterpreter$GraphAssembly assembly;

  private final akka.stream.Shape shape;

  private final akka.stream.Attributes attributes;

  private final akka.stream.impl.StreamLayout$Module[] matValIDs;

  public static scala.Option<scala.Tuple4<akka.stream.impl.fusing.GraphInterpreter$GraphAssembly, akka.stream.Shape, akka.stream.Attributes, akka.stream.impl.StreamLayout$Module[]>> unapply(akka.stream.impl.fusing.GraphModule);
    Code:
       0: getstatic     #20                 // Field akka/stream/impl/fusing/GraphModule$.MODULE$:Lakka/stream/impl/fusing/GraphModule$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/stream/impl/fusing/GraphModule$.unapply:(Lakka/stream/impl/fusing/GraphModule;)Lscala/Option;
       7: areturn

  public static akka.stream.impl.fusing.GraphModule apply(akka.stream.impl.fusing.GraphInterpreter$GraphAssembly, akka.stream.Shape, akka.stream.Attributes, akka.stream.impl.StreamLayout$Module[]);
    Code:
       0: getstatic     #20                 // Field akka/stream/impl/fusing/GraphModule$.MODULE$:Lakka/stream/impl/fusing/GraphModule$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #26                 // Method akka/stream/impl/fusing/GraphModule$.apply:(Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;Lakka/stream/Shape;Lakka/stream/Attributes;[Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/fusing/GraphModule;
      10: areturn

  public static scala.Function1<scala.Tuple4<akka.stream.impl.fusing.GraphInterpreter$GraphAssembly, akka.stream.Shape, akka.stream.Attributes, akka.stream.impl.StreamLayout$Module[]>, akka.stream.impl.fusing.GraphModule> tupled();
    Code:
       0: getstatic     #20                 // Field akka/stream/impl/fusing/GraphModule$.MODULE$:Lakka/stream/impl/fusing/GraphModule$;
       3: invokevirtual #30                 // Method akka/stream/impl/fusing/GraphModule$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.stream.impl.fusing.GraphInterpreter$GraphAssembly, scala.Function1<akka.stream.Shape, scala.Function1<akka.stream.Attributes, scala.Function1<akka.stream.impl.StreamLayout$Module[], akka.stream.impl.fusing.GraphModule>>>> curried();
    Code:
       0: getstatic     #20                 // Field akka/stream/impl/fusing/GraphModule$.MODULE$:Lakka/stream/impl/fusing/GraphModule$;
       3: invokevirtual #33                 // Method akka/stream/impl/fusing/GraphModule$.curried:()Lscala/Function1;
       6: areturn

  public akka.stream.impl.fusing.GraphInterpreter$GraphAssembly assembly();
    Code:
       0: aload_0
       1: getfield      #44                 // Field assembly:Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;
       4: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: getfield      #49                 // Field shape:Lakka/stream/Shape;
       4: areturn

  public akka.stream.Attributes attributes();
    Code:
       0: aload_0
       1: getfield      #52                 // Field attributes:Lakka/stream/Attributes;
       4: areturn

  public akka.stream.impl.StreamLayout$Module[] matValIDs();
    Code:
       0: aload_0
       1: getfield      #55                 // Field matValIDs:[Lakka/stream/impl/StreamLayout$Module;
       4: areturn

  public akka.stream.impl.StreamLayout$Module withAttributes(akka.stream.Attributes);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokevirtual #60                 // Method copy$default$1:()Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;
       6: astore_3
       7: aload_0
       8: invokevirtual #63                 // Method copy$default$2:()Lakka/stream/Shape;
      11: astore        4
      13: aload_0
      14: invokevirtual #66                 // Method copy$default$4:()[Lakka/stream/impl/StreamLayout$Module;
      17: astore        5
      19: aload_0
      20: aload_3
      21: aload         4
      23: aload_2
      24: aload         5
      26: invokevirtual #69                 // Method copy:(Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;Lakka/stream/Shape;Lakka/stream/Attributes;[Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/fusing/GraphModule;
      29: areturn

  public final akka.stream.impl.StreamLayout$Module carbonCopy();
    Code:
       0: new           #78                 // class akka/stream/impl/StreamLayout$CopiedModule
       3: dup
       4: aload_0
       5: invokevirtual #80                 // Method shape:()Lakka/stream/Shape;
       8: invokevirtual #85                 // Method akka/stream/Shape.deepCopy:()Lakka/stream/Shape;
      11: getstatic     #90                 // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
      14: invokevirtual #93                 // Method akka/stream/Attributes$.none:()Lakka/stream/Attributes;
      17: aload_0
      18: invokespecial #97                 // Method akka/stream/impl/StreamLayout$CopiedModule."<init>":(Lakka/stream/Shape;Lakka/stream/Attributes;Lakka/stream/impl/StreamLayout$Module;)V
      21: areturn

  public final akka.stream.impl.StreamLayout$Module replaceShape(akka.stream.Shape);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #80                 // Method shape:()Lakka/stream/Shape;
       5: astore_2
       6: dup
       7: ifnonnull     18
      10: pop
      11: aload_2
      12: ifnull        25
      15: goto          29
      18: aload_2
      19: invokevirtual #105                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifeq          29
      25: aload_0
      26: goto          37
      29: getstatic     #110                // Field akka/stream/impl/StreamLayout$CompositeModule$.MODULE$:Lakka/stream/impl/StreamLayout$CompositeModule$;
      32: aload_0
      33: aload_1
      34: invokevirtual #113                // Method akka/stream/impl/StreamLayout$CompositeModule$.apply:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/Shape;)Lakka/stream/impl/StreamLayout$CompositeModule;
      37: areturn

  public java.lang.String toString();
    Code:
       0: new           #118                // class scala/collection/immutable/StringOps
       3: dup
       4: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: new           #125                // class scala/StringContext
      10: dup
      11: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: iconst_5
      15: anewarray     #127                // class java/lang/String
      18: dup
      19: iconst_0
      20: ldc           #129                // String GraphModule\n       |
      22: aastore
      23: dup
      24: iconst_1
      25: ldc           #131                // String \n       |  shape=
      27: aastore
      28: dup
      29: iconst_2
      30: ldc           #133                // String , attributes=
      32: aastore
      33: dup
      34: iconst_3
      35: ldc           #135                // String \n       |  matVals=\n       |
      37: aastore
      38: dup
      39: iconst_4
      40: ldc           #137                // String
      42: aastore
      43: checkcast     #139                // class "[Ljava/lang/Object;"
      46: invokevirtual #143                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      49: invokespecial #146                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      52: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      55: iconst_4
      56: anewarray     #101                // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_0
      62: invokevirtual #148                // Method assembly:()Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;
      65: invokevirtual #152                // Method akka/stream/impl/fusing/GraphInterpreter$GraphAssembly.toString:()Ljava/lang/String;
      68: ldc           #154                // String \n
      70: ldc           #156                // String \n
      72: invokevirtual #160                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      75: aastore
      76: dup
      77: iconst_1
      78: aload_0
      79: invokevirtual #80                 // Method shape:()Lakka/stream/Shape;
      82: aastore
      83: dup
      84: iconst_2
      85: aload_0
      86: invokevirtual #162                // Method attributes:()Lakka/stream/Attributes;
      89: aastore
      90: dup
      91: iconst_3
      92: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      95: aload_0
      96: invokevirtual #164                // Method matValIDs:()[Lakka/stream/impl/StreamLayout$Module;
      99: checkcast     #139                // class "[Ljava/lang/Object;"
     102: invokevirtual #168                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     105: ldc           #170                // String \n
     107: invokeinterface #176,  2          // InterfaceMethod scala/collection/mutable/ArrayOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
     112: aastore
     113: invokevirtual #180                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     116: invokevirtual #184                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     119: invokevirtual #187                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     122: invokespecial #190                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     125: invokevirtual #193                // Method scala/collection/immutable/StringOps.stripMargin:()Ljava/lang/String;
     128: areturn

  public akka.stream.impl.fusing.GraphModule copy(akka.stream.impl.fusing.GraphInterpreter$GraphAssembly, akka.stream.Shape, akka.stream.Attributes, akka.stream.impl.StreamLayout$Module[]);
    Code:
       0: new           #2                  // class akka/stream/impl/fusing/GraphModule
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #196                // Method "<init>":(Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;Lakka/stream/Shape;Lakka/stream/Attributes;[Lakka/stream/impl/StreamLayout$Module;)V
      12: areturn

  public akka.stream.impl.fusing.GraphInterpreter$GraphAssembly copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method assembly:()Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;
       4: areturn

  public akka.stream.Shape copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method shape:()Lakka/stream/Shape;
       4: areturn

  public akka.stream.Attributes copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #162                // Method attributes:()Lakka/stream/Attributes;
       4: areturn

  public akka.stream.impl.StreamLayout$Module[] copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method matValIDs:()[Lakka/stream/impl/StreamLayout$Module;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #200                // String GraphModule
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 68
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #206                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #212                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #213                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #214                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #164                // Method matValIDs:()[Lakka/stream/impl/StreamLayout$Module;
      51: goto          72
      54: aload_0
      55: invokevirtual #162                // Method attributes:()Lakka/stream/Attributes;
      58: goto          72
      61: aload_0
      62: invokevirtual #80                 // Method shape:()Lakka/stream/Shape;
      65: goto          72
      68: aload_0
      69: invokevirtual #148                // Method assembly:()Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;
      72: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #223                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #227                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/fusing/GraphModule
       4: ireturn

  public akka.stream.impl.fusing.GraphModule(akka.stream.impl.fusing.GraphInterpreter$GraphAssembly, akka.stream.Shape, akka.stream.Attributes, akka.stream.impl.StreamLayout$Module[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field assembly:Lakka/stream/impl/fusing/GraphInterpreter$GraphAssembly;
       5: aload_0
       6: aload_2
       7: putfield      #49                 // Field shape:Lakka/stream/Shape;
      10: aload_0
      11: aload_3
      12: putfield      #52                 // Field attributes:Lakka/stream/Attributes;
      15: aload_0
      16: aload         4
      18: putfield      #55                 // Field matValIDs:[Lakka/stream/impl/StreamLayout$Module;
      21: aload_0
      22: invokespecial #232                // Method akka/stream/impl/StreamLayout$AtomicModule."<init>":()V
      25: aload_0
      26: invokestatic  #238                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: return
}
