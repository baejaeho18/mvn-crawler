Compiled from "StreamOfStreams.scala"
public final class akka.stream.impl.fusing.PrefixAndTail<T> extends akka.stream.stage.GraphStage<akka.stream.FlowShape<T, scala.Tuple2<scala.collection.immutable.Seq<T>, akka.stream.scaladsl.Source<T, akka.NotUsed>>>> {
  private final int n;

  private final akka.stream.Inlet<T> in;

  private final akka.stream.Outlet<scala.Tuple2<scala.collection.immutable.Seq<T>, akka.stream.scaladsl.Source<T, akka.NotUsed>>> out;

  private final akka.stream.FlowShape<T, scala.Tuple2<scala.collection.immutable.Seq<T>, akka.stream.scaladsl.Source<T, akka.NotUsed>>> shape;

  public int n();
    Code:
       0: aload_0
       1: getfield      #23                 // Field n:I
       4: ireturn

  public akka.stream.Inlet<T> in();
    Code:
       0: aload_0
       1: getfield      #28                 // Field in:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<scala.Tuple2<scala.collection.immutable.Seq<T>, akka.stream.scaladsl.Source<T, akka.NotUsed>>> out();
    Code:
       0: aload_0
       1: getfield      #31                 // Field out:Lakka/stream/Outlet;
       4: areturn

  public akka.stream.FlowShape<T, scala.Tuple2<scala.collection.immutable.Seq<T>, akka.stream.scaladsl.Source<T, akka.NotUsed>>> shape();
    Code:
       0: aload_0
       1: getfield      #34                 // Field shape:Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.Attributes initialAttributes();
    Code:
       0: getstatic     #42                 // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
       3: invokevirtual #45                 // Method akka/stream/impl/Stages$DefaultAttributes$.prefixAndTail:()Lakka/stream/Attributes;
       6: areturn

  public akka.stream.stage.GraphStageLogic createLogic(akka.stream.Attributes);
    Code:
       0: new           #49                 // class akka/stream/impl/fusing/PrefixAndTail$PrefixAndTailLogic
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #51                 // Method shape:()Lakka/stream/FlowShape;
       9: invokespecial #55                 // Method akka/stream/impl/fusing/PrefixAndTail$PrefixAndTailLogic."<init>":(Lakka/stream/impl/fusing/PrefixAndTail;Lakka/stream/FlowShape;)V
      12: areturn

  public java.lang.String toString();
    Code:
       0: new           #61                 // class scala/StringContext
       3: dup
       4: getstatic     #66                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_2
       8: anewarray     #68                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #70                 // String PrefixAndTail(
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #72                 // String )
      20: aastore
      21: checkcast     #74                 // class "[Ljava/lang/Object;"
      24: invokevirtual #78                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      27: invokespecial #81                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      30: getstatic     #66                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: iconst_1
      34: anewarray     #83                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_0
      40: invokevirtual #85                 // Method n:()I
      43: invokestatic  #91                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      46: aastore
      47: invokevirtual #95                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      50: invokevirtual #99                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      53: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method shape:()Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.impl.fusing.PrefixAndTail(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field n:I
       5: aload_0
       6: invokespecial #104                // Method akka/stream/stage/GraphStage."<init>":()V
       9: aload_0
      10: getstatic     #109                // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      13: ldc           #111                // String PrefixAndTail.in
      15: invokevirtual #115                // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      18: putfield      #28                 // Field in:Lakka/stream/Inlet;
      21: aload_0
      22: getstatic     #120                // Field akka/stream/Outlet$.MODULE$:Lakka/stream/Outlet$;
      25: ldc           #122                // String PrefixAndTail.out
      27: invokevirtual #125                // Method akka/stream/Outlet$.apply:(Ljava/lang/String;)Lakka/stream/Outlet;
      30: putfield      #31                 // Field out:Lakka/stream/Outlet;
      33: aload_0
      34: new           #127                // class akka/stream/FlowShape
      37: dup
      38: aload_0
      39: invokevirtual #129                // Method in:()Lakka/stream/Inlet;
      42: aload_0
      43: invokevirtual #131                // Method out:()Lakka/stream/Outlet;
      46: invokespecial #134                // Method akka/stream/FlowShape."<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;)V
      49: putfield      #34                 // Field shape:Lakka/stream/FlowShape;
      52: return
}
