Compiled from "StreamLayout.scala"
public final class akka.stream.impl.StreamLayout$CompositeModule implements akka.stream.impl.StreamLayout$Module,scala.Product,scala.Serializable {
  private final scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module> subModules;

  private final akka.stream.Shape shape;

  private final scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort> downstreams;

  private final scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort> upstreams;

  private final akka.stream.impl.StreamLayout$MaterializedValueNode materializedValueComputation;

  private final akka.stream.Attributes attributes;

  private final scala.collection.immutable.Set<akka.stream.InPort> inPorts;

  private final scala.collection.immutable.Set<akka.stream.OutPort> outPorts;

  private volatile byte bitmap$0;

  private scala.collection.immutable.Set inPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #35                 // Field bitmap$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #40                 // Method akka/stream/impl/StreamLayout$Module$class.inPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #42                 // Field inPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #35                 // Field bitmap$0:B
      28: iconst_1
      29: ior
      30: i2b
      31: putfield      #35                 // Field bitmap$0:B
      34: getstatic     #48                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #42                 // Field inPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.InPort> inPorts();
    Code:
       0: aload_0
       1: getfield      #35                 // Field bitmap$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #54                 // Method inPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #42                 // Field inPorts:Lscala/collection/immutable/Set;
      22: areturn

  private scala.collection.immutable.Set outPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #35                 // Field bitmap$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #59                 // Method akka/stream/impl/StreamLayout$Module$class.outPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #61                 // Field outPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #35                 // Field bitmap$0:B
      28: iconst_2
      29: ior
      30: i2b
      31: putfield      #35                 // Field bitmap$0:B
      34: getstatic     #48                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #61                 // Field outPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.OutPort> outPorts();
    Code:
       0: aload_0
       1: getfield      #35                 // Field bitmap$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #63                 // Method outPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #61                 // Field outPorts:Lscala/collection/immutable/Set;
      22: areturn

  public int akka$stream$impl$StreamLayout$Module$$super$hashCode();
    Code:
       0: aload_0
       1: invokespecial #68                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public boolean akka$stream$impl$StreamLayout$Module$$super$equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #73                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean isRunnable();
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method akka/stream/impl/StreamLayout$Module$class.isRunnable:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isSink();
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method akka/stream/impl/StreamLayout$Module$class.isSink:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isSource();
    Code:
       0: aload_0
       1: invokestatic  #86                 // Method akka/stream/impl/StreamLayout$Module$class.isSource:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isFlow();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method akka/stream/impl/StreamLayout$Module$class.isFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isBidiFlow();
    Code:
       0: aload_0
       1: invokestatic  #92                 // Method akka/stream/impl/StreamLayout$Module$class.isBidiFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isAtomic();
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method akka/stream/impl/StreamLayout$Module$class.isAtomic:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isCopied();
    Code:
       0: aload_0
       1: invokestatic  #98                 // Method akka/stream/impl/StreamLayout$Module$class.isCopied:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isFused();
    Code:
       0: aload_0
       1: invokestatic  #101                // Method akka/stream/impl/StreamLayout$Module$class.isFused:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #106                // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       7: areturn

  public final <A, B, C> akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #116                // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
       9: areturn

  public final akka.stream.impl.StreamLayout$Module wire(akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // Method akka/stream/impl/StreamLayout$Module$class.wire:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       6: areturn

  public final akka.stream.impl.StreamLayout$Module transformMaterializedValue(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #127                // Method akka/stream/impl/StreamLayout$Module$class.transformMaterializedValue:(Lakka/stream/impl/StreamLayout$Module;Lscala/Function1;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method akka/stream/impl/StreamLayout$Module$class.compose:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public <A, B, C> akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #137                // Method akka/stream/impl/StreamLayout$Module$class.compose:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
       6: areturn

  public akka.stream.impl.StreamLayout$Module composeNoMat(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #140                // Method akka/stream/impl/StreamLayout$Module$class.composeNoMat:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public final boolean isSealed();
    Code:
       0: aload_0
       1: invokestatic  #143                // Method akka/stream/impl/StreamLayout$Module$class.isSealed:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #146                // Method akka/stream/impl/StreamLayout$Module$class.hashCode:(Lakka/stream/impl/StreamLayout$Module;)I
       4: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #149                // Method akka/stream/impl/StreamLayout$Module$class.equals:(Lakka/stream/impl/StreamLayout$Module;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module> subModules();
    Code:
       0: aload_0
       1: getfield      #152                // Field subModules:Lscala/collection/immutable/Set;
       4: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: getfield      #155                // Field shape:Lakka/stream/Shape;
       4: areturn

  public scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort> downstreams();
    Code:
       0: aload_0
       1: getfield      #158                // Field downstreams:Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort> upstreams();
    Code:
       0: aload_0
       1: getfield      #160                // Field upstreams:Lscala/collection/immutable/Map;
       4: areturn

  public akka.stream.impl.StreamLayout$MaterializedValueNode materializedValueComputation();
    Code:
       0: aload_0
       1: getfield      #163                // Field materializedValueComputation:Lakka/stream/impl/StreamLayout$MaterializedValueNode;
       4: areturn

  public akka.stream.Attributes attributes();
    Code:
       0: aload_0
       1: getfield      #166                // Field attributes:Lakka/stream/Attributes;
       4: areturn

  public akka.stream.impl.StreamLayout$Module replaceShape(akka.stream.Shape);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #170                // Method shape:()Lakka/stream/Shape;
       5: astore_2
       6: dup
       7: ifnonnull     18
      10: pop
      11: aload_2
      12: ifnull        25
      15: goto          29
      18: aload_2
      19: invokevirtual #73                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifeq          29
      25: aload_0
      26: goto          84
      29: aload_0
      30: invokevirtual #170                // Method shape:()Lakka/stream/Shape;
      33: aload_1
      34: invokevirtual #176                // Method akka/stream/Shape.requireSamePortsAs:(Lakka/stream/Shape;)V
      37: aload_1
      38: astore_3
      39: aload_0
      40: invokevirtual #179                // Method copy$default$1:()Lscala/collection/immutable/Set;
      43: astore        4
      45: aload_0
      46: invokevirtual #182                // Method copy$default$3:()Lscala/collection/immutable/Map;
      49: astore        5
      51: aload_0
      52: invokevirtual #185                // Method copy$default$4:()Lscala/collection/immutable/Map;
      55: astore        6
      57: aload_0
      58: invokevirtual #188                // Method copy$default$5:()Lakka/stream/impl/StreamLayout$MaterializedValueNode;
      61: astore        7
      63: aload_0
      64: invokevirtual #191                // Method copy$default$6:()Lakka/stream/Attributes;
      67: astore        8
      69: aload_0
      70: aload         4
      72: aload_3
      73: aload         5
      75: aload         6
      77: aload         7
      79: aload         8
      81: invokevirtual #195                // Method copy:(Lscala/collection/immutable/Set;Lakka/stream/Shape;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lakka/stream/impl/StreamLayout$MaterializedValueNode;Lakka/stream/Attributes;)Lakka/stream/impl/StreamLayout$CompositeModule;
      84: areturn

  public akka.stream.impl.StreamLayout$Module carbonCopy();
    Code:
       0: new           #206                // class akka/stream/impl/StreamLayout$CopiedModule
       3: dup
       4: aload_0
       5: invokevirtual #170                // Method shape:()Lakka/stream/Shape;
       8: invokevirtual #209                // Method akka/stream/Shape.deepCopy:()Lakka/stream/Shape;
      11: aload_0
      12: invokevirtual #211                // Method attributes:()Lakka/stream/Attributes;
      15: aload_0
      16: invokespecial #215                // Method akka/stream/impl/StreamLayout$CopiedModule."<init>":(Lakka/stream/Shape;Lakka/stream/Attributes;Lakka/stream/impl/StreamLayout$Module;)V
      19: areturn

  public akka.stream.impl.StreamLayout$Module withAttributes(akka.stream.Attributes);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokevirtual #179                // Method copy$default$1:()Lscala/collection/immutable/Set;
       6: astore_3
       7: aload_0
       8: invokevirtual #220                // Method copy$default$2:()Lakka/stream/Shape;
      11: astore        4
      13: aload_0
      14: invokevirtual #182                // Method copy$default$3:()Lscala/collection/immutable/Map;
      17: astore        5
      19: aload_0
      20: invokevirtual #185                // Method copy$default$4:()Lscala/collection/immutable/Map;
      23: astore        6
      25: aload_0
      26: invokevirtual #188                // Method copy$default$5:()Lakka/stream/impl/StreamLayout$MaterializedValueNode;
      29: astore        7
      31: aload_0
      32: aload_3
      33: aload         4
      35: aload         5
      37: aload         6
      39: aload         7
      41: aload_2
      42: invokevirtual #195                // Method copy:(Lscala/collection/immutable/Set;Lakka/stream/Shape;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lakka/stream/impl/StreamLayout$MaterializedValueNode;Lakka/stream/Attributes;)Lakka/stream/impl/StreamLayout$CompositeModule;
      45: areturn

  public java.lang.String toString();
    Code:
       0: new           #230                // class scala/collection/immutable/StringOps
       3: dup
       4: getstatic     #236                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokestatic  #242                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      11: istore_1
      12: aload_0
      13: invokevirtual #211                // Method attributes:()Lakka/stream/Attributes;
      16: ldc           #244                // String unnamed
      18: invokevirtual #250                // Method akka/stream/Attributes.nameOrDefault:(Ljava/lang/String;)Ljava/lang/String;
      21: astore_2
      22: aload_0
      23: invokevirtual #252                // Method subModules:()Lscala/collection/immutable/Set;
      26: invokeinterface #256,  1          // InterfaceMethod scala/collection/immutable/Set.iterator:()Lscala/collection/Iterator;
      31: new           #258                // class akka/stream/impl/StreamLayout$CompositeModule$$anonfun$toString$1
      34: dup
      35: aload_0
      36: invokespecial #261                // Method akka/stream/impl/StreamLayout$CompositeModule$$anonfun$toString$1."<init>":(Lakka/stream/impl/StreamLayout$CompositeModule;)V
      39: invokeinterface #267,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      44: ldc_w         #269                // String \n
      47: invokeinterface #272,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
      52: astore_3
      53: aload_0
      54: invokevirtual #274                // Method downstreams:()Lscala/collection/immutable/Map;
      57: invokeinterface #277,  1          // InterfaceMethod scala/collection/immutable/Map.iterator:()Lscala/collection/Iterator;
      62: new           #279                // class akka/stream/impl/StreamLayout$CompositeModule$$anonfun$toString$2
      65: dup
      66: aload_0
      67: invokespecial #280                // Method akka/stream/impl/StreamLayout$CompositeModule$$anonfun$toString$2."<init>":(Lakka/stream/impl/StreamLayout$CompositeModule;)V
      70: invokeinterface #267,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      75: ldc_w         #282                // String
      78: invokeinterface #272,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
      83: astore        4
      85: aload_0
      86: invokevirtual #284                // Method upstreams:()Lscala/collection/immutable/Map;
      89: invokeinterface #277,  1          // InterfaceMethod scala/collection/immutable/Map.iterator:()Lscala/collection/Iterator;
      94: new           #286                // class akka/stream/impl/StreamLayout$CompositeModule$$anonfun$toString$3
      97: dup
      98: aload_0
      99: invokespecial #287                // Method akka/stream/impl/StreamLayout$CompositeModule$$anonfun$toString$3."<init>":(Lakka/stream/impl/StreamLayout$CompositeModule;)V
     102: invokeinterface #267,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
     107: ldc_w         #282                // String
     110: invokeinterface #272,  2          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
     115: astore        5
     117: aload_0
     118: invokevirtual #289                // Method materializedValueComputation:()Lakka/stream/impl/StreamLayout$MaterializedValueNode;
     121: astore        6
     123: new           #230                // class scala/collection/immutable/StringOps
     126: dup
     127: ldc_w         #291                // String CompositeModule [%08x]\n         |  Name: %s\n         |  Modules:\n         |    %s\n         |  Downstreams: %s\n         |  Upstreams: %s\n         |  MatValue: %s
     130: invokespecial #294                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     133: getstatic     #236                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     136: bipush        6
     138: anewarray     #4                  // class java/lang/Object
     141: dup
     142: iconst_0
     143: iload_1
     144: invokestatic  #300                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     147: aastore
     148: dup
     149: iconst_1
     150: aload_2
     151: aastore
     152: dup
     153: iconst_2
     154: aload_3
     155: aastore
     156: dup
     157: iconst_3
     158: aload         4
     160: aastore
     161: dup
     162: iconst_4
     163: aload         5
     165: aastore
     166: dup
     167: iconst_5
     168: aload         6
     170: aastore
     171: invokevirtual #304                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     174: invokevirtual #308                // Method scala/collection/immutable/StringOps.format:(Lscala/collection/Seq;)Ljava/lang/String;
     177: invokevirtual #311                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     180: invokespecial #294                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     183: invokevirtual #314                // Method scala/collection/immutable/StringOps.stripMargin:()Ljava/lang/String;
     186: areturn

  public akka.stream.impl.StreamLayout$CompositeModule copy(scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module>, akka.stream.Shape, scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort>, scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort>, akka.stream.impl.StreamLayout$MaterializedValueNode, akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/impl/StreamLayout$CompositeModule
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokespecial #324                // Method "<init>":(Lscala/collection/immutable/Set;Lakka/stream/Shape;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lakka/stream/impl/StreamLayout$MaterializedValueNode;Lakka/stream/Attributes;)V
      16: areturn

  public scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #252                // Method subModules:()Lscala/collection/immutable/Set;
       4: areturn

  public akka.stream.Shape copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #170                // Method shape:()Lakka/stream/Shape;
       4: areturn

  public scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #274                // Method downstreams:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #284                // Method upstreams:()Lscala/collection/immutable/Map;
       4: areturn

  public akka.stream.impl.StreamLayout$MaterializedValueNode copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #289                // Method materializedValueComputation:()Lakka/stream/impl/StreamLayout$MaterializedValueNode;
       4: areturn

  public akka.stream.Attributes copy$default$6();
    Code:
       0: aload_0
       1: invokevirtual #211                // Method attributes:()Lakka/stream/Attributes;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #327                // String CompositeModule
       3: areturn

  public int productArity();
    Code:
       0: bipush        6
       2: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 5
                     0: 90
                     1: 83
                     2: 76
                     3: 69
                     4: 62
                     5: 55
               default: 40
          }
      40: new           #332                // class java/lang/IndexOutOfBoundsException
      43: dup
      44: iload_1
      45: invokestatic  #300                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokevirtual #334                // Method java/lang/Object.toString:()Ljava/lang/String;
      51: invokespecial #335                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: invokevirtual #211                // Method attributes:()Lakka/stream/Attributes;
      59: goto          94
      62: aload_0
      63: invokevirtual #289                // Method materializedValueComputation:()Lakka/stream/impl/StreamLayout$MaterializedValueNode;
      66: goto          94
      69: aload_0
      70: invokevirtual #284                // Method upstreams:()Lscala/collection/immutable/Map;
      73: goto          94
      76: aload_0
      77: invokevirtual #274                // Method downstreams:()Lscala/collection/immutable/Map;
      80: goto          94
      83: aload_0
      84: invokevirtual #170                // Method shape:()Lakka/stream/Shape;
      87: goto          94
      90: aload_0
      91: invokevirtual #252                // Method subModules:()Lscala/collection/immutable/Set;
      94: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #341                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #345                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/StreamLayout$CompositeModule
       4: ireturn

  public akka.stream.impl.StreamLayout$CompositeModule(scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module>, akka.stream.Shape, scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort>, scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort>, akka.stream.impl.StreamLayout$MaterializedValueNode, akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #152                // Field subModules:Lscala/collection/immutable/Set;
       5: aload_0
       6: aload_2
       7: putfield      #155                // Field shape:Lakka/stream/Shape;
      10: aload_0
      11: aload_3
      12: putfield      #158                // Field downstreams:Lscala/collection/immutable/Map;
      15: aload_0
      16: aload         4
      18: putfield      #160                // Field upstreams:Lscala/collection/immutable/Map;
      21: aload_0
      22: aload         5
      24: putfield      #163                // Field materializedValueComputation:Lakka/stream/impl/StreamLayout$MaterializedValueNode;
      27: aload_0
      28: aload         6
      30: putfield      #166                // Field attributes:Lakka/stream/Attributes;
      33: aload_0
      34: invokespecial #349                // Method java/lang/Object."<init>":()V
      37: aload_0
      38: invokestatic  #353                // Method akka/stream/impl/StreamLayout$Module$class.$init$:(Lakka/stream/impl/StreamLayout$Module;)V
      41: aload_0
      42: invokestatic  #358                // Method scala/Product$class.$init$:(Lscala/Product;)V
      45: return
}
