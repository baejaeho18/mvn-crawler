Compiled from "StreamLayout.scala"
public final class akka.stream.impl.VirtualProcessor$WrappedSubscription$Buffering implements akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$SubscriptionState, scala.Product, scala.Serializable {
  private final long demand;

  private final akka.stream.impl.VirtualProcessor$WrappedSubscription$ $outer;

  public long demand();
    Code:
       0: aload_0
       1: getfield      #19                 // Field demand:J
       4: lreturn

  public akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$Buffering copy(long);
    Code:
       0: new           #2                  // class akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering
       3: dup
       4: aload_0
       5: getfield      #25                 // Field $outer:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;
       8: lload_1
       9: invokespecial #29                 // Method "<init>":(Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;J)V
      12: areturn

  public long copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method demand:()J
       4: lreturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #36                 // String Buffering
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #42                 // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #48                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #54                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #32                 // Method demand:()J
      39: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      42: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #68                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #72                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #77                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #32                 // Method demand:()J
       8: invokestatic  #83                 // Method scala/runtime/Statics.longHash:(J)I
      11: invokestatic  #87                 // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: iconst_1
      17: invokestatic  #90                 // Method scala/runtime/Statics.finalizeHash:(II)I
      20: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #68                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #94                 // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     56
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering
      11: ifeq          23
      14: iconst_1
      15: ifeq          23
      18: iconst_1
      19: istore_3
      20: goto          25
      23: iconst_0
      24: istore_3
      25: iload_3
      26: ifeq          60
      29: aload_1
      30: checkcast     #2                  // class akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering
      33: astore        4
      35: aload_0
      36: invokevirtual #32                 // Method demand:()J
      39: aload         4
      41: invokevirtual #32                 // Method demand:()J
      44: lcmp
      45: ifne          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public akka.stream.impl.VirtualProcessor$WrappedSubscription$Buffering(akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$, long);
    Code:
       0: aload_0
       1: lload_2
       2: putfield      #19                 // Field demand:J
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #25                 // Field $outer:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;
      16: aload_0
      17: invokespecial #98                 // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #104                // Method scala/Product$class.$init$:(Lscala/Product;)V
      24: return
}
