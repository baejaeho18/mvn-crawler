Compiled from "ActorMaterializerImpl.scala"
public class akka.stream.impl.StreamSupervisor implements akka.actor.Actor {
  private final java.util.concurrent.atomic.AtomicBoolean haveShutDown;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static java.lang.String nextName();
    Code:
       0: getstatic     #18                 // Field akka/stream/impl/StreamSupervisor$.MODULE$:Lakka/stream/impl/StreamSupervisor$;
       3: invokevirtual #20                 // Method akka/stream/impl/StreamSupervisor$.nextName:()Ljava/lang/String;
       6: areturn

  public static akka.actor.Props props(akka.stream.ActorMaterializerSettings, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: getstatic     #18                 // Field akka/stream/impl/StreamSupervisor$.MODULE$:Lakka/stream/impl/StreamSupervisor$;
       3: aload_0
       4: aload_1
       5: invokevirtual #24                 // Method akka/stream/impl/StreamSupervisor$.props:(Lakka/stream/ActorMaterializerSettings;Ljava/util/concurrent/atomic/AtomicBoolean;)Lakka/actor/Props;
       8: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #33                 // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #38                 // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: getstatic     #103                // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #106                // Method akka/actor/SupervisorStrategy$.stoppingStrategy:()Lakka/actor/SupervisorStrategy;
       6: areturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #109                // class akka/stream/impl/StreamSupervisor$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #113                // Method akka/stream/impl/StreamSupervisor$$anonfun$receive$1."<init>":(Lakka/stream/impl/StreamSupervisor;)V
       8: areturn

  public void postStop();
    Code:
       0: aload_0
       1: getfield      #116                // Field haveShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #122                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public akka.stream.impl.StreamSupervisor(akka.stream.ActorMaterializerSettings, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #116                // Field haveShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       5: aload_0
       6: invokespecial #125                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #128                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      13: return
}
