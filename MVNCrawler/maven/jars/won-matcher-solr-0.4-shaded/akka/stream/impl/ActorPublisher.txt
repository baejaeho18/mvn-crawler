Compiled from "ActorPublisher.scala"
public class akka.stream.impl.ActorPublisher<T> implements org.reactivestreams.Publisher<T> {
  private final akka.actor.ActorRef impl;

  private final java.util.concurrent.atomic.AtomicReference<scala.collection.immutable.Seq<org.reactivestreams.Subscriber<? super T>>> pendingSubscribers;

  private final java.lang.Object wakeUpMsg;

  private volatile scala.Option<java.lang.Throwable> shutdownReason;

  public static <T> akka.stream.impl.ActorPublisher<T> apply(akka.actor.ActorRef);
    Code:
       0: getstatic     #19                 // Field akka/stream/impl/ActorPublisher$.MODULE$:Lakka/stream/impl/ActorPublisher$;
       3: aload_0
       4: invokevirtual #21                 // Method akka/stream/impl/ActorPublisher$.apply:(Lakka/actor/ActorRef;)Lakka/stream/impl/ActorPublisher;
       7: areturn

  public static scala.Some<java.lang.Throwable> SomeNormalShutdownReason();
    Code:
       0: getstatic     #19                 // Field akka/stream/impl/ActorPublisher$.MODULE$:Lakka/stream/impl/ActorPublisher$;
       3: invokevirtual #25                 // Method akka/stream/impl/ActorPublisher$.SomeNormalShutdownReason:()Lscala/Some;
       6: areturn

  public static java.lang.Throwable NormalShutdownReason();
    Code:
       0: getstatic     #19                 // Field akka/stream/impl/ActorPublisher$.MODULE$:Lakka/stream/impl/ActorPublisher$;
       3: invokevirtual #29                 // Method akka/stream/impl/ActorPublisher$.NormalShutdownReason:()Ljava/lang/Throwable;
       6: areturn

  public static java.lang.String NormalShutdownReasonMessage();
    Code:
       0: getstatic     #19                 // Field akka/stream/impl/ActorPublisher$.MODULE$:Lakka/stream/impl/ActorPublisher$;
       3: invokevirtual #33                 // Method akka/stream/impl/ActorPublisher$.NormalShutdownReasonMessage:()Ljava/lang/String;
       6: areturn

  public akka.actor.ActorRef impl();
    Code:
       0: aload_0
       1: getfield      #46                 // Field impl:Lakka/actor/ActorRef;
       4: areturn

  private java.util.concurrent.atomic.AtomicReference<scala.collection.immutable.Seq<org.reactivestreams.Subscriber<? super T>>> pendingSubscribers();
    Code:
       0: aload_0
       1: getfield      #51                 // Field pendingSubscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  public java.lang.Object wakeUpMsg();
    Code:
       0: aload_0
       1: getfield      #54                 // Field wakeUpMsg:Ljava/lang/Object;
       4: areturn

  public void subscribe(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: getstatic     #61                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #64                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullSubscriber:(Lorg/reactivestreams/Subscriber;)V
       7: aload_0
       8: aload_1
       9: invokespecial #67                 // Method doSubscribe$1:(Lorg/reactivestreams/Subscriber;)V
      12: return

  public scala.collection.immutable.Seq<org.reactivestreams.Subscriber<? super T>> takePendingSubscribers();
    Code:
       0: aload_0
       1: invokespecial #73                 // Method pendingSubscribers:()Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #78                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       7: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #86                 // class scala/collection/immutable/Seq
      13: astore_1
      14: aload_1
      15: ifnonnull     24
      18: getstatic     #78                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      21: goto          33
      24: aload_1
      25: invokeinterface #89,  1           // InterfaceMethod scala/collection/immutable/Seq.reverse:()Ljava/lang/Object;
      30: checkcast     #86                 // class scala/collection/immutable/Seq
      33: areturn

  public void shutdown(scala.Option<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #96                 // Method shutdownReason_$eq:(Lscala/Option;)V
       5: aload_0
       6: invokespecial #73                 // Method pendingSubscribers:()Ljava/util/concurrent/atomic/AtomicReference;
       9: aconst_null
      10: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #86                 // class scala/collection/immutable/Seq
      16: astore_2
      17: aload_2
      18: ifnonnull     28
      21: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      24: astore_3
      25: goto          46
      28: aload_2
      29: new           #104                // class akka/stream/impl/ActorPublisher$$anonfun$shutdown$1
      32: dup
      33: aload_0
      34: invokespecial #108                // Method akka/stream/impl/ActorPublisher$$anonfun$shutdown$1."<init>":(Lakka/stream/impl/ActorPublisher;)V
      37: invokeinterface #112,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
      42: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      45: astore_3
      46: return

  private scala.Option<java.lang.Throwable> shutdownReason();
    Code:
       0: aload_0
       1: getfield      #116                // Field shutdownReason:Lscala/Option;
       4: areturn

  private void shutdownReason_$eq(scala.Option<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field shutdownReason:Lscala/Option;
       5: return

  public void akka$stream$impl$ActorPublisher$$reportSubscribeFailure(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: iconst_0
       1: istore        5
       3: aconst_null
       4: astore        6
       6: aload_0
       7: invokespecial #120                // Method shutdownReason:()Lscala/Option;
      10: astore        7
      12: aload         7
      14: instanceof    #122                // class scala/Some
      17: ifeq          56
      20: iconst_1
      21: istore        5
      23: aload         7
      25: checkcast     #122                // class scala/Some
      28: astore        6
      30: aload         6
      32: invokevirtual #125                // Method scala/Some.x:()Ljava/lang/Object;
      35: checkcast     #127                // class java/lang/Throwable
      38: astore        8
      40: aload         8
      42: instanceof    #129                // class akka/stream/impl/ReactiveStreamsCompliance$SpecViolation
      45: ifeq          56
      48: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      51: astore        9
      53: goto          159
      56: iload         5
      58: ifeq          98
      61: aload         6
      63: invokevirtual #125                // Method scala/Some.x:()Ljava/lang/Object;
      66: checkcast     #127                // class java/lang/Throwable
      69: astore        10
      71: getstatic     #61                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      74: aload_1
      75: getstatic     #134                // Field akka/stream/impl/CancelledSubscription$.MODULE$:Lakka/stream/impl/CancelledSubscription$;
      78: invokevirtual #138                // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnSubscribe:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Subscription;)V
      81: getstatic     #61                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      84: aload_1
      85: aload         10
      87: invokevirtual #142                // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnError:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      90: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      93: astore        9
      95: goto          159
      98: getstatic     #147                // Field scala/None$.MODULE$:Lscala/None$;
     101: aload         7
     103: invokevirtual #151                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     106: ifeq          134
     109: getstatic     #61                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
     112: aload_1
     113: getstatic     #134                // Field akka/stream/impl/CancelledSubscription$.MODULE$:Lakka/stream/impl/CancelledSubscription$;
     116: invokevirtual #138                // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnSubscribe:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Subscription;)V
     119: getstatic     #61                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
     122: aload_1
     123: invokevirtual #154                // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnComplete:(Lorg/reactivestreams/Subscriber;)V
     126: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     129: astore        9
     131: goto          159
     134: new           #156                // class scala/MatchError
     137: dup
     138: aload         7
     140: invokespecial #159                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     143: athrow
     144: astore_2
     145: aload_2
     146: astore_3
     147: aload_3
     148: instanceof    #129                // class akka/stream/impl/ReactiveStreamsCompliance$SpecViolation
     151: ifeq          160
     154: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     157: astore        4
     159: return
     160: aload_2
     161: athrow
    Exception table:
       from    to  target type
           0   144   144   any

  private final void doSubscribe$1(org.reactivestreams.Subscriber);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method pendingSubscribers:()Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #168                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #86                 // class scala/collection/immutable/Seq
      10: astore_3
      11: aload_3
      12: ifnonnull     26
      15: aload_0
      16: aload_1
      17: invokevirtual #170                // Method akka$stream$impl$ActorPublisher$$reportSubscribeFailure:(Lorg/reactivestreams/Subscriber;)V
      20: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      23: goto          97
      26: aload_0
      27: invokespecial #73                 // Method pendingSubscribers:()Ljava/util/concurrent/atomic/AtomicReference;
      30: aload_3
      31: aload_1
      32: astore        4
      34: aload_3
      35: aload         4
      37: getstatic     #175                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
      40: invokevirtual #179                // Method scala/collection/immutable/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      43: invokeinterface #183,  3          // InterfaceMethod scala/collection/immutable/Seq.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      48: invokevirtual #187                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifeq          0
      54: getstatic     #192                // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
      57: aload_0
      58: invokevirtual #194                // Method impl:()Lakka/actor/ActorRef;
      61: invokevirtual #198                // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
      64: astore        5
      66: aload_0
      67: invokevirtual #200                // Method wakeUpMsg:()Ljava/lang/Object;
      70: astore        6
      72: aload         5
      74: aload         6
      76: invokeinterface #206,  2          // InterfaceMethod akka/actor/ScalaActorRef.$bang$default$2:(Ljava/lang/Object;)Lakka/actor/ActorRef;
      81: astore        7
      83: aload         5
      85: aload         6
      87: aload         7
      89: invokeinterface #210,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
      94: getstatic     #102                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      97: pop
      98: return

  public akka.stream.impl.ActorPublisher(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field impl:Lakka/actor/ActorRef;
       5: aload_0
       6: invokespecial #220                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #80                 // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: getstatic     #78                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      17: invokespecial #221                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      20: putfield      #51                 // Field pendingSubscribers:Ljava/util/concurrent/atomic/AtomicReference;
      23: aload_0
      24: getstatic     #226                // Field akka/stream/impl/SubscribePending$.MODULE$:Lakka/stream/impl/SubscribePending$;
      27: putfield      #54                 // Field wakeUpMsg:Ljava/lang/Object;
      30: aload_0
      31: getstatic     #147                // Field scala/None$.MODULE$:Lscala/None$;
      34: putfield      #116                // Field shutdownReason:Lscala/Option;
      37: return
}
