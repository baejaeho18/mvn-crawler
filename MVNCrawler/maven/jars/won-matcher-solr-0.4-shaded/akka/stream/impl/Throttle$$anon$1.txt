Compiled from "Throttle.scala"
public final class akka.stream.impl.Throttle$$anon$1 extends akka.stream.stage.TimerGraphStageLogic {
  private final akka.util.NanoTimeTokenBucket akka$stream$impl$Throttle$$anon$$tokenBucket;

  private boolean akka$stream$impl$Throttle$$anon$$willStop;

  private T akka$stream$impl$Throttle$$anon$$currentElement;

  private final boolean akka$stream$impl$Throttle$$anon$$enforcing;

  private final akka.stream.impl.Throttle $outer;

  public akka.util.NanoTimeTokenBucket akka$stream$impl$Throttle$$anon$$tokenBucket();
    Code:
       0: aload_0
       1: getfield      #23                 // Field akka$stream$impl$Throttle$$anon$$tokenBucket:Lakka/util/NanoTimeTokenBucket;
       4: areturn

  private boolean akka$stream$impl$Throttle$$anon$$willStop();
    Code:
       0: aload_0
       1: getfield      #28                 // Field akka$stream$impl$Throttle$$anon$$willStop:Z
       4: ireturn

  public void akka$stream$impl$Throttle$$anon$$willStop_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field akka$stream$impl$Throttle$$anon$$willStop:Z
       5: return

  private T akka$stream$impl$Throttle$$anon$$currentElement();
    Code:
       0: aload_0
       1: getfield      #34                 // Field akka$stream$impl$Throttle$$anon$$currentElement:Ljava/lang/Object;
       4: areturn

  public void akka$stream$impl$Throttle$$anon$$currentElement_$eq(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field akka$stream$impl$Throttle$$anon$$currentElement:Ljava/lang/Object;
       5: return

  public boolean akka$stream$impl$Throttle$$anon$$enforcing();
    Code:
       0: aload_0
       1: getfield      #38                 // Field akka$stream$impl$Throttle$$anon$$enforcing:Z
       4: ireturn

  public void preStart();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method akka$stream$impl$Throttle$$anon$$tokenBucket:()Lakka/util/NanoTimeTokenBucket;
       4: invokevirtual #47                 // Method akka/util/NanoTimeTokenBucket.init:()V
       7: return

  public void onTimer(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #50                 // Field $outer:Lakka/stream/impl/Throttle;
       5: invokevirtual #54                 // Method akka/stream/impl/Throttle.out:()Lakka/stream/Outlet;
       8: aload_0
       9: invokespecial #56                 // Method akka$stream$impl$Throttle$$anon$$currentElement:()Ljava/lang/Object;
      12: invokevirtual #60                 // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      15: aload_0
      16: aconst_null
      17: invokevirtual #62                 // Method akka$stream$impl$Throttle$$anon$$currentElement_$eq:(Ljava/lang/Object;)V
      20: aload_0
      21: invokespecial #64                 // Method akka$stream$impl$Throttle$$anon$$willStop:()Z
      24: ifeq          31
      27: aload_0
      28: invokevirtual #67                 // Method completeStage:()V
      31: return

  public akka.stream.impl.Throttle akka$stream$impl$Throttle$$anon$$$outer();
    Code:
       0: aload_0
       1: getfield      #50                 // Field $outer:Lakka/stream/impl/Throttle;
       4: areturn

  public akka.stream.impl.Throttle$$anon$1(akka.stream.impl.Throttle<T>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #50                 // Field $outer:Lakka/stream/impl/Throttle;
      11: aload_0
      12: aload_1
      13: invokevirtual #76                 // Method akka/stream/impl/Throttle.shape:()Lakka/stream/FlowShape;
      16: invokespecial #79                 // Method akka/stream/stage/TimerGraphStageLogic."<init>":(Lakka/stream/Shape;)V
      19: aload_0
      20: new           #44                 // class akka/util/NanoTimeTokenBucket
      23: dup
      24: aload_1
      25: invokevirtual #83                 // Method akka/stream/impl/Throttle.maximumBurst:()I
      28: i2l
      29: aload_1
      30: invokevirtual #87                 // Method akka/stream/impl/Throttle.akka$stream$impl$Throttle$$nanosBetweenTokens:()J
      33: invokespecial #90                 // Method akka/util/NanoTimeTokenBucket."<init>":(JJ)V
      36: putfield      #23                 // Field akka$stream$impl$Throttle$$anon$$tokenBucket:Lakka/util/NanoTimeTokenBucket;
      39: aload_0
      40: iconst_0
      41: putfield      #28                 // Field akka$stream$impl$Throttle$$anon$$willStop:Z
      44: aload_0
      45: aload_1
      46: invokevirtual #94                 // Method akka/stream/impl/Throttle.mode:()Lakka/stream/ThrottleMode;
      49: astore_2
      50: getstatic     #100                // Field akka/stream/ThrottleMode$Enforcing$.MODULE$:Lakka/stream/ThrottleMode$Enforcing$;
      53: aload_2
      54: invokevirtual #106                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      57: ifeq          65
      60: iconst_1
      61: istore_3
      62: goto          77
      65: getstatic     #111                // Field akka/stream/ThrottleMode$Shaping$.MODULE$:Lakka/stream/ThrottleMode$Shaping$;
      68: aload_2
      69: invokevirtual #106                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      72: ifeq          115
      75: iconst_0
      76: istore_3
      77: iload_3
      78: putfield      #38                 // Field akka$stream$impl$Throttle$$anon$$enforcing:Z
      81: new           #113                // class akka/stream/impl/Throttle$$anon$1$$anon$2
      84: dup
      85: aload_0
      86: invokespecial #116                // Method akka/stream/impl/Throttle$$anon$1$$anon$2."<init>":(Lakka/stream/impl/Throttle$$anon$1;)V
      89: astore        4
      91: aload_0
      92: aload_1
      93: invokevirtual #120                // Method akka/stream/impl/Throttle.in:()Lakka/stream/Inlet;
      96: aload         4
      98: invokevirtual #124                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
     101: aload_0
     102: aload_1
     103: invokevirtual #54                 // Method akka/stream/impl/Throttle.out:()Lakka/stream/Outlet;
     106: aload         4
     108: checkcast     #126                // class akka/stream/stage/OutHandler
     111: invokevirtual #129                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
     114: return
     115: new           #131                // class scala/MatchError
     118: dup
     119: aload_2
     120: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     123: athrow
}
