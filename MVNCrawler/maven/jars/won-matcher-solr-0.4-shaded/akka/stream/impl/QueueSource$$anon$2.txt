Compiled from "Sources.scala"
public final class akka.stream.impl.QueueSource$$anon$2 implements akka.stream.scaladsl.SourceQueueWithComplete<T> {
  private final scala.concurrent.Promise completion$1;

  private final akka.stream.stage.GraphStageLogic stageLogic$1;

  public scala.concurrent.Future<akka.Done> watchCompletion();
    Code:
       0: aload_0
       1: getfield      #21                 // Field completion$1:Lscala/concurrent/Promise;
       4: invokeinterface #26,  1           // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
       9: areturn

  public scala.concurrent.Future<akka.stream.QueueOfferResult> offer(T);
    Code:
       0: getstatic     #36                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #40                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore_2
       7: aload_0
       8: getfield      #42                 // Field stageLogic$1:Lakka/stream/stage/GraphStageLogic;
      11: checkcast     #44                 // class akka/stream/stage/CallbackWrapper
      14: new           #46                 // class akka/stream/impl/QueueSource$Offer
      17: dup
      18: aload_1
      19: aload_2
      20: invokespecial #50                 // Method akka/stream/impl/QueueSource$Offer."<init>":(Ljava/lang/Object;Lscala/concurrent/Promise;)V
      23: invokeinterface #54,  2           // InterfaceMethod akka/stream/stage/CallbackWrapper.invoke:(Ljava/lang/Object;)V
      28: aload_2
      29: invokeinterface #26,  1           // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      34: areturn

  public void complete();
    Code:
       0: aload_0
       1: getfield      #42                 // Field stageLogic$1:Lakka/stream/stage/GraphStageLogic;
       4: checkcast     #44                 // class akka/stream/stage/CallbackWrapper
       7: getstatic     #64                 // Field akka/stream/impl/QueueSource$Completion$.MODULE$:Lakka/stream/impl/QueueSource$Completion$;
      10: invokeinterface #54,  2           // InterfaceMethod akka/stream/stage/CallbackWrapper.invoke:(Ljava/lang/Object;)V
      15: return

  public void fail(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #42                 // Field stageLogic$1:Lakka/stream/stage/GraphStageLogic;
       4: checkcast     #44                 // class akka/stream/stage/CallbackWrapper
       7: new           #68                 // class akka/stream/impl/QueueSource$Failure
      10: dup
      11: aload_1
      12: invokespecial #70                 // Method akka/stream/impl/QueueSource$Failure."<init>":(Ljava/lang/Throwable;)V
      15: invokeinterface #54,  2           // InterfaceMethod akka/stream/stage/CallbackWrapper.invoke:(Ljava/lang/Object;)V
      20: return

  public akka.stream.impl.QueueSource$$anon$2(akka.stream.impl.QueueSource<T>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #21                 // Field completion$1:Lscala/concurrent/Promise;
       5: aload_0
       6: aload_3
       7: putfield      #42                 // Field stageLogic$1:Lakka/stream/stage/GraphStageLogic;
      10: aload_0
      11: invokespecial #75                 // Method java/lang/Object."<init>":()V
      14: return
}
