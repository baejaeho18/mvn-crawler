Compiled from "Buffers.scala"
public abstract class akka.stream.impl.FixedSizeBuffer$FixedSizeBuffer<T> implements akka.stream.impl.Buffer<T> {
  private final int capacity;

  private final java.lang.Object[] buffer;

  private long readIdx;

  private long writeIdx;

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #18                 // Field capacity:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class scala/StringContext
       3: dup
       4: getstatic     #30                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_5
       8: anewarray     #32                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #34                 // String Buffer(
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #36                 // String ,
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #36                 // String ,
      25: aastore
      26: dup
      27: iconst_3
      28: ldc           #38                 // String )(
      30: aastore
      31: dup
      32: iconst_4
      33: ldc           #40                 // String )
      35: aastore
      36: checkcast     #41                 // class "[Ljava/lang/Object;"
      39: invokevirtual #45                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      42: invokespecial #49                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      45: getstatic     #30                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      48: iconst_4
      49: anewarray     #5                  // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_0
      55: invokevirtual #51                 // Method capacity:()I
      58: invokestatic  #57                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      61: aastore
      62: dup
      63: iconst_1
      64: aload_0
      65: invokevirtual #60                 // Method readIdx:()J
      68: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      71: aastore
      72: dup
      73: iconst_2
      74: aload_0
      75: invokevirtual #66                 // Method writeIdx:()J
      78: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      81: aastore
      82: dup
      83: iconst_3
      84: new           #68                 // class scala/runtime/RichLong
      87: dup
      88: getstatic     #30                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      91: aload_0
      92: invokevirtual #60                 // Method readIdx:()J
      95: invokevirtual #72                 // Method scala/Predef$.longWrapper:(J)J
      98: invokespecial #75                 // Method scala/runtime/RichLong."<init>":(J)V
     101: aload_0
     102: invokevirtual #66                 // Method writeIdx:()J
     105: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     108: invokevirtual #79                 // Method scala/runtime/RichLong.until:(Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
     111: new           #81                 // class akka/stream/impl/FixedSizeBuffer$FixedSizeBuffer$$anonfun$toString$1
     114: dup
     115: aload_0
     116: invokespecial #84                 // Method akka/stream/impl/FixedSizeBuffer$FixedSizeBuffer$$anonfun$toString$1."<init>":(Lakka/stream/impl/FixedSizeBuffer$FixedSizeBuffer;)V
     119: getstatic     #89                 // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     122: invokevirtual #93                 // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     125: invokevirtual #99                 // Method scala/collection/immutable/NumericRange$Exclusive.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     128: checkcast     #101                // class scala/collection/TraversableOnce
     131: ldc           #36                 // String ,
     133: invokeinterface #105,  2          // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;)Ljava/lang/String;
     138: aastore
     139: invokevirtual #109                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     142: invokevirtual #113                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     145: areturn

  private java.lang.Object[] buffer();
    Code:
       0: aload_0
       1: getfield      #116                // Field buffer:[Ljava/lang/Object;
       4: areturn

  public long readIdx();
    Code:
       0: aload_0
       1: getfield      #118                // Field readIdx:J
       4: lreturn

  public void readIdx_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #118                // Field readIdx:J
       5: return

  public long writeIdx();
    Code:
       0: aload_0
       1: getfield      #122                // Field writeIdx:J
       4: lreturn

  public void writeIdx_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #122                // Field writeIdx:J
       5: return

  public int used();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method writeIdx:()J
       4: aload_0
       5: invokevirtual #60                 // Method readIdx:()J
       8: lsub
       9: l2i
      10: ireturn

  public boolean isFull();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method used:()I
       4: aload_0
       5: invokevirtual #51                 // Method capacity:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method used:()I
       4: iconst_0
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method used:()I
       4: iconst_0
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void enqueue(T);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #66                 // Method writeIdx:()J
       5: aload_1
       6: iconst_0
       7: invokespecial #136                // Method put:(JLjava/lang/Object;Z)V
      10: aload_0
      11: aload_0
      12: invokevirtual #66                 // Method writeIdx:()J
      15: lconst_1
      16: ladd
      17: invokevirtual #138                // Method writeIdx_$eq:(J)V
      20: return

  public abstract int toOffset(long, boolean);

  private void put(long, T, boolean);
    Code:
       0: aload_0
       1: invokespecial #144                // Method buffer:()[Ljava/lang/Object;
       4: aload_0
       5: lload_1
       6: iload         4
       8: invokevirtual #146                // Method toOffset:(JZ)I
      11: aload_3
      12: aastore
      13: return

  public T akka$stream$impl$FixedSizeBuffer$FixedSizeBuffer$$get(long);
    Code:
       0: aload_0
       1: invokespecial #144                // Method buffer:()[Ljava/lang/Object;
       4: aload_0
       5: lload_1
       6: iconst_0
       7: invokevirtual #146                // Method toOffset:(JZ)I
      10: aaload
      11: areturn

  public T peek();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #60                 // Method readIdx:()J
       5: invokevirtual #155                // Method akka$stream$impl$FixedSizeBuffer$FixedSizeBuffer$$get:(J)Ljava/lang/Object;
       8: areturn

  public T dequeue();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #60                 // Method readIdx:()J
       5: invokevirtual #155                // Method akka$stream$impl$FixedSizeBuffer$FixedSizeBuffer$$get:(J)Ljava/lang/Object;
       8: astore_1
       9: aload_0
      10: invokevirtual #160                // Method dropHead:()V
      13: aload_1
      14: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #144                // Method buffer:()[Ljava/lang/Object;
       4: aconst_null
       5: invokestatic  #168                // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
       8: aload_0
       9: lconst_0
      10: invokevirtual #170                // Method readIdx_$eq:(J)V
      13: aload_0
      14: lconst_0
      15: invokevirtual #138                // Method writeIdx_$eq:(J)V
      18: return

  public void dropHead();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #60                 // Method readIdx:()J
       5: aconst_null
       6: iconst_1
       7: invokespecial #136                // Method put:(JLjava/lang/Object;Z)V
      10: aload_0
      11: aload_0
      12: invokevirtual #60                 // Method readIdx:()J
      15: lconst_1
      16: ladd
      17: invokevirtual #170                // Method readIdx_$eq:(J)V
      20: return

  public void dropTail();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #66                 // Method writeIdx:()J
       5: lconst_1
       6: lsub
       7: invokevirtual #138                // Method writeIdx_$eq:(J)V
      10: aload_0
      11: aload_0
      12: invokevirtual #66                 // Method writeIdx:()J
      15: aconst_null
      16: iconst_0
      17: invokespecial #136                // Method put:(JLjava/lang/Object;Z)V
      20: return

  public akka.stream.impl.FixedSizeBuffer$FixedSizeBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field capacity:I
       5: aload_0
       6: invokespecial #174                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iload_1
      11: anewarray     #5                  // class java/lang/Object
      14: putfield      #116                // Field buffer:[Ljava/lang/Object;
      17: aload_0
      18: lconst_0
      19: putfield      #118                // Field readIdx:J
      22: aload_0
      23: lconst_0
      24: putfield      #122                // Field writeIdx:J
      27: return
}
