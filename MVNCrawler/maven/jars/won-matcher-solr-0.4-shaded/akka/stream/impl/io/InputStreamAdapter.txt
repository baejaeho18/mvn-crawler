Compiled from "InputStreamSinkStage.scala"
public class akka.stream.impl.io.InputStreamAdapter extends java.io.InputStream {
  public final java.util.concurrent.BlockingQueue<akka.stream.impl.io.InputStreamSinkStage$StreamToAdapterMessage> akka$stream$impl$io$InputStreamAdapter$$sharedBuffer;

  public final scala.Function1<akka.stream.impl.io.InputStreamSinkStage$AdapterToStageMessage, scala.runtime.BoxedUnit> akka$stream$impl$io$InputStreamAdapter$$sendToStage;

  public final scala.concurrent.duration.FiniteDuration akka$stream$impl$io$InputStreamAdapter$$readTimeout;

  private boolean isInitialized;

  private boolean isActive;

  private boolean isStageAlive;

  private final java.io.IOException subscriberClosedException;

  private scala.Option<akka.util.ByteString> detachedChunk;

  public boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #28                 // Field isInitialized:Z
       4: ireturn

  public void isInitialized_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field isInitialized:Z
       5: return

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #35                 // Field isActive:Z
       4: ireturn

  public void isActive_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field isActive:Z
       5: return

  public boolean isStageAlive();
    Code:
       0: aload_0
       1: getfield      #38                 // Field isStageAlive:Z
       4: ireturn

  public void isStageAlive_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field isStageAlive:Z
       5: return

  public java.io.IOException subscriberClosedException();
    Code:
       0: aload_0
       1: getfield      #42                 // Field subscriberClosedException:Ljava/io/IOException;
       4: areturn

  public scala.Option<akka.util.ByteString> detachedChunk();
    Code:
       0: aload_0
       1: getfield      #45                 // Field detachedChunk:Lscala/Option;
       4: areturn

  public void detachedChunk_$eq(scala.Option<akka.util.ByteString>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field detachedChunk:Lscala/Option;
       5: return

  private <T> T executeIfNotClosed(scala.Function0<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method isActive:()Z
       4: ifeq          18
       7: aload_0
       8: invokespecial #57                 // Method waitIfNotInitialized:()V
      11: aload_1
      12: invokeinterface #63,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      17: areturn
      18: aload_0
      19: invokevirtual #65                 // Method subscriberClosedException:()Ljava/io/IOException;
      22: athrow

  public int read() throws java.io.IOException;
    Code:
       0: getstatic     #75                 // Field scala/Array$.MODULE$:Lscala/Array$;
       3: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: newarray       byte
       9: dup
      10: iconst_0
      11: iconst_1
      12: bastore
      13: invokevirtual #84                 // Method scala/Predef$.wrapByteArray:([B)Lscala/collection/mutable/WrappedArray;
      16: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      19: invokevirtual #93                 // Method scala/reflect/ClassTag$.Byte:()Lscala/reflect/ClassTag;
      22: invokevirtual #96                 // Method scala/Array$.apply:(Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      25: checkcast     #98                 // class "[B"
      28: astore_1
      29: aload_0
      30: aload_1
      31: iconst_0
      32: iconst_1
      33: invokevirtual #101                // Method read:([BII)I
      36: iconst_m1
      37: if_icmpeq     46
      40: aload_1
      41: iconst_0
      42: baload
      43: goto          47
      46: iconst_m1
      47: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #101                // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: arraylength
       5: iconst_0
       6: if_icmple     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: new           #105                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$read$2
      17: dup
      18: aload_0
      19: invokespecial #109                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$read$2."<init>":(Lakka/stream/impl/io/InputStreamAdapter;)V
      22: invokevirtual #113                // Method scala/Predef$.require:(ZLscala/Function0;)V
      25: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      28: iload_2
      29: iconst_0
      30: if_icmplt     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: new           #115                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$read$3
      41: dup
      42: aload_0
      43: invokespecial #116                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$read$3."<init>":(Lakka/stream/impl/io/InputStreamAdapter;)V
      46: invokevirtual #113                // Method scala/Predef$.require:(ZLscala/Function0;)V
      49: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      52: iload_3
      53: iconst_0
      54: if_icmple     61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: new           #118                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$read$4
      65: dup
      66: aload_0
      67: invokespecial #119                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$read$4."<init>":(Lakka/stream/impl/io/InputStreamAdapter;)V
      70: invokevirtual #113                // Method scala/Predef$.require:(ZLscala/Function0;)V
      73: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      76: iload_2
      77: iload_3
      78: iadd
      79: aload_1
      80: arraylength
      81: if_icmpgt     88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: new           #121                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$read$5
      92: dup
      93: aload_0
      94: invokespecial #122                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$read$5."<init>":(Lakka/stream/impl/io/InputStreamAdapter;)V
      97: invokevirtual #113                // Method scala/Predef$.require:(ZLscala/Function0;)V
     100: aload_0
     101: new           #124                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$read$1
     104: dup
     105: aload_0
     106: aload_1
     107: iload_2
     108: iload_3
     109: invokespecial #127                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$read$1."<init>":(Lakka/stream/impl/io/InputStreamAdapter;[BII)V
     112: invokespecial #129                // Method executeIfNotClosed:(Lscala/Function0;)Ljava/lang/Object;
     115: invokestatic  #135                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
     118: ireturn

  public int akka$stream$impl$io$InputStreamAdapter$$readBytes(byte[], int, int);
    Code:
       0: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #141                // Method detachedChunk:()Lscala/Option;
       7: invokevirtual #146                // Method scala/Option.nonEmpty:()Z
      10: new           #148                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$akka$stream$impl$io$InputStreamAdapter$$readBytes$1
      13: dup
      14: aload_0
      15: invokespecial #149                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$akka$stream$impl$io$InputStreamAdapter$$readBytes$1."<init>":(Lakka/stream/impl/io/InputStreamAdapter;)V
      18: invokevirtual #113                // Method scala/Predef$.require:(ZLscala/Function0;)V
      21: aload_0
      22: invokevirtual #141                // Method detachedChunk:()Lscala/Option;
      25: invokevirtual #152                // Method scala/Option.get:()Ljava/lang/Object;
      28: checkcast     #154                // class scala/collection/SeqLike
      31: invokeinterface #157,  1          // InterfaceMethod scala/collection/SeqLike.size:()I
      36: istore        4
      38: aload_0
      39: aload_1
      40: iload_2
      41: iload_3
      42: iconst_0
      43: invokespecial #161                // Method getData:([BIII)I
      46: istore        5
      48: iload         5
      50: iload         4
      52: if_icmplt     70
      55: aload_0
      56: getfield      #163                // Field akka$stream$impl$io$InputStreamAdapter$$sendToStage:Lscala/Function1;
      59: getstatic     #168                // Field akka/stream/impl/io/InputStreamSinkStage$ReadElementAcknowledgement$.MODULE$:Lakka/stream/impl/io/InputStreamSinkStage$ReadElementAcknowledgement$;
      62: invokeinterface #173,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      67: goto          73
      70: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      73: pop
      74: iload         5
      76: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #186                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$close$1
       4: dup
       5: aload_0
       6: invokespecial #187                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$close$1."<init>":(Lakka/stream/impl/io/InputStreamAdapter;)V
       9: invokespecial #129                // Method executeIfNotClosed:(Lscala/Function0;)Ljava/lang/Object;
      12: pop
      13: return

  private int getData(byte[], int, int, int);
    Code:
       0: aload_0
       1: invokespecial #190                // Method grabDataChunk:()Lscala/Option;
       4: astore        6
       6: aload         6
       8: instanceof    #192                // class scala/Some
      11: ifeq          130
      14: aload         6
      16: checkcast     #192                // class scala/Some
      19: astore        7
      21: aload         7
      23: invokevirtual #195                // Method scala/Some.x:()Ljava/lang/Object;
      26: checkcast     #197                // class akka/util/ByteString
      29: astore        8
      31: aload         8
      33: invokevirtual #198                // Method akka/util/ByteString.size:()I
      36: istore        10
      38: iload         10
      40: iload_3
      41: if_icmpgt     96
      44: aload         8
      46: aload_1
      47: iload_2
      48: iload         10
      50: invokevirtual #202                // Method akka/util/ByteString.copyToArray:(Ljava/lang/Object;II)V
      53: aload_0
      54: getstatic     #207                // Field scala/None$.MODULE$:Lscala/None$;
      57: invokevirtual #209                // Method detachedChunk_$eq:(Lscala/Option;)V
      60: iload         10
      62: iload_3
      63: if_icmpne     74
      66: iload         4
      68: iload         10
      70: iadd
      71: goto          125
      74: aload_1
      75: iload_2
      76: iload         10
      78: iadd
      79: iload_3
      80: iload         10
      82: isub
      83: iload         4
      85: iload         10
      87: iadd
      88: istore        4
      90: istore_3
      91: istore_2
      92: astore_1
      93: goto          0
      96: aload         8
      98: aload_1
      99: iload_2
     100: iload_3
     101: invokevirtual #202                // Method akka/util/ByteString.copyToArray:(Ljava/lang/Object;II)V
     104: aload_0
     105: new           #192                // class scala/Some
     108: dup
     109: aload         8
     111: iload_3
     112: invokevirtual #213                // Method akka/util/ByteString.drop:(I)Lakka/util/ByteString;
     115: invokespecial #216                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     118: invokevirtual #209                // Method detachedChunk_$eq:(Lscala/Option;)V
     121: iload         4
     123: iload_3
     124: iadd
     125: istore        9
     127: goto          145
     130: getstatic     #207                // Field scala/None$.MODULE$:Lscala/None$;
     133: aload         6
     135: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     138: ifeq          148
     141: iload         4
     143: istore        9
     145: iload         9
     147: ireturn
     148: new           #222                // class scala/MatchError
     151: dup
     152: aload         6
     154: invokespecial #223                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     157: athrow

  private void waitIfNotInitialized();
    Code:
       0: aload_0
       1: invokevirtual #229                // Method isInitialized:()Z
       4: ifne          71
       7: aload_0
       8: getfield      #231                // Field akka$stream$impl$io$InputStreamAdapter$$sharedBuffer:Ljava/util/concurrent/BlockingQueue;
      11: aload_0
      12: getfield      #233                // Field akka$stream$impl$io$InputStreamAdapter$$readTimeout:Lscala/concurrent/duration/FiniteDuration;
      15: invokevirtual #239                // Method scala/concurrent/duration/FiniteDuration.toMillis:()J
      18: getstatic     #245                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      21: invokeinterface #251,  4          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      26: checkcast     #253                // class akka/stream/impl/io/InputStreamSinkStage$StreamToAdapterMessage
      29: astore_1
      30: getstatic     #258                // Field akka/stream/impl/io/InputStreamSinkStage$Initialized$.MODULE$:Lakka/stream/impl/io/InputStreamSinkStage$Initialized$;
      33: aload_1
      34: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifeq          52
      40: aload_0
      41: iconst_1
      42: invokevirtual #260                // Method isInitialized_$eq:(Z)V
      45: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      48: astore_2
      49: goto          71
      52: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      55: iconst_0
      56: new           #262                // class akka/stream/impl/io/InputStreamAdapter$$anonfun$waitIfNotInitialized$1
      59: dup
      60: aload_0
      61: invokespecial #263                // Method akka/stream/impl/io/InputStreamAdapter$$anonfun$waitIfNotInitialized$1."<init>":(Lakka/stream/impl/io/InputStreamAdapter;)V
      64: invokevirtual #113                // Method scala/Predef$.require:(ZLscala/Function0;)V
      67: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      70: astore_2
      71: return

  private scala.Option<akka.util.ByteString> grabDataChunk();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method detachedChunk:()Lscala/Option;
       4: astore_1
       5: getstatic     #207                // Field scala/None$.MODULE$:Lscala/None$;
       8: aload_1
       9: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          104
      15: aload_0
      16: getfield      #231                // Field akka$stream$impl$io$InputStreamAdapter$$sharedBuffer:Ljava/util/concurrent/BlockingQueue;
      19: invokeinterface #265,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      24: checkcast     #253                // class akka/stream/impl/io/InputStreamSinkStage$StreamToAdapterMessage
      27: astore_3
      28: aload_3
      29: instanceof    #267                // class akka/stream/impl/io/InputStreamSinkStage$Data
      32: ifeq          70
      35: aload_3
      36: checkcast     #267                // class akka/stream/impl/io/InputStreamSinkStage$Data
      39: astore        4
      41: aload         4
      43: invokevirtual #270                // Method akka/stream/impl/io/InputStreamSinkStage$Data.data:()Lakka/util/ByteString;
      46: astore        5
      48: aload_0
      49: new           #192                // class scala/Some
      52: dup
      53: aload         5
      55: invokespecial #216                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      58: invokevirtual #209                // Method detachedChunk_$eq:(Lscala/Option;)V
      61: aload_0
      62: invokevirtual #141                // Method detachedChunk:()Lscala/Option;
      65: astore        6
      67: goto          98
      70: getstatic     #275                // Field akka/stream/impl/io/InputStreamSinkStage$Finished$.MODULE$:Lakka/stream/impl/io/InputStreamSinkStage$Finished$;
      73: aload_3
      74: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      77: ifeq          93
      80: aload_0
      81: iconst_0
      82: invokevirtual #277                // Method isStageAlive_$eq:(Z)V
      85: getstatic     #207                // Field scala/None$.MODULE$:Lscala/None$;
      88: astore        6
      90: goto          98
      93: getstatic     #207                // Field scala/None$.MODULE$:Lscala/None$;
      96: astore        6
      98: aload         6
     100: astore_2
     101: goto          116
     104: aload_1
     105: instanceof    #192                // class scala/Some
     108: ifeq          118
     111: aload_0
     112: invokevirtual #141                // Method detachedChunk:()Lscala/Option;
     115: astore_2
     116: aload_2
     117: areturn
     118: new           #222                // class scala/MatchError
     121: dup
     122: aload_1
     123: invokespecial #223                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     126: athrow

  public akka.stream.impl.io.InputStreamAdapter(java.util.concurrent.BlockingQueue<akka.stream.impl.io.InputStreamSinkStage$StreamToAdapterMessage>, scala.Function1<akka.stream.impl.io.InputStreamSinkStage$AdapterToStageMessage, scala.runtime.BoxedUnit>, scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #231                // Field akka$stream$impl$io$InputStreamAdapter$$sharedBuffer:Ljava/util/concurrent/BlockingQueue;
       5: aload_0
       6: aload_2
       7: putfield      #163                // Field akka$stream$impl$io$InputStreamAdapter$$sendToStage:Lscala/Function1;
      10: aload_0
      11: aload_3
      12: putfield      #233                // Field akka$stream$impl$io$InputStreamAdapter$$readTimeout:Lscala/concurrent/duration/FiniteDuration;
      15: aload_0
      16: invokespecial #280                // Method java/io/InputStream."<init>":()V
      19: aload_0
      20: iconst_0
      21: putfield      #28                 // Field isInitialized:Z
      24: aload_0
      25: iconst_1
      26: putfield      #35                 // Field isActive:Z
      29: aload_0
      30: iconst_1
      31: putfield      #38                 // Field isStageAlive:Z
      34: aload_0
      35: new           #51                 // class java/io/IOException
      38: dup
      39: ldc_w         #282                // String Reactive stream is terminated, no reads are possible
      42: invokespecial #285                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      45: putfield      #42                 // Field subscriberClosedException:Ljava/io/IOException;
      48: aload_0
      49: getstatic     #207                // Field scala/None$.MODULE$:Lscala/None$;
      52: putfield      #45                 // Field detachedChunk:Lscala/Option;
      55: return
}
