Compiled from "TcpStages.scala"
public class akka.stream.impl.io.IncomingConnectionStage extends akka.stream.stage.GraphStage<akka.stream.FlowShape<akka.util.ByteString, akka.util.ByteString>> {
  private final akka.actor.ActorRef connection;

  private final java.net.InetSocketAddress remoteAddress;

  private final boolean halfClose;

  private final java.util.concurrent.atomic.AtomicBoolean hasBeenCreated;

  private final akka.stream.Inlet<akka.util.ByteString> bytesIn;

  private final akka.stream.Outlet<akka.util.ByteString> bytesOut;

  private final akka.stream.FlowShape<akka.util.ByteString, akka.util.ByteString> shape;

  private java.util.concurrent.atomic.AtomicBoolean hasBeenCreated();
    Code:
       0: aload_0
       1: getfield      #29                 // Field hasBeenCreated:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  public akka.stream.Inlet<akka.util.ByteString> bytesIn();
    Code:
       0: aload_0
       1: getfield      #34                 // Field bytesIn:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<akka.util.ByteString> bytesOut();
    Code:
       0: aload_0
       1: getfield      #37                 // Field bytesOut:Lakka/stream/Outlet;
       4: areturn

  public akka.stream.Attributes initialAttributes();
    Code:
       0: getstatic     #45                 // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
       3: ldc           #47                 // String IncomingConnection
       5: invokevirtual #51                 // Method akka/stream/Attributes$.name:(Ljava/lang/String;)Lakka/stream/Attributes;
       8: areturn

  public akka.stream.FlowShape<akka.util.ByteString, akka.util.ByteString> shape();
    Code:
       0: aload_0
       1: getfield      #54                 // Field shape:Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.stage.GraphStageLogic createLogic(akka.stream.Attributes);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method hasBeenCreated:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: new           #66                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #68                 // String Cannot materialize an incoming connection Flow twice.
      16: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokespecial #58                 // Method hasBeenCreated:()Ljava/util/concurrent/atomic/AtomicBoolean;
      24: iconst_1
      25: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      28: new           #78                 // class akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic
      31: dup
      32: aload_0
      33: invokevirtual #80                 // Method shape:()Lakka/stream/FlowShape;
      36: new           #82                 // class akka/stream/impl/io/TcpConnectionStage$Inbound
      39: dup
      40: aload_0
      41: getfield      #84                 // Field connection:Lakka/actor/ActorRef;
      44: aload_0
      45: getfield      #86                 // Field halfClose:Z
      48: invokespecial #89                 // Method akka/stream/impl/io/TcpConnectionStage$Inbound."<init>":(Lakka/actor/ActorRef;Z)V
      51: invokespecial #92                 // Method akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic."<init>":(Lakka/stream/FlowShape;Lakka/stream/impl/io/TcpConnectionStage$TcpRole;)V
      54: areturn

  public java.lang.String toString();
    Code:
       0: new           #98                 // class scala/StringContext
       3: dup
       4: getstatic     #103                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_2
       8: anewarray     #105                // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #107                // String TCP-from(
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #109                // String )
      20: aastore
      21: checkcast     #111                // class "[Ljava/lang/Object;"
      24: invokevirtual #115                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      27: invokespecial #118                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      30: getstatic     #103                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: iconst_1
      34: anewarray     #120                // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_0
      40: getfield      #122                // Field remoteAddress:Ljava/net/InetSocketAddress;
      43: aastore
      44: invokevirtual #126                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      47: invokevirtual #130                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      50: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method shape:()Lakka/stream/FlowShape;
       4: areturn

  public akka.stream.impl.io.IncomingConnectionStage(akka.actor.ActorRef, java.net.InetSocketAddress, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field connection:Lakka/actor/ActorRef;
       5: aload_0
       6: aload_2
       7: putfield      #122                // Field remoteAddress:Ljava/net/InetSocketAddress;
      10: aload_0
      11: iload_3
      12: putfield      #86                 // Field halfClose:Z
      15: aload_0
      16: invokespecial #135                // Method akka/stream/stage/GraphStage."<init>":()V
      19: aload_0
      20: new           #60                 // class java/util/concurrent/atomic/AtomicBoolean
      23: dup
      24: iconst_0
      25: invokespecial #137                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      28: putfield      #29                 // Field hasBeenCreated:Ljava/util/concurrent/atomic/AtomicBoolean;
      31: aload_0
      32: getstatic     #142                // Field akka/stream/Inlet$.MODULE$:Lakka/stream/Inlet$;
      35: ldc           #144                // String IncomingTCP.in
      37: invokevirtual #148                // Method akka/stream/Inlet$.apply:(Ljava/lang/String;)Lakka/stream/Inlet;
      40: putfield      #34                 // Field bytesIn:Lakka/stream/Inlet;
      43: aload_0
      44: getstatic     #153                // Field akka/stream/Outlet$.MODULE$:Lakka/stream/Outlet$;
      47: ldc           #155                // String IncomingTCP.out
      49: invokevirtual #158                // Method akka/stream/Outlet$.apply:(Ljava/lang/String;)Lakka/stream/Outlet;
      52: putfield      #37                 // Field bytesOut:Lakka/stream/Outlet;
      55: aload_0
      56: new           #160                // class akka/stream/FlowShape
      59: dup
      60: aload_0
      61: invokevirtual #162                // Method bytesIn:()Lakka/stream/Inlet;
      64: aload_0
      65: invokevirtual #164                // Method bytesOut:()Lakka/stream/Outlet;
      68: invokespecial #167                // Method akka/stream/FlowShape."<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;)V
      71: putfield      #54                 // Field shape:Lakka/stream/FlowShape;
      74: return
}
