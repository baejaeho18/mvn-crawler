Compiled from "OutputStreamSourceStage.scala"
public final class akka.stream.impl.io.OutputStreamSourceStage$$anon$1 extends akka.stream.stage.GraphStageLogic implements akka.stream.impl.io.OutputStreamSourceStage$StageWithCallback {
  private scala.Option<scala.concurrent.Promise<scala.runtime.BoxedUnit>> flush;

  private scala.Option<scala.concurrent.Promise<scala.runtime.BoxedUnit>> close;

  private scala.concurrent.ExecutionContext akka$stream$impl$io$OutputStreamSourceStage$$anon$$dispatcher;

  private java.lang.Thread akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread;

  private final akka.stream.stage.AsyncCallback<scala.util.Try<akka.util.ByteString>> akka$stream$impl$io$OutputStreamSourceStage$$anon$$downstreamCallback;

  private final akka.stream.stage.AsyncCallback<scala.Tuple2<akka.stream.impl.io.OutputStreamSourceStage$AdapterToStageMessage, scala.concurrent.Promise<scala.runtime.BoxedUnit>>> upstreamCallback;

  private final akka.stream.impl.io.OutputStreamSourceStage $outer;

  private final java.lang.String dispatcherId$1;

  private final java.util.concurrent.LinkedBlockingQueue dataQueue$1;

  private final java.util.concurrent.atomic.AtomicReference downstreamStatus$1;

  public scala.Option<scala.concurrent.Promise<scala.runtime.BoxedUnit>> flush();
    Code:
       0: aload_0
       1: getfield      #36                 // Field flush:Lscala/Option;
       4: areturn

  public void flush_$eq(scala.Option<scala.concurrent.Promise<scala.runtime.BoxedUnit>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field flush:Lscala/Option;
       5: return

  public scala.Option<scala.concurrent.Promise<scala.runtime.BoxedUnit>> close();
    Code:
       0: aload_0
       1: getfield      #43                 // Field close:Lscala/Option;
       4: areturn

  public void close_$eq(scala.Option<scala.concurrent.Promise<scala.runtime.BoxedUnit>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field close:Lscala/Option;
       5: return

  public scala.concurrent.ExecutionContext akka$stream$impl$io$OutputStreamSourceStage$$anon$$dispatcher();
    Code:
       0: aload_0
       1: getfield      #47                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$dispatcher:Lscala/concurrent/ExecutionContext;
       4: areturn

  private void akka$stream$impl$io$OutputStreamSourceStage$$anon$$dispatcher_$eq(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$dispatcher:Lscala/concurrent/ExecutionContext;
       5: return

  private java.lang.Thread akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread();
    Code:
       0: aload_0
       1: getfield      #52                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread:Ljava/lang/Thread;
       4: areturn

  public void akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread_$eq(java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread:Ljava/lang/Thread;
       5: return

  public akka.stream.stage.AsyncCallback<scala.util.Try<akka.util.ByteString>> akka$stream$impl$io$OutputStreamSourceStage$$anon$$downstreamCallback();
    Code:
       0: aload_0
       1: getfield      #57                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$downstreamCallback:Lakka/stream/stage/AsyncCallback;
       4: areturn

  private akka.stream.stage.AsyncCallback<scala.Tuple2<akka.stream.impl.io.OutputStreamSourceStage$AdapterToStageMessage, scala.concurrent.Promise<scala.runtime.BoxedUnit>>> upstreamCallback();
    Code:
       0: aload_0
       1: getfield      #59                 // Field upstreamCallback:Lakka/stream/stage/AsyncCallback;
       4: areturn

  public scala.concurrent.Future<scala.runtime.BoxedUnit> wakeUp(akka.stream.impl.io.OutputStreamSourceStage$AdapterToStageMessage);
    Code:
       0: getstatic     #67                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #71                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore_2
       7: aload_0
       8: invokespecial #73                 // Method upstreamCallback:()Lakka/stream/stage/AsyncCallback;
      11: new           #75                 // class scala/Tuple2
      14: dup
      15: aload_1
      16: aload_2
      17: invokespecial #79                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      20: invokeinterface #85,  2           // InterfaceMethod akka/stream/stage/AsyncCallback.invoke:(Ljava/lang/Object;)V
      25: aload_2
      26: invokeinterface #91,  1           // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      31: areturn

  public void akka$stream$impl$io$OutputStreamSourceStage$$anon$$onAsyncMessage(scala.Tuple2<akka.stream.impl.io.OutputStreamSourceStage$AdapterToStageMessage, scala.concurrent.Promise<scala.runtime.BoxedUnit>>);
    Code:
       0: aload_1
       1: invokevirtual #101                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: checkcast     #103                // class akka/stream/impl/io/OutputStreamSourceStage$AdapterToStageMessage
       7: astore_2
       8: getstatic     #108                // Field akka/stream/impl/io/OutputStreamSourceStage$Flush$.MODULE$:Lakka/stream/impl/io/OutputStreamSourceStage$Flush$;
      11: aload_2
      12: invokevirtual #114                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          44
      18: aload_0
      19: new           #116                // class scala/Some
      22: dup
      23: aload_1
      24: invokevirtual #119                // Method scala/Tuple2._2:()Ljava/lang/Object;
      27: invokespecial #121                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      30: invokevirtual #123                // Method flush_$eq:(Lscala/Option;)V
      33: aload_0
      34: invokespecial #127                // Method sendResponseIfNeed:()V
      37: getstatic     #133                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      40: astore_3
      41: goto          112
      44: getstatic     #138                // Field akka/stream/impl/io/OutputStreamSourceStage$Close$.MODULE$:Lakka/stream/impl/io/OutputStreamSourceStage$Close$;
      47: aload_2
      48: invokevirtual #114                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          113
      54: aload_0
      55: new           #116                // class scala/Some
      58: dup
      59: aload_1
      60: invokevirtual #119                // Method scala/Tuple2._2:()Ljava/lang/Object;
      63: invokespecial #121                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      66: invokevirtual #140                // Method close_$eq:(Lscala/Option;)V
      69: aload_0
      70: getfield      #142                // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingQueue;
      73: invokevirtual #148                // Method java/util/concurrent/LinkedBlockingQueue.isEmpty:()Z
      76: ifeq          104
      79: aload_0
      80: getfield      #150                // Field downstreamStatus$1:Ljava/util/concurrent/atomic/AtomicReference;
      83: getstatic     #155                // Field akka/stream/impl/io/OutputStreamSourceStage$Canceled$.MODULE$:Lakka/stream/impl/io/OutputStreamSourceStage$Canceled$;
      86: invokevirtual #160                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      89: aload_0
      90: invokevirtual #163                // Method completeStage:()V
      93: aload_0
      94: invokespecial #166                // Method unblockUpstream:()Z
      97: pop
      98: getstatic     #133                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     101: goto          111
     104: aload_0
     105: invokespecial #127                // Method sendResponseIfNeed:()V
     108: getstatic     #133                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     111: astore_3
     112: return
     113: new           #168                // class scala/MatchError
     116: dup
     117: aload_2
     118: invokespecial #169                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     121: athrow

  private boolean unblockUpstream();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method flush:()Lscala/Option;
       4: astore_1
       5: aload_1
       6: instanceof    #116                // class scala/Some
       9: ifeq          55
      12: aload_1
      13: checkcast     #116                // class scala/Some
      16: astore_2
      17: aload_2
      18: invokevirtual #176                // Method scala/Some.x:()Ljava/lang/Object;
      21: checkcast     #87                 // class scala/concurrent/Promise
      24: astore_3
      25: aload_3
      26: new           #178                // class scala/util/Success
      29: dup
      30: getstatic     #133                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      33: invokespecial #179                // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
      36: invokeinterface #183,  2          // InterfaceMethod scala/concurrent/Promise.complete:(Lscala/util/Try;)Lscala/concurrent/Promise;
      41: pop
      42: aload_0
      43: getstatic     #188                // Field scala/None$.MODULE$:Lscala/None$;
      46: invokevirtual #123                // Method flush_$eq:(Lscala/Option;)V
      49: iconst_1
      50: istore        4
      52: goto          145
      55: getstatic     #188                // Field scala/None$.MODULE$:Lscala/None$;
      58: aload_1
      59: invokevirtual #114                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      62: ifeq          158
      65: aload_0
      66: invokevirtual #190                // Method close:()Lscala/Option;
      69: astore        5
      71: aload         5
      73: instanceof    #116                // class scala/Some
      76: ifeq          127
      79: aload         5
      81: checkcast     #116                // class scala/Some
      84: astore        6
      86: aload         6
      88: invokevirtual #176                // Method scala/Some.x:()Ljava/lang/Object;
      91: checkcast     #87                 // class scala/concurrent/Promise
      94: astore        7
      96: aload         7
      98: new           #178                // class scala/util/Success
     101: dup
     102: getstatic     #133                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     105: invokespecial #179                // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
     108: invokeinterface #183,  2          // InterfaceMethod scala/concurrent/Promise.complete:(Lscala/util/Try;)Lscala/concurrent/Promise;
     113: pop
     114: aload_0
     115: getstatic     #188                // Field scala/None$.MODULE$:Lscala/None$;
     118: invokevirtual #140                // Method close_$eq:(Lscala/Option;)V
     121: iconst_1
     122: istore        8
     124: goto          141
     127: getstatic     #188                // Field scala/None$.MODULE$:Lscala/None$;
     130: aload         5
     132: invokevirtual #114                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     135: ifeq          148
     138: iconst_0
     139: istore        8
     141: iload         8
     143: istore        4
     145: iload         4
     147: ireturn
     148: new           #168                // class scala/MatchError
     151: dup
     152: aload         5
     154: invokespecial #169                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     157: athrow
     158: new           #168                // class scala/MatchError
     161: dup
     162: aload_1
     163: invokespecial #169                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     166: athrow

  private void sendResponseIfNeed();
    Code:
       0: aload_0
       1: getfield      #150                // Field downstreamStatus$1:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #195                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #155                // Field akka/stream/impl/io/OutputStreamSourceStage$Canceled$.MODULE$:Lakka/stream/impl/io/OutputStreamSourceStage$Canceled$;
      10: astore_1
      11: dup
      12: ifnonnull     23
      15: pop
      16: aload_1
      17: ifnull        40
      20: goto          30
      23: aload_1
      24: invokevirtual #114                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifne          40
      30: aload_0
      31: getfield      #142                // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingQueue;
      34: invokevirtual #148                // Method java/util/concurrent/LinkedBlockingQueue.isEmpty:()Z
      37: ifeq          45
      40: aload_0
      41: invokespecial #166                // Method unblockUpstream:()Z
      44: pop
      45: return

  public void akka$stream$impl$io$OutputStreamSourceStage$$anon$$onPush(akka.util.ByteString);
    Code:
       0: aload_0
       1: getfield      #150                // Field downstreamStatus$1:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #195                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #202                // Field akka/stream/impl/io/OutputStreamSourceStage$Ok$.MODULE$:Lakka/stream/impl/io/OutputStreamSourceStage$Ok$;
      10: astore_2
      11: dup
      12: ifnonnull     23
      15: pop
      16: aload_2
      17: ifnull        30
      20: goto          46
      23: aload_2
      24: invokevirtual #114                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          46
      30: aload_0
      31: aload_0
      32: getfield      #204                // Field $outer:Lakka/stream/impl/io/OutputStreamSourceStage;
      35: invokevirtual #208                // Method akka/stream/impl/io/OutputStreamSourceStage.out:()Lakka/stream/Outlet;
      38: aload_1
      39: invokevirtual #212                // Method push:(Lakka/stream/Outlet;Ljava/lang/Object;)V
      42: aload_0
      43: invokespecial #127                // Method sendResponseIfNeed:()V
      46: return

  public void preStart();
    Code:
       0: aload_0
       1: getstatic     #222                // Field akka/stream/ActorMaterializerHelper$.MODULE$:Lakka/stream/ActorMaterializerHelper$;
       4: aload_0
       5: invokevirtual #226                // Method materializer:()Lakka/stream/Materializer;
       8: invokevirtual #230                // Method akka/stream/ActorMaterializerHelper$.downcast:(Lakka/stream/Materializer;)Lakka/stream/ActorMaterializer;
      11: invokevirtual #236                // Method akka/stream/ActorMaterializer.system:()Lakka/actor/ActorSystem;
      14: invokevirtual #242                // Method akka/actor/ActorSystem.dispatchers:()Lakka/dispatch/Dispatchers;
      17: aload_0
      18: getfield      #244                // Field dispatcherId$1:Ljava/lang/String;
      21: invokevirtual #250                // Method akka/dispatch/Dispatchers.lookup:(Ljava/lang/String;)Lakka/dispatch/MessageDispatcher;
      24: invokespecial #252                // Method akka$stream$impl$io$OutputStreamSourceStage$$anon$$dispatcher_$eq:(Lscala/concurrent/ExecutionContext;)V
      27: aload_0
      28: invokespecial #254                // Method akka/stream/stage/GraphStageLogic.preStart:()V
      31: return

  public void postStop();
    Code:
       0: aload_0
       1: invokespecial #257                // Method akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread:()Ljava/lang/Thread;
       4: ifnull        14
       7: aload_0
       8: invokespecial #257                // Method akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread:()Ljava/lang/Thread;
      11: invokevirtual #262                // Method java/lang/Thread.interrupt:()V
      14: aload_0
      15: invokespecial #264                // Method akka/stream/stage/GraphStageLogic.postStop:()V
      18: return

  public akka.stream.impl.io.OutputStreamSourceStage$$anon$1(akka.stream.impl.io.OutputStreamSourceStage, java.lang.String, java.util.concurrent.LinkedBlockingQueue, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #204                // Field $outer:Lakka/stream/impl/io/OutputStreamSourceStage;
      11: aload_0
      12: aload_2
      13: putfield      #244                // Field dispatcherId$1:Ljava/lang/String;
      16: aload_0
      17: aload_3
      18: putfield      #142                // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingQueue;
      21: aload_0
      22: aload         4
      24: putfield      #150                // Field downstreamStatus$1:Ljava/util/concurrent/atomic/AtomicReference;
      27: aload_0
      28: aload_1
      29: invokevirtual #269                // Method akka/stream/impl/io/OutputStreamSourceStage.shape:()Lakka/stream/SourceShape;
      32: invokespecial #272                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      35: aload_0
      36: getstatic     #188                // Field scala/None$.MODULE$:Lscala/None$;
      39: putfield      #36                 // Field flush:Lscala/Option;
      42: aload_0
      43: getstatic     #188                // Field scala/None$.MODULE$:Lscala/None$;
      46: putfield      #43                 // Field close:Lscala/Option;
      49: aload_0
      50: aconst_null
      51: putfield      #47                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$dispatcher:Lscala/concurrent/ExecutionContext;
      54: aload_0
      55: aconst_null
      56: putfield      #52                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$blockingThread:Ljava/lang/Thread;
      59: aload_0
      60: aload_0
      61: new           #274                // class akka/stream/impl/io/OutputStreamSourceStage$$anon$1$$anonfun$1
      64: dup
      65: aload_0
      66: invokespecial #277                // Method akka/stream/impl/io/OutputStreamSourceStage$$anon$1$$anonfun$1."<init>":(Lakka/stream/impl/io/OutputStreamSourceStage$$anon$1;)V
      69: invokevirtual #281                // Method getAsyncCallback:(Lscala/Function1;)Lakka/stream/stage/AsyncCallback;
      72: putfield      #57                 // Field akka$stream$impl$io$OutputStreamSourceStage$$anon$$downstreamCallback:Lakka/stream/stage/AsyncCallback;
      75: aload_0
      76: aload_0
      77: new           #283                // class akka/stream/impl/io/OutputStreamSourceStage$$anon$1$$anonfun$2
      80: dup
      81: aload_0
      82: invokespecial #284                // Method akka/stream/impl/io/OutputStreamSourceStage$$anon$1$$anonfun$2."<init>":(Lakka/stream/impl/io/OutputStreamSourceStage$$anon$1;)V
      85: invokevirtual #281                // Method getAsyncCallback:(Lscala/Function1;)Lakka/stream/stage/AsyncCallback;
      88: putfield      #59                 // Field upstreamCallback:Lakka/stream/stage/AsyncCallback;
      91: aload_0
      92: aload_1
      93: invokevirtual #208                // Method akka/stream/impl/io/OutputStreamSourceStage.out:()Lakka/stream/Outlet;
      96: new           #286                // class akka/stream/impl/io/OutputStreamSourceStage$$anon$1$$anon$2
      99: dup
     100: aload_0
     101: aload_3
     102: aload         4
     104: invokespecial #289                // Method akka/stream/impl/io/OutputStreamSourceStage$$anon$1$$anon$2."<init>":(Lakka/stream/impl/io/OutputStreamSourceStage$$anon$1;Ljava/util/concurrent/LinkedBlockingQueue;Ljava/util/concurrent/atomic/AtomicReference;)V
     107: invokevirtual #293                // Method setHandler:(Lakka/stream/Outlet;Lakka/stream/stage/OutHandler;)V
     110: return
}
