Compiled from "InputStreamSinkStage.scala"
public final class akka.stream.impl.io.InputStreamSinkStage$$anon$1 extends akka.stream.stage.GraphStageLogic implements akka.stream.impl.io.InputStreamSinkStage$StageWithCallback,akka.stream.stage.InHandler {
  private final akka.stream.stage.AsyncCallback<akka.stream.impl.io.InputStreamSinkStage$AdapterToStageMessage> callback;

  private final akka.stream.impl.io.InputStreamSinkStage $outer;

  private final java.util.concurrent.LinkedBlockingDeque dataQueue$1;

  private akka.stream.stage.AsyncCallback<akka.stream.impl.io.InputStreamSinkStage$AdapterToStageMessage> callback();
    Code:
       0: aload_0
       1: getfield      #24                 // Field callback:Lakka/stream/stage/AsyncCallback;
       4: areturn

  public void wakeUp(akka.stream.impl.io.InputStreamSinkStage$AdapterToStageMessage);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method callback:()Lakka/stream/stage/AsyncCallback;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod akka/stream/stage/AsyncCallback.invoke:(Ljava/lang/Object;)V
      10: return

  public void akka$stream$impl$io$InputStreamSinkStage$$anon$$sendPullIfAllowed();
    Code:
       0: aload_0
       1: getfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
       4: invokevirtual #48                 // Method java/util/concurrent/LinkedBlockingDeque.remainingCapacity:()I
       7: iconst_1
       8: if_icmple     36
      11: aload_0
      12: aload_0
      13: getfield      #50                 // Field $outer:Lakka/stream/impl/io/InputStreamSinkStage;
      16: invokevirtual #54                 // Method akka/stream/impl/io/InputStreamSinkStage.in:()Lakka/stream/Inlet;
      19: invokevirtual #58                 // Method hasBeenPulled:(Lakka/stream/Inlet;)Z
      22: ifne          36
      25: aload_0
      26: aload_0
      27: getfield      #50                 // Field $outer:Lakka/stream/impl/io/InputStreamSinkStage;
      30: invokevirtual #54                 // Method akka/stream/impl/io/InputStreamSinkStage.in:()Lakka/stream/Inlet;
      33: invokevirtual #62                 // Method pull:(Lakka/stream/Inlet;)V
      36: return

  public void preStart();
    Code:
       0: aload_0
       1: getfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
       4: getstatic     #69                 // Field akka/stream/impl/io/InputStreamSinkStage$Initialized$.MODULE$:Lakka/stream/impl/io/InputStreamSinkStage$Initialized$;
       7: invokevirtual #73                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_0
      13: getfield      #50                 // Field $outer:Lakka/stream/impl/io/InputStreamSinkStage;
      16: invokevirtual #54                 // Method akka/stream/impl/io/InputStreamSinkStage.in:()Lakka/stream/Inlet;
      19: invokevirtual #62                 // Method pull:(Lakka/stream/Inlet;)V
      22: return

  public void onPush();
    Code:
       0: getstatic     #79                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
       7: invokevirtual #48                 // Method java/util/concurrent/LinkedBlockingDeque.remainingCapacity:()I
      10: iconst_1
      11: if_icmple     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokevirtual #83                 // Method scala/Predef$.require:(Z)V
      22: aload_0
      23: getfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
      26: new           #85                 // class akka/stream/impl/io/InputStreamSinkStage$Data
      29: dup
      30: aload_0
      31: aload_0
      32: getfield      #50                 // Field $outer:Lakka/stream/impl/io/InputStreamSinkStage;
      35: invokevirtual #54                 // Method akka/stream/impl/io/InputStreamSinkStage.in:()Lakka/stream/Inlet;
      38: invokevirtual #89                 // Method grab:(Lakka/stream/Inlet;)Ljava/lang/Object;
      41: checkcast     #91                 // class akka/util/ByteString
      44: invokespecial #95                 // Method akka/stream/impl/io/InputStreamSinkStage$Data."<init>":(Lakka/util/ByteString;)V
      47: invokevirtual #73                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
      50: pop
      51: aload_0
      52: getfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
      55: invokevirtual #48                 // Method java/util/concurrent/LinkedBlockingDeque.remainingCapacity:()I
      58: iconst_1
      59: if_icmple     66
      62: aload_0
      63: invokevirtual #97                 // Method akka$stream$impl$io$InputStreamSinkStage$$anon$$sendPullIfAllowed:()V
      66: return

  public void onUpstreamFinish();
    Code:
       0: aload_0
       1: getfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
       4: getstatic     #103                // Field akka/stream/impl/io/InputStreamSinkStage$Finished$.MODULE$:Lakka/stream/impl/io/InputStreamSinkStage$Finished$;
       7: invokevirtual #73                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #106                // Method completeStage:()V
      15: return

  public void onUpstreamFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
       4: new           #110                // class akka/stream/impl/io/InputStreamSinkStage$Failed
       7: dup
       8: aload_1
       9: invokespecial #112                // Method akka/stream/impl/io/InputStreamSinkStage$Failed."<init>":(Ljava/lang/Throwable;)V
      12: invokevirtual #73                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: aload_1
      18: invokevirtual #115                // Method failStage:(Ljava/lang/Throwable;)V
      21: return

  public akka.stream.impl.io.InputStreamSinkStage$$anon$1(akka.stream.impl.io.InputStreamSinkStage, java.util.concurrent.LinkedBlockingDeque);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #50                 // Field $outer:Lakka/stream/impl/io/InputStreamSinkStage;
      11: aload_0
      12: aload_2
      13: putfield      #42                 // Field dataQueue$1:Ljava/util/concurrent/LinkedBlockingDeque;
      16: aload_0
      17: aload_1
      18: invokevirtual #122                // Method akka/stream/impl/io/InputStreamSinkStage.shape:()Lakka/stream/SinkShape;
      21: invokespecial #125                // Method akka/stream/stage/GraphStageLogic."<init>":(Lakka/stream/Shape;)V
      24: aload_0
      25: invokestatic  #131                // Method akka/stream/stage/InHandler$class.$init$:(Lakka/stream/stage/InHandler;)V
      28: aload_0
      29: aload_0
      30: new           #133                // class akka/stream/impl/io/InputStreamSinkStage$$anon$1$$anonfun$1
      33: dup
      34: aload_0
      35: invokespecial #136                // Method akka/stream/impl/io/InputStreamSinkStage$$anon$1$$anonfun$1."<init>":(Lakka/stream/impl/io/InputStreamSinkStage$$anon$1;)V
      38: invokevirtual #140                // Method getAsyncCallback:(Lscala/Function1;)Lakka/stream/stage/AsyncCallback;
      41: putfield      #24                 // Field callback:Lakka/stream/stage/AsyncCallback;
      44: aload_0
      45: aload_1
      46: invokevirtual #54                 // Method akka/stream/impl/io/InputStreamSinkStage.in:()Lakka/stream/Inlet;
      49: aload_0
      50: invokevirtual #144                // Method setHandler:(Lakka/stream/Inlet;Lakka/stream/stage/InHandler;)V
      53: return
}
