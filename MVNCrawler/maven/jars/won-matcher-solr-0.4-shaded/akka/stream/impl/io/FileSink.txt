Compiled from "IOSinks.scala"
public final class akka.stream.impl.io.FileSink extends akka.stream.impl.SinkModule<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> {
  private final java.nio.file.Path f;

  private final scala.collection.immutable.Set<java.nio.file.StandardOpenOption> options;

  private final akka.stream.Attributes attributes;

  public akka.stream.Attributes attributes();
    Code:
       0: aload_0
       1: getfield      #19                 // Field attributes:Lakka/stream/Attributes;
       4: areturn

  public java.lang.String label();
    Code:
       0: new           #25                 // class scala/StringContext
       3: dup
       4: getstatic     #31                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_3
       8: anewarray     #33                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #35                 // String FileSink(
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #37                 // String ,
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #39                 // String )
      25: aastore
      26: checkcast     #41                 // class "[Ljava/lang/Object;"
      29: invokevirtual #45                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      32: invokespecial #49                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      35: getstatic     #31                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      38: iconst_2
      39: anewarray     #51                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: getfield      #53                 // Field f:Ljava/nio/file/Path;
      48: aastore
      49: dup
      50: iconst_1
      51: aload_0
      52: getfield      #55                 // Field options:Lscala/collection/immutable/Set;
      55: aastore
      56: invokevirtual #59                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      59: invokevirtual #63                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      62: areturn

  public scala.Tuple2<org.reactivestreams.Subscriber<akka.util.ByteString>, scala.concurrent.Future<akka.stream.IOResult>> create(akka.stream.MaterializationContext);
    Code:
       0: getstatic     #70                 // Field akka/stream/ActorMaterializerHelper$.MODULE$:Lakka/stream/ActorMaterializerHelper$;
       3: aload_1
       4: invokevirtual #76                 // Method akka/stream/MaterializationContext.materializer:()Lakka/stream/Materializer;
       7: invokevirtual #80                 // Method akka/stream/ActorMaterializerHelper$.downcast:(Lakka/stream/Materializer;)Lakka/stream/ActorMaterializer;
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokevirtual #83                 // Method akka/stream/MaterializationContext.effectiveAttributes:()Lakka/stream/Attributes;
      16: invokevirtual #89                 // Method akka/stream/ActorMaterializer.effectiveSettings:(Lakka/stream/Attributes;)Lakka/stream/ActorMaterializerSettings;
      19: astore_3
      20: getstatic     #94                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
      23: invokevirtual #98                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
      26: astore        4
      28: getstatic     #103                // Field akka/stream/impl/io/FileSubscriber$.MODULE$:Lakka/stream/impl/io/FileSubscriber$;
      31: aload_0
      32: getfield      #53                 // Field f:Ljava/nio/file/Path;
      35: aload         4
      37: aload_3
      38: invokevirtual #109                // Method akka/stream/ActorMaterializerSettings.maxInputBufferSize:()I
      41: aload_0
      42: getfield      #55                 // Field options:Lscala/collection/immutable/Set;
      45: invokevirtual #113                // Method akka/stream/impl/io/FileSubscriber$.props:(Ljava/nio/file/Path;Lscala/concurrent/Promise;ILscala/collection/immutable/Set;)Lakka/actor/Props;
      48: astore        5
      50: aload_1
      51: invokevirtual #83                 // Method akka/stream/MaterializationContext.effectiveAttributes:()Lakka/stream/Attributes;
      54: getstatic     #118                // Field akka/stream/impl/Stages$DefaultAttributes$.MODULE$:Lakka/stream/impl/Stages$DefaultAttributes$;
      57: invokevirtual #122                // Method akka/stream/impl/Stages$DefaultAttributes$.IODispatcher:()Lakka/stream/ActorAttributes$Dispatcher;
      60: getstatic     #127                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      63: ldc           #129                // class akka/stream/ActorAttributes$Dispatcher
      65: invokevirtual #132                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      68: invokevirtual #138                // Method akka/stream/Attributes.get:(Lakka/stream/Attributes$Attribute;Lscala/reflect/ClassTag;)Lakka/stream/Attributes$Attribute;
      71: checkcast     #129                // class akka/stream/ActorAttributes$Dispatcher
      74: invokevirtual #141                // Method akka/stream/ActorAttributes$Dispatcher.dispatcher:()Ljava/lang/String;
      77: astore        6
      79: aload_2
      80: aload_1
      81: aload         5
      83: aload         6
      85: invokevirtual #147                // Method akka/actor/Props.withDispatcher:(Ljava/lang/String;)Lakka/actor/Props;
      88: invokevirtual #151                // Method akka/stream/ActorMaterializer.actorOf:(Lakka/stream/MaterializationContext;Lakka/actor/Props;)Lakka/actor/ActorRef;
      91: astore        7
      93: new           #153                // class scala/Tuple2
      96: dup
      97: getstatic     #158                // Field akka/stream/actor/ActorSubscriber$.MODULE$:Lakka/stream/actor/ActorSubscriber$;
     100: aload         7
     102: invokevirtual #161                // Method akka/stream/actor/ActorSubscriber$.apply:(Lakka/actor/ActorRef;)Lorg/reactivestreams/Subscriber;
     105: aload         4
     107: invokeinterface #167,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
     112: invokespecial #170                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     115: areturn

  public akka.stream.impl.SinkModule<akka.util.ByteString, scala.concurrent.Future<akka.stream.IOResult>> newInstance(akka.stream.SinkShape<akka.util.ByteString>);
    Code:
       0: new           #2                  // class akka/stream/impl/io/FileSink
       3: dup
       4: aload_0
       5: getfield      #53                 // Field f:Ljava/nio/file/Path;
       8: aload_0
       9: getfield      #55                 // Field options:Lscala/collection/immutable/Set;
      12: aload_0
      13: invokevirtual #185                // Method attributes:()Lakka/stream/Attributes;
      16: aload_1
      17: invokespecial #188                // Method "<init>":(Ljava/nio/file/Path;Lscala/collection/immutable/Set;Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      20: areturn

  public akka.stream.impl.StreamLayout$Module withAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/impl/io/FileSink
       3: dup
       4: aload_0
       5: getfield      #53                 // Field f:Ljava/nio/file/Path;
       8: aload_0
       9: getfield      #55                 // Field options:Lscala/collection/immutable/Set;
      12: aload_1
      13: aload_0
      14: aload_1
      15: invokevirtual #196                // Method amendShape:(Lakka/stream/Attributes;)Lakka/stream/SinkShape;
      18: invokespecial #188                // Method "<init>":(Ljava/nio/file/Path;Lscala/collection/immutable/Set;Lakka/stream/Attributes;Lakka/stream/SinkShape;)V
      21: areturn

  public akka.stream.impl.io.FileSink(java.nio.file.Path, scala.collection.immutable.Set<java.nio.file.StandardOpenOption>, akka.stream.Attributes, akka.stream.SinkShape<akka.util.ByteString>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field f:Ljava/nio/file/Path;
       5: aload_0
       6: aload_2
       7: putfield      #55                 // Field options:Lscala/collection/immutable/Set;
      10: aload_0
      11: aload_3
      12: putfield      #19                 // Field attributes:Lakka/stream/Attributes;
      15: aload_0
      16: aload         4
      18: invokespecial #200                // Method akka/stream/impl/SinkModule."<init>":(Lakka/stream/SinkShape;)V
      21: return
}
