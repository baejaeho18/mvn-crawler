Compiled from "FileSubscriber.scala"
public class akka.stream.impl.io.FileSubscriber implements akka.stream.actor.ActorSubscriber,akka.actor.ActorLogging {
  public final java.nio.file.Path akka$stream$impl$io$FileSubscriber$$f;

  private final scala.concurrent.Promise<akka.stream.IOResult> completionPromise;

  private final scala.collection.immutable.Set<java.nio.file.StandardOpenOption> openOptions;

  private final akka.stream.actor.WatermarkRequestStrategy requestStrategy;

  private java.nio.channels.FileChannel akka$stream$impl$io$FileSubscriber$$chan;

  private long akka$stream$impl$io$FileSubscriber$$bytesWritten;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final akka.stream.actor.ActorSubscriberState akka$stream$actor$ActorSubscriber$$state;

  private scala.Option akka$stream$actor$ActorSubscriber$$subscription;

  private long akka$stream$actor$ActorSubscriber$$requested;

  private boolean akka$stream$actor$ActorSubscriber$$_canceled;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static akka.actor.Props props(java.nio.file.Path, scala.concurrent.Promise<akka.stream.IOResult>, int, scala.collection.immutable.Set<java.nio.file.StandardOpenOption>);
    Code:
       0: getstatic     #20                 // Field akka/stream/impl/io/FileSubscriber$.MODULE$:Lakka/stream/impl/io/FileSubscriber$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #22                 // Method akka/stream/impl/io/FileSubscriber$.props:(Ljava/nio/file/Path;Lscala/concurrent/Promise;ILscala/collection/immutable/Set;)Lakka/actor/Props;
      10: areturn

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #52                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$stream$actor$ActorSubscriber$$super$aroundReceive(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPreRestart(java.lang.Throwable, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #100                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public akka.stream.actor.ActorSubscriberState akka$stream$actor$ActorSubscriber$$state();
    Code:
       0: aload_0
       1: getfield      #103                // Field akka$stream$actor$ActorSubscriber$$state:Lakka/stream/actor/ActorSubscriberState;
       4: areturn

  public void akka$stream$actor$ActorSubscriber$_setter_$akka$stream$actor$ActorSubscriber$$state_$eq(akka.stream.actor.ActorSubscriberState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #103                // Field akka$stream$actor$ActorSubscriber$$state:Lakka/stream/actor/ActorSubscriberState;
       5: return

  public scala.Option akka$stream$actor$ActorSubscriber$$subscription();
    Code:
       0: aload_0
       1: getfield      #108                // Field akka$stream$actor$ActorSubscriber$$subscription:Lscala/Option;
       4: areturn

  public void akka$stream$actor$ActorSubscriber$$subscription_$eq(scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field akka$stream$actor$ActorSubscriber$$subscription:Lscala/Option;
       5: return

  public long akka$stream$actor$ActorSubscriber$$requested();
    Code:
       0: aload_0
       1: getfield      #113                // Field akka$stream$actor$ActorSubscriber$$requested:J
       4: lreturn

  public void akka$stream$actor$ActorSubscriber$$requested_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #113                // Field akka$stream$actor$ActorSubscriber$$requested:J
       5: return

  public boolean akka$stream$actor$ActorSubscriber$$_canceled();
    Code:
       0: aload_0
       1: getfield      #118                // Field akka$stream$actor$ActorSubscriber$$_canceled:Z
       4: ireturn

  public void akka$stream$actor$ActorSubscriber$$_canceled_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #118                // Field akka$stream$actor$ActorSubscriber$$_canceled:Z
       5: return

  public final boolean canceled();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method akka/stream/actor/ActorSubscriber$class.canceled:(Lakka/stream/actor/ActorSubscriber;)Z
       4: ireturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #129                // Method akka/stream/actor/ActorSubscriber$class.aroundReceive:(Lakka/stream/actor/ActorSubscriber;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #132                // Method akka/stream/actor/ActorSubscriber$class.aroundPreStart:(Lakka/stream/actor/ActorSubscriber;)V
       4: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // Method akka/stream/actor/ActorSubscriber$class.aroundPostRestart:(Lakka/stream/actor/ActorSubscriber;Ljava/lang/Throwable;)V
       5: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #138                // Method akka/stream/actor/ActorSubscriber$class.aroundPreRestart:(Lakka/stream/actor/ActorSubscriber;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #140                // Method akka/stream/actor/ActorSubscriber$class.aroundPostStop:(Lakka/stream/actor/ActorSubscriber;)V
       4: return

  public void request(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #144                // Method akka/stream/actor/ActorSubscriber$class.request:(Lakka/stream/actor/ActorSubscriber;J)V
       5: return

  public void cancel();
    Code:
       0: aload_0
       1: invokestatic  #148                // Method akka/stream/actor/ActorSubscriber$class.cancel:(Lakka/stream/actor/ActorSubscriber;)V
       4: return

  public int remainingRequested();
    Code:
       0: aload_0
       1: invokestatic  #153                // Method akka/stream/actor/ActorSubscriber$class.remainingRequested:(Lakka/stream/actor/ActorSubscriber;)I
       4: ireturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #156                // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #159                // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #156                // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #159                // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #167                // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #172                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #177                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #180                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public akka.stream.actor.WatermarkRequestStrategy requestStrategy();
    Code:
       0: aload_0
       1: getfield      #188                // Field requestStrategy:Lakka/stream/actor/WatermarkRequestStrategy;
       4: areturn

  public java.nio.channels.FileChannel akka$stream$impl$io$FileSubscriber$$chan();
    Code:
       0: aload_0
       1: getfield      #191                // Field akka$stream$impl$io$FileSubscriber$$chan:Ljava/nio/channels/FileChannel;
       4: areturn

  private void akka$stream$impl$io$FileSubscriber$$chan_$eq(java.nio.channels.FileChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #191                // Field akka$stream$impl$io$FileSubscriber$$chan:Ljava/nio/channels/FileChannel;
       5: return

  public long akka$stream$impl$io$FileSubscriber$$bytesWritten();
    Code:
       0: aload_0
       1: getfield      #195                // Field akka$stream$impl$io$FileSubscriber$$bytesWritten:J
       4: lreturn

  public void akka$stream$impl$io$FileSubscriber$$bytesWritten_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #195                // Field akka$stream$impl$io$FileSubscriber$$bytesWritten:J
       5: return

  public void preStart();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #199                // Field akka$stream$impl$io$FileSubscriber$$f:Ljava/nio/file/Path;
       5: getstatic     #204                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
       8: aload_0
       9: getfield      #206                // Field openOptions:Lscala/collection/immutable/Set;
      12: invokevirtual #210                // Method scala/collection/JavaConverters$.setAsJavaSetConverter:(Lscala/collection/Set;)Lscala/collection/convert/Decorators$AsJava;
      15: invokevirtual #216                // Method scala/collection/convert/Decorators$AsJava.asJava:()Ljava/lang/Object;
      18: checkcast     #218                // class java/util/Set
      21: iconst_0
      22: anewarray     #220                // class java/nio/file/attribute/FileAttribute
      25: invokestatic  #226                // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/FileChannel;
      28: invokespecial #228                // Method akka$stream$impl$io$FileSubscriber$$chan_$eq:(Ljava/nio/channels/FileChannel;)V
      31: aload_0
      32: invokestatic  #230                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
      35: goto          65
      38: astore_1
      39: aload_0
      40: getstatic     #235                // Field akka/stream/IOResult$.MODULE$:Lakka/stream/IOResult$;
      43: aload_0
      44: invokevirtual #237                // Method akka$stream$impl$io$FileSubscriber$$bytesWritten:()J
      47: new           #239                // class scala/util/Failure
      50: dup
      51: aload_1
      52: invokespecial #242                // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
      55: invokevirtual #246                // Method akka/stream/IOResult$.apply:(JLscala/util/Try;)Lakka/stream/IOResult;
      58: invokevirtual #250                // Method akka$stream$impl$io$FileSubscriber$$closeAndComplete:(Lakka/stream/IOResult;)V
      61: aload_0
      62: invokevirtual #252                // Method cancel:()V
      65: return
    Exception table:
       from    to  target type
           0    38    38   Class java/lang/Exception

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: new           #255                // class akka/stream/impl/io/FileSubscriber$$anonfun$receive$1
       3: dup
       4: aload_0
       5: invokespecial #258                // Method akka/stream/impl/io/FileSubscriber$$anonfun$receive$1."<init>":(Lakka/stream/impl/io/FileSubscriber;)V
       8: areturn

  public void postStop();
    Code:
       0: aload_0
       1: getstatic     #235                // Field akka/stream/IOResult$.MODULE$:Lakka/stream/IOResult$;
       4: aload_0
       5: invokevirtual #237                // Method akka$stream$impl$io$FileSubscriber$$bytesWritten:()J
       8: new           #261                // class scala/util/Success
      11: dup
      12: getstatic     #266                // Field akka/Done$.MODULE$:Lakka/Done$;
      15: invokespecial #268                // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
      18: invokevirtual #246                // Method akka/stream/IOResult$.apply:(JLscala/util/Try;)Lakka/stream/IOResult;
      21: invokevirtual #250                // Method akka$stream$impl$io$FileSubscriber$$closeAndComplete:(Lakka/stream/IOResult;)V
      24: aload_0
      25: invokestatic  #270                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
      28: return

  public void akka$stream$impl$io$FileSubscriber$$closeAndComplete(akka.stream.IOResult);
    Code:
       0: aload_0
       1: invokevirtual #272                // Method akka$stream$impl$io$FileSubscriber$$chan:()Ljava/nio/channels/FileChannel;
       4: ifnull        14
       7: aload_0
       8: invokevirtual #272                // Method akka$stream$impl$io$FileSubscriber$$chan:()Ljava/nio/channels/FileChannel;
      11: invokevirtual #275                // Method java/nio/channels/FileChannel.close:()V
      14: aload_0
      15: getfield      #277                // Field completionPromise:Lscala/concurrent/Promise;
      18: aload_1
      19: invokeinterface #283,  2          // InterfaceMethod scala/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      24: pop
      25: goto          57
      28: astore_2
      29: aload_0
      30: getfield      #277                // Field completionPromise:Lscala/concurrent/Promise;
      33: getstatic     #235                // Field akka/stream/IOResult$.MODULE$:Lakka/stream/IOResult$;
      36: aload_0
      37: invokevirtual #237                // Method akka$stream$impl$io$FileSubscriber$$bytesWritten:()J
      40: new           #239                // class scala/util/Failure
      43: dup
      44: aload_2
      45: invokespecial #242                // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
      48: invokevirtual #246                // Method akka/stream/IOResult$.apply:(JLscala/util/Try;)Lakka/stream/IOResult;
      51: invokeinterface #283,  2          // InterfaceMethod scala/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      56: pop
      57: return
    Exception table:
       from    to  target type
           0    28    28   Class java/lang/Exception

  public akka.stream.actor.RequestStrategy requestStrategy();
    Code:
       0: aload_0
       1: invokevirtual #288                // Method requestStrategy:()Lakka/stream/actor/WatermarkRequestStrategy;
       4: areturn

  public akka.stream.impl.io.FileSubscriber(java.nio.file.Path, scala.concurrent.Promise<akka.stream.IOResult>, int, scala.collection.immutable.Set<java.nio.file.StandardOpenOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #199                // Field akka$stream$impl$io$FileSubscriber$$f:Ljava/nio/file/Path;
       5: aload_0
       6: aload_2
       7: putfield      #277                // Field completionPromise:Lscala/concurrent/Promise;
      10: aload_0
      11: aload         4
      13: putfield      #206                // Field openOptions:Lscala/collection/immutable/Set;
      16: aload_0
      17: invokespecial #291                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #294                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
      24: aload_0
      25: invokestatic  #296                // Method akka/stream/actor/ActorSubscriber$class.$init$:(Lakka/stream/actor/ActorSubscriber;)V
      28: aload_0
      29: invokestatic  #299                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      32: aload_0
      33: getstatic     #304                // Field akka/stream/actor/WatermarkRequestStrategy$.MODULE$:Lakka/stream/actor/WatermarkRequestStrategy$;
      36: iload_3
      37: invokevirtual #307                // Method akka/stream/actor/WatermarkRequestStrategy$.apply:(I)Lakka/stream/actor/WatermarkRequestStrategy;
      40: putfield      #188                // Field requestStrategy:Lakka/stream/actor/WatermarkRequestStrategy;
      43: aload_0
      44: lconst_0
      45: putfield      #195                // Field akka$stream$impl$io$FileSubscriber$$bytesWritten:J
      48: return
}
