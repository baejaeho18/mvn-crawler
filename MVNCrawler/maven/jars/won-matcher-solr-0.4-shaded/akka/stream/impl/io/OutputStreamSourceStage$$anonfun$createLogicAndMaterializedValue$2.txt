Compiled from "OutputStreamSourceStage.scala"
public final class akka.stream.impl.io.OutputStreamSourceStage$$anonfun$createLogicAndMaterializedValue$2 extends scala.runtime.AbstractFunction1<akka.stream.impl.io.OutputStreamSourceStage$AdapterToStageMessage, scala.concurrent.Future<scala.runtime.BoxedUnit>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.stream.stage.GraphStageLogic logic$1;

  public final scala.concurrent.Future<scala.runtime.BoxedUnit> apply(akka.stream.impl.io.OutputStreamSourceStage$AdapterToStageMessage);
    Code:
       0: aload_0
       1: getfield      #23                 // Field logic$1:Lakka/stream/stage/GraphStageLogic;
       4: checkcast     #25                 // class akka/stream/impl/io/OutputStreamSourceStage$StageWithCallback
       7: aload_1
       8: invokeinterface #28,  2           // InterfaceMethod akka/stream/impl/io/OutputStreamSourceStage$StageWithCallback.wakeUp:(Lakka/stream/impl/io/OutputStreamSourceStage$AdapterToStageMessage;)Lscala/concurrent/Future;
      13: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class akka/stream/impl/io/OutputStreamSourceStage$AdapterToStageMessage
       5: invokevirtual #37                 // Method apply:(Lakka/stream/impl/io/OutputStreamSourceStage$AdapterToStageMessage;)Lscala/concurrent/Future;
       8: areturn

  public akka.stream.impl.io.OutputStreamSourceStage$$anonfun$createLogicAndMaterializedValue$2(akka.stream.impl.io.OutputStreamSourceStage, akka.stream.stage.GraphStageLogic);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #23                 // Field logic$1:Lakka/stream/stage/GraphStageLogic;
       5: aload_0
       6: invokespecial #44                 // Method scala/runtime/AbstractFunction1."<init>":()V
       9: return
}
