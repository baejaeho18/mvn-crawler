Compiled from "StreamLayout.scala"
public abstract class akka.stream.impl.StreamLayout$AtomicModule implements akka.stream.impl.StreamLayout$Module {
  private final scala.collection.immutable.Set<akka.stream.InPort> inPorts;

  private final scala.collection.immutable.Set<akka.stream.OutPort> outPorts;

  private volatile byte bitmap$0;

  private scala.collection.immutable.Set inPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #18                 // Field bitmap$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #23                 // Method akka/stream/impl/StreamLayout$Module$class.inPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #25                 // Field inPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #18                 // Field bitmap$0:B
      28: iconst_1
      29: ior
      30: i2b
      31: putfield      #18                 // Field bitmap$0:B
      34: getstatic     #31                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #25                 // Field inPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.InPort> inPorts();
    Code:
       0: aload_0
       1: getfield      #18                 // Field bitmap$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #37                 // Method inPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #25                 // Field inPorts:Lscala/collection/immutable/Set;
      22: areturn

  private scala.collection.immutable.Set outPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #18                 // Field bitmap$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #42                 // Method akka/stream/impl/StreamLayout$Module$class.outPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #44                 // Field outPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #18                 // Field bitmap$0:B
      28: iconst_2
      29: ior
      30: i2b
      31: putfield      #18                 // Field bitmap$0:B
      34: getstatic     #31                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #44                 // Field outPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.OutPort> outPorts();
    Code:
       0: aload_0
       1: getfield      #18                 // Field bitmap$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #46                 // Method outPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #44                 // Field outPorts:Lscala/collection/immutable/Set;
      22: areturn

  public int akka$stream$impl$StreamLayout$Module$$super$hashCode();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public boolean akka$stream$impl$StreamLayout$Module$$super$equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #56                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean isRunnable();
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method akka/stream/impl/StreamLayout$Module$class.isRunnable:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isSink();
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method akka/stream/impl/StreamLayout$Module$class.isSink:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isSource();
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method akka/stream/impl/StreamLayout$Module$class.isSource:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isFlow();
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method akka/stream/impl/StreamLayout$Module$class.isFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isBidiFlow();
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method akka/stream/impl/StreamLayout$Module$class.isBidiFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isAtomic();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method akka/stream/impl/StreamLayout$Module$class.isAtomic:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isCopied();
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method akka/stream/impl/StreamLayout$Module$class.isCopied:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isFused();
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method akka/stream/impl/StreamLayout$Module$class.isFused:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #89                 // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       7: areturn

  public final <A, B, C> akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #99                 // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
       9: areturn

  public final akka.stream.impl.StreamLayout$Module wire(akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #105                // Method akka/stream/impl/StreamLayout$Module$class.wire:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       6: areturn

  public final akka.stream.impl.StreamLayout$Module transformMaterializedValue(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // Method akka/stream/impl/StreamLayout$Module$class.transformMaterializedValue:(Lakka/stream/impl/StreamLayout$Module;Lscala/Function1;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // Method akka/stream/impl/StreamLayout$Module$class.compose:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public <A, B, C> akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // Method akka/stream/impl/StreamLayout$Module$class.compose:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
       6: areturn

  public akka.stream.impl.StreamLayout$Module composeNoMat(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // Method akka/stream/impl/StreamLayout$Module$class.composeNoMat:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public final boolean isSealed();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method akka/stream/impl/StreamLayout$Module$class.isSealed:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public akka.stream.impl.StreamLayout$MaterializedValueNode materializedValueComputation();
    Code:
       0: aload_0
       1: invokestatic  #131                // Method akka/stream/impl/StreamLayout$Module$class.materializedValueComputation:(Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$MaterializedValueNode;
       4: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #134                // Method akka/stream/impl/StreamLayout$Module$class.hashCode:(Lakka/stream/impl/StreamLayout$Module;)I
       4: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method akka/stream/impl/StreamLayout$Module$class.equals:(Lakka/stream/impl/StreamLayout$Module;Ljava/lang/Object;)Z
       5: ireturn

  public final scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module> subModules();
    Code:
       0: getstatic     #145                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #149                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       6: invokevirtual #154                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
       9: areturn

  public final scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort> downstreams();
    Code:
       0: aload_0
       1: invokestatic  #159                // Method akka/stream/impl/StreamLayout$Module$class.downstreams:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Map;
       4: areturn

  public final scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort> upstreams();
    Code:
       0: aload_0
       1: invokestatic  #162                // Method akka/stream/impl/StreamLayout$Module$class.upstreams:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Map;
       4: areturn

  public akka.stream.impl.StreamLayout$AtomicModule();
    Code:
       0: aload_0
       1: invokespecial #166                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #170                // Method akka/stream/impl/StreamLayout$Module$class.$init$:(Lakka/stream/impl/StreamLayout$Module;)V
       8: return
}
