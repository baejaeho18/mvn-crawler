Compiled from "SinkholeSubscriber.scala"
public final class akka.stream.impl.SinkholeSubscriber<T> implements org.reactivestreams.Subscriber<T> {
  private final scala.concurrent.Promise<akka.Done> whenComplete;

  private boolean running;

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #24                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #27                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullSubscription:(Lorg/reactivestreams/Subscription;)V
       7: aload_0
       8: getfield      #29                 // Field running:Z
      11: ifeq          23
      14: aload_1
      15: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      20: goto          37
      23: aload_0
      24: iconst_1
      25: putfield      #29                 // Field running:Z
      28: aload_1
      29: ldc2_w        #36                 // long 9223372036854775807l
      32: invokeinterface #41,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      37: return

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #24                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #50                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullException:(Ljava/lang/Throwable;)V
       7: aload_0
       8: getfield      #52                 // Field whenComplete:Lscala/concurrent/Promise;
      11: aload_1
      12: invokeinterface #58,  2           // InterfaceMethod scala/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      17: pop
      18: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #52                 // Field whenComplete:Lscala/concurrent/Promise;
       4: getstatic     #66                 // Field akka/Done$.MODULE$:Lakka/Done$;
       7: invokeinterface #70,  2           // InterfaceMethod scala/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      12: pop
      13: return

  public void onNext(T);
    Code:
       0: getstatic     #24                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #75                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullElement:(Ljava/lang/Object;)V
       7: return

  public akka.stream.impl.SinkholeSubscriber(scala.concurrent.Promise<akka.Done>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field whenComplete:Lscala/concurrent/Promise;
       5: aload_0
       6: invokespecial #81                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #29                 // Field running:Z
      14: return
}
