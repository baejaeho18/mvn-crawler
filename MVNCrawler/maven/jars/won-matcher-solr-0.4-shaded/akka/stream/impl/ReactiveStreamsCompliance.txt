Compiled from "ReactiveStreamsCompliance.scala"
public final class akka.stream.impl.ReactiveStreamsCompliance {
  public static void tryCancel(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #18                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryCancel:(Lorg/reactivestreams/Subscription;)V
       7: return

  public static void tryRequest(org.reactivestreams.Subscription, long);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: lload_1
       5: invokevirtual #22                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryRequest:(Lorg/reactivestreams/Subscription;J)V
       8: return

  public static <T> void tryOnComplete(org.reactivestreams.Subscriber<T>);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #26                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnComplete:(Lorg/reactivestreams/Subscriber;)V
       7: return

  public static <T> void tryOnSubscribe(org.reactivestreams.Subscriber<T>, org.reactivestreams.Subscription);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnSubscribe:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Subscription;)V
       8: return

  public static <T> void tryOnNext(org.reactivestreams.Subscriber<T>, T);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: aload_1
       5: invokevirtual #34                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnNext:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V
       8: return

  public static <T> void tryOnError(org.reactivestreams.Subscriber<T>, java.lang.Throwable);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: aload_1
       5: invokevirtual #38                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnError:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
       8: return

  public static void requireNonNullSubscription(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #41                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullSubscription:(Lorg/reactivestreams/Subscription;)V
       7: return

  public static <T> void requireNonNullElement(T);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #45                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullElement:(Ljava/lang/Object;)V
       7: return

  public static void requireNonNullException(java.lang.Throwable);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #49                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullException:(Ljava/lang/Throwable;)V
       7: return

  public static <T> void requireNonNullSubscriber(org.reactivestreams.Subscriber<T>);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #52                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullSubscriber:(Lorg/reactivestreams/Subscriber;)V
       7: return

  public static <T> void rejectDueToNonPositiveDemand(org.reactivestreams.Subscriber<T>);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #55                 // Method akka/stream/impl/ReactiveStreamsCompliance$.rejectDueToNonPositiveDemand:(Lorg/reactivestreams/Subscriber;)V
       7: return

  public static <T> void rejectAdditionalSubscriber(org.reactivestreams.Subscriber<T>, java.lang.String);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: aload_1
       5: invokevirtual #59                 // Method akka/stream/impl/ReactiveStreamsCompliance$.rejectAdditionalSubscriber:(Lorg/reactivestreams/Subscriber;Ljava/lang/String;)V
       8: return

  public static <T> void rejectDuplicateSubscriber(org.reactivestreams.Subscriber<T>);
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_0
       4: invokevirtual #62                 // Method akka/stream/impl/ReactiveStreamsCompliance$.rejectDuplicateSubscriber:(Lorg/reactivestreams/Subscriber;)V
       7: return

  public static java.lang.Throwable subscriptionMustNotBeNullException();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #66                 // Method akka/stream/impl/ReactiveStreamsCompliance$.subscriptionMustNotBeNullException:()Ljava/lang/Throwable;
       6: areturn

  public static java.lang.Throwable elementMustNotBeNullException();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #69                 // Method akka/stream/impl/ReactiveStreamsCompliance$.elementMustNotBeNullException:()Ljava/lang/Throwable;
       6: areturn

  public static java.lang.Throwable exceptionMustNotBeNullException();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #72                 // Method akka/stream/impl/ReactiveStreamsCompliance$.exceptionMustNotBeNullException:()Ljava/lang/Throwable;
       6: areturn

  public static java.lang.Throwable subscriberMustNotBeNullException();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #75                 // Method akka/stream/impl/ReactiveStreamsCompliance$.subscriberMustNotBeNullException:()Ljava/lang/Throwable;
       6: areturn

  public static java.lang.Throwable canNotSubscribeTheSameSubscriberMultipleTimesException();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #78                 // Method akka/stream/impl/ReactiveStreamsCompliance$.canNotSubscribeTheSameSubscriberMultipleTimesException:()Ljava/lang/Throwable;
       6: areturn

  public static java.lang.Throwable numberOfElementsInRequestMustBePositiveException();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #81                 // Method akka/stream/impl/ReactiveStreamsCompliance$.numberOfElementsInRequestMustBePositiveException:()Ljava/lang/Throwable;
       6: areturn

  public static java.lang.String SubscriptionMustNotBeNullMsg();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #85                 // Method akka/stream/impl/ReactiveStreamsCompliance$.SubscriptionMustNotBeNullMsg:()Ljava/lang/String;
       6: areturn

  public static java.lang.String ElementMustNotBeNullMsg();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #88                 // Method akka/stream/impl/ReactiveStreamsCompliance$.ElementMustNotBeNullMsg:()Ljava/lang/String;
       6: areturn

  public static java.lang.String ExceptionMustNotBeNullMsg();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #91                 // Method akka/stream/impl/ReactiveStreamsCompliance$.ExceptionMustNotBeNullMsg:()Ljava/lang/String;
       6: areturn

  public static java.lang.String SubscriberMustNotBeNullMsg();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #94                 // Method akka/stream/impl/ReactiveStreamsCompliance$.SubscriberMustNotBeNullMsg:()Ljava/lang/String;
       6: areturn

  public static java.lang.String NumberOfElementsInRequestMustBePositiveMsg();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #97                 // Method akka/stream/impl/ReactiveStreamsCompliance$.NumberOfElementsInRequestMustBePositiveMsg:()Ljava/lang/String;
       6: areturn

  public static java.lang.String SupportsOnlyASingleSubscriber();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #100                // Method akka/stream/impl/ReactiveStreamsCompliance$.SupportsOnlyASingleSubscriber:()Ljava/lang/String;
       6: areturn

  public static java.lang.String CanNotSubscribeTheSameSubscriberMultipleTimes();
    Code:
       0: getstatic     #16                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: invokevirtual #103                // Method akka/stream/impl/ReactiveStreamsCompliance$.CanNotSubscribeTheSameSubscriberMultipleTimes:()Ljava/lang/String;
       6: areturn
}
