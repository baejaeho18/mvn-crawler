Compiled from "StreamLayout.scala"
public final class akka.stream.impl.StreamLayout$CopiedModule implements akka.stream.impl.StreamLayout$Module,scala.Product,scala.Serializable {
  private final akka.stream.Shape shape;

  private final akka.stream.Attributes attributes;

  private final akka.stream.impl.StreamLayout$Module copyOf;

  private final scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module> subModules;

  private final akka.stream.impl.StreamLayout$MaterializedValueNode materializedValueComputation;

  private final scala.collection.immutable.Set<akka.stream.InPort> inPorts;

  private final scala.collection.immutable.Set<akka.stream.OutPort> outPorts;

  private volatile byte bitmap$0;

  private scala.collection.immutable.Set inPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #32                 // Field bitmap$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #37                 // Method akka/stream/impl/StreamLayout$Module$class.inPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #39                 // Field inPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #32                 // Field bitmap$0:B
      28: iconst_1
      29: ior
      30: i2b
      31: putfield      #32                 // Field bitmap$0:B
      34: getstatic     #45                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #39                 // Field inPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.InPort> inPorts();
    Code:
       0: aload_0
       1: getfield      #32                 // Field bitmap$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #51                 // Method inPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #39                 // Field inPorts:Lscala/collection/immutable/Set;
      22: areturn

  private scala.collection.immutable.Set outPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #32                 // Field bitmap$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #56                 // Method akka/stream/impl/StreamLayout$Module$class.outPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #58                 // Field outPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #32                 // Field bitmap$0:B
      28: iconst_2
      29: ior
      30: i2b
      31: putfield      #32                 // Field bitmap$0:B
      34: getstatic     #45                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #58                 // Field outPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.OutPort> outPorts();
    Code:
       0: aload_0
       1: getfield      #32                 // Field bitmap$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #60                 // Method outPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #58                 // Field outPorts:Lscala/collection/immutable/Set;
      22: areturn

  public int akka$stream$impl$StreamLayout$Module$$super$hashCode();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public boolean akka$stream$impl$StreamLayout$Module$$super$equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean isRunnable();
    Code:
       0: aload_0
       1: invokestatic  #77                 // Method akka/stream/impl/StreamLayout$Module$class.isRunnable:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isSink();
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method akka/stream/impl/StreamLayout$Module$class.isSink:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isSource();
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method akka/stream/impl/StreamLayout$Module$class.isSource:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isFlow();
    Code:
       0: aload_0
       1: invokestatic  #86                 // Method akka/stream/impl/StreamLayout$Module$class.isFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isBidiFlow();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method akka/stream/impl/StreamLayout$Module$class.isBidiFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isAtomic();
    Code:
       0: aload_0
       1: invokestatic  #92                 // Method akka/stream/impl/StreamLayout$Module$class.isAtomic:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isFused();
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method akka/stream/impl/StreamLayout$Module$class.isFused:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #100                // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       7: areturn

  public final <A, B, C> akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #109                // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
       9: areturn

  public final akka.stream.impl.StreamLayout$Module wire(akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #115                // Method akka/stream/impl/StreamLayout$Module$class.wire:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       6: areturn

  public final akka.stream.impl.StreamLayout$Module transformMaterializedValue(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method akka/stream/impl/StreamLayout$Module$class.transformMaterializedValue:(Lakka/stream/impl/StreamLayout$Module;Lscala/Function1;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // Method akka/stream/impl/StreamLayout$Module$class.compose:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public <A, B, C> akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // Method akka/stream/impl/StreamLayout$Module$class.compose:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
       6: areturn

  public akka.stream.impl.StreamLayout$Module composeNoMat(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method akka/stream/impl/StreamLayout$Module$class.composeNoMat:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public final boolean isSealed();
    Code:
       0: aload_0
       1: invokestatic  #136                // Method akka/stream/impl/StreamLayout$Module$class.isSealed:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort> downstreams();
    Code:
       0: aload_0
       1: invokestatic  #141                // Method akka/stream/impl/StreamLayout$Module$class.downstreams:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort> upstreams();
    Code:
       0: aload_0
       1: invokestatic  #144                // Method akka/stream/impl/StreamLayout$Module$class.upstreams:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Map;
       4: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #147                // Method akka/stream/impl/StreamLayout$Module$class.hashCode:(Lakka/stream/impl/StreamLayout$Module;)I
       4: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // Method akka/stream/impl/StreamLayout$Module$class.equals:(Lakka/stream/impl/StreamLayout$Module;Ljava/lang/Object;)Z
       5: ireturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: getfield      #154                // Field shape:Lakka/stream/Shape;
       4: areturn

  public akka.stream.Attributes attributes();
    Code:
       0: aload_0
       1: getfield      #157                // Field attributes:Lakka/stream/Attributes;
       4: areturn

  public akka.stream.impl.StreamLayout$Module copyOf();
    Code:
       0: aload_0
       1: getfield      #160                // Field copyOf:Lakka/stream/impl/StreamLayout$Module;
       4: areturn

  public scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module> subModules();
    Code:
       0: aload_0
       1: getfield      #162                // Field subModules:Lscala/collection/immutable/Set;
       4: areturn

  public akka.stream.impl.StreamLayout$Module withAttributes(akka.stream.Attributes);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #166                // Method attributes:()Lakka/stream/Attributes;
       5: if_acmpeq     32
       8: aload_1
       9: astore_2
      10: aload_0
      11: invokevirtual #169                // Method copy$default$1:()Lakka/stream/Shape;
      14: astore_3
      15: aload_0
      16: invokevirtual #172                // Method copy$default$3:()Lakka/stream/impl/StreamLayout$Module;
      19: astore        4
      21: aload_0
      22: aload_3
      23: aload_2
      24: aload         4
      26: invokevirtual #176                // Method copy:(Lakka/stream/Shape;Lakka/stream/Attributes;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$CopiedModule;
      29: goto          33
      32: aload_0
      33: areturn

  public akka.stream.impl.StreamLayout$Module carbonCopy();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #183                // Method shape:()Lakka/stream/Shape;
       5: invokevirtual #188                // Method akka/stream/Shape.deepCopy:()Lakka/stream/Shape;
       8: aload_0
       9: invokevirtual #191                // Method copy$default$2:()Lakka/stream/Attributes;
      12: aload_0
      13: invokevirtual #172                // Method copy$default$3:()Lakka/stream/impl/StreamLayout$Module;
      16: invokevirtual #176                // Method copy:(Lakka/stream/Shape;Lakka/stream/Attributes;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$CopiedModule;
      19: areturn

  public akka.stream.impl.StreamLayout$Module replaceShape(akka.stream.Shape);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #183                // Method shape:()Lakka/stream/Shape;
       5: astore_2
       6: dup
       7: ifnonnull     18
      10: pop
      11: aload_2
      12: ifnull        25
      15: goto          29
      18: aload_2
      19: invokevirtual #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifeq          29
      25: aload_0
      26: goto          45
      29: aload_0
      30: invokevirtual #183                // Method shape:()Lakka/stream/Shape;
      33: aload_1
      34: invokevirtual #197                // Method akka/stream/Shape.requireSamePortsAs:(Lakka/stream/Shape;)V
      37: getstatic     #203                // Field akka/stream/impl/StreamLayout$CompositeModule$.MODULE$:Lakka/stream/impl/StreamLayout$CompositeModule$;
      40: aload_0
      41: aload_1
      42: invokevirtual #207                // Method akka/stream/impl/StreamLayout$CompositeModule$.apply:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/Shape;)Lakka/stream/impl/StreamLayout$CompositeModule;
      45: areturn

  public akka.stream.impl.StreamLayout$MaterializedValueNode materializedValueComputation();
    Code:
       0: aload_0
       1: getfield      #211                // Field materializedValueComputation:Lakka/stream/impl/StreamLayout$MaterializedValueNode;
       4: areturn

  public boolean isCopied();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #220                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: istore_1
       5: aload_0
       6: invokevirtual #222                // Method copyOf:()Lakka/stream/impl/StreamLayout$Module;
       9: astore_2
      10: new           #224                // class scala/collection/immutable/StringOps
      13: dup
      14: ldc           #226                // String [%08x] copy of %s
      16: invokespecial #230                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
      19: getstatic     #235                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: iconst_2
      23: anewarray     #4                  // class java/lang/Object
      26: dup
      27: iconst_0
      28: iload_1
      29: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_2
      36: aastore
      37: invokevirtual #245                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      40: invokevirtual #249                // Method scala/collection/immutable/StringOps.format:(Lscala/collection/Seq;)Ljava/lang/String;
      43: areturn

  public akka.stream.impl.StreamLayout$CopiedModule copy(akka.stream.Shape, akka.stream.Attributes, akka.stream.impl.StreamLayout$Module);
    Code:
       0: new           #2                  // class akka/stream/impl/StreamLayout$CopiedModule
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #255                // Method "<init>":(Lakka/stream/Shape;Lakka/stream/Attributes;Lakka/stream/impl/StreamLayout$Module;)V
      10: areturn

  public akka.stream.Shape copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #183                // Method shape:()Lakka/stream/Shape;
       4: areturn

  public akka.stream.Attributes copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #166                // Method attributes:()Lakka/stream/Attributes;
       4: areturn

  public akka.stream.impl.StreamLayout$Module copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #222                // Method copyOf:()Lakka/stream/impl/StreamLayout$Module;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #258                // String CopiedModule
       3: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 57
                     1: 50
                     2: 43
               default: 28
          }
      28: new           #263                // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #265                // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #266                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #222                // Method copyOf:()Lakka/stream/impl/StreamLayout$Module;
      47: goto          61
      50: aload_0
      51: invokevirtual #166                // Method attributes:()Lakka/stream/Attributes;
      54: goto          61
      57: aload_0
      58: invokevirtual #183                // Method shape:()Lakka/stream/Shape;
      61: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #273                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #277                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/StreamLayout$CopiedModule
       4: ireturn

  public akka.stream.impl.StreamLayout$CopiedModule(akka.stream.Shape, akka.stream.Attributes, akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #154                // Field shape:Lakka/stream/Shape;
       5: aload_0
       6: aload_2
       7: putfield      #157                // Field attributes:Lakka/stream/Attributes;
      10: aload_0
      11: aload_3
      12: putfield      #160                // Field copyOf:Lakka/stream/impl/StreamLayout$Module;
      15: aload_0
      16: invokespecial #281                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #285                // Method akka/stream/impl/StreamLayout$Module$class.$init$:(Lakka/stream/impl/StreamLayout$Module;)V
      23: aload_0
      24: invokestatic  #290                // Method scala/Product$class.$init$:(Lscala/Product;)V
      27: aload_0
      28: getstatic     #235                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      31: invokevirtual #294                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
      34: getstatic     #235                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      37: iconst_1
      38: anewarray     #6                  // class akka/stream/impl/StreamLayout$Module
      41: dup
      42: iconst_0
      43: aload_3
      44: aastore
      45: checkcast     #296                // class "[Ljava/lang/Object;"
      48: invokevirtual #300                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      51: invokevirtual #305                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      54: checkcast     #53                 // class scala/collection/immutable/Set
      57: putfield      #162                // Field subModules:Lscala/collection/immutable/Set;
      60: aload_0
      61: new           #307                // class akka/stream/impl/StreamLayout$Atomic
      64: dup
      65: aload_3
      66: invokespecial #309                // Method akka/stream/impl/StreamLayout$Atomic."<init>":(Lakka/stream/impl/StreamLayout$Module;)V
      69: putfield      #211                // Field materializedValueComputation:Lakka/stream/impl/StreamLayout$MaterializedValueNode;
      72: return
}
