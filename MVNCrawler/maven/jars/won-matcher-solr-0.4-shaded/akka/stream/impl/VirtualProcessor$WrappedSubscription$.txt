Compiled from "StreamLayout.scala"
public class akka.stream.impl.VirtualProcessor$WrappedSubscription$ implements scala.Serializable {
  private final akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$Buffering NoBufferedDemand;

  private volatile akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$PassThrough$ PassThrough$module;

  private volatile akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$Buffering$ Buffering$module;

  private akka.stream.impl.VirtualProcessor$WrappedSubscription$PassThrough$ PassThrough$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #20                 // Field PassThrough$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
       8: ifnonnull     23
      11: aload_0
      12: new           #22                 // class akka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$
      15: dup
      16: aload_0
      17: invokespecial #26                 // Method akka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$."<init>":(Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;)V
      20: putfield      #20                 // Field PassThrough$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
      23: getstatic     #32                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #20                 // Field PassThrough$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  private akka.stream.impl.VirtualProcessor$WrappedSubscription$Buffering$ Buffering$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #40                 // Field Buffering$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$;
       8: ifnonnull     23
      11: aload_0
      12: new           #42                 // class akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$
      15: dup
      16: aload_0
      17: invokespecial #43                 // Method akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$."<init>":(Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;)V
      20: putfield      #40                 // Field Buffering$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$;
      23: getstatic     #32                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_1
      28: monitorexit
      29: aconst_null
      30: pop
      31: aload_0
      32: getfield      #40                 // Field Buffering$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$;
      35: areturn
      36: aload_1
      37: monitorexit
      38: athrow
    Exception table:
       from    to  target type
           4    29    36   any

  public akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$PassThrough$ PassThrough();
    Code:
       0: aload_0
       1: getfield      #20                 // Field PassThrough$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #46                 // Method PassThrough$lzycompute:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
      11: goto          18
      14: aload_0
      15: getfield      #20                 // Field PassThrough$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
      18: areturn

  public akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$Buffering$ Buffering();
    Code:
       0: aload_0
       1: getfield      #40                 // Field Buffering$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #49                 // Method Buffering$lzycompute:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$;
      11: goto          18
      14: aload_0
      15: getfield      #40                 // Field Buffering$module:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering$;
      18: areturn

  public akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$Buffering NoBufferedDemand();
    Code:
       0: aload_0
       1: getfield      #52                 // Field NoBufferedDemand:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering;
       4: areturn

  public akka.stream.impl.VirtualProcessor$WrappedSubscription$(akka.stream.impl.VirtualProcessor<T>);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #58                 // class akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering
       8: dup
       9: aload_0
      10: lconst_0
      11: invokespecial #61                 // Method akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering."<init>":(Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;J)V
      14: putfield      #52                 // Field NoBufferedDemand:Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering;
      17: return
}
