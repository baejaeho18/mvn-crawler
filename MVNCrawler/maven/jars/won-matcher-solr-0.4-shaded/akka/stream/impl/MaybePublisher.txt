Compiled from "CompletedPublishers.scala"
public final class akka.stream.impl.MaybePublisher<T> implements org.reactivestreams.Publisher<T>, scala.Product, scala.Serializable {
  private final scala.concurrent.Promise<scala.Option<T>> promise;

  private final java.lang.String name;

  public final scala.concurrent.ExecutionContext akka$stream$impl$MaybePublisher$$ec;

  public static <T> scala.Option<scala.Tuple2<scala.concurrent.Promise<scala.Option<T>>, java.lang.String>> unapply(akka.stream.impl.MaybePublisher<T>);
    Code:
       0: getstatic     #23                 // Field akka/stream/impl/MaybePublisher$.MODULE$:Lakka/stream/impl/MaybePublisher$;
       3: aload_0
       4: invokevirtual #25                 // Method akka/stream/impl/MaybePublisher$.unapply:(Lakka/stream/impl/MaybePublisher;)Lscala/Option;
       7: areturn

  public static <T> akka.stream.impl.MaybePublisher<T> apply(scala.concurrent.Promise<scala.Option<T>>, java.lang.String, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #23                 // Field akka/stream/impl/MaybePublisher$.MODULE$:Lakka/stream/impl/MaybePublisher$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #29                 // Method akka/stream/impl/MaybePublisher$.apply:(Lscala/concurrent/Promise;Ljava/lang/String;Lscala/concurrent/ExecutionContext;)Lakka/stream/impl/MaybePublisher;
       9: areturn

  public scala.concurrent.Promise<scala.Option<T>> promise();
    Code:
       0: aload_0
       1: getfield      #39                 // Field promise:Lscala/concurrent/Promise;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #44                 // Field name:Ljava/lang/String;
       4: areturn

  public void subscribe(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: getstatic     #51                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       3: aload_1
       4: invokevirtual #54                 // Method akka/stream/impl/ReactiveStreamsCompliance$.requireNonNullSubscriber:(Lorg/reactivestreams/Subscriber;)V
       7: getstatic     #51                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      10: aload_1
      11: new           #56                 // class akka/stream/impl/MaybePublisher$MaybeSubscription
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #60                 // Method akka/stream/impl/MaybePublisher$MaybeSubscription."<init>":(Lakka/stream/impl/MaybePublisher;Lorg/reactivestreams/Subscriber;)V
      20: invokevirtual #64                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryOnSubscribe:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Subscription;)V
      23: aload_0
      24: invokevirtual #66                 // Method promise:()Lscala/concurrent/Promise;
      27: invokeinterface #72,  1           // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      32: new           #74                 // class akka/stream/impl/MaybePublisher$$anonfun$subscribe$1
      35: dup
      36: aload_0
      37: aload_1
      38: invokespecial #75                 // Method akka/stream/impl/MaybePublisher$$anonfun$subscribe$1."<init>":(Lakka/stream/impl/MaybePublisher;Lorg/reactivestreams/Subscriber;)V
      41: aload_0
      42: getfield      #77                 // Field akka$stream$impl$MaybePublisher$$ec:Lscala/concurrent/ExecutionContext;
      45: invokeinterface #83,  3           // InterfaceMethod scala/concurrent/Future.onFailure:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
      50: goto          88
      53: astore_2
      54: aload_2
      55: astore_3
      56: aload_3
      57: instanceof    #85                 // class akka/stream/impl/ReactiveStreamsCompliance$SpecViolation
      60: ifeq          89
      63: aload_3
      64: checkcast     #85                 // class akka/stream/impl/ReactiveStreamsCompliance$SpecViolation
      67: astore        4
      69: aload_0
      70: getfield      #77                 // Field akka$stream$impl$MaybePublisher$$ec:Lscala/concurrent/ExecutionContext;
      73: aload         4
      75: checkcast     #87                 // class java/lang/Throwable
      78: invokeinterface #93,  2           // InterfaceMethod scala/concurrent/ExecutionContext.reportFailure:(Ljava/lang/Throwable;)V
      83: getstatic     #99                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      86: astore        5
      88: return
      89: aload_2
      90: athrow
    Exception table:
       from    to  target type
           0    53    53   any

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method name:()Ljava/lang/String;
       4: areturn

  public <T> akka.stream.impl.MaybePublisher<T> copy(scala.concurrent.Promise<scala.Option<T>>, java.lang.String, scala.concurrent.ExecutionContext);
    Code:
       0: new           #2                  // class akka/stream/impl/MaybePublisher
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #108                // Method "<init>":(Lscala/concurrent/Promise;Ljava/lang/String;Lscala/concurrent/ExecutionContext;)V
      10: areturn

  public <T> scala.concurrent.Promise<scala.Option<T>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method promise:()Lscala/concurrent/Promise;
       4: areturn

  public <T> java.lang.String copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method name:()Ljava/lang/String;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #114                // String MaybePublisher
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #120                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #126                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #128                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #131                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #104                // Method name:()Ljava/lang/String;
      43: goto          50
      46: aload_0
      47: invokevirtual #66                 // Method promise:()Lscala/concurrent/Promise;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #140                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #144                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/MaybePublisher
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #140                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #152                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     103
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/MaybePublisher
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          107
      25: aload_1
      26: checkcast     #2                  // class akka/stream/impl/MaybePublisher
      29: astore        4
      31: aload_0
      32: invokevirtual #66                 // Method promise:()Lscala/concurrent/Promise;
      35: aload         4
      37: invokevirtual #66                 // Method promise:()Lscala/concurrent/Promise;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          99
      55: aload         5
      57: invokevirtual #155                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: invokevirtual #104                // Method name:()Ljava/lang/String;
      67: aload         4
      69: invokevirtual #104                // Method name:()Ljava/lang/String;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          99
      87: aload         6
      89: invokevirtual #155                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ireturn

  public akka.stream.impl.MaybePublisher(scala.concurrent.Promise<scala.Option<T>>, java.lang.String, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field promise:Lscala/concurrent/Promise;
       5: aload_0
       6: aload_2
       7: putfield      #44                 // Field name:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #77                 // Field akka$stream$impl$MaybePublisher$$ec:Lscala/concurrent/ExecutionContext;
      15: aload_0
      16: invokespecial #160                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #166                // Method scala/Product$class.$init$:(Lscala/Product;)V
      23: return
}
