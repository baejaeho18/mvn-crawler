Compiled from "StreamLayout.scala"
public class akka.stream.impl.StreamLayout$EmptyModule$ implements akka.stream.impl.StreamLayout$Module,scala.Product,scala.Serializable {
  public static final akka.stream.impl.StreamLayout$EmptyModule$ MODULE$;

  private final scala.collection.immutable.Set<akka.stream.InPort> inPorts;

  private final scala.collection.immutable.Set<akka.stream.OutPort> outPorts;

  private volatile byte bitmap$0;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/impl/StreamLayout$EmptyModule$
       3: invokespecial #18                 // Method "<init>":()V
       6: return

  private scala.collection.immutable.Set inPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #29                 // Field bitmap$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #34                 // Method akka/stream/impl/StreamLayout$Module$class.inPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #36                 // Field inPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #29                 // Field bitmap$0:B
      28: iconst_1
      29: ior
      30: i2b
      31: putfield      #29                 // Field bitmap$0:B
      34: getstatic     #42                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #36                 // Field inPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.InPort> inPorts();
    Code:
       0: aload_0
       1: getfield      #29                 // Field bitmap$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #47                 // Method inPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #36                 // Field inPorts:Lscala/collection/immutable/Set;
      22: areturn

  private scala.collection.immutable.Set outPorts$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #29                 // Field bitmap$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #52                 // Method akka/stream/impl/StreamLayout$Module$class.outPorts:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Set;
      20: putfield      #54                 // Field outPorts:Lscala/collection/immutable/Set;
      23: aload_0
      24: aload_0
      25: getfield      #29                 // Field bitmap$0:B
      28: iconst_2
      29: ior
      30: i2b
      31: putfield      #29                 // Field bitmap$0:B
      34: getstatic     #42                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #54                 // Field outPorts:Lscala/collection/immutable/Set;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public final scala.collection.immutable.Set<akka.stream.OutPort> outPorts();
    Code:
       0: aload_0
       1: getfield      #29                 // Field bitmap$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #56                 // Method outPorts$lzycompute:()Lscala/collection/immutable/Set;
      15: goto          22
      18: aload_0
      19: getfield      #54                 // Field outPorts:Lscala/collection/immutable/Set;
      22: areturn

  public int akka$stream$impl$StreamLayout$Module$$super$hashCode();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public boolean akka$stream$impl$StreamLayout$Module$$super$equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public final boolean isSink();
    Code:
       0: aload_0
       1: invokestatic  #73                 // Method akka/stream/impl/StreamLayout$Module$class.isSink:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isSource();
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method akka/stream/impl/StreamLayout$Module$class.isSource:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isFlow();
    Code:
       0: aload_0
       1: invokestatic  #79                 // Method akka/stream/impl/StreamLayout$Module$class.isFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final boolean isBidiFlow();
    Code:
       0: aload_0
       1: invokestatic  #82                 // Method akka/stream/impl/StreamLayout$Module$class.isBidiFlow:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isCopied();
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method akka/stream/impl/StreamLayout$Module$class.isCopied:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public boolean isFused();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method akka/stream/impl/StreamLayout$Module$class.isFused:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public final akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #93                 // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       7: areturn

  public final <A, B, C> akka.stream.impl.StreamLayout$Module fuse(akka.stream.impl.StreamLayout$Module, akka.stream.OutPort, akka.stream.InPort, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #103                // Method akka/stream/impl/StreamLayout$Module$class.fuse:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
       9: areturn

  public final akka.stream.impl.StreamLayout$Module wire(akka.stream.OutPort, akka.stream.InPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #109                // Method akka/stream/impl/StreamLayout$Module$class.wire:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/OutPort;Lakka/stream/InPort;)Lakka/stream/impl/StreamLayout$Module;
       6: areturn

  public final akka.stream.impl.StreamLayout$Module transformMaterializedValue(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // Method akka/stream/impl/StreamLayout$Module$class.transformMaterializedValue:(Lakka/stream/impl/StreamLayout$Module;Lscala/Function1;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public akka.stream.impl.StreamLayout$Module composeNoMat(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method akka/stream/impl/StreamLayout$Module$class.composeNoMat:(Lakka/stream/impl/StreamLayout$Module;Lakka/stream/impl/StreamLayout$Module;)Lakka/stream/impl/StreamLayout$Module;
       5: areturn

  public final boolean isSealed();
    Code:
       0: aload_0
       1: invokestatic  #123                // Method akka/stream/impl/StreamLayout$Module$class.isSealed:(Lakka/stream/impl/StreamLayout$Module;)Z
       4: ireturn

  public scala.collection.immutable.Map<akka.stream.OutPort, akka.stream.InPort> downstreams();
    Code:
       0: aload_0
       1: invokestatic  #128                // Method akka/stream/impl/StreamLayout$Module$class.downstreams:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<akka.stream.InPort, akka.stream.OutPort> upstreams();
    Code:
       0: aload_0
       1: invokestatic  #131                // Method akka/stream/impl/StreamLayout$Module$class.upstreams:(Lakka/stream/impl/StreamLayout$Module;)Lscala/collection/immutable/Map;
       4: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #134                // Method akka/stream/impl/StreamLayout$Module$class.hashCode:(Lakka/stream/impl/StreamLayout$Module;)I
       4: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method akka/stream/impl/StreamLayout$Module$class.equals:(Lakka/stream/impl/StreamLayout$Module;Ljava/lang/Object;)Z
       5: ireturn

  public akka.stream.ClosedShape$ shape();
    Code:
       0: getstatic     #145                // Field akka/stream/ClosedShape$.MODULE$:Lakka/stream/ClosedShape$;
       3: areturn

  public akka.stream.impl.StreamLayout$Module replaceShape(akka.stream.Shape);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #149                // Method shape:()Lakka/stream/ClosedShape$;
       5: astore_2
       6: dup
       7: ifnonnull     18
      10: pop
      11: aload_2
      12: ifnull        25
      15: goto          27
      18: aload_2
      19: invokevirtual #66                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifeq          27
      25: aload_0
      26: areturn
      27: new           #151                // class java/lang/UnsupportedOperationException
      30: dup
      31: ldc           #153                // String cannot replace the shape of the EmptyModule
      33: invokespecial #156                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      36: athrow

  public akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #166                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
       5: invokevirtual #170                // Method akka/stream/scaladsl/Keep$.left:()Lscala/Function2;
       8: invokevirtual #173                // Method compose:(Lakka/stream/impl/StreamLayout$Module;Lscala/Function2;)Lakka/stream/impl/StreamLayout$Module;
      11: areturn

  public <A, B, C> akka.stream.impl.StreamLayout$Module compose(akka.stream.impl.StreamLayout$Module, scala.Function2<A, B, C>);
    Code:
       0: aload_2
       1: getstatic     #166                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
       4: invokevirtual #176                // Method akka/stream/scaladsl/Keep$.right:()Lscala/Function2;
       7: if_acmpne     14
      10: aload_1
      11: goto          157
      14: aload_2
      15: getstatic     #166                // Field akka/stream/scaladsl/Keep$.MODULE$:Lakka/stream/scaladsl/Keep$;
      18: invokevirtual #170                // Method akka/stream/scaladsl/Keep$.left:()Lscala/Function2;
      21: if_acmpne     158
      24: getstatic     #181                // Field akka/stream/impl/StreamLayout$IgnorableMatValComp$.MODULE$:Lakka/stream/impl/StreamLayout$IgnorableMatValComp$;
      27: aload_1
      28: invokevirtual #184                // Method akka/stream/impl/StreamLayout$IgnorableMatValComp$.apply:(Lakka/stream/impl/StreamLayout$Module;)Z
      31: ifeq          40
      34: getstatic     #189                // Field akka/stream/impl/StreamLayout$Ignore$.MODULE$:Lakka/stream/impl/StreamLayout$Ignore$;
      37: goto          60
      40: new           #191                // class akka/stream/impl/StreamLayout$Transform
      43: dup
      44: new           #193                // class akka/stream/impl/StreamLayout$EmptyModule$$anonfun$4
      47: dup
      48: invokespecial #194                // Method akka/stream/impl/StreamLayout$EmptyModule$$anonfun$4."<init>":()V
      51: aload_1
      52: invokeinterface #198,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.materializedValueComputation:()Lakka/stream/impl/StreamLayout$MaterializedValueNode;
      57: invokespecial #201                // Method akka/stream/impl/StreamLayout$Transform."<init>":(Lscala/Function1;Lakka/stream/impl/StreamLayout$MaterializedValueNode;)V
      60: astore_3
      61: new           #203                // class akka/stream/impl/StreamLayout$CompositeModule
      64: dup
      65: aload_1
      66: invokeinterface #205,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.isSealed:()Z
      71: ifeq          106
      74: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      77: invokevirtual #214                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
      80: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      83: iconst_1
      84: anewarray     #6                  // class akka/stream/impl/StreamLayout$Module
      87: dup
      88: iconst_0
      89: aload_1
      90: aastore
      91: checkcast     #216                // class "[Ljava/lang/Object;"
      94: invokevirtual #220                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      97: invokevirtual #225                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
     100: checkcast     #49                 // class scala/collection/immutable/Set
     103: goto          112
     106: aload_1
     107: invokeinterface #228,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.subModules:()Lscala/collection/immutable/Set;
     112: aload_1
     113: invokeinterface #231,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.shape:()Lakka/stream/Shape;
     118: aload_1
     119: invokeinterface #233,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.downstreams:()Lscala/collection/immutable/Map;
     124: aload_1
     125: invokeinterface #235,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.upstreams:()Lscala/collection/immutable/Map;
     130: aload_3
     131: checkcast     #237                // class akka/stream/impl/StreamLayout$MaterializedValueNode
     134: aload_0
     135: invokevirtual #238                // Method isSealed:()Z
     138: ifeq          150
     141: getstatic     #243                // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
     144: invokevirtual #247                // Method akka/stream/Attributes$.none:()Lakka/stream/Attributes;
     147: goto          154
     150: aload_0
     151: invokevirtual #250                // Method attributes:()Lakka/stream/Attributes;
     154: invokespecial #253                // Method akka/stream/impl/StreamLayout$CompositeModule."<init>":(Lscala/collection/immutable/Set;Lakka/stream/Shape;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lakka/stream/impl/StreamLayout$MaterializedValueNode;Lakka/stream/Attributes;)V
     157: areturn
     158: new           #151                // class java/lang/UnsupportedOperationException
     161: dup
     162: ldc           #255                // String It is invalid to combine materialized value with EmptyModule except with Keep.left or Keep.right
     164: invokespecial #156                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     167: athrow

  public akka.stream.impl.StreamLayout$Module withAttributes(akka.stream.Attributes);
    Code:
       0: new           #151                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #267                // String EmptyModule cannot carry attributes
       7: invokespecial #156                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public scala.collection.immutable.Set<akka.stream.impl.StreamLayout$Module> subModules();
    Code:
       0: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #214                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       6: invokevirtual #271                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
       9: areturn

  public akka.stream.Attributes attributes();
    Code:
       0: getstatic     #243                // Field akka/stream/Attributes$.MODULE$:Lakka/stream/Attributes$;
       3: invokevirtual #247                // Method akka/stream/Attributes$.none:()Lakka/stream/Attributes;
       6: areturn

  public akka.stream.impl.StreamLayout$Module carbonCopy();
    Code:
       0: aload_0
       1: areturn

  public boolean isRunnable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAtomic();
    Code:
       0: iconst_0
       1: ireturn

  public akka.stream.impl.StreamLayout$MaterializedValueNode materializedValueComputation();
    Code:
       0: getstatic     #189                // Field akka/stream/impl/StreamLayout$Ignore$.MODULE$:Lakka/stream/impl/StreamLayout$Ignore$;
       3: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #279                // String EmptyModule
       3: areturn

  public int productArity();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: new           #284                // class java/lang/IndexOutOfBoundsException
       5: dup
       6: iload_1
       7: invokestatic  #290                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #293                // Method java/lang/Object.toString:()Ljava/lang/String;
      13: invokespecial #294                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #302                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #306                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/StreamLayout$EmptyModule$
       4: ireturn

  public java.lang.String toString();
    Code:
       0: ldc_w         #279                // String EmptyModule
       3: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #311                // Field MODULE$:Lakka/stream/impl/StreamLayout$EmptyModule$;
       3: areturn

  public akka.stream.Shape shape();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method shape:()Lakka/stream/ClosedShape$;
       4: areturn

  public akka.stream.impl.StreamLayout$EmptyModule$();
    Code:
       0: aload_0
       1: invokespecial #312                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #311                // Field MODULE$:Lakka/stream/impl/StreamLayout$EmptyModule$;
       8: aload_0
       9: invokestatic  #316                // Method akka/stream/impl/StreamLayout$Module$class.$init$:(Lakka/stream/impl/StreamLayout$Module;)V
      12: aload_0
      13: invokestatic  #321                // Method scala/Product$class.$init$:(Lscala/Product;)V
      16: return
}
