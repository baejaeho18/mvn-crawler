Compiled from "Sinks.scala"
public final class akka.stream.impl.LazySink$$anon$6$$anonfun$3 extends scala.runtime.AbstractFunction1<scala.util.Try<akka.stream.scaladsl.Sink<T, M>>, scala.runtime.BoxedUnit> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.stream.impl.LazySink$$anon$6 $outer;

  private final java.lang.Object element$1;

  public final void apply(scala.util.Try<akka.stream.scaladsl.Sink<T, M>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #25                 // class scala/util/Success
       6: ifeq          44
       9: aload_2
      10: checkcast     #25                 // class scala/util/Success
      13: astore_3
      14: aload_3
      15: invokevirtual #29                 // Method scala/util/Success.value:()Ljava/lang/Object;
      18: checkcast     #31                 // class akka/stream/scaladsl/Sink
      21: astore        4
      23: aload_0
      24: getfield      #33                 // Field $outer:Lakka/stream/impl/LazySink$$anon$6;
      27: aload         4
      29: aload_0
      30: getfield      #35                 // Field element$1:Ljava/lang/Object;
      33: invokevirtual #39                 // Method akka/stream/impl/LazySink$$anon$6.akka$stream$impl$LazySink$$anon$$initInternalSource:(Lakka/stream/scaladsl/Sink;Ljava/lang/Object;)V
      36: getstatic     #45                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      39: astore        5
      41: goto          78
      44: aload_2
      45: instanceof    #47                 // class scala/util/Failure
      48: ifeq          79
      51: aload_2
      52: checkcast     #47                 // class scala/util/Failure
      55: astore        6
      57: aload         6
      59: invokevirtual #51                 // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
      62: astore        7
      64: aload_0
      65: getfield      #33                 // Field $outer:Lakka/stream/impl/LazySink$$anon$6;
      68: aload         7
      70: invokevirtual #55                 // Method akka/stream/impl/LazySink$$anon$6.akka$stream$impl$LazySink$$anon$$failure:(Ljava/lang/Throwable;)V
      73: getstatic     #45                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      76: astore        5
      78: return
      79: new           #57                 // class scala/MatchError
      82: dup
      83: aload_2
      84: invokespecial #61                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      87: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #71                 // class scala/util/Try
       5: invokevirtual #74                 // Method apply:(Lscala/util/Try;)V
       8: getstatic     #45                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      11: areturn

  public akka.stream.impl.LazySink$$anon$6$$anonfun$3(akka.stream.impl.LazySink<T, M>.$anon$6);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #33                 // Field $outer:Lakka/stream/impl/LazySink$$anon$6;
      11: aload_0
      12: aload_2
      13: putfield      #35                 // Field element$1:Ljava/lang/Object;
      16: aload_0
      17: invokespecial #78                 // Method scala/runtime/AbstractFunction1."<init>":()V
      20: return
}
