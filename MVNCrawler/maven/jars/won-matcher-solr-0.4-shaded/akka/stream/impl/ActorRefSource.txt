Compiled from "Modules.scala"
public final class akka.stream.impl.ActorRefSource<Out> extends akka.stream.impl.SourceModule<Out, akka.actor.ActorRef> {
  private final int bufferSize;

  private final akka.stream.OverflowStrategy overflowStrategy;

  private final akka.stream.Attributes attributes;

  public akka.stream.Attributes attributes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field attributes:Lakka/stream/Attributes;
       4: areturn

  public java.lang.String label();
    Code:
       0: new           #24                 // class scala/StringContext
       3: dup
       4: getstatic     #30                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_3
       8: anewarray     #32                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #34                 // String ActorRefSource(
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #36                 // String ,
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #38                 // String )
      25: aastore
      26: checkcast     #40                 // class "[Ljava/lang/Object;"
      29: invokevirtual #44                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      32: invokespecial #48                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      35: getstatic     #30                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      38: iconst_2
      39: anewarray     #50                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: getfield      #52                 // Field bufferSize:I
      48: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_0
      55: getfield      #60                 // Field overflowStrategy:Lakka/stream/OverflowStrategy;
      58: aastore
      59: invokevirtual #64                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      62: invokevirtual #68                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      65: areturn

  public scala.Tuple2<org.reactivestreams.Publisher<Out>, akka.actor.ActorRef> create(akka.stream.MaterializationContext);
    Code:
       0: getstatic     #75                 // Field akka/stream/ActorMaterializerHelper$.MODULE$:Lakka/stream/ActorMaterializerHelper$;
       3: aload_1
       4: invokevirtual #81                 // Method akka/stream/MaterializationContext.materializer:()Lakka/stream/Materializer;
       7: invokevirtual #85                 // Method akka/stream/ActorMaterializerHelper$.downcast:(Lakka/stream/Materializer;)Lakka/stream/ActorMaterializer;
      10: astore_2
      11: aload_2
      12: aload_1
      13: getstatic     #90                 // Field akka/stream/impl/ActorRefSourceActor$.MODULE$:Lakka/stream/impl/ActorRefSourceActor$;
      16: aload_0
      17: getfield      #52                 // Field bufferSize:I
      20: aload_0
      21: getfield      #60                 // Field overflowStrategy:Lakka/stream/OverflowStrategy;
      24: aload_2
      25: invokevirtual #96                 // Method akka/stream/ActorMaterializer.settings:()Lakka/stream/ActorMaterializerSettings;
      28: invokevirtual #100                // Method akka/stream/impl/ActorRefSourceActor$.props:(ILakka/stream/OverflowStrategy;Lakka/stream/ActorMaterializerSettings;)Lakka/actor/Props;
      31: invokevirtual #104                // Method akka/stream/ActorMaterializer.actorOf:(Lakka/stream/MaterializationContext;Lakka/actor/Props;)Lakka/actor/ActorRef;
      34: astore_3
      35: new           #106                // class scala/Tuple2
      38: dup
      39: getstatic     #111                // Field akka/stream/actor/ActorPublisher$.MODULE$:Lakka/stream/actor/ActorPublisher$;
      42: aload_3
      43: invokevirtual #115                // Method akka/stream/actor/ActorPublisher$.apply:(Lakka/actor/ActorRef;)Lorg/reactivestreams/Publisher;
      46: aload_3
      47: invokespecial #118                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      50: areturn

  public akka.stream.impl.SourceModule<Out, akka.actor.ActorRef> newInstance(akka.stream.SourceShape<Out>);
    Code:
       0: new           #2                  // class akka/stream/impl/ActorRefSource
       3: dup
       4: aload_0
       5: getfield      #52                 // Field bufferSize:I
       8: aload_0
       9: getfield      #60                 // Field overflowStrategy:Lakka/stream/OverflowStrategy;
      12: aload_0
      13: invokevirtual #128                // Method attributes:()Lakka/stream/Attributes;
      16: aload_1
      17: invokespecial #131                // Method "<init>":(ILakka/stream/OverflowStrategy;Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      20: areturn

  public akka.stream.impl.StreamLayout$AtomicModule withAttributes(akka.stream.Attributes);
    Code:
       0: new           #2                  // class akka/stream/impl/ActorRefSource
       3: dup
       4: aload_0
       5: getfield      #52                 // Field bufferSize:I
       8: aload_0
       9: getfield      #60                 // Field overflowStrategy:Lakka/stream/OverflowStrategy;
      12: aload_1
      13: aload_0
      14: aload_1
      15: invokevirtual #139                // Method amendShape:(Lakka/stream/Attributes;)Lakka/stream/SourceShape;
      18: invokespecial #131                // Method "<init>":(ILakka/stream/OverflowStrategy;Lakka/stream/Attributes;Lakka/stream/SourceShape;)V
      21: areturn

  public akka.stream.impl.StreamLayout$Module withAttributes(akka.stream.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #143                // Method withAttributes:(Lakka/stream/Attributes;)Lakka/stream/impl/StreamLayout$AtomicModule;
       5: areturn

  public akka.stream.impl.ActorRefSource(int, akka.stream.OverflowStrategy, akka.stream.Attributes, akka.stream.SourceShape<Out>);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field bufferSize:I
       5: aload_0
       6: aload_2
       7: putfield      #60                 // Field overflowStrategy:Lakka/stream/OverflowStrategy;
      10: aload_0
      11: aload_3
      12: putfield      #18                 // Field attributes:Lakka/stream/Attributes;
      15: aload_0
      16: aload         4
      18: invokespecial #146                // Method akka/stream/impl/SourceModule."<init>":(Lakka/stream/SourceShape;)V
      21: return
}
