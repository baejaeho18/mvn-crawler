Compiled from "ActorPublisher.scala"
public class akka.stream.impl.ActorSubscriptionWithCursor<T> extends akka.stream.impl.ActorSubscription<T> implements akka.stream.impl.SubscriptionWithCursor<T> {
  private boolean active;

  private long totalDemand;

  private int cursor;

  public boolean active();
    Code:
       0: aload_0
       1: getfield      #20                 // Field active:Z
       4: ireturn

  public void active_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field active:Z
       5: return

  public long totalDemand();
    Code:
       0: aload_0
       1: getfield      #28                 // Field totalDemand:J
       4: lreturn

  public void totalDemand_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #28                 // Field totalDemand:J
       5: return

  public int cursor();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cursor:I
       4: ireturn

  public void cursor_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field cursor:I
       5: return

  public void dispatch(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method akka/stream/impl/SubscriptionWithCursor$class.dispatch:(Lakka/stream/impl/SubscriptionWithCursor;Ljava/lang/Object;)V
       5: return

  public akka.stream.impl.ActorSubscriptionWithCursor(akka.actor.ActorRef, org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #48                 // Method akka/stream/impl/ActorSubscription."<init>":(Lakka/actor/ActorRef;Lorg/reactivestreams/Subscriber;)V
       6: aload_0
       7: invokestatic  #52                 // Method akka/stream/impl/SubscriptionWithCursor$class.$init$:(Lakka/stream/impl/SubscriptionWithCursor;)V
      10: return
}
