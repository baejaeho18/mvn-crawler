Compiled from "StreamLayout.scala"
public class akka.stream.impl.VirtualProcessor$WrappedSubscription extends java.util.concurrent.atomic.AtomicReference<akka.stream.impl.VirtualProcessor<T>.WrappedSubscription$$SubscriptionState> implements org.reactivestreams.Subscription {
  private final org.reactivestreams.Subscription real;

  public final akka.stream.impl.VirtualProcessor $outer;

  public void ungateDemandAndRequestBuffered();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #18                 // Method akka$stream$impl$VirtualProcessor$WrappedSubscription$$$outer:()Lakka/stream/impl/VirtualProcessor;
       5: invokevirtual #24                 // Method akka/stream/impl/VirtualProcessor.WrappedSubscription:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;
       8: invokevirtual #30                 // Method akka/stream/impl/VirtualProcessor$WrappedSubscription$.PassThrough:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
      11: invokevirtual #34                 // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #36                 // class akka/stream/impl/VirtualProcessor$WrappedSubscription$SubscriptionState
      17: invokeinterface #40,  1           // InterfaceMethod akka/stream/impl/VirtualProcessor$WrappedSubscription$SubscriptionState.demand:()J
      22: lstore_1
      23: lload_1
      24: lconst_0
      25: lcmp
      26: ifle          39
      29: aload_0
      30: getfield      #42                 // Field real:Lorg/reactivestreams/Subscription;
      33: lload_1
      34: invokeinterface #46,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      39: return

  public void request(long);
    Code:
       0: lload_1
       1: lconst_1
       2: lcmp
       3: ifge          89
       6: getstatic     #56                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
       9: aload_0
      10: getfield      #42                 // Field real:Lorg/reactivestreams/Subscription;
      13: invokevirtual #60                 // Method akka/stream/impl/ReactiveStreamsCompliance$.tryCancel:(Lorg/reactivestreams/Subscription;)V
      16: aload_0
      17: invokevirtual #18                 // Method akka$stream$impl$VirtualProcessor$WrappedSubscription$$$outer:()Lakka/stream/impl/VirtualProcessor;
      20: getstatic     #65                 // Field akka/stream/impl/VirtualProcessor$Inert$.MODULE$:Lakka/stream/impl/VirtualProcessor$Inert$;
      23: invokevirtual #66                 // Method akka/stream/impl/VirtualProcessor.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      26: astore_3
      27: aload_3
      28: instanceof    #68                 // class akka/stream/impl/VirtualProcessor$Both
      31: ifeq          63
      34: aload_3
      35: checkcast     #68                 // class akka/stream/impl/VirtualProcessor$Both
      38: astore        4
      40: aload         4
      42: invokevirtual #72                 // Method akka/stream/impl/VirtualProcessor$Both.subscriber:()Lorg/reactivestreams/Subscriber;
      45: astore        5
      47: getstatic     #56                 // Field akka/stream/impl/ReactiveStreamsCompliance$.MODULE$:Lakka/stream/impl/ReactiveStreamsCompliance$;
      50: aload         5
      52: invokevirtual #76                 // Method akka/stream/impl/ReactiveStreamsCompliance$.rejectDueToNonPositiveDemand:(Lorg/reactivestreams/Subscriber;)V
      55: getstatic     #82                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      58: astore        6
      60: goto          94
      63: getstatic     #65                 // Field akka/stream/impl/VirtualProcessor$Inert$.MODULE$:Lakka/stream/impl/VirtualProcessor$Inert$;
      66: aload_3
      67: invokevirtual #88                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      70: ifeq          81
      73: getstatic     #82                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      76: astore        6
      78: goto          94
      81: getstatic     #82                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      84: astore        6
      86: goto          94
      89: aload_0
      90: lload_1
      91: invokespecial #91                 // Method bufferDemand$1:(J)V
      94: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method akka$stream$impl$VirtualProcessor$WrappedSubscription$$$outer:()Lakka/stream/impl/VirtualProcessor;
       4: getstatic     #65                 // Field akka/stream/impl/VirtualProcessor$Inert$.MODULE$:Lakka/stream/impl/VirtualProcessor$Inert$;
       7: invokevirtual #99                 // Method akka/stream/impl/VirtualProcessor.set:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #42                 // Field real:Lorg/reactivestreams/Subscription;
      14: invokeinterface #101,  1          // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      19: return

  public akka.stream.impl.VirtualProcessor akka$stream$impl$VirtualProcessor$WrappedSubscription$$$outer();
    Code:
       0: aload_0
       1: getfield      #103                // Field $outer:Lakka/stream/impl/VirtualProcessor;
       4: areturn

  private final void bufferDemand$1(long);
    Code:
       0: aload_0
       1: invokevirtual #107                // Method get:()Ljava/lang/Object;
       4: checkcast     #36                 // class akka/stream/impl/VirtualProcessor$WrappedSubscription$SubscriptionState
       7: astore        4
       9: aload         4
      11: aload_0
      12: invokevirtual #18                 // Method akka$stream$impl$VirtualProcessor$WrappedSubscription$$$outer:()Lakka/stream/impl/VirtualProcessor;
      15: invokevirtual #24                 // Method akka/stream/impl/VirtualProcessor.WrappedSubscription:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;
      18: invokevirtual #30                 // Method akka/stream/impl/VirtualProcessor$WrappedSubscription$.PassThrough:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$PassThrough$;
      21: if_acmpne     40
      24: aload_0
      25: getfield      #42                 // Field real:Lorg/reactivestreams/Subscription;
      28: lload_1
      29: invokeinterface #46,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      34: getstatic     #82                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: goto          75
      40: aload_0
      41: aload         4
      43: new           #109                // class akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering
      46: dup
      47: aload_0
      48: invokevirtual #18                 // Method akka$stream$impl$VirtualProcessor$WrappedSubscription$$$outer:()Lakka/stream/impl/VirtualProcessor;
      51: invokevirtual #24                 // Method akka/stream/impl/VirtualProcessor.WrappedSubscription:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;
      54: aload         4
      56: invokeinterface #40,  1           // InterfaceMethod akka/stream/impl/VirtualProcessor$WrappedSubscription$SubscriptionState.demand:()J
      61: lload_1
      62: ladd
      63: invokespecial #113                // Method akka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering."<init>":(Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;J)V
      66: invokevirtual #117                // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ifeq          77
      72: getstatic     #82                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      75: pop
      76: return
      77: lload_1
      78: lstore_1
      79: goto          0

  public akka.stream.impl.VirtualProcessor$WrappedSubscription(akka.stream.impl.VirtualProcessor<T>, org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #42                 // Field real:Lorg/reactivestreams/Subscription;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #103                // Field $outer:Lakka/stream/impl/VirtualProcessor;
      16: aload_0
      17: aload_1
      18: invokevirtual #24                 // Method akka/stream/impl/VirtualProcessor.WrappedSubscription:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$;
      21: invokevirtual #124                // Method akka/stream/impl/VirtualProcessor$WrappedSubscription$.NoBufferedDemand:()Lakka/stream/impl/VirtualProcessor$WrappedSubscription$Buffering;
      24: invokespecial #126                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      27: return
}
