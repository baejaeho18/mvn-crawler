Compiled from "Sources.scala"
public final class akka.stream.impl.QueueSource$Offer<T> implements akka.stream.impl.QueueSource$Input<T>, scala.Product, scala.Serializable {
  private final T elem;

  private final scala.concurrent.Promise<akka.stream.QueueOfferResult> promise;

  public T elem();
    Code:
       0: aload_0
       1: getfield      #21                 // Field elem:Ljava/lang/Object;
       4: areturn

  public scala.concurrent.Promise<akka.stream.QueueOfferResult> promise();
    Code:
       0: aload_0
       1: getfield      #26                 // Field promise:Lscala/concurrent/Promise;
       4: areturn

  public <T> akka.stream.impl.QueueSource$Offer<T> copy(T, scala.concurrent.Promise<akka.stream.QueueOfferResult>);
    Code:
       0: new           #2                  // class akka/stream/impl/QueueSource$Offer
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #32                 // Method "<init>":(Ljava/lang/Object;Lscala/concurrent/Promise;)V
       9: areturn

  public <T> T copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method elem:()Ljava/lang/Object;
       4: areturn

  public <T> scala.concurrent.Promise<akka.stream.QueueOfferResult> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method promise:()Lscala/concurrent/Promise;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #42                 // String Offer
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #48                 // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #54                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #57                 // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #60                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #38                 // Method promise:()Lscala/concurrent/Promise;
      43: goto          50
      46: aload_0
      47: invokevirtual #35                 // Method elem:()Ljava/lang/Object;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #70                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #74                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/impl/QueueSource$Offer
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #70                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #81                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #70                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #85                 // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     86
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/impl/QueueSource$Offer
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          90
      25: aload_1
      26: checkcast     #2                  // class akka/stream/impl/QueueSource$Offer
      29: astore        4
      31: aload_0
      32: invokevirtual #35                 // Method elem:()Ljava/lang/Object;
      35: aload         4
      37: invokevirtual #35                 // Method elem:()Ljava/lang/Object;
      40: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          82
      46: aload_0
      47: invokevirtual #38                 // Method promise:()Lscala/concurrent/Promise;
      50: aload         4
      52: invokevirtual #38                 // Method promise:()Lscala/concurrent/Promise;
      55: astore        5
      57: dup
      58: ifnonnull     70
      61: pop
      62: aload         5
      64: ifnull        78
      67: goto          82
      70: aload         5
      72: invokevirtual #91                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ifeq          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ireturn

  public akka.stream.impl.QueueSource$Offer(T, scala.concurrent.Promise<akka.stream.QueueOfferResult>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field elem:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #26                 // Field promise:Lscala/concurrent/Promise;
      10: aload_0
      11: invokespecial #96                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #102                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: return
}
