Compiled from "Shape.scala"
public final class akka.stream.BidiShape<In1, Out1, In2, Out2> extends akka.stream.Shape implements scala.Product, scala.Serializable {
  private final akka.stream.Inlet<In1> in1;

  private final akka.stream.Outlet<Out1> out1;

  private final akka.stream.Inlet<In2> in2;

  private final akka.stream.Outlet<Out2> out2;

  private final scala.collection.immutable.Seq<akka.stream.Inlet<?>> inlets;

  private final scala.collection.immutable.Seq<akka.stream.Outlet<?>> outlets;

  public static <In1, Out1, In2, Out2> scala.Option<scala.Tuple4<akka.stream.Inlet<In1>, akka.stream.Outlet<Out1>, akka.stream.Inlet<In2>, akka.stream.Outlet<Out2>>> unapply(akka.stream.BidiShape<In1, Out1, In2, Out2>);
    Code:
       0: getstatic     #21                 // Field akka/stream/BidiShape$.MODULE$:Lakka/stream/BidiShape$;
       3: aload_0
       4: invokevirtual #23                 // Method akka/stream/BidiShape$.unapply:(Lakka/stream/BidiShape;)Lscala/Option;
       7: areturn

  public static <In1, Out1, In2, Out2> akka.stream.BidiShape<In1, Out1, In2, Out2> apply(akka.stream.Inlet<In1>, akka.stream.Outlet<Out1>, akka.stream.Inlet<In2>, akka.stream.Outlet<Out2>);
    Code:
       0: getstatic     #21                 // Field akka/stream/BidiShape$.MODULE$:Lakka/stream/BidiShape$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #27                 // Method akka/stream/BidiShape$.apply:(Lakka/stream/Inlet;Lakka/stream/Outlet;Lakka/stream/Inlet;Lakka/stream/Outlet;)Lakka/stream/BidiShape;
      10: areturn

  public static <In1, Out1, In2, Out2> akka.stream.BidiShape<In1, Out1, In2, Out2> of(akka.stream.Inlet<In1>, akka.stream.Outlet<Out1>, akka.stream.Inlet<In2>, akka.stream.Outlet<Out2>);
    Code:
       0: getstatic     #21                 // Field akka/stream/BidiShape$.MODULE$:Lakka/stream/BidiShape$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #30                 // Method akka/stream/BidiShape$.of:(Lakka/stream/Inlet;Lakka/stream/Outlet;Lakka/stream/Inlet;Lakka/stream/Outlet;)Lakka/stream/BidiShape;
      10: areturn

  public static <I1, O1, I2, O2> akka.stream.BidiShape<I1, O1, I2, O2> fromFlows(akka.stream.FlowShape<I1, O1>, akka.stream.FlowShape<I2, O2>);
    Code:
       0: getstatic     #21                 // Field akka/stream/BidiShape$.MODULE$:Lakka/stream/BidiShape$;
       3: aload_0
       4: aload_1
       5: invokevirtual #34                 // Method akka/stream/BidiShape$.fromFlows:(Lakka/stream/FlowShape;Lakka/stream/FlowShape;)Lakka/stream/BidiShape;
       8: areturn

  public akka.stream.Inlet<In1> in1();
    Code:
       0: aload_0
       1: getfield      #52                 // Field in1:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<Out1> out1();
    Code:
       0: aload_0
       1: getfield      #57                 // Field out1:Lakka/stream/Outlet;
       4: areturn

  public akka.stream.Inlet<In2> in2();
    Code:
       0: aload_0
       1: getfield      #59                 // Field in2:Lakka/stream/Inlet;
       4: areturn

  public akka.stream.Outlet<Out2> out2();
    Code:
       0: aload_0
       1: getfield      #61                 // Field out2:Lakka/stream/Outlet;
       4: areturn

  public scala.collection.immutable.Seq<akka.stream.Inlet<?>> inlets();
    Code:
       0: aload_0
       1: getfield      #64                 // Field inlets:Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq<akka.stream.Outlet<?>> outlets();
    Code:
       0: aload_0
       1: getfield      #66                 // Field outlets:Lscala/collection/immutable/Seq;
       4: areturn

  public akka.stream.BidiShape<In1, Out1, In2, Out2> deepCopy();
    Code:
       0: new           #2                  // class akka/stream/BidiShape
       3: dup
       4: aload_0
       5: invokevirtual #70                 // Method in1:()Lakka/stream/Inlet;
       8: invokevirtual #75                 // Method akka/stream/Inlet.carbonCopy:()Lakka/stream/Inlet;
      11: aload_0
      12: invokevirtual #77                 // Method out1:()Lakka/stream/Outlet;
      15: invokevirtual #81                 // Method akka/stream/Outlet.carbonCopy:()Lakka/stream/Outlet;
      18: aload_0
      19: invokevirtual #83                 // Method in2:()Lakka/stream/Inlet;
      22: invokevirtual #75                 // Method akka/stream/Inlet.carbonCopy:()Lakka/stream/Inlet;
      25: aload_0
      26: invokevirtual #85                 // Method out2:()Lakka/stream/Outlet;
      29: invokevirtual #81                 // Method akka/stream/Outlet.carbonCopy:()Lakka/stream/Outlet;
      32: invokespecial #89                 // Method "<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;Lakka/stream/Inlet;Lakka/stream/Outlet;)V
      35: areturn

  public akka.stream.Shape copyFromPorts(scala.collection.immutable.Seq<akka.stream.Inlet<?>>, scala.collection.immutable.Seq<akka.stream.Outlet<?>>);
    Code:
       0: getstatic     #96                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: invokeinterface #102,  1          // InterfaceMethod scala/collection/immutable/Seq.size:()I
       9: iconst_2
      10: if_icmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: new           #104                // class akka/stream/BidiShape$$anonfun$copyFromPorts$9
      21: dup
      22: aload_0
      23: aload_1
      24: invokespecial #107                // Method akka/stream/BidiShape$$anonfun$copyFromPorts$9."<init>":(Lakka/stream/BidiShape;Lscala/collection/immutable/Seq;)V
      27: invokevirtual #111                // Method scala/Predef$.require:(ZLscala/Function0;)V
      30: getstatic     #96                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: aload_2
      34: invokeinterface #102,  1          // InterfaceMethod scala/collection/immutable/Seq.size:()I
      39: iconst_2
      40: if_icmpne     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: new           #113                // class akka/stream/BidiShape$$anonfun$copyFromPorts$10
      51: dup
      52: aload_0
      53: aload_2
      54: invokespecial #114                // Method akka/stream/BidiShape$$anonfun$copyFromPorts$10."<init>":(Lakka/stream/BidiShape;Lscala/collection/immutable/Seq;)V
      57: invokevirtual #111                // Method scala/Predef$.require:(ZLscala/Function0;)V
      60: new           #2                  // class akka/stream/BidiShape
      63: dup
      64: aload_1
      65: iconst_0
      66: invokeinterface #117,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
      71: checkcast     #72                 // class akka/stream/Inlet
      74: aload_2
      75: iconst_0
      76: invokeinterface #117,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
      81: checkcast     #79                 // class akka/stream/Outlet
      84: aload_1
      85: iconst_1
      86: invokeinterface #117,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
      91: checkcast     #72                 // class akka/stream/Inlet
      94: aload_2
      95: iconst_1
      96: invokeinterface #117,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
     101: checkcast     #79                 // class akka/stream/Outlet
     104: invokespecial #89                 // Method "<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;Lakka/stream/Inlet;Lakka/stream/Outlet;)V
     107: areturn

  public akka.stream.Shape reversed();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #121                // Method inlets:()Lscala/collection/immutable/Seq;
       5: invokeinterface #125,  1          // InterfaceMethod scala/collection/immutable/Seq.reverse:()Ljava/lang/Object;
      10: checkcast     #98                 // class scala/collection/immutable/Seq
      13: aload_0
      14: invokevirtual #127                // Method outlets:()Lscala/collection/immutable/Seq;
      17: invokeinterface #125,  1          // InterfaceMethod scala/collection/immutable/Seq.reverse:()Ljava/lang/Object;
      22: checkcast     #98                 // class scala/collection/immutable/Seq
      25: invokevirtual #129                // Method copyFromPorts:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lakka/stream/Shape;
      28: areturn

  public <In1, Out1, In2, Out2> akka.stream.BidiShape<In1, Out1, In2, Out2> copy(akka.stream.Inlet<In1>, akka.stream.Outlet<Out1>, akka.stream.Inlet<In2>, akka.stream.Outlet<Out2>);
    Code:
       0: new           #2                  // class akka/stream/BidiShape
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #89                 // Method "<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;Lakka/stream/Inlet;Lakka/stream/Outlet;)V
      12: areturn

  public <In1, Out1, In2, Out2> akka.stream.Inlet<In1> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method in1:()Lakka/stream/Inlet;
       4: areturn

  public <In1, Out1, In2, Out2> akka.stream.Outlet<Out1> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method out1:()Lakka/stream/Outlet;
       4: areturn

  public <In1, Out1, In2, Out2> akka.stream.Inlet<In2> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method in2:()Lakka/stream/Inlet;
       4: areturn

  public <In1, Out1, In2, Out2> akka.stream.Outlet<Out2> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method out2:()Lakka/stream/Outlet;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #138                // String BidiShape
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 68
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #142                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #148                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #153                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #156                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #85                 // Method out2:()Lakka/stream/Outlet;
      51: goto          72
      54: aload_0
      55: invokevirtual #83                 // Method in2:()Lakka/stream/Inlet;
      58: goto          72
      61: aload_0
      62: invokevirtual #77                 // Method out1:()Lakka/stream/Outlet;
      65: goto          72
      68: aload_0
      69: invokevirtual #70                 // Method in1:()Lakka/stream/Inlet;
      72: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #169                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/BidiShape
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #177                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #181                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     167
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/BidiShape
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          171
      25: aload_1
      26: checkcast     #2                  // class akka/stream/BidiShape
      29: astore        4
      31: aload_0
      32: invokevirtual #70                 // Method in1:()Lakka/stream/Inlet;
      35: aload         4
      37: invokevirtual #70                 // Method in1:()Lakka/stream/Inlet;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          163
      55: aload         5
      57: invokevirtual #184                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          163
      63: aload_0
      64: invokevirtual #77                 // Method out1:()Lakka/stream/Outlet;
      67: aload         4
      69: invokevirtual #77                 // Method out1:()Lakka/stream/Outlet;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          163
      87: aload         6
      89: invokevirtual #184                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          163
      95: aload_0
      96: invokevirtual #83                 // Method in2:()Lakka/stream/Inlet;
      99: aload         4
     101: invokevirtual #83                 // Method in2:()Lakka/stream/Inlet;
     104: astore        7
     106: dup
     107: ifnonnull     119
     110: pop
     111: aload         7
     113: ifnull        127
     116: goto          163
     119: aload         7
     121: invokevirtual #184                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifeq          163
     127: aload_0
     128: invokevirtual #85                 // Method out2:()Lakka/stream/Outlet;
     131: aload         4
     133: invokevirtual #85                 // Method out2:()Lakka/stream/Outlet;
     136: astore        8
     138: dup
     139: ifnonnull     151
     142: pop
     143: aload         8
     145: ifnull        159
     148: goto          163
     151: aload         8
     153: invokevirtual #184                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     156: ifeq          163
     159: iconst_1
     160: goto          164
     163: iconst_0
     164: ifeq          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: ireturn

  public akka.stream.Shape deepCopy();
    Code:
       0: aload_0
       1: invokevirtual #186                // Method deepCopy:()Lakka/stream/BidiShape;
       4: areturn

  public akka.stream.BidiShape(akka.stream.Inlet<In1>, akka.stream.Outlet<Out1>, akka.stream.Inlet<In2>, akka.stream.Outlet<Out2>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field in1:Lakka/stream/Inlet;
       5: aload_0
       6: aload_2
       7: putfield      #57                 // Field out1:Lakka/stream/Outlet;
      10: aload_0
      11: aload_3
      12: putfield      #59                 // Field in2:Lakka/stream/Inlet;
      15: aload_0
      16: aload         4
      18: putfield      #61                 // Field out2:Lakka/stream/Outlet;
      21: aload_0
      22: invokespecial #189                // Method akka/stream/Shape."<init>":()V
      25: aload_0
      26: invokestatic  #195                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: aload_0
      30: getstatic     #200                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      33: getstatic     #96                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      36: iconst_2
      37: anewarray     #72                 // class akka/stream/Inlet
      40: dup
      41: iconst_0
      42: aload_1
      43: aastore
      44: dup
      45: iconst_1
      46: aload_3
      47: aastore
      48: checkcast     #202                // class "[Ljava/lang/Object;"
      51: invokevirtual #206                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      54: invokevirtual #209                // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      57: putfield      #64                 // Field inlets:Lscala/collection/immutable/Seq;
      60: aload_0
      61: getstatic     #200                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      64: getstatic     #96                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: iconst_2
      68: anewarray     #79                 // class akka/stream/Outlet
      71: dup
      72: iconst_0
      73: aload_2
      74: aastore
      75: dup
      76: iconst_1
      77: aload         4
      79: aastore
      80: checkcast     #202                // class "[Ljava/lang/Object;"
      83: invokevirtual #206                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      86: invokevirtual #209                // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      89: putfield      #66                 // Field outlets:Lscala/collection/immutable/Seq;
      92: return

  public akka.stream.BidiShape(akka.stream.FlowShape<In1, Out1>, akka.stream.FlowShape<In2, Out2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #215                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
       5: aload_1
       6: invokevirtual #218                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
       9: aload_2
      10: invokevirtual #215                // Method akka/stream/FlowShape.in:()Lakka/stream/Inlet;
      13: aload_2
      14: invokevirtual #218                // Method akka/stream/FlowShape.out:()Lakka/stream/Outlet;
      17: invokespecial #89                 // Method "<init>":(Lakka/stream/Inlet;Lakka/stream/Outlet;Lakka/stream/Inlet;Lakka/stream/Outlet;)V
      20: return
}
