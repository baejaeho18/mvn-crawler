Compiled from "Attributes.scala"
public final class akka.stream.Attributes$ implements scala.Serializable {
  public static final akka.stream.Attributes$ MODULE$;

  private final akka.stream.Attributes none;

  private final akka.stream.Attributes asyncBoundary;

  public static {};
    Code:
       0: new           #2                  // class akka/stream/Attributes$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public akka.stream.Attributes apply(akka.stream.Attributes$Attribute);
    Code:
       0: new           #21                 // class akka/stream/Attributes
       3: dup
       4: getstatic     #26                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       7: getstatic     #31                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      10: iconst_1
      11: anewarray     #33                 // class akka/stream/Attributes$Attribute
      14: dup
      15: iconst_0
      16: aload_1
      17: aastore
      18: checkcast     #35                 // class "[Ljava/lang/Object;"
      21: invokevirtual #39                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      24: invokevirtual #42                 // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      27: invokespecial #45                 // Method akka/stream/Attributes."<init>":(Lscala/collection/immutable/List;)V
      30: areturn

  public scala.collection.immutable.List<akka.stream.Attributes$Attribute> apply$default$1();
    Code:
       0: getstatic     #55                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public akka.stream.Attributes none();
    Code:
       0: aload_0
       1: getfield      #58                 // Field none:Lakka/stream/Attributes;
       4: areturn

  public akka.stream.Attributes asyncBoundary();
    Code:
       0: aload_0
       1: getfield      #60                 // Field asyncBoundary:Lakka/stream/Attributes;
       4: areturn

  public akka.stream.Attributes name(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #68                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          18
      11: aload_0
      12: invokevirtual #70                 // Method none:()Lakka/stream/Attributes;
      15: goto          30
      18: aload_0
      19: new           #72                 // class akka/stream/Attributes$Name
      22: dup
      23: aload_1
      24: invokespecial #75                 // Method akka/stream/Attributes$Name."<init>":(Ljava/lang/String;)V
      27: invokevirtual #77                 // Method apply:(Lakka/stream/Attributes$Attribute;)Lakka/stream/Attributes;
      30: areturn

  public akka.stream.Attributes inputBuffer(int, int);
    Code:
       0: aload_0
       1: new           #82                 // class akka/stream/Attributes$InputBuffer
       4: dup
       5: iload_1
       6: iload_2
       7: invokespecial #85                 // Method akka/stream/Attributes$InputBuffer."<init>":(II)V
      10: invokevirtual #77                 // Method apply:(Lakka/stream/Attributes$Attribute;)Lakka/stream/Attributes;
      13: areturn

  public akka.stream.Attributes createLogLevels(int, int, int);
    Code:
       0: aload_0
       1: getstatic     #95                 // Field scala/Option$.MODULE$:Lscala/Option$;
       4: new           #97                 // class akka/event/Logging$LogLevel
       7: dup
       8: iload_1
       9: invokespecial #100                // Method akka/event/Logging$LogLevel."<init>":(I)V
      12: invokevirtual #103                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      15: new           #105                // class akka/stream/Attributes$$anonfun$createLogLevels$1
      18: dup
      19: invokespecial #106                // Method akka/stream/Attributes$$anonfun$createLogLevels$1."<init>":()V
      22: invokevirtual #112                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      25: checkcast     #97                 // class akka/event/Logging$LogLevel
      28: invokevirtual #116                // Method akka/event/Logging$LogLevel.asInt:()I
      31: getstatic     #95                 // Field scala/Option$.MODULE$:Lscala/Option$;
      34: new           #97                 // class akka/event/Logging$LogLevel
      37: dup
      38: iload_2
      39: invokespecial #100                // Method akka/event/Logging$LogLevel."<init>":(I)V
      42: invokevirtual #103                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      45: new           #118                // class akka/stream/Attributes$$anonfun$createLogLevels$2
      48: dup
      49: invokespecial #119                // Method akka/stream/Attributes$$anonfun$createLogLevels$2."<init>":()V
      52: invokevirtual #112                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      55: checkcast     #97                 // class akka/event/Logging$LogLevel
      58: invokevirtual #116                // Method akka/event/Logging$LogLevel.asInt:()I
      61: getstatic     #95                 // Field scala/Option$.MODULE$:Lscala/Option$;
      64: new           #97                 // class akka/event/Logging$LogLevel
      67: dup
      68: iload_3
      69: invokespecial #100                // Method akka/event/Logging$LogLevel."<init>":(I)V
      72: invokevirtual #103                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      75: new           #121                // class akka/stream/Attributes$$anonfun$createLogLevels$3
      78: dup
      79: invokespecial #122                // Method akka/stream/Attributes$$anonfun$createLogLevels$3."<init>":()V
      82: invokevirtual #112                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      85: checkcast     #97                 // class akka/event/Logging$LogLevel
      88: invokevirtual #116                // Method akka/event/Logging$LogLevel.asInt:()I
      91: invokevirtual #125                // Method logLevels:(III)Lakka/stream/Attributes;
      94: areturn

  public akka.stream.Attributes logLevels(int, int, int);
    Code:
       0: aload_0
       1: new           #130                // class akka/stream/Attributes$LogLevels
       4: dup
       5: iload_1
       6: iload_2
       7: iload_3
       8: invokespecial #133                // Method akka/stream/Attributes$LogLevels."<init>":(III)V
      11: invokevirtual #77                 // Method apply:(Lakka/stream/Attributes$Attribute;)Lakka/stream/Attributes;
      14: areturn

  public int logLevels$default$1();
    Code:
       0: getstatic     #139                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #142                // Method akka/event/Logging$.DebugLevel:()I
       6: ireturn

  public int logLevels$default$2();
    Code:
       0: getstatic     #139                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #142                // Method akka/event/Logging$.DebugLevel:()I
       6: ireturn

  public int logLevels$default$3();
    Code:
       0: getstatic     #139                // Field akka/event/Logging$.MODULE$:Lakka/event/Logging$;
       3: invokevirtual #147                // Method akka/event/Logging$.ErrorLevel:()I
       6: ireturn

  public java.lang.String extractName(akka.stream.impl.StreamLayout$Module, java.lang.String);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #151                // class akka/stream/impl/StreamLayout$CopiedModule
       6: ifeq          50
       9: aload_3
      10: checkcast     #151                // class akka/stream/impl/StreamLayout$CopiedModule
      13: astore        4
      15: aload         4
      17: invokevirtual #154                // Method akka/stream/impl/StreamLayout$CopiedModule.attributes:()Lakka/stream/Attributes;
      20: astore        5
      22: aload         4
      24: invokevirtual #158                // Method akka/stream/impl/StreamLayout$CopiedModule.copyOf:()Lakka/stream/impl/StreamLayout$Module;
      27: astore        6
      29: aload         5
      31: aload         6
      33: invokeinterface #161,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.attributes:()Lakka/stream/Attributes;
      38: invokevirtual #165                // Method akka/stream/Attributes.and:(Lakka/stream/Attributes;)Lakka/stream/Attributes;
      41: aload_2
      42: invokevirtual #169                // Method akka/stream/Attributes.nameOrDefault:(Ljava/lang/String;)Ljava/lang/String;
      45: astore        7
      47: goto          62
      50: aload_1
      51: invokeinterface #161,  1          // InterfaceMethod akka/stream/impl/StreamLayout$Module.attributes:()Lakka/stream/Attributes;
      56: aload_2
      57: invokevirtual #169                // Method akka/stream/Attributes.nameOrDefault:(Ljava/lang/String;)Ljava/lang/String;
      60: astore        7
      62: aload         7
      64: areturn

  public akka.stream.Attributes apply(scala.collection.immutable.List<akka.stream.Attributes$Attribute>);
    Code:
       0: new           #21                 // class akka/stream/Attributes
       3: dup
       4: aload_1
       5: invokespecial #45                 // Method akka/stream/Attributes."<init>":(Lscala/collection/immutable/List;)V
       8: areturn

  public scala.Option<scala.collection.immutable.List<akka.stream.Attributes$Attribute>> unapply(akka.stream.Attributes);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          21
      10: new           #185                // class scala/Some
      13: dup
      14: aload_1
      15: invokevirtual #187                // Method akka/stream/Attributes.attributeList:()Lscala/collection/immutable/List;
      18: invokespecial #190                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      21: areturn

  public scala.collection.immutable.List<akka.stream.Attributes$Attribute> $lessinit$greater$default$1();
    Code:
       0: getstatic     #55                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #196                // Field MODULE$:Lakka/stream/Attributes$;
       3: areturn

  private akka.stream.Attributes$();
    Code:
       0: aload_0
       1: invokespecial #197                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #196                // Field MODULE$:Lakka/stream/Attributes$;
       8: aload_0
       9: new           #21                 // class akka/stream/Attributes
      12: dup
      13: aload_0
      14: invokevirtual #199                // Method apply$default$1:()Lscala/collection/immutable/List;
      17: invokespecial #45                 // Method akka/stream/Attributes."<init>":(Lscala/collection/immutable/List;)V
      20: putfield      #58                 // Field none:Lakka/stream/Attributes;
      23: aload_0
      24: aload_0
      25: getstatic     #204                // Field akka/stream/Attributes$AsyncBoundary$.MODULE$:Lakka/stream/Attributes$AsyncBoundary$;
      28: invokevirtual #77                 // Method apply:(Lakka/stream/Attributes$Attribute;)Lakka/stream/Attributes;
      31: putfield      #60                 // Field asyncBoundary:Lakka/stream/Attributes;
      34: return
}
