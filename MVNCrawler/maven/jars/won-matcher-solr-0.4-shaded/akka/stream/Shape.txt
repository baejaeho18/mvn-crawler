Compiled from "Shape.scala"
public abstract class akka.stream.Shape {
  public abstract scala.collection.immutable.Seq<akka.stream.Inlet<?>> inlets();

  public abstract scala.collection.immutable.Seq<akka.stream.Outlet<?>> outlets();

  public abstract akka.stream.Shape deepCopy();

  public abstract akka.stream.Shape copyFromPorts(scala.collection.immutable.Seq<akka.stream.Inlet<?>>, scala.collection.immutable.Seq<akka.stream.Outlet<?>>);

  public java.util.List<akka.stream.Inlet<?>> getInlets();
    Code:
       0: getstatic     #23                 // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
       3: aload_0
       4: invokevirtual #25                 // Method inlets:()Lscala/collection/immutable/Seq;
       7: invokevirtual #29                 // Method scala/collection/JavaConverters$.seqAsJavaListConverter:(Lscala/collection/Seq;)Lscala/collection/convert/Decorators$AsJava;
      10: invokevirtual #35                 // Method scala/collection/convert/Decorators$AsJava.asJava:()Ljava/lang/Object;
      13: checkcast     #37                 // class java/util/List
      16: areturn

  public java.util.List<akka.stream.Outlet<?>> getOutlets();
    Code:
       0: getstatic     #23                 // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
       3: aload_0
       4: invokevirtual #42                 // Method outlets:()Lscala/collection/immutable/Seq;
       7: invokevirtual #29                 // Method scala/collection/JavaConverters$.seqAsJavaListConverter:(Lscala/collection/Seq;)Lscala/collection/convert/Decorators$AsJava;
      10: invokevirtual #35                 // Method scala/collection/convert/Decorators$AsJava.asJava:()Ljava/lang/Object;
      13: checkcast     #37                 // class java/util/List
      16: areturn

  public boolean hasSamePortsAs(akka.stream.Shape);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method inlets:()Lscala/collection/immutable/Seq;
       4: invokeinterface #50,  1           // InterfaceMethod scala/collection/immutable/Seq.toSet:()Lscala/collection/immutable/Set;
       9: aload_1
      10: invokevirtual #25                 // Method inlets:()Lscala/collection/immutable/Seq;
      13: invokeinterface #50,  1           // InterfaceMethod scala/collection/immutable/Seq.toSet:()Lscala/collection/immutable/Set;
      18: astore_2
      19: dup
      20: ifnonnull     31
      23: pop
      24: aload_2
      25: ifnull        38
      28: goto          80
      31: aload_2
      32: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          80
      38: aload_0
      39: invokevirtual #42                 // Method outlets:()Lscala/collection/immutable/Seq;
      42: invokeinterface #50,  1           // InterfaceMethod scala/collection/immutable/Seq.toSet:()Lscala/collection/immutable/Set;
      47: aload_1
      48: invokevirtual #42                 // Method outlets:()Lscala/collection/immutable/Seq;
      51: invokeinterface #50,  1           // InterfaceMethod scala/collection/immutable/Seq.toSet:()Lscala/collection/immutable/Set;
      56: astore_3
      57: dup
      58: ifnonnull     69
      61: pop
      62: aload_3
      63: ifnull        76
      66: goto          80
      69: aload_3
      70: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public boolean hasSamePortsAndShapeAs(akka.stream.Shape);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method inlets:()Lscala/collection/immutable/Seq;
       4: aload_1
       5: invokevirtual #25                 // Method inlets:()Lscala/collection/immutable/Seq;
       8: astore_2
       9: dup
      10: ifnonnull     21
      13: pop
      14: aload_2
      15: ifnull        28
      18: goto          60
      21: aload_2
      22: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          60
      28: aload_0
      29: invokevirtual #42                 // Method outlets:()Lscala/collection/immutable/Seq;
      32: aload_1
      33: invokevirtual #42                 // Method outlets:()Lscala/collection/immutable/Seq;
      36: astore_3
      37: dup
      38: ifnonnull     49
      41: pop
      42: aload_3
      43: ifnull        56
      46: goto          60
      49: aload_3
      50: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public void requireSamePortsAs(akka.stream.Shape);
    Code:
       0: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: aload_1
       5: invokevirtual #67                 // Method hasSamePortsAs:(Lakka/stream/Shape;)Z
       8: new           #69                 // class akka/stream/Shape$$anonfun$requireSamePortsAs$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #73                 // Method akka/stream/Shape$$anonfun$requireSamePortsAs$1."<init>":(Lakka/stream/Shape;Lakka/stream/Shape;)V
      17: invokevirtual #77                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      20: return

  public void requireSamePortsAndShapeAs(akka.stream.Shape);
    Code:
       0: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: aload_1
       5: invokevirtual #80                 // Method hasSamePortsAndShapeAs:(Lakka/stream/Shape;)Z
       8: new           #82                 // class akka/stream/Shape$$anonfun$requireSamePortsAndShapeAs$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #83                 // Method akka/stream/Shape$$anonfun$requireSamePortsAndShapeAs$1."<init>":(Lakka/stream/Shape;Lakka/stream/Shape;)V
      17: invokevirtual #77                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      20: return

  public java.lang.String akka$stream$Shape$$nonCorrespondingMessage(akka.stream.Shape);
    Code:
       0: new           #87                 // class scala/StringContext
       3: dup
       4: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iconst_5
       8: anewarray     #89                 // class java/lang/String
      11: dup
      12: iconst_0
      13: ldc           #91                 // String The inlets [
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #93                 // String ] and outlets [
      20: aastore
      21: dup
      22: iconst_2
      23: ldc           #95                 // String ] must correspond to the inlets [
      25: aastore
      26: dup
      27: iconst_3
      28: ldc           #93                 // String ] and outlets [
      30: aastore
      31: dup
      32: iconst_4
      33: ldc           #97                 // String ]
      35: aastore
      36: checkcast     #99                 // class "[Ljava/lang/Object;"
      39: invokevirtual #103                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      42: invokespecial #106                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      45: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      48: iconst_4
      49: anewarray     #4                  // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_1
      55: invokevirtual #25                 // Method inlets:()Lscala/collection/immutable/Seq;
      58: ldc           #108                // String ,
      60: invokeinterface #112,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
      65: aastore
      66: dup
      67: iconst_1
      68: aload_1
      69: invokevirtual #42                 // Method outlets:()Lscala/collection/immutable/Seq;
      72: ldc           #108                // String ,
      74: invokeinterface #112,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
      79: aastore
      80: dup
      81: iconst_2
      82: aload_0
      83: invokevirtual #25                 // Method inlets:()Lscala/collection/immutable/Seq;
      86: ldc           #108                // String ,
      88: invokeinterface #112,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
      93: aastore
      94: dup
      95: iconst_3
      96: aload_0
      97: invokevirtual #42                 // Method outlets:()Lscala/collection/immutable/Seq;
     100: ldc           #108                // String ,
     102: invokeinterface #112,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
     107: aastore
     108: invokevirtual #116                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     111: invokevirtual #119                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     114: areturn

  public akka.stream.Shape();
    Code:
       0: aload_0
       1: invokespecial #122                // Method java/lang/Object."<init>":()V
       4: return
}
