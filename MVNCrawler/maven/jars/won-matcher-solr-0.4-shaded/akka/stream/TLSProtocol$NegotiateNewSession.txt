Compiled from "SslTlsOptions.scala"
public class akka.stream.TLSProtocol$NegotiateNewSession implements akka.stream.TLSProtocol$SslTlsOutbound,scala.Product,scala.Serializable {
  private final scala.Option<scala.collection.immutable.Seq<java.lang.String>> enabledCipherSuites;

  private final scala.Option<scala.collection.immutable.Seq<java.lang.String>> enabledProtocols;

  private final scala.Option<akka.stream.TLSClientAuth> clientAuth;

  private final scala.Option<javax.net.ssl.SSLParameters> sslParameters;

  public akka.stream.TLSProtocol$NegotiateNewSession withCipherSuites(java.lang.String...);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: aload_1
       5: checkcast     #29                 // class "[Ljava/lang/Object;"
       8: invokevirtual #33                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      11: invokevirtual #36                 // Method withCipherSuites:(Lscala/collection/Seq;)Lakka/stream/TLSProtocol$NegotiateNewSession;
      14: areturn

  public akka.stream.TLSProtocol$NegotiateNewSession withProtocols(java.lang.String...);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: aload_1
       5: checkcast     #29                 // class "[Ljava/lang/Object;"
       8: invokevirtual #33                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      11: invokevirtual #43                 // Method withProtocols:(Lscala/collection/Seq;)Lakka/stream/TLSProtocol$NegotiateNewSession;
      14: areturn

  public scala.Option<scala.collection.immutable.Seq<java.lang.String>> enabledCipherSuites();
    Code:
       0: aload_0
       1: getfield      #47                 // Field enabledCipherSuites:Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<java.lang.String>> enabledProtocols();
    Code:
       0: aload_0
       1: getfield      #49                 // Field enabledProtocols:Lscala/Option;
       4: areturn

  public scala.Option<akka.stream.TLSClientAuth> clientAuth();
    Code:
       0: aload_0
       1: getfield      #51                 // Field clientAuth:Lscala/Option;
       4: areturn

  public scala.Option<javax.net.ssl.SSLParameters> sslParameters();
    Code:
       0: aload_0
       1: getfield      #53                 // Field sslParameters:Lscala/Option;
       4: areturn

  public akka.stream.TLSProtocol$NegotiateNewSession withCipherSuites(scala.collection.Seq<java.lang.String>);
    Code:
       0: aload_0
       1: new           #55                 // class scala/Some
       4: dup
       5: aload_1
       6: invokeinterface #61,  1           // InterfaceMethod scala/collection/Seq.toList:()Lscala/collection/immutable/List;
      11: invokespecial #65                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      14: aload_0
      15: invokevirtual #68                 // Method copy$default$2:()Lscala/Option;
      18: aload_0
      19: invokevirtual #71                 // Method copy$default$3:()Lscala/Option;
      22: aload_0
      23: invokevirtual #74                 // Method copy$default$4:()Lscala/Option;
      26: invokevirtual #78                 // Method copy:(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;)Lakka/stream/TLSProtocol$NegotiateNewSession;
      29: areturn

  public akka.stream.TLSProtocol$NegotiateNewSession withProtocols(scala.collection.Seq<java.lang.String>);
    Code:
       0: new           #55                 // class scala/Some
       3: dup
       4: aload_1
       5: invokeinterface #61,  1           // InterfaceMethod scala/collection/Seq.toList:()Lscala/collection/immutable/List;
      10: invokespecial #65                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      13: astore_2
      14: aload_0
      15: invokevirtual #82                 // Method copy$default$1:()Lscala/Option;
      18: astore_3
      19: aload_0
      20: invokevirtual #71                 // Method copy$default$3:()Lscala/Option;
      23: astore        4
      25: aload_0
      26: invokevirtual #74                 // Method copy$default$4:()Lscala/Option;
      29: astore        5
      31: aload_0
      32: aload_3
      33: aload_2
      34: aload         4
      36: aload         5
      38: invokevirtual #78                 // Method copy:(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;)Lakka/stream/TLSProtocol$NegotiateNewSession;
      41: areturn

  public akka.stream.TLSProtocol$NegotiateNewSession withClientAuth(akka.stream.TLSClientAuth);
    Code:
       0: new           #55                 // class scala/Some
       3: dup
       4: aload_1
       5: invokespecial #65                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_0
      10: invokevirtual #82                 // Method copy$default$1:()Lscala/Option;
      13: astore_3
      14: aload_0
      15: invokevirtual #68                 // Method copy$default$2:()Lscala/Option;
      18: astore        4
      20: aload_0
      21: invokevirtual #74                 // Method copy$default$4:()Lscala/Option;
      24: astore        5
      26: aload_0
      27: aload_3
      28: aload         4
      30: aload_2
      31: aload         5
      33: invokevirtual #78                 // Method copy:(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;)Lakka/stream/TLSProtocol$NegotiateNewSession;
      36: areturn

  public akka.stream.TLSProtocol$NegotiateNewSession withParameters(javax.net.ssl.SSLParameters);
    Code:
       0: new           #55                 // class scala/Some
       3: dup
       4: aload_1
       5: invokespecial #65                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_0
      10: invokevirtual #82                 // Method copy$default$1:()Lscala/Option;
      13: astore_3
      14: aload_0
      15: invokevirtual #68                 // Method copy$default$2:()Lscala/Option;
      18: astore        4
      20: aload_0
      21: invokevirtual #71                 // Method copy$default$3:()Lscala/Option;
      24: astore        5
      26: aload_0
      27: aload_3
      28: aload         4
      30: aload         5
      32: aload_2
      33: invokevirtual #78                 // Method copy:(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;)Lakka/stream/TLSProtocol$NegotiateNewSession;
      36: areturn

  public akka.stream.TLSProtocol$NegotiateNewSession copy(scala.Option<scala.collection.immutable.Seq<java.lang.String>>, scala.Option<scala.collection.immutable.Seq<java.lang.String>>, scala.Option<akka.stream.TLSClientAuth>, scala.Option<javax.net.ssl.SSLParameters>);
    Code:
       0: new           #2                  // class akka/stream/TLSProtocol$NegotiateNewSession
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #105                // Method "<init>":(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;)V
      12: areturn

  public scala.Option<scala.collection.immutable.Seq<java.lang.String>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #107                // Method enabledCipherSuites:()Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<java.lang.String>> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #109                // Method enabledProtocols:()Lscala/Option;
       4: areturn

  public scala.Option<akka.stream.TLSClientAuth> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method clientAuth:()Lscala/Option;
       4: areturn

  public scala.Option<javax.net.ssl.SSLParameters> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method sslParameters:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #117                // String NegotiateNewSession
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 68
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #123                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #129                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #132                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #135                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #113                // Method sslParameters:()Lscala/Option;
      51: goto          72
      54: aload_0
      55: invokevirtual #111                // Method clientAuth:()Lscala/Option;
      58: goto          72
      61: aload_0
      62: invokevirtual #109                // Method enabledProtocols:()Lscala/Option;
      65: goto          72
      68: aload_0
      69: invokevirtual #107                // Method enabledCipherSuites:()Lscala/Option;
      72: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #145                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #149                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/TLSProtocol$NegotiateNewSession
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #145                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #157                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #145                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #161                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     176
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/TLSProtocol$NegotiateNewSession
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          180
      25: aload_1
      26: checkcast     #2                  // class akka/stream/TLSProtocol$NegotiateNewSession
      29: astore        4
      31: aload_0
      32: invokevirtual #107                // Method enabledCipherSuites:()Lscala/Option;
      35: aload         4
      37: invokevirtual #107                // Method enabledCipherSuites:()Lscala/Option;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          172
      55: aload         5
      57: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          172
      63: aload_0
      64: invokevirtual #109                // Method enabledProtocols:()Lscala/Option;
      67: aload         4
      69: invokevirtual #109                // Method enabledProtocols:()Lscala/Option;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          172
      87: aload         6
      89: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          172
      95: aload_0
      96: invokevirtual #111                // Method clientAuth:()Lscala/Option;
      99: aload         4
     101: invokevirtual #111                // Method clientAuth:()Lscala/Option;
     104: astore        7
     106: dup
     107: ifnonnull     119
     110: pop
     111: aload         7
     113: ifnull        127
     116: goto          172
     119: aload         7
     121: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifeq          172
     127: aload_0
     128: invokevirtual #113                // Method sslParameters:()Lscala/Option;
     131: aload         4
     133: invokevirtual #113                // Method sslParameters:()Lscala/Option;
     136: astore        8
     138: dup
     139: ifnonnull     151
     142: pop
     143: aload         8
     145: ifnull        159
     148: goto          172
     151: aload         8
     153: invokevirtual #164                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     156: ifeq          172
     159: aload         4
     161: aload_0
     162: invokevirtual #166                // Method canEqual:(Ljava/lang/Object;)Z
     165: ifeq          172
     168: iconst_1
     169: goto          173
     172: iconst_0
     173: ifeq          180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: ireturn

  public akka.stream.TLSProtocol$NegotiateNewSession(scala.Option<scala.collection.immutable.Seq<java.lang.String>>, scala.Option<scala.collection.immutable.Seq<java.lang.String>>, scala.Option<akka.stream.TLSClientAuth>, scala.Option<javax.net.ssl.SSLParameters>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field enabledCipherSuites:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #49                 // Field enabledProtocols:Lscala/Option;
      10: aload_0
      11: aload_3
      12: putfield      #51                 // Field clientAuth:Lscala/Option;
      15: aload_0
      16: aload         4
      18: putfield      #53                 // Field sslParameters:Lscala/Option;
      21: aload_0
      22: invokespecial #169                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #175                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: return
}
