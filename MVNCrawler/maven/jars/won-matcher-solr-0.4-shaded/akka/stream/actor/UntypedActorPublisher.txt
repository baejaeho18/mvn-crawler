Compiled from "ActorPublisher.scala"
public abstract class akka.stream.actor.UntypedActorPublisher<T> extends akka.actor.UntypedActor implements akka.stream.actor.ActorPublisher<T> {
  private final akka.stream.actor.ActorPublisherState akka$stream$actor$ActorPublisher$$state;

  private org.reactivestreams.Subscriber<java.lang.Object> akka$stream$actor$ActorPublisher$$subscriber;

  private long akka$stream$actor$ActorPublisher$$demand;

  private akka.stream.actor.ActorPublisher$Internal$LifecycleState akka$stream$actor$ActorPublisher$$lifecycleState;

  private akka.actor.Cancellable akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout;

  public static <T> org.reactivestreams.Publisher<T> create(akka.actor.ActorRef);
    Code:
       0: getstatic     #19                 // Field akka/stream/actor/UntypedActorPublisher$.MODULE$:Lakka/stream/actor/UntypedActorPublisher$;
       3: aload_0
       4: invokevirtual #21                 // Method akka/stream/actor/UntypedActorPublisher$.create:(Lakka/actor/ActorRef;)Lorg/reactivestreams/Publisher;
       7: areturn

  public akka.stream.actor.ActorPublisherState akka$stream$actor$ActorPublisher$$state();
    Code:
       0: aload_0
       1: getfield      #35                 // Field akka$stream$actor$ActorPublisher$$state:Lakka/stream/actor/ActorPublisherState;
       4: areturn

  public org.reactivestreams.Subscriber<java.lang.Object> akka$stream$actor$ActorPublisher$$subscriber();
    Code:
       0: aload_0
       1: getfield      #40                 // Field akka$stream$actor$ActorPublisher$$subscriber:Lorg/reactivestreams/Subscriber;
       4: areturn

  public void akka$stream$actor$ActorPublisher$$subscriber_$eq(org.reactivestreams.Subscriber<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field akka$stream$actor$ActorPublisher$$subscriber:Lorg/reactivestreams/Subscriber;
       5: return

  public long akka$stream$actor$ActorPublisher$$demand();
    Code:
       0: aload_0
       1: getfield      #47                 // Field akka$stream$actor$ActorPublisher$$demand:J
       4: lreturn

  public void akka$stream$actor$ActorPublisher$$demand_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #47                 // Field akka$stream$actor$ActorPublisher$$demand:J
       5: return

  public akka.stream.actor.ActorPublisher$Internal$LifecycleState akka$stream$actor$ActorPublisher$$lifecycleState();
    Code:
       0: aload_0
       1: getfield      #52                 // Field akka$stream$actor$ActorPublisher$$lifecycleState:Lakka/stream/actor/ActorPublisher$Internal$LifecycleState;
       4: areturn

  public void akka$stream$actor$ActorPublisher$$lifecycleState_$eq(akka.stream.actor.ActorPublisher$Internal$LifecycleState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field akka$stream$actor$ActorPublisher$$lifecycleState:Lakka/stream/actor/ActorPublisher$Internal$LifecycleState;
       5: return

  public akka.actor.Cancellable akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout();
    Code:
       0: aload_0
       1: getfield      #57                 // Field akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout:Lakka/actor/Cancellable;
       4: areturn

  public void akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout_$eq(akka.actor.Cancellable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout:Lakka/actor/Cancellable;
       5: return

  public void akka$stream$actor$ActorPublisher$$super$aroundReceive(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #77                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPreRestart(java.lang.Throwable, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void akka$stream$actor$ActorPublisher$_setter_$akka$stream$actor$ActorPublisher$$state_$eq(akka.stream.actor.ActorPublisherState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field akka$stream$actor$ActorPublisher$$state:Lakka/stream/actor/ActorPublisherState;
       5: return

  public scala.concurrent.duration.Duration subscriptionTimeout();
    Code:
       0: aload_0
       1: invokestatic  #106                // Method akka/stream/actor/ActorPublisher$class.subscriptionTimeout:(Lakka/stream/actor/ActorPublisher;)Lscala/concurrent/duration/Duration;
       4: areturn

  public final boolean isActive();
    Code:
       0: aload_0
       1: invokestatic  #111                // Method akka/stream/actor/ActorPublisher$class.isActive:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public final long totalDemand();
    Code:
       0: aload_0
       1: invokestatic  #115                // Method akka/stream/actor/ActorPublisher$class.totalDemand:(Lakka/stream/actor/ActorPublisher;)J
       4: lreturn

  public final boolean isCompleted();
    Code:
       0: aload_0
       1: invokestatic  #118                // Method akka/stream/actor/ActorPublisher$class.isCompleted:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public final boolean isErrorEmitted();
    Code:
       0: aload_0
       1: invokestatic  #121                // Method akka/stream/actor/ActorPublisher$class.isErrorEmitted:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public final boolean isCanceled();
    Code:
       0: aload_0
       1: invokestatic  #124                // Method akka/stream/actor/ActorPublisher$class.isCanceled:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // Method akka/stream/actor/ActorPublisher$class.onNext:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Object;)V
       5: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokestatic  #134                // Method akka/stream/actor/ActorPublisher$class.onComplete:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public void onCompleteThenStop();
    Code:
       0: aload_0
       1: invokestatic  #137                // Method akka/stream/actor/ActorPublisher$class.onCompleteThenStop:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // Method akka/stream/actor/ActorPublisher$class.onError:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;)V
       5: return

  public void onErrorThenStop(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // Method akka/stream/actor/ActorPublisher$class.onErrorThenStop:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;)V
       5: return

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // Method akka/stream/actor/ActorPublisher$class.aroundReceive:(Lakka/stream/actor/ActorPublisher;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #150                // Method akka/stream/actor/ActorPublisher$class.aroundPreStart:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #153                // Method akka/stream/actor/ActorPublisher$class.aroundPreRestart:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method akka/stream/actor/ActorPublisher$class.aroundPostRestart:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;)V
       5: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #157                // Method akka/stream/actor/ActorPublisher$class.aroundPostStop:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public akka.stream.actor.UntypedActorPublisher();
    Code:
       0: aload_0
       1: invokespecial #160                // Method akka/actor/UntypedActor."<init>":()V
       4: aload_0
       5: invokestatic  #163                // Method akka/stream/actor/ActorPublisher$class.$init$:(Lakka/stream/actor/ActorPublisher;)V
       8: return
}
