Compiled from "ActorPublisher.scala"
public abstract class akka.stream.actor.AbstractActorPublisherWithStash<T> extends akka.actor.AbstractActor implements akka.stream.actor.ActorPublisher<T>, akka.actor.Stash {
  private scala.collection.immutable.Vector<akka.dispatch.Envelope> akka$actor$StashSupport$$theStash;

  private final int akka$actor$StashSupport$$capacity;

  private final akka.dispatch.DequeBasedMessageQueueSemantics mailbox;

  private final akka.stream.actor.ActorPublisherState akka$stream$actor$ActorPublisher$$state;

  private org.reactivestreams.Subscriber<java.lang.Object> akka$stream$actor$ActorPublisher$$subscriber;

  private long akka$stream$actor$ActorPublisher$$demand;

  private akka.stream.actor.ActorPublisher$Internal$LifecycleState akka$stream$actor$ActorPublisher$$lifecycleState;

  private akka.actor.Cancellable akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout;

  public void akka$actor$UnrestrictedStash$$super$preRestart(java.lang.Throwable, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void akka$actor$UnrestrictedStash$$super$postStop();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // Method akka/actor/UnrestrictedStash$class.preRestart:(Lakka/actor/UnrestrictedStash;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postStop();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method akka/actor/UnrestrictedStash$class.postStop:(Lakka/actor/UnrestrictedStash;)V
       4: return

  public scala.collection.immutable.Vector<akka.dispatch.Envelope> akka$actor$StashSupport$$theStash();
    Code:
       0: aload_0
       1: getfield      #62                 // Field akka$actor$StashSupport$$theStash:Lscala/collection/immutable/Vector;
       4: areturn

  public void akka$actor$StashSupport$$theStash_$eq(scala.collection.immutable.Vector<akka.dispatch.Envelope>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field akka$actor$StashSupport$$theStash:Lscala/collection/immutable/Vector;
       5: return

  public int akka$actor$StashSupport$$capacity();
    Code:
       0: aload_0
       1: getfield      #68                 // Field akka$actor$StashSupport$$capacity:I
       4: ireturn

  public akka.dispatch.DequeBasedMessageQueueSemantics mailbox();
    Code:
       0: aload_0
       1: getfield      #71                 // Field mailbox:Lakka/dispatch/DequeBasedMessageQueueSemantics;
       4: areturn

  public void akka$actor$StashSupport$_setter_$akka$actor$StashSupport$$capacity_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #68                 // Field akka$actor$StashSupport$$capacity:I
       5: return

  public void akka$actor$StashSupport$_setter_$mailbox_$eq(akka.dispatch.DequeBasedMessageQueueSemantics);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field mailbox:Lakka/dispatch/DequeBasedMessageQueueSemantics;
       5: return

  public void stash();
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method akka/actor/StashSupport$class.stash:(Lakka/actor/StashSupport;)V
       4: return

  public void prepend(scala.collection.immutable.Seq<akka.dispatch.Envelope>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method akka/actor/StashSupport$class.prepend:(Lakka/actor/StashSupport;Lscala/collection/immutable/Seq;)V
       5: return

  public void unstash();
    Code:
       0: aload_0
       1: invokestatic  #91                 // Method akka/actor/StashSupport$class.unstash:(Lakka/actor/StashSupport;)V
       4: return

  public void unstashAll();
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method akka/actor/StashSupport$class.unstashAll:(Lakka/actor/StashSupport;)V
       4: return

  public void unstashAll(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method akka/actor/StashSupport$class.unstashAll:(Lakka/actor/StashSupport;Lscala/Function1;)V
       5: return

  public scala.collection.immutable.Vector<akka.dispatch.Envelope> clearStash();
    Code:
       0: aload_0
       1: invokestatic  #104                // Method akka/actor/StashSupport$class.clearStash:(Lakka/actor/StashSupport;)Lscala/collection/immutable/Vector;
       4: areturn

  public akka.stream.actor.ActorPublisherState akka$stream$actor$ActorPublisher$$state();
    Code:
       0: aload_0
       1: getfield      #107                // Field akka$stream$actor$ActorPublisher$$state:Lakka/stream/actor/ActorPublisherState;
       4: areturn

  public org.reactivestreams.Subscriber<java.lang.Object> akka$stream$actor$ActorPublisher$$subscriber();
    Code:
       0: aload_0
       1: getfield      #110                // Field akka$stream$actor$ActorPublisher$$subscriber:Lorg/reactivestreams/Subscriber;
       4: areturn

  public void akka$stream$actor$ActorPublisher$$subscriber_$eq(org.reactivestreams.Subscriber<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #110                // Field akka$stream$actor$ActorPublisher$$subscriber:Lorg/reactivestreams/Subscriber;
       5: return

  public long akka$stream$actor$ActorPublisher$$demand();
    Code:
       0: aload_0
       1: getfield      #116                // Field akka$stream$actor$ActorPublisher$$demand:J
       4: lreturn

  public void akka$stream$actor$ActorPublisher$$demand_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #116                // Field akka$stream$actor$ActorPublisher$$demand:J
       5: return

  public akka.stream.actor.ActorPublisher$Internal$LifecycleState akka$stream$actor$ActorPublisher$$lifecycleState();
    Code:
       0: aload_0
       1: getfield      #121                // Field akka$stream$actor$ActorPublisher$$lifecycleState:Lakka/stream/actor/ActorPublisher$Internal$LifecycleState;
       4: areturn

  public void akka$stream$actor$ActorPublisher$$lifecycleState_$eq(akka.stream.actor.ActorPublisher$Internal$LifecycleState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field akka$stream$actor$ActorPublisher$$lifecycleState:Lakka/stream/actor/ActorPublisher$Internal$LifecycleState;
       5: return

  public akka.actor.Cancellable akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout();
    Code:
       0: aload_0
       1: getfield      #126                // Field akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout:Lakka/actor/Cancellable;
       4: areturn

  public void akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout_$eq(akka.actor.Cancellable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #126                // Field akka$stream$actor$ActorPublisher$$scheduledSubscriptionTimeout:Lakka/actor/Cancellable;
       5: return

  public void akka$stream$actor$ActorPublisher$$super$aroundReceive(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #142                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPreRestart(java.lang.Throwable, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void akka$stream$actor$ActorPublisher$$super$aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #156                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void akka$stream$actor$ActorPublisher$_setter_$akka$stream$actor$ActorPublisher$$state_$eq(akka.stream.actor.ActorPublisherState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #107                // Field akka$stream$actor$ActorPublisher$$state:Lakka/stream/actor/ActorPublisherState;
       5: return

  public scala.concurrent.duration.Duration subscriptionTimeout();
    Code:
       0: aload_0
       1: invokestatic  #165                // Method akka/stream/actor/ActorPublisher$class.subscriptionTimeout:(Lakka/stream/actor/ActorPublisher;)Lscala/concurrent/duration/Duration;
       4: areturn

  public final boolean isActive();
    Code:
       0: aload_0
       1: invokestatic  #170                // Method akka/stream/actor/ActorPublisher$class.isActive:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public final long totalDemand();
    Code:
       0: aload_0
       1: invokestatic  #174                // Method akka/stream/actor/ActorPublisher$class.totalDemand:(Lakka/stream/actor/ActorPublisher;)J
       4: lreturn

  public final boolean isCompleted();
    Code:
       0: aload_0
       1: invokestatic  #177                // Method akka/stream/actor/ActorPublisher$class.isCompleted:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public final boolean isErrorEmitted();
    Code:
       0: aload_0
       1: invokestatic  #180                // Method akka/stream/actor/ActorPublisher$class.isErrorEmitted:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public final boolean isCanceled();
    Code:
       0: aload_0
       1: invokestatic  #183                // Method akka/stream/actor/ActorPublisher$class.isCanceled:(Lakka/stream/actor/ActorPublisher;)Z
       4: ireturn

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // Method akka/stream/actor/ActorPublisher$class.onNext:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Object;)V
       5: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokestatic  #193                // Method akka/stream/actor/ActorPublisher$class.onComplete:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public void onCompleteThenStop();
    Code:
       0: aload_0
       1: invokestatic  #196                // Method akka/stream/actor/ActorPublisher$class.onCompleteThenStop:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #200                // Method akka/stream/actor/ActorPublisher$class.onError:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;)V
       5: return

  public void onErrorThenStop(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // Method akka/stream/actor/ActorPublisher$class.onErrorThenStop:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;)V
       5: return

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #207                // Method akka/stream/actor/ActorPublisher$class.aroundReceive:(Lakka/stream/actor/ActorPublisher;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #209                // Method akka/stream/actor/ActorPublisher$class.aroundPreStart:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #212                // Method akka/stream/actor/ActorPublisher$class.aroundPreRestart:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // Method akka/stream/actor/ActorPublisher$class.aroundPostRestart:(Lakka/stream/actor/ActorPublisher;Ljava/lang/Throwable;)V
       5: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #216                // Method akka/stream/actor/ActorPublisher$class.aroundPostStop:(Lakka/stream/actor/ActorPublisher;)V
       4: return

  public akka.stream.actor.AbstractActorPublisherWithStash();
    Code:
       0: aload_0
       1: invokespecial #219                // Method akka/actor/AbstractActor."<init>":()V
       4: aload_0
       5: invokestatic  #222                // Method akka/stream/actor/ActorPublisher$class.$init$:(Lakka/stream/actor/ActorPublisher;)V
       8: aload_0
       9: invokestatic  #224                // Method akka/actor/StashSupport$class.$init$:(Lakka/actor/StashSupport;)V
      12: aload_0
      13: invokestatic  #226                // Method akka/actor/UnrestrictedStash$class.$init$:(Lakka/actor/UnrestrictedStash;)V
      16: return
}
