Compiled from "ActorSubscriber.scala"
public abstract class akka.stream.actor.AbstractActorSubscriber extends akka.actor.AbstractActor implements akka.stream.actor.ActorSubscriber {
  private final akka.stream.actor.ActorSubscriberState akka$stream$actor$ActorSubscriber$$state;

  private scala.Option akka$stream$actor$ActorSubscriber$$subscription;

  private long akka$stream$actor$ActorSubscriber$$requested;

  private boolean akka$stream$actor$ActorSubscriber$$_canceled;

  public static <T> org.reactivestreams.Subscriber<T> create(akka.actor.ActorRef);
    Code:
       0: getstatic     #18                 // Field akka/stream/actor/AbstractActorSubscriber$.MODULE$:Lakka/stream/actor/AbstractActorSubscriber$;
       3: aload_0
       4: invokevirtual #20                 // Method akka/stream/actor/AbstractActorSubscriber$.create:(Lakka/actor/ActorRef;)Lorg/reactivestreams/Subscriber;
       7: areturn

  public void akka$stream$actor$ActorSubscriber$$super$aroundReceive(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPreRestart(java.lang.Throwable, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void akka$stream$actor$ActorSubscriber$$super$aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public akka.stream.actor.ActorSubscriberState akka$stream$actor$ActorSubscriber$$state();
    Code:
       0: aload_0
       1: getfield      #70                 // Field akka$stream$actor$ActorSubscriber$$state:Lakka/stream/actor/ActorSubscriberState;
       4: areturn

  public void akka$stream$actor$ActorSubscriber$_setter_$akka$stream$actor$ActorSubscriber$$state_$eq(akka.stream.actor.ActorSubscriberState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field akka$stream$actor$ActorSubscriber$$state:Lakka/stream/actor/ActorSubscriberState;
       5: return

  public scala.Option akka$stream$actor$ActorSubscriber$$subscription();
    Code:
       0: aload_0
       1: getfield      #76                 // Field akka$stream$actor$ActorSubscriber$$subscription:Lscala/Option;
       4: areturn

  public void akka$stream$actor$ActorSubscriber$$subscription_$eq(scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field akka$stream$actor$ActorSubscriber$$subscription:Lscala/Option;
       5: return

  public long akka$stream$actor$ActorSubscriber$$requested();
    Code:
       0: aload_0
       1: getfield      #81                 // Field akka$stream$actor$ActorSubscriber$$requested:J
       4: lreturn

  public void akka$stream$actor$ActorSubscriber$$requested_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #81                 // Field akka$stream$actor$ActorSubscriber$$requested:J
       5: return

  public boolean akka$stream$actor$ActorSubscriber$$_canceled();
    Code:
       0: aload_0
       1: getfield      #86                 // Field akka$stream$actor$ActorSubscriber$$_canceled:Z
       4: ireturn

  public void akka$stream$actor$ActorSubscriber$$_canceled_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #86                 // Field akka$stream$actor$ActorSubscriber$$_canceled:Z
       5: return

  public final boolean canceled();
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method akka/stream/actor/ActorSubscriber$class.canceled:(Lakka/stream/actor/ActorSubscriber;)Z
       4: ireturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // Method akka/stream/actor/ActorSubscriber$class.aroundReceive:(Lakka/stream/actor/ActorSubscriber;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #100                // Method akka/stream/actor/ActorSubscriber$class.aroundPreStart:(Lakka/stream/actor/ActorSubscriber;)V
       4: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method akka/stream/actor/ActorSubscriber$class.aroundPostRestart:(Lakka/stream/actor/ActorSubscriber;Ljava/lang/Throwable;)V
       5: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // Method akka/stream/actor/ActorSubscriber$class.aroundPreRestart:(Lakka/stream/actor/ActorSubscriber;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #108                // Method akka/stream/actor/ActorSubscriber$class.aroundPostStop:(Lakka/stream/actor/ActorSubscriber;)V
       4: return

  public void request(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #112                // Method akka/stream/actor/ActorSubscriber$class.request:(Lakka/stream/actor/ActorSubscriber;J)V
       5: return

  public void cancel();
    Code:
       0: aload_0
       1: invokestatic  #116                // Method akka/stream/actor/ActorSubscriber$class.cancel:(Lakka/stream/actor/ActorSubscriber;)V
       4: return

  public int remainingRequested();
    Code:
       0: aload_0
       1: invokestatic  #121                // Method akka/stream/actor/ActorSubscriber$class.remainingRequested:(Lakka/stream/actor/ActorSubscriber;)I
       4: ireturn

  public akka.stream.actor.AbstractActorSubscriber();
    Code:
       0: aload_0
       1: invokespecial #124                // Method akka/actor/AbstractActor."<init>":()V
       4: aload_0
       5: invokestatic  #127                // Method akka/stream/actor/ActorSubscriber$class.$init$:(Lakka/stream/actor/ActorSubscriber;)V
       8: return
}
