Compiled from "ActorSubscriber.scala"
public final class akka.stream.actor.ActorSubscriberState$State implements scala.Product,scala.Serializable {
  private final scala.Option<org.reactivestreams.Subscription> subscription;

  private final long requested;

  private final boolean canceled;

  public scala.Option<org.reactivestreams.Subscription> subscription();
    Code:
       0: aload_0
       1: getfield      #19                 // Field subscription:Lscala/Option;
       4: areturn

  public long requested();
    Code:
       0: aload_0
       1: getfield      #24                 // Field requested:J
       4: lreturn

  public boolean canceled();
    Code:
       0: aload_0
       1: getfield      #27                 // Field canceled:Z
       4: ireturn

  public akka.stream.actor.ActorSubscriberState$State copy(scala.Option<org.reactivestreams.Subscription>, long, boolean);
    Code:
       0: new           #2                  // class akka/stream/actor/ActorSubscriberState$State
       3: dup
       4: aload_1
       5: lload_2
       6: iload         4
       8: invokespecial #33                 // Method "<init>":(Lscala/Option;JZ)V
      11: areturn

  public scala.Option<org.reactivestreams.Subscription> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method subscription:()Lscala/Option;
       4: areturn

  public long copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method requested:()J
       4: lreturn

  public boolean copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method canceled:()Z
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #46                 // String State
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 63
                     1: 53
                     2: 43
               default: 28
          }
      28: new           #52                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #64                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #42                 // Method canceled:()Z
      47: invokestatic  #68                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      50: goto          67
      53: aload_0
      54: invokevirtual #39                 // Method requested:()J
      57: invokestatic  #72                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      60: goto          67
      63: aload_0
      64: invokevirtual #36                 // Method subscription:()Lscala/Option;
      67: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #82                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #86                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/actor/ActorSubscriberState$State
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #91                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #36                 // Method subscription:()Lscala/Option;
       8: invokestatic  #97                 // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #101                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #39                 // Method requested:()J
      20: invokestatic  #105                // Method scala/runtime/Statics.longHash:(J)I
      23: invokestatic  #101                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #42                 // Method canceled:()Z
      32: ifeq          41
      35: sipush        1231
      38: goto          44
      41: sipush        1237
      44: invokestatic  #101                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: iconst_3
      50: invokestatic  #108                // Method scala/runtime/Statics.finalizeHash:(II)I
      53: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #82                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #112                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     96
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/actor/ActorSubscriberState$State
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          100
      25: aload_1
      26: checkcast     #2                  // class akka/stream/actor/ActorSubscriberState$State
      29: astore        4
      31: aload_0
      32: invokevirtual #36                 // Method subscription:()Lscala/Option;
      35: aload         4
      37: invokevirtual #36                 // Method subscription:()Lscala/Option;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          92
      55: aload         5
      57: invokevirtual #115                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          92
      63: aload_0
      64: invokevirtual #39                 // Method requested:()J
      67: aload         4
      69: invokevirtual #39                 // Method requested:()J
      72: lcmp
      73: ifne          92
      76: aload_0
      77: invokevirtual #42                 // Method canceled:()Z
      80: aload         4
      82: invokevirtual #42                 // Method canceled:()Z
      85: if_icmpne     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ifeq          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ireturn

  public akka.stream.actor.ActorSubscriberState$State(scala.Option<org.reactivestreams.Subscription>, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field subscription:Lscala/Option;
       5: aload_0
       6: lload_2
       7: putfield      #24                 // Field requested:J
      10: aload_0
      11: iload         4
      13: putfield      #27                 // Field canceled:Z
      16: aload_0
      17: invokespecial #120                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #126                // Method scala/Product$class.$init$:(Lscala/Product;)V
      24: return
}
