Compiled from "ActorSubscriber.scala"
public final class akka.stream.actor.WatermarkRequestStrategy implements akka.stream.actor.RequestStrategy,scala.Product,scala.Serializable {
  private final int highWatermark;

  private final int lowWatermark;

  public static scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> unapply(akka.stream.actor.WatermarkRequestStrategy);
    Code:
       0: getstatic     #22                 // Field akka/stream/actor/WatermarkRequestStrategy$.MODULE$:Lakka/stream/actor/WatermarkRequestStrategy$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/stream/actor/WatermarkRequestStrategy$.unapply:(Lakka/stream/actor/WatermarkRequestStrategy;)Lscala/Option;
       7: areturn

  public static akka.stream.actor.WatermarkRequestStrategy apply(int, int);
    Code:
       0: getstatic     #22                 // Field akka/stream/actor/WatermarkRequestStrategy$.MODULE$:Lakka/stream/actor/WatermarkRequestStrategy$;
       3: iload_0
       4: iload_1
       5: invokevirtual #28                 // Method akka/stream/actor/WatermarkRequestStrategy$.apply:(II)Lakka/stream/actor/WatermarkRequestStrategy;
       8: areturn

  public static akka.stream.actor.WatermarkRequestStrategy apply(int);
    Code:
       0: getstatic     #22                 // Field akka/stream/actor/WatermarkRequestStrategy$.MODULE$:Lakka/stream/actor/WatermarkRequestStrategy$;
       3: iload_0
       4: invokevirtual #31                 // Method akka/stream/actor/WatermarkRequestStrategy$.apply:(I)Lakka/stream/actor/WatermarkRequestStrategy;
       7: areturn

  public int highWatermark();
    Code:
       0: aload_0
       1: getfield      #37                 // Field highWatermark:I
       4: ireturn

  public int lowWatermark();
    Code:
       0: aload_0
       1: getfield      #41                 // Field lowWatermark:I
       4: ireturn

  public int requestDemand(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #45                 // Method lowWatermark:()I
       5: if_icmpge     17
       8: aload_0
       9: invokevirtual #47                 // Method highWatermark:()I
      12: iload_1
      13: isub
      14: goto          18
      17: iconst_0
      18: ireturn

  public akka.stream.actor.WatermarkRequestStrategy copy(int, int);
    Code:
       0: new           #2                  // class akka/stream/actor/WatermarkRequestStrategy
       3: dup
       4: iload_1
       5: iload_2
       6: invokespecial #53                 // Method "<init>":(II)V
       9: areturn

  public int copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method highWatermark:()I
       4: ireturn

  public int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method lowWatermark:()I
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #59                 // String WatermarkRequestStrategy
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 49
                     1: 39
               default: 24
          }
      24: new           #64                 // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #73                 // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #76                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #45                 // Method lowWatermark:()I
      43: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      46: goto          56
      49: aload_0
      50: invokevirtual #47                 // Method highWatermark:()I
      53: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #86                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #90                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/actor/WatermarkRequestStrategy
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #95                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #47                 // Method highWatermark:()I
       8: invokestatic  #101                // Method scala/runtime/Statics.mix:(II)I
      11: istore_1
      12: iload_1
      13: aload_0
      14: invokevirtual #45                 // Method lowWatermark:()I
      17: invokestatic  #101                // Method scala/runtime/Statics.mix:(II)I
      20: istore_1
      21: iload_1
      22: iconst_2
      23: invokestatic  #104                // Method scala/runtime/Statics.finalizeHash:(II)I
      26: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #86                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #108                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     63
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/actor/WatermarkRequestStrategy
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          67
      25: aload_1
      26: checkcast     #2                  // class akka/stream/actor/WatermarkRequestStrategy
      29: astore        4
      31: aload_0
      32: invokevirtual #47                 // Method highWatermark:()I
      35: aload         4
      37: invokevirtual #47                 // Method highWatermark:()I
      40: if_icmpne     59
      43: aload_0
      44: invokevirtual #45                 // Method lowWatermark:()I
      47: aload         4
      49: invokevirtual #45                 // Method lowWatermark:()I
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  public akka.stream.actor.WatermarkRequestStrategy(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field highWatermark:I
       5: aload_0
       6: iload_2
       7: putfield      #41                 // Field lowWatermark:I
      10: aload_0
      11: invokespecial #112                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #118                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: iload_2
      22: iconst_0
      23: if_icmplt     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: new           #125                // class akka/stream/actor/WatermarkRequestStrategy$$anonfun$1
      34: dup
      35: aload_0
      36: invokespecial #128                // Method akka/stream/actor/WatermarkRequestStrategy$$anonfun$1."<init>":(Lakka/stream/actor/WatermarkRequestStrategy;)V
      39: invokevirtual #132                // Method scala/Predef$.require:(ZLscala/Function0;)V
      42: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      45: iload_1
      46: iload_2
      47: if_icmplt     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: new           #134                // class akka/stream/actor/WatermarkRequestStrategy$$anonfun$2
      58: dup
      59: aload_0
      60: invokespecial #135                // Method akka/stream/actor/WatermarkRequestStrategy$$anonfun$2."<init>":(Lakka/stream/actor/WatermarkRequestStrategy;)V
      63: invokevirtual #132                // Method scala/Predef$.require:(ZLscala/Function0;)V
      66: return

  public akka.stream.actor.WatermarkRequestStrategy(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #141                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       5: iconst_1
       6: iload_1
       7: iconst_2
       8: idiv
       9: invokevirtual #144                // Method scala/math/package$.max:(II)I
      12: invokespecial #53                 // Method "<init>":(II)V
      15: return
}
