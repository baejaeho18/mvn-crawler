Compiled from "IOResult.scala"
public final class akka.stream.IOResult implements scala.Product,scala.Serializable {
  private final long count;

  private final scala.util.Try<akka.Done> status;

  public static scala.Option<scala.Tuple2<java.lang.Object, scala.util.Try<akka.Done>>> unapply(akka.stream.IOResult);
    Code:
       0: getstatic     #20                 // Field akka/stream/IOResult$.MODULE$:Lakka/stream/IOResult$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/stream/IOResult$.unapply:(Lakka/stream/IOResult;)Lscala/Option;
       7: areturn

  public static akka.stream.IOResult apply(long, scala.util.Try<akka.Done>);
    Code:
       0: getstatic     #20                 // Field akka/stream/IOResult$.MODULE$:Lakka/stream/IOResult$;
       3: lload_0
       4: aload_2
       5: invokevirtual #26                 // Method akka/stream/IOResult$.apply:(JLscala/util/Try;)Lakka/stream/IOResult;
       8: areturn

  public static scala.Function1<scala.Tuple2<java.lang.Object, scala.util.Try<akka.Done>>, akka.stream.IOResult> tupled();
    Code:
       0: getstatic     #20                 // Field akka/stream/IOResult$.MODULE$:Lakka/stream/IOResult$;
       3: invokevirtual #30                 // Method akka/stream/IOResult$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.Object, scala.Function1<scala.util.Try<akka.Done>, akka.stream.IOResult>> curried();
    Code:
       0: getstatic     #20                 // Field akka/stream/IOResult$.MODULE$:Lakka/stream/IOResult$;
       3: invokevirtual #33                 // Method akka/stream/IOResult$.curried:()Lscala/Function1;
       6: areturn

  public long count();
    Code:
       0: aload_0
       1: getfield      #41                 // Field count:J
       4: lreturn

  public scala.util.Try<akka.Done> status();
    Code:
       0: aload_0
       1: getfield      #46                 // Field status:Lscala/util/Try;
       4: areturn

  public long getCount();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method count:()J
       4: lreturn

  public boolean wasSuccessful();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method status:()Lscala/util/Try;
       4: invokevirtual #58                 // Method scala/util/Try.isSuccess:()Z
       7: ireturn

  public java.lang.Throwable getError();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method status:()Lscala/util/Try;
       4: astore_1
       5: aload_1
       6: instanceof    #62                 // class scala/util/Failure
       9: ifeq          28
      12: aload_1
      13: checkcast     #62                 // class scala/util/Failure
      16: astore_2
      17: aload_2
      18: invokevirtual #65                 // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
      21: astore_3
      22: aload_3
      23: astore        4
      25: aload         4
      27: areturn
      28: aload_1
      29: instanceof    #67                 // class scala/util/Success
      32: ifeq          45
      35: new           #69                 // class java/lang/UnsupportedOperationException
      38: dup
      39: ldc           #71                 // String IO operation was successful.
      41: invokespecial #75                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: new           #77                 // class scala/MatchError
      48: dup
      49: aload_1
      50: invokespecial #80                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      53: athrow

  public akka.stream.IOResult copy(long, scala.util.Try<akka.Done>);
    Code:
       0: new           #2                  // class akka/stream/IOResult
       3: dup
       4: lload_1
       5: aload_3
       6: invokespecial #86                 // Method "<init>":(JLscala/util/Try;)V
       9: areturn

  public long copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method count:()J
       4: lreturn

  public scala.util.Try<akka.Done> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method status:()Lscala/util/Try;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #92                 // String IOResult
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #98                 // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #107                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #108                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #53                 // Method status:()Lscala/util/Try;
      43: goto          53
      46: aload_0
      47: invokevirtual #49                 // Method count:()J
      50: invokestatic  #112                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      53: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #121                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #125                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/stream/IOResult
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #130                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #49                 // Method count:()J
       8: invokestatic  #136                // Method scala/runtime/Statics.longHash:(J)I
      11: invokestatic  #140                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #53                 // Method status:()Lscala/util/Try;
      20: invokestatic  #144                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #140                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: iconst_2
      29: invokestatic  #147                // Method scala/runtime/Statics.finalizeHash:(II)I
      32: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #121                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #151                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     84
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/stream/IOResult
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          88
      25: aload_1
      26: checkcast     #2                  // class akka/stream/IOResult
      29: astore        4
      31: aload_0
      32: invokevirtual #49                 // Method count:()J
      35: aload         4
      37: invokevirtual #49                 // Method count:()J
      40: lcmp
      41: ifne          80
      44: aload_0
      45: invokevirtual #53                 // Method status:()Lscala/util/Try;
      48: aload         4
      50: invokevirtual #53                 // Method status:()Lscala/util/Try;
      53: astore        5
      55: dup
      56: ifnonnull     68
      59: pop
      60: aload         5
      62: ifnull        76
      65: goto          80
      68: aload         5
      70: invokevirtual #154                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public akka.stream.IOResult(long, scala.util.Try<akka.Done>);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #41                 // Field count:J
       5: aload_0
       6: aload_3
       7: putfield      #46                 // Field status:Lscala/util/Try;
      10: aload_0
      11: invokespecial #157                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #163                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: return
}
