Compiled from "Actor.scala"
public abstract class akka.actor.Actor$class {
  public static final akka.actor.ActorRef sender(akka.actor.Actor);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod akka/actor/Actor.context:()Lakka/actor/ActorContext;
       6: invokeinterface #18,  1           // InterfaceMethod akka/actor/ActorContext.sender:()Lakka/actor/ActorRef;
      11: areturn

  public static void aroundReceive(akka.actor.Actor, scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: new           #24                 // class akka/actor/Actor$$anonfun$aroundReceive$1
       5: dup
       6: aload_0
       7: invokespecial #28                 // Method akka/actor/Actor$$anonfun$aroundReceive$1."<init>":(Lakka/actor/Actor;)V
      10: invokeinterface #34,  3           // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: pop
      16: return

  public static void aroundPreStart(akka.actor.Actor);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod akka/actor/Actor.preStart:()V
       6: return

  public static void aroundPostStop(akka.actor.Actor);
    Code:
       0: aload_0
       1: invokeinterface #47,  1           // InterfaceMethod akka/actor/Actor.postStop:()V
       6: return

  public static void aroundPreRestart(akka.actor.Actor, java.lang.Throwable, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #53,  3           // InterfaceMethod akka/actor/Actor.preRestart:(Ljava/lang/Throwable;Lscala/Option;)V
       8: return

  public static void aroundPostRestart(akka.actor.Actor, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #63,  2           // InterfaceMethod akka/actor/Actor.postRestart:(Ljava/lang/Throwable;)V
       7: return

  public static akka.actor.SupervisorStrategy supervisorStrategy(akka.actor.Actor);
    Code:
       0: getstatic     #71                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #75                 // Method akka/actor/SupervisorStrategy$.defaultStrategy:()Lakka/actor/SupervisorStrategy;
       6: areturn

  public static void preStart(akka.actor.Actor) throws java.lang.Exception;
    Code:
       0: return

  public static void postStop(akka.actor.Actor) throws java.lang.Exception;
    Code:
       0: return

  public static void preRestart(akka.actor.Actor, java.lang.Throwable, scala.Option) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod akka/actor/Actor.context:()Lakka/actor/ActorContext;
       6: invokeinterface #81,  1           // InterfaceMethod akka/actor/ActorContext.children:()Lscala/collection/immutable/Iterable;
      11: new           #83                 // class akka/actor/Actor$$anonfun$preRestart$1
      14: dup
      15: aload_0
      16: invokespecial #84                 // Method akka/actor/Actor$$anonfun$preRestart$1."<init>":(Lakka/actor/Actor;)V
      19: invokeinterface #90,  2           // InterfaceMethod scala/collection/immutable/Iterable.foreach:(Lscala/Function1;)V
      24: aload_0
      25: invokeinterface #47,  1           // InterfaceMethod akka/actor/Actor.postStop:()V
      30: return

  public static void postRestart(akka.actor.Actor, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod akka/actor/Actor.preStart:()V
       6: return

  public static void unhandled(akka.actor.Actor, java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #94                 // class akka/actor/Terminated
       6: ifeq          30
       9: aload_2
      10: checkcast     #94                 // class akka/actor/Terminated
      13: astore_3
      14: aload_3
      15: invokevirtual #97                 // Method akka/actor/Terminated.actor:()Lakka/actor/ActorRef;
      18: astore        4
      20: new           #99                 // class akka/actor/DeathPactException
      23: dup
      24: aload         4
      26: invokespecial #102                // Method akka/actor/DeathPactException."<init>":(Lakka/actor/ActorRef;)V
      29: athrow
      30: aload_0
      31: invokeinterface #13,  1           // InterfaceMethod akka/actor/Actor.context:()Lakka/actor/ActorContext;
      36: invokeinterface #106,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      41: invokevirtual #112                // Method akka/actor/ActorSystem.eventStream:()Lakka/event/EventStream;
      44: new           #114                // class akka/actor/UnhandledMessage
      47: dup
      48: aload_1
      49: aload_0
      50: invokeinterface #115,  1          // InterfaceMethod akka/actor/Actor.sender:()Lakka/actor/ActorRef;
      55: aload_0
      56: invokeinterface #118,  1          // InterfaceMethod akka/actor/Actor.self:()Lakka/actor/ActorRef;
      61: invokespecial #121                // Method akka/actor/UnhandledMessage."<init>":(Ljava/lang/Object;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)V
      64: invokevirtual #127                // Method akka/event/EventStream.publish:(Ljava/lang/Object;)V
      67: getstatic     #133                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      70: astore        5
      72: return

  public static void $init$(akka.actor.Actor);
    Code:
       0: aload_0
       1: getstatic     #141                // Field akka/actor/ActorCell$.MODULE$:Lakka/actor/ActorCell$;
       4: invokevirtual #145                // Method akka/actor/ActorCell$.contextStack:()Ljava/lang/ThreadLocal;
       7: invokevirtual #151                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      10: checkcast     #153                // class scala/collection/immutable/List
      13: astore_1
      14: aload_1
      15: invokevirtual #157                // Method scala/collection/immutable/List.isEmpty:()Z
      18: ifne          28
      21: aload_1
      22: invokevirtual #160                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
      25: ifnonnull     106
      28: getstatic     #165                // Field akka/actor/ActorInitializationException$.MODULE$:Lakka/actor/ActorInitializationException$;
      31: new           #167                // class scala/collection/mutable/StringBuilder
      34: dup
      35: invokespecial #169                // Method scala/collection/mutable/StringBuilder."<init>":()V
      38: new           #171                // class scala/StringContext
      41: dup
      42: getstatic     #176                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      45: iconst_2
      46: anewarray     #178                // class java/lang/String
      49: dup
      50: iconst_0
      51: ldc           #180                // String You cannot create an instance of [
      53: aastore
      54: dup
      55: iconst_1
      56: ldc           #182                // String ] explicitly using the constructor (new).
      58: aastore
      59: checkcast     #184                // class "[Ljava/lang/Object;"
      62: invokevirtual #188                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      65: invokespecial #191                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      68: getstatic     #176                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      71: iconst_1
      72: anewarray     #4                  // class java/lang/Object
      75: dup
      76: iconst_0
      77: aload_0
      78: invokevirtual #195                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      81: invokevirtual #201                // Method java/lang/Class.getName:()Ljava/lang/String;
      84: aastore
      85: invokevirtual #205                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      88: invokevirtual #209                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      91: invokevirtual #213                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      94: ldc           #215                // String You have to use one of the \'actorOf\' factory methods to create a new actor. See the documentation.
      96: invokevirtual #213                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      99: invokevirtual #218                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     102: invokevirtual #222                // Method akka/actor/ActorInitializationException$.apply:(Ljava/lang/String;)Lakka/actor/ActorInitializationException;
     105: athrow
     106: aload_1
     107: invokevirtual #160                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
     110: checkcast     #15                 // class akka/actor/ActorContext
     113: astore_2
     114: getstatic     #141                // Field akka/actor/ActorCell$.MODULE$:Lakka/actor/ActorCell$;
     117: invokevirtual #145                // Method akka/actor/ActorCell$.contextStack:()Ljava/lang/ThreadLocal;
     120: aconst_null
     121: astore_3
     122: aload_1
     123: aload_3
     124: pop
     125: aconst_null
     126: invokevirtual #226                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     129: invokevirtual #229                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     132: aload_2
     133: invokeinterface #233,  2          // InterfaceMethod akka/actor/Actor.akka$actor$Actor$_setter_$context_$eq:(Lakka/actor/ActorContext;)V
     138: aload_0
     139: aload_0
     140: invokeinterface #13,  1           // InterfaceMethod akka/actor/Actor.context:()Lakka/actor/ActorContext;
     145: invokeinterface #234,  1          // InterfaceMethod akka/actor/ActorContext.self:()Lakka/actor/ActorRef;
     150: invokeinterface #237,  2          // InterfaceMethod akka/actor/Actor.akka$actor$Actor$_setter_$self_$eq:(Lakka/actor/ActorRef;)V
     155: return
}
