Compiled from "ReflectiveDynamicAccess.scala"
public final class akka.actor.ReflectiveDynamicAccess$$anonfun$1 extends scala.runtime.AbstractPartialFunction<java.lang.Throwable, scala.util.Try<java.lang.Class<? extends T>>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.actor.ReflectiveDynamicAccess $outer;

  private final java.lang.String fqcn$2;

  private final scala.reflect.ClassTag evidence$4$1;

  public final <A1 extends java.lang.Throwable, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_0
       3: getfield      #27                 // Field $outer:Lakka/actor/ReflectiveDynamicAccess;
       6: aload_0
       7: getfield      #29                 // Field fqcn$2:Ljava/lang/String;
      10: aload_0
      11: getfield      #31                 // Field evidence$4$1:Lscala/reflect/ClassTag;
      14: invokevirtual #34                 // Method akka/actor/ReflectiveDynamicAccess.getClassFor:(Ljava/lang/String;Lscala/reflect/ClassTag;)Lscala/util/Try;
      17: astore        4
      19: aload         4
      21: areturn

  public final boolean isDefinedAt(java.lang.Throwable);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_1
       3: istore_3
       4: iload_3
       5: ireturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class java/lang/Throwable
       5: invokevirtual #47                 // Method isDefinedAt:(Ljava/lang/Throwable;)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class java/lang/Throwable
       5: aload_2
       6: invokevirtual #52                 // Method applyOrElse:(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public akka.actor.ReflectiveDynamicAccess$$anonfun$1(akka.actor.ReflectiveDynamicAccess, java.lang.String, scala.reflect.ClassTag);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #27                 // Field $outer:Lakka/actor/ReflectiveDynamicAccess;
      11: aload_0
      12: aload_2
      13: putfield      #29                 // Field fqcn$2:Ljava/lang/String;
      16: aload_0
      17: aload_3
      18: putfield      #31                 // Field evidence$4$1:Lscala/reflect/ClassTag;
      21: aload_0
      22: invokespecial #57                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
      25: return
}
