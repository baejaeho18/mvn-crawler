Compiled from "FaultHandling.scala"
public abstract class akka.actor.SupervisorStrategy {
  public static scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> seqCauseDirective2Decider(scala.collection.Iterable<scala.Tuple2<java.lang.Class<? extends java.lang.Throwable>, akka.actor.SupervisorStrategy$Directive>>);
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: aload_0
       4: invokevirtual #18                 // Method akka/actor/SupervisorStrategy$.seqCauseDirective2Decider:(Lscala/collection/Iterable;)Lscala/PartialFunction;
       7: areturn

  public static scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(akka.japi.Function<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive>);
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/actor/SupervisorStrategy$.makeDecider:(Lakka/japi/Function;)Lscala/PartialFunction;
       7: areturn

  public static scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(scala.collection.Iterable<scala.Tuple2<java.lang.Class<? extends java.lang.Throwable>, akka.actor.SupervisorStrategy$Directive>>);
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/actor/SupervisorStrategy$.makeDecider:(Lscala/collection/Iterable;)Lscala/PartialFunction;
       7: areturn

  public static scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(java.lang.Iterable<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: aload_0
       4: invokevirtual #27                 // Method akka/actor/SupervisorStrategy$.makeDecider:(Ljava/lang/Iterable;)Lscala/PartialFunction;
       7: areturn

  public static scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(scala.collection.immutable.Seq<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: aload_0
       4: invokevirtual #30                 // Method akka/actor/SupervisorStrategy$.makeDecider:(Lscala/collection/immutable/Seq;)Lscala/PartialFunction;
       7: areturn

  public static scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> seqThrowable2Decider(scala.collection.immutable.Seq<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: aload_0
       4: invokevirtual #33                 // Method akka/actor/SupervisorStrategy$.seqThrowable2Decider:(Lscala/collection/immutable/Seq;)Lscala/PartialFunction;
       7: areturn

  public static akka.actor.SupervisorStrategy stoppingStrategy();
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #37                 // Method akka/actor/SupervisorStrategy$.stoppingStrategy:()Lakka/actor/SupervisorStrategy;
       6: areturn

  public static akka.actor.SupervisorStrategy defaultStrategy();
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #40                 // Method akka/actor/SupervisorStrategy$.defaultStrategy:()Lakka/actor/SupervisorStrategy;
       6: areturn

  public static scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> defaultDecider();
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #44                 // Method akka/actor/SupervisorStrategy$.defaultDecider:()Lscala/PartialFunction;
       6: areturn

  public static akka.actor.SupervisorStrategy$Escalate$ escalate();
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #48                 // Method akka/actor/SupervisorStrategy$.escalate:()Lakka/actor/SupervisorStrategy$Escalate$;
       6: areturn

  public static akka.actor.SupervisorStrategy$Stop$ stop();
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #52                 // Method akka/actor/SupervisorStrategy$.stop:()Lakka/actor/SupervisorStrategy$Stop$;
       6: areturn

  public static akka.actor.SupervisorStrategy$Restart$ restart();
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #56                 // Method akka/actor/SupervisorStrategy$.restart:()Lakka/actor/SupervisorStrategy$Restart$;
       6: areturn

  public static akka.actor.SupervisorStrategy$Resume$ resume();
    Code:
       0: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       3: invokevirtual #60                 // Method akka/actor/SupervisorStrategy$.resume:()Lakka/actor/SupervisorStrategy$Resume$;
       6: areturn

  public abstract scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> decider();

  public abstract void handleChildTerminated(akka.actor.ActorContext, akka.actor.ActorRef, scala.collection.Iterable<akka.actor.ActorRef>);

  public abstract void processFailure(akka.actor.ActorContext, boolean, akka.actor.ActorRef, java.lang.Throwable, akka.actor.ChildRestartStats, scala.collection.Iterable<akka.actor.ChildRestartStats>);

  public boolean handleFailure(akka.actor.ActorContext, akka.actor.ActorRef, java.lang.Throwable, akka.actor.ChildRestartStats, scala.collection.Iterable<akka.actor.ChildRestartStats>);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method decider:()Lscala/PartialFunction;
       4: aload_3
       5: getstatic     #16                 // Field akka/actor/SupervisorStrategy$.MODULE$:Lakka/actor/SupervisorStrategy$;
       8: invokevirtual #73                 // Method akka/actor/SupervisorStrategy$.escalateDefault:()Lscala/Function1;
      11: invokeinterface #79,  3           // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: checkcast     #81                 // class akka/actor/SupervisorStrategy$Directive
      19: astore        6
      21: aload         6
      23: astore        7
      25: getstatic     #86                 // Field akka/actor/SupervisorStrategy$Resume$.MODULE$:Lakka/actor/SupervisorStrategy$Resume$;
      28: aload         7
      30: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ifeq          57
      36: aload_0
      37: aload_1
      38: aload_2
      39: aload_3
      40: aload         6
      42: invokevirtual #94                 // Method logFailure:(Lakka/actor/ActorContext;Lakka/actor/ActorRef;Ljava/lang/Throwable;Lakka/actor/SupervisorStrategy$Directive;)V
      45: aload_0
      46: aload_2
      47: aload_3
      48: invokevirtual #98                 // Method resumeChild:(Lakka/actor/ActorRef;Ljava/lang/Throwable;)V
      51: iconst_1
      52: istore        8
      54: goto          156
      57: getstatic     #103                // Field akka/actor/SupervisorStrategy$Restart$.MODULE$:Lakka/actor/SupervisorStrategy$Restart$;
      60: aload         7
      62: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifeq          95
      68: aload_0
      69: aload_1
      70: aload_2
      71: aload_3
      72: aload         6
      74: invokevirtual #94                 // Method logFailure:(Lakka/actor/ActorContext;Lakka/actor/ActorRef;Ljava/lang/Throwable;Lakka/actor/SupervisorStrategy$Directive;)V
      77: aload_0
      78: aload_1
      79: iconst_1
      80: aload_2
      81: aload_3
      82: aload         4
      84: aload         5
      86: invokevirtual #105                // Method processFailure:(Lakka/actor/ActorContext;ZLakka/actor/ActorRef;Ljava/lang/Throwable;Lakka/actor/ChildRestartStats;Lscala/collection/Iterable;)V
      89: iconst_1
      90: istore        8
      92: goto          156
      95: getstatic     #110                // Field akka/actor/SupervisorStrategy$Stop$.MODULE$:Lakka/actor/SupervisorStrategy$Stop$;
      98: aload         7
     100: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     103: ifeq          133
     106: aload_0
     107: aload_1
     108: aload_2
     109: aload_3
     110: aload         6
     112: invokevirtual #94                 // Method logFailure:(Lakka/actor/ActorContext;Lakka/actor/ActorRef;Ljava/lang/Throwable;Lakka/actor/SupervisorStrategy$Directive;)V
     115: aload_0
     116: aload_1
     117: iconst_0
     118: aload_2
     119: aload_3
     120: aload         4
     122: aload         5
     124: invokevirtual #105                // Method processFailure:(Lakka/actor/ActorContext;ZLakka/actor/ActorRef;Ljava/lang/Throwable;Lakka/actor/ChildRestartStats;Lscala/collection/Iterable;)V
     127: iconst_1
     128: istore        8
     130: goto          156
     133: getstatic     #115                // Field akka/actor/SupervisorStrategy$Escalate$.MODULE$:Lakka/actor/SupervisorStrategy$Escalate$;
     136: aload         7
     138: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     141: ifeq          159
     144: aload_0
     145: aload_1
     146: aload_2
     147: aload_3
     148: aload         6
     150: invokevirtual #94                 // Method logFailure:(Lakka/actor/ActorContext;Lakka/actor/ActorRef;Ljava/lang/Throwable;Lakka/actor/SupervisorStrategy$Directive;)V
     153: iconst_0
     154: istore        8
     156: iload         8
     158: ireturn
     159: new           #117                // class scala/MatchError
     162: dup
     163: aload         7
     165: invokespecial #121                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     168: athrow

  public boolean loggingEnabled();
    Code:
       0: iconst_1
       1: ireturn

  public void logFailure(akka.actor.ActorContext, akka.actor.ActorRef, java.lang.Throwable, akka.actor.SupervisorStrategy$Directive);
    Code:
       0: aload_0
       1: invokevirtual #139                // Method loggingEnabled:()Z
       4: ifeq          155
       7: aload_3
       8: astore        6
      10: aload         6
      12: instanceof    #141                // class akka/actor/ActorInitializationException
      15: ifeq          46
      18: aload         6
      20: checkcast     #141                // class akka/actor/ActorInitializationException
      23: astore        7
      25: aload         7
      27: invokevirtual #145                // Method akka/actor/ActorInitializationException.getCause:()Ljava/lang/Throwable;
      30: ifnull        46
      33: aload         7
      35: invokevirtual #145                // Method akka/actor/ActorInitializationException.getCause:()Ljava/lang/Throwable;
      38: invokevirtual #151                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      41: astore        8
      43: goto          53
      46: aload         6
      48: invokevirtual #151                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      51: astore        8
      53: aload         8
      55: astore        5
      57: aload         4
      59: astore        9
      61: getstatic     #86                 // Field akka/actor/SupervisorStrategy$Resume$.MODULE$:Lakka/actor/SupervisorStrategy$Resume$;
      64: aload         9
      66: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifeq          105
      72: aload_0
      73: aload_1
      74: new           #153                // class akka/event/Logging$Warning
      77: dup
      78: aload_2
      79: invokevirtual #159                // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
      82: invokevirtual #162                // Method java/lang/Object.toString:()Ljava/lang/String;
      85: aload_0
      86: invokevirtual #166                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      89: aload         5
      91: invokespecial #169                // Method akka/event/Logging$Warning."<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      94: invokespecial #173                // Method publish:(Lakka/actor/ActorContext;Lakka/event/Logging$LogEvent;)V
      97: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     100: astore        10
     102: goto          155
     105: getstatic     #115                // Field akka/actor/SupervisorStrategy$Escalate$.MODULE$:Lakka/actor/SupervisorStrategy$Escalate$;
     108: aload         9
     110: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     113: ifeq          124
     116: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     119: astore        10
     121: goto          155
     124: aload_0
     125: aload_1
     126: new           #181                // class akka/event/Logging$Error
     129: dup
     130: aload_3
     131: aload_2
     132: invokevirtual #159                // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
     135: invokevirtual #162                // Method java/lang/Object.toString:()Ljava/lang/String;
     138: aload_0
     139: invokevirtual #166                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     142: aload         5
     144: invokespecial #184                // Method akka/event/Logging$Error."<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
     147: invokespecial #173                // Method publish:(Lakka/actor/ActorContext;Lakka/event/Logging$LogEvent;)V
     150: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     153: astore        10
     155: return

  private void publish(akka.actor.ActorContext, akka.event.Logging$LogEvent);
    Code:
       0: aload_1
       1: invokeinterface #195,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
       6: invokevirtual #201                // Method akka/actor/ActorSystem.eventStream:()Lakka/event/EventStream;
       9: aload_2
      10: invokevirtual #205                // Method akka/event/EventStream.publish:(Ljava/lang/Object;)V
      13: goto          45
      16: astore_3
      17: aload_3
      18: astore        4
      20: getstatic     #210                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      23: aload         4
      25: invokevirtual #214                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      28: astore        5
      30: aload         5
      32: invokevirtual #219                // Method scala/Option.isEmpty:()Z
      35: ifeq          40
      38: aload_3
      39: athrow
      40: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      43: astore        6
      45: return
    Exception table:
       from    to  target type
           0    16    16   any

  public final void resumeChild(akka.actor.ActorRef, java.lang.Throwable);
    Code:
       0: aload_1
       1: checkcast     #223                // class akka/actor/InternalActorRef
       4: aload_2
       5: invokevirtual #226                // Method akka/actor/InternalActorRef.resume:(Ljava/lang/Throwable;)V
       8: return

  public final void restartChild(akka.actor.ActorRef, java.lang.Throwable, boolean);
    Code:
       0: aload_1
       1: checkcast     #223                // class akka/actor/InternalActorRef
       4: astore        4
       6: iload_3
       7: ifeq          15
      10: aload         4
      12: invokevirtual #232                // Method akka/actor/InternalActorRef.suspend:()V
      15: aload         4
      17: aload_2
      18: invokevirtual #234                // Method akka/actor/InternalActorRef.restart:(Ljava/lang/Throwable;)V
      21: return

  public akka.actor.SupervisorStrategy();
    Code:
       0: aload_0
       1: invokespecial #240                // Method java/lang/Object."<init>":()V
       4: return
}
