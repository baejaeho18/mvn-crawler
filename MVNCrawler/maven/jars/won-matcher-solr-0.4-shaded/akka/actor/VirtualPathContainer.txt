Compiled from "ActorRef.scala"
public class akka.actor.VirtualPathContainer extends akka.actor.InternalActorRef implements akka.actor.MinimalActorRef {
  private final akka.actor.ActorRefProvider provider;

  private final akka.actor.ActorPath path;

  private final akka.actor.InternalActorRef getParent;

  private final akka.event.LoggingAdapter log;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, akka.actor.InternalActorRef> children;

  public void start();
    Code:
       0: aload_0
       1: invokestatic  #28                 // Method akka/actor/MinimalActorRef$class.start:(Lakka/actor/MinimalActorRef;)V
       4: return

  public void suspend();
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method akka/actor/MinimalActorRef$class.suspend:(Lakka/actor/MinimalActorRef;)V
       4: return

  public void resume(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method akka/actor/MinimalActorRef$class.resume:(Lakka/actor/MinimalActorRef;Ljava/lang/Throwable;)V
       5: return

  public void stop();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method akka/actor/MinimalActorRef$class.stop:(Lakka/actor/MinimalActorRef;)V
       4: return

  public boolean isTerminated();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method akka/actor/MinimalActorRef$class.isTerminated:(Lakka/actor/MinimalActorRef;)Z
       4: ireturn

  public void sendSystemMessage(akka.dispatch.sysmsg.SystemMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // Method akka/actor/MinimalActorRef$class.sendSystemMessage:(Lakka/actor/MinimalActorRef;Lakka/dispatch/sysmsg/SystemMessage;)V
       5: return

  public void restart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method akka/actor/MinimalActorRef$class.restart:(Lakka/actor/MinimalActorRef;Ljava/lang/Throwable;)V
       5: return

  public java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method akka/actor/MinimalActorRef$class.writeReplace:(Lakka/actor/MinimalActorRef;)Ljava/lang/Object;
       4: areturn

  public final boolean isLocal();
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method akka/actor/LocalRef$class.isLocal:(Lakka/actor/LocalRef;)Z
       4: ireturn

  public akka.actor.ActorRefProvider provider();
    Code:
       0: aload_0
       1: getfield      #75                 // Field provider:Lakka/actor/ActorRefProvider;
       4: areturn

  public akka.actor.ActorPath path();
    Code:
       0: aload_0
       1: getfield      #78                 // Field path:Lakka/actor/ActorPath;
       4: areturn

  public akka.actor.InternalActorRef getParent();
    Code:
       0: aload_0
       1: getfield      #81                 // Field getParent:Lakka/actor/InternalActorRef;
       4: areturn

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: getfield      #84                 // Field log:Lakka/event/LoggingAdapter;
       4: areturn

  private java.util.concurrent.ConcurrentHashMap<java.lang.String, akka.actor.InternalActorRef> children();
    Code:
       0: aload_0
       1: getfield      #87                 // Field children:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public void $bang(java.lang.Object, akka.actor.ActorRef);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #91                 // class akka/actor/ActorSelectionMessage
       6: ifeq          231
       9: aload_3
      10: checkcast     #91                 // class akka/actor/ActorSelectionMessage
      13: astore        4
      15: aload         4
      17: invokevirtual #94                 // Method akka/actor/ActorSelectionMessage.msg:()Ljava/lang/Object;
      20: astore        5
      22: aload         4
      24: invokevirtual #98                 // Method akka/actor/ActorSelectionMessage.elements:()Lscala/collection/immutable/Iterable;
      27: astore        6
      29: aload         4
      31: invokevirtual #101                // Method akka/actor/ActorSelectionMessage.wildcardFanOut:()Z
      34: istore        7
      36: getstatic     #107                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      39: aload         6
      41: invokeinterface #112,  1          // InterfaceMethod scala/collection/immutable/Iterable.nonEmpty:()Z
      46: invokevirtual #116                // Method scala/Predef$.require:(Z)V
      49: aload         6
      51: invokeinterface #119,  1          // InterfaceMethod scala/collection/immutable/Iterable.head:()Ljava/lang/Object;
      56: checkcast     #121                // class akka/actor/SelectionPathElement
      59: astore        9
      61: aload         9
      63: instanceof    #123                // class akka/actor/SelectChildName
      66: ifeq          195
      69: aload         9
      71: checkcast     #123                // class akka/actor/SelectChildName
      74: astore        10
      76: aload         10
      78: invokevirtual #127                // Method akka/actor/SelectChildName.name:()Ljava/lang/String;
      81: astore        11
      83: aload_0
      84: aload         11
      86: invokevirtual #131                // Method getChild:(Ljava/lang/String;)Lakka/actor/InternalActorRef;
      89: astore        13
      91: aload         13
      93: ifnonnull     127
      96: iload         7
      98: ifeq          107
     101: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     104: goto          122
     107: aload_0
     108: aload         4
     110: invokespecial #141                // Method emptyRef$1:(Lakka/actor/ActorSelectionMessage;)Lakka/actor/EmptyLocalActorRef;
     113: aload         5
     115: aload_2
     116: invokevirtual #146                // Method akka/actor/EmptyLocalActorRef.tell:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     119: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     122: astore        14
     124: goto          187
     127: aload         6
     129: invokeinterface #149,  1          // InterfaceMethod scala/collection/immutable/Iterable.tail:()Ljava/lang/Object;
     134: checkcast     #151                // class scala/collection/IterableLike
     137: invokeinterface #154,  1          // InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
     142: ifeq          159
     145: aload         13
     147: aload         5
     149: aload_2
     150: invokevirtual #156                // Method akka/actor/InternalActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     153: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     156: goto          185
     159: iload         7
     161: ifeq          170
     164: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     167: goto          185
     170: aload_0
     171: aload         4
     173: invokespecial #141                // Method emptyRef$1:(Lakka/actor/ActorSelectionMessage;)Lakka/actor/EmptyLocalActorRef;
     176: aload         5
     178: aload_2
     179: invokevirtual #146                // Method akka/actor/EmptyLocalActorRef.tell:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     182: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     185: astore        14
     187: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     190: astore        12
     192: goto          223
     195: iload         7
     197: ifeq          206
     200: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     203: goto          221
     206: aload_0
     207: aload         4
     209: invokespecial #141                // Method emptyRef$1:(Lakka/actor/ActorSelectionMessage;)Lakka/actor/EmptyLocalActorRef;
     212: aload         5
     214: aload_2
     215: invokevirtual #146                // Method akka/actor/EmptyLocalActorRef.tell:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     218: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     221: astore        12
     223: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     226: astore        8
     228: goto          242
     231: aload_0
     232: aload_1
     233: aload_2
     234: invokestatic  #159                // Method akka/actor/MinimalActorRef$class.$bang:(Lakka/actor/MinimalActorRef;Ljava/lang/Object;Lakka/actor/ActorRef;)V
     237: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     240: astore        8
     242: return

  public akka.actor.ActorRef $bang$default$2(java.lang.Object);
    Code:
       0: getstatic     #178                // Field akka/actor/Actor$.MODULE$:Lakka/actor/Actor$;
       3: invokevirtual #182                // Method akka/actor/Actor$.noSender:()Lakka/actor/ActorRef;
       6: areturn

  public void addChild(java.lang.String, akka.actor.InternalActorRef);
    Code:
       0: aload_0
       1: invokespecial #186                // Method children:()Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #192                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class akka/actor/InternalActorRef
      12: astore_3
      13: aload_3
      14: ifnonnull     25
      17: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      20: astore        4
      22: goto          52
      25: aload_0
      26: invokevirtual #194                // Method log:()Lakka/event/LoggingAdapter;
      29: ldc           #196                // String {} replacing child {} ({} -> {})
      31: aload_0
      32: invokevirtual #198                // Method path:()Lakka/actor/ActorPath;
      35: aload_1
      36: aload_3
      37: aload_2
      38: invokeinterface #204,  6          // InterfaceMethod akka/event/LoggingAdapter.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      43: aload_3
      44: invokevirtual #206                // Method akka/actor/InternalActorRef.stop:()V
      47: getstatic     #137                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      50: astore        4
      52: return

  public void removeChild(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #186                // Method children:()Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #213                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnonnull     27
      11: aload_0
      12: invokevirtual #194                // Method log:()Lakka/event/LoggingAdapter;
      15: ldc           #215                // String {} trying to remove non-child {}
      17: aload_0
      18: invokevirtual #198                // Method path:()Lakka/actor/ActorPath;
      21: aload_1
      22: invokeinterface #219,  4          // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  public void removeChild(java.lang.String, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #131                // Method getChild:(Ljava/lang/String;)Lakka/actor/InternalActorRef;
       5: astore_3
       6: aload_3
       7: ifnonnull     29
      10: aload_0
      11: invokevirtual #194                // Method log:()Lakka/event/LoggingAdapter;
      14: ldc           #215                // String {} trying to remove non-child {}
      16: aload_0
      17: invokevirtual #198                // Method path:()Lakka/actor/ActorPath;
      20: aload_1
      21: invokeinterface #219,  4          // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      26: goto          64
      29: aload_3
      30: aload_2
      31: astore        4
      33: dup
      34: ifnonnull     46
      37: pop
      38: aload         4
      40: ifnull        54
      43: goto          64
      46: aload         4
      48: invokevirtual #224                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          64
      54: aload_0
      55: invokespecial #186                // Method children:()Ljava/util/concurrent/ConcurrentHashMap;
      58: aload_1
      59: aload_3
      60: invokevirtual #227                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      63: pop
      64: return

  public akka.actor.InternalActorRef getChild(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #186                // Method children:()Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #231                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #4                  // class akka/actor/InternalActorRef
      11: areturn

  public akka.actor.InternalActorRef getChild(scala.collection.Iterator<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #235,  1          // InterfaceMethod scala/collection/Iterator.isEmpty:()Z
       6: ifeq          13
       9: aload_0
      10: goto          80
      13: aload_1
      14: invokeinterface #238,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      19: checkcast     #171                // class java/lang/String
      22: astore_2
      23: aload_2
      24: invokevirtual #239                // Method java/lang/String.isEmpty:()Z
      27: ifeq          34
      30: aload_0
      31: goto          80
      34: aload_0
      35: invokespecial #186                // Method children:()Ljava/util/concurrent/ConcurrentHashMap;
      38: aload_2
      39: invokevirtual #231                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #4                  // class akka/actor/InternalActorRef
      45: astore_3
      46: aload_3
      47: ifnonnull     58
      50: getstatic     #244                // Field akka/actor/Nobody$.MODULE$:Lakka/actor/Nobody$;
      53: astore        4
      55: goto          78
      58: aload_1
      59: invokeinterface #235,  1          // InterfaceMethod scala/collection/Iterator.isEmpty:()Z
      64: ifeq          71
      67: aload_3
      68: goto          76
      71: aload_3
      72: aload_1
      73: invokevirtual #246                // Method akka/actor/InternalActorRef.getChild:(Lscala/collection/Iterator;)Lakka/actor/InternalActorRef;
      76: astore        4
      78: aload         4
      80: areturn

  public boolean hasChildren();
    Code:
       0: aload_0
       1: invokespecial #186                // Method children:()Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #250                // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
       7: ifeq          14
      10: iconst_0
      11: goto          15
      14: iconst_1
      15: ireturn

  public void foreachChild(scala.Function1<akka.actor.ActorRef, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokespecial #186                // Method children:()Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #256                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #262,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #267,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          38
      22: aload_1
      23: aload_2
      24: invokeinterface #268,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: invokeinterface #273,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: goto          13
      38: return

  private final akka.actor.EmptyLocalActorRef emptyRef$1(akka.actor.ActorSelectionMessage);
    Code:
       0: new           #143                // class akka/actor/EmptyLocalActorRef
       3: dup
       4: aload_0
       5: invokevirtual #279                // Method provider:()Lakka/actor/ActorRefProvider;
       8: aload_0
       9: invokevirtual #198                // Method path:()Lakka/actor/ActorPath;
      12: aload_1
      13: invokevirtual #98                 // Method akka/actor/ActorSelectionMessage.elements:()Lscala/collection/immutable/Iterable;
      16: new           #281                // class akka/actor/VirtualPathContainer$$anonfun$emptyRef$1$1
      19: dup
      20: aload_0
      21: invokespecial #285                // Method akka/actor/VirtualPathContainer$$anonfun$emptyRef$1$1."<init>":(Lakka/actor/VirtualPathContainer;)V
      24: getstatic     #290                // Field scala/collection/immutable/Iterable$.MODULE$:Lscala/collection/immutable/Iterable$;
      27: invokevirtual #294                // Method scala/collection/immutable/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      30: invokeinterface #298,  3          // InterfaceMethod scala/collection/immutable/Iterable.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #300                // class scala/collection/Iterable
      38: invokeinterface #306,  2          // InterfaceMethod akka/actor/ActorPath.$div:(Lscala/collection/Iterable;)Lakka/actor/ActorPath;
      43: aload_0
      44: invokevirtual #279                // Method provider:()Lakka/actor/ActorRefProvider;
      47: invokeinterface #312,  1          // InterfaceMethod akka/actor/ActorRefProvider.systemGuardian:()Lakka/actor/LocalActorRef;
      52: invokevirtual #318                // Method akka/actor/LocalActorRef.underlying:()Lakka/actor/ActorCell;
      55: invokevirtual #324                // Method akka/actor/ActorCell.system:()Lakka/actor/ActorSystemImpl;
      58: invokevirtual #330                // Method akka/actor/ActorSystemImpl.eventStream:()Lakka/event/EventStream;
      61: invokespecial #333                // Method akka/actor/EmptyLocalActorRef."<init>":(Lakka/actor/ActorRefProvider;Lakka/actor/ActorPath;Lakka/event/EventStream;)V
      64: areturn

  public akka.actor.VirtualPathContainer(akka.actor.ActorRefProvider, akka.actor.ActorPath, akka.actor.InternalActorRef, akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field provider:Lakka/actor/ActorRefProvider;
       5: aload_0
       6: aload_2
       7: putfield      #78                 // Field path:Lakka/actor/ActorPath;
      10: aload_0
      11: aload_3
      12: putfield      #81                 // Field getParent:Lakka/actor/InternalActorRef;
      15: aload_0
      16: aload         4
      18: putfield      #84                 // Field log:Lakka/event/LoggingAdapter;
      21: aload_0
      22: invokespecial #338                // Method akka/actor/InternalActorRef."<init>":()V
      25: aload_0
      26: invokestatic  #342                // Method akka/actor/LocalRef$class.$init$:(Lakka/actor/LocalRef;)V
      29: aload_0
      30: invokestatic  #344                // Method akka/actor/MinimalActorRef$class.$init$:(Lakka/actor/MinimalActorRef;)V
      33: aload_0
      34: new           #188                // class java/util/concurrent/ConcurrentHashMap
      37: dup
      38: invokespecial #345                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      41: putfield      #87                 // Field children:Ljava/util/concurrent/ConcurrentHashMap;
      44: return
}
