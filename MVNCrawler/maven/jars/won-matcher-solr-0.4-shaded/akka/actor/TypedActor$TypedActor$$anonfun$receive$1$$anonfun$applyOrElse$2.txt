Compiled from "TypedActor.scala"
public final class akka.actor.TypedActor$TypedActor$$anonfun$receive$1$$anonfun$applyOrElse$2 extends scala.runtime.AbstractFunction0<java.lang.Object> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.actor.TypedActor$TypedActor$$anonfun$receive$1 $outer;

  private final akka.actor.TypedActor$MethodCall x2$1;

  public final java.lang.Object apply();
    Code:
       0: aload_0
       1: getfield      #25                 // Field x2$1:Lakka/actor/TypedActor$MethodCall;
       4: invokevirtual #31                 // Method akka/actor/TypedActor$MethodCall.isOneWay:()Z
       7: ifeq          30
      10: aload_0
      11: getfield      #25                 // Field x2$1:Lakka/actor/TypedActor$MethodCall;
      14: aload_0
      15: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
      18: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
      21: invokevirtual #42                 // Method akka/actor/TypedActor$TypedActor.akka$actor$TypedActor$TypedActor$$me:()Ljava/lang/Object;
      24: invokevirtual #45                 // Method akka/actor/TypedActor$MethodCall.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: goto          202
      30: aload_0
      31: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
      34: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
      37: invokevirtual #49                 // Method akka/actor/TypedActor$TypedActor.sender:()Lakka/actor/ActorRef;
      40: astore        6
      42: aload_0
      43: getfield      #25                 // Field x2$1:Lakka/actor/TypedActor$MethodCall;
      46: aload_0
      47: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
      50: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
      53: invokevirtual #42                 // Method akka/actor/TypedActor$TypedActor.akka$actor$TypedActor$TypedActor$$me:()Ljava/lang/Object;
      56: invokevirtual #45                 // Method akka/actor/TypedActor$MethodCall.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      59: astore        7
      61: aload         7
      63: instanceof    #51                 // class scala/concurrent/Future
      66: ifeq          130
      69: aload         7
      71: checkcast     #51                 // class scala/concurrent/Future
      74: astore        8
      76: aload_0
      77: getfield      #25                 // Field x2$1:Lakka/actor/TypedActor$MethodCall;
      80: invokevirtual #54                 // Method akka/actor/TypedActor$MethodCall.returnsFuture:()Z
      83: ifeq          130
      86: aload_0
      87: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
      90: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
      93: invokevirtual #58                 // Method akka/actor/TypedActor$TypedActor.context:()Lakka/actor/ActorContext;
      96: invokeinterface #64,  1           // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
     101: astore        10
     103: aload         8
     105: new           #66                 // class akka/actor/TypedActor$TypedActor$$anonfun$receive$1$$anonfun$applyOrElse$2$$anonfun$apply$2
     108: dup
     109: aload_0
     110: aload         6
     112: invokespecial #70                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1$$anonfun$applyOrElse$2$$anonfun$apply$2."<init>":(Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1$$anonfun$applyOrElse$2;Lakka/actor/ActorRef;)V
     115: aload         10
     117: invokeinterface #74,  3           // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
     122: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     125: astore        9
     127: goto          199
     130: aload         7
     132: ifnonnull     169
     135: getstatic     #86                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     138: aload         6
     140: invokevirtual #90                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     143: getstatic     #95                 // Field akka/actor/TypedActor$NullResponse$.MODULE$:Lakka/actor/TypedActor$NullResponse$;
     146: aload_0
     147: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
     150: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
     153: invokevirtual #98                 // Method akka/actor/TypedActor$TypedActor.self:()Lakka/actor/ActorRef;
     156: invokeinterface #104,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     161: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     164: astore        9
     166: goto          199
     169: getstatic     #86                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     172: aload         6
     174: invokevirtual #90                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     177: aload         7
     179: aload_0
     180: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
     183: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
     186: invokevirtual #98                 // Method akka/actor/TypedActor$TypedActor.self:()Lakka/actor/ActorRef;
     189: invokeinterface #104,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     194: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     197: astore        9
     199: getstatic     #80                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     202: areturn
     203: astore_1
     204: aload_1
     205: astore_2
     206: getstatic     #109                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     209: aload_2
     210: invokevirtual #113                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     213: astore_3
     214: aload_3
     215: invokevirtual #118                // Method scala/Option.isEmpty:()Z
     218: ifeq          223
     221: aload_1
     222: athrow
     223: aload_3
     224: invokevirtual #121                // Method scala/Option.get:()Ljava/lang/Object;
     227: checkcast     #123                // class java/lang/Throwable
     230: astore        4
     232: getstatic     #86                 // Field akka/actor/package$.MODULE$:Lakka/actor/package$;
     235: aload_0
     236: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
     239: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
     242: invokevirtual #49                 // Method akka/actor/TypedActor$TypedActor.sender:()Lakka/actor/ActorRef;
     245: invokevirtual #90                 // Method akka/actor/package$.actorRef2Scala:(Lakka/actor/ActorRef;)Lakka/actor/ScalaActorRef;
     248: new           #125                // class akka/actor/Status$Failure
     251: dup
     252: aload         4
     254: invokespecial #128                // Method akka/actor/Status$Failure."<init>":(Ljava/lang/Throwable;)V
     257: aload_0
     258: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
     261: invokevirtual #37                 // Method akka/actor/TypedActor$TypedActor$$anonfun$receive$1.akka$actor$TypedActor$TypedActor$$anonfun$$$outer:()Lakka/actor/TypedActor$TypedActor;
     264: invokevirtual #98                 // Method akka/actor/TypedActor$TypedActor.self:()Lakka/actor/ActorRef;
     267: invokeinterface #104,  3          // InterfaceMethod akka/actor/ScalaActorRef.$bang:(Ljava/lang/Object;Lakka/actor/ActorRef;)V
     272: aload         4
     274: athrow
    Exception table:
       from    to  target type
          30   202   203   any

  public akka.actor.TypedActor$TypedActor$$anonfun$receive$1 akka$actor$TypedActor$TypedActor$$anonfun$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
       4: areturn

  public akka.actor.TypedActor$TypedActor$$anonfun$receive$1$$anonfun$applyOrElse$2(akka.actor.TypedActor$TypedActor<R, T>.$anonfun$receive$1);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #33                 // Field $outer:Lakka/actor/TypedActor$TypedActor$$anonfun$receive$1;
      11: aload_0
      12: aload_2
      13: putfield      #25                 // Field x2$1:Lakka/actor/TypedActor$MethodCall;
      16: aload_0
      17: invokespecial #145                // Method scala/runtime/AbstractFunction0."<init>":()V
      20: return
}
