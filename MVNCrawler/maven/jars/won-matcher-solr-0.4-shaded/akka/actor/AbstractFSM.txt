Compiled from "AbstractFSM.scala"
public abstract class akka.actor.AbstractFSM<S, D> implements akka.actor.FSM<S, D> {
  private final akka.actor.FSM$Reason Normal;

  private final akka.actor.FSM$Reason Shutdown;

  private final akka.actor.FSM$Event$ Event;

  private final akka.actor.FSM$StopEvent$ StopEvent;

  private final akka.actor.FSM$$minus$greater$ $minus$greater;

  private final akka.actor.FSM$StateTimeout$ StateTimeout;

  private akka.actor.FSM$State<java.lang.Object, java.lang.Object> akka$actor$FSM$$currentState;

  private scala.Option<akka.actor.Cancellable> akka$actor$FSM$$timeoutFuture;

  private akka.actor.FSM$State<java.lang.Object, java.lang.Object> akka$actor$FSM$$nextState;

  private long akka$actor$FSM$$generation;

  private final scala.collection.mutable.Map<java.lang.String, akka.actor.FSM$Timer> akka$actor$FSM$$timers;

  private final scala.collection.Iterator<java.lang.Object> akka$actor$FSM$$timerGen;

  private final scala.collection.mutable.Map<java.lang.Object, scala.PartialFunction<akka.actor.FSM$Event<java.lang.Object>, akka.actor.FSM$State<java.lang.Object, java.lang.Object>>> akka$actor$FSM$$stateFunctions;

  private final scala.collection.mutable.Map<java.lang.Object, scala.Option<scala.concurrent.duration.FiniteDuration>> akka$actor$FSM$$stateTimeouts;

  private final scala.PartialFunction<akka.actor.FSM$Event<java.lang.Object>, akka.actor.FSM$State<java.lang.Object, java.lang.Object>> akka$actor$FSM$$handleEventDefault;

  private scala.PartialFunction<akka.actor.FSM$Event<java.lang.Object>, akka.actor.FSM$State<java.lang.Object, java.lang.Object>> akka$actor$FSM$$handleEvent;

  private scala.PartialFunction<akka.actor.FSM$StopEvent<java.lang.Object, java.lang.Object>, scala.runtime.BoxedUnit> akka$actor$FSM$$terminateEvent;

  private scala.collection.immutable.List<scala.PartialFunction<scala.Tuple2<java.lang.Object, java.lang.Object>, scala.runtime.BoxedUnit>> akka$actor$FSM$$transitionEvent;

  private akka.event.LoggingAdapter akka$actor$ActorLogging$$_log;

  private final java.util.Set<akka.actor.ActorRef> listeners;

  private final akka.actor.ActorContext context;

  private final akka.actor.ActorRef self;

  public static <S, D> scala.PartialFunction<S, D> NullFunction();
    Code:
       0: getstatic     #19                 // Field akka/actor/AbstractFSM$.MODULE$:Lakka/actor/AbstractFSM$;
       3: invokevirtual #21                 // Method akka/actor/AbstractFSM$.NullFunction:()Lscala/PartialFunction;
       6: areturn

  public akka.actor.FSM$Event$ Event();
    Code:
       0: aload_0
       1: getfield      #72                 // Field Event:Lakka/actor/FSM$Event$;
       4: areturn

  public akka.actor.FSM$StopEvent$ StopEvent();
    Code:
       0: aload_0
       1: getfield      #77                 // Field StopEvent:Lakka/actor/FSM$StopEvent$;
       4: areturn

  public akka.actor.FSM$$minus$greater$ $minus$greater();
    Code:
       0: aload_0
       1: getfield      #80                 // Field $minus$greater:Lakka/actor/FSM$$minus$greater$;
       4: areturn

  public akka.actor.FSM$StateTimeout$ StateTimeout();
    Code:
       0: aload_0
       1: getfield      #83                 // Field StateTimeout:Lakka/actor/FSM$StateTimeout$;
       4: areturn

  public akka.actor.FSM$State<S, D> akka$actor$FSM$$currentState();
    Code:
       0: aload_0
       1: getfield      #86                 // Field akka$actor$FSM$$currentState:Lakka/actor/FSM$State;
       4: areturn

  public void akka$actor$FSM$$currentState_$eq(akka.actor.FSM$State<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field akka$actor$FSM$$currentState:Lakka/actor/FSM$State;
       5: return

  public scala.Option<akka.actor.Cancellable> akka$actor$FSM$$timeoutFuture();
    Code:
       0: aload_0
       1: getfield      #92                 // Field akka$actor$FSM$$timeoutFuture:Lscala/Option;
       4: areturn

  public void akka$actor$FSM$$timeoutFuture_$eq(scala.Option<akka.actor.Cancellable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field akka$actor$FSM$$timeoutFuture:Lscala/Option;
       5: return

  public akka.actor.FSM$State<S, D> akka$actor$FSM$$nextState();
    Code:
       0: aload_0
       1: getfield      #96                 // Field akka$actor$FSM$$nextState:Lakka/actor/FSM$State;
       4: areturn

  public void akka$actor$FSM$$nextState_$eq(akka.actor.FSM$State<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field akka$actor$FSM$$nextState:Lakka/actor/FSM$State;
       5: return

  public long akka$actor$FSM$$generation();
    Code:
       0: aload_0
       1: getfield      #100                // Field akka$actor$FSM$$generation:J
       4: lreturn

  public void akka$actor$FSM$$generation_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #100                // Field akka$actor$FSM$$generation:J
       5: return

  public scala.collection.mutable.Map<java.lang.String, akka.actor.FSM$Timer> akka$actor$FSM$$timers();
    Code:
       0: aload_0
       1: getfield      #105                // Field akka$actor$FSM$$timers:Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Iterator<java.lang.Object> akka$actor$FSM$$timerGen();
    Code:
       0: aload_0
       1: getfield      #108                // Field akka$actor$FSM$$timerGen:Lscala/collection/Iterator;
       4: areturn

  public scala.collection.mutable.Map<S, scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>>> akka$actor$FSM$$stateFunctions();
    Code:
       0: aload_0
       1: getfield      #110                // Field akka$actor$FSM$$stateFunctions:Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<S, scala.Option<scala.concurrent.duration.FiniteDuration>> akka$actor$FSM$$stateTimeouts();
    Code:
       0: aload_0
       1: getfield      #112                // Field akka$actor$FSM$$stateTimeouts:Lscala/collection/mutable/Map;
       4: areturn

  public scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>> akka$actor$FSM$$handleEventDefault();
    Code:
       0: aload_0
       1: getfield      #114                // Field akka$actor$FSM$$handleEventDefault:Lscala/PartialFunction;
       4: areturn

  public scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>> akka$actor$FSM$$handleEvent();
    Code:
       0: aload_0
       1: getfield      #116                // Field akka$actor$FSM$$handleEvent:Lscala/PartialFunction;
       4: areturn

  public void akka$actor$FSM$$handleEvent_$eq(scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field akka$actor$FSM$$handleEvent:Lscala/PartialFunction;
       5: return

  public scala.PartialFunction<akka.actor.FSM$StopEvent<S, D>, scala.runtime.BoxedUnit> akka$actor$FSM$$terminateEvent();
    Code:
       0: aload_0
       1: getfield      #120                // Field akka$actor$FSM$$terminateEvent:Lscala/PartialFunction;
       4: areturn

  public void akka$actor$FSM$$terminateEvent_$eq(scala.PartialFunction<akka.actor.FSM$StopEvent<S, D>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #120                // Field akka$actor$FSM$$terminateEvent:Lscala/PartialFunction;
       5: return

  public scala.collection.immutable.List<scala.PartialFunction<scala.Tuple2<S, S>, scala.runtime.BoxedUnit>> akka$actor$FSM$$transitionEvent();
    Code:
       0: aload_0
       1: getfield      #124                // Field akka$actor$FSM$$transitionEvent:Lscala/collection/immutable/List;
       4: areturn

  public void akka$actor$FSM$$transitionEvent_$eq(scala.collection.immutable.List<scala.PartialFunction<scala.Tuple2<S, S>, scala.runtime.BoxedUnit>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #124                // Field akka$actor$FSM$$transitionEvent:Lscala/collection/immutable/List;
       5: return

  public void akka$actor$FSM$$super$postStop();
    Code:
       0: aload_0
       1: invokestatic  #134                // Method akka/actor/Actor$class.postStop:(Lakka/actor/Actor;)V
       4: return

  public void akka$actor$FSM$_setter_$Event_$eq(akka.actor.FSM$Event$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field Event:Lakka/actor/FSM$Event$;
       5: return

  public void akka$actor$FSM$_setter_$StopEvent_$eq(akka.actor.FSM$StopEvent$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field StopEvent:Lakka/actor/FSM$StopEvent$;
       5: return

  public void akka$actor$FSM$_setter_$$minus$greater_$eq(akka.actor.FSM$$minus$greater$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field $minus$greater:Lakka/actor/FSM$$minus$greater$;
       5: return

  public void akka$actor$FSM$_setter_$StateTimeout_$eq(akka.actor.FSM$StateTimeout$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field StateTimeout:Lakka/actor/FSM$StateTimeout$;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$timers_$eq(scala.collection.mutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field akka$actor$FSM$$timers:Lscala/collection/mutable/Map;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$timerGen_$eq(scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field akka$actor$FSM$$timerGen:Lscala/collection/Iterator;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$stateFunctions_$eq(scala.collection.mutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #110                // Field akka$actor$FSM$$stateFunctions:Lscala/collection/mutable/Map;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$stateTimeouts_$eq(scala.collection.mutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #112                // Field akka$actor$FSM$$stateTimeouts:Lscala/collection/mutable/Map;
       5: return

  public void akka$actor$FSM$_setter_$akka$actor$FSM$$handleEventDefault_$eq(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #114                // Field akka$actor$FSM$$handleEventDefault:Lscala/PartialFunction;
       5: return

  public final void when(S, scala.concurrent.duration.FiniteDuration, scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #156                // Method akka/actor/FSM$class.when:(Lakka/actor/FSM;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lscala/PartialFunction;)V
       7: return

  public final void startWith(S, D, scala.Option<scala.concurrent.duration.FiniteDuration>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #166                // Method akka/actor/FSM$class.startWith:(Lakka/actor/FSM;Ljava/lang/Object;Ljava/lang/Object;Lscala/Option;)V
       7: return

  public final akka.actor.FSM$State<S, D> goto(S);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // Method akka/actor/FSM$class.goto:(Lakka/actor/FSM;Ljava/lang/Object;)Lakka/actor/FSM$State;
       5: areturn

  public final akka.actor.FSM$State<S, D> stay();
    Code:
       0: aload_0
       1: invokestatic  #178                // Method akka/actor/FSM$class.stay:(Lakka/actor/FSM;)Lakka/actor/FSM$State;
       4: areturn

  public final akka.actor.FSM$State<S, D> stop();
    Code:
       0: aload_0
       1: invokestatic  #181                // Method akka/actor/FSM$class.stop:(Lakka/actor/FSM;)Lakka/actor/FSM$State;
       4: areturn

  public final akka.actor.FSM$State<S, D> stop(akka.actor.FSM$Reason);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // Method akka/actor/FSM$class.stop:(Lakka/actor/FSM;Lakka/actor/FSM$Reason;)Lakka/actor/FSM$State;
       5: areturn

  public final akka.actor.FSM$State<S, D> stop(akka.actor.FSM$Reason, D);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #190                // Method akka/actor/FSM$class.stop:(Lakka/actor/FSM;Lakka/actor/FSM$Reason;Ljava/lang/Object;)Lakka/actor/FSM$State;
       6: areturn

  public final akka.actor.FSM<S, D>.TransformHelper transform(scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // Method akka/actor/FSM$class.transform:(Lakka/actor/FSM;Lscala/PartialFunction;)Lakka/actor/FSM$TransformHelper;
       5: areturn

  public final void setTimer(java.lang.String, java.lang.Object, scala.concurrent.duration.FiniteDuration, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokestatic  #201                // Method akka/actor/FSM$class.setTimer:(Lakka/actor/FSM;Ljava/lang/String;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Z)V
       9: return

  public final void cancelTimer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #211                // Method akka/actor/FSM$class.cancelTimer:(Lakka/actor/FSM;Ljava/lang/String;)V
       5: return

  public final boolean isTimerActive(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method akka/actor/FSM$class.isTimerActive:(Lakka/actor/FSM;Ljava/lang/String;)Z
       5: ireturn

  public final void setStateTimeout(S, scala.Option<scala.concurrent.duration.FiniteDuration>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #221                // Method akka/actor/FSM$class.setStateTimeout:(Lakka/actor/FSM;Ljava/lang/Object;Lscala/Option;)V
       6: return

  public final boolean isStateTimerActive();
    Code:
       0: aload_0
       1: invokestatic  #227                // Method akka/actor/FSM$class.isStateTimerActive:(Lakka/actor/FSM;)Z
       4: ireturn

  public final void onTransition(scala.PartialFunction<scala.Tuple2<S, S>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #231                // Method akka/actor/FSM$class.onTransition:(Lakka/actor/FSM;Lscala/PartialFunction;)V
       5: return

  public final scala.PartialFunction<scala.Tuple2<S, S>, scala.runtime.BoxedUnit> total2pf(scala.Function2<S, S, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #237                // Method akka/actor/FSM$class.total2pf:(Lakka/actor/FSM;Lscala/Function2;)Lscala/PartialFunction;
       5: areturn

  public final void onTermination(scala.PartialFunction<akka.actor.FSM$StopEvent<S, D>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // Method akka/actor/FSM$class.onTermination:(Lakka/actor/FSM;Lscala/PartialFunction;)V
       5: return

  public final void whenUnhandled(scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #245                // Method akka/actor/FSM$class.whenUnhandled:(Lakka/actor/FSM;Lscala/PartialFunction;)V
       5: return

  public final void initialize();
    Code:
       0: aload_0
       1: invokestatic  #249                // Method akka/actor/FSM$class.initialize:(Lakka/actor/FSM;)V
       4: return

  public final S stateName();
    Code:
       0: aload_0
       1: invokestatic  #253                // Method akka/actor/FSM$class.stateName:(Lakka/actor/FSM;)Ljava/lang/Object;
       4: areturn

  public final D stateData();
    Code:
       0: aload_0
       1: invokestatic  #255                // Method akka/actor/FSM$class.stateData:(Lakka/actor/FSM;)Ljava/lang/Object;
       4: areturn

  public final D nextStateData();
    Code:
       0: aload_0
       1: invokestatic  #258                // Method akka/actor/FSM$class.nextStateData:(Lakka/actor/FSM;)Ljava/lang/Object;
       4: areturn

  public boolean debugEvent();
    Code:
       0: aload_0
       1: invokestatic  #261                // Method akka/actor/FSM$class.debugEvent:(Lakka/actor/FSM;)Z
       4: ireturn

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();
    Code:
       0: aload_0
       1: invokestatic  #265                // Method akka/actor/FSM$class.receive:(Lakka/actor/FSM;)Lscala/PartialFunction;
       4: areturn

  public void processEvent(akka.actor.FSM$Event<D>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #270                // Method akka/actor/FSM$class.processEvent:(Lakka/actor/FSM;Lakka/actor/FSM$Event;Ljava/lang/Object;)V
       6: return

  public void applyState(akka.actor.FSM$State<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #277                // Method akka/actor/FSM$class.applyState:(Lakka/actor/FSM;Lakka/actor/FSM$State;)V
       5: return

  public void makeTransition(akka.actor.FSM$State<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #281                // Method akka/actor/FSM$class.makeTransition:(Lakka/actor/FSM;Lakka/actor/FSM$State;)V
       5: return

  public void postStop();
    Code:
       0: aload_0
       1: invokestatic  #283                // Method akka/actor/FSM$class.postStop:(Lakka/actor/FSM;)V
       4: return

  public void logTermination(akka.actor.FSM$Reason);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // Method akka/actor/FSM$class.logTermination:(Lakka/actor/FSM;Lakka/actor/FSM$Reason;)V
       5: return

  public final scala.concurrent.duration.FiniteDuration when$default$2();
    Code:
       0: aload_0
       1: invokestatic  #293                // Method akka/actor/FSM$class.when$default$2:(Lakka/actor/FSM;)Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  public final scala.Option<scala.concurrent.duration.FiniteDuration> startWith$default$3();
    Code:
       0: aload_0
       1: invokestatic  #297                // Method akka/actor/FSM$class.startWith$default$3:(Lakka/actor/FSM;)Lscala/Option;
       4: areturn

  public final boolean setTimer$default$4();
    Code:
       0: aload_0
       1: invokestatic  #300                // Method akka/actor/FSM$class.setTimer$default$4:(Lakka/actor/FSM;)Z
       4: ireturn

  public akka.event.LoggingAdapter akka$actor$ActorLogging$$_log();
    Code:
       0: aload_0
       1: getfield      #303                // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       4: areturn

  public void akka$actor$ActorLogging$$_log_$eq(akka.event.LoggingAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #303                // Field akka$actor$ActorLogging$$_log:Lakka/event/LoggingAdapter;
       5: return

  public akka.event.LoggingAdapter log();
    Code:
       0: aload_0
       1: invokestatic  #311                // Method akka/actor/ActorLogging$class.log:(Lakka/actor/ActorLogging;)Lakka/event/LoggingAdapter;
       4: areturn

  public java.util.Set<akka.actor.ActorRef> listeners();
    Code:
       0: aload_0
       1: getfield      #314                // Field listeners:Ljava/util/Set;
       4: areturn

  public void akka$routing$Listeners$_setter_$listeners_$eq(java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #314                // Field listeners:Ljava/util/Set;
       5: return

  public scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> listenerManagement();
    Code:
       0: aload_0
       1: invokestatic  #322                // Method akka/routing/Listeners$class.listenerManagement:(Lakka/routing/Listeners;)Lscala/PartialFunction;
       4: areturn

  public void gossip(java.lang.Object, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #327                // Method akka/routing/Listeners$class.gossip:(Lakka/routing/Listeners;Ljava/lang/Object;Lakka/actor/ActorRef;)V
       6: return

  public akka.actor.ActorRef gossip$default$2(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // Method akka/routing/Listeners$class.gossip$default$2:(Lakka/routing/Listeners;Ljava/lang/Object;)Lakka/actor/ActorRef;
       5: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: getfield      #336                // Field context:Lakka/actor/ActorContext;
       4: areturn

  public final akka.actor.ActorRef self();
    Code:
       0: aload_0
       1: getfield      #339                // Field self:Lakka/actor/ActorRef;
       4: areturn

  public void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #336                // Field context:Lakka/actor/ActorContext;
       5: return

  public final void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #339                // Field self:Lakka/actor/ActorRef;
       5: return

  public final akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: invokestatic  #346                // Method akka/actor/Actor$class.sender:(Lakka/actor/Actor;)Lakka/actor/ActorRef;
       4: areturn

  public void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #351                // Method akka/actor/Actor$class.aroundReceive:(Lakka/actor/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
       6: return

  public void aroundPreStart();
    Code:
       0: aload_0
       1: invokestatic  #354                // Method akka/actor/Actor$class.aroundPreStart:(Lakka/actor/Actor;)V
       4: return

  public void aroundPostStop();
    Code:
       0: aload_0
       1: invokestatic  #357                // Method akka/actor/Actor$class.aroundPostStop:(Lakka/actor/Actor;)V
       4: return

  public void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #362                // Method akka/actor/Actor$class.aroundPreRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void aroundPostRestart(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #369                // Method akka/actor/Actor$class.aroundPostRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public akka.actor.SupervisorStrategy supervisorStrategy();
    Code:
       0: aload_0
       1: invokestatic  #374                // Method akka/actor/Actor$class.supervisorStrategy:(Lakka/actor/Actor;)Lakka/actor/SupervisorStrategy;
       4: areturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #379                // Method akka/actor/Actor$class.preStart:(Lakka/actor/Actor;)V
       4: return

  public void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // Method akka/actor/Actor$class.preRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;Lscala/Option;)V
       6: return

  public void postRestart(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #385                // Method akka/actor/Actor$class.postRestart:(Lakka/actor/Actor;Ljava/lang/Throwable;)V
       5: return

  public void unhandled(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #390                // Method akka/actor/Actor$class.unhandled:(Lakka/actor/Actor;Ljava/lang/Object;)V
       5: return

  public final void when(S, scala.PartialFunction<akka.actor.FSM$Event<D>, akka.actor.FSM$State<S, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #393                // Method when:(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lscala/PartialFunction;)V
       7: return

  public final void when(S, akka.japi.pf.FSMStateFunctionBuilder<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #397                // Method when:(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lakka/japi/pf/FSMStateFunctionBuilder;)V
       7: return

  public final void when(S, scala.concurrent.duration.FiniteDuration, akka.japi.pf.FSMStateFunctionBuilder<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #404                // Method akka/japi/pf/FSMStateFunctionBuilder.build:()Lscala/PartialFunction;
       7: invokevirtual #393                // Method when:(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Lscala/PartialFunction;)V
      10: return

  public final void startWith(S, D);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #408                // Method startWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;)V
       7: return

  public final void startWith(S, D, scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #413                // Field scala/Option$.MODULE$:Lscala/Option$;
       6: aload_3
       7: invokevirtual #417                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      10: invokevirtual #419                // Method startWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Option;)V
      13: return

  public final void onTransition(akka.japi.pf.FSMTransitionHandlerBuilder<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #423                // Method akka/japi/pf/FSMTransitionHandlerBuilder.build:()Lscala/PartialFunction;
       5: invokevirtual #425                // Method onTransition:(Lscala/PartialFunction;)V
       8: return

  public final void onTransition(akka.japi.pf.FI$UnitApply2<S, S>);
    Code:
       0: aload_0
       1: aload_0
       2: new           #430                // class akka/actor/AbstractFSM$$anonfun$onTransition$1
       5: dup
       6: aload_0
       7: aload_1
       8: invokespecial #434                // Method akka/actor/AbstractFSM$$anonfun$onTransition$1."<init>":(Lakka/actor/AbstractFSM;Lakka/japi/pf/FI$UnitApply2;)V
      11: invokevirtual #436                // Method total2pf:(Lscala/Function2;)Lscala/PartialFunction;
      14: invokevirtual #425                // Method onTransition:(Lscala/PartialFunction;)V
      17: return

  public final void whenUnhandled(akka.japi.pf.FSMStateFunctionBuilder<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #404                // Method akka/japi/pf/FSMStateFunctionBuilder.build:()Lscala/PartialFunction;
       5: invokevirtual #440                // Method whenUnhandled:(Lscala/PartialFunction;)V
       8: return

  public final void onTermination(akka.japi.pf.FSMStopBuilder<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #444                // Method akka/japi/pf/FSMStopBuilder.build:()Lscala/PartialFunction;
       5: invokevirtual #446                // Method onTermination:(Lscala/PartialFunction;)V
       8: return

  public final <ET, DT extends D> akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEvent(java.lang.Class<ET>, java.lang.Class<DT>, akka.japi.pf.FI$TypedPredicate2<ET, DT>, akka.japi.pf.FI$Apply2<ET, DT, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: aload         4
      12: invokevirtual #454                // Method akka/japi/pf/FSMStateFunctionBuilder.event:(Ljava/lang/Class;Ljava/lang/Class;Lakka/japi/pf/FI$TypedPredicate2;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      15: areturn

  public final <ET, DT extends D> akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEvent(java.lang.Class<ET>, java.lang.Class<DT>, akka.japi.pf.FI$Apply2<ET, DT, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #463                // Method akka/japi/pf/FSMStateFunctionBuilder.event:(Ljava/lang/Class;Ljava/lang/Class;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      13: areturn

  public final <ET> akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEvent(java.lang.Class<ET>, akka.japi.pf.FI$TypedPredicate2<ET, D>, akka.japi.pf.FI$Apply2<ET, D, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #466                // Method akka/japi/pf/FSMStateFunctionBuilder.event:(Ljava/lang/Class;Lakka/japi/pf/FI$TypedPredicate2;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      13: areturn

  public final <ET> akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEvent(java.lang.Class<ET>, akka.japi.pf.FI$Apply2<ET, D, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: invokevirtual #469                // Method akka/japi/pf/FSMStateFunctionBuilder.event:(Ljava/lang/Class;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      12: areturn

  public final akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEvent(akka.japi.pf.FI$TypedPredicate2<java.lang.Object, D>, akka.japi.pf.FI$Apply2<java.lang.Object, D, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: invokevirtual #472                // Method akka/japi/pf/FSMStateFunctionBuilder.event:(Lakka/japi/pf/FI$TypedPredicate2;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      12: areturn

  public final <DT extends D> akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEvent(java.util.List<java.lang.Object>, java.lang.Class<DT>, akka.japi.pf.FI$Apply2<java.lang.Object, DT, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #475                // Method akka/japi/pf/FSMStateFunctionBuilder.event:(Ljava/util/List;Ljava/lang/Class;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      13: areturn

  public final akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEvent(java.util.List<java.lang.Object>, akka.japi.pf.FI$Apply2<java.lang.Object, D, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: invokevirtual #480                // Method akka/japi/pf/FSMStateFunctionBuilder.event:(Ljava/util/List;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      12: areturn

  public final <E, DT extends D> akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEventEquals(E, java.lang.Class<DT>, akka.japi.pf.FI$Apply2<E, DT, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #485                // Method akka/japi/pf/FSMStateFunctionBuilder.eventEquals:(Ljava/lang/Object;Ljava/lang/Class;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      13: areturn

  public final <E> akka.japi.pf.FSMStateFunctionBuilder<S, D> matchEventEquals(E, akka.japi.pf.FI$Apply2<E, D, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: invokevirtual #488                // Method akka/japi/pf/FSMStateFunctionBuilder.eventEquals:(Ljava/lang/Object;Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      12: areturn

  public final akka.japi.pf.FSMStateFunctionBuilder<S, D> matchAnyEvent(akka.japi.pf.FI$Apply2<java.lang.Object, D, akka.actor.FSM$State<S, D>>);
    Code:
       0: new           #401                // class akka/japi/pf/FSMStateFunctionBuilder
       3: dup
       4: invokespecial #452                // Method akka/japi/pf/FSMStateFunctionBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #493                // Method akka/japi/pf/FSMStateFunctionBuilder.anyEvent:(Lakka/japi/pf/FI$Apply2;)Lakka/japi/pf/FSMStateFunctionBuilder;
      11: areturn

  public final akka.japi.pf.FSMTransitionHandlerBuilder<S> matchState(S, S, akka.japi.pf.FI$UnitApplyVoid);
    Code:
       0: new           #422                // class akka/japi/pf/FSMTransitionHandlerBuilder
       3: dup
       4: invokespecial #496                // Method akka/japi/pf/FSMTransitionHandlerBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #498                // Method akka/japi/pf/FSMTransitionHandlerBuilder.state:(Ljava/lang/Object;Ljava/lang/Object;Lakka/japi/pf/FI$UnitApplyVoid;)Lakka/japi/pf/FSMTransitionHandlerBuilder;
      13: areturn

  public final akka.japi.pf.FSMTransitionHandlerBuilder<S> matchState(S, S, akka.japi.pf.FI$UnitApply2<S, S>);
    Code:
       0: new           #422                // class akka/japi/pf/FSMTransitionHandlerBuilder
       3: dup
       4: invokespecial #496                // Method akka/japi/pf/FSMTransitionHandlerBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #504                // Method akka/japi/pf/FSMTransitionHandlerBuilder.state:(Ljava/lang/Object;Ljava/lang/Object;Lakka/japi/pf/FI$UnitApply2;)Lakka/japi/pf/FSMTransitionHandlerBuilder;
      13: areturn

  public final akka.japi.pf.FSMStopBuilder<S, D> matchStop(akka.actor.FSM$Reason, akka.japi.pf.FI$UnitApply2<S, D>);
    Code:
       0: new           #443                // class akka/japi/pf/FSMStopBuilder
       3: dup
       4: invokespecial #507                // Method akka/japi/pf/FSMStopBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: invokevirtual #509                // Method akka/japi/pf/FSMStopBuilder.stop:(Lakka/actor/FSM$Reason;Lakka/japi/pf/FI$UnitApply2;)Lakka/japi/pf/FSMStopBuilder;
      12: areturn

  public final <RT extends akka.actor.FSM$Reason> akka.japi.pf.FSMStopBuilder<S, D> matchStop(java.lang.Class<RT>, akka.japi.pf.FI$UnitApply3<RT, S, D>);
    Code:
       0: new           #443                // class akka/japi/pf/FSMStopBuilder
       3: dup
       4: invokespecial #507                // Method akka/japi/pf/FSMStopBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: invokevirtual #512                // Method akka/japi/pf/FSMStopBuilder.stop:(Ljava/lang/Class;Lakka/japi/pf/FI$UnitApply3;)Lakka/japi/pf/FSMStopBuilder;
      12: areturn

  public final <RT extends akka.actor.FSM$Reason> akka.japi.pf.FSMStopBuilder<S, D> matchStop(java.lang.Class<RT>, akka.japi.pf.FI$TypedPredicate<RT>, akka.japi.pf.FI$UnitApply3<RT, S, D>);
    Code:
       0: new           #443                // class akka/japi/pf/FSMStopBuilder
       3: dup
       4: invokespecial #507                // Method akka/japi/pf/FSMStopBuilder."<init>":()V
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #517                // Method akka/japi/pf/FSMStopBuilder.stop:(Ljava/lang/Class;Lakka/japi/pf/FI$TypedPredicate;Lakka/japi/pf/FI$UnitApply3;)Lakka/japi/pf/FSMStopBuilder;
      13: areturn

  public final <DT extends D> akka.japi.pf.UnitPFBuilder<D> matchData(java.lang.Class<DT>, akka.japi.pf.FI$UnitApply<DT>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #525                // Method akka/japi/pf/UnitMatch.match:(Ljava/lang/Class;Lakka/japi/pf/FI$UnitApply;)Lakka/japi/pf/UnitPFBuilder;
       5: areturn

  public final <DT extends D> akka.japi.pf.UnitPFBuilder<D> matchData(java.lang.Class<DT>, akka.japi.pf.FI$TypedPredicate<DT>, akka.japi.pf.FI$UnitApply<DT>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #529                // Method akka/japi/pf/UnitMatch.match:(Ljava/lang/Class;Lakka/japi/pf/FI$TypedPredicate;Lakka/japi/pf/FI$UnitApply;)Lakka/japi/pf/UnitPFBuilder;
       6: areturn

  public final akka.actor.FSM$State<S, D> goTo(S);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #532                // Method goto:(Ljava/lang/Object;)Lakka/actor/FSM$State;
       5: areturn

  public final void setTimer(java.lang.String, java.lang.Object, scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #535                // Method setTimer:(Ljava/lang/String;Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;Z)V
       8: return

  public akka.actor.FSM$Reason Normal();
    Code:
       0: aload_0
       1: getfield      #538                // Field Normal:Lakka/actor/FSM$Reason;
       4: areturn

  public akka.actor.FSM$Reason Shutdown();
    Code:
       0: aload_0
       1: getfield      #540                // Field Shutdown:Lakka/actor/FSM$Reason;
       4: areturn

  public akka.actor.AbstractFSM();
    Code:
       0: aload_0
       1: invokespecial #541                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #544                // Method akka/actor/Actor$class.$init$:(Lakka/actor/Actor;)V
       8: aload_0
       9: invokestatic  #547                // Method akka/routing/Listeners$class.$init$:(Lakka/routing/Listeners;)V
      12: aload_0
      13: invokestatic  #550                // Method akka/actor/ActorLogging$class.$init$:(Lakka/actor/ActorLogging;)V
      16: aload_0
      17: invokestatic  #552                // Method akka/actor/FSM$class.$init$:(Lakka/actor/FSM;)V
      20: aload_0
      21: getstatic     #557                // Field akka/actor/FSM$Normal$.MODULE$:Lakka/actor/FSM$Normal$;
      24: putfield      #538                // Field Normal:Lakka/actor/FSM$Reason;
      27: aload_0
      28: getstatic     #562                // Field akka/actor/FSM$Shutdown$.MODULE$:Lakka/actor/FSM$Shutdown$;
      31: putfield      #540                // Field Shutdown:Lakka/actor/FSM$Reason;
      34: return
}
