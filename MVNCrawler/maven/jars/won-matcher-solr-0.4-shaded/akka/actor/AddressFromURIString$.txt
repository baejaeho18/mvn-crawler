Compiled from "Address.scala"
public final class akka.actor.AddressFromURIString$ {
  public static final akka.actor.AddressFromURIString$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class akka/actor/AddressFromURIString$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public scala.Option<akka.actor.Address> unapply(java.lang.String);
    Code:
       0: aload_0
       1: new           #18                 // class java/net/URI
       4: dup
       5: aload_1
       6: invokespecial #21                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
       9: invokevirtual #24                 // Method unapply:(Ljava/net/URI;)Lscala/Option;
      12: goto          19
      15: pop
      16: getstatic     #29                 // Field scala/None$.MODULE$:Lscala/None$;
      19: areturn
    Exception table:
       from    to  target type
           0    15    15   Class java/net/URISyntaxException

  public scala.Option<akka.actor.Address> unapply(java.net.URI);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #29                 // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          156
      10: aload_1
      11: invokevirtual #38                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      14: ifnull        31
      17: aload_1
      18: invokevirtual #41                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      21: ifnonnull     37
      24: aload_1
      25: invokevirtual #44                 // Method java/net/URI.getHost:()Ljava/lang/String;
      28: ifnonnull     37
      31: getstatic     #29                 // Field scala/None$.MODULE$:Lscala/None$;
      34: goto          156
      37: aload_1
      38: invokevirtual #41                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      41: ifnonnull     82
      44: aload_1
      45: invokevirtual #48                 // Method java/net/URI.getPort:()I
      48: iconst_m1
      49: if_icmpeq     58
      52: getstatic     #29                 // Field scala/None$.MODULE$:Lscala/None$;
      55: goto          156
      58: new           #50                 // class scala/Some
      61: dup
      62: getstatic     #55                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
      65: aload_1
      66: invokevirtual #38                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      69: aload_1
      70: invokevirtual #44                 // Method java/net/URI.getHost:()Ljava/lang/String;
      73: invokevirtual #59                 // Method akka/actor/Address$.apply:(Ljava/lang/String;Ljava/lang/String;)Lakka/actor/Address;
      76: invokespecial #62                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      79: goto          156
      82: aload_1
      83: invokevirtual #44                 // Method java/net/URI.getHost:()Ljava/lang/String;
      86: ifnull        97
      89: aload_1
      90: invokevirtual #48                 // Method java/net/URI.getPort:()I
      93: iconst_m1
      94: if_icmpne     103
      97: getstatic     #29                 // Field scala/None$.MODULE$:Lscala/None$;
     100: goto          156
     103: new           #50                 // class scala/Some
     106: dup
     107: aload_1
     108: invokevirtual #41                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
     111: ifnonnull     131
     114: getstatic     #55                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
     117: aload_1
     118: invokevirtual #38                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     121: aload_1
     122: invokevirtual #44                 // Method java/net/URI.getHost:()Ljava/lang/String;
     125: invokevirtual #59                 // Method akka/actor/Address$.apply:(Ljava/lang/String;Ljava/lang/String;)Lakka/actor/Address;
     128: goto          153
     131: getstatic     #55                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
     134: aload_1
     135: invokevirtual #38                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     138: aload_1
     139: invokevirtual #41                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
     142: aload_1
     143: invokevirtual #44                 // Method java/net/URI.getHost:()Ljava/lang/String;
     146: aload_1
     147: invokevirtual #48                 // Method java/net/URI.getPort:()I
     150: invokevirtual #65                 // Method akka/actor/Address$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lakka/actor/Address;
     153: invokespecial #62                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
     156: areturn

  public akka.actor.Address apply(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: aload_2
       4: invokevirtual #72                 // Method unapply:(Ljava/lang/String;)Lscala/Option;
       7: astore_3
       8: aload_3
       9: invokevirtual #76                 // Method scala/Option.isEmpty:()Z
      12: ifeq          24
      15: new           #78                 // class java/net/MalformedURLException
      18: dup
      19: aload_1
      20: invokespecial #79                 // Method java/net/MalformedURLException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_3
      25: invokevirtual #83                 // Method scala/Option.get:()Ljava/lang/Object;
      28: checkcast     #69                 // class akka/actor/Address
      31: astore        4
      33: aload         4
      35: astore        5
      37: aload         5
      39: areturn

  public akka.actor.Address parse(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method apply:(Ljava/lang/String;)Lakka/actor/Address;
       5: areturn

  private akka.actor.AddressFromURIString$();
    Code:
       0: aload_0
       1: invokespecial #91                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #93                 // Field MODULE$:Lakka/actor/AddressFromURIString$;
       8: return
}
