Compiled from "ActorSystem.scala"
public final class akka.actor.ActorSystemImpl$$anonfun$5$$anon$1 implements scala.concurrent.ExecutionContext,akka.dispatch.BatchingExecutor {
  private final akka.actor.ActorSystemImpl$$anonfun$5 $outer;

  private final java.lang.ThreadLocal akka$dispatch$BatchingExecutor$$_tasksLocal;

  private final java.lang.ThreadLocal akka$dispatch$BatchingExecutor$$_blockContext;

  public java.lang.ThreadLocal akka$dispatch$BatchingExecutor$$_tasksLocal();
    Code:
       0: aload_0
       1: getfield      #19                 // Field akka$dispatch$BatchingExecutor$$_tasksLocal:Ljava/lang/ThreadLocal;
       4: areturn

  public void akka$dispatch$BatchingExecutor$_setter_$akka$dispatch$BatchingExecutor$$_tasksLocal_$eq(java.lang.ThreadLocal);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field akka$dispatch$BatchingExecutor$$_tasksLocal:Ljava/lang/ThreadLocal;
       5: return

  public java.lang.ThreadLocal akka$dispatch$BatchingExecutor$$_blockContext();
    Code:
       0: aload_0
       1: getfield      #26                 // Field akka$dispatch$BatchingExecutor$$_blockContext:Ljava/lang/ThreadLocal;
       4: areturn

  public void akka$dispatch$BatchingExecutor$_setter_$akka$dispatch$BatchingExecutor$$_blockContext_$eq(java.lang.ThreadLocal);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field akka$dispatch$BatchingExecutor$$_blockContext:Ljava/lang/ThreadLocal;
       5: return

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // Method akka/dispatch/BatchingExecutor$class.execute:(Lakka/dispatch/BatchingExecutor;Ljava/lang/Runnable;)V
       5: return

  public boolean batchable(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method akka/dispatch/BatchingExecutor$class.batchable:(Lakka/dispatch/BatchingExecutor;Ljava/lang/Runnable;)Z
       5: ireturn

  public scala.concurrent.ExecutionContext prepare();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/concurrent/ExecutionContext$class.prepare:(Lscala/concurrent/ExecutionContext;)Lscala/concurrent/ExecutionContext;
       4: areturn

  public void unbatchedExecute(java.lang.Runnable);
    Code:
       0: aload_1
       1: invokeinterface #55,  1           // InterfaceMethod java/lang/Runnable.run:()V
       6: return

  public boolean resubmitOnBlock();
    Code:
       0: iconst_0
       1: ireturn

  public void reportFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #62                 // Field $outer:Lakka/actor/ActorSystemImpl$$anonfun$5;
       4: invokevirtual #66                 // Method akka/actor/ActorSystemImpl$$anonfun$5.akka$actor$ActorSystemImpl$$anonfun$$$outer:()Lakka/actor/ActorSystemImpl;
       7: invokevirtual #72                 // Method akka/actor/ActorSystemImpl.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      10: aload_1
      11: invokeinterface #76,  2           // InterfaceMethod scala/concurrent/ExecutionContextExecutor.reportFailure:(Ljava/lang/Throwable;)V
      16: return

  public akka.actor.ActorSystemImpl$$anonfun$5$$anon$1(akka.actor.ActorSystemImpl$$anonfun$5);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #62                 // Field $outer:Lakka/actor/ActorSystemImpl$$anonfun$5;
      11: aload_0
      12: invokespecial #82                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #86                 // Method scala/concurrent/ExecutionContext$class.$init$:(Lscala/concurrent/ExecutionContext;)V
      19: aload_0
      20: invokestatic  #89                 // Method akka/dispatch/BatchingExecutor$class.$init$:(Lakka/dispatch/BatchingExecutor;)V
      23: return
}
