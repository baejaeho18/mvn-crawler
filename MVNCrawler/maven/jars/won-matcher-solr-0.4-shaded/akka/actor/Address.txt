Compiled from "Address.scala"
public final class akka.actor.Address implements scala.Product,scala.Serializable {
  public static final long serialVersionUID;

  private final java.lang.String protocol;

  private final java.lang.String system;

  private final scala.Option<java.lang.String> host;

  private final scala.Option<java.lang.Object> port;

  private transient int hashCode;

  private transient java.lang.String toString;

  private volatile transient byte bitmap$trans$0;

  public static scala.Option<scala.Tuple4<java.lang.String, java.lang.String, scala.Option<java.lang.String>, scala.Option<java.lang.Object>>> unapply(akka.actor.Address);
    Code:
       0: getstatic     #20                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/actor/Address$.unapply:(Lakka/actor/Address;)Lscala/Option;
       7: areturn

  public static akka.actor.Address apply(java.lang.String, java.lang.String, scala.Option<java.lang.String>, scala.Option<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #26                 // Method akka/actor/Address$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/Option;Lscala/Option;)Lakka/actor/Address;
      10: areturn

  public static scala.math.Ordering<akka.actor.Address> addressOrdering();
    Code:
       0: getstatic     #20                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
       3: invokevirtual #30                 // Method akka/actor/Address$.addressOrdering:()Lscala/math/Ordering;
       6: areturn

  public static akka.actor.Address apply(java.lang.String, java.lang.String, java.lang.String, int);
    Code:
       0: getstatic     #20                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #33                 // Method akka/actor/Address$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lakka/actor/Address;
      10: areturn

  public static akka.actor.Address apply(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #20                 // Field akka/actor/Address$.MODULE$:Lakka/actor/Address$;
       3: aload_0
       4: aload_1
       5: invokevirtual #36                 // Method akka/actor/Address$.apply:(Ljava/lang/String;Ljava/lang/String;)Lakka/actor/Address;
       8: areturn

  private int hashCode$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #57                 // Field bitmap$trans$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     37
      15: aload_0
      16: getstatic     #62                 // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
      19: aload_0
      20: invokevirtual #66                 // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
      23: putfield      #68                 // Field hashCode:I
      26: aload_0
      27: aload_0
      28: getfield      #57                 // Field bitmap$trans$0:B
      31: iconst_1
      32: ior
      33: i2b
      34: putfield      #57                 // Field bitmap$trans$0:B
      37: getstatic     #74                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      40: pop
      41: aload_1
      42: monitorexit
      43: aload_0
      44: getfield      #68                 // Field hashCode:I
      47: ireturn
      48: aload_1
      49: monitorexit
      50: athrow
    Exception table:
       from    to  target type
           4    43    48   any

  private java.lang.String toString$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #57                 // Field bitmap$trans$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     130
      15: aload_0
      16: new           #82                 // class java/lang/StringBuilder
      19: dup
      20: aload_0
      21: invokevirtual #84                 // Method protocol:()Ljava/lang/String;
      24: invokespecial #88                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      27: ldc           #90                 // String ://
      29: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #96                 // Method system:()Ljava/lang/String;
      36: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: astore_2
      40: aload_0
      41: invokevirtual #99                 // Method host:()Lscala/Option;
      44: invokevirtual #105                // Method scala/Option.isDefined:()Z
      47: ifeq          72
      50: aload_2
      51: bipush        64
      53: invokevirtual #108                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #99                 // Method host:()Lscala/Option;
      60: invokevirtual #112                // Method scala/Option.get:()Ljava/lang/Object;
      63: checkcast     #114                // class java/lang/String
      66: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: goto          75
      72: getstatic     #74                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      75: pop
      76: aload_0
      77: invokevirtual #116                // Method port:()Lscala/Option;
      80: invokevirtual #105                // Method scala/Option.isDefined:()Z
      83: ifeq          108
      86: aload_2
      87: bipush        58
      89: invokevirtual #108                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      92: aload_0
      93: invokevirtual #116                // Method port:()Lscala/Option;
      96: invokevirtual #112                // Method scala/Option.get:()Ljava/lang/Object;
      99: invokestatic  #122                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
     102: invokevirtual #125                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: goto          111
     108: getstatic     #74                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     111: pop
     112: aload_2
     113: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: putfield      #129                // Field toString:Ljava/lang/String;
     119: aload_0
     120: aload_0
     121: getfield      #57                 // Field bitmap$trans$0:B
     124: iconst_2
     125: ior
     126: i2b
     127: putfield      #57                 // Field bitmap$trans$0:B
     130: getstatic     #74                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     133: pop
     134: aload_1
     135: monitorexit
     136: aload_0
     137: getfield      #129                // Field toString:Ljava/lang/String;
     140: areturn
     141: aload_1
     142: monitorexit
     143: athrow
    Exception table:
       from    to  target type
           4   136   141   any

  public java.lang.String protocol();
    Code:
       0: aload_0
       1: getfield      #133                // Field protocol:Ljava/lang/String;
       4: areturn

  public java.lang.String system();
    Code:
       0: aload_0
       1: getfield      #135                // Field system:Ljava/lang/String;
       4: areturn

  public scala.Option<java.lang.String> host();
    Code:
       0: aload_0
       1: getfield      #137                // Field host:Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> port();
    Code:
       0: aload_0
       1: getfield      #139                // Field port:Lscala/Option;
       4: areturn

  public boolean hasLocalScope();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method host:()Lscala/Option;
       4: invokevirtual #143                // Method scala/Option.isEmpty:()Z
       7: ireturn

  public boolean hasGlobalScope();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method host:()Lscala/Option;
       4: invokevirtual #105                // Method scala/Option.isDefined:()Z
       7: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #57                 // Field bitmap$trans$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #146                // Method hashCode$lzycompute:()I
      15: goto          22
      18: aload_0
      19: getfield      #68                 // Field hashCode:I
      22: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #57                 // Field bitmap$trans$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #148                // Method toString$lzycompute:()Ljava/lang/String;
      15: goto          22
      18: aload_0
      19: getfield      #129                // Field toString:Ljava/lang/String;
      22: areturn

  public java.lang.String hostPort();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method toString:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #84                 // Method protocol:()Ljava/lang/String;
       8: invokevirtual #153                // Method java/lang/String.length:()I
      11: iconst_3
      12: iadd
      13: invokevirtual #157                // Method java/lang/String.substring:(I)Ljava/lang/String;
      16: areturn

  public akka.actor.Address copy(java.lang.String, java.lang.String, scala.Option<java.lang.String>, scala.Option<java.lang.Object>);
    Code:
       0: new           #2                  // class akka/actor/Address
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #161                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/Option;Lscala/Option;)V
      12: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method protocol:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method system:()Ljava/lang/String;
       4: areturn

  public scala.Option<java.lang.String> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method host:()Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method port:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #168                // String Address
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 68
                     1: 61
                     2: 54
                     3: 47
               default: 32
          }
      32: new           #173                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #177                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #178                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #179                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #116                // Method port:()Lscala/Option;
      51: goto          72
      54: aload_0
      55: invokevirtual #99                 // Method host:()Lscala/Option;
      58: goto          72
      61: aload_0
      62: invokevirtual #96                 // Method system:()Ljava/lang/String;
      65: goto          72
      68: aload_0
      69: invokevirtual #84                 // Method protocol:()Ljava/lang/String;
      72: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #187                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #191                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/actor/Address
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     167
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/actor/Address
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          171
      25: aload_1
      26: checkcast     #2                  // class akka/actor/Address
      29: astore        4
      31: aload_0
      32: invokevirtual #84                 // Method protocol:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #84                 // Method protocol:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          163
      55: aload         5
      57: invokevirtual #197                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          163
      63: aload_0
      64: invokevirtual #96                 // Method system:()Ljava/lang/String;
      67: aload         4
      69: invokevirtual #96                 // Method system:()Ljava/lang/String;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          163
      87: aload         6
      89: invokevirtual #197                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          163
      95: aload_0
      96: invokevirtual #99                 // Method host:()Lscala/Option;
      99: aload         4
     101: invokevirtual #99                 // Method host:()Lscala/Option;
     104: astore        7
     106: dup
     107: ifnonnull     119
     110: pop
     111: aload         7
     113: ifnull        127
     116: goto          163
     119: aload         7
     121: invokevirtual #197                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifeq          163
     127: aload_0
     128: invokevirtual #116                // Method port:()Lscala/Option;
     131: aload         4
     133: invokevirtual #116                // Method port:()Lscala/Option;
     136: astore        8
     138: dup
     139: ifnonnull     151
     142: pop
     143: aload         8
     145: ifnull        159
     148: goto          163
     151: aload         8
     153: invokevirtual #197                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     156: ifeq          163
     159: iconst_1
     160: goto          164
     163: iconst_0
     164: ifeq          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: ireturn

  public akka.actor.Address(java.lang.String, java.lang.String, scala.Option<java.lang.String>, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #133                // Field protocol:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #135                // Field system:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #137                // Field host:Lscala/Option;
      15: aload_0
      16: aload         4
      18: putfield      #139                // Field port:Lscala/Option;
      21: aload_0
      22: invokespecial #200                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #206                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: return

  public akka.actor.Address(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #212                // Field scala/None$.MODULE$:Lscala/None$;
       6: getstatic     #212                // Field scala/None$.MODULE$:Lscala/None$;
       9: invokespecial #161                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/Option;Lscala/Option;)V
      12: return

  public akka.actor.Address(java.lang.String, java.lang.String, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #218                // Field scala/Option$.MODULE$:Lscala/Option$;
       6: aload_3
       7: invokevirtual #221                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      10: new           #223                // class scala/Some
      13: dup
      14: iload         4
      16: invokestatic  #177                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      19: invokespecial #226                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      22: invokespecial #161                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/Option;Lscala/Option;)V
      25: return
}
