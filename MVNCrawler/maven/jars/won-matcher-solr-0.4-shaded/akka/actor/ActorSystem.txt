Compiled from "ActorSystem.scala"
public abstract class akka.actor.ActorSystem implements akka.actor.ActorRefFactory {
  private final long startTime;

  public static scala.Option<scala.concurrent.ExecutionContext> apply$default$4();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #20                 // Method akka/actor/ActorSystem$.apply$default$4:()Lscala/Option;
       6: areturn

  public static scala.Option<java.lang.ClassLoader> apply$default$3();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #23                 // Method akka/actor/ActorSystem$.apply$default$3:()Lscala/Option;
       6: areturn

  public static scala.Option<com.typesafe.config.Config> apply$default$2();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #26                 // Method akka/actor/ActorSystem$.apply$default$2:()Lscala/Option;
       6: areturn

  public static akka.actor.ActorSystem apply(java.lang.String, scala.Option<com.typesafe.config.Config>, scala.Option<java.lang.ClassLoader>, scala.Option<scala.concurrent.ExecutionContext>);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #30                 // Method akka/actor/ActorSystem$.apply:(Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/Option;)Lakka/actor/ActorSystem;
      10: areturn

  public static akka.actor.ActorSystem apply(java.lang.String, com.typesafe.config.Config, java.lang.ClassLoader);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #33                 // Method akka/actor/ActorSystem$.apply:(Ljava/lang/String;Lcom/typesafe/config/Config;Ljava/lang/ClassLoader;)Lakka/actor/ActorSystem;
       9: areturn

  public static akka.actor.ActorSystem apply(java.lang.String, com.typesafe.config.Config);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: aload_1
       5: invokevirtual #36                 // Method akka/actor/ActorSystem$.apply:(Ljava/lang/String;Lcom/typesafe/config/Config;)Lakka/actor/ActorSystem;
       8: areturn

  public static akka.actor.ActorSystem apply(java.lang.String);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: invokevirtual #39                 // Method akka/actor/ActorSystem$.apply:(Ljava/lang/String;)Lakka/actor/ActorSystem;
       7: areturn

  public static akka.actor.ActorSystem apply();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #42                 // Method akka/actor/ActorSystem$.apply:()Lakka/actor/ActorSystem;
       6: areturn

  public static akka.actor.ActorSystem create(java.lang.String, com.typesafe.config.Config, java.lang.ClassLoader, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #46                 // Method akka/actor/ActorSystem$.create:(Ljava/lang/String;Lcom/typesafe/config/Config;Ljava/lang/ClassLoader;Lscala/concurrent/ExecutionContext;)Lakka/actor/ActorSystem;
      10: areturn

  public static akka.actor.ActorSystem create(java.lang.String, com.typesafe.config.Config, java.lang.ClassLoader);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #48                 // Method akka/actor/ActorSystem$.create:(Ljava/lang/String;Lcom/typesafe/config/Config;Ljava/lang/ClassLoader;)Lakka/actor/ActorSystem;
       9: areturn

  public static akka.actor.ActorSystem create(java.lang.String, com.typesafe.config.Config);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: aload_1
       5: invokevirtual #50                 // Method akka/actor/ActorSystem$.create:(Ljava/lang/String;Lcom/typesafe/config/Config;)Lakka/actor/ActorSystem;
       8: areturn

  public static akka.actor.ActorSystem create(java.lang.String);
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: aload_0
       4: invokevirtual #52                 // Method akka/actor/ActorSystem$.create:(Ljava/lang/String;)Lakka/actor/ActorSystem;
       7: areturn

  public static akka.actor.ActorSystem create();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #54                 // Method akka/actor/ActorSystem$.create:()Lakka/actor/ActorSystem;
       6: areturn

  public static scala.Option<java.lang.String> GlobalHome();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #57                 // Method akka/actor/ActorSystem$.GlobalHome:()Lscala/Option;
       6: areturn

  public static scala.Option<java.lang.String> SystemHome();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #60                 // Method akka/actor/ActorSystem$.SystemHome:()Lscala/Option;
       6: areturn

  public static scala.Option<java.lang.String> EnvHome();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #63                 // Method akka/actor/ActorSystem$.EnvHome:()Lscala/Option;
       6: areturn

  public static java.lang.String Version();
    Code:
       0: getstatic     #18                 // Field akka/actor/ActorSystem$.MODULE$:Lakka/actor/ActorSystem$;
       3: invokevirtual #67                 // Method akka/actor/ActorSystem$.Version:()Ljava/lang/String;
       6: areturn

  public akka.actor.ActorRef actorFor(akka.actor.ActorPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // Method akka/actor/ActorRefFactory$class.actorFor:(Lakka/actor/ActorRefFactory;Lakka/actor/ActorPath;)Lakka/actor/ActorRef;
       5: areturn

  public akka.actor.ActorRef actorFor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method akka/actor/ActorRefFactory$class.actorFor:(Lakka/actor/ActorRefFactory;Ljava/lang/String;)Lakka/actor/ActorRef;
       5: areturn

  public akka.actor.ActorRef actorFor(scala.collection.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #89                 // Method akka/actor/ActorRefFactory$class.actorFor:(Lakka/actor/ActorRefFactory;Lscala/collection/Iterable;)Lakka/actor/ActorRef;
       5: areturn

  public akka.actor.ActorRef actorFor(java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // Method akka/actor/ActorRefFactory$class.actorFor:(Lakka/actor/ActorRefFactory;Ljava/lang/Iterable;)Lakka/actor/ActorRef;
       5: areturn

  public akka.actor.ActorSelection actorSelection(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // Method akka/actor/ActorRefFactory$class.actorSelection:(Lakka/actor/ActorRefFactory;Ljava/lang/String;)Lakka/actor/ActorSelection;
       5: areturn

  public akka.actor.ActorSelection actorSelection(akka.actor.ActorPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #104                // Method akka/actor/ActorRefFactory$class.actorSelection:(Lakka/actor/ActorRefFactory;Lakka/actor/ActorPath;)Lakka/actor/ActorSelection;
       5: areturn

  public abstract java.lang.String name();

  public abstract akka.actor.ActorSystem$Settings settings();

  public abstract void logConfiguration();

  public abstract akka.actor.ActorPath $div(java.lang.String);

  public akka.actor.ActorPath child(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #114                // Method $div:(Ljava/lang/String;)Lakka/actor/ActorPath;
       5: areturn

  public abstract akka.actor.ActorPath $div(scala.collection.Iterable<java.lang.String>);

  public akka.actor.ActorPath descendant(java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: getstatic     #122                // Field akka/japi/Util$.MODULE$:Lakka/japi/Util$;
       4: aload_1
       5: invokevirtual #126                // Method akka/japi/Util$.immutableSeq:(Ljava/lang/Iterable;)Lscala/collection/immutable/Seq;
       8: invokevirtual #128                // Method $div:(Lscala/collection/Iterable;)Lakka/actor/ActorPath;
      11: areturn

  public long startTime();
    Code:
       0: aload_0
       1: getfield      #132                // Field startTime:J
       4: lreturn

  public long uptime();
    Code:
       0: invokestatic  #138                // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: invokevirtual #140                // Method startTime:()J
       7: lsub
       8: ldc2_w        #141                // long 1000l
      11: ldiv
      12: lreturn

  public abstract akka.event.EventStream eventStream();

  public abstract akka.event.LoggingAdapter log();

  public abstract akka.actor.ActorRef deadLetters();

  public abstract akka.actor.Scheduler scheduler();

  public abstract akka.dispatch.Dispatchers dispatchers();

  public abstract scala.concurrent.ExecutionContextExecutor dispatcher();

  public abstract akka.dispatch.Mailboxes mailboxes();

  public abstract <T> void registerOnTermination(scala.Function0<T>);

  public abstract void registerOnTermination(java.lang.Runnable);

  public abstract void awaitTermination(scala.concurrent.duration.Duration);

  public abstract void awaitTermination();

  public abstract void shutdown();

  public abstract boolean isTerminated();

  public abstract scala.concurrent.Future<akka.actor.Terminated> terminate();

  public abstract scala.concurrent.Future<akka.actor.Terminated> whenTerminated();

  public abstract <T extends akka.actor.Extension> T registerExtension(akka.actor.ExtensionId<T>);

  public abstract <T extends akka.actor.Extension> T extension(akka.actor.ExtensionId<T>);

  public abstract boolean hasExtension(akka.actor.ExtensionId<? extends akka.actor.Extension>);

  public akka.actor.ActorSystem();
    Code:
       0: aload_0
       1: invokespecial #175                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #179                // Method akka/actor/ActorRefFactory$class.$init$:(Lakka/actor/ActorRefFactory;)V
       8: aload_0
       9: invokestatic  #138                // Method java/lang/System.currentTimeMillis:()J
      12: putfield      #132                // Field startTime:J
      15: return
}
