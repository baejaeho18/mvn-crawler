Compiled from "FSM.scala"
public final class akka.actor.FSM$Timer implements akka.actor.NoSerializationVerificationNeeded,scala.Product,scala.Serializable {
  private final java.lang.String name;

  private final java.lang.Object msg;

  private final boolean repeat;

  private final int generation;

  private scala.Option<akka.actor.Cancellable> ref;

  private final akka.actor.Scheduler scheduler;

  private final scala.concurrent.ExecutionContextExecutor executionContext;

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #29                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.Object msg();
    Code:
       0: aload_0
       1: getfield      #34                 // Field msg:Ljava/lang/Object;
       4: areturn

  public boolean repeat();
    Code:
       0: aload_0
       1: getfield      #37                 // Field repeat:Z
       4: ireturn

  public int generation();
    Code:
       0: aload_0
       1: getfield      #40                 // Field generation:I
       4: ireturn

  private scala.Option<akka.actor.Cancellable> ref();
    Code:
       0: aload_0
       1: getfield      #43                 // Field ref:Lscala/Option;
       4: areturn

  private void ref_$eq(scala.Option<akka.actor.Cancellable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field ref:Lscala/Option;
       5: return

  private akka.actor.Scheduler scheduler();
    Code:
       0: aload_0
       1: getfield      #49                 // Field scheduler:Lakka/actor/Scheduler;
       4: areturn

  private scala.concurrent.ExecutionContextExecutor executionContext();
    Code:
       0: aload_0
       1: getfield      #52                 // Field executionContext:Lscala/concurrent/ExecutionContextExecutor;
       4: areturn

  public void schedule(akka.actor.ActorRef, scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: new           #56                 // class scala/Some
       4: dup
       5: aload_0
       6: invokevirtual #58                 // Method repeat:()Z
       9: ifeq          70
      12: aload_2
      13: astore_3
      14: aload_2
      15: astore        4
      17: aload_1
      18: astore        5
      20: aload_0
      21: astore        6
      23: aload_0
      24: invokespecial #60                 // Method executionContext:()Lscala/concurrent/ExecutionContextExecutor;
      27: astore        7
      29: aload_0
      30: invokespecial #62                 // Method scheduler:()Lakka/actor/Scheduler;
      33: aload_3
      34: aload         4
      36: aload         5
      38: aload         6
      40: invokeinterface #68,  5           // InterfaceMethod akka/actor/Scheduler.schedule$default$6:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;)Lakka/actor/ActorRef;
      45: astore        8
      47: aload_0
      48: invokespecial #62                 // Method scheduler:()Lakka/actor/Scheduler;
      51: aload_3
      52: aload         4
      54: aload         5
      56: aload         6
      58: aload         7
      60: aload         8
      62: invokeinterface #71,  7           // InterfaceMethod akka/actor/Scheduler.schedule:(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
      67: goto          121
      70: aload_2
      71: astore        9
      73: aload_1
      74: astore        10
      76: aload_0
      77: astore        11
      79: aload_0
      80: invokespecial #60                 // Method executionContext:()Lscala/concurrent/ExecutionContextExecutor;
      83: astore        12
      85: aload_0
      86: invokespecial #62                 // Method scheduler:()Lakka/actor/Scheduler;
      89: aload         9
      91: aload         10
      93: aload         11
      95: invokeinterface #75,  4           // InterfaceMethod akka/actor/Scheduler.scheduleOnce$default$5:(Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;)Lakka/actor/ActorRef;
     100: astore        13
     102: aload_0
     103: invokespecial #62                 // Method scheduler:()Lakka/actor/Scheduler;
     106: aload         9
     108: aload         10
     110: aload         11
     112: aload         12
     114: aload         13
     116: invokeinterface #79,  6           // InterfaceMethod akka/actor/Scheduler.scheduleOnce:(Lscala/concurrent/duration/FiniteDuration;Lakka/actor/ActorRef;Ljava/lang/Object;Lscala/concurrent/ExecutionContext;Lakka/actor/ActorRef;)Lakka/actor/Cancellable;
     121: invokespecial #83                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
     124: invokespecial #85                 // Method ref_$eq:(Lscala/Option;)V
     127: return

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #110                // Method ref:()Lscala/Option;
       4: invokevirtual #115                // Method scala/Option.isDefined:()Z
       7: ifeq          33
      10: aload_0
      11: invokespecial #110                // Method ref:()Lscala/Option;
      14: invokevirtual #118                // Method scala/Option.get:()Ljava/lang/Object;
      17: checkcast     #106                // class akka/actor/Cancellable
      20: invokeinterface #120,  1          // InterfaceMethod akka/actor/Cancellable.cancel:()Z
      25: pop
      26: aload_0
      27: getstatic     #126                // Field scala/None$.MODULE$:Lscala/None$;
      30: invokespecial #85                 // Method ref_$eq:(Lscala/Option;)V
      33: return

  public akka.actor.FSM$Timer copy(java.lang.String, java.lang.Object, boolean, int, akka.actor.ActorContext);
    Code:
       0: new           #2                  // class akka/actor/FSM$Timer
       3: dup
       4: aload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: invokespecial #131                // Method "<init>":(Ljava/lang/String;Ljava/lang/Object;ZILakka/actor/ActorContext;)V
      14: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #136                // Method name:()Ljava/lang/String;
       4: areturn

  public java.lang.Object copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #139                // Method msg:()Ljava/lang/Object;
       4: areturn

  public boolean copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method repeat:()Z
       4: ireturn

  public int copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method generation:()I
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #146                // String Timer
       2: areturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 74
                     1: 67
                     2: 57
                     3: 47
               default: 32
          }
      32: new           #151                // class java/lang/IndexOutOfBoundsException
      35: dup
      36: iload_1
      37: invokestatic  #157                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: invokevirtual #160                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #163                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #143                // Method generation:()I
      51: invokestatic  #157                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      54: goto          78
      57: aload_0
      58: invokevirtual #58                 // Method repeat:()Z
      61: invokestatic  #167                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      64: goto          78
      67: aload_0
      68: invokevirtual #139                // Method msg:()Ljava/lang/Object;
      71: goto          78
      74: aload_0
      75: invokevirtual #136                // Method name:()Ljava/lang/String;
      78: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #174                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #178                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/actor/FSM$Timer
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #182                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #136                // Method name:()Ljava/lang/String;
       8: invokestatic  #188                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #192                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #139                // Method msg:()Ljava/lang/Object;
      20: invokestatic  #188                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #192                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #58                 // Method repeat:()Z
      32: ifeq          41
      35: sipush        1231
      38: goto          44
      41: sipush        1237
      44: invokestatic  #192                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: aload_0
      50: invokevirtual #143                // Method generation:()I
      53: invokestatic  #192                // Method scala/runtime/Statics.mix:(II)I
      56: istore_1
      57: iload_1
      58: iconst_4
      59: invokestatic  #195                // Method scala/runtime/Statics.finalizeHash:(II)I
      62: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #174                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #199                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     110
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/actor/FSM$Timer
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          114
      25: aload_1
      26: checkcast     #2                  // class akka/actor/FSM$Timer
      29: astore        4
      31: aload_0
      32: invokevirtual #136                // Method name:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #136                // Method name:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          106
      55: aload         5
      57: invokevirtual #202                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          106
      63: aload_0
      64: invokevirtual #139                // Method msg:()Ljava/lang/Object;
      67: aload         4
      69: invokevirtual #139                // Method msg:()Ljava/lang/Object;
      72: invokestatic  #205                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      75: ifeq          106
      78: aload_0
      79: invokevirtual #58                 // Method repeat:()Z
      82: aload         4
      84: invokevirtual #58                 // Method repeat:()Z
      87: if_icmpne     106
      90: aload_0
      91: invokevirtual #143                // Method generation:()I
      94: aload         4
      96: invokevirtual #143                // Method generation:()I
      99: if_icmpne     106
     102: iconst_1
     103: goto          107
     106: iconst_0
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: ireturn

  public akka.actor.FSM$Timer(java.lang.String, java.lang.Object, boolean, int, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field name:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #34                 // Field msg:Ljava/lang/Object;
      10: aload_0
      11: iload_3
      12: putfield      #37                 // Field repeat:Z
      15: aload_0
      16: iload         4
      18: putfield      #40                 // Field generation:I
      21: aload_0
      22: invokespecial #209                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #215                // Method scala/Product$class.$init$:(Lscala/Product;)V
      29: aload_0
      30: aload         5
      32: invokeinterface #221,  1          // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      37: invokevirtual #224                // Method akka/actor/ActorSystem.scheduler:()Lakka/actor/Scheduler;
      40: putfield      #49                 // Field scheduler:Lakka/actor/Scheduler;
      43: aload_0
      44: aload         5
      46: invokeinterface #227,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
      51: putfield      #52                 // Field executionContext:Lscala/concurrent/ExecutionContextExecutor;
      54: return
}
