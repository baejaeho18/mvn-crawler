Compiled from "TypedActor.scala"
public final class akka.actor.ContextualTypedActorFactory implements akka.actor.TypedActorFactory,scala.Product,scala.Serializable {
  private final akka.actor.TypedActorExtension typedActor;

  private final akka.actor.ActorContext actorFactory;

  public static scala.Option<scala.Tuple2<akka.actor.TypedActorExtension, akka.actor.ActorContext>> unapply(akka.actor.ContextualTypedActorFactory);
    Code:
       0: getstatic     #22                 // Field akka/actor/ContextualTypedActorFactory$.MODULE$:Lakka/actor/ContextualTypedActorFactory$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/actor/ContextualTypedActorFactory$.unapply:(Lakka/actor/ContextualTypedActorFactory;)Lscala/Option;
       7: areturn

  public static akka.actor.ContextualTypedActorFactory apply(akka.actor.TypedActorExtension, akka.actor.ActorContext);
    Code:
       0: getstatic     #22                 // Field akka/actor/ContextualTypedActorFactory$.MODULE$:Lakka/actor/ContextualTypedActorFactory$;
       3: aload_0
       4: aload_1
       5: invokevirtual #28                 // Method akka/actor/ContextualTypedActorFactory$.apply:(Lakka/actor/TypedActorExtension;Lakka/actor/ActorContext;)Lakka/actor/ContextualTypedActorFactory;
       8: areturn

  public static scala.Function1<scala.Tuple2<akka.actor.TypedActorExtension, akka.actor.ActorContext>, akka.actor.ContextualTypedActorFactory> tupled();
    Code:
       0: getstatic     #22                 // Field akka/actor/ContextualTypedActorFactory$.MODULE$:Lakka/actor/ContextualTypedActorFactory$;
       3: invokevirtual #32                 // Method akka/actor/ContextualTypedActorFactory$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.actor.TypedActorExtension, scala.Function1<akka.actor.ActorContext, akka.actor.ContextualTypedActorFactory>> curried();
    Code:
       0: getstatic     #22                 // Field akka/actor/ContextualTypedActorFactory$.MODULE$:Lakka/actor/ContextualTypedActorFactory$;
       3: invokevirtual #35                 // Method akka/actor/ContextualTypedActorFactory$.curried:()Lscala/Function1;
       6: areturn

  public boolean stop(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // Method akka/actor/TypedActorFactory$class.stop:(Lakka/actor/TypedActorFactory;Ljava/lang/Object;)Z
       5: ireturn

  public boolean poisonPill(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // Method akka/actor/TypedActorFactory$class.poisonPill:(Lakka/actor/TypedActorFactory;Ljava/lang/Object;)Z
       5: ireturn

  public <R, T extends R> R typedActorOf(akka.actor.TypedProps<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method akka/actor/TypedActorFactory$class.typedActorOf:(Lakka/actor/TypedActorFactory;Lakka/actor/TypedProps;)Ljava/lang/Object;
       5: areturn

  public <R, T extends R> R typedActorOf(akka.actor.TypedProps<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // Method akka/actor/TypedActorFactory$class.typedActorOf:(Lakka/actor/TypedActorFactory;Lakka/actor/TypedProps;Ljava/lang/String;)Ljava/lang/Object;
       6: areturn

  public <R, T extends R> R typedActorOf(akka.actor.TypedProps<T>, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // Method akka/actor/TypedActorFactory$class.typedActorOf:(Lakka/actor/TypedActorFactory;Lakka/actor/TypedProps;Lakka/actor/ActorRef;)Ljava/lang/Object;
       6: areturn

  public akka.actor.TypedActorExtension typedActor();
    Code:
       0: aload_0
       1: getfield      #75                 // Field typedActor:Lakka/actor/TypedActorExtension;
       4: areturn

  public akka.actor.ActorContext actorFactory();
    Code:
       0: aload_0
       1: getfield      #78                 // Field actorFactory:Lakka/actor/ActorContext;
       4: areturn

  public akka.actor.ActorRef getActorRefFor(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method typedActor:()Lakka/actor/TypedActorExtension;
       4: aload_1
       5: invokevirtual #86                 // Method akka/actor/TypedActorExtension.getActorRefFor:(Ljava/lang/Object;)Lakka/actor/ActorRef;
       8: areturn

  public boolean isTypedActor(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method typedActor:()Lakka/actor/TypedActorExtension;
       4: aload_1
       5: invokevirtual #89                 // Method akka/actor/TypedActorExtension.isTypedActor:(Ljava/lang/Object;)Z
       8: ireturn

  public akka.actor.ContextualTypedActorFactory copy(akka.actor.TypedActorExtension, akka.actor.ActorContext);
    Code:
       0: new           #2                  // class akka/actor/ContextualTypedActorFactory
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #95                 // Method "<init>":(Lakka/actor/TypedActorExtension;Lakka/actor/ActorContext;)V
       9: areturn

  public akka.actor.TypedActorExtension copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method typedActor:()Lakka/actor/TypedActorExtension;
       4: areturn

  public akka.actor.ActorContext copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method actorFactory:()Lakka/actor/ActorContext;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #103                // String ContextualTypedActorFactory
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #109                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #115                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #118                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #121                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #99                 // Method actorFactory:()Lakka/actor/ActorContext;
      43: goto          50
      46: aload_0
      47: invokevirtual #82                 // Method typedActor:()Lakka/actor/TypedActorExtension;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #130                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #134                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/actor/ContextualTypedActorFactory
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #130                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #140                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #130                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #144                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     103
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/actor/ContextualTypedActorFactory
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          107
      25: aload_1
      26: checkcast     #2                  // class akka/actor/ContextualTypedActorFactory
      29: astore        4
      31: aload_0
      32: invokevirtual #82                 // Method typedActor:()Lakka/actor/TypedActorExtension;
      35: aload         4
      37: invokevirtual #82                 // Method typedActor:()Lakka/actor/TypedActorExtension;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          99
      55: aload         5
      57: invokevirtual #147                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: invokevirtual #99                 // Method actorFactory:()Lakka/actor/ActorContext;
      67: aload         4
      69: invokevirtual #99                 // Method actorFactory:()Lakka/actor/ActorContext;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          99
      87: aload         6
      89: invokevirtual #147                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: ireturn

  public akka.actor.ActorRefFactory actorFactory();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method actorFactory:()Lakka/actor/ActorContext;
       4: areturn

  public akka.actor.ContextualTypedActorFactory(akka.actor.TypedActorExtension, akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field typedActor:Lakka/actor/TypedActorExtension;
       5: aload_0
       6: aload_2
       7: putfield      #78                 // Field actorFactory:Lakka/actor/ActorContext;
      10: aload_0
      11: invokespecial #153                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #157                // Method akka/actor/TypedActorFactory$class.$init$:(Lakka/actor/TypedActorFactory;)V
      18: aload_0
      19: invokestatic  #162                // Method scala/Product$class.$init$:(Lscala/Product;)V
      22: return
}
