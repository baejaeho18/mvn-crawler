Compiled from "ActorRefProvider.scala"
public interface akka.actor.ActorRefProvider {
  public abstract akka.actor.InternalActorRef rootGuardian();

  public abstract akka.actor.ActorRef rootGuardianAt(akka.actor.Address);

  public abstract akka.actor.LocalActorRef guardian();

  public abstract akka.actor.LocalActorRef systemGuardian();

  public abstract akka.actor.ActorRef deadLetters();

  public abstract akka.actor.ActorPath rootPath();

  public abstract akka.actor.ActorSystem$Settings settings();

  public abstract void init(akka.actor.ActorSystemImpl);

  public abstract akka.actor.Deployer deployer();

  public abstract akka.actor.ActorPath tempPath();

  public abstract akka.actor.InternalActorRef tempContainer();

  public abstract void registerTempActor(akka.actor.InternalActorRef, akka.actor.ActorPath);

  public abstract void unregisterTempActor(akka.actor.ActorPath);

  public abstract akka.actor.InternalActorRef actorOf(akka.actor.ActorSystemImpl, akka.actor.Props, akka.actor.InternalActorRef, akka.actor.ActorPath, boolean, scala.Option<akka.actor.Deploy>, boolean, boolean);

  public abstract akka.actor.InternalActorRef actorFor(akka.actor.ActorPath);

  public abstract akka.actor.InternalActorRef actorFor(akka.actor.InternalActorRef, java.lang.String);

  public abstract akka.actor.InternalActorRef actorFor(akka.actor.InternalActorRef, scala.collection.Iterable<java.lang.String>);

  public abstract akka.actor.ActorRef resolveActorRef(java.lang.String);

  public abstract akka.actor.ActorRef resolveActorRef(akka.actor.ActorPath);

  public abstract scala.concurrent.Future<akka.actor.Terminated> terminationFuture();

  public abstract scala.Option<akka.actor.Address> getExternalAddressFor(akka.actor.Address);

  public abstract akka.actor.Address getDefaultAddress();
}
