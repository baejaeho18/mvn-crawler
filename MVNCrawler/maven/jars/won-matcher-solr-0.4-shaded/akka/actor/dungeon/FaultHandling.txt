Compiled from "FaultHandling.scala"
public interface akka.actor.dungeon.FaultHandling {
  public abstract akka.actor.ActorRef akka$actor$dungeon$FaultHandling$$_failed();

  public abstract void akka$actor$dungeon$FaultHandling$$_failed_$eq(akka.actor.ActorRef);

  public abstract void faultRecreate(java.lang.Throwable);

  public abstract void faultSuspend();

  public abstract void faultResume(java.lang.Throwable);

  public abstract void faultCreate();

  public abstract void terminate();

  public abstract void handleInvokeFailure(scala.collection.immutable.Iterable<akka.actor.ActorRef>, java.lang.Throwable);

  public abstract void handleFailure(akka.dispatch.sysmsg.Failed);

  public abstract void handleChildTerminated(akka.actor.ActorRef);

  public abstract scala.PartialFunction<java.lang.Throwable, scala.runtime.BoxedUnit> handleNonFatalOrInterruptedException(scala.Function1<java.lang.Throwable, scala.runtime.BoxedUnit>);
}
