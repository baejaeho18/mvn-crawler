Compiled from "ChildrenContainer.scala"
public final class akka.actor.dungeon.ChildrenContainer$TerminatingChildrenContainer implements akka.actor.dungeon.ChildrenContainer,scala.Product,scala.Serializable {
  private final scala.collection.immutable.TreeMap<java.lang.String, akka.actor.ChildStats> c;

  private final scala.collection.immutable.Set<akka.actor.ActorRef> toDie;

  private final akka.actor.dungeon.ChildrenContainer$SuspendReason reason;

  public scala.collection.immutable.TreeMap<java.lang.String, akka.actor.ChildStats> c();
    Code:
       0: aload_0
       1: getfield      #22                 // Field c:Lscala/collection/immutable/TreeMap;
       4: areturn

  public scala.collection.immutable.TreeMap<java.lang.String, akka.actor.ChildStats> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       4: areturn

  public scala.collection.immutable.Set<akka.actor.ActorRef> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
       4: areturn

  public akka.actor.dungeon.ChildrenContainer$SuspendReason copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
       4: areturn

  public scala.collection.immutable.Set<akka.actor.ActorRef> toDie();
    Code:
       0: aload_0
       1: getfield      #37                 // Field toDie:Lscala/collection/immutable/Set;
       4: areturn

  public akka.actor.dungeon.ChildrenContainer$SuspendReason reason();
    Code:
       0: aload_0
       1: getfield      #39                 // Field reason:Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
       4: areturn

  public akka.actor.dungeon.ChildrenContainer add(java.lang.String, akka.actor.ChildRestartStats);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       5: aload_1
       6: aload_2
       7: invokevirtual #47                 // Method scala/collection/immutable/TreeMap.updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
      10: aload_0
      11: invokevirtual #49                 // Method copy$default$2:()Lscala/collection/immutable/Set;
      14: aload_0
      15: invokevirtual #51                 // Method copy$default$3:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      18: invokevirtual #55                 // Method copy:(Lscala/collection/immutable/TreeMap;Lscala/collection/immutable/Set;Lakka/actor/dungeon/ChildrenContainer$SuspendReason;)Lakka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer;
      21: areturn

  public akka.actor.dungeon.ChildrenContainer remove(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod scala/collection/immutable/Set.$minus:(Ljava/lang/Object;)Lscala/collection/Set;
      10: checkcast     #63                 // class scala/collection/immutable/Set
      13: astore_2
      14: aload_2
      15: invokeinterface #71,  1           // InterfaceMethod scala/collection/immutable/Set.isEmpty:()Z
      20: ifeq          75
      23: aload_0
      24: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      27: astore_3
      28: getstatic     #77                 // Field akka/actor/dungeon/ChildrenContainer$Termination$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$Termination$;
      31: aload_3
      32: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          46
      38: getstatic     #86                 // Field akka/actor/dungeon/ChildrenContainer$TerminatedChildrenContainer$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$TerminatedChildrenContainer$;
      41: astore        4
      43: goto          70
      46: getstatic     #91                 // Field akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$NormalChildrenContainer$;
      49: aload_0
      50: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      53: aload_1
      54: invokevirtual #97                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
      57: invokeinterface #102,  1          // InterfaceMethod akka/actor/ActorPath.name:()Ljava/lang/String;
      62: invokevirtual #105                // Method scala/collection/immutable/TreeMap.$minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
      65: invokevirtual #109                // Method akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer$.apply:(Lscala/collection/immutable/TreeMap;)Lakka/actor/dungeon/ChildrenContainer;
      68: astore        4
      70: aload         4
      72: goto          100
      75: aload_0
      76: aload_0
      77: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      80: aload_1
      81: invokevirtual #97                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
      84: invokeinterface #102,  1          // InterfaceMethod akka/actor/ActorPath.name:()Ljava/lang/String;
      89: invokevirtual #105                // Method scala/collection/immutable/TreeMap.$minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
      92: aload_2
      93: aload_0
      94: invokevirtual #51                 // Method copy$default$3:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      97: invokevirtual #55                 // Method copy:(Lscala/collection/immutable/TreeMap;Lscala/collection/immutable/Set;Lakka/actor/dungeon/ChildrenContainer$SuspendReason;)Lakka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer;
     100: areturn

  public scala.Option<akka.actor.ChildStats> getByName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       4: aload_1
       5: invokevirtual #120                // Method scala/collection/immutable/TreeMap.get:(Ljava/lang/Object;)Lscala/Option;
       8: areturn

  public scala.Option<akka.actor.ChildRestartStats> getByRef(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       4: aload_1
       5: invokevirtual #97                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
       8: invokeinterface #102,  1          // InterfaceMethod akka/actor/ActorPath.name:()Ljava/lang/String;
      13: invokevirtual #120                // Method scala/collection/immutable/TreeMap.get:(Ljava/lang/Object;)Lscala/Option;
      16: astore_2
      17: aload_2
      18: instanceof    #124                // class scala/Some
      21: ifeq          88
      24: aload_2
      25: checkcast     #124                // class scala/Some
      28: astore_3
      29: aload_3
      30: invokevirtual #128                // Method scala/Some.x:()Ljava/lang/Object;
      33: checkcast     #130                // class akka/actor/ChildStats
      36: astore        4
      38: aload         4
      40: instanceof    #132                // class akka/actor/ChildRestartStats
      43: ifeq          88
      46: aload         4
      48: checkcast     #132                // class akka/actor/ChildRestartStats
      51: astore        5
      53: aload         5
      55: invokevirtual #135                // Method akka/actor/ChildRestartStats.child:()Lakka/actor/ActorRef;
      58: aload_1
      59: astore        6
      61: dup
      62: ifnonnull     74
      65: pop
      66: aload         6
      68: ifnull        82
      71: goto          88
      74: aload         6
      76: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      79: ifeq          88
      82: aload_3
      83: astore        7
      85: goto          93
      88: getstatic     #140                // Field scala/None$.MODULE$:Lscala/None$;
      91: astore        7
      93: aload         7
      95: areturn

  public scala.collection.immutable.Iterable<akka.actor.ActorRef> children();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       4: invokevirtual #148                // Method scala/collection/immutable/TreeMap.isEmpty:()Z
       7: ifeq          16
      10: getstatic     #153                // Field akka/util/Collections$EmptyImmutableSeq$.MODULE$:Lakka/util/Collections$EmptyImmutableSeq$;
      13: goto          27
      16: new           #155                // class akka/actor/dungeon/ChildrenContainer$ChildrenIterable
      19: dup
      20: aload_0
      21: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      24: invokespecial #159                // Method akka/actor/dungeon/ChildrenContainer$ChildrenIterable."<init>":(Lscala/collection/immutable/MapLike;)V
      27: areturn

  public scala.collection.immutable.Iterable<akka.actor.ChildRestartStats> stats();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       4: invokevirtual #148                // Method scala/collection/immutable/TreeMap.isEmpty:()Z
       7: ifeq          16
      10: getstatic     #153                // Field akka/util/Collections$EmptyImmutableSeq$.MODULE$:Lakka/util/Collections$EmptyImmutableSeq$;
      13: goto          27
      16: new           #161                // class akka/actor/dungeon/ChildrenContainer$ChildRestartsIterable
      19: dup
      20: aload_0
      21: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      24: invokespecial #162                // Method akka/actor/dungeon/ChildrenContainer$ChildRestartsIterable."<init>":(Lscala/collection/immutable/MapLike;)V
      27: areturn

  public akka.actor.dungeon.ChildrenContainer shallDie(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
       4: aload_1
       5: invokeinterface #166,  2          // InterfaceMethod scala/collection/immutable/Set.$plus:(Ljava/lang/Object;)Lscala/collection/Set;
      10: checkcast     #63                 // class scala/collection/immutable/Set
      13: astore_2
      14: aload_0
      15: invokevirtual #168                // Method copy$default$1:()Lscala/collection/immutable/TreeMap;
      18: astore_3
      19: aload_0
      20: invokevirtual #51                 // Method copy$default$3:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      23: astore        4
      25: aload_0
      26: aload_3
      27: aload_2
      28: aload         4
      30: invokevirtual #55                 // Method copy:(Lscala/collection/immutable/TreeMap;Lscala/collection/immutable/Set;Lakka/actor/dungeon/ChildrenContainer$SuspendReason;)Lakka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer;
      33: areturn

  public akka.actor.dungeon.ChildrenContainer reserve(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
       4: astore_2
       5: getstatic     #77                 // Field akka/actor/dungeon/ChildrenContainer$Termination$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$Termination$;
       8: aload_2
       9: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          47
      15: new           #175                // class java/lang/IllegalStateException
      18: dup
      19: new           #177                // class scala/collection/mutable/StringBuilder
      22: dup
      23: invokespecial #180                // Method scala/collection/mutable/StringBuilder."<init>":()V
      26: ldc           #182                // String cannot reserve actor name \'
      28: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      31: aload_1
      32: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      35: ldc           #188                // String \': terminating
      37: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      40: invokevirtual #191                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #194                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      51: aload_1
      52: invokevirtual #197                // Method scala/collection/immutable/TreeMap.contains:(Ljava/lang/Object;)Z
      55: ifeq          113
      58: new           #199                // class akka/actor/InvalidActorNameException
      61: dup
      62: new           #201                // class scala/StringContext
      65: dup
      66: getstatic     #206                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      69: iconst_2
      70: anewarray     #208                // class java/lang/String
      73: dup
      74: iconst_0
      75: ldc           #210                // String actor name [
      77: aastore
      78: dup
      79: iconst_1
      80: ldc           #212                // String ] is not unique!
      82: aastore
      83: checkcast     #214                // class "[Ljava/lang/Object;"
      86: invokevirtual #218                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      89: invokespecial #221                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      92: getstatic     #206                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      95: iconst_1
      96: anewarray     #4                  // class java/lang/Object
      99: dup
     100: iconst_0
     101: aload_1
     102: aastore
     103: invokevirtual #225                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     106: invokevirtual #229                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     109: invokespecial #230                // Method akka/actor/InvalidActorNameException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload_0
     114: aload_0
     115: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
     118: aload_1
     119: getstatic     #235                // Field akka/actor/ChildNameReserved$.MODULE$:Lakka/actor/ChildNameReserved$;
     122: invokevirtual #47                 // Method scala/collection/immutable/TreeMap.updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
     125: aload_0
     126: invokevirtual #49                 // Method copy$default$2:()Lscala/collection/immutable/Set;
     129: aload_0
     130: invokevirtual #51                 // Method copy$default$3:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
     133: invokevirtual #55                 // Method copy:(Lscala/collection/immutable/TreeMap;Lscala/collection/immutable/Set;Lakka/actor/dungeon/ChildrenContainer$SuspendReason;)Lakka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer;
     136: astore_3
     137: aload_3
     138: areturn

  public akka.actor.dungeon.ChildrenContainer unreserve(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       4: aload_1
       5: invokevirtual #120                // Method scala/collection/immutable/TreeMap.get:(Ljava/lang/Object;)Lscala/Option;
       8: astore_2
       9: aload_2
      10: instanceof    #124                // class scala/Some
      13: ifeq          66
      16: aload_2
      17: checkcast     #124                // class scala/Some
      20: astore_3
      21: aload_3
      22: invokevirtual #128                // Method scala/Some.x:()Ljava/lang/Object;
      25: checkcast     #130                // class akka/actor/ChildStats
      28: astore        4
      30: getstatic     #235                // Field akka/actor/ChildNameReserved$.MODULE$:Lakka/actor/ChildNameReserved$;
      33: aload         4
      35: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          66
      41: aload_0
      42: aload_0
      43: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      46: aload_1
      47: invokevirtual #105                // Method scala/collection/immutable/TreeMap.$minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
      50: aload_0
      51: invokevirtual #49                 // Method copy$default$2:()Lscala/collection/immutable/Set;
      54: aload_0
      55: invokevirtual #51                 // Method copy$default$3:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      58: invokevirtual #55                 // Method copy:(Lscala/collection/immutable/TreeMap;Lscala/collection/immutable/Set;Lakka/actor/dungeon/ChildrenContainer$SuspendReason;)Lakka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer;
      61: astore        5
      63: goto          69
      66: aload_0
      67: astore        5
      69: aload         5
      71: areturn

  public boolean isTerminating();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
       4: getstatic     #77                 // Field akka/actor/dungeon/ChildrenContainer$Termination$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$Termination$;
       7: astore_1
       8: dup
       9: ifnonnull     20
      12: pop
      13: aload_1
      14: ifnull        27
      17: goto          31
      20: aload_1
      21: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public boolean isNormal();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
       4: getstatic     #243                // Field akka/actor/dungeon/ChildrenContainer$UserRequest$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$UserRequest$;
       7: astore_1
       8: dup
       9: ifnonnull     20
      12: pop
      13: aload_1
      14: ifnull        27
      17: goto          31
      20: aload_1
      21: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
       4: invokevirtual #247                // Method scala/collection/immutable/TreeMap.size:()I
       7: bipush        20
       9: if_icmple     40
      12: new           #177                // class scala/collection/mutable/StringBuilder
      15: dup
      16: invokespecial #180                // Method scala/collection/mutable/StringBuilder."<init>":()V
      19: aload_0
      20: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      23: invokevirtual #247                // Method scala/collection/immutable/TreeMap.size:()I
      26: invokevirtual #250                // Method scala/collection/mutable/StringBuilder.append:(I)Lscala/collection/mutable/StringBuilder;
      29: ldc           #252                // String  children
      31: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      34: invokevirtual #191                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      37: goto          109
      40: new           #177                // class scala/collection/mutable/StringBuilder
      43: dup
      44: invokespecial #180                // Method scala/collection/mutable/StringBuilder."<init>":()V
      47: aload_0
      48: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      51: new           #177                // class scala/collection/mutable/StringBuilder
      54: dup
      55: invokespecial #180                // Method scala/collection/mutable/StringBuilder."<init>":()V
      58: ldc           #254                // String children (
      60: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      63: aload_0
      64: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
      67: invokeinterface #255,  1          // InterfaceMethod scala/collection/immutable/Set.size:()I
      72: invokestatic  #261                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      75: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      78: ldc_w         #263                // String  terminating):\n
      81: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      84: invokevirtual #191                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      87: ldc_w         #265                // String \n
      90: ldc_w         #267                // String \n
      93: invokevirtual #271                // Method scala/collection/immutable/TreeMap.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      96: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      99: aload_0
     100: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
     103: invokevirtual #186                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     106: invokevirtual #191                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     109: areturn

  public akka.actor.dungeon.ChildrenContainer$TerminatingChildrenContainer copy(scala.collection.immutable.TreeMap<java.lang.String, akka.actor.ChildStats>, scala.collection.immutable.Set<akka.actor.ActorRef>, akka.actor.dungeon.ChildrenContainer$SuspendReason);
    Code:
       0: new           #2                  // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/TreeMap;Lscala/collection/immutable/Set;Lakka/actor/dungeon/ChildrenContainer$SuspendReason;)V
      10: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #277                // String TerminatingChildrenContainer
       3: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 57
                     1: 50
                     2: 43
               default: 28
          }
      28: new           #282                // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #261                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #283                // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #284                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      47: goto          61
      50: aload_0
      51: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
      54: goto          61
      57: aload_0
      58: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      61: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #292                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #296                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #292                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #303                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     135
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          139
      25: aload_1
      26: checkcast     #2                  // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
      29: astore        4
      31: aload_0
      32: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      35: aload         4
      37: invokevirtual #27                 // Method c:()Lscala/collection/immutable/TreeMap;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          131
      55: aload         5
      57: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          131
      63: aload_0
      64: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
      67: aload         4
      69: invokevirtual #31                 // Method toDie:()Lscala/collection/immutable/Set;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          131
      87: aload         6
      89: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          131
      95: aload_0
      96: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      99: aload         4
     101: invokevirtual #35                 // Method reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
     104: astore        7
     106: dup
     107: ifnonnull     119
     110: pop
     111: aload         7
     113: ifnull        127
     116: goto          131
     119: aload         7
     121: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifeq          131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: ifeq          139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: ireturn

  public akka.actor.dungeon.ChildrenContainer$TerminatingChildrenContainer(scala.collection.immutable.TreeMap<java.lang.String, akka.actor.ChildStats>, scala.collection.immutable.Set<akka.actor.ActorRef>, akka.actor.dungeon.ChildrenContainer$SuspendReason);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field c:Lscala/collection/immutable/TreeMap;
       5: aload_0
       6: aload_2
       7: putfield      #37                 // Field toDie:Lscala/collection/immutable/Set;
      10: aload_0
      11: aload_3
      12: putfield      #39                 // Field reason:Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      15: aload_0
      16: invokespecial #304                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #310                // Method akka/actor/dungeon/ChildrenContainer$class.$init$:(Lakka/actor/dungeon/ChildrenContainer;)V
      23: aload_0
      24: invokestatic  #315                // Method scala/Product$class.$init$:(Lscala/Product;)V
      27: return
}
