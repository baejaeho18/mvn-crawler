Compiled from "Children.scala"
public abstract class akka.actor.dungeon.Children$class {
  public static akka.actor.dungeon.ChildrenContainer childrenRefs(akka.actor.ActorCell);
    Code:
       0: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #19                 // Field akka/actor/dungeon/AbstractActorCell.childrenOffset:J
       7: invokevirtual #25                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      10: checkcast     #27                 // class akka/actor/dungeon/ChildrenContainer
      13: areturn

  public static final scala.collection.immutable.Iterable children(akka.actor.ActorCell);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: invokeinterface #39,  1           // InterfaceMethod akka/actor/dungeon/ChildrenContainer.children:()Lscala/collection/immutable/Iterable;
       9: areturn

  public static final java.lang.Iterable getChildren(akka.actor.ActorCell);
    Code:
       0: getstatic     #47                 // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
       3: aload_0
       4: invokevirtual #48                 // Method akka/actor/ActorCell.children:()Lscala/collection/immutable/Iterable;
       7: invokevirtual #52                 // Method scala/collection/JavaConverters$.asJavaIterableConverter:(Lscala/collection/Iterable;)Lscala/collection/convert/Decorators$AsJava;
      10: invokevirtual #58                 // Method scala/collection/convert/Decorators$AsJava.asJava:()Ljava/lang/Object;
      13: checkcast     #60                 // class java/lang/Iterable
      16: areturn

  public static final scala.Option child(akka.actor.ActorCell, java.lang.String);
    Code:
       0: getstatic     #67                 // Field scala/Option$.MODULE$:Lscala/Option$;
       3: aload_0
       4: aload_1
       5: invokevirtual #71                 // Method akka/actor/ActorCell.getChild:(Ljava/lang/String;)Lakka/actor/ActorRef;
       8: invokevirtual #75                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      11: areturn

  public static final akka.actor.ActorRef getChild(akka.actor.ActorCell, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: aload_1
       5: invokeinterface #82,  2           // InterfaceMethod akka/actor/dungeon/ChildrenContainer.getByName:(Ljava/lang/String;)Lscala/Option;
      10: astore_2
      11: aload_2
      12: instanceof    #84                 // class scala/Some
      15: ifeq          57
      18: aload_2
      19: checkcast     #84                 // class scala/Some
      22: astore_3
      23: aload_3
      24: invokevirtual #87                 // Method scala/Some.x:()Ljava/lang/Object;
      27: checkcast     #89                 // class akka/actor/ChildStats
      30: astore        4
      32: aload         4
      34: instanceof    #91                 // class akka/actor/ChildRestartStats
      37: ifeq          57
      40: aload         4
      42: checkcast     #91                 // class akka/actor/ChildRestartStats
      45: astore        5
      47: aload         5
      49: invokevirtual #94                 // Method akka/actor/ChildRestartStats.child:()Lakka/actor/ActorRef;
      52: astore        6
      54: goto          60
      57: aconst_null
      58: astore        6
      60: aload         6
      62: areturn

  public static akka.actor.ActorRef actorOf(akka.actor.ActorCell, akka.actor.Props);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_0
       4: invokevirtual #108                // Method akka/actor/ActorCell.randomName:()Ljava/lang/String;
       7: iconst_0
       8: iconst_0
       9: invokestatic  #112                // Method makeChild:(Lakka/actor/ActorCell;Lakka/actor/ActorCell;Lakka/actor/Props;Ljava/lang/String;ZZ)Lakka/actor/ActorRef;
      12: areturn

  public static akka.actor.ActorRef actorOf(akka.actor.ActorCell, akka.actor.Props, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_0
       4: aload_2
       5: invokestatic  #119                // Method checkName:(Lakka/actor/ActorCell;Ljava/lang/String;)Ljava/lang/String;
       8: iconst_0
       9: iconst_0
      10: invokestatic  #112                // Method makeChild:(Lakka/actor/ActorCell;Lakka/actor/ActorCell;Lakka/actor/Props;Ljava/lang/String;ZZ)Lakka/actor/ActorRef;
      13: areturn

  public static akka.actor.ActorRef attachChild(akka.actor.ActorCell, akka.actor.Props, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_0
       4: invokevirtual #108                // Method akka/actor/ActorCell.randomName:()Ljava/lang/String;
       7: iconst_1
       8: iload_2
       9: invokestatic  #112                // Method makeChild:(Lakka/actor/ActorCell;Lakka/actor/ActorCell;Lakka/actor/Props;Ljava/lang/String;ZZ)Lakka/actor/ActorRef;
      12: areturn

  public static akka.actor.ActorRef attachChild(akka.actor.ActorCell, akka.actor.Props, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_0
       4: aload_2
       5: invokestatic  #119                // Method checkName:(Lakka/actor/ActorCell;Ljava/lang/String;)Ljava/lang/String;
       8: iconst_1
       9: iload_3
      10: invokestatic  #112                // Method makeChild:(Lakka/actor/ActorCell;Lakka/actor/ActorCell;Lakka/actor/Props;Ljava/lang/String;ZZ)Lakka/actor/ActorRef;
      13: areturn

  private static scala.collection.immutable.Map functionRefs(akka.actor.ActorCell);
    Code:
       0: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #129                // Field akka/actor/dungeon/AbstractActorCell.functionRefsOffset:J
       7: invokevirtual #25                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      10: checkcast     #131                // class scala/collection/immutable/Map
      13: areturn

  public static akka.actor.InternalActorRef getFunctionRefOrNobody(akka.actor.ActorCell, java.lang.String, int);
    Code:
       0: aload_0
       1: invokestatic  #135                // Method functionRefs:(Lakka/actor/ActorCell;)Lscala/collection/immutable/Map;
       4: aload_1
       5: getstatic     #140                // Field akka/actor/dungeon/Children$.MODULE$:Lakka/actor/dungeon/Children$;
       8: invokevirtual #144                // Method akka/actor/dungeon/Children$.GetNobody:()Lscala/Function0;
      11: invokeinterface #148,  3          // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      16: checkcast     #150                // class akka/actor/MinimalActorRef
      19: astore_3
      20: aload_3
      21: instanceof    #152                // class akka/actor/FunctionRef
      24: ifeq          65
      27: aload_3
      28: checkcast     #152                // class akka/actor/FunctionRef
      31: astore        4
      33: iload_2
      34: iconst_0
      35: if_icmpeq     52
      38: aload         4
      40: invokevirtual #156                // Method akka/actor/FunctionRef.path:()Lakka/actor/ActorPath;
      43: invokeinterface #162,  1          // InterfaceMethod akka/actor/ActorPath.uid:()I
      48: iload_2
      49: if_icmpne     57
      52: aload         4
      54: goto          60
      57: getstatic     #167                // Field akka/actor/Nobody$.MODULE$:Lakka/actor/Nobody$;
      60: astore        5
      62: goto          71
      65: aload_3
      66: checkcast     #169                // class akka/actor/InternalActorRef
      69: astore        5
      71: aload         5
      73: areturn

  public static int getFunctionRefOrNobody$default$2(akka.actor.ActorCell);
    Code:
       0: iconst_0
       1: ireturn

  public static akka.actor.FunctionRef addFunctionRef(akka.actor.ActorCell, scala.Function2);
    Code:
       0: new           #176                // class akka/actor/ChildActorPath
       3: dup
       4: aload_0
       5: invokevirtual #180                // Method akka/actor/ActorCell.self:()Lakka/actor/InternalActorRef;
       8: invokevirtual #181                // Method akka/actor/InternalActorRef.path:()Lakka/actor/ActorPath;
      11: aload_0
      12: new           #183                // class java/lang/StringBuilder
      15: dup
      16: ldc           #185                // String $$
      18: invokespecial #189                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      21: invokevirtual #192                // Method akka/actor/ActorCell.randomName:(Ljava/lang/StringBuilder;)Ljava/lang/String;
      24: getstatic     #197                // Field akka/actor/ActorCell$.MODULE$:Lakka/actor/ActorCell$;
      27: invokevirtual #200                // Method akka/actor/ActorCell$.newUid:()I
      30: invokespecial #203                // Method akka/actor/ChildActorPath."<init>":(Lakka/actor/ActorPath;Ljava/lang/String;I)V
      33: astore_2
      34: new           #152                // class akka/actor/FunctionRef
      37: dup
      38: aload_2
      39: aload_0
      40: invokevirtual #207                // Method akka/actor/ActorCell.provider:()Lakka/actor/ActorRefProvider;
      43: aload_0
      44: invokevirtual #211                // Method akka/actor/ActorCell.system:()Lakka/actor/ActorSystemImpl;
      47: invokevirtual #217                // Method akka/actor/ActorSystemImpl.eventStream:()Lakka/event/EventStream;
      50: aload_1
      51: invokespecial #220                // Method akka/actor/FunctionRef."<init>":(Lakka/actor/ActorPath;Lakka/actor/ActorRefProvider;Lakka/event/EventStream;Lscala/Function2;)V
      54: astore_3
      55: aload_0
      56: aload_2
      57: aload_3
      58: invokestatic  #224                // Method rec$1:(Lakka/actor/ActorCell;Lakka/actor/ChildActorPath;Lakka/actor/FunctionRef;)V
      61: aload_3
      62: areturn

  public static boolean removeFunctionRef(akka.actor.ActorCell, akka.actor.FunctionRef);
    Code:
       0: getstatic     #237                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: invokevirtual #156                // Method akka/actor/FunctionRef.path:()Lakka/actor/ActorPath;
       7: invokeinterface #240,  1          // InterfaceMethod akka/actor/ActorPath.parent:()Lakka/actor/ActorPath;
      12: aload_0
      13: invokevirtual #180                // Method akka/actor/ActorCell.self:()Lakka/actor/InternalActorRef;
      16: invokevirtual #181                // Method akka/actor/InternalActorRef.path:()Lakka/actor/ActorPath;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: new           #242                // class akka/actor/dungeon/Children$$anonfun$removeFunctionRef$1
      30: dup
      31: aload_0
      32: invokespecial #245                // Method akka/actor/dungeon/Children$$anonfun$removeFunctionRef$1."<init>":(Lakka/actor/ActorCell;)V
      35: invokevirtual #249                // Method scala/Predef$.require:(ZLscala/Function0;)V
      38: aload_1
      39: invokevirtual #156                // Method akka/actor/FunctionRef.path:()Lakka/actor/ActorPath;
      42: invokeinterface #251,  1          // InterfaceMethod akka/actor/ActorPath.name:()Ljava/lang/String;
      47: astore_2
      48: aload_0
      49: aload_2
      50: aload_1
      51: invokestatic  #255                // Method rec$2:(Lakka/actor/ActorCell;Ljava/lang/String;Lakka/actor/FunctionRef;)Z
      54: ireturn

  public static void stopFunctionRefs(akka.actor.ActorCell);
    Code:
       0: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #129                // Field akka/actor/dungeon/AbstractActorCell.functionRefsOffset:J
       7: getstatic     #237                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      10: invokevirtual #260                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      13: invokevirtual #266                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
      16: invokevirtual #270                // Method sun/misc/Unsafe.getAndSetObject:(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #131                // class scala/collection/immutable/Map
      22: astore_1
      23: aload_1
      24: invokeinterface #274,  1          // InterfaceMethod scala/collection/immutable/Map.valuesIterator:()Lscala/collection/Iterator;
      29: new           #276                // class akka/actor/dungeon/Children$$anonfun$stopFunctionRefs$1
      32: dup
      33: aload_0
      34: invokespecial #277                // Method akka/actor/dungeon/Children$$anonfun$stopFunctionRefs$1."<init>":(Lakka/actor/ActorCell;)V
      37: invokeinterface #283,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      42: return

  public static final java.lang.String randomName(akka.actor.ActorCell, java.lang.StringBuilder);
    Code:
       0: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #289                // Field akka/actor/dungeon/AbstractActorCell.nextNameOffset:J
       7: lconst_1
       8: invokevirtual #293                // Method sun/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
      11: lstore_2
      12: getstatic     #298                // Field akka/util/Helpers$.MODULE$:Lakka/util/Helpers$;
      15: lload_2
      16: aload_1
      17: invokevirtual #302                // Method akka/util/Helpers$.base64:(JLjava/lang/StringBuilder;)Ljava/lang/String;
      20: areturn

  public static final java.lang.String randomName(akka.actor.ActorCell);
    Code:
       0: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #289                // Field akka/actor/dungeon/AbstractActorCell.nextNameOffset:J
       7: lconst_1
       8: invokevirtual #293                // Method sun/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
      11: lstore_1
      12: getstatic     #298                // Field akka/util/Helpers$.MODULE$:Lakka/util/Helpers$;
      15: lload_1
      16: getstatic     #298                // Field akka/util/Helpers$.MODULE$:Lakka/util/Helpers$;
      19: invokevirtual #310                // Method akka/util/Helpers$.base64$default$2:()Ljava/lang/StringBuilder;
      22: invokevirtual #302                // Method akka/util/Helpers$.base64:(JLjava/lang/StringBuilder;)Ljava/lang/String;
      25: areturn

  public static final void stop(akka.actor.ActorCell, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: aload_1
       5: invokeinterface #316,  2          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.getByRef:(Lakka/actor/ActorRef;)Lscala/Option;
      10: invokevirtual #320                // Method scala/Option.isDefined:()Z
      13: ifeq          66
      16: aload_1
      17: astore_2
      18: aload_2
      19: instanceof    #322                // class akka/actor/RepointableRef
      22: ifeq          41
      25: aload_2
      26: astore_3
      27: aload_3
      28: checkcast     #322                // class akka/actor/RepointableRef
      31: invokeinterface #325,  1          // InterfaceMethod akka/actor/RepointableRef.isStarted:()Z
      36: istore        4
      38: goto          44
      41: iconst_1
      42: istore        4
      44: iload         4
      46: ifeq          60
      49: aload_0
      50: aload_1
      51: invokestatic  #329                // Method shallDie$1:(Lakka/actor/ActorCell;Lakka/actor/ActorRef;)Z
      54: invokestatic  #335                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      57: goto          69
      60: getstatic     #341                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      63: goto          69
      66: getstatic     #341                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      69: pop
      70: aload_1
      71: checkcast     #169                // class akka/actor/InternalActorRef
      74: invokevirtual #344                // Method akka/actor/InternalActorRef.stop:()V
      77: return

  private static final boolean swapChildrenRefs(akka.actor.ActorCell, akka.actor.dungeon.ChildrenContainer, akka.actor.dungeon.ChildrenContainer);
    Code:
       0: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #19                 // Field akka/actor/dungeon/AbstractActorCell.childrenOffset:J
       7: aload_1
       8: aload_2
       9: invokevirtual #352                // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  public static final boolean reserveChild(akka.actor.ActorCell, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_3
       5: aload_0
       6: aload_3
       7: aload_3
       8: aload_1
       9: invokeinterface #361,  2          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.reserve:(Ljava/lang/String;)Lakka/actor/dungeon/ChildrenContainer;
      14: invokestatic  #363                // Method swapChildrenRefs:(Lakka/actor/ActorCell;Lakka/actor/dungeon/ChildrenContainer;Lakka/actor/dungeon/ChildrenContainer;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: aload_1
      24: astore_1
      25: astore_0
      26: goto          0

  public static final boolean unreserveChild(akka.actor.ActorCell, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_3
       5: aload_0
       6: aload_3
       7: aload_3
       8: aload_1
       9: invokeinterface #368,  2          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.unreserve:(Ljava/lang/String;)Lakka/actor/dungeon/ChildrenContainer;
      14: invokestatic  #363                // Method swapChildrenRefs:(Lakka/actor/ActorCell;Lakka/actor/dungeon/ChildrenContainer;Lakka/actor/dungeon/ChildrenContainer;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: aload_1
      24: astore_1
      25: astore_0
      26: goto          0

  public static final scala.Option initChild(akka.actor.ActorCell, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: aconst_null
       9: astore        5
      11: aload_3
      12: aload_1
      13: invokevirtual #371                // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
      16: invokeinterface #251,  1          // InterfaceMethod akka/actor/ActorPath.name:()Ljava/lang/String;
      21: invokeinterface #82,  2           // InterfaceMethod akka/actor/dungeon/ChildrenContainer.getByName:(Ljava/lang/String;)Lscala/Option;
      26: astore        6
      28: aload         6
      30: instanceof    #84                 // class scala/Some
      33: ifeq          64
      36: iconst_1
      37: istore        4
      39: aload         6
      41: checkcast     #84                 // class scala/Some
      44: astore        5
      46: aload         5
      48: invokevirtual #87                 // Method scala/Some.x:()Ljava/lang/Object;
      51: instanceof    #91                 // class akka/actor/ChildRestartStats
      54: ifeq          64
      57: aload         5
      59: astore        7
      61: goto          178
      64: iload         4
      66: ifeq          162
      69: aload         5
      71: invokevirtual #87                 // Method scala/Some.x:()Ljava/lang/Object;
      74: checkcast     #89                 // class akka/actor/ChildStats
      77: astore        8
      79: getstatic     #376                // Field akka/actor/ChildNameReserved$.MODULE$:Lakka/actor/ChildNameReserved$;
      82: aload         8
      84: invokevirtual #380                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          162
      90: new           #91                 // class akka/actor/ChildRestartStats
      93: dup
      94: aload_1
      95: getstatic     #385                // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
      98: invokevirtual #388                // Method akka/actor/ChildRestartStats$.apply$default$2:()I
     101: getstatic     #385                // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
     104: invokevirtual #392                // Method akka/actor/ChildRestartStats$.apply$default$3:()J
     107: invokespecial #395                // Method akka/actor/ChildRestartStats."<init>":(Lakka/actor/ActorRef;IJ)V
     110: astore        9
     112: aload_1
     113: invokevirtual #371                // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
     116: invokeinterface #251,  1          // InterfaceMethod akka/actor/ActorPath.name:()Ljava/lang/String;
     121: astore        10
     123: aload_0
     124: aload_3
     125: aload_3
     126: aload         10
     128: aload         9
     130: invokeinterface #399,  3          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.add:(Ljava/lang/String;Lakka/actor/ChildRestartStats;)Lakka/actor/dungeon/ChildrenContainer;
     135: invokestatic  #363                // Method swapChildrenRefs:(Lakka/actor/ActorCell;Lakka/actor/dungeon/ChildrenContainer;Lakka/actor/dungeon/ChildrenContainer;)Z
     138: ifeq          155
     141: new           #84                 // class scala/Some
     144: dup
     145: aload         9
     147: invokespecial #402                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     150: astore        7
     152: goto          178
     155: aload_0
     156: aload_1
     157: astore_1
     158: astore_0
     159: goto          0
     162: getstatic     #407                // Field scala/None$.MODULE$:Lscala/None$;
     165: aload         6
     167: invokevirtual #380                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     170: ifeq          181
     173: getstatic     #407                // Field scala/None$.MODULE$:Lscala/None$;
     176: astore        7
     178: aload         7
     180: areturn
     181: new           #409                // class scala/MatchError
     184: dup
     185: aload         6
     187: invokespecial #410                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     190: athrow

  public static final boolean setChildrenTerminationReason(akka.actor.ActorCell, akka.actor.dungeon.ChildrenContainer$SuspendReason);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_3
       5: aload_3
       6: instanceof    #417                // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
       9: ifeq          68
      12: aload_3
      13: checkcast     #417                // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
      16: astore        4
      18: aload_0
      19: aload         4
      21: aload_1
      22: astore        6
      24: aload         4
      26: invokevirtual #421                // Method akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer.copy$default$1:()Lscala/collection/immutable/TreeMap;
      29: astore        7
      31: aload         4
      33: invokevirtual #425                // Method akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer.copy$default$2:()Lscala/collection/immutable/Set;
      36: astore        8
      38: aload         4
      40: aload         7
      42: aload         8
      44: aload         6
      46: invokevirtual #429                // Method akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer.copy:(Lscala/collection/immutable/TreeMap;Lscala/collection/immutable/Set;Lakka/actor/dungeon/ChildrenContainer$SuspendReason;)Lakka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer;
      49: invokestatic  #363                // Method swapChildrenRefs:(Lakka/actor/ActorCell;Lakka/actor/dungeon/ChildrenContainer;Lakka/actor/dungeon/ChildrenContainer;)Z
      52: ifeq          61
      55: iconst_1
      56: istore        5
      58: goto          71
      61: aload_0
      62: aload_1
      63: astore_1
      64: astore_0
      65: goto          0
      68: iconst_0
      69: istore        5
      71: iload         5
      73: ireturn

  public static final void setTerminated(akka.actor.ActorCell);
    Code:
       0: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #19                 // Field akka/actor/dungeon/AbstractActorCell.childrenOffset:J
       7: getstatic     #448                // Field akka/actor/dungeon/ChildrenContainer$TerminatedChildrenContainer$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$TerminatedChildrenContainer$;
      10: invokevirtual #452                // Method sun/misc/Unsafe.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
      13: return

  public static boolean isNormal(akka.actor.ActorCell);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: invokeinterface #456,  1          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.isNormal:()Z
       9: ireturn

  public static boolean isTerminating(akka.actor.ActorCell);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: invokeinterface #459,  1          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.isTerminating:()Z
       9: ireturn

  public static akka.actor.dungeon.ChildrenContainer$SuspendReason waitingForChildrenOrNull(akka.actor.ActorCell);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_1
       5: aload_1
       6: instanceof    #417                // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
       9: ifeq          39
      12: aload_1
      13: checkcast     #417                // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
      16: astore_2
      17: aload_2
      18: invokevirtual #464                // Method akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer.reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      21: astore_3
      22: aload_3
      23: instanceof    #466                // class akka/actor/dungeon/ChildrenContainer$WaitingForChildren
      26: ifeq          39
      29: aload_3
      30: astore        4
      32: aload         4
      34: astore        5
      36: goto          42
      39: aconst_null
      40: astore        5
      42: aload         5
      44: areturn

  public static void suspendChildren(akka.actor.ActorCell, scala.collection.immutable.Set);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: invokeinterface #472,  1          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.stats:()Lscala/collection/immutable/Iterable;
       9: new           #474                // class akka/actor/dungeon/Children$$anonfun$suspendChildren$1
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #476                // Method akka/actor/dungeon/Children$$anonfun$suspendChildren$1."<init>":(Lakka/actor/ActorCell;Lscala/collection/immutable/Set;)V
      18: invokeinterface #479,  2          // InterfaceMethod scala/collection/immutable/Iterable.foreach:(Lscala/Function1;)V
      23: return

  public static scala.collection.immutable.Set suspendChildren$default$1(akka.actor.ActorCell);
    Code:
       0: getstatic     #237                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #486                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       6: invokevirtual #490                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
       9: areturn

  public static void resumeChildren(akka.actor.ActorCell, java.lang.Throwable, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: invokeinterface #472,  1          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.stats:()Lscala/collection/immutable/Iterable;
       9: new           #494                // class akka/actor/dungeon/Children$$anonfun$resumeChildren$1
      12: dup
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokespecial #496                // Method akka/actor/dungeon/Children$$anonfun$resumeChildren$1."<init>":(Lakka/actor/ActorCell;Ljava/lang/Throwable;Lakka/actor/ActorRef;)V
      19: invokeinterface #479,  2          // InterfaceMethod scala/collection/immutable/Iterable.foreach:(Lscala/Function1;)V
      24: return

  public static scala.Option getChildByName(akka.actor.ActorCell, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: aload_1
       5: invokeinterface #82,  2           // InterfaceMethod akka/actor/dungeon/ChildrenContainer.getByName:(Ljava/lang/String;)Lscala/Option;
      10: areturn

  public static scala.Option getChildByRef(akka.actor.ActorCell, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: aload_1
       5: invokeinterface #316,  2          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.getByRef:(Lakka/actor/ActorRef;)Lscala/Option;
      10: areturn

  public static scala.collection.immutable.Iterable getAllChildStats(akka.actor.ActorCell);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: invokeinterface #472,  1          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.stats:()Lscala/collection/immutable/Iterable;
       9: areturn

  public static akka.actor.InternalActorRef getSingleChild(akka.actor.ActorCell, java.lang.String);
    Code:
       0: aload_1
       1: bipush        35
       3: invokevirtual #508                // Method java/lang/String.indexOf:(I)I
       6: iconst_m1
       7: if_icmpne     81
      10: aload_0
      11: aload_1
      12: invokevirtual #510                // Method akka/actor/ActorCell.getChildByName:(Ljava/lang/String;)Lscala/Option;
      15: astore_2
      16: aload_2
      17: instanceof    #84                 // class scala/Some
      20: ifeq          65
      23: aload_2
      24: checkcast     #84                 // class scala/Some
      27: astore_3
      28: aload_3
      29: invokevirtual #87                 // Method scala/Some.x:()Ljava/lang/Object;
      32: checkcast     #89                 // class akka/actor/ChildStats
      35: astore        4
      37: aload         4
      39: instanceof    #91                 // class akka/actor/ChildRestartStats
      42: ifeq          65
      45: aload         4
      47: checkcast     #91                 // class akka/actor/ChildRestartStats
      50: astore        5
      52: aload         5
      54: invokevirtual #94                 // Method akka/actor/ChildRestartStats.child:()Lakka/actor/ActorRef;
      57: checkcast     #169                // class akka/actor/InternalActorRef
      60: astore        6
      62: goto          76
      65: aload_0
      66: aload_1
      67: aload_0
      68: invokevirtual #512                // Method akka/actor/ActorCell.getFunctionRefOrNobody$default$2:()I
      71: invokevirtual #515                // Method akka/actor/ActorCell.getFunctionRefOrNobody:(Ljava/lang/String;I)Lakka/actor/InternalActorRef;
      74: astore        6
      76: aload         6
      78: goto          238
      81: getstatic     #197                // Field akka/actor/ActorCell$.MODULE$:Lakka/actor/ActorCell$;
      84: aload_1
      85: invokevirtual #519                // Method akka/actor/ActorCell$.splitNameAndUid:(Ljava/lang/String;)Lscala/Tuple2;
      88: astore        8
      90: aload         8
      92: ifnull        239
      95: aload         8
      97: invokevirtual #524                // Method scala/Tuple2._1:()Ljava/lang/Object;
     100: checkcast     #100                // class java/lang/String
     103: astore        9
     105: aload         8
     107: invokevirtual #527                // Method scala/Tuple2._2$mcI$sp:()I
     110: istore        10
     112: new           #521                // class scala/Tuple2
     115: dup
     116: aload         9
     118: iload         10
     120: invokestatic  #531                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     123: invokespecial #534                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     126: astore        11
     128: aload         11
     130: astore        7
     132: aload         7
     134: invokevirtual #524                // Method scala/Tuple2._1:()Ljava/lang/Object;
     137: checkcast     #100                // class java/lang/String
     140: astore        12
     142: aload         7
     144: invokevirtual #527                // Method scala/Tuple2._2$mcI$sp:()I
     147: istore        13
     149: aload_0
     150: aload         12
     152: invokevirtual #510                // Method akka/actor/ActorCell.getChildByName:(Ljava/lang/String;)Lscala/Option;
     155: astore        14
     157: aload         14
     159: instanceof    #84                 // class scala/Some
     162: ifeq          226
     165: aload         14
     167: checkcast     #84                 // class scala/Some
     170: astore        15
     172: aload         15
     174: invokevirtual #87                 // Method scala/Some.x:()Ljava/lang/Object;
     177: checkcast     #89                 // class akka/actor/ChildStats
     180: astore        16
     182: aload         16
     184: instanceof    #91                 // class akka/actor/ChildRestartStats
     187: ifeq          226
     190: aload         16
     192: checkcast     #91                 // class akka/actor/ChildRestartStats
     195: astore        17
     197: iload         13
     199: iconst_0
     200: if_icmpeq     213
     203: iload         13
     205: aload         17
     207: invokevirtual #535                // Method akka/actor/ChildRestartStats.uid:()I
     210: if_icmpne     226
     213: aload         17
     215: invokevirtual #94                 // Method akka/actor/ChildRestartStats.child:()Lakka/actor/ActorRef;
     218: checkcast     #169                // class akka/actor/InternalActorRef
     221: astore        18
     223: goto          236
     226: aload_0
     227: aload         12
     229: iload         13
     231: invokevirtual #515                // Method akka/actor/ActorCell.getFunctionRefOrNobody:(Ljava/lang/String;I)Lakka/actor/InternalActorRef;
     234: astore        18
     236: aload         18
     238: areturn
     239: new           #409                // class scala/MatchError
     242: dup
     243: aload         8
     245: invokespecial #410                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     248: athrow

  public static scala.Option removeChildAndGetStateChange(akka.actor.ActorCell, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_2
       5: aload_2
       6: instanceof    #417                // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
       9: ifeq          64
      12: aload_2
      13: checkcast     #417                // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
      16: astore_3
      17: aload_3
      18: invokevirtual #464                // Method akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer.reason:()Lakka/actor/dungeon/ChildrenContainer$SuspendReason;
      21: astore        4
      23: aload_0
      24: aload_1
      25: invokestatic  #541                // Method removeChild$1:(Lakka/actor/ActorCell;Lakka/actor/ActorRef;)Lakka/actor/dungeon/ChildrenContainer;
      28: astore        6
      30: aload         6
      32: instanceof    #417                // class akka/actor/dungeon/ChildrenContainer$TerminatingChildrenContainer
      35: ifeq          46
      38: getstatic     #407                // Field scala/None$.MODULE$:Lscala/None$;
      41: astore        7
      43: goto          57
      46: new           #84                 // class scala/Some
      49: dup
      50: aload         4
      52: invokespecial #402                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      55: astore        7
      57: aload         7
      59: astore        5
      61: goto          75
      64: aload_0
      65: aload_1
      66: invokestatic  #541                // Method removeChild$1:(Lakka/actor/ActorCell;Lakka/actor/ActorRef;)Lakka/actor/dungeon/ChildrenContainer;
      69: pop
      70: getstatic     #407                // Field scala/None$.MODULE$:Lscala/None$;
      73: astore        5
      75: aload         5
      77: areturn

  private static java.lang.String checkName(akka.actor.ActorCell, java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnonnull     17
       6: new           #543                // class akka/actor/InvalidActorNameException
       9: dup
      10: ldc_w         #545                // String actor name must not be null
      13: invokespecial #546                // Method akka/actor/InvalidActorNameException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc_w         #548                // String
      20: aload_2
      21: invokevirtual #380                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          38
      27: new           #543                // class akka/actor/InvalidActorNameException
      30: dup
      31: ldc_w         #550                // String actor name must not be empty
      34: invokespecial #546                // Method akka/actor/InvalidActorNameException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: getstatic     #555                // Field akka/actor/ActorPath$.MODULE$:Lakka/actor/ActorPath$;
      41: aload_1
      42: invokevirtual #558                // Method akka/actor/ActorPath$.validatePathElement:(Ljava/lang/String;)V
      45: aload_1
      46: astore_3
      47: aload_3
      48: areturn

  private static akka.actor.ActorRef makeChild(akka.actor.ActorCell, akka.actor.ActorCell, akka.actor.Props, java.lang.String, boolean, boolean);
    Code:
       0: aload_1
       1: invokevirtual #211                // Method akka/actor/ActorCell.system:()Lakka/actor/ActorSystemImpl;
       4: invokevirtual #562                // Method akka/actor/ActorSystemImpl.settings:()Lakka/actor/ActorSystem$Settings;
       7: invokevirtual #567                // Method akka/actor/ActorSystem$Settings.SerializeAllCreators:()Z
      10: ifeq          91
      13: iload         5
      15: ifne          91
      18: aload_2
      19: invokevirtual #573                // Method akka/actor/Props.deploy:()Lakka/actor/Deploy;
      22: invokevirtual #579                // Method akka/actor/Deploy.scope:()Lakka/actor/Scope;
      25: getstatic     #584                // Field akka/actor/LocalScope$.MODULE$:Lakka/actor/LocalScope$;
      28: astore        6
      30: dup
      31: ifnonnull     43
      34: pop
      35: aload         6
      37: ifnull        91
      40: goto          51
      43: aload         6
      45: invokevirtual #380                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifne          91
      51: getstatic     #589                // Field akka/serialization/SerializationExtension$.MODULE$:Lakka/serialization/SerializationExtension$;
      54: aload_1
      55: invokevirtual #211                // Method akka/actor/ActorCell.system:()Lakka/actor/ActorSystemImpl;
      58: invokevirtual #592                // Method akka/serialization/SerializationExtension$.apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      61: checkcast     #594                // class akka/serialization/Serialization
      64: astore        12
      66: aload_2
      67: invokevirtual #598                // Method akka/actor/Props.args:()Lscala/collection/immutable/Seq;
      70: new           #600                // class akka/actor/dungeon/Children$$anonfun$makeChild$2
      73: dup
      74: aload_0
      75: aload         12
      77: invokespecial #603                // Method akka/actor/dungeon/Children$$anonfun$makeChild$2."<init>":(Lakka/actor/ActorCell;Lakka/serialization/Serialization;)V
      80: invokeinterface #609,  2          // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
      85: invokestatic  #335                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      88: goto          94
      91: getstatic     #341                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      94: pop
      95: aload_1
      96: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
      99: invokeinterface #459,  1          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.isTerminating:()Z
     104: ifeq          118
     107: new           #611                // class java/lang/IllegalStateException
     110: dup
     111: ldc_w         #613                // String cannot create children while terminating or terminated
     114: invokespecial #614                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aload_0
     119: aload_3
     120: invokevirtual #617                // Method akka/actor/ActorCell.reserveChild:(Ljava/lang/String;)Z
     123: pop
     124: new           #176                // class akka/actor/ChildActorPath
     127: dup
     128: aload_1
     129: invokevirtual #180                // Method akka/actor/ActorCell.self:()Lakka/actor/InternalActorRef;
     132: invokevirtual #181                // Method akka/actor/InternalActorRef.path:()Lakka/actor/ActorPath;
     135: aload_3
     136: getstatic     #197                // Field akka/actor/ActorCell$.MODULE$:Lakka/actor/ActorCell$;
     139: invokevirtual #200                // Method akka/actor/ActorCell$.newUid:()I
     142: invokespecial #203                // Method akka/actor/ChildActorPath."<init>":(Lakka/actor/ActorPath;Ljava/lang/String;I)V
     145: astore        20
     147: aload_1
     148: invokevirtual #207                // Method akka/actor/ActorCell.provider:()Lakka/actor/ActorRefProvider;
     151: aload_1
     152: invokevirtual #620                // Method akka/actor/ActorCell.systemImpl:()Lakka/actor/ActorSystemImpl;
     155: aload_2
     156: aload_1
     157: invokevirtual #180                // Method akka/actor/ActorCell.self:()Lakka/actor/InternalActorRef;
     160: aload         20
     162: iload         5
     164: getstatic     #407                // Field scala/None$.MODULE$:Lscala/None$;
     167: iconst_1
     168: iload         4
     170: invokeinterface #625,  9          // InterfaceMethod akka/actor/ActorRefProvider.actorOf:(Lakka/actor/ActorSystemImpl;Lakka/actor/Props;Lakka/actor/InternalActorRef;Lakka/actor/ActorPath;ZLscala/Option;ZZ)Lakka/actor/InternalActorRef;
     175: astore        13
     177: aload_0
     178: invokevirtual #629                // Method akka/actor/ActorCell.mailbox:()Lakka/dispatch/Mailbox;
     181: ifnull        217
     184: getstatic     #634                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     187: getstatic     #237                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     190: iconst_1
     191: invokevirtual #637                // Method scala/Predef$.intWrapper:(I)I
     194: aload_0
     195: invokevirtual #629                // Method akka/actor/ActorCell.mailbox:()Lakka/dispatch/Mailbox;
     198: invokevirtual #642                // Method akka/dispatch/Mailbox.suspendCount:()I
     201: invokevirtual #646                // Method scala/runtime/RichInt$.to$extension0:(II)Lscala/collection/immutable/Range$Inclusive;
     204: new           #648                // class akka/actor/dungeon/Children$$anonfun$makeChild$1
     207: dup
     208: aload_0
     209: aload         13
     211: invokespecial #651                // Method akka/actor/dungeon/Children$$anonfun$makeChild$1."<init>":(Lakka/actor/ActorCell;Lakka/actor/InternalActorRef;)V
     214: invokevirtual #656                // Method scala/collection/immutable/Range$Inclusive.foreach$mVc$sp:(Lscala/Function1;)V
     217: aload_0
     218: aload         13
     220: invokevirtual #658                // Method akka/actor/ActorCell.initChild:(Lakka/actor/ActorRef;)Lscala/Option;
     223: pop
     224: aload         13
     226: invokevirtual #661                // Method akka/actor/InternalActorRef.start:()V
     229: aload         13
     231: areturn
     232: astore        7
     234: aload         7
     236: astore        8
     238: getstatic     #666                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     241: aload         8
     243: invokevirtual #670                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     246: astore        9
     248: aload         9
     250: invokevirtual #673                // Method scala/Option.isEmpty:()Z
     253: ifeq          259
     256: aload         7
     258: athrow
     259: aload         9
     261: invokevirtual #676                // Method scala/Option.get:()Ljava/lang/Object;
     264: checkcast     #678                // class java/lang/Throwable
     267: astore        10
     269: new           #680                // class java/lang/IllegalArgumentException
     272: dup
     273: new           #682                // class scala/StringContext
     276: dup
     277: getstatic     #237                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     280: iconst_3
     281: anewarray     #100                // class java/lang/String
     284: dup
     285: iconst_0
     286: ldc_w         #684                // String pre-creation serialization check failed at [
     289: aastore
     290: dup
     291: iconst_1
     292: ldc_w         #686                // String /
     295: aastore
     296: dup
     297: iconst_2
     298: ldc_w         #688                // String ]
     301: aastore
     302: checkcast     #690                // class "[Ljava/lang/Object;"
     305: invokevirtual #694                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     308: invokespecial #697                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     311: getstatic     #237                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     314: iconst_2
     315: anewarray     #4                  // class java/lang/Object
     318: dup
     319: iconst_0
     320: aload_1
     321: invokevirtual #180                // Method akka/actor/ActorCell.self:()Lakka/actor/InternalActorRef;
     324: invokevirtual #181                // Method akka/actor/InternalActorRef.path:()Lakka/actor/ActorPath;
     327: aastore
     328: dup
     329: iconst_1
     330: aload_3
     331: aastore
     332: invokevirtual #701                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     335: invokevirtual #704                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     338: aload         10
     340: invokespecial #707                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     343: athrow
     344: astore        14
     346: aload         14
     348: astore        15
     350: aload         15
     352: instanceof    #709                // class java/lang/InterruptedException
     355: ifeq          378
     358: aload         15
     360: checkcast     #709                // class java/lang/InterruptedException
     363: astore        16
     365: aload_0
     366: aload_3
     367: invokevirtual #711                // Method akka/actor/ActorCell.unreserveChild:(Ljava/lang/String;)Z
     370: pop
     371: invokestatic  #716                // Method java/lang/Thread.interrupted:()Z
     374: pop
     375: aload         16
     377: athrow
     378: getstatic     #666                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     381: aload         15
     383: invokevirtual #670                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     386: astore        18
     388: aload         18
     390: invokevirtual #673                // Method scala/Option.isEmpty:()Z
     393: ifeq          399
     396: aload         14
     398: athrow
     399: aload         18
     401: invokevirtual #676                // Method scala/Option.get:()Ljava/lang/Object;
     404: checkcast     #678                // class java/lang/Throwable
     407: astore        19
     409: aload_0
     410: aload_3
     411: invokevirtual #711                // Method akka/actor/ActorCell.unreserveChild:(Ljava/lang/String;)Z
     414: pop
     415: aload         19
     417: athrow
    Exception table:
       from    to  target type
         124   175   344   any
          51    85   232   any

  private static final void rec$1(akka.actor.ActorCell, akka.actor.ChildActorPath, akka.actor.FunctionRef);
    Code:
       0: aload_0
       1: invokestatic  #135                // Method functionRefs:(Lakka/actor/ActorCell;)Lscala/collection/immutable/Map;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #725                // Method akka/actor/ChildActorPath.name:()Ljava/lang/String;
      12: aload_2
      13: invokeinterface #729,  3          // InterfaceMethod scala/collection/immutable/Map.updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/Map;
      18: astore        5
      20: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
      23: aload_0
      24: getstatic     #129                // Field akka/actor/dungeon/AbstractActorCell.functionRefsOffset:J
      27: aload         4
      29: aload         5
      31: invokevirtual #352                // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      34: ifeq          42
      37: getstatic     #341                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      40: pop
      41: return
      42: aload_0
      43: astore_0
      44: goto          0

  private static final boolean rec$2(akka.actor.ActorCell, java.lang.String, akka.actor.FunctionRef);
    Code:
       0: aload_0
       1: invokestatic  #135                // Method functionRefs:(Lakka/actor/ActorCell;)Lscala/collection/immutable/Map;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokeinterface #736,  2          // InterfaceMethod scala/collection/immutable/Map.contains:(Ljava/lang/Object;)Z
      14: ifeq          60
      17: aload         4
      19: aload_1
      20: invokeinterface #740,  2          // InterfaceMethod scala/collection/immutable/Map.$minus:(Ljava/lang/Object;)Lscala/collection/Map;
      25: checkcast     #131                // class scala/collection/immutable/Map
      28: astore        5
      30: getstatic     #13                 // Field akka/util/Unsafe.instance:Lsun/misc/Unsafe;
      33: aload_0
      34: getstatic     #129                // Field akka/actor/dungeon/AbstractActorCell.functionRefsOffset:J
      37: aload         4
      39: aload         5
      41: invokevirtual #352                // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      44: ifeq          55
      47: aload_2
      48: invokevirtual #741                // Method akka/actor/FunctionRef.stop:()V
      51: iconst_1
      52: goto          61
      55: aload_0
      56: astore_0
      57: goto          0
      60: iconst_0
      61: ireturn

  private static final boolean shallDie$1(akka.actor.ActorCell, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_3
       5: aload_0
       6: aload_3
       7: aload_3
       8: aload_1
       9: invokeinterface #748,  2          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.shallDie:(Lakka/actor/ActorRef;)Lakka/actor/dungeon/ChildrenContainer;
      14: invokestatic  #363                // Method swapChildrenRefs:(Lakka/actor/ActorCell;Lakka/actor/dungeon/ChildrenContainer;Lakka/actor/dungeon/ChildrenContainer;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: aload_1
      24: astore_1
      25: astore_0
      26: goto          0

  private static final akka.actor.dungeon.ChildrenContainer removeChild$1(akka.actor.ActorCell, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method akka/actor/ActorCell.childrenRefs:()Lakka/actor/dungeon/ChildrenContainer;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokeinterface #751,  2          // InterfaceMethod akka/actor/dungeon/ChildrenContainer.remove:(Lakka/actor/ActorRef;)Lakka/actor/dungeon/ChildrenContainer;
      12: astore        4
      14: aload_0
      15: aload_3
      16: aload         4
      18: invokestatic  #363                // Method swapChildrenRefs:(Lakka/actor/ActorCell;Lakka/actor/dungeon/ChildrenContainer;Lakka/actor/dungeon/ChildrenContainer;)Z
      21: ifeq          27
      24: aload         4
      26: areturn
      27: aload_0
      28: aload_1
      29: astore_1
      30: astore_0
      31: goto          0

  public static void $init$(akka.actor.ActorCell);
    Code:
       0: aload_0
       1: getstatic     #758                // Field akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$.MODULE$:Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$;
       4: invokevirtual #762                // Method akka/actor/ActorCell.akka$actor$dungeon$Children$$_childrenRefsDoNotCallMeDirectly_$eq:(Lakka/actor/dungeon/ChildrenContainer;)V
       7: aload_0
       8: getstatic     #237                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: invokevirtual #260                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      14: invokevirtual #266                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
      17: invokevirtual #766                // Method akka/actor/ActorCell.akka$actor$dungeon$Children$$_functionRefsDoNotCallMeDirectly_$eq:(Lscala/collection/immutable/Map;)V
      20: aload_0
      21: lconst_0
      22: invokevirtual #770                // Method akka/actor/ActorCell.akka$actor$dungeon$Children$$_nextNameDoNotCallMeDirectly_$eq:(J)V
      25: return
}
