Compiled from "FaultHandling.scala"
public final class akka.actor.dungeon.FaultHandling$$anonfun$1 extends scala.runtime.AbstractFunction1<java.lang.Throwable, scala.runtime.BoxedUnit> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.actor.ActorCell $outer;

  private final akka.actor.Actor failedActor$1;

  private final scala.Option optionalMessage$1;

  private final java.lang.Throwable cause$2;

  public final void apply(java.lang.Throwable);
    Code:
       0: new           #28                 // class akka/actor/PreRestartException
       3: dup
       4: aload_0
       5: getfield      #30                 // Field $outer:Lakka/actor/ActorCell;
       8: invokevirtual #36                 // Method akka/actor/ActorCell.self:()Lakka/actor/InternalActorRef;
      11: aload_1
      12: aload_0
      13: getfield      #38                 // Field cause$2:Ljava/lang/Throwable;
      16: aload_0
      17: getfield      #40                 // Field optionalMessage$1:Lscala/Option;
      20: invokespecial #44                 // Method akka/actor/PreRestartException."<init>":(Lakka/actor/ActorRef;Ljava/lang/Throwable;Ljava/lang/Throwable;Lscala/Option;)V
      23: astore_2
      24: aload_0
      25: getfield      #30                 // Field $outer:Lakka/actor/ActorCell;
      28: new           #46                 // class akka/event/Logging$Error
      31: dup
      32: aload_2
      33: aload_0
      34: getfield      #30                 // Field $outer:Lakka/actor/ActorCell;
      37: invokevirtual #36                 // Method akka/actor/ActorCell.self:()Lakka/actor/InternalActorRef;
      40: invokevirtual #52                 // Method akka/actor/InternalActorRef.path:()Lakka/actor/ActorPath;
      43: invokevirtual #58                 // Method java/lang/Object.toString:()Ljava/lang/String;
      46: aload_0
      47: getfield      #30                 // Field $outer:Lakka/actor/ActorCell;
      50: aload_0
      51: getfield      #60                 // Field failedActor$1:Lakka/actor/Actor;
      54: invokevirtual #64                 // Method akka/actor/ActorCell.clazz:(Ljava/lang/Object;)Ljava/lang/Class;
      57: aload_1
      58: invokevirtual #69                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      61: invokespecial #72                 // Method akka/event/Logging$Error."<init>":(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      64: invokevirtual #76                 // Method akka/actor/ActorCell.publish:(Lakka/event/Logging$LogEvent;)V
      67: return

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #66                 // class java/lang/Throwable
       5: invokevirtual #84                 // Method apply:(Ljava/lang/Throwable;)V
       8: getstatic     #90                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      11: areturn

  public akka.actor.dungeon.FaultHandling$$anonfun$1(akka.actor.ActorCell, akka.actor.Actor, scala.Option, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #30                 // Field $outer:Lakka/actor/ActorCell;
      11: aload_0
      12: aload_2
      13: putfield      #60                 // Field failedActor$1:Lakka/actor/Actor;
      16: aload_0
      17: aload_3
      18: putfield      #40                 // Field optionalMessage$1:Lscala/Option;
      21: aload_0
      22: aload         4
      24: putfield      #38                 // Field cause$2:Ljava/lang/Throwable;
      27: aload_0
      28: invokespecial #96                 // Method scala/runtime/AbstractFunction1."<init>":()V
      31: return
}
