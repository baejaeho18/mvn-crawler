Compiled from "ChildrenContainer.scala"
public class akka.actor.dungeon.ChildrenContainer$EmptyChildrenContainer$ implements akka.actor.dungeon.ChildrenContainer$EmptyChildrenContainer {
  public static final akka.actor.dungeon.ChildrenContainer$EmptyChildrenContainer$ MODULE$;

  private final scala.collection.immutable.TreeMap<java.lang.String, akka.actor.ChildStats> emptyStats;

  public static {};
    Code:
       0: new           #2                  // class akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public scala.collection.immutable.TreeMap<java.lang.String, akka.actor.ChildStats> emptyStats();
    Code:
       0: aload_0
       1: getfield      #20                 // Field emptyStats:Lscala/collection/immutable/TreeMap;
       4: areturn

  public void akka$actor$dungeon$ChildrenContainer$EmptyChildrenContainer$_setter_$emptyStats_$eq(scala.collection.immutable.TreeMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field emptyStats:Lscala/collection/immutable/TreeMap;
       5: return

  public akka.actor.dungeon.ChildrenContainer add(java.lang.String, akka.actor.ChildRestartStats);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #31                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.add:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;Ljava/lang/String;Lakka/actor/ChildRestartStats;)Lakka/actor/dungeon/ChildrenContainer;
       6: areturn

  public akka.actor.dungeon.ChildrenContainer remove(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.remove:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;Lakka/actor/ActorRef;)Lakka/actor/dungeon/ChildrenContainer;
       5: areturn

  public scala.Option<akka.actor.ChildRestartStats> getByName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.getByName:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;Ljava/lang/String;)Lscala/Option;
       5: areturn

  public scala.Option<akka.actor.ChildRestartStats> getByRef(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.getByRef:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;Lakka/actor/ActorRef;)Lscala/Option;
       5: areturn

  public scala.collection.immutable.Iterable<akka.actor.ActorRef> children();
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.children:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;)Lscala/collection/immutable/Iterable;
       4: areturn

  public scala.collection.immutable.Iterable<akka.actor.ChildRestartStats> stats();
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.stats:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;)Lscala/collection/immutable/Iterable;
       4: areturn

  public akka.actor.dungeon.ChildrenContainer shallDie(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.shallDie:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;Lakka/actor/ActorRef;)Lakka/actor/dungeon/ChildrenContainer;
       5: areturn

  public akka.actor.dungeon.ChildrenContainer reserve(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.reserve:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;Ljava/lang/String;)Lakka/actor/dungeon/ChildrenContainer;
       5: areturn

  public akka.actor.dungeon.ChildrenContainer unreserve(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.unreserve:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;Ljava/lang/String;)Lakka/actor/dungeon/ChildrenContainer;
       5: areturn

  public boolean isTerminating();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method akka/actor/dungeon/ChildrenContainer$class.isTerminating:(Lakka/actor/dungeon/ChildrenContainer;)Z
       4: ireturn

  public boolean isNormal();
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method akka/actor/dungeon/ChildrenContainer$class.isNormal:(Lakka/actor/dungeon/ChildrenContainer;)Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #85                 // String no children
       2: areturn

  public akka.actor.dungeon.ChildrenContainer$EmptyChildrenContainer$();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #88                 // Field MODULE$:Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$;
       8: aload_0
       9: invokestatic  #92                 // Method akka/actor/dungeon/ChildrenContainer$class.$init$:(Lakka/actor/dungeon/ChildrenContainer;)V
      12: aload_0
      13: invokestatic  #95                 // Method akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$class.$init$:(Lakka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer;)V
      16: return
}
