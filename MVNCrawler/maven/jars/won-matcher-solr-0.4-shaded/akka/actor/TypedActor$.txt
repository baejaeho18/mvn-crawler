Compiled from "TypedActor.scala"
public final class akka.actor.TypedActor$ implements akka.actor.ExtensionId<akka.actor.TypedActorExtension>, akka.actor.ExtensionIdProvider {
  public static final akka.actor.TypedActor$ MODULE$;

  private final java.lang.ThreadLocal<java.lang.Object> akka$actor$TypedActor$$selfReference;

  private final java.lang.ThreadLocal<akka.actor.ActorContext> akka$actor$TypedActor$$currentContext;

  public static {};
    Code:
       0: new           #2                  // class akka/actor/TypedActor$
       3: invokespecial #17                 // Method "<init>":()V
       6: return

  public akka.actor.Extension apply(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method akka/actor/ExtensionId$class.apply:(Lakka/actor/ExtensionId;Lakka/actor/ActorSystem;)Lakka/actor/Extension;
       5: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method akka/actor/ExtensionId$class.hashCode:(Lakka/actor/ExtensionId;)I
       4: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method akka/actor/ExtensionId$class.equals:(Lakka/actor/ExtensionId;Ljava/lang/Object;)Z
       5: ireturn

  public akka.actor.TypedActorExtension get(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method akka/actor/ExtensionId$class.get:(Lakka/actor/ExtensionId;Lakka/actor/ActorSystem;)Lakka/actor/Extension;
       5: checkcast     #50                 // class akka/actor/TypedActorExtension
       8: areturn

  public akka.actor.TypedActor$ lookup();
    Code:
       0: aload_0
       1: areturn

  public akka.actor.TypedActorExtension createExtension(akka.actor.ExtendedActorSystem);
    Code:
       0: new           #50                 // class akka/actor/TypedActorExtension
       3: dup
       4: aload_1
       5: invokespecial #57                 // Method akka/actor/TypedActorExtension."<init>":(Lakka/actor/ExtendedActorSystem;)V
       8: areturn

  public akka.actor.TypedActorFactory apply(akka.actor.ActorContext);
    Code:
       0: new           #61                 // class akka/actor/ContextualTypedActorFactory
       3: dup
       4: aload_0
       5: aload_1
       6: invokeinterface #66,  1           // InterfaceMethod akka/actor/ActorContext.system:()Lakka/actor/ActorSystem;
      11: invokevirtual #68                 // Method apply:(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
      14: checkcast     #50                 // class akka/actor/TypedActorExtension
      17: aload_1
      18: invokespecial #71                 // Method akka/actor/ContextualTypedActorFactory."<init>":(Lakka/actor/TypedActorExtension;Lakka/actor/ActorContext;)V
      21: areturn

  public akka.actor.TypedActorFactory get(akka.actor.ActorContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method apply:(Lakka/actor/ActorContext;)Lakka/actor/TypedActorFactory;
       5: areturn

  public java.lang.ThreadLocal<java.lang.Object> akka$actor$TypedActor$$selfReference();
    Code:
       0: aload_0
       1: getfield      #78                 // Field akka$actor$TypedActor$$selfReference:Ljava/lang/ThreadLocal;
       4: areturn

  public java.lang.ThreadLocal<akka.actor.ActorContext> akka$actor$TypedActor$$currentContext();
    Code:
       0: aload_0
       1: getfield      #80                 // Field akka$actor$TypedActor$$currentContext:Ljava/lang/ThreadLocal;
       4: areturn

  public <T> T self();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method akka$actor$TypedActor$$selfReference:()Ljava/lang/ThreadLocal;
       4: invokevirtual #88                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     22
      12: new           #90                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #92                 // String Calling TypedActor.self outside of a TypedActor implementation method!
      18: invokespecial #95                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: astore_2
      24: aload_2
      25: areturn

  public akka.actor.ActorContext context();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method akka$actor$TypedActor$$currentContext:()Ljava/lang/ThreadLocal;
       4: invokevirtual #88                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #63                 // class akka/actor/ActorContext
      10: astore_1
      11: aload_1
      12: ifnonnull     25
      15: new           #90                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #100                // String Calling TypedActor.context outside of a TypedActor implementation method!
      21: invokespecial #95                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: astore_2
      27: aload_2
      28: areturn

  public scala.concurrent.ExecutionContextExecutor dispatcher();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method context:()Lakka/actor/ActorContext;
       4: invokeinterface #106,  1          // InterfaceMethod akka/actor/ActorContext.dispatcher:()Lscala/concurrent/ExecutionContextExecutor;
       9: areturn

  public akka.actor.Extension createExtension(akka.actor.ExtendedActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method createExtension:(Lakka/actor/ExtendedActorSystem;)Lakka/actor/TypedActorExtension;
       5: areturn

  public akka.actor.ExtensionId lookup();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method lookup:()Lakka/actor/TypedActor$;
       4: areturn

  public akka.actor.Extension get(akka.actor.ActorSystem);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #114                // Method get:(Lakka/actor/ActorSystem;)Lakka/actor/TypedActorExtension;
       5: areturn

  private akka.actor.TypedActor$();
    Code:
       0: aload_0
       1: invokespecial #115                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #117                // Field MODULE$:Lakka/actor/TypedActor$;
       8: aload_0
       9: invokestatic  #121                // Method akka/actor/ExtensionId$class.$init$:(Lakka/actor/ExtensionId;)V
      12: aload_0
      13: new           #86                 // class java/lang/ThreadLocal
      16: dup
      17: invokespecial #122                // Method java/lang/ThreadLocal."<init>":()V
      20: putfield      #78                 // Field akka$actor$TypedActor$$selfReference:Ljava/lang/ThreadLocal;
      23: aload_0
      24: new           #86                 // class java/lang/ThreadLocal
      27: dup
      28: invokespecial #122                // Method java/lang/ThreadLocal."<init>":()V
      31: putfield      #80                 // Field akka$actor$TypedActor$$currentContext:Ljava/lang/ThreadLocal;
      34: return
}
