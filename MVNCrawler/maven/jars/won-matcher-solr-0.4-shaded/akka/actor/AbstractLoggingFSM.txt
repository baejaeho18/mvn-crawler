Compiled from "AbstractFSM.scala"
public abstract class akka.actor.AbstractLoggingFSM<S, D> extends akka.actor.AbstractFSM<S, D> implements akka.actor.LoggingFSM<S, D> {
  private final boolean debugEvent;

  private final akka.actor.FSM$Event<java.lang.Object>[] akka$actor$LoggingFSM$$events;

  private final java.lang.Object[] akka$actor$LoggingFSM$$states;

  private int akka$actor$LoggingFSM$$pos;

  private boolean akka$actor$LoggingFSM$$full;

  public boolean debugEvent();
    Code:
       0: aload_0
       1: getfield      #24                 // Field debugEvent:Z
       4: ireturn

  public akka.actor.FSM$Event<D>[] akka$actor$LoggingFSM$$events();
    Code:
       0: aload_0
       1: getfield      #29                 // Field akka$actor$LoggingFSM$$events:[Lakka/actor/FSM$Event;
       4: areturn

  public java.lang.Object[] akka$actor$LoggingFSM$$states();
    Code:
       0: aload_0
       1: getfield      #32                 // Field akka$actor$LoggingFSM$$states:[Ljava/lang/Object;
       4: areturn

  public int akka$actor$LoggingFSM$$pos();
    Code:
       0: aload_0
       1: getfield      #35                 // Field akka$actor$LoggingFSM$$pos:I
       4: ireturn

  public void akka$actor$LoggingFSM$$pos_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field akka$actor$LoggingFSM$$pos:I
       5: return

  public boolean akka$actor$LoggingFSM$$full();
    Code:
       0: aload_0
       1: getfield      #40                 // Field akka$actor$LoggingFSM$$full:Z
       4: ireturn

  public void akka$actor$LoggingFSM$$full_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field akka$actor$LoggingFSM$$full:Z
       5: return

  public void akka$actor$LoggingFSM$$super$processEvent(akka.actor.FSM$Event, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // Method akka/actor/FSM$class.processEvent:(Lakka/actor/FSM;Lakka/actor/FSM$Event;Ljava/lang/Object;)V
       6: return

  public void akka$actor$LoggingFSM$_setter_$debugEvent_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field debugEvent:Z
       5: return

  public void akka$actor$LoggingFSM$_setter_$akka$actor$LoggingFSM$$events_$eq(akka.actor.FSM$Event[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field akka$actor$LoggingFSM$$events:[Lakka/actor/FSM$Event;
       5: return

  public void akka$actor$LoggingFSM$_setter_$akka$actor$LoggingFSM$$states_$eq(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field akka$actor$LoggingFSM$$states:[Ljava/lang/Object;
       5: return

  public int logDepth();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method akka/actor/LoggingFSM$class.logDepth:(Lakka/actor/LoggingFSM;)I
       4: ireturn

  public void processEvent(akka.actor.FSM$Event<D>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // Method akka/actor/LoggingFSM$class.processEvent:(Lakka/actor/LoggingFSM;Lakka/actor/FSM$Event;Ljava/lang/Object;)V
       6: return

  public scala.collection.IndexedSeq<akka.actor.FSM$LogEntry<S, D>> getLog();
    Code:
       0: aload_0
       1: invokestatic  #73                 // Method akka/actor/LoggingFSM$class.getLog:(Lakka/actor/LoggingFSM;)Lscala/collection/IndexedSeq;
       4: areturn

  public akka.actor.AbstractLoggingFSM();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method akka/actor/AbstractFSM."<init>":()V
       4: aload_0
       5: invokestatic  #81                 // Method akka/actor/LoggingFSM$class.$init$:(Lakka/actor/LoggingFSM;)V
       8: return
}
