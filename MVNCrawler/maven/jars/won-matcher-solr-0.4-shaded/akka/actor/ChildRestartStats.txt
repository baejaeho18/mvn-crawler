Compiled from "FaultHandling.scala"
public final class akka.actor.ChildRestartStats implements akka.actor.ChildStats,scala.Product,scala.Serializable {
  private final akka.actor.ActorRef child;

  private int maxNrOfRetriesCount;

  private long restartTimeWindowStartNanos;

  public static long apply$default$3();
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: invokevirtual #24                 // Method akka/actor/ChildRestartStats$.apply$default$3:()J
       6: lreturn

  public static int apply$default$2();
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: invokevirtual #28                 // Method akka/actor/ChildRestartStats$.apply$default$2:()I
       6: ireturn

  public static long $lessinit$greater$default$3();
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: invokevirtual #31                 // Method akka/actor/ChildRestartStats$.$lessinit$greater$default$3:()J
       6: lreturn

  public static int $lessinit$greater$default$2();
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: invokevirtual #34                 // Method akka/actor/ChildRestartStats$.$lessinit$greater$default$2:()I
       6: ireturn

  public static scala.Option<scala.Tuple3<akka.actor.ActorRef, java.lang.Object, java.lang.Object>> unapply(akka.actor.ChildRestartStats);
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: aload_0
       4: invokevirtual #38                 // Method akka/actor/ChildRestartStats$.unapply:(Lakka/actor/ChildRestartStats;)Lscala/Option;
       7: areturn

  public static akka.actor.ChildRestartStats apply(akka.actor.ActorRef, int, long);
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: aload_0
       4: iload_1
       5: lload_2
       6: invokevirtual #42                 // Method akka/actor/ChildRestartStats$.apply:(Lakka/actor/ActorRef;IJ)Lakka/actor/ChildRestartStats;
       9: areturn

  public static scala.Function1<scala.Tuple3<akka.actor.ActorRef, java.lang.Object, java.lang.Object>, akka.actor.ChildRestartStats> tupled();
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: invokevirtual #46                 // Method akka/actor/ChildRestartStats$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<akka.actor.ActorRef, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, akka.actor.ChildRestartStats>>> curried();
    Code:
       0: getstatic     #22                 // Field akka/actor/ChildRestartStats$.MODULE$:Lakka/actor/ChildRestartStats$;
       3: invokevirtual #49                 // Method akka/actor/ChildRestartStats$.curried:()Lscala/Function1;
       6: areturn

  public akka.actor.ActorRef child();
    Code:
       0: aload_0
       1: getfield      #58                 // Field child:Lakka/actor/ActorRef;
       4: areturn

  public int maxNrOfRetriesCount();
    Code:
       0: aload_0
       1: getfield      #62                 // Field maxNrOfRetriesCount:I
       4: ireturn

  public void maxNrOfRetriesCount_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field maxNrOfRetriesCount:I
       5: return

  public long restartTimeWindowStartNanos();
    Code:
       0: aload_0
       1: getfield      #67                 // Field restartTimeWindowStartNanos:J
       4: lreturn

  public void restartTimeWindowStartNanos_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #67                 // Field restartTimeWindowStartNanos:J
       5: return

  public int uid();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method child:()Lakka/actor/ActorRef;
       4: invokevirtual #78                 // Method akka/actor/ActorRef.path:()Lakka/actor/ActorPath;
       7: invokeinterface #82,  1           // InterfaceMethod akka/actor/ActorPath.uid:()I
      12: ireturn

  public boolean requestRestartPermission(scala.Tuple2<scala.Option<java.lang.Object>, scala.Option<java.lang.Object>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        49
       6: aload_2
       7: invokevirtual #90                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #92                 // class scala/Option
      13: astore_3
      14: aload_3
      15: instanceof    #94                 // class scala/Some
      18: ifeq          49
      21: aload_3
      22: checkcast     #94                 // class scala/Some
      25: astore        4
      27: aload         4
      29: invokevirtual #97                 // Method scala/Some.x:()Ljava/lang/Object;
      32: invokestatic  #103                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      35: istore        5
      37: iload         5
      39: iconst_1
      40: if_icmpge     49
      43: iconst_0
      44: istore        6
      46: goto          241
      49: aload_2
      50: ifnull        136
      53: aload_2
      54: invokevirtual #90                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      57: checkcast     #92                 // class scala/Option
      60: astore        7
      62: aload_2
      63: invokevirtual #106                // Method scala/Tuple2._2:()Ljava/lang/Object;
      66: checkcast     #92                 // class scala/Option
      69: astore        8
      71: aload         7
      73: instanceof    #94                 // class scala/Some
      76: ifeq          136
      79: aload         7
      81: checkcast     #94                 // class scala/Some
      84: astore        9
      86: aload         9
      88: invokevirtual #97                 // Method scala/Some.x:()Ljava/lang/Object;
      91: invokestatic  #103                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      94: istore        10
      96: getstatic     #111                // Field scala/None$.MODULE$:Lscala/None$;
      99: aload         8
     101: invokevirtual #115                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     104: ifeq          136
     107: aload_0
     108: aload_0
     109: invokevirtual #117                // Method maxNrOfRetriesCount:()I
     112: iconst_1
     113: iadd
     114: invokevirtual #119                // Method maxNrOfRetriesCount_$eq:(I)V
     117: aload_0
     118: invokevirtual #117                // Method maxNrOfRetriesCount:()I
     121: iload         10
     123: if_icmpgt     130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: istore        6
     133: goto          241
     136: aload_2
     137: ifnull        214
     140: aload_2
     141: invokevirtual #90                 // Method scala/Tuple2._1:()Ljava/lang/Object;
     144: checkcast     #92                 // class scala/Option
     147: astore        11
     149: aload_2
     150: invokevirtual #106                // Method scala/Tuple2._2:()Ljava/lang/Object;
     153: checkcast     #92                 // class scala/Option
     156: astore        12
     158: aload         12
     160: instanceof    #94                 // class scala/Some
     163: ifeq          214
     166: aload         12
     168: checkcast     #94                 // class scala/Some
     171: astore        13
     173: aload         13
     175: invokevirtual #97                 // Method scala/Some.x:()Ljava/lang/Object;
     178: invokestatic  #103                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
     181: istore        14
     183: aload_0
     184: aload         11
     186: invokevirtual #123                // Method scala/Option.isDefined:()Z
     189: ifeq          203
     192: aload         11
     194: invokevirtual #126                // Method scala/Option.get:()Ljava/lang/Object;
     197: invokestatic  #103                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
     200: goto          204
     203: iconst_1
     204: iload         14
     206: invokespecial #130                // Method retriesInWindowOkay:(II)Z
     209: istore        6
     211: goto          241
     214: aload_2
     215: ifnull        244
     218: aload_2
     219: invokevirtual #90                 // Method scala/Tuple2._1:()Ljava/lang/Object;
     222: checkcast     #92                 // class scala/Option
     225: astore        15
     227: getstatic     #111                // Field scala/None$.MODULE$:Lscala/None$;
     230: aload         15
     232: invokevirtual #115                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     235: ifeq          244
     238: iconst_1
     239: istore        6
     241: iload         6
     243: ireturn
     244: new           #132                // class scala/MatchError
     247: dup
     248: aload_2
     249: invokespecial #136                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     252: athrow

  private boolean retriesInWindowOkay(int, int);
    Code:
       0: aload_0
       1: invokevirtual #117                // Method maxNrOfRetriesCount:()I
       4: iconst_1
       5: iadd
       6: istore_3
       7: invokestatic  #146                // Method java/lang/System.nanoTime:()J
      10: lstore        4
      12: aload_0
      13: invokevirtual #148                // Method restartTimeWindowStartNanos:()J
      16: lconst_0
      17: lcmp
      18: ifne          32
      21: aload_0
      22: lload         4
      24: invokevirtual #150                // Method restartTimeWindowStartNanos_$eq:(J)V
      27: lload         4
      29: goto          36
      32: aload_0
      33: invokevirtual #148                // Method restartTimeWindowStartNanos:()J
      36: lstore        6
      38: lload         4
      40: lload         6
      42: lsub
      43: getstatic     #156                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      46: iload_2
      47: i2l
      48: invokevirtual #160                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      51: lcmp
      52: ifgt          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore        8
      62: iload         8
      64: ifeq          85
      67: aload_0
      68: iload_3
      69: invokevirtual #119                // Method maxNrOfRetriesCount_$eq:(I)V
      72: iload_3
      73: iload_1
      74: if_icmpgt     81
      77: iconst_1
      78: goto          97
      81: iconst_0
      82: goto          97
      85: aload_0
      86: iconst_1
      87: invokevirtual #119                // Method maxNrOfRetriesCount_$eq:(I)V
      90: aload_0
      91: lload         4
      93: invokevirtual #150                // Method restartTimeWindowStartNanos_$eq:(J)V
      96: iconst_1
      97: ireturn

  public akka.actor.ChildRestartStats copy(akka.actor.ActorRef, int, long);
    Code:
       0: new           #2                  // class akka/actor/ChildRestartStats
       3: dup
       4: aload_1
       5: iload_2
       6: lload_3
       7: invokespecial #169                // Method "<init>":(Lakka/actor/ActorRef;IJ)V
      10: areturn

  public akka.actor.ActorRef copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method child:()Lakka/actor/ActorRef;
       4: areturn

  public int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method maxNrOfRetriesCount:()I
       4: ireturn

  public long copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method restartTimeWindowStartNanos:()J
       4: lreturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #176                // String ChildRestartStats
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 63
                     1: 53
                     2: 43
               default: 28
          }
      28: new           #181                // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #185                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #188                // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #191                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #148                // Method restartTimeWindowStartNanos:()J
      47: invokestatic  #195                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      50: goto          67
      53: aload_0
      54: invokevirtual #117                // Method maxNrOfRetriesCount:()I
      57: invokestatic  #185                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      60: goto          67
      63: aload_0
      64: invokevirtual #72                 // Method child:()Lakka/actor/ActorRef;
      67: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #206                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/actor/ChildRestartStats
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #210                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #72                 // Method child:()Lakka/actor/ActorRef;
       8: invokestatic  #215                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #219                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #117                // Method maxNrOfRetriesCount:()I
      20: invokestatic  #219                // Method scala/runtime/Statics.mix:(II)I
      23: istore_1
      24: iload_1
      25: aload_0
      26: invokevirtual #148                // Method restartTimeWindowStartNanos:()J
      29: invokestatic  #223                // Method scala/runtime/Statics.longHash:(J)I
      32: invokestatic  #219                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: iconst_3
      38: invokestatic  #226                // Method scala/runtime/Statics.finalizeHash:(II)I
      41: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #230                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     96
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/actor/ChildRestartStats
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          100
      25: aload_1
      26: checkcast     #2                  // class akka/actor/ChildRestartStats
      29: astore        4
      31: aload_0
      32: invokevirtual #72                 // Method child:()Lakka/actor/ActorRef;
      35: aload         4
      37: invokevirtual #72                 // Method child:()Lakka/actor/ActorRef;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          92
      55: aload         5
      57: invokevirtual #115                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          92
      63: aload_0
      64: invokevirtual #117                // Method maxNrOfRetriesCount:()I
      67: aload         4
      69: invokevirtual #117                // Method maxNrOfRetriesCount:()I
      72: if_icmpne     92
      75: aload_0
      76: invokevirtual #148                // Method restartTimeWindowStartNanos:()J
      79: aload         4
      81: invokevirtual #148                // Method restartTimeWindowStartNanos:()J
      84: lcmp
      85: ifne          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ifeq          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ireturn

  public akka.actor.ChildRestartStats(akka.actor.ActorRef, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field child:Lakka/actor/ActorRef;
       5: aload_0
       6: iload_2
       7: putfield      #62                 // Field maxNrOfRetriesCount:I
      10: aload_0
      11: lload_3
      12: putfield      #67                 // Field restartTimeWindowStartNanos:J
      15: aload_0
      16: invokespecial #233                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #239                // Method scala/Product$class.$init$:(Lscala/Product;)V
      23: return
}
