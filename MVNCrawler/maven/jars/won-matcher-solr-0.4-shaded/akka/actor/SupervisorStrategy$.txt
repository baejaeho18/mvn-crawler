Compiled from "FaultHandling.scala"
public final class akka.actor.SupervisorStrategy$ implements akka.actor.SupervisorStrategyLowPriorityImplicits {
  public static final akka.actor.SupervisorStrategy$ MODULE$;

  private final scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> defaultDecider;

  private final akka.actor.SupervisorStrategy defaultStrategy;

  private final akka.actor.SupervisorStrategy stoppingStrategy;

  private final scala.Function1<java.lang.Object, akka.actor.SupervisorStrategy$Escalate$> escalateDefault;

  public static {};
    Code:
       0: new           #2                  // class akka/actor/SupervisorStrategy$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> seqCauseDirective2Decider(scala.collection.Iterable<scala.Tuple2<java.lang.Class<? extends java.lang.Throwable>, akka.actor.SupervisorStrategy$Directive>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #30                 // Method akka/actor/SupervisorStrategyLowPriorityImplicits$class.seqCauseDirective2Decider:(Lakka/actor/SupervisorStrategy$;Lscala/collection/Iterable;)Lscala/PartialFunction;
       5: areturn

  public akka.actor.SupervisorStrategy$Resume$ resume();
    Code:
       0: getstatic     #40                 // Field akka/actor/SupervisorStrategy$Resume$.MODULE$:Lakka/actor/SupervisorStrategy$Resume$;
       3: areturn

  public akka.actor.SupervisorStrategy$Restart$ restart();
    Code:
       0: getstatic     #47                 // Field akka/actor/SupervisorStrategy$Restart$.MODULE$:Lakka/actor/SupervisorStrategy$Restart$;
       3: areturn

  public akka.actor.SupervisorStrategy$Stop$ stop();
    Code:
       0: getstatic     #54                 // Field akka/actor/SupervisorStrategy$Stop$.MODULE$:Lakka/actor/SupervisorStrategy$Stop$;
       3: areturn

  public akka.actor.SupervisorStrategy$Escalate$ escalate();
    Code:
       0: getstatic     #61                 // Field akka/actor/SupervisorStrategy$Escalate$.MODULE$:Lakka/actor/SupervisorStrategy$Escalate$;
       3: areturn

  public final scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> defaultDecider();
    Code:
       0: aload_0
       1: getfield      #64                 // Field defaultDecider:Lscala/PartialFunction;
       4: areturn

  public final akka.actor.SupervisorStrategy defaultStrategy();
    Code:
       0: aload_0
       1: getfield      #67                 // Field defaultStrategy:Lakka/actor/SupervisorStrategy;
       4: areturn

  public final akka.actor.SupervisorStrategy stoppingStrategy();
    Code:
       0: aload_0
       1: getfield      #69                 // Field stoppingStrategy:Lakka/actor/SupervisorStrategy;
       4: areturn

  public scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> seqThrowable2Decider(scala.collection.immutable.Seq<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method makeDecider:(Lscala/collection/immutable/Seq;)Lscala/PartialFunction;
       5: areturn

  public scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(scala.collection.immutable.Seq<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: new           #77                 // class akka/actor/SupervisorStrategy$$anonfun$makeDecider$1
       3: dup
       4: aload_1
       5: invokespecial #80                 // Method akka/actor/SupervisorStrategy$$anonfun$makeDecider$1."<init>":(Lscala/collection/immutable/Seq;)V
       8: areturn

  public scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(java.lang.Iterable<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: aload_0
       1: getstatic     #86                 // Field akka/japi/Util$.MODULE$:Lakka/japi/Util$;
       4: aload_1
       5: invokevirtual #90                 // Method akka/japi/Util$.immutableSeq:(Ljava/lang/Iterable;)Lscala/collection/immutable/Seq;
       8: invokevirtual #74                 // Method makeDecider:(Lscala/collection/immutable/Seq;)Lscala/PartialFunction;
      11: areturn

  public scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(scala.collection.Iterable<scala.Tuple2<java.lang.Class<? extends java.lang.Throwable>, akka.actor.SupervisorStrategy$Directive>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #95                 // Method sort:(Lscala/collection/Iterable;)Lscala/collection/immutable/Seq;
       5: astore_2
       6: new           #97                 // class akka/actor/SupervisorStrategy$$anonfun$makeDecider$2
       9: dup
      10: aload_2
      11: invokespecial #98                 // Method akka/actor/SupervisorStrategy$$anonfun$makeDecider$2."<init>":(Lscala/collection/immutable/Seq;)V
      14: areturn

  public scala.PartialFunction<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> makeDecider(akka.japi.Function<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive>);
    Code:
       0: new           #103                // class akka/actor/SupervisorStrategy$$anonfun$makeDecider$3
       3: dup
       4: aload_1
       5: invokespecial #106                // Method akka/actor/SupervisorStrategy$$anonfun$makeDecider$3."<init>":(Lakka/japi/Function;)V
       8: areturn

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.Class<? extends java.lang.Throwable>, akka.actor.SupervisorStrategy$Directive>> sort(scala.collection.Iterable<scala.Tuple2<java.lang.Class<? extends java.lang.Throwable>, akka.actor.SupervisorStrategy$Directive>>);
    Code:
       0: new           #110                // class scala/collection/mutable/ArrayBuffer
       3: dup
       4: aload_1
       5: invokeinterface #116,  1          // InterfaceMethod scala/collection/Iterable.size:()I
      10: invokespecial #119                // Method scala/collection/mutable/ArrayBuffer."<init>":(I)V
      13: astore_2
      14: aload_1
      15: aload_2
      16: new           #121                // class akka/actor/SupervisorStrategy$$anonfun$sort$1
      19: dup
      20: invokespecial #122                // Method akka/actor/SupervisorStrategy$$anonfun$sort$1."<init>":()V
      23: invokeinterface #126,  3          // InterfaceMethod scala/collection/Iterable.$div$colon:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #128                // class scala/collection/TraversableLike
      31: getstatic     #133                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      34: invokevirtual #137                // Method scala/Predef$.fallbackStringCanBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      37: invokeinterface #141,  2          // InterfaceMethod scala/collection/TraversableLike.to:(Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      42: checkcast     #143                // class scala/collection/immutable/Seq
      45: areturn

  public scala.Option<scala.concurrent.duration.Duration> withinTimeRangeOption(scala.concurrent.duration.Duration);
    Code:
       0: aload_1
       1: invokevirtual #152                // Method scala/concurrent/duration/Duration.isFinite:()Z
       4: ifeq          31
       7: aload_1
       8: getstatic     #157                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
      11: invokevirtual #161                // Method scala/concurrent/duration/Duration$.Zero:()Lscala/concurrent/duration/FiniteDuration;
      14: invokevirtual #165                // Method scala/concurrent/duration/Duration.$greater$eq:(Ljava/lang/Object;)Z
      17: ifeq          31
      20: new           #167                // class scala/Some
      23: dup
      24: aload_1
      25: invokespecial #170                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      28: goto          34
      31: getstatic     #175                // Field scala/None$.MODULE$:Lscala/None$;
      34: areturn

  public scala.Option<java.lang.Object> maxNrOfRetriesOption(int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpge     11
       5: getstatic     #175                // Field scala/None$.MODULE$:Lscala/None$;
       8: goto          22
      11: new           #167                // class scala/Some
      14: dup
      15: iload_1
      16: invokestatic  #187                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      19: invokespecial #170                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      22: areturn

  public scala.Function1<java.lang.Object, akka.actor.SupervisorStrategy$Escalate$> escalateDefault();
    Code:
       0: aload_0
       1: getfield      #192                // Field escalateDefault:Lscala/Function1;
       4: areturn

  private final scala.PartialFunction stoppingDecider$1();
    Code:
       0: new           #195                // class akka/actor/SupervisorStrategy$$anonfun$stoppingDecider$1$1
       3: dup
       4: invokespecial #196                // Method akka/actor/SupervisorStrategy$$anonfun$stoppingDecider$1$1."<init>":()V
       7: areturn

  private akka.actor.SupervisorStrategy$();
    Code:
       0: aload_0
       1: invokespecial #197                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #199                // Field MODULE$:Lakka/actor/SupervisorStrategy$;
       8: aload_0
       9: invokestatic  #203                // Method akka/actor/SupervisorStrategyLowPriorityImplicits$class.$init$:(Lakka/actor/SupervisorStrategy$;)V
      12: aload_0
      13: new           #205                // class akka/actor/SupervisorStrategy$$anonfun$1
      16: dup
      17: invokespecial #206                // Method akka/actor/SupervisorStrategy$$anonfun$1."<init>":()V
      20: putfield      #64                 // Field defaultDecider:Lscala/PartialFunction;
      23: aload_0
      24: new           #208                // class akka/actor/OneForOneStrategy
      27: dup
      28: getstatic     #213                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      31: invokevirtual #216                // Method akka/actor/OneForOneStrategy$.apply$default$1:()I
      34: getstatic     #213                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      37: invokevirtual #220                // Method akka/actor/OneForOneStrategy$.apply$default$2:()Lscala/concurrent/duration/Duration;
      40: getstatic     #213                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      43: invokevirtual #223                // Method akka/actor/OneForOneStrategy$.apply$default$3:()Z
      46: aload_0
      47: invokevirtual #225                // Method defaultDecider:()Lscala/PartialFunction;
      50: invokespecial #228                // Method akka/actor/OneForOneStrategy."<init>":(ILscala/concurrent/duration/Duration;ZLscala/PartialFunction;)V
      53: putfield      #67                 // Field defaultStrategy:Lakka/actor/SupervisorStrategy;
      56: aload_0
      57: new           #208                // class akka/actor/OneForOneStrategy
      60: dup
      61: getstatic     #213                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      64: invokevirtual #216                // Method akka/actor/OneForOneStrategy$.apply$default$1:()I
      67: getstatic     #213                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      70: invokevirtual #220                // Method akka/actor/OneForOneStrategy$.apply$default$2:()Lscala/concurrent/duration/Duration;
      73: getstatic     #213                // Field akka/actor/OneForOneStrategy$.MODULE$:Lakka/actor/OneForOneStrategy$;
      76: invokevirtual #223                // Method akka/actor/OneForOneStrategy$.apply$default$3:()Z
      79: aload_0
      80: invokespecial #230                // Method stoppingDecider$1:()Lscala/PartialFunction;
      83: invokespecial #228                // Method akka/actor/OneForOneStrategy."<init>":(ILscala/concurrent/duration/Duration;ZLscala/PartialFunction;)V
      86: putfield      #69                 // Field stoppingStrategy:Lakka/actor/SupervisorStrategy;
      89: aload_0
      90: new           #232                // class akka/actor/SupervisorStrategy$$anonfun$3
      93: dup
      94: invokespecial #233                // Method akka/actor/SupervisorStrategy$$anonfun$3."<init>":()V
      97: putfield      #192                // Field escalateDefault:Lscala/Function1;
     100: return
}
