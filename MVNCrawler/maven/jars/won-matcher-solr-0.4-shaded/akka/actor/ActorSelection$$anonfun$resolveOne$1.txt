Compiled from "ActorSelection.scala"
public final class akka.actor.ActorSelection$$anonfun$resolveOne$1 extends scala.runtime.AbstractFunction1<scala.util.Try<java.lang.Object>, scala.concurrent.Promise<akka.actor.ActorRef>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final akka.actor.ActorSelection $outer;

  private final scala.concurrent.Promise p$1;

  public final scala.concurrent.Promise<akka.actor.ActorRef> apply(scala.util.Try<java.lang.Object>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #25                 // class scala/util/Success
       6: ifeq          83
       9: aload_2
      10: checkcast     #25                 // class scala/util/Success
      13: astore_3
      14: aload_3
      15: invokevirtual #29                 // Method scala/util/Success.value:()Ljava/lang/Object;
      18: astore        4
      20: aload         4
      22: instanceof    #31                 // class akka/actor/ActorIdentity
      25: ifeq          83
      28: aload         4
      30: checkcast     #31                 // class akka/actor/ActorIdentity
      33: astore        5
      35: aload         5
      37: invokevirtual #35                 // Method akka/actor/ActorIdentity.ref:()Lscala/Option;
      40: astore        6
      42: aload         6
      44: instanceof    #37                 // class scala/Some
      47: ifeq          83
      50: aload         6
      52: checkcast     #37                 // class scala/Some
      55: astore        7
      57: aload         7
      59: invokevirtual #40                 // Method scala/Some.x:()Ljava/lang/Object;
      62: checkcast     #42                 // class akka/actor/ActorRef
      65: astore        8
      67: aload_0
      68: getfield      #44                 // Field p$1:Lscala/concurrent/Promise;
      71: aload         8
      73: invokeinterface #50,  2           // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
      78: astore        9
      80: goto          105
      83: aload_0
      84: getfield      #44                 // Field p$1:Lscala/concurrent/Promise;
      87: new           #52                 // class akka/actor/ActorNotFound
      90: dup
      91: aload_0
      92: getfield      #54                 // Field $outer:Lakka/actor/ActorSelection;
      95: invokespecial #58                 // Method akka/actor/ActorNotFound."<init>":(Lakka/actor/ActorSelection;)V
      98: invokeinterface #62,  2           // InterfaceMethod scala/concurrent/Promise.failure:(Ljava/lang/Throwable;)Lscala/concurrent/Promise;
     103: astore        9
     105: aload         9
     107: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class scala/util/Try
       5: invokevirtual #72                 // Method apply:(Lscala/util/Try;)Lscala/concurrent/Promise;
       8: areturn

  public akka.actor.ActorSelection$$anonfun$resolveOne$1(akka.actor.ActorSelection, scala.concurrent.Promise);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #54                 // Field $outer:Lakka/actor/ActorSelection;
      11: aload_0
      12: aload_2
      13: putfield      #44                 // Field p$1:Lscala/concurrent/Promise;
      16: aload_0
      17: invokespecial #78                 // Method scala/runtime/AbstractFunction1."<init>":()V
      20: return
}
