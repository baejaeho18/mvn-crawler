Compiled from "ActorRef.scala"
public final class akka.actor.SerializedActorRef implements scala.Product,scala.Serializable {
  public static final long serialVersionUID;

  private final java.lang.String path;

  public static scala.Option<java.lang.String> unapply(akka.actor.SerializedActorRef);
    Code:
       0: getstatic     #20                 // Field akka/actor/SerializedActorRef$.MODULE$:Lakka/actor/SerializedActorRef$;
       3: aload_0
       4: invokevirtual #22                 // Method akka/actor/SerializedActorRef$.unapply:(Lakka/actor/SerializedActorRef;)Lscala/Option;
       7: areturn

  public static akka.actor.SerializedActorRef apply(java.lang.String);
    Code:
       0: getstatic     #20                 // Field akka/actor/SerializedActorRef$.MODULE$:Lakka/actor/SerializedActorRef$;
       3: aload_0
       4: invokevirtual #26                 // Method akka/actor/SerializedActorRef$.apply:(Ljava/lang/String;)Lakka/actor/SerializedActorRef;
       7: areturn

  public static akka.actor.SerializedActorRef apply(akka.actor.ActorRef);
    Code:
       0: getstatic     #20                 // Field akka/actor/SerializedActorRef$.MODULE$:Lakka/actor/SerializedActorRef$;
       3: aload_0
       4: invokevirtual #29                 // Method akka/actor/SerializedActorRef$.apply:(Lakka/actor/ActorRef;)Lakka/actor/SerializedActorRef;
       7: areturn

  public java.lang.String path();
    Code:
       0: aload_0
       1: getfield      #38                 // Field path:Ljava/lang/String;
       4: areturn

  public java.lang.Object readResolve() throws java.io.ObjectStreamException;
    Code:
       0: getstatic     #49                 // Field akka/serialization/JavaSerializer$.MODULE$:Lakka/serialization/JavaSerializer$;
       3: invokevirtual #53                 // Method akka/serialization/JavaSerializer$.currentSystem:()Lakka/serialization/JavaSerializer$CurrentSystem;
       6: invokevirtual #58                 // Method akka/serialization/JavaSerializer$CurrentSystem.value:()Ljava/lang/Object;
       9: checkcast     #60                 // class akka/actor/ExtendedActorSystem
      12: astore_1
      13: aload_1
      14: ifnonnull     27
      17: new           #62                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #64                 // String Trying to deserialize a serialized ActorRef without an ActorSystem in scope. Use \'akka.serialization.Serialization.currentSystem.withValue(system) { ... }\'
      23: invokespecial #68                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_1
      28: invokevirtual #72                 // Method akka/actor/ExtendedActorSystem.provider:()Lakka/actor/ActorRefProvider;
      31: aload_0
      32: invokevirtual #74                 // Method path:()Ljava/lang/String;
      35: invokeinterface #80,  2           // InterfaceMethod akka/actor/ActorRefProvider.resolveActorRef:(Ljava/lang/String;)Lakka/actor/ActorRef;
      40: astore_2
      41: aload_2
      42: areturn

  public akka.actor.SerializedActorRef copy(java.lang.String);
    Code:
       0: new           #2                  // class akka/actor/SerializedActorRef
       3: dup
       4: aload_1
       5: invokespecial #82                 // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method path:()Ljava/lang/String;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #86                 // String SerializedActorRef
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #92                 // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #98                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #101                // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #102                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #74                 // Method path:()Ljava/lang/String;
      39: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #115                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/actor/SerializedActorRef
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #123                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #127                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     71
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/actor/SerializedActorRef
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          75
      25: aload_1
      26: checkcast     #2                  // class akka/actor/SerializedActorRef
      29: astore        4
      31: aload_0
      32: invokevirtual #74                 // Method path:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #74                 // Method path:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          67
      55: aload         5
      57: invokevirtual #130                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  public akka.actor.SerializedActorRef(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field path:Ljava/lang/String;
       5: aload_0
       6: invokespecial #135                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #141                // Method scala/Product$class.$init$:(Lscala/Product;)V
      13: return

  public akka.actor.SerializedActorRef(akka.actor.ActorRef);
    Code:
       0: aload_0
       1: getstatic     #147                // Field akka/serialization/Serialization$.MODULE$:Lakka/serialization/Serialization$;
       4: aload_1
       5: invokevirtual #151                // Method akka/serialization/Serialization$.serializedActorPath:(Lakka/actor/ActorRef;)Ljava/lang/String;
       8: invokespecial #82                 // Method "<init>":(Ljava/lang/String;)V
      11: return
}
