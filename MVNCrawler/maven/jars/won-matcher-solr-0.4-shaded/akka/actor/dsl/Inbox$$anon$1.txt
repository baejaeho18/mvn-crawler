Compiled from "Inbox.scala"
public final class akka.actor.dsl.Inbox$$anon$1 implements scala.math.Ordering<akka.actor.dsl.Inbox$Query> {
  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #17                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #27                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #30                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #33                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<akka.actor.dsl.Inbox$Query> reverse();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, akka.actor.dsl.Inbox$Query>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(akka.actor.dsl.Inbox$Query, akka.actor.dsl.Inbox$Query);
    Code:
       0: aload_1
       1: invokeinterface #73,  1           // InterfaceMethod akka/actor/dsl/Inbox$Query.deadline:()Lscala/concurrent/duration/Deadline;
       6: invokevirtual #79                 // Method scala/concurrent/duration/Deadline.time:()Lscala/concurrent/duration/FiniteDuration;
       9: aload_2
      10: invokeinterface #73,  1           // InterfaceMethod akka/actor/dsl/Inbox$Query.deadline:()Lscala/concurrent/duration/Deadline;
      15: invokevirtual #79                 // Method scala/concurrent/duration/Deadline.time:()Lscala/concurrent/duration/FiniteDuration;
      18: invokevirtual #84                 // Method scala/concurrent/duration/FiniteDuration.compare:(Lscala/concurrent/duration/Duration;)I
      21: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #93                 // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class akka/actor/dsl/Inbox$Query
       5: aload_2
       6: checkcast     #69                 // class akka/actor/dsl/Inbox$Query
       9: invokevirtual #96                 // Method compare:(Lakka/actor/dsl/Inbox$Query;Lakka/actor/dsl/Inbox$Query;)I
      12: ireturn

  public akka.actor.dsl.Inbox$$anon$1(akka.actor.ActorDSL$);
    Code:
       0: aload_0
       1: invokespecial #101                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #107                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
       8: aload_0
       9: invokestatic  #110                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      12: return
}
