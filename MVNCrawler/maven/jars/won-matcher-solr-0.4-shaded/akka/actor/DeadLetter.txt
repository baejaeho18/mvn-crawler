Compiled from "ActorRef.scala"
public final class akka.actor.DeadLetter implements akka.actor.AllDeadLetters,scala.Product,scala.Serializable {
  public static final long serialVersionUID;

  private final java.lang.Object message;

  private final akka.actor.ActorRef sender;

  private final akka.actor.ActorRef recipient;

  public static scala.Option<scala.Tuple3<java.lang.Object, akka.actor.ActorRef, akka.actor.ActorRef>> unapply(akka.actor.DeadLetter);
    Code:
       0: getstatic     #22                 // Field akka/actor/DeadLetter$.MODULE$:Lakka/actor/DeadLetter$;
       3: aload_0
       4: invokevirtual #24                 // Method akka/actor/DeadLetter$.unapply:(Lakka/actor/DeadLetter;)Lscala/Option;
       7: areturn

  public static akka.actor.DeadLetter apply(java.lang.Object, akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: getstatic     #22                 // Field akka/actor/DeadLetter$.MODULE$:Lakka/actor/DeadLetter$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #28                 // Method akka/actor/DeadLetter$.apply:(Ljava/lang/Object;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)Lakka/actor/DeadLetter;
       9: areturn

  public static scala.Function1<scala.Tuple3<java.lang.Object, akka.actor.ActorRef, akka.actor.ActorRef>, akka.actor.DeadLetter> tupled();
    Code:
       0: getstatic     #22                 // Field akka/actor/DeadLetter$.MODULE$:Lakka/actor/DeadLetter$;
       3: invokevirtual #32                 // Method akka/actor/DeadLetter$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.Object, scala.Function1<akka.actor.ActorRef, scala.Function1<akka.actor.ActorRef, akka.actor.DeadLetter>>> curried();
    Code:
       0: getstatic     #22                 // Field akka/actor/DeadLetter$.MODULE$:Lakka/actor/DeadLetter$;
       3: invokevirtual #35                 // Method akka/actor/DeadLetter$.curried:()Lscala/Function1;
       6: areturn

  public java.lang.Object message();
    Code:
       0: aload_0
       1: getfield      #47                 // Field message:Ljava/lang/Object;
       4: areturn

  public akka.actor.ActorRef sender();
    Code:
       0: aload_0
       1: getfield      #52                 // Field sender:Lakka/actor/ActorRef;
       4: areturn

  public akka.actor.ActorRef recipient();
    Code:
       0: aload_0
       1: getfield      #54                 // Field recipient:Lakka/actor/ActorRef;
       4: areturn

  public akka.actor.DeadLetter copy(java.lang.Object, akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: new           #2                  // class akka/actor/DeadLetter
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #59                 // Method "<init>":(Ljava/lang/Object;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)V
      10: areturn

  public java.lang.Object copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method message:()Ljava/lang/Object;
       4: areturn

  public akka.actor.ActorRef copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method sender:()Lakka/actor/ActorRef;
       4: areturn

  public akka.actor.ActorRef copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method recipient:()Lakka/actor/ActorRef;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #72                 // String DeadLetter
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 57
                     1: 50
                     2: 43
               default: 28
          }
      28: new           #78                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #84                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #87                 // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #90                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #68                 // Method recipient:()Lakka/actor/ActorRef;
      47: goto          61
      50: aload_0
      51: invokevirtual #65                 // Method sender:()Lakka/actor/ActorRef;
      54: goto          61
      57: aload_0
      58: invokevirtual #62                 // Method message:()Ljava/lang/Object;
      61: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #99                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #103                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class akka/actor/DeadLetter
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #99                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #110                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #99                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #114                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     118
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class akka/actor/DeadLetter
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          122
      25: aload_1
      26: checkcast     #2                  // class akka/actor/DeadLetter
      29: astore        4
      31: aload_0
      32: invokevirtual #62                 // Method message:()Ljava/lang/Object;
      35: aload         4
      37: invokevirtual #62                 // Method message:()Ljava/lang/Object;
      40: invokestatic  #118                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          114
      46: aload_0
      47: invokevirtual #65                 // Method sender:()Lakka/actor/ActorRef;
      50: aload         4
      52: invokevirtual #65                 // Method sender:()Lakka/actor/ActorRef;
      55: astore        5
      57: dup
      58: ifnonnull     70
      61: pop
      62: aload         5
      64: ifnull        78
      67: goto          114
      70: aload         5
      72: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      75: ifeq          114
      78: aload_0
      79: invokevirtual #68                 // Method recipient:()Lakka/actor/ActorRef;
      82: aload         4
      84: invokevirtual #68                 // Method recipient:()Lakka/actor/ActorRef;
      87: astore        6
      89: dup
      90: ifnonnull     102
      93: pop
      94: aload         6
      96: ifnull        110
      99: goto          114
     102: aload         6
     104: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: ifeq          122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: ireturn

  public akka.actor.DeadLetter(java.lang.Object, akka.actor.ActorRef, akka.actor.ActorRef);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field message:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #52                 // Field sender:Lakka/actor/ActorRef;
      10: aload_0
      11: aload_3
      12: putfield      #54                 // Field recipient:Lakka/actor/ActorRef;
      15: aload_0
      16: invokespecial #125                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #131                // Method scala/Product$class.$init$:(Lscala/Product;)V
      23: getstatic     #136                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      26: aload_2
      27: ifnull        34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: new           #138                // class akka/actor/DeadLetter$$anonfun$1
      38: dup
      39: aload_0
      40: invokespecial #141                // Method akka/actor/DeadLetter$$anonfun$1."<init>":(Lakka/actor/DeadLetter;)V
      43: invokevirtual #145                // Method scala/Predef$.require:(ZLscala/Function0;)V
      46: getstatic     #136                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: aload_3
      50: ifnull        57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: new           #147                // class akka/actor/DeadLetter$$anonfun$2
      61: dup
      62: aload_0
      63: invokespecial #148                // Method akka/actor/DeadLetter$$anonfun$2."<init>":(Lakka/actor/DeadLetter;)V
      66: invokevirtual #145                // Method scala/Predef$.require:(ZLscala/Function0;)V
      69: return
}
