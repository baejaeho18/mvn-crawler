Compiled from "Actor.scala"
public interface akka.actor.Actor {
  public abstract void akka$actor$Actor$_setter_$context_$eq(akka.actor.ActorContext);

  public abstract void akka$actor$Actor$_setter_$self_$eq(akka.actor.ActorRef);

  public abstract akka.actor.ActorContext context();

  public abstract akka.actor.ActorRef self();

  public abstract akka.actor.ActorRef sender();

  public abstract scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit> receive();

  public abstract void aroundReceive(scala.PartialFunction<java.lang.Object, scala.runtime.BoxedUnit>, java.lang.Object);

  public abstract void aroundPreStart();

  public abstract void aroundPostStop();

  public abstract void aroundPreRestart(java.lang.Throwable, scala.Option<java.lang.Object>);

  public abstract void aroundPostRestart(java.lang.Throwable);

  public abstract akka.actor.SupervisorStrategy supervisorStrategy();

  public abstract void preStart() throws java.lang.Exception;

  public abstract void postStop() throws java.lang.Exception;

  public abstract void preRestart(java.lang.Throwable, scala.Option<java.lang.Object>) throws java.lang.Exception;

  public abstract void postRestart(java.lang.Throwable) throws java.lang.Exception;

  public abstract void unhandled(java.lang.Object);
}
