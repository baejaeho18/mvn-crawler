Compiled from "ReflectiveDynamicAccess.scala"
public class akka.actor.ReflectiveDynamicAccess extends akka.actor.DynamicAccess {
  private final java.lang.ClassLoader classLoader;

  public java.lang.ClassLoader classLoader();
    Code:
       0: aload_0
       1: getfield      #13                 // Field classLoader:Ljava/lang/ClassLoader;
       4: areturn

  public <T> scala.util.Try<java.lang.Class<? extends T>> getClassFor(java.lang.String, scala.reflect.ClassTag<T>);
    Code:
       0: getstatic     #23                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
       3: new           #25                 // class akka/actor/ReflectiveDynamicAccess$$anonfun$getClassFor$1
       6: dup
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #29                 // Method akka/actor/ReflectiveDynamicAccess$$anonfun$getClassFor$1."<init>":(Lakka/actor/ReflectiveDynamicAccess;Ljava/lang/String;Lscala/reflect/ClassTag;)V
      13: invokevirtual #33                 // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
      16: areturn

  public <T> scala.util.Try<T> createInstanceFor(java.lang.Class<?>, scala.collection.immutable.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.Object>>, scala.reflect.ClassTag<T>);
    Code:
       0: getstatic     #23                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
       3: new           #41                 // class akka/actor/ReflectiveDynamicAccess$$anonfun$createInstanceFor$2
       6: dup
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #44                 // Method akka/actor/ReflectiveDynamicAccess$$anonfun$createInstanceFor$2."<init>":(Lakka/actor/ReflectiveDynamicAccess;Ljava/lang/Class;Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)V
      14: invokevirtual #33                 // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
      17: new           #46                 // class akka/actor/ReflectiveDynamicAccess$$anonfun$createInstanceFor$1
      20: dup
      21: aload_0
      22: invokespecial #49                 // Method akka/actor/ReflectiveDynamicAccess$$anonfun$createInstanceFor$1."<init>":(Lakka/actor/ReflectiveDynamicAccess;)V
      25: invokevirtual #55                 // Method scala/util/Try.recover:(Lscala/PartialFunction;)Lscala/util/Try;
      28: areturn

  public <T> scala.util.Try<T> createInstanceFor(java.lang.String, scala.collection.immutable.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.Object>>, scala.reflect.ClassTag<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #63                 // Method getClassFor:(Ljava/lang/String;Lscala/reflect/ClassTag;)Lscala/util/Try;
       6: new           #65                 // class akka/actor/ReflectiveDynamicAccess$$anonfun$createInstanceFor$3
       9: dup
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #68                 // Method akka/actor/ReflectiveDynamicAccess$$anonfun$createInstanceFor$3."<init>":(Lakka/actor/ReflectiveDynamicAccess;Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)V
      16: invokevirtual #72                 // Method scala/util/Try.flatMap:(Lscala/Function1;)Lscala/util/Try;
      19: areturn

  public <T> scala.util.Try<T> getObjectFor(java.lang.String, scala.reflect.ClassTag<T>);
    Code:
       0: aload_1
       1: ldc           #76                 // String $
       3: invokevirtual #82                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifeq          18
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #63                 // Method getClassFor:(Ljava/lang/String;Lscala/reflect/ClassTag;)Lscala/util/Try;
      15: goto          55
      18: aload_0
      19: new           #84                 // class scala/collection/mutable/StringBuilder
      22: dup
      23: invokespecial #87                 // Method scala/collection/mutable/StringBuilder."<init>":()V
      26: aload_1
      27: invokevirtual #91                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      30: ldc           #76                 // String $
      32: invokevirtual #91                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      35: invokevirtual #95                 // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      38: aload_2
      39: invokevirtual #63                 // Method getClassFor:(Ljava/lang/String;Lscala/reflect/ClassTag;)Lscala/util/Try;
      42: new           #97                 // class akka/actor/ReflectiveDynamicAccess$$anonfun$1
      45: dup
      46: aload_0
      47: aload_1
      48: aload_2
      49: invokespecial #98                 // Method akka/actor/ReflectiveDynamicAccess$$anonfun$1."<init>":(Lakka/actor/ReflectiveDynamicAccess;Ljava/lang/String;Lscala/reflect/ClassTag;)V
      52: invokevirtual #101                // Method scala/util/Try.recoverWith:(Lscala/PartialFunction;)Lscala/util/Try;
      55: astore_3
      56: aload_3
      57: new           #103                // class akka/actor/ReflectiveDynamicAccess$$anonfun$getObjectFor$1
      60: dup
      61: aload_0
      62: aload_1
      63: aload_2
      64: invokespecial #104                // Method akka/actor/ReflectiveDynamicAccess$$anonfun$getObjectFor$1."<init>":(Lakka/actor/ReflectiveDynamicAccess;Ljava/lang/String;Lscala/reflect/ClassTag;)V
      67: invokevirtual #72                 // Method scala/util/Try.flatMap:(Lscala/Function1;)Lscala/util/Try;
      70: areturn

  public akka.actor.ReflectiveDynamicAccess(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field classLoader:Ljava/lang/ClassLoader;
       5: aload_0
       6: invokespecial #109                // Method akka/actor/DynamicAccess."<init>":()V
       9: return
}
