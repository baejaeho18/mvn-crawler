Compiled from "Map.scala"
public abstract class scala.collection.AbstractMap<A, B> extends scala.collection.AbstractIterable<scala.Tuple2<A, B>> implements scala.collection.Map<A, B> {
  public scala.collection.Map<A, B> empty();
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method scala/collection/Map$class.empty:(Lscala/collection/Map;)Lscala/collection/Map;
       4: areturn

  public scala.collection.Map<A, B> seq();
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method scala/collection/Map$class.seq:(Lscala/collection/Map;)Lscala/collection/Map;
       4: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<A, B>, scala.collection.Map<A, B>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method scala/collection/MapLike$class.newBuilder:(Lscala/collection/MapLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method scala/collection/MapLike$class.isEmpty:(Lscala/collection/MapLike;)Z
       4: ireturn

  public <B1> B1 getOrElse(A, scala.Function0<B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // Method scala/collection/MapLike$class.getOrElse:(Lscala/collection/MapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public B apply(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // Method scala/collection/MapLike$class.apply:(Lscala/collection/MapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public boolean contains(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method scala/collection/MapLike$class.contains:(Lscala/collection/MapLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean isDefinedAt(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // Method scala/collection/MapLike$class.isDefinedAt:(Lscala/collection/MapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.Set<A> keySet();
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method scala/collection/MapLike$class.keySet:(Lscala/collection/MapLike;)Lscala/collection/Set;
       4: areturn

  public scala.collection.Iterator<A> keysIterator();
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method scala/collection/MapLike$class.keysIterator:(Lscala/collection/MapLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterable<A> keys();
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method scala/collection/MapLike$class.keys:(Lscala/collection/MapLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable<B> values();
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method scala/collection/MapLike$class.values:(Lscala/collection/MapLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<B> valuesIterator();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method scala/collection/MapLike$class.valuesIterator:(Lscala/collection/MapLike;)Lscala/collection/Iterator;
       4: areturn

  public B default(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method scala/collection/MapLike$class.default:(Lscala/collection/MapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Map<A, B> filterKeys(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/collection/MapLike$class.filterKeys:(Lscala/collection/MapLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public <C> scala.collection.Map<A, C> mapValues(scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method scala/collection/MapLike$class.mapValues:(Lscala/collection/MapLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public <B1> scala.collection.Map<A, B1> updated(A, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // Method scala/collection/MapLike$class.updated:(Lscala/collection/MapLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Map;
       6: areturn

  public <B1> scala.collection.Map<A, B1> $plus(scala.Tuple2<A, B1>, scala.Tuple2<A, B1>, scala.collection.Seq<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #102                // Method scala/collection/MapLike$class.$plus:(Lscala/collection/MapLike;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/Map;
       7: areturn

  public <B1> scala.collection.Map<A, B1> $plus$plus(scala.collection.GenTraversableOnce<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #112                // Method scala/collection/MapLike$class.$plus$plus:(Lscala/collection/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/Map;
       5: areturn

  public scala.collection.Map<A, B> filterNot(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // Method scala/collection/MapLike$class.filterNot:(Lscala/collection/MapLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.Seq<scala.Tuple2<A, B>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #122                // Method scala/collection/MapLike$class.toSeq:(Lscala/collection/MapLike;)Lscala/collection/Seq;
       4: areturn

  public <C> scala.collection.mutable.Buffer<C> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #127                // Method scala/collection/MapLike$class.toBuffer:(Lscala/collection/MapLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<A, B>, scala.collection.parallel.ParMap<A, B>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #132                // Method scala/collection/MapLike$class.parCombiner:(Lscala/collection/MapLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #137                // Method scala/collection/MapLike$class.addString:(Lscala/collection/MapLike;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #148                // Method scala/collection/MapLike$class.stringPrefix:(Lscala/collection/MapLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method scala/collection/MapLike$class.toString:(Lscala/collection/MapLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #158                // Method scala/collection/generic/Subtractable$class.$minus:(Lscala/collection/generic/Subtractable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Subtractable;
       7: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/collection/generic/Subtractable$class.$minus$minus:(Lscala/collection/generic/Subtractable;Lscala/collection/GenTraversableOnce;)Lscala/collection/generic/Subtractable;
       5: areturn

  public <A1 extends A, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<A, C> andThen(scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #180                // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<A, scala.Option<B>> lift();
    Code:
       0: aload_0
       1: invokestatic  #186                // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public <A1 extends A, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #191                // Method scala/PartialFunction$class.applyOrElse:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<A, java.lang.Object> runWith(scala.Function1<B, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // Method scala/PartialFunction$class.runWith:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #205                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #212                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #217                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #222                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #227                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #232                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #237                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #243                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #248                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #253                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #258                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #263                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #268                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #274                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #279                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #284                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #289                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #294                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #299                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #305                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #310                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #315                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #320                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #325                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, B> compose(scala.Function1<A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #329                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #337                // Method scala/collection/GenMapLike$class.hashCode:(Lscala/collection/GenMapLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #341                // Method scala/collection/GenMapLike$class.equals:(Lscala/collection/GenMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #346                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #351                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #356                // Method repr:()Ljava/lang/Object;
       4: checkcast     #358                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #363                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #369                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #373                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #378                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #381                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #383                // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #386                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #389                // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #392                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Map;
       6: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #394                // Method mapValues:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #396                // Method filterKeys:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #398                // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #400                // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #403                // Method keySet:()Lscala/collection/Set;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #406                // Method seq:()Lscala/collection/Map;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #406                // Method seq:()Lscala/collection/Map;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #406                // Method seq:()Lscala/collection/Map;
       4: areturn

  public scala.collection.AbstractMap();
    Code:
       0: aload_0
       1: invokespecial #410                // Method scala/collection/AbstractIterable."<init>":()V
       4: aload_0
       5: invokestatic  #414                // Method scala/collection/GenMapLike$class.$init$:(Lscala/collection/GenMapLike;)V
       8: aload_0
       9: invokestatic  #417                // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      12: aload_0
      13: invokestatic  #420                // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      16: aload_0
      17: invokestatic  #423                // Method scala/collection/generic/Subtractable$class.$init$:(Lscala/collection/generic/Subtractable;)V
      20: aload_0
      21: invokestatic  #426                // Method scala/collection/MapLike$class.$init$:(Lscala/collection/MapLike;)V
      24: aload_0
      25: invokestatic  #429                // Method scala/collection/Map$class.$init$:(Lscala/collection/Map;)V
      28: return
}
