Compiled from "Wrappers.scala"
public class scala.collection.convert.Wrappers$JMapWrapper<A, B> extends scala.collection.mutable.AbstractMap<A, B> implements scala.collection.convert.Wrappers$JMapWrapperLike<A, B, scala.collection.convert.Wrappers$JMapWrapper<A, B>>, scala.Product, scala.Serializable {
  private final java.util.Map<A, B> underlying;

  public final scala.collection.convert.Wrappers $outer;

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.size:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)I
       4: ireturn

  public scala.Option<B> get(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.get:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scala.collection.convert.Wrappers$JMapWrapperLike<A, B, scala.collection.convert.Wrappers$JMapWrapper<A, B>> $plus$eq(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.$plus$eq:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.convert.Wrappers$JMapWrapperLike<A, B, scala.collection.convert.Wrappers$JMapWrapper<A, B>> $minus$eq(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.$minus$eq:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.Option<B> put(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.put:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       6: areturn

  public void update(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.update:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  public scala.Option<B> remove(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.remove:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.iterator:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)Lscala/collection/Iterator;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokestatic  #70                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.clear:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)V
       4: return

  public java.util.Map<A, B> underlying();
    Code:
       0: aload_0
       1: getfield      #73                 // Field underlying:Ljava/util/Map;
       4: areturn

  public scala.collection.convert.Wrappers$JMapWrapper<A, B> empty();
    Code:
       0: new           #2                  // class scala/collection/convert/Wrappers$JMapWrapper
       3: dup
       4: aload_0
       5: invokevirtual #79                 // Method scala$collection$convert$Wrappers$JMapWrapper$$$outer:()Lscala/collection/convert/Wrappers;
       8: new           #81                 // class java/util/HashMap
      11: dup
      12: invokespecial #84                 // Method java/util/HashMap."<init>":()V
      15: invokespecial #87                 // Method "<init>":(Lscala/collection/convert/Wrappers;Ljava/util/Map;)V
      18: areturn

  public <A, B> scala.collection.convert.Wrappers$JMapWrapper<A, B> copy(java.util.Map<A, B>);
    Code:
       0: new           #2                  // class scala/collection/convert/Wrappers$JMapWrapper
       3: dup
       4: aload_0
       5: invokevirtual #79                 // Method scala$collection$convert$Wrappers$JMapWrapper$$$outer:()Lscala/collection/convert/Wrappers;
       8: aload_1
       9: invokespecial #87                 // Method "<init>":(Lscala/collection/convert/Wrappers;Ljava/util/Map;)V
      12: areturn

  public <A, B> java.util.Map<A, B> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method underlying:()Ljava/util/Map;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #96                 // String JMapWrapper
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #101                // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #107                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #112                // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #92                 // Method underlying:()Ljava/util/Map;
      39: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #124                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #128                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public scala.collection.convert.Wrappers scala$collection$convert$Wrappers$JMapWrapper$$$outer();
    Code:
       0: aload_0
       1: getfield      #130                // Field $outer:Lscala/collection/convert/Wrappers;
       4: areturn

  public scala.collection.convert.Wrappers scala$collection$convert$Wrappers$JMapWrapperLike$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method scala$collection$convert$Wrappers$JMapWrapper$$$outer:()Lscala/collection/convert/Wrappers;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #136                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #141                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method repr:()Ljava/lang/Object;
       4: checkcast     #150                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #155                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #166                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #171                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #174                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #184                // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #188                // Method mapValues:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #191                // Method filterKeys:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #197                // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #202                // Method keySet:()Lscala/collection/Set;
       4: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #207                // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #214                // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #222                // Method result:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #225                // Method clone:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #229                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #229                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #229                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #236                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #241                // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #248                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #248                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #254                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #254                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #260                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #263                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.mutable.MapLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #263                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #267                // class scala/Tuple2
       5: invokevirtual #269                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       8: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #267                // class scala/Tuple2
       5: invokevirtual #269                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       8: areturn

  public scala.collection.mutable.MapLike $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #269                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method empty:()Lscala/collection/convert/Wrappers$JMapWrapper;
       4: areturn

  public scala.collection.mutable.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method empty:()Lscala/collection/convert/Wrappers$JMapWrapper;
       4: areturn

  public scala.collection.convert.Wrappers$JMapWrapper(scala.collection.convert.Wrappers, java.util.Map<A, B>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #73                 // Field underlying:Ljava/util/Map;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #130                // Field $outer:Lscala/collection/convert/Wrappers;
      16: aload_0
      17: invokespecial #274                // Method scala/collection/mutable/AbstractMap."<init>":()V
      20: aload_0
      21: invokestatic  #277                // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.$init$:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)V
      24: aload_0
      25: invokestatic  #282                // Method scala/Product$class.$init$:(Lscala/Product;)V
      28: return
}
