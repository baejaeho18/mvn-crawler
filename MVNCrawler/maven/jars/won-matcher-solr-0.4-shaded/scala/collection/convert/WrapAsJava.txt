Compiled from "WrapAsJava.scala"
public interface scala.collection.convert.WrapAsJava {
  public abstract <A> java.util.Iterator<A> asJavaIterator(scala.collection.Iterator<A>);

  public abstract <A> java.util.Enumeration<A> asJavaEnumeration(scala.collection.Iterator<A>);

  public abstract <A> java.lang.Iterable<A> asJavaIterable(scala.collection.Iterable<A>);

  public abstract <A> java.util.Collection<A> asJavaCollection(scala.collection.Iterable<A>);

  public abstract <A> java.util.List<A> bufferAsJavaList(scala.collection.mutable.Buffer<A>);

  public abstract <A> java.util.List<A> mutableSeqAsJavaList(scala.collection.mutable.Seq<A>);

  public abstract <A> java.util.List<A> seqAsJavaList(scala.collection.Seq<A>);

  public abstract <A> java.util.Set<A> mutableSetAsJavaSet(scala.collection.mutable.Set<A>);

  public abstract <A> java.util.Set<A> setAsJavaSet(scala.collection.Set<A>);

  public abstract <A, B> java.util.Map<A, B> mutableMapAsJavaMap(scala.collection.mutable.Map<A, B>);

  public abstract <A, B> java.util.Dictionary<A, B> asJavaDictionary(scala.collection.mutable.Map<A, B>);

  public abstract <A, B> java.util.Map<A, B> mapAsJavaMap(scala.collection.Map<A, B>);

  public abstract <A, B> java.util.concurrent.ConcurrentMap<A, B> mapAsJavaConcurrentMap(scala.collection.concurrent.Map<A, B>);
}
