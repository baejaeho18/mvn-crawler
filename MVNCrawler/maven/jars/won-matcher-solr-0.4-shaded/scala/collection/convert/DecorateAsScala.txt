Compiled from "DecorateAsScala.scala"
public interface scala.collection.convert.DecorateAsScala {
  public abstract <A> scala.collection.convert.Decorators$AsScala<scala.collection.Iterator<A>> asScalaIteratorConverter(java.util.Iterator<A>);

  public abstract <A> scala.collection.convert.Decorators$AsScala<scala.collection.Iterator<A>> enumerationAsScalaIteratorConverter(java.util.Enumeration<A>);

  public abstract <A> scala.collection.convert.Decorators$AsScala<scala.collection.Iterable<A>> iterableAsScalaIterableConverter(java.lang.Iterable<A>);

  public abstract <A> scala.collection.convert.Decorators$AsScala<scala.collection.Iterable<A>> collectionAsScalaIterableConverter(java.util.Collection<A>);

  public abstract <A> scala.collection.convert.Decorators$AsScala<scala.collection.mutable.Buffer<A>> asScalaBufferConverter(java.util.List<A>);

  public abstract <A> scala.collection.convert.Decorators$AsScala<scala.collection.mutable.Set<A>> asScalaSetConverter(java.util.Set<A>);

  public abstract <A, B> scala.collection.convert.Decorators$AsScala<scala.collection.mutable.Map<A, B>> mapAsScalaMapConverter(java.util.Map<A, B>);

  public abstract <A, B> scala.collection.convert.Decorators$AsScala<scala.collection.concurrent.Map<A, B>> mapAsScalaConcurrentMapConverter(java.util.concurrent.ConcurrentMap<A, B>);

  public abstract <A, B> scala.collection.convert.Decorators$AsScala<scala.collection.mutable.Map<A, B>> dictionaryAsScalaMapConverter(java.util.Dictionary<A, B>);

  public abstract scala.collection.convert.Decorators$AsScala<scala.collection.mutable.Map<java.lang.String, java.lang.String>> propertiesAsScalaMapConverter(java.util.Properties);
}
