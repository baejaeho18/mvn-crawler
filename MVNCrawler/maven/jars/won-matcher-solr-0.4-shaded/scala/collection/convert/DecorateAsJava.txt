Compiled from "DecorateAsJava.scala"
public interface scala.collection.convert.DecorateAsJava {
  public abstract <A> scala.collection.convert.Decorators$AsJava<java.util.Iterator<A>> asJavaIteratorConverter(scala.collection.Iterator<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJavaEnumeration<A> asJavaEnumerationConverter(scala.collection.Iterator<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJava<java.lang.Iterable<A>> asJavaIterableConverter(scala.collection.Iterable<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJavaCollection<A> asJavaCollectionConverter(scala.collection.Iterable<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJava<java.util.List<A>> bufferAsJavaListConverter(scala.collection.mutable.Buffer<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJava<java.util.List<A>> mutableSeqAsJavaListConverter(scala.collection.mutable.Seq<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJava<java.util.List<A>> seqAsJavaListConverter(scala.collection.Seq<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJava<java.util.Set<A>> mutableSetAsJavaSetConverter(scala.collection.mutable.Set<A>);

  public abstract <A> scala.collection.convert.Decorators$AsJava<java.util.Set<A>> setAsJavaSetConverter(scala.collection.Set<A>);

  public abstract <A, B> scala.collection.convert.Decorators$AsJava<java.util.Map<A, B>> mutableMapAsJavaMapConverter(scala.collection.mutable.Map<A, B>);

  public abstract <A, B> scala.collection.convert.Decorators$AsJavaDictionary<A, B> asJavaDictionaryConverter(scala.collection.mutable.Map<A, B>);

  public abstract <A, B> scala.collection.convert.Decorators$AsJava<java.util.Map<A, B>> mapAsJavaMapConverter(scala.collection.Map<A, B>);

  public abstract <A, B> scala.collection.convert.Decorators$AsJava<java.util.concurrent.ConcurrentMap<A, B>> mapAsJavaConcurrentMapConverter(scala.collection.concurrent.Map<A, B>);
}
