Compiled from "Wrappers.scala"
public class scala.collection.convert.Wrappers$JConcurrentMapWrapper<A, B> extends scala.collection.mutable.AbstractMap<A, B> implements scala.collection.convert.Wrappers$JMapWrapperLike<A, B, scala.collection.convert.Wrappers$JConcurrentMapWrapper<A, B>>, scala.collection.concurrent.Map<A, B>, scala.Product, scala.Serializable {
  private final java.util.concurrent.ConcurrentMap<A, B> underlying;

  public final scala.collection.convert.Wrappers $outer;

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.size:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)I
       4: ireturn

  public scala.collection.convert.Wrappers$JMapWrapperLike<A, B, scala.collection.convert.Wrappers$JConcurrentMapWrapper<A, B>> $plus$eq(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.$plus$eq:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.convert.Wrappers$JMapWrapperLike<A, B, scala.collection.convert.Wrappers$JConcurrentMapWrapper<A, B>> $minus$eq(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.$minus$eq:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.Option<B> put(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.put:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       6: areturn

  public void update(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.update:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  public scala.Option<B> remove(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.remove:(Lscala/collection/convert/Wrappers$JMapWrapperLike;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.iterator:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)Lscala/collection/Iterator;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.clear:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)V
       4: return

  public java.util.concurrent.ConcurrentMap<A, B> underlying();
    Code:
       0: aload_0
       1: getfield      #72                 // Field underlying:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public scala.Option<B> get(A);
    Code:
       0: getstatic     #79                 // Field scala/Option$.MODULE$:Lscala/Option$;
       3: aload_0
       4: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
       7: aload_1
       8: invokeinterface #86,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokevirtual #89                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      16: areturn

  public scala.collection.convert.Wrappers$JConcurrentMapWrapper<A, B> empty();
    Code:
       0: new           #2                  // class scala/collection/convert/Wrappers$JConcurrentMapWrapper
       3: dup
       4: aload_0
       5: invokevirtual #95                 // Method scala$collection$convert$Wrappers$JConcurrentMapWrapper$$$outer:()Lscala/collection/convert/Wrappers;
       8: new           #97                 // class java/util/concurrent/ConcurrentHashMap
      11: dup
      12: invokespecial #100                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      15: invokespecial #103                // Method "<init>":(Lscala/collection/convert/Wrappers;Ljava/util/concurrent/ConcurrentMap;)V
      18: areturn

  public scala.Option<B> putIfAbsent(A, B);
    Code:
       0: getstatic     #79                 // Field scala/Option$.MODULE$:Lscala/Option$;
       3: aload_0
       4: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
       7: aload_1
       8: aload_2
       9: invokeinterface #107,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #89                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      17: areturn

  public boolean remove(A, B);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #110,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  public scala.Option<B> replace(A, B);
    Code:
       0: getstatic     #79                 // Field scala/Option$.MODULE$:Lscala/Option$;
       3: aload_0
       4: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
       7: aload_1
       8: aload_2
       9: invokeinterface #113,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #89                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      17: areturn

  public boolean replace(A, B, B);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #116,  4          // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  public <A, B> scala.collection.convert.Wrappers$JConcurrentMapWrapper<A, B> copy(java.util.concurrent.ConcurrentMap<A, B>);
    Code:
       0: new           #2                  // class scala/collection/convert/Wrappers$JConcurrentMapWrapper
       3: dup
       4: aload_0
       5: invokevirtual #95                 // Method scala$collection$convert$Wrappers$JConcurrentMapWrapper$$$outer:()Lscala/collection/convert/Wrappers;
       8: aload_1
       9: invokespecial #103                // Method "<init>":(Lscala/collection/convert/Wrappers;Ljava/util/concurrent/ConcurrentMap;)V
      12: areturn

  public <A, B> java.util.concurrent.ConcurrentMap<A, B> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #125                // String JConcurrentMapWrapper
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #130                // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #136                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #141                // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #144                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
      39: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #152                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #156                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public scala.collection.convert.Wrappers scala$collection$convert$Wrappers$JConcurrentMapWrapper$$$outer();
    Code:
       0: aload_0
       1: getfield      #158                // Field $outer:Lscala/collection/convert/Wrappers;
       4: areturn

  public scala.collection.convert.Wrappers scala$collection$convert$Wrappers$JMapWrapperLike$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method scala$collection$convert$Wrappers$JConcurrentMapWrapper$$$outer:()Lscala/collection/convert/Wrappers;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #169                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #176                // Method repr:()Ljava/lang/Object;
       4: checkcast     #178                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #183                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #189                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #199                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #202                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #207                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #212                // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #216                // Method mapValues:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #219                // Method filterKeys:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #222                // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #225                // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method keySet:()Lscala/collection/Set;
       4: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #235                // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #242                // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #250                // Method result:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #253                // Method clone:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #256                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #256                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #256                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #263                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #268                // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #275                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #275                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #281                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #281                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #287                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #290                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.mutable.MapLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #290                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #294                // class scala/Tuple2
       5: invokevirtual #296                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       8: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #294                // class scala/Tuple2
       5: invokevirtual #296                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       8: areturn

  public scala.collection.mutable.MapLike $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #296                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/convert/Wrappers$JMapWrapperLike;
       5: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #300                // Method empty:()Lscala/collection/convert/Wrappers$JConcurrentMapWrapper;
       4: areturn

  public scala.collection.mutable.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #300                // Method empty:()Lscala/collection/convert/Wrappers$JConcurrentMapWrapper;
       4: areturn

  public java.util.Map underlying();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public scala.collection.convert.Wrappers$JConcurrentMapWrapper(scala.collection.convert.Wrappers, java.util.concurrent.ConcurrentMap<A, B>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #72                 // Field underlying:Ljava/util/concurrent/ConcurrentMap;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #158                // Field $outer:Lscala/collection/convert/Wrappers;
      16: aload_0
      17: invokespecial #302                // Method scala/collection/mutable/AbstractMap."<init>":()V
      20: aload_0
      21: invokestatic  #305                // Method scala/collection/convert/Wrappers$JMapWrapperLike$class.$init$:(Lscala/collection/convert/Wrappers$JMapWrapperLike;)V
      24: aload_0
      25: invokestatic  #310                // Method scala/Product$class.$init$:(Lscala/Product;)V
      28: return
}
