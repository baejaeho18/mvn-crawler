Compiled from "Iterator.scala"
public final class scala.collection.Iterator$JoinIterator<A> implements scala.collection.Iterator<A> {
  private final scala.collection.Iterator<A> lhs;

  private final scala.Function0<scala.collection.GenTraversableOnce<A>> that;

  private int state;

  private scala.collection.Iterator<A> rhs;

  private volatile boolean bitmap$0;

  private scala.collection.Iterator rhs$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #23                 // Field bitmap$0:Z
       8: ifne          37
      11: aload_0
      12: aload_0
      13: getfield      #25                 // Field that:Lscala/Function0;
      16: invokeinterface #31,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      21: checkcast     #33                 // class scala/collection/GenTraversableOnce
      24: invokeinterface #36,  1           // InterfaceMethod scala/collection/GenTraversableOnce.toIterator:()Lscala/collection/Iterator;
      29: putfield      #38                 // Field rhs:Lscala/collection/Iterator;
      32: aload_0
      33: iconst_1
      34: putfield      #23                 // Field bitmap$0:Z
      37: getstatic     #44                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      40: pop
      41: aload_0
      42: monitorexit
      43: aload_0
      44: aconst_null
      45: putfield      #25                 // Field that:Lscala/Function0;
      48: aload_0
      49: getfield      #38                 // Field rhs:Lscala/collection/Iterator;
      52: areturn
      53: aload_1
      54: monitorexit
      55: athrow
    Exception table:
       from    to  target type
           4    43    53   any

  public scala.collection.Iterator<A> seq();
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<A> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #70                 // Method scala/collection/Iterator$class.take:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<A> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #74                 // Method scala/collection/Iterator$class.drop:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<A> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #79                 // Method scala/collection/Iterator$class.slice:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method scala/collection/Iterator$class.map:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<A, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<A> filter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<A, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<A> withFilter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<A> filterNot(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #113                // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #126                // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<A> takeWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // Method scala/collection/Iterator$class.takeWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<A>, scala.collection.Iterator<A>> partition(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<A>, scala.collection.Iterator<A>> span(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method scala/collection/Iterator$class.span:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<A> dropWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #140                // Method scala/collection/Iterator$class.dropWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<A, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #149                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<A, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #154                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #159                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/collection/Iterator$class.foreach:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #171                // Method scala/collection/Iterator$class.forall:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // Method scala/collection/Iterator$class.exists:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #179                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<A> find(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // Method scala/collection/Iterator$class.find:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #189                // Method scala/collection/Iterator$class.indexWhere:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // Method scala/collection/Iterator$class.indexOf:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public scala.collection.BufferedIterator<A> buffered();
    Code:
       0: aload_0
       1: invokestatic  #199                // Method scala/collection/Iterator$class.buffered:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<A>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #204                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<A>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #210                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #216                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<A>, scala.collection.Iterator<A>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #221                // Method scala/collection/Iterator$class.duplicate:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #226                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #233                // Method scala/collection/Iterator$class.copyToArray:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #239                // Method scala/collection/Iterator$class.sameElements:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<A> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #244                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<A> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #246                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokestatic  #251                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #256                // Method scala/collection/Iterator$class.toString:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #259                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<A> reversed();
    Code:
       0: aload_0
       1: invokestatic  #266                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #269                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #273                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #277                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #282                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #287                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #290                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #293                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #296                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #301                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #304                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #309                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #312                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #315                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #318                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #321                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, A, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #326                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #338                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> A min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #348                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A maxBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #353                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> A minBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #356                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #367                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #371                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #376                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<A> toList();
    Code:
       0: aload_0
       1: invokestatic  #381                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<A> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #386                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<A> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #391                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<A> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #396                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #401                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #406                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<A> toVector();
    Code:
       0: aload_0
       1: invokestatic  #411                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, A, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<A, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #423                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #430                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #440                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #445                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #451                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #455                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  private scala.collection.Iterator<A> rhs();
    Code:
       0: aload_0
       1: getfield      #23                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #38                 // Field rhs:Lscala/collection/Iterator;
      11: goto          18
      14: aload_0
      15: invokespecial #457                // Method rhs$lzycompute:()Lscala/collection/Iterator;
      18: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #460                // Field state:I
       4: istore_1
       5: iload_1
       6: tableswitch   { // 0 to 1
                     0: 44
                     1: 40
               default: 28
          }
      28: aload_0
      29: invokespecial #462                // Method rhs:()Lscala/collection/Iterator;
      32: invokeinterface #464,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      37: goto          79
      40: iconst_1
      41: goto          79
      44: aload_0
      45: getfield      #466                // Field lhs:Lscala/collection/Iterator;
      48: invokeinterface #464,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      53: ifeq          65
      56: aload_0
      57: iconst_1
      58: putfield      #460                // Field state:I
      61: iconst_1
      62: goto          79
      65: aload_0
      66: iconst_2
      67: putfield      #460                // Field state:I
      70: aload_0
      71: invokespecial #462                // Method rhs:()Lscala/collection/Iterator;
      74: invokeinterface #464,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      79: ireturn

  public A next();
    Code:
       0: aload_0
       1: getfield      #460                // Field state:I
       4: istore_1
       5: iload_1
       6: tableswitch   { // 0 to 1
                     0: 57
                     1: 40
               default: 28
          }
      28: aload_0
      29: invokespecial #462                // Method rhs:()Lscala/collection/Iterator;
      32: invokeinterface #469,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      37: goto          95
      40: aload_0
      41: iconst_0
      42: putfield      #460                // Field state:I
      45: aload_0
      46: getfield      #466                // Field lhs:Lscala/collection/Iterator;
      49: invokeinterface #469,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      54: goto          95
      57: aload_0
      58: getfield      #466                // Field lhs:Lscala/collection/Iterator;
      61: invokeinterface #464,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      66: ifeq          81
      69: aload_0
      70: getfield      #466                // Field lhs:Lscala/collection/Iterator;
      73: invokeinterface #469,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      78: goto          95
      81: aload_0
      82: iconst_2
      83: putfield      #460                // Field state:I
      86: aload_0
      87: invokespecial #462                // Method rhs:()Lscala/collection/Iterator;
      90: invokeinterface #469,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      95: areturn

  public <B> scala.collection.Iterator$ConcatIterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: new           #473                // class scala/collection/Iterator$ConcatIterator
       3: dup
       4: aload_0
       5: getstatic     #479                // Field scala/package$.MODULE$:Lscala/package$;
       8: invokevirtual #483                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
      11: getstatic     #488                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: iconst_1
      15: anewarray     #27                 // class scala/Function0
      18: dup
      19: iconst_0
      20: new           #490                // class scala/collection/Iterator$JoinIterator$$anonfun$$plus$plus$2
      23: dup
      24: aload_0
      25: aload_1
      26: invokespecial #494                // Method scala/collection/Iterator$JoinIterator$$anonfun$$plus$plus$2."<init>":(Lscala/collection/Iterator$JoinIterator;Lscala/Function0;)V
      29: aastore
      30: checkcast     #496                // class "[Ljava/lang/Object;"
      33: invokevirtual #500                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      36: invokevirtual #505                // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      39: checkcast     #507                // class scala/collection/immutable/Vector
      42: invokespecial #510                // Method scala/collection/Iterator$ConcatIterator."<init>":(Lscala/collection/Iterator;Lscala/collection/immutable/Vector;)V
      45: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #513                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #516                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #519                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #522                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #525                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #528                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator $plus$plus(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #531                // Method $plus$plus:(Lscala/Function0;)Lscala/collection/Iterator$ConcatIterator;
       5: areturn

  public scala.collection.Iterator$JoinIterator(scala.collection.Iterator<A>, scala.Function0<scala.collection.GenTraversableOnce<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #466                // Field lhs:Lscala/collection/Iterator;
       5: aload_0
       6: aload_2
       7: putfield      #25                 // Field that:Lscala/Function0;
      10: aload_0
      11: invokespecial #535                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #539                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      18: aload_0
      19: invokestatic  #542                // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      22: aload_0
      23: iconst_0
      24: putfield      #460                // Field state:I
      27: return
}
