Compiled from "SeqViewLike.scala"
public abstract class scala.collection.SeqViewLike$AbstractTransformed<B> implements scala.collection.SeqViewLike<A, Coll, This>.Transformed<B> {
  public final scala.collection.SeqViewLike $outer;

  private final java.lang.Object underlying;

  private volatile boolean bitmap$0;

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method scala/collection/SeqViewLike$Transformed$class.toString:(Lscala/collection/SeqViewLike$Transformed;)Ljava/lang/String;
       4: areturn

  public <B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newForced(scala.Function0<scala.collection.GenSeq<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #30                 // Method scala/collection/SeqViewLike$class.newForced:(Lscala/collection/SeqViewLike;Lscala/Function0;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public <B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newAppended(scala.collection.GenTraversable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method scala/collection/SeqViewLike$class.newAppended:(Lscala/collection/SeqViewLike;Lscala/collection/GenTraversable;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public <B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newMapped(scala.Function1<B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #44                 // Method scala/collection/SeqViewLike$class.newMapped:(Lscala/collection/SeqViewLike;Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public <B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newFlatMapped(scala.Function1<B, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // Method scala/collection/SeqViewLike$class.newFlatMapped:(Lscala/collection/SeqViewLike;Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newFiltered(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method scala/collection/SeqViewLike$class.newFiltered:(Lscala/collection/SeqViewLike;Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method scala/collection/SeqViewLike$class.newSliced:(Lscala/collection/SeqViewLike;Lscala/collection/generic/SliceInterval;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newDroppedWhile(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method scala/collection/SeqViewLike$class.newDroppedWhile:(Lscala/collection/SeqViewLike;Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newTakenWhile(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method scala/collection/SeqViewLike$class.newTakenWhile:(Lscala/collection/SeqViewLike;Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public <B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<scala.Tuple2<B, B>> newZipped(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method scala/collection/SeqViewLike$class.newZipped:(Lscala/collection/SeqViewLike;Lscala/collection/GenIterable;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public <A1, B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<scala.Tuple2<A1, B>> newZippedAll(scala.collection.GenIterable<B>, A1, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #77                 // Method scala/collection/SeqViewLike$class.newZippedAll:(Lscala/collection/SeqViewLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/SeqViewLike$Transformed;
       7: areturn

  public scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newReversed();
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method scala/collection/SeqViewLike$class.newReversed:(Lscala/collection/SeqViewLike;)Lscala/collection/SeqViewLike$Transformed;
       4: areturn

  public <B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newPatched(int, scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #89                 // Method scala/collection/SeqViewLike$class.newPatched:(Lscala/collection/SeqViewLike;ILscala/collection/GenSeq;I)Lscala/collection/SeqViewLike$Transformed;
       7: areturn

  public <B> scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newPrepended(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method scala/collection/SeqViewLike$class.newPrepended:(Lscala/collection/SeqViewLike;Ljava/lang/Object;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #105                // Method scala/collection/SeqViewLike$class.newTaken:(Lscala/collection/SeqViewLike;I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> newDropped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #109                // Method scala/collection/SeqViewLike$class.newDropped:(Lscala/collection/SeqViewLike;I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqView<B, Coll> reverse();
    Code:
       0: aload_0
       1: invokestatic  #114                // Method scala/collection/SeqViewLike$class.reverse:(Lscala/collection/SeqViewLike;)Lscala/collection/SeqView;
       4: areturn

  public <B, That> That patch(int, scala.collection.GenSeq<B>, int, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #119                // Method scala/collection/SeqViewLike$class.patch:(Lscala/collection/SeqViewLike;ILscala/collection/GenSeq;ILscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <B, That> That padTo(int, B, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #128                // Method scala/collection/SeqViewLike$class.padTo:(Lscala/collection/SeqViewLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That reverseMap(scala.Function1<B, B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // Method scala/collection/SeqViewLike$class.reverseMap:(Lscala/collection/SeqViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That updated(int, B, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #137                // Method scala/collection/SeqViewLike$class.updated:(Lscala/collection/SeqViewLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That $plus$colon(B, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #143                // Method scala/collection/SeqViewLike$class.$plus$colon:(Lscala/collection/SeqViewLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $colon$plus(B, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // Method scala/collection/SeqViewLike$class.$colon$plus:(Lscala/collection/SeqViewLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That union(scala.collection.GenSeq<B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // Method scala/collection/SeqViewLike$class.union:(Lscala/collection/SeqViewLike;Lscala/collection/GenSeq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B> scala.collection.SeqView<B, Coll> diff(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #156                // Method scala/collection/SeqViewLike$class.diff:(Lscala/collection/SeqViewLike;Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public <B> scala.collection.SeqView<B, Coll> intersect(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #159                // Method scala/collection/SeqViewLike$class.intersect:(Lscala/collection/SeqViewLike;Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public <B> scala.collection.SeqView<B, Coll> sorted(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #164                // Method scala/collection/SeqViewLike$class.sorted:(Lscala/collection/SeqViewLike;Lscala/math/Ordering;)Lscala/collection/SeqView;
       5: areturn

  public scala.collection.SeqView<B, Coll> sortWith(scala.Function2<B, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #171                // Method scala/collection/SeqViewLike$class.sortWith:(Lscala/collection/SeqViewLike;Lscala/Function2;)Lscala/collection/SeqView;
       5: areturn

  public <B> scala.collection.SeqView<B, Coll> sortBy(scala.Function1<B, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #178                // Method scala/collection/SeqViewLike$class.sortBy:(Lscala/collection/SeqViewLike;Lscala/Function1;Lscala/math/Ordering;)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.Iterator<scala.collection.SeqView<B, Coll>> combinations(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #183                // Method scala/collection/SeqViewLike$class.combinations:(Lscala/collection/SeqViewLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.SeqView<B, Coll>> permutations();
    Code:
       0: aload_0
       1: invokestatic  #188                // Method scala/collection/SeqViewLike$class.permutations:(Lscala/collection/SeqViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.SeqView<B, Coll> distinct();
    Code:
       0: aload_0
       1: invokestatic  #191                // Method scala/collection/SeqViewLike$class.distinct:(Lscala/collection/SeqViewLike;)Lscala/collection/SeqView;
       4: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #195                // Method scala/collection/SeqViewLike$class.stringPrefix:(Lscala/collection/SeqViewLike;)Ljava/lang/String;
       4: areturn

  public <U> void foreach(scala.Function1<B, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // Method scala/collection/IterableViewLike$Transformed$class.foreach:(Lscala/collection/IterableViewLike$Transformed;Lscala/Function1;)V
       5: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #207                // Method scala/collection/IterableViewLike$Transformed$class.isEmpty:(Lscala/collection/IterableViewLike$Transformed;)Z
       4: ireturn

  private java.lang.Object underlying$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #211                // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #216                // Method scala/collection/TraversableViewLike$Transformed$class.underlying:(Lscala/collection/TraversableViewLike$Transformed;)Ljava/lang/Object;
      16: putfield      #218                // Field underlying:Ljava/lang/Object;
      19: aload_0
      20: iconst_1
      21: putfield      #211                // Field bitmap$0:Z
      24: getstatic     #224                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: pop
      28: aload_0
      29: monitorexit
      30: aload_0
      31: getfield      #218                // Field underlying:Ljava/lang/Object;
      34: areturn
      35: aload_1
      36: monitorexit
      37: athrow
    Exception table:
       from    to  target type
           4    30    35   any

  public Coll underlying();
    Code:
       0: aload_0
       1: getfield      #211                // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #218                // Field underlying:Ljava/lang/Object;
      11: goto          18
      14: aload_0
      15: invokespecial #228                // Method underlying$lzycompute:()Ljava/lang/Object;
      18: areturn

  public final java.lang.String viewIdString();
    Code:
       0: aload_0
       1: invokestatic  #232                // Method scala/collection/TraversableViewLike$Transformed$class.viewIdString:(Lscala/collection/TraversableViewLike$Transformed;)Ljava/lang/String;
       4: areturn

  public scala.Option<B> headOption();
    Code:
       0: aload_0
       1: invokestatic  #237                // Method scala/collection/TraversableViewLike$Transformed$class.headOption:(Lscala/collection/TraversableViewLike$Transformed;)Lscala/Option;
       4: areturn

  public scala.Option<B> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #240                // Method scala/collection/TraversableViewLike$Transformed$class.lastOption:(Lscala/collection/TraversableViewLike$Transformed;)Lscala/Option;
       4: areturn

  public scala.collection.IterableView drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #247                // Method scala/collection/IterableViewLike$class.drop:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.IterableView take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #250                // Method scala/collection/IterableViewLike$class.take:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #255                // Method scala/collection/IterableViewLike$class.zip:(Lscala/collection/IterableViewLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #260                // Method scala/collection/IterableViewLike$class.zipWithIndex:(Lscala/collection/IterableViewLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #265                // Method scala/collection/IterableViewLike$class.zipAll:(Lscala/collection/IterableViewLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public scala.collection.Iterator<scala.collection.SeqView<B, Coll>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #271                // Method scala/collection/IterableViewLike$class.grouped:(Lscala/collection/IterableViewLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.SeqView<B, Coll>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #277                // Method scala/collection/IterableViewLike$class.sliding:(Lscala/collection/IterableViewLike;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.collection.SeqView<B, Coll>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #280                // Method scala/collection/IterableViewLike$class.sliding:(Lscala/collection/IterableViewLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.IterableView dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #283                // Method scala/collection/IterableViewLike$class.dropRight:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.IterableView takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #286                // Method scala/collection/IterableViewLike$class.takeRight:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.TraversableView scala$collection$TraversableViewLike$$super$tail();
    Code:
       0: aload_0
       1: invokestatic  #294                // Method scala/collection/TraversableLike$class.tail:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: checkcast     #296                // class scala/collection/TraversableView
       7: areturn

  public java.lang.String viewIdentifier();
    Code:
       0: aload_0
       1: invokestatic  #302                // Method scala/collection/TraversableViewLike$class.viewIdentifier:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String viewToString();
    Code:
       0: aload_0
       1: invokestatic  #305                // Method scala/collection/TraversableViewLike$class.viewToString:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.Builder<B, scala.collection.SeqView<B, Coll>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #310                // Method scala/collection/TraversableViewLike$class.newBuilder:(Lscala/collection/TraversableViewLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B, That> That force(scala.collection.generic.CanBuildFrom<Coll, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // Method scala/collection/TraversableViewLike$class.force:(Lscala/collection/TraversableViewLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #319                // Method scala/collection/TraversableViewLike$class.$plus$plus:(Lscala/collection/TraversableViewLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<B, B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // Method scala/collection/TraversableViewLike$class.map:(Lscala/collection/TraversableViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That collect(scala.PartialFunction<B, B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #329                // Method scala/collection/TraversableViewLike$class.collect:(Lscala/collection/TraversableViewLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<B, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #334                // Method scala/collection/TraversableViewLike$class.flatMap:(Lscala/collection/TraversableViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B> scala.collection.TraversableViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<B> flatten(scala.Function1<B, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // Method scala/collection/TraversableViewLike$class.flatten:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableView filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #345                // Method scala/collection/TraversableViewLike$class.filter:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #348                // Method scala/collection/TraversableViewLike$class.withFilter:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.Tuple2<scala.collection.SeqView<B, Coll>, scala.collection.SeqView<B, Coll>> partition(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #353                // Method scala/collection/TraversableViewLike$class.partition:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.TraversableView init();
    Code:
       0: aload_0
       1: invokestatic  #357                // Method scala/collection/TraversableViewLike$class.init:(Lscala/collection/TraversableViewLike;)Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.TraversableView slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #362                // Method scala/collection/TraversableViewLike$class.slice:(Lscala/collection/TraversableViewLike;II)Lscala/collection/TraversableView;
       6: areturn

  public scala.collection.TraversableView dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #366                // Method scala/collection/TraversableViewLike$class.dropWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #369                // Method scala/collection/TraversableViewLike$class.takeWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.Tuple2<scala.collection.SeqView<B, Coll>, scala.collection.SeqView<B, Coll>> span(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #372                // Method scala/collection/TraversableViewLike$class.span:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.SeqView<B, Coll>, scala.collection.SeqView<B, Coll>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #377                // Method scala/collection/TraversableViewLike$class.splitAt:(Lscala/collection/TraversableViewLike;I)Lscala/Tuple2;
       5: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #382                // Method scala/collection/TraversableViewLike$class.scanLeft:(Lscala/collection/TraversableViewLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #387                // Method scala/collection/TraversableViewLike$class.scanRight:(Lscala/collection/TraversableViewLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.SeqView<B, Coll>> groupBy(scala.Function1<B, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #392                // Method scala/collection/TraversableViewLike$class.groupBy:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <A1, A2> scala.Tuple2<scala.collection.TraversableViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<A1>, scala.collection.TraversableViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<A2>> unzip(scala.Function1<B, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #395                // Method scala/collection/TraversableViewLike$class.unzip:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.TraversableViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<A1>, scala.collection.TraversableViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<A2>, scala.collection.TraversableViewLike<B, Coll, scala.collection.SeqView<B, Coll>>.Transformed<A3>> unzip3(scala.Function1<B, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #401                // Method scala/collection/TraversableViewLike$class.unzip3:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.TraversableView filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #405                // Method scala/collection/TraversableViewLike$class.filterNot:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.Iterator<scala.collection.SeqView<B, Coll>> inits();
    Code:
       0: aload_0
       1: invokestatic  #409                // Method scala/collection/TraversableViewLike$class.inits:(Lscala/collection/TraversableViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.SeqView<B, Coll>> tails();
    Code:
       0: aload_0
       1: invokestatic  #412                // Method scala/collection/TraversableViewLike$class.tails:(Lscala/collection/TraversableViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.TraversableView tail();
    Code:
       0: aload_0
       1: invokestatic  #414                // Method scala/collection/TraversableViewLike$class.tail:(Lscala/collection/TraversableViewLike;)Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.Seq<B> thisSeq();
    Code:
       0: aload_0
       1: invokestatic  #421                // Method scala/collection/ViewMkString$class.thisSeq:(Lscala/collection/ViewMkString;)Lscala/collection/Seq;
       4: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #425                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;)Ljava/lang/String;
       4: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #429                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #435                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #442                // Method scala/collection/ViewMkString$class.addString:(Lscala/collection/ViewMkString;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.Seq> companion();
    Code:
       0: aload_0
       1: invokestatic  #451                // Method scala/collection/Seq$class.companion:(Lscala/collection/Seq;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.Seq<B> seq();
    Code:
       0: aload_0
       1: invokestatic  #455                // Method scala/collection/Seq$class.seq:(Lscala/collection/Seq;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<B> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #461                // Method scala/collection/SeqLike$class.thisCollection:(Lscala/collection/SeqLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #466                // Method scala/collection/SeqLike$class.toCollection:(Lscala/collection/SeqLike;Ljava/lang/Object;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.parallel.Combiner<B, scala.collection.parallel.ParSeq<B>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #472                // Method scala/collection/SeqLike$class.parCombiner:(Lscala/collection/SeqLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public int lengthCompare(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #477                // Method scala/collection/SeqLike$class.lengthCompare:(Lscala/collection/SeqLike;I)I
       5: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #481                // Method scala/collection/SeqLike$class.size:(Lscala/collection/SeqLike;)I
       4: ireturn

  public int segmentLength(scala.Function1<B, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #486                // Method scala/collection/SeqLike$class.segmentLength:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere(scala.Function1<B, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #489                // Method scala/collection/SeqLike$class.indexWhere:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<B, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #492                // Method scala/collection/SeqLike$class.lastIndexWhere:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public scala.collection.Iterator<B> reverseIterator();
    Code:
       0: aload_0
       1: invokestatic  #496                // Method scala/collection/SeqLike$class.reverseIterator:(Lscala/collection/SeqLike;)Lscala/collection/Iterator;
       4: areturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #501                // Method scala/collection/SeqLike$class.startsWith:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)Z
       6: ireturn

  public <B> boolean endsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #507                // Method scala/collection/SeqLike$class.endsWith:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <B> int indexOfSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #512                // Method scala/collection/SeqLike$class.indexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)I
       5: ireturn

  public <B> int indexOfSlice(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #516                // Method scala/collection/SeqLike$class.indexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)I
       6: ireturn

  public <B> int lastIndexOfSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #519                // Method scala/collection/SeqLike$class.lastIndexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)I
       5: ireturn

  public <B> int lastIndexOfSlice(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #521                // Method scala/collection/SeqLike$class.lastIndexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)I
       6: ireturn

  public <B> boolean containsSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #524                // Method scala/collection/SeqLike$class.containsSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <A1> boolean contains(A1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #529                // Method scala/collection/SeqLike$class.contains:(Lscala/collection/SeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public <B> boolean corresponds(scala.collection.GenSeq<B>, scala.Function2<B, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #534                // Method scala/collection/SeqLike$class.corresponds:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Seq<B> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #537                // Method scala/collection/SeqLike$class.toSeq:(Lscala/collection/SeqLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.Range indices();
    Code:
       0: aload_0
       1: invokestatic  #542                // Method scala/collection/SeqLike$class.indices:(Lscala/collection/SeqLike;)Lscala/collection/immutable/Range;
       4: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #546                // Method scala/collection/SeqLike$class.view:(Lscala/collection/SeqLike;)Lscala/collection/SeqView;
       4: areturn

  public scala.collection.SeqView<B, scala.collection.SeqView<B, Coll>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #550                // Method scala/collection/SeqLike$class.view:(Lscala/collection/SeqLike;II)Lscala/collection/SeqView;
       6: areturn

  public boolean isDefinedAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #557                // Method scala/collection/GenSeqLike$class.isDefinedAt:(Lscala/collection/GenSeqLike;I)Z
       5: ireturn

  public int prefixLength(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #563                // Method scala/collection/GenSeqLike$class.prefixLength:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #565                // Method scala/collection/GenSeqLike$class.indexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #570                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #574                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int lastIndexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #577                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int lastIndexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #579                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #581                // Method scala/collection/GenSeqLike$class.lastIndexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #584                // Method scala/collection/GenSeqLike$class.startsWith:(Lscala/collection/GenSeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #588                // Method scala/collection/GenSeqLike$class.hashCode:(Lscala/collection/GenSeqLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #592                // Method scala/collection/GenSeqLike$class.equals:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean forall(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #599                // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #602                // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<B> find(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #607                // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldRight(B, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #612                // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<B> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #622                // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<B> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #626                // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public B head();
    Code:
       0: aload_0
       1: invokestatic  #630                // Method scala/collection/IterableLike$class.head:(Lscala/collection/IterableLike;)Ljava/lang/Object;
       4: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #635                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #640                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<B> toStream();
    Code:
       0: aload_0
       1: invokestatic  #645                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #649                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.Seq<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #655                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #660                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #662                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #666                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #669                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #674                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #679                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.SeqView<B, Coll>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #684                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public B last();
    Code:
       0: aload_0
       1: invokestatic  #688                // Method scala/collection/TraversableLike$class.last:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #693                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #699                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public scala.collection.Traversable<B> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #704                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, B, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #708                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #715                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<B> reversed();
    Code:
       0: aload_0
       1: invokestatic  #722                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #726                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #730                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #735                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #739                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #742                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #745                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #749                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #754                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #757                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #760                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #763                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #766                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, B, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #771                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #778                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #783                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #788                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> B max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #792                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> B maxBy(scala.Function1<B, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #797                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> B minBy(scala.Function1<B, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #800                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #805                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #811                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #815                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #820                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<B> toList();
    Code:
       0: aload_0
       1: invokestatic  #825                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<B> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #830                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #835                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #840                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<B> toVector();
    Code:
       0: aload_0
       1: invokestatic  #845                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<B, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #850                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #856                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #860                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public <A1, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #867                // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<java.lang.Object, C> andThen(scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #872                // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<java.lang.Object, scala.Option<B>> lift();
    Code:
       0: aload_0
       1: invokestatic  #878                // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #883                // Method scala/PartialFunction$class.applyOrElse:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<java.lang.Object, java.lang.Object> runWith(scala.Function1<B, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #890                // Method scala/PartialFunction$class.runWith:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #898                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #905                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #910                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #915                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #920                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #925                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #930                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #936                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #941                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #946                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #951                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #956                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #960                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #965                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #970                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #973                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #978                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #983                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #988                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #994                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #999                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1004               // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1009               // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1014               // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, B> compose(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1018               // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.collection.SeqViewLike scala$collection$SeqViewLike$AbstractTransformed$$$outer();
    Code:
       0: aload_0
       1: getfield      #1023               // Field $outer:Lscala/collection/SeqViewLike;
       4: areturn

  public scala.collection.SeqViewLike scala$collection$SeqViewLike$Transformed$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #1026               // Method scala$collection$SeqViewLike$AbstractTransformed$$$outer:()Lscala/collection/SeqViewLike;
       4: areturn

  public scala.collection.IterableViewLike scala$collection$IterableViewLike$Transformed$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #1026               // Method scala$collection$SeqViewLike$AbstractTransformed$$$outer:()Lscala/collection/SeqViewLike;
       4: areturn

  public scala.collection.TraversableViewLike scala$collection$TraversableViewLike$Transformed$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #1026               // Method scala$collection$SeqViewLike$AbstractTransformed$$$outer:()Lscala/collection/SeqViewLike;
       4: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1032               // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1035               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1038               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #1041               // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1044               // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1049               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #1051               // Method isDefinedAt:(I)Z
       8: ireturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1053               // Method view:(II)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.IterableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1053               // Method view:(II)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method view:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.IterableView view();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method view:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1060               // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1063               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1063               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1066               // Method thisCollection:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Iterable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1066               // Method thisCollection:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1069               // Method seq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1069               // Method seq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1069               // Method seq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #1071               // Method tail:()Lscala/collection/TraversableView;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1074               // Method filterNot:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1077               // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1079               // Method takeWhile:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1081               // Method dropWhile:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1083               // Method slice:(II)Lscala/collection/TraversableView;
       6: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #1085               // Method init:()Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.generic.FilterMonadic withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1088               // Method withFilter:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1090               // Method filter:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1092               // Method flatten:(Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1095               // Method takeRight:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1097               // Method dropRight:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1099               // Method take:(I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.TraversableView take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1099               // Method take:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1102               // Method drop:(I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.TraversableView drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1102               // Method drop:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object distinct();
    Code:
       0: aload_0
       1: invokevirtual #1104               // Method distinct:()Lscala/collection/SeqView;
       4: areturn

  public java.lang.Object sortBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1106               // Method sortBy:(Lscala/Function1;Lscala/math/Ordering;)Lscala/collection/SeqView;
       6: areturn

  public java.lang.Object sortWith(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1108               // Method sortWith:(Lscala/Function2;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object sorted(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1110               // Method sorted:(Lscala/math/Ordering;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1113               // Method intersect:(Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1115               // Method diff:(Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object reverse();
    Code:
       0: aload_0
       1: invokevirtual #1117               // Method reverse:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.TraversableViewLike$Transformed newDropped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1120               // Method newDropped:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newDropped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1120               // Method newDropped:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1123               // Method newTaken:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1123               // Method newTaken:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newZippedAll(scala.collection.GenIterable, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1126               // Method newZippedAll:(Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/SeqViewLike$Transformed;
       7: areturn

  public scala.collection.IterableViewLike$Transformed newZipped(scala.collection.GenIterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1129               // Method newZipped:(Lscala/collection/GenIterable;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newTakenWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1131               // Method newTakenWhile:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newTakenWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1131               // Method newTakenWhile:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newDroppedWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1134               // Method newDroppedWhile:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newDroppedWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1134               // Method newDroppedWhile:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1137               // Method newSliced:(Lscala/collection/generic/SliceInterval;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1137               // Method newSliced:(Lscala/collection/generic/SliceInterval;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newFiltered(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1140               // Method newFiltered:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newFiltered(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1140               // Method newFiltered:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newFlatMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1142               // Method newFlatMapped:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newFlatMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1142               // Method newFlatMapped:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1144               // Method newMapped:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1144               // Method newMapped:(Lscala/Function1;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newAppended(scala.collection.GenTraversable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1147               // Method newAppended:(Lscala/collection/GenTraversable;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newAppended(scala.collection.GenTraversable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1147               // Method newAppended:(Lscala/collection/GenTraversable;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newForced(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1151               // Method newForced:(Lscala/Function0;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newForced(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1151               // Method newForced:(Lscala/Function0;)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$AbstractTransformed(scala.collection.SeqViewLike<A, Coll, This>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #1023               // Field $outer:Lscala/collection/SeqViewLike;
      11: aload_0
      12: invokespecial #1157               // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #1160               // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      19: aload_0
      20: invokestatic  #1163               // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      23: aload_0
      24: invokestatic  #1166               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      27: aload_0
      28: invokestatic  #1169               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      31: aload_0
      32: invokestatic  #1172               // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      35: aload_0
      36: invokestatic  #1175               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      39: aload_0
      40: invokestatic  #1180               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      43: aload_0
      44: invokestatic  #1185               // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      47: aload_0
      48: invokestatic  #1190               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      51: aload_0
      52: invokestatic  #1193               // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      55: aload_0
      56: invokestatic  #1198               // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      59: aload_0
      60: invokestatic  #1201               // Method scala/collection/GenSeqLike$class.$init$:(Lscala/collection/GenSeqLike;)V
      63: aload_0
      64: invokestatic  #1206               // Method scala/collection/GenSeq$class.$init$:(Lscala/collection/GenSeq;)V
      67: aload_0
      68: invokestatic  #1209               // Method scala/collection/SeqLike$class.$init$:(Lscala/collection/SeqLike;)V
      71: aload_0
      72: invokestatic  #1212               // Method scala/collection/Seq$class.$init$:(Lscala/collection/Seq;)V
      75: aload_0
      76: invokestatic  #1215               // Method scala/collection/ViewMkString$class.$init$:(Lscala/collection/ViewMkString;)V
      79: aload_0
      80: invokestatic  #1218               // Method scala/collection/TraversableViewLike$class.$init$:(Lscala/collection/TraversableViewLike;)V
      83: aload_0
      84: invokestatic  #1221               // Method scala/collection/IterableViewLike$class.$init$:(Lscala/collection/IterableViewLike;)V
      87: aload_0
      88: invokestatic  #1224               // Method scala/collection/TraversableViewLike$Transformed$class.$init$:(Lscala/collection/TraversableViewLike$Transformed;)V
      91: aload_0
      92: invokestatic  #1227               // Method scala/collection/IterableViewLike$Transformed$class.$init$:(Lscala/collection/IterableViewLike$Transformed;)V
      95: aload_0
      96: invokestatic  #1229               // Method scala/collection/SeqViewLike$class.$init$:(Lscala/collection/SeqViewLike;)V
      99: aload_0
     100: invokestatic  #1232               // Method scala/collection/SeqViewLike$Transformed$class.$init$:(Lscala/collection/SeqViewLike$Transformed;)V
     103: return
}
