Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$SegmentLength implements scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Accessor<scala.Tuple2<java.lang.Object, java.lang.Object>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SegmentLength> {
  public final scala.Function1<T, java.lang.Object> scala$collection$parallel$ParSeqLike$SegmentLength$$pred;

  public final int scala$collection$parallel$ParSeqLike$SegmentLength$$from;

  private final scala.collection.parallel.SeqSplitter<T> pit;

  private volatile scala.Tuple2<java.lang.Object, java.lang.Object> result;

  public final scala.collection.parallel.ParSeqLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #48                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.SeqSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #85                 // Field pit:Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.Tuple2<java.lang.Object, java.lang.Object> result();
    Code:
       0: aload_0
       1: getfield      #88                 // Field result:Lscala/Tuple2;
       4: areturn

  public void result_$eq(scala.Tuple2<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field result:Lscala/Tuple2;
       5: return

  public void leaf(scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>>);
    Code:
       0: aload_0
       1: getfield      #93                 // Field scala$collection$parallel$ParSeqLike$SegmentLength$$from:I
       4: aload_0
       5: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       8: invokeinterface #101,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.indexFlag:()I
      13: if_icmpge     88
      16: aload_0
      17: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
      20: invokeinterface #104,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
      25: istore_2
      26: aload_0
      27: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
      30: aload_0
      31: getfield      #106                // Field scala$collection$parallel$ParSeqLike$SegmentLength$$pred:Lscala/Function1;
      34: invokeinterface #110,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.prefixLength:(Lscala/Function1;)I
      39: istore_3
      40: aload_0
      41: new           #112                // class scala/Tuple2$mcIZ$sp
      44: dup
      45: iload_3
      46: iload_2
      47: iload_3
      48: if_icmpne     55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: invokespecial #116                // Method scala/Tuple2$mcIZ$sp."<init>":(IZ)V
      59: invokevirtual #118                // Method result_$eq:(Lscala/Tuple2;)V
      62: aload_0
      63: invokevirtual #120                // Method result:()Lscala/Tuple2;
      66: invokevirtual #125                // Method scala/Tuple2._2$mcZ$sp:()Z
      69: ifne          101
      72: aload_0
      73: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
      76: aload_0
      77: getfield      #93                 // Field scala$collection$parallel$ParSeqLike$SegmentLength$$from:I
      80: invokeinterface #129,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.setIndexFlagIfLesser:(I)V
      85: goto          101
      88: aload_0
      89: new           #112                // class scala/Tuple2$mcIZ$sp
      92: dup
      93: iconst_0
      94: iconst_0
      95: invokespecial #116                // Method scala/Tuple2$mcIZ$sp."<init>":(IZ)V
      98: invokevirtual #118                // Method result_$eq:(Lscala/Tuple2;)V
     101: return

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: new           #138                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #140                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public scala.collection.Seq<scala.collection.parallel.Task<scala.Tuple2<java.lang.Object, java.lang.Object>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SegmentLength>> split();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: invokeinterface #147,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.splitWithSignalling:()Lscala/collection/Seq;
       9: astore_1
      10: aload_1
      11: aload_1
      12: iconst_0
      13: invokestatic  #153                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      16: new           #155                // class scala/collection/parallel/ParSeqLike$SegmentLength$$anonfun$split$1
      19: dup
      20: aload_0
      21: invokespecial #158                // Method scala/collection/parallel/ParSeqLike$SegmentLength$$anonfun$split$1."<init>":(Lscala/collection/parallel/ParSeqLike$SegmentLength;)V
      24: getstatic     #164                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      27: invokevirtual #168                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      30: invokeinterface #174,  4          // InterfaceMethod scala/collection/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #176                // class scala/collection/GenIterable
      38: getstatic     #164                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      41: invokevirtual #168                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      44: invokeinterface #180,  3          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      49: checkcast     #182                // class scala/collection/TraversableLike
      52: new           #184                // class scala/collection/parallel/ParSeqLike$SegmentLength$$anonfun$split$2
      55: dup
      56: aload_0
      57: invokespecial #185                // Method scala/collection/parallel/ParSeqLike$SegmentLength$$anonfun$split$2."<init>":(Lscala/collection/parallel/ParSeqLike$SegmentLength;)V
      60: invokeinterface #189,  2          // InterfaceMethod scala/collection/TraversableLike.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      65: new           #191                // class scala/collection/parallel/ParSeqLike$SegmentLength$$anonfun$split$3
      68: dup
      69: aload_0
      70: invokespecial #192                // Method scala/collection/parallel/ParSeqLike$SegmentLength$$anonfun$split$3."<init>":(Lscala/collection/parallel/ParSeqLike$SegmentLength;)V
      73: getstatic     #164                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      76: invokevirtual #168                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      79: invokeinterface #198,  3          // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      84: checkcast     #170                // class scala/collection/Seq
      87: areturn

  public void merge(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SegmentLength);
    Code:
       0: aload_0
       1: invokevirtual #120                // Method result:()Lscala/Tuple2;
       4: invokevirtual #125                // Method scala/Tuple2._2$mcZ$sp:()Z
       7: ifeq          43
      10: aload_0
      11: new           #112                // class scala/Tuple2$mcIZ$sp
      14: dup
      15: aload_0
      16: invokevirtual #120                // Method result:()Lscala/Tuple2;
      19: invokevirtual #204                // Method scala/Tuple2._1$mcI$sp:()I
      22: aload_1
      23: invokevirtual #120                // Method result:()Lscala/Tuple2;
      26: invokevirtual #204                // Method scala/Tuple2._1$mcI$sp:()I
      29: iadd
      30: aload_1
      31: invokevirtual #120                // Method result:()Lscala/Tuple2;
      34: invokevirtual #125                // Method scala/Tuple2._2$mcZ$sp:()Z
      37: invokespecial #116                // Method scala/Tuple2$mcIZ$sp."<init>":(IZ)V
      40: invokevirtual #118                // Method result_$eq:(Lscala/Tuple2;)V
      43: return

  public boolean requiresStrictSplitters();
    Code:
       0: iconst_1
       1: ireturn

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$SegmentLength$$$outer();
    Code:
       0: aload_0
       1: getfield      #209                // Field $outer:Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #213                // Method scala$collection$parallel$ParSeqLike$SegmentLength$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #213                // Method scala$collection$parallel$ParSeqLike$SegmentLength$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$SegmentLength
       5: invokevirtual #216                // Method merge:(Lscala/collection/parallel/ParSeqLike$SegmentLength;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #219                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
       5: athrow

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #122                // class scala/Tuple2
       5: invokevirtual #118                // Method result_$eq:(Lscala/Tuple2;)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method result:()Lscala/Tuple2;
       4: areturn

  public scala.collection.parallel.IterableSplitter pit();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.ParSeqLike$SegmentLength(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>, scala.Function1<T, java.lang.Object>, int, scala.collection.parallel.SeqSplitter<T>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #106                // Field scala$collection$parallel$ParSeqLike$SegmentLength$$pred:Lscala/Function1;
       5: aload_0
       6: iload_3
       7: putfield      #93                 // Field scala$collection$parallel$ParSeqLike$SegmentLength$$from:I
      10: aload_0
      11: aload         4
      13: putfield      #85                 // Field pit:Lscala/collection/parallel/SeqSplitter;
      16: aload_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #209                // Field $outer:Lscala/collection/parallel/ParSeqLike;
      27: aload_0
      28: invokespecial #222                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #225                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      35: aload_0
      36: invokestatic  #230                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      39: aload_0
      40: invokestatic  #232                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      43: aload_0
      44: aconst_null
      45: putfield      #88                 // Field result:Lscala/Tuple2;
      48: return
}
