Compiled from "ParSeqLike.scala"
public final class scala.collection.parallel.ParSeqLike$SegmentLength$$anonfun$split$3 extends scala.runtime.AbstractFunction1<scala.Tuple2<scala.collection.parallel.SeqSplitter<T>, java.lang.Object>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SegmentLength> implements scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.parallel.ParSeqLike$SegmentLength $outer;

  public final scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SegmentLength apply(scala.Tuple2<scala.collection.parallel.SeqSplitter<T>, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        45
       4: new           #10                 // class scala/collection/parallel/ParSeqLike$SegmentLength
       7: dup
       8: aload_0
       9: getfield      #23                 // Field $outer:Lscala/collection/parallel/ParSeqLike$SegmentLength;
      12: invokevirtual #27                 // Method scala/collection/parallel/ParSeqLike$SegmentLength.scala$collection$parallel$ParSeqLike$SegmentLength$$$outer:()Lscala/collection/parallel/ParSeqLike;
      15: aload_0
      16: getfield      #23                 // Field $outer:Lscala/collection/parallel/ParSeqLike$SegmentLength;
      19: getfield      #31                 // Field scala/collection/parallel/ParSeqLike$SegmentLength.scala$collection$parallel$ParSeqLike$SegmentLength$$pred:Lscala/Function1;
      22: aload_0
      23: getfield      #23                 // Field $outer:Lscala/collection/parallel/ParSeqLike$SegmentLength;
      26: getfield      #35                 // Field scala/collection/parallel/ParSeqLike$SegmentLength.scala$collection$parallel$ParSeqLike$SegmentLength$$from:I
      29: aload_1
      30: invokevirtual #41                 // Method scala/Tuple2._2$mcI$sp:()I
      33: iadd
      34: aload_1
      35: invokevirtual #45                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      38: checkcast     #47                 // class scala/collection/parallel/SeqSplitter
      41: invokespecial #51                 // Method scala/collection/parallel/ParSeqLike$SegmentLength."<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;ILscala/collection/parallel/SeqSplitter;)V
      44: areturn
      45: new           #53                 // class scala/MatchError
      48: dup
      49: aload_1
      50: invokespecial #56                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      53: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #37                 // class scala/Tuple2
       5: invokevirtual #63                 // Method apply:(Lscala/Tuple2;)Lscala/collection/parallel/ParSeqLike$SegmentLength;
       8: areturn

  public scala.collection.parallel.ParSeqLike$SegmentLength$$anonfun$split$3(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SegmentLength);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lscala/collection/parallel/ParSeqLike$SegmentLength;
      11: aload_0
      12: invokespecial #69                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
