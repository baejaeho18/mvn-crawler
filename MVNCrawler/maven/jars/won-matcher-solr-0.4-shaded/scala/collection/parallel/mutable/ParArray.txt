Compiled from "ParArray.scala"
public class scala.collection.parallel.mutable.ParArray<T> implements scala.collection.parallel.mutable.ParSeq<T>, scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.mutable.ArraySeq<T> arrayseq;

  private transient java.lang.Object[] scala$collection$parallel$mutable$ParArray$$array;

  private volatile scala.collection.parallel.mutable.ParArray<T>.ParArrayIterator$ ParArrayIterator$module;

  private volatile transient scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport;

  private volatile scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$module;

  private volatile scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$module;

  public static <T> scala.collection.parallel.mutable.ParArray<T> fromTraversables(scala.collection.Seq<scala.collection.GenTraversableOnce<T>>);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: invokevirtual #23                 // Method scala/collection/parallel/mutable/ParArray$.fromTraversables:(Lscala/collection/Seq;)Lscala/collection/parallel/mutable/ParArray;
       7: areturn

  public static <T> scala.collection.parallel.mutable.ParArray<T> createFromCopy(T[], scala.reflect.ClassTag<T>);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: aload_1
       5: invokevirtual #27                 // Method scala/collection/parallel/mutable/ParArray$.createFromCopy:([Ljava/lang/Object;Lscala/reflect/ClassTag;)Lscala/collection/parallel/mutable/ParArray;
       8: areturn

  public static <T> scala.collection.parallel.mutable.ParArray<T> handoff(java.lang.Object, int);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: iload_1
       5: invokevirtual #31                 // Method scala/collection/parallel/mutable/ParArray$.handoff:(Ljava/lang/Object;I)Lscala/collection/parallel/mutable/ParArray;
       8: areturn

  public static <T> scala.collection.parallel.mutable.ParArray<T> handoff(java.lang.Object);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: invokevirtual #34                 // Method scala/collection/parallel/mutable/ParArray$.handoff:(Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParArray;
       7: areturn

  public static <T> scala.collection.generic.CanCombineFrom<scala.collection.parallel.mutable.ParArray<?>, T, scala.collection.parallel.mutable.ParArray<T>> canBuildFrom();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: invokevirtual #38                 // Method scala/collection/parallel/mutable/ParArray$.canBuildFrom:()Lscala/collection/generic/CanCombineFrom;
       6: areturn

  public static scala.collection.GenTraversable iterate(java.lang.Object, int, scala.Function1);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #42                 // Method scala/collection/parallel/mutable/ParArray$.iterate:(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable range(java.lang.Object, java.lang.Object, java.lang.Object, scala.math.Integral);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #46                 // Method scala/collection/parallel/mutable/ParArray$.range:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;
      10: areturn

  public static scala.collection.GenTraversable range(java.lang.Object, java.lang.Object, scala.math.Integral);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #49                 // Method scala/collection/parallel/mutable/ParArray$.range:(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable tabulate(int, int, int, int, int, scala.Function5);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: invokevirtual #53                 // Method scala/collection/parallel/mutable/ParArray$.tabulate:(IIIIILscala/Function5;)Lscala/collection/GenTraversable;
      14: areturn

  public static scala.collection.GenTraversable tabulate(int, int, int, int, scala.Function4);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokevirtual #56                 // Method scala/collection/parallel/mutable/ParArray$.tabulate:(IIIILscala/Function4;)Lscala/collection/GenTraversable;
      12: areturn

  public static scala.collection.GenTraversable tabulate(int, int, int, scala.Function3);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #59                 // Method scala/collection/parallel/mutable/ParArray$.tabulate:(IIILscala/Function3;)Lscala/collection/GenTraversable;
      10: areturn

  public static scala.collection.GenTraversable tabulate(int, int, scala.Function2);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #62                 // Method scala/collection/parallel/mutable/ParArray$.tabulate:(IILscala/Function2;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable tabulate(int, scala.Function1);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: aload_1
       5: invokevirtual #65                 // Method scala/collection/parallel/mutable/ParArray$.tabulate:(ILscala/Function1;)Lscala/collection/GenTraversable;
       8: areturn

  public static scala.collection.GenTraversable fill(int, int, int, int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: invokevirtual #69                 // Method scala/collection/parallel/mutable/ParArray$.fill:(IIIIILscala/Function0;)Lscala/collection/GenTraversable;
      14: areturn

  public static scala.collection.GenTraversable fill(int, int, int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokevirtual #72                 // Method scala/collection/parallel/mutable/ParArray$.fill:(IIIILscala/Function0;)Lscala/collection/GenTraversable;
      12: areturn

  public static scala.collection.GenTraversable fill(int, int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #75                 // Method scala/collection/parallel/mutable/ParArray$.fill:(IIILscala/Function0;)Lscala/collection/GenTraversable;
      10: areturn

  public static scala.collection.GenTraversable fill(int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #78                 // Method scala/collection/parallel/mutable/ParArray$.fill:(IILscala/Function0;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable fill(int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: iload_0
       4: aload_1
       5: invokevirtual #81                 // Method scala/collection/parallel/mutable/ParArray$.fill:(ILscala/Function0;)Lscala/collection/GenTraversable;
       8: areturn

  public static scala.collection.GenTraversable concat(scala.collection.Seq);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: aload_0
       4: invokevirtual #85                 // Method scala/collection/parallel/mutable/ParArray$.concat:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
       7: areturn

  public static scala.collection.generic.GenTraversableFactory<scala.collection.parallel.mutable.ParArray>.GenericCanBuildFrom<scala.runtime.Nothing$> ReusableCBF();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: invokevirtual #89                 // Method scala/collection/parallel/mutable/ParArray$.ReusableCBF:()Lscala/collection/generic/GenTraversableFactory$GenericCanBuildFrom;
       6: areturn

  public static scala.collection.GenTraversable empty();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: invokevirtual #93                 // Method scala/collection/parallel/mutable/ParArray$.empty:()Lscala/collection/GenTraversable;
       6: areturn

  private scala.collection.parallel.mutable.ParArray$ParArrayIterator$ ParArrayIterator$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #115                // Field ParArrayIterator$module:Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
       8: ifnonnull     23
      11: aload_0
      12: new           #117                // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$
      15: dup
      16: aload_0
      17: invokespecial #121                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$."<init>":(Lscala/collection/parallel/mutable/ParArray;)V
      20: putfield      #115                // Field ParArrayIterator$module:Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
      23: getstatic     #127                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #115                // Field ParArrayIterator$module:Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.mutable.ParSeq<T> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #138                // Method scala/collection/parallel/mutable/ParSeq$class.toSeq:(Lscala/collection/parallel/mutable/ParSeq;)Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #145                // Method scala/collection/parallel/ParSeq$class.toString:(Lscala/collection/parallel/ParSeq;)Ljava/lang/String;
       4: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #148                // Method scala/collection/parallel/ParSeq$class.stringPrefix:(Lscala/collection/parallel/ParSeq;)Ljava/lang/String;
       4: areturn

  public java.lang.Object scala$collection$parallel$ParSeqLike$$super$zip(scala.collection.GenIterable, scala.collection.generic.CanBuildFrom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #156                // Method scala/collection/parallel/ParIterableLike$class.zip:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.parallel.PreciseSplitter<T> iterator();
    Code:
       0: aload_0
       1: invokestatic  #167                // Method scala/collection/parallel/ParSeqLike$class.iterator:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/parallel/PreciseSplitter;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #172                // Method scala/collection/parallel/ParSeqLike$class.size:(Lscala/collection/parallel/ParSeqLike;)I
       4: ireturn

  public int segmentLength(scala.Function1<T, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #177                // Method scala/collection/parallel/ParSeqLike$class.segmentLength:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere(scala.Function1<T, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #184                // Method scala/collection/parallel/ParSeqLike$class.indexWhere:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<T, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #187                // Method scala/collection/parallel/ParSeqLike$class.lastIndexWhere:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;I)I
       6: ireturn

  public scala.collection.parallel.ParSeq reverse();
    Code:
       0: aload_0
       1: invokestatic  #193                // Method scala/collection/parallel/ParSeqLike$class.reverse:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/parallel/ParSeq;
       4: areturn

  public <S, That> That reverseMap(scala.Function1<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // Method scala/collection/parallel/ParSeqLike$class.reverseMap:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S> boolean startsWith(scala.collection.GenSeq<S>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #204                // Method scala/collection/parallel/ParSeqLike$class.startsWith:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;I)Z
       6: ireturn

  public <U> boolean sameElements(scala.collection.GenIterable<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #211                // Method scala/collection/parallel/ParSeqLike$class.sameElements:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public <S> boolean endsWith(scala.collection.GenSeq<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method scala/collection/parallel/ParSeqLike$class.endsWith:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <U, That> That patch(int, scala.collection.GenSeq<U>, int, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #221                // Method scala/collection/parallel/ParSeqLike$class.patch:(Lscala/collection/parallel/ParSeqLike;ILscala/collection/GenSeq;ILscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That updated(int, U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #227                // Method scala/collection/parallel/ParSeqLike$class.updated:(Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <U, That> That $plus$colon(U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #235                // Method scala/collection/parallel/ParSeqLike$class.$plus$colon:(Lscala/collection/parallel/ParSeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That $colon$plus(U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #238                // Method scala/collection/parallel/ParSeqLike$class.$colon$plus:(Lscala/collection/parallel/ParSeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That padTo(int, U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #241                // Method scala/collection/parallel/ParSeqLike$class.padTo:(Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <U, S, That> That zip(scala.collection.GenIterable<S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // Method scala/collection/parallel/ParSeqLike$class.zip:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S> boolean corresponds(scala.collection.GenSeq<S>, scala.Function2<T, S, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #250                // Method scala/collection/parallel/ParSeqLike$class.corresponds:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.parallel.ParSeq diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // Method scala/collection/parallel/ParSeqLike$class.diff:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public scala.collection.parallel.ParSeq intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #259                // Method scala/collection/parallel/ParSeqLike$class.intersect:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public scala.collection.parallel.ParSeq distinct();
    Code:
       0: aload_0
       1: invokestatic  #262                // Method scala/collection/parallel/ParSeqLike$class.distinct:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/parallel/ParSeq;
       4: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #267                // Method scala/collection/parallel/ParSeqLike$class.view:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/SeqView;
       4: areturn

  public scala.collection.parallel.SeqSplitter<T> down(scala.collection.parallel.IterableSplitter<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // Method scala/collection/parallel/ParSeqLike$class.down:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.mutable.ParIterable<T> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #280                // Method scala/collection/parallel/mutable/ParIterable$class.toIterable:(Lscala/collection/parallel/mutable/ParIterable;)Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport();
    Code:
       0: aload_0
       1: getfield      #283                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void scala$collection$parallel$ParIterableLike$$_tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #283                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       5: return

  private scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #291                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       8: ifnonnull     23
      11: aload_0
      12: new           #293                // class scala/collection/parallel/ParIterableLike$ScanNode$
      15: dup
      16: aload_0
      17: invokespecial #296                // Method scala/collection/parallel/ParIterableLike$ScanNode$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #291                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      23: getstatic     #127                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #291                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode();
    Code:
       0: aload_0
       1: getfield      #291                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #299                // Method ScanNode$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanNode$;
      11: goto          18
      14: aload_0
      15: getfield      #291                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      18: areturn

  private scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #303                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       8: ifnonnull     23
      11: aload_0
      12: new           #305                // class scala/collection/parallel/ParIterableLike$ScanLeaf$
      15: dup
      16: aload_0
      17: invokespecial #306                // Method scala/collection/parallel/ParIterableLike$ScanLeaf$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #303                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      23: getstatic     #127                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #303                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf();
    Code:
       0: aload_0
       1: getfield      #303                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #309                // Method ScanLeaf$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      11: goto          18
      14: aload_0
      15: getfield      #303                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      18: areturn

  public void initTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #313                // Method scala/collection/parallel/ParIterableLike$class.initTaskSupport:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.TaskSupport tasksupport();
    Code:
       0: aload_0
       1: invokestatic  #317                // Method scala/collection/parallel/ParIterableLike$class.tasksupport:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #321                // Method scala/collection/parallel/ParIterableLike$class.tasksupport_$eq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public scala.collection.parallel.ParIterable repr();
    Code:
       0: aload_0
       1: invokestatic  #327                // Method scala/collection/parallel/ParIterableLike$class.repr:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #332                // Method scala/collection/parallel/ParIterableLike$class.isTraversableAgain:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #335                // Method scala/collection/parallel/ParIterableLike$class.hasDefiniteSize:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #338                // Method scala/collection/parallel/ParIterableLike$class.isEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #341                // Method scala/collection/parallel/ParIterableLike$class.nonEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public T head();
    Code:
       0: aload_0
       1: invokestatic  #346                // Method scala/collection/parallel/ParIterableLike$class.head:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<T> headOption();
    Code:
       0: aload_0
       1: invokestatic  #351                // Method scala/collection/parallel/ParIterableLike$class.headOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable tail();
    Code:
       0: aload_0
       1: invokestatic  #354                // Method scala/collection/parallel/ParIterableLike$class.tail:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public T last();
    Code:
       0: aload_0
       1: invokestatic  #357                // Method scala/collection/parallel/ParIterableLike$class.last:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<T> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #360                // Method scala/collection/parallel/ParIterableLike$class.lastOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable init();
    Code:
       0: aload_0
       1: invokestatic  #363                // Method scala/collection/parallel/ParIterableLike$class.init:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable par();
    Code:
       0: aload_0
       1: invokestatic  #366                // Method scala/collection/parallel/ParIterableLike$class.par:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public boolean isStrictSplitterCollection();
    Code:
       0: aload_0
       1: invokestatic  #369                // Method scala/collection/parallel/ParIterableLike$class.isStrictSplitterCollection:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reuse(scala.Option<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #374                // Method scala/collection/parallel/ParIterableLike$class.reuse:(Lscala/collection/parallel/ParIterableLike;Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <R, Tp> java.lang.Object task2ops(scala.collection.parallel.ParIterableLike<T, scala.collection.parallel.mutable.ParArray<T>, scala.collection.mutable.ArraySeq<T>>.StrictSplitterCheckTask<R, Tp>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #383                // Method scala/collection/parallel/ParIterableLike$class.task2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
       5: areturn

  public <R> java.lang.Object wrap(scala.Function0<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #390                // Method scala/collection/parallel/ParIterableLike$class.wrap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/ParIterableLike$NonDivisible;
       5: areturn

  public <PI extends scala.collection.generic.DelegatedSignalling> java.lang.Object delegatedSignalling2ops(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #397                // Method scala/collection/parallel/ParIterableLike$class.delegatedSignalling2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/DelegatedSignalling;)Lscala/collection/parallel/ParIterableLike$SignallingOps;
       5: areturn

  public <Elem, To> java.lang.Object builder2ops(scala.collection.mutable.Builder<Elem, To>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // Method scala/collection/parallel/ParIterableLike$class.builder2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
       5: areturn

  public <S, That> java.lang.Object bf2seq(scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #411                // Method scala/collection/parallel/ParIterableLike$class.bf2seq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Lscala/collection/generic/CanBuildFrom;
       5: areturn

  public scala.collection.parallel.ParIterable sequentially(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // Method scala/collection/parallel/ParIterableLike$class.sequentially:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #422                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #429                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #432                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // Method scala/collection/parallel/ParIterableLike$class.canEqual:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #443                // Method scala/collection/parallel/ParIterableLike$class.reduce:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceOption(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #449                // Method scala/collection/parallel/ParIterableLike$class.reduceOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #454                // Method scala/collection/parallel/ParIterableLike$class.fold:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S aggregate(scala.Function0<S>, scala.Function2<S, T, S>, scala.Function2<S, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #460                // Method scala/collection/parallel/ParIterableLike$class.aggregate:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <S> S foldLeft(S, scala.Function2<S, T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #465                // Method scala/collection/parallel/ParIterableLike$class.foldLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S foldRight(S, scala.Function2<T, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #468                // Method scala/collection/parallel/ParIterableLike$class.foldRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U> U reduceLeft(scala.Function2<U, T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #471                // Method scala/collection/parallel/ParIterableLike$class.reduceLeft:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> U reduceRight(scala.Function2<T, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #474                // Method scala/collection/parallel/ParIterableLike$class.reduceRight:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceLeftOption(scala.Function2<U, T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #477                // Method scala/collection/parallel/ParIterableLike$class.reduceLeftOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> scala.Option<U> reduceRightOption(scala.Function2<T, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #480                // Method scala/collection/parallel/ParIterableLike$class.reduceRightOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> void foreach(scala.Function1<T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #485                // Method scala/collection/parallel/ParIterableLike$class.foreach:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)V
       5: return

  public int count(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #490                // Method scala/collection/parallel/ParIterableLike$class.count:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)I
       5: ireturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #495                // Method scala/collection/parallel/ParIterableLike$class.sum:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #500                // Method scala/collection/parallel/ParIterableLike$class.product:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> T min(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #505                // Method scala/collection/parallel/ParIterableLike$class.min:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <U> T max(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #510                // Method scala/collection/parallel/ParIterableLike$class.max:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <S> T maxBy(scala.Function1<T, S>, scala.math.Ordering<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #515                // Method scala/collection/parallel/ParIterableLike$class.maxBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S> T minBy(scala.Function1<T, S>, scala.math.Ordering<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #519                // Method scala/collection/parallel/ParIterableLike$class.minBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S, That> That collect(scala.PartialFunction<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #524                // Method scala/collection/parallel/ParIterableLike$class.collect:(Lscala/collection/parallel/ParIterableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That flatMap(scala.Function1<T, scala.collection.GenTraversableOnce<S>>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // Method scala/collection/parallel/ParIterableLike$class.flatMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean forall(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #535                // Method scala/collection/parallel/ParIterableLike$class.forall:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #538                // Method scala/collection/parallel/ParIterableLike$class.exists:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<T> find(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #543                // Method scala/collection/parallel/ParIterableLike$class.find:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public java.lang.Object combinerFactory();
    Code:
       0: aload_0
       1: invokestatic  #548                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/CombinerFactory;
       4: areturn

  public <S, That> java.lang.Object combinerFactory(scala.Function0<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #552                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/CombinerFactory;
       5: areturn

  public scala.collection.parallel.ParIterable withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #556                // Method scala/collection/parallel/ParIterableLike$class.withFilter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #560                // Method scala/collection/parallel/ParIterableLike$class.filter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #563                // Method scala/collection/parallel/ParIterableLike$class.filterNot:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U, That> That $plus$plus(scala.collection.GenTraversableOnce<U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #568                // Method scala/collection/parallel/ParIterableLike$class.$plus$plus:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParArray<T>, scala.collection.parallel.mutable.ParArray<T>> partition(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #574                // Method scala/collection/parallel/ParIterableLike$class.partition:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.parallel.immutable.ParMap<K, scala.collection.parallel.mutable.ParArray<T>> groupBy(scala.Function1<T, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #579                // Method scala/collection/parallel/ParIterableLike$class.groupBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParIterable take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #584                // Method scala/collection/parallel/ParIterableLike$class.take:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #588                // Method scala/collection/parallel/ParIterableLike$class.drop:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #593                // Method scala/collection/parallel/ParIterableLike$class.slice:(Lscala/collection/parallel/ParIterableLike;II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParArray<T>, scala.collection.parallel.mutable.ParArray<T>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #600                // Method scala/collection/parallel/ParIterableLike$class.splitAt:(Lscala/collection/parallel/ParIterableLike;I)Lscala/Tuple2;
       5: areturn

  public <S, That> That scanLeft(S, scala.Function2<S, T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #605                // Method scala/collection/parallel/ParIterableLike$class.scanLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanRight(S, scala.Function2<T, S, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #608                // Method scala/collection/parallel/ParIterableLike$class.scanRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.collection.parallel.ParIterable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #611                // Method scala/collection/parallel/ParIterableLike$class.takeWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParArray<T>, scala.collection.parallel.mutable.ParArray<T>> span(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #614                // Method scala/collection/parallel/ParIterableLike$class.span:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.parallel.ParIterable dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // Method scala/collection/parallel/ParIterableLike$class.dropWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #622                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)V
       5: return

  public <U> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #627                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;I)V
       6: return

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #631                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;II)V
       7: return

  public <U, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, scala.Tuple2<U, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #636                // Method scala/collection/parallel/ParIterableLike$class.zipWithIndex:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <S, U, That> That zipAll(scala.collection.GenIterable<S>, U, S, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #641                // Method scala/collection/parallel/ParIterableLike$class.zipAll:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That toParCollection(scala.Function0<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #648                // Method scala/collection/parallel/ParIterableLike$class.toParCollection:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public <K, V, That> That toParMap(scala.Function0<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>, scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #653                // Method scala/collection/parallel/ParIterableLike$class.toParMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Predef$$less$colon$less;)Ljava/lang/Object;
       6: areturn

  public <U> java.lang.Object toArray(scala.reflect.ClassTag<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #660                // Method scala/collection/parallel/ParIterableLike$class.toArray:(Lscala/collection/parallel/ParIterableLike;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<T> toList();
    Code:
       0: aload_0
       1: invokestatic  #667                // Method scala/collection/parallel/ParIterableLike$class.toList:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<T> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #672                // Method scala/collection/parallel/ParIterableLike$class.toIndexedSeq:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Stream<T> toStream();
    Code:
       0: aload_0
       1: invokestatic  #677                // Method scala/collection/parallel/ParIterableLike$class.toStream:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public scala.collection.Iterator<T> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #682                // Method scala/collection/parallel/ParIterableLike$class.toIterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Iterator;
       4: areturn

  public <U> scala.collection.mutable.Buffer<U> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #687                // Method scala/collection/parallel/ParIterableLike$class.toBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.GenTraversable<T> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #691                // Method scala/collection/parallel/ParIterableLike$class.toTraversable:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/GenTraversable;
       4: areturn

  public <U> scala.collection.parallel.immutable.ParSet<U> toSet();
    Code:
       0: aload_0
       1: invokestatic  #696                // Method scala/collection/parallel/ParIterableLike$class.toSet:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public <K, V> scala.collection.parallel.immutable.ParMap<K, V> toMap(scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #701                // Method scala/collection/parallel/ParIterableLike$class.toMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.immutable.Vector<T> toVector();
    Code:
       0: aload_0
       1: invokestatic  #706                // Method scala/collection/parallel/ParIterableLike$class.toVector:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, T, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #709                // Method scala/collection/parallel/ParIterableLike$class.to:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public int scanBlockSize();
    Code:
       0: aload_0
       1: invokestatic  #713                // Method scala/collection/parallel/ParIterableLike$class.scanBlockSize:(Lscala/collection/parallel/ParIterableLike;)I
       4: ireturn

  public <S> S $div$colon(S, scala.Function2<S, T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #716                // Method scala/collection/parallel/ParIterableLike$class.$div$colon:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S $colon$bslash(S, scala.Function2<T, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #719                // Method scala/collection/parallel/ParIterableLike$class.$colon$bslash:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #722                // Method scala/collection/parallel/ParIterableLike$class.debugInformation:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.Seq<java.lang.String> brokenInvariants();
    Code:
       0: aload_0
       1: invokestatic  #727                // Method scala/collection/parallel/ParIterableLike$class.brokenInvariants:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #732                // Method scala/collection/parallel/ParIterableLike$class.debugBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public void debugclear();
    Code:
       0: aload_0
       1: invokestatic  #735                // Method scala/collection/parallel/ParIterableLike$class.debugclear:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debuglog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #740                // Method scala/collection/parallel/ParIterableLike$class.debuglog:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
       5: areturn

  public void printDebugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #744                // Method scala/collection/parallel/ParIterableLike$class.printDebugBuffer:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.Combiner<T, scala.collection.parallel.mutable.ParArray<T>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #751                // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.Builder<T, scala.collection.parallel.mutable.ParArray<T>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #758                // Method scala/collection/generic/GenericParTemplate$class.newBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.parallel.Combiner<T, scala.collection.parallel.mutable.ParArray<T>> newCombiner();
    Code:
       0: aload_0
       1: invokestatic  #762                // Method scala/collection/generic/GenericParTemplate$class.newCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.mutable.ParArray<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #765                // Method scala/collection/generic/GenericParTemplate$class.genericBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.mutable.ParArray<B>> genericCombiner();
    Code:
       0: aload_0
       1: invokestatic  #768                // Method scala/collection/generic/GenericParTemplate$class.genericCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.parallel.mutable.ParArray<A1>, scala.collection.parallel.mutable.ParArray<A2>> unzip(scala.Function1<T, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #774                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.parallel.mutable.ParArray<A1>, scala.collection.parallel.mutable.ParArray<A2>, scala.collection.parallel.mutable.ParArray<A3>> unzip3(scala.Function1<T, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #780                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #786                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #790                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public boolean isDefinedAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #797                // Method scala/collection/GenSeqLike$class.isDefinedAt:(Lscala/collection/GenSeqLike;I)Z
       5: ireturn

  public int prefixLength(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #802                // Method scala/collection/GenSeqLike$class.prefixLength:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #804                // Method scala/collection/GenSeqLike$class.indexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #809                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #813                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int lastIndexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #816                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int lastIndexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #818                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #820                // Method scala/collection/GenSeqLike$class.lastIndexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #823                // Method scala/collection/GenSeqLike$class.startsWith:(Lscala/collection/GenSeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <B, That> That union(scala.collection.GenSeq<B>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #828                // Method scala/collection/GenSeqLike$class.union:(Lscala/collection/GenSeqLike;Lscala/collection/GenSeq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #832                // Method scala/collection/GenSeqLike$class.hashCode:(Lscala/collection/GenSeqLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #836                // Method scala/collection/GenSeqLike$class.equals:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.mutable.ArraySeq<T> arrayseq();
    Code:
       0: aload_0
       1: getfield      #839                // Field arrayseq:Lscala/collection/mutable/ArraySeq;
       4: areturn

  public java.lang.Object[] scala$collection$parallel$mutable$ParArray$$array();
    Code:
       0: aload_0
       1: getfield      #842                // Field scala$collection$parallel$mutable$ParArray$$array:[Ljava/lang/Object;
       4: areturn

  private void scala$collection$parallel$mutable$ParArray$$array_$eq(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #842                // Field scala$collection$parallel$mutable$ParArray$$array:[Ljava/lang/Object;
       5: return

  public scala.collection.generic.GenericCompanion<scala.collection.parallel.mutable.ParArray> companion();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: areturn

  public T apply(int);
    Code:
       0: aload_0
       1: invokevirtual #850                // Method scala$collection$parallel$mutable$ParArray$$array:()[Ljava/lang/Object;
       4: iload_1
       5: aaload
       6: areturn

  public void update(int, T);
    Code:
       0: aload_0
       1: invokevirtual #850                // Method scala$collection$parallel$mutable$ParArray$$array:()[Ljava/lang/Object;
       4: iload_1
       5: aload_2
       6: aastore
       7: return

  public int length();
    Code:
       0: aload_0
       1: invokevirtual #856                // Method arrayseq:()Lscala/collection/mutable/ArraySeq;
       4: invokevirtual #860                // Method scala/collection/mutable/ArraySeq.length:()I
       7: ireturn

  public scala.collection.mutable.ArraySeq<T> seq();
    Code:
       0: aload_0
       1: invokevirtual #856                // Method arrayseq:()Lscala/collection/mutable/ArraySeq;
       4: areturn

  public scala.collection.parallel.mutable.ParArray<T>.ParArrayIterator splitter();
    Code:
       0: new           #865                // class scala/collection/parallel/mutable/ParArray$ParArrayIterator
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #868                // Method ParArrayIterator:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
       9: invokevirtual #871                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$.$lessinit$greater$default$1:()I
      12: aload_0
      13: invokevirtual #868                // Method ParArrayIterator:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
      16: invokevirtual #874                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$.$lessinit$greater$default$2:()I
      19: aload_0
      20: invokevirtual #868                // Method ParArrayIterator:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
      23: invokevirtual #877                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$.$lessinit$greater$default$3:()[Ljava/lang/Object;
      26: invokespecial #880                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator."<init>":(Lscala/collection/parallel/mutable/ParArray;II[Ljava/lang/Object;)V
      29: astore_1
      30: aload_1
      31: areturn

  public scala.collection.parallel.mutable.ParArray<T>.ParArrayIterator$ ParArrayIterator();
    Code:
       0: aload_0
       1: getfield      #115                // Field ParArrayIterator$module:Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #884                // Method ParArrayIterator$lzycompute:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
      11: goto          18
      14: aload_0
      15: getfield      #115                // Field ParArrayIterator$module:Lscala/collection/parallel/mutable/ParArray$ParArrayIterator$;
      18: areturn

  private <S, That> boolean buildsArray(scala.collection.mutable.Builder<S, That>);
    Code:
       0: aload_1
       1: instanceof    #888                // class scala/collection/parallel/mutable/ResizableParArrayCombiner
       4: ireturn

  public <S, That> That map(scala.Function1<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, S, That>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: invokevirtual #892                // Method repr:()Lscala/collection/parallel/ParIterable;
       6: invokeinterface #897,  2          // InterfaceMethod scala/collection/generic/CanBuildFrom.apply:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      11: invokespecial #899                // Method buildsArray:(Lscala/collection/mutable/Builder;)Z
      14: ifeq          72
      17: new           #858                // class scala/collection/mutable/ArraySeq
      20: dup
      21: aload_0
      22: invokevirtual #900                // Method length:()I
      25: invokespecial #903                // Method scala/collection/mutable/ArraySeq."<init>":(I)V
      28: astore_3
      29: aload_3
      30: invokevirtual #906                // Method scala/collection/mutable/ArraySeq.array:()[Ljava/lang/Object;
      33: astore        4
      35: aload_0
      36: invokevirtual #908                // Method tasksupport:()Lscala/collection/parallel/TaskSupport;
      39: new           #910                // class scala/collection/parallel/mutable/ParArray$Map
      42: dup
      43: aload_0
      44: aload_1
      45: aload         4
      47: iconst_0
      48: aload_0
      49: invokevirtual #900                // Method length:()I
      52: invokespecial #913                // Method scala/collection/parallel/mutable/ParArray$Map."<init>":(Lscala/collection/parallel/mutable/ParArray;Lscala/Function1;[Ljava/lang/Object;II)V
      55: invokeinterface #919,  2          // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
      60: pop
      61: new           #2                  // class scala/collection/parallel/mutable/ParArray
      64: dup
      65: aload_3
      66: invokespecial #922                // Method "<init>":(Lscala/collection/mutable/ArraySeq;)V
      69: goto          78
      72: aload_0
      73: aload_1
      74: aload_2
      75: invokestatic  #924                // Method scala/collection/parallel/ParIterableLike$class.map:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      78: areturn

  public <U, That> That scan(U, scala.Function2<U, U, U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParArray<T>, U, That>);
    Code:
       0: aload_0
       1: invokevirtual #908                // Method tasksupport:()Lscala/collection/parallel/TaskSupport;
       4: invokeinterface #930,  1          // InterfaceMethod scala/collection/parallel/TaskSupport.parallelismLevel:()I
       9: iconst_1
      10: if_icmple     133
      13: aload_0
      14: aload_3
      15: aload_0
      16: invokevirtual #892                // Method repr:()Lscala/collection/parallel/ParIterable;
      19: invokeinterface #897,  2          // InterfaceMethod scala/collection/generic/CanBuildFrom.apply:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      24: invokespecial #899                // Method buildsArray:(Lscala/collection/mutable/Builder;)Z
      27: ifeq          133
      30: new           #858                // class scala/collection/mutable/ArraySeq
      33: dup
      34: aload_0
      35: invokevirtual #900                // Method length:()I
      38: iconst_1
      39: iadd
      40: invokespecial #903                // Method scala/collection/mutable/ArraySeq."<init>":(I)V
      43: astore        4
      45: aload         4
      47: invokevirtual #906                // Method scala/collection/mutable/ArraySeq.array:()[Ljava/lang/Object;
      50: astore        5
      52: aload         5
      54: iconst_0
      55: aload_1
      56: aastore
      57: aload_0
      58: invokevirtual #900                // Method length:()I
      61: iconst_0
      62: if_icmple     117
      65: aload_0
      66: invokevirtual #908                // Method tasksupport:()Lscala/collection/parallel/TaskSupport;
      69: aload_0
      70: new           #932                // class scala/collection/parallel/ParIterableLike$CreateScanTree
      73: dup
      74: aload_0
      75: iconst_0
      76: aload_0
      77: invokevirtual #934                // Method size:()I
      80: aload_1
      81: aload_2
      82: aload_0
      83: invokevirtual #936                // Method splitter:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;
      86: invokespecial #939                // Method scala/collection/parallel/ParIterableLike$CreateScanTree."<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
      89: invokevirtual #941                // Method task2ops:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
      92: new           #943                // class scala/collection/parallel/mutable/ParArray$$anonfun$scan$1
      95: dup
      96: aload_0
      97: aload_1
      98: aload_2
      99: aload         5
     101: invokespecial #946                // Method scala/collection/parallel/mutable/ParArray$$anonfun$scan$1."<init>":(Lscala/collection/parallel/mutable/ParArray;Ljava/lang/Object;Lscala/Function2;[Ljava/lang/Object;)V
     104: invokeinterface #952,  2          // InterfaceMethod scala/collection/parallel/ParIterableLike$TaskOps.mapResult:(Lscala/Function1;)Lscala/collection/parallel/ParIterableLike$ResultMapping;
     109: invokeinterface #919,  2          // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
     114: goto          120
     117: getstatic     #127                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     120: pop
     121: new           #2                  // class scala/collection/parallel/mutable/ParArray
     124: dup
     125: aload         4
     127: invokespecial #922                // Method "<init>":(Lscala/collection/mutable/ArraySeq;)V
     130: goto          140
     133: aload_0
     134: aload_1
     135: aload_2
     136: aload_3
     137: invokestatic  #954                // Method scala/collection/parallel/ParIterableLike$class.scan:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     140: areturn

  private void writeObject(java.io.ObjectOutputStream);
    Code:
       0: aload_1
       1: invokevirtual #962                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: return

  private void readObject(java.io.ObjectInputStream);
    Code:
       0: aload_1
       1: invokevirtual #971                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #856                // Method arrayseq:()Lscala/collection/mutable/ArraySeq;
       9: invokevirtual #906                // Method scala/collection/mutable/ArraySeq.array:()[Ljava/lang/Object;
      12: invokespecial #973                // Method scala$collection$parallel$mutable$ParArray$$array_$eq:([Ljava/lang/Object;)V
      15: return

  public scala.collection.mutable.Builder genericBuilder();
    Code:
       0: aload_0
       1: invokevirtual #977                // Method genericBuilder:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #980                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #983                // Method toSet:()Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #986                // Method dropWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #988                // Method takeWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #991                // Method slice:(II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #993                // Method drop:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #995                // Method take:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #998                // Method groupBy:(Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1000               // Method filterNot:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1002               // Method filter:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #1005               // Method par:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #1007               // Method init:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #1009               // Method tail:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokevirtual #892                // Method repr:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method toIterable:()Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method toIterable:()Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public scala.collection.IterableView view();
    Code:
       0: aload_0
       1: invokevirtual #1015               // Method view:()Lscala/collection/SeqView;
       4: areturn

  public java.lang.Object distinct();
    Code:
       0: aload_0
       1: invokevirtual #1017               // Method distinct:()Lscala/collection/parallel/ParSeq;
       4: areturn

  public java.lang.Object intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1020               // Method intersect:(Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public java.lang.Object diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1022               // Method diff:(Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public java.lang.Object reverse();
    Code:
       0: aload_0
       1: invokevirtual #1024               // Method reverse:()Lscala/collection/parallel/ParSeq;
       4: areturn

  public scala.collection.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #1026               // Method iterator:()Lscala/collection/parallel/PreciseSplitter;
       4: areturn

  public scala.collection.parallel.Splitter iterator();
    Code:
       0: aload_0
       1: invokevirtual #1026               // Method iterator:()Lscala/collection/parallel/PreciseSplitter;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1030               // Method toSeq:()Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public scala.collection.parallel.ParSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1030               // Method toSeq:()Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public scala.collection.parallel.IterableSplitter splitter();
    Code:
       0: aload_0
       1: invokevirtual #936                // Method splitter:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;
       4: areturn

  public scala.collection.parallel.SeqSplitter splitter();
    Code:
       0: aload_0
       1: invokevirtual #936                // Method splitter:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1035               // Method seq:()Lscala/collection/mutable/ArraySeq;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1035               // Method seq:()Lscala/collection/mutable/ArraySeq;
       4: areturn

  public scala.collection.Seq seq();
    Code:
       0: aload_0
       1: invokevirtual #1035               // Method seq:()Lscala/collection/mutable/ArraySeq;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1035               // Method seq:()Lscala/collection/mutable/ArraySeq;
       4: areturn

  public scala.collection.mutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1035               // Method seq:()Lscala/collection/mutable/ArraySeq;
       4: areturn

  public scala.collection.mutable.Seq seq();
    Code:
       0: aload_0
       1: invokevirtual #1035               // Method seq:()Lscala/collection/mutable/ArraySeq;
       4: areturn

  public scala.collection.parallel.mutable.ParArray(scala.collection.mutable.ArraySeq<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #839                // Field arrayseq:Lscala/collection/mutable/ArraySeq;
       5: aload_0
       6: invokespecial #1041               // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #1047               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      13: aload_0
      14: invokestatic  #1050               // Method scala/collection/GenSeqLike$class.$init$:(Lscala/collection/GenSeqLike;)V
      17: aload_0
      18: invokestatic  #1053               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      21: aload_0
      22: invokestatic  #1058               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      25: aload_0
      26: invokestatic  #1063               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      29: aload_0
      30: invokestatic  #1068               // Method scala/collection/GenSeq$class.$init$:(Lscala/collection/GenSeq;)V
      33: aload_0
      34: invokestatic  #1071               // Method scala/collection/generic/GenericParTemplate$class.$init$:(Lscala/collection/generic/GenericParTemplate;)V
      37: aload_0
      38: invokestatic  #1074               // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      41: aload_0
      42: invokestatic  #1076               // Method scala/collection/parallel/ParIterableLike$class.$init$:(Lscala/collection/parallel/ParIterableLike;)V
      45: aload_0
      46: invokestatic  #1081               // Method scala/collection/parallel/ParIterable$class.$init$:(Lscala/collection/parallel/ParIterable;)V
      49: aload_0
      50: invokestatic  #1084               // Method scala/collection/parallel/mutable/ParIterable$class.$init$:(Lscala/collection/parallel/mutable/ParIterable;)V
      53: aload_0
      54: invokestatic  #1087               // Method scala/collection/parallel/ParSeqLike$class.$init$:(Lscala/collection/parallel/ParSeqLike;)V
      57: aload_0
      58: invokestatic  #1090               // Method scala/collection/parallel/ParSeq$class.$init$:(Lscala/collection/parallel/ParSeq;)V
      61: aload_0
      62: invokestatic  #1093               // Method scala/collection/parallel/mutable/ParSeq$class.$init$:(Lscala/collection/parallel/mutable/ParSeq;)V
      65: aload_0
      66: aload_1
      67: invokevirtual #906                // Method scala/collection/mutable/ArraySeq.array:()[Ljava/lang/Object;
      70: putfield      #842                // Field scala$collection$parallel$mutable$ParArray$$array:[Ljava/lang/Object;
      73: return

  public scala.collection.parallel.mutable.ParArray(int);
    Code:
       0: aload_0
       1: getstatic     #1098               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: iload_1
       5: iconst_0
       6: if_icmplt     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokevirtual #1102               // Method scala/Predef$.require:(Z)V
      17: new           #858                // class scala/collection/mutable/ArraySeq
      20: dup
      21: iload_1
      22: invokespecial #903                // Method scala/collection/mutable/ArraySeq."<init>":(I)V
      25: invokespecial #922                // Method "<init>":(Lscala/collection/mutable/ArraySeq;)V
      28: return
}
