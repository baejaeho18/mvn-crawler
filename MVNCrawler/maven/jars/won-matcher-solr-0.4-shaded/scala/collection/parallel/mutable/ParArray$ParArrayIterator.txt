Compiled from "ParArray.scala"
public class scala.collection.parallel.mutable.ParArray$ParArrayIterator implements scala.collection.parallel.SeqSplitter<T> {
  private int i;

  private final int until;

  private final java.lang.Object[] arr;

  public final scala.collection.parallel.mutable.ParArray $outer;

  private scala.collection.generic.Signalling signalDelegate;

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<T>> splitWithSignalling();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method scala/collection/parallel/SeqSplitter$class.splitWithSignalling:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<T>> psplitWithSignalling(scala.collection.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method scala/collection/parallel/SeqSplitter$class.psplitWithSignalling:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/Seq;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.parallel.SeqSplitter<T>.Taken newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #38                 // Method scala/collection/parallel/SeqSplitter$class.newTaken:(Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Taken;
       5: areturn

  public scala.collection.parallel.SeqSplitter<T> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #43                 // Method scala/collection/parallel/SeqSplitter$class.take:(Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.SeqSplitter<T> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #49                 // Method scala/collection/parallel/SeqSplitter$class.slice:(Lscala/collection/parallel/SeqSplitter;II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public <S> scala.collection.parallel.SeqSplitter<T>.Mapped<S> map(scala.Function1<T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method scala/collection/parallel/SeqSplitter$class.map:(Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public <U, PI extends scala.collection.parallel.SeqSplitter<U>> scala.collection.parallel.SeqSplitter<T>.Appended<U, PI> appendParSeq(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method scala/collection/parallel/SeqSplitter$class.appendParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Appended;
       5: areturn

  public <S> scala.collection.parallel.SeqSplitter<T>.Zipped<S> zipParSeq(scala.collection.parallel.SeqSplitter<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/collection/parallel/SeqSplitter$class.zipParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Zipped;
       5: areturn

  public <S, U, R> scala.collection.parallel.SeqSplitter<T>.ZippedAll<U, R> zipAllParSeq(scala.collection.parallel.SeqSplitter<S>, U, R);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #75                 // Method scala/collection/parallel/SeqSplitter$class.zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$ZippedAll;
       7: areturn

  public scala.collection.parallel.SeqSplitter<T> reverse();
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method scala/collection/parallel/SeqSplitter$class.reverse:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public <U> scala.collection.parallel.SeqSplitter<T>.Patched<U> patchParSeq(int, scala.collection.parallel.SeqSplitter<U>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #88                 // Method scala/collection/parallel/SeqSplitter$class.patchParSeq:(Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
       7: areturn

  public <S> boolean corresponds(scala.Function2<T, S, java.lang.Object>, scala.collection.Iterator<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // Method scala/collection/parallel/AugmentedSeqIterator$class.corresponds:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function2;Lscala/collection/Iterator;)Z
       6: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reverseMap2combiner(scala.Function1<T, S>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // Method scala/collection/parallel/AugmentedSeqIterator$class.reverseMap2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, That> scala.collection.parallel.Combiner<U, That> updated2combiner(int, U, scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #113                // Method scala/collection/parallel/AugmentedSeqIterator$class.updated2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       7: areturn

  public scala.collection.generic.Signalling signalDelegate();
    Code:
       0: aload_0
       1: getfield      #118                // Field signalDelegate:Lscala/collection/generic/Signalling;
       4: areturn

  public void signalDelegate_$eq(scala.collection.generic.Signalling);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field signalDelegate:Lscala/collection/generic/Signalling;
       5: return

  public <S> boolean shouldSplitFurther(scala.collection.parallel.ParIterable<S>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #129                // Method scala/collection/parallel/IterableSplitter$class.shouldSplitFurther:(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/ParIterable;I)Z
       6: ireturn

  public java.lang.String buildString(scala.Function1<scala.Function1<java.lang.String, scala.runtime.BoxedUnit>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method scala/collection/parallel/IterableSplitter$class.buildString:(Lscala/collection/parallel/IterableSplitter;Lscala/Function1;)Ljava/lang/String;
       5: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #143                // Method scala/collection/parallel/IterableSplitter$class.debugInformation:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/String;
       4: areturn

  public <U extends scala.collection.parallel.IterableSplitter<T>.Taken> U newSliceInternal(U, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #148                // Method scala/collection/parallel/IterableSplitter$class.newSliceInternal:(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
       6: areturn

  public <U, PI extends scala.collection.parallel.IterableSplitter<U>> scala.collection.parallel.IterableSplitter<T>.Appended<U, PI> appendParIterable(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method scala/collection/parallel/IterableSplitter$class.appendParIterable:(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/IterableSplitter$Appended;
       5: areturn

  public boolean isAborted();
    Code:
       0: aload_0
       1: invokestatic  #163                // Method scala/collection/generic/DelegatedSignalling$class.isAborted:(Lscala/collection/generic/DelegatedSignalling;)Z
       4: ireturn

  public void abort();
    Code:
       0: aload_0
       1: invokestatic  #168                // Method scala/collection/generic/DelegatedSignalling$class.abort:(Lscala/collection/generic/DelegatedSignalling;)V
       4: return

  public int indexFlag();
    Code:
       0: aload_0
       1: invokestatic  #173                // Method scala/collection/generic/DelegatedSignalling$class.indexFlag:(Lscala/collection/generic/DelegatedSignalling;)I
       4: ireturn

  public void setIndexFlag(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #178                // Method scala/collection/generic/DelegatedSignalling$class.setIndexFlag:(Lscala/collection/generic/DelegatedSignalling;I)V
       5: return

  public void setIndexFlagIfGreater(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #181                // Method scala/collection/generic/DelegatedSignalling$class.setIndexFlagIfGreater:(Lscala/collection/generic/DelegatedSignalling;I)V
       5: return

  public void setIndexFlagIfLesser(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #184                // Method scala/collection/generic/DelegatedSignalling$class.setIndexFlagIfLesser:(Lscala/collection/generic/DelegatedSignalling;I)V
       5: return

  public int tag();
    Code:
       0: aload_0
       1: invokestatic  #187                // Method scala/collection/generic/DelegatedSignalling$class.tag:(Lscala/collection/generic/DelegatedSignalling;)I
       4: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // Method scala/collection/parallel/AugmentedIterableIterator$class.reduce:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> T min(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #200                // Method scala/collection/parallel/AugmentedIterableIterator$class.min:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <U> T max(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // Method scala/collection/parallel/AugmentedIterableIterator$class.max:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <U> U reduceLeft(int, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #210                // Method scala/collection/parallel/AugmentedIterableIterator$class.reduceLeft:(Lscala/collection/parallel/AugmentedIterableIterator;ILscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> slice2combiner(int, int, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #216                // Method scala/collection/parallel/AugmentedIterableIterator$class.slice2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;IILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       7: areturn

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> splitAt2combiners(int, scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #221                // Method scala/collection/parallel/AugmentedIterableIterator$class.splitAt2combiners:(Lscala/collection/parallel/AugmentedIterableIterator;ILscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
       7: areturn

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object> takeWhile2combiner(scala.Function1<T, java.lang.Object>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #229                // Method scala/collection/parallel/AugmentedIterableIterator$class.takeWhile2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
       6: areturn

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> span2combiners(scala.Function1<T, java.lang.Object>, scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #235                // Method scala/collection/parallel/AugmentedIterableIterator$class.span2combiners:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
       7: areturn

  public <U, That> scala.collection.parallel.Combiner<U, That> scanToCombiner(U, scala.Function2<U, U, U>, scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #240                // Method scala/collection/parallel/AugmentedIterableIterator$class.scanToCombiner:(Lscala/collection/parallel/AugmentedIterableIterator;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       7: areturn

  public <U, That> scala.collection.parallel.Combiner<U, That> scanToCombiner(int, U, scala.Function2<U, U, U>, scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #245                // Method scala/collection/parallel/AugmentedIterableIterator$class.scanToCombiner:(Lscala/collection/parallel/AugmentedIterableIterator;ILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       9: areturn

  public <U, S, That> scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> zip2combiner(scala.collection.parallel.RemainsIterator<S>, scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #250                // Method scala/collection/parallel/AugmentedIterableIterator$class.zip2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, S, That> scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> zipAll2combiner(scala.collection.parallel.RemainsIterator<S>, U, S, scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #257                // Method scala/collection/parallel/AugmentedIterableIterator$class.zipAll2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/collection/parallel/RemainsIterator;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       9: areturn

  public boolean isRemainingCheap();
    Code:
       0: aload_0
       1: invokestatic  #265                // Method scala/collection/parallel/RemainsIterator$class.isRemainingCheap:(Lscala/collection/parallel/RemainsIterator;)Z
       4: ireturn

  public scala.collection.Iterator<T> seq();
    Code:
       0: aload_0
       1: invokestatic  #272                // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #276                // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #279                // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #282                // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #287                // Method scala/collection/Iterator$class.$plus$plus:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<T, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> filter(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #296                // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<T, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #300                // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<T> withFilter(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #304                // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> filterNot(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #307                // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #312                // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #319                // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #323                // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<T> takeWhile(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #326                // Method scala/collection/Iterator$class.takeWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> partition(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #331                // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> span(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #334                // Method scala/collection/Iterator$class.span:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<T> dropWhile(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #337                // Method scala/collection/Iterator$class.dropWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<T, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #341                // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #346                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<T, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #350                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #355                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #360                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #365                // Method scala/collection/Iterator$class.indexOf:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public scala.collection.BufferedIterator<T> buffered();
    Code:
       0: aload_0
       1: invokestatic  #370                // Method scala/collection/Iterator$class.buffered:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<T>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #375                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<T>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #381                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #386                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #391                // Method scala/collection/Iterator$class.duplicate:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #396                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public scala.collection.Traversable<T> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #401                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<T> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #404                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<T> toStream();
    Code:
       0: aload_0
       1: invokestatic  #409                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #412                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<T> reversed();
    Code:
       0: aload_0
       1: invokestatic  #419                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #422                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #426                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #436                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #439                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #442                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #445                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #448                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #453                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #456                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #459                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> T maxBy(scala.Function1<T, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #464                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> T minBy(scala.Function1<T, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #468                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #473                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #480                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #486                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #491                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<T> toList();
    Code:
       0: aload_0
       1: invokestatic  #496                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<T> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #501                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<T> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #505                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<T> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #510                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #515                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #520                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<T> toVector();
    Code:
       0: aload_0
       1: invokestatic  #525                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, T, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #530                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<T, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #537                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #544                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #551                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #554                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #559                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #565                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #569                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public scala.collection.parallel.Combiner scala$collection$parallel$mutable$ParArray$ParArrayIterator$$super$reverse2combiner(scala.collection.parallel.Combiner);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #575                // Method scala/collection/parallel/AugmentedSeqIterator$class.reverse2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       5: areturn

  public int i();
    Code:
       0: aload_0
       1: getfield      #577                // Field i:I
       4: ireturn

  public void i_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #577                // Field i:I
       5: return

  public int until();
    Code:
       0: aload_0
       1: getfield      #580                // Field until:I
       4: ireturn

  public java.lang.Object[] arr();
    Code:
       0: aload_0
       1: getfield      #583                // Field arr:[Ljava/lang/Object;
       4: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #586                // Method i:()I
       4: aload_0
       5: invokevirtual #588                // Method until:()I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public T next();
    Code:
       0: aload_0
       1: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       4: aload_0
       5: invokevirtual #586                // Method i:()I
       8: aaload
       9: astore_1
      10: aload_0
      11: aload_0
      12: invokevirtual #586                // Method i:()I
      15: iconst_1
      16: iadd
      17: invokevirtual #594                // Method i_$eq:(I)V
      20: aload_1
      21: areturn

  public int remaining();
    Code:
       0: aload_0
       1: invokevirtual #588                // Method until:()I
       4: aload_0
       5: invokevirtual #586                // Method i:()I
       8: isub
       9: ireturn

  public scala.collection.parallel.mutable.ParArray<T>.ParArrayIterator dup();
    Code:
       0: new           #2                  // class scala/collection/parallel/mutable/ParArray$ParArrayIterator
       3: dup
       4: aload_0
       5: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
       8: aload_0
       9: invokevirtual #586                // Method i:()I
      12: aload_0
      13: invokevirtual #588                // Method until:()I
      16: aload_0
      17: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      20: invokespecial #605                // Method "<init>":(Lscala/collection/parallel/mutable/ParArray;II[Ljava/lang/Object;)V
      23: areturn

  public scala.collection.Seq<scala.collection.parallel.mutable.ParArray<T>.ParArrayIterator> psplit(scala.collection.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #586                // Method i:()I
       4: invokestatic  #612                // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;
       7: astore        5
       9: aload_1
      10: new           #614                // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$1
      13: dup
      14: aload_0
      15: invokespecial #617                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$1."<init>":(Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;)V
      18: invokeinterface #621,  2          // InterfaceMethod scala/collection/Seq.reduceLeft:(Lscala/Function2;)Ljava/lang/Object;
      23: invokestatic  #626                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      26: istore_3
      27: aload_0
      28: invokevirtual #628                // Method remaining:()I
      31: istore_2
      32: iload_3
      33: iload_2
      34: if_icmplt     41
      37: aload_1
      38: goto          62
      41: aload_1
      42: iload_2
      43: iload_3
      44: isub
      45: invokestatic  #632                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: getstatic     #638                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      51: invokevirtual #642                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      54: invokeinterface #646,  3          // InterfaceMethod scala/collection/Seq.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      59: checkcast     #619                // class scala/collection/Seq
      62: astore        4
      64: aload         4
      66: new           #648                // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$psplit$1
      69: dup
      70: aload_0
      71: aload         5
      73: invokespecial #651                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$psplit$1."<init>":(Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;Lscala/runtime/IntRef;)V
      76: getstatic     #638                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      79: invokevirtual #642                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      82: invokeinterface #654,  3          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      87: checkcast     #619                // class scala/collection/Seq
      90: areturn

  public scala.collection.Seq<scala.collection.parallel.mutable.ParArray<T>.ParArrayIterator> split();
    Code:
       0: aload_0
       1: invokevirtual #628                // Method remaining:()I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: if_icmplt     105
      10: iload_1
      11: iconst_2
      12: idiv
      13: istore_2
      14: getstatic     #638                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      17: getstatic     #665                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: iconst_2
      21: anewarray     #2                  // class scala/collection/parallel/mutable/ParArray$ParArrayIterator
      24: dup
      25: iconst_0
      26: new           #2                  // class scala/collection/parallel/mutable/ParArray$ParArrayIterator
      29: dup
      30: aload_0
      31: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
      34: aload_0
      35: invokevirtual #586                // Method i:()I
      38: aload_0
      39: invokevirtual #586                // Method i:()I
      42: iload_2
      43: iadd
      44: aload_0
      45: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      48: invokespecial #605                // Method "<init>":(Lscala/collection/parallel/mutable/ParArray;II[Ljava/lang/Object;)V
      51: aastore
      52: dup
      53: iconst_1
      54: new           #2                  // class scala/collection/parallel/mutable/ParArray$ParArrayIterator
      57: dup
      58: aload_0
      59: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
      62: aload_0
      63: invokevirtual #586                // Method i:()I
      66: iload_2
      67: iadd
      68: aload_0
      69: invokevirtual #588                // Method until:()I
      72: aload_0
      73: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      76: invokespecial #605                // Method "<init>":(Lscala/collection/parallel/mutable/ParArray;II[Ljava/lang/Object;)V
      79: aastore
      80: checkcast     #666                // class "[Ljava/lang/Object;"
      83: invokevirtual #670                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      86: invokevirtual #674                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      89: checkcast     #619                // class scala/collection/Seq
      92: astore_3
      93: aload_0
      94: aload_0
      95: invokevirtual #588                // Method until:()I
      98: invokevirtual #594                // Method i_$eq:(I)V
     101: aload_3
     102: goto          131
     105: getstatic     #638                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     108: getstatic     #665                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     111: iconst_1
     112: anewarray     #2                  // class scala/collection/parallel/mutable/ParArray$ParArrayIterator
     115: dup
     116: iconst_0
     117: aload_0
     118: aastore
     119: checkcast     #666                // class "[Ljava/lang/Object;"
     122: invokevirtual #670                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     125: invokevirtual #674                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
     128: checkcast     #619                // class scala/collection/Seq
     131: areturn

  public java.lang.String toString();
    Code:
       0: new           #679                // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #681                // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: ldc_w         #683                // String ParArrayIterator(
      10: invokevirtual #687                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      13: aload_0
      14: invokevirtual #586                // Method i:()I
      17: invokestatic  #632                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      20: invokevirtual #687                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      23: ldc_w         #689                // String ,
      26: invokevirtual #687                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      29: aload_0
      30: invokevirtual #588                // Method until:()I
      33: invokestatic  #632                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #687                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      39: ldc_w         #691                // String )
      42: invokevirtual #687                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      45: invokevirtual #693                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  public <U> void foreach(scala.Function1<T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_0
       7: invokevirtual #588                // Method until:()I
      10: aload_0
      11: invokevirtual #586                // Method i:()I
      14: invokespecial #699                // Method foreach_quick:(Lscala/Function1;[Ljava/lang/Object;II)V
      17: aload_0
      18: aload_0
      19: invokevirtual #588                // Method until:()I
      22: invokevirtual #594                // Method i_$eq:(I)V
      25: return

  private <U> void foreach_quick(scala.Function1<T, U>, java.lang.Object[], int, int);
    Code:
       0: iload         4
       2: istore        5
       4: iload         5
       6: iload_3
       7: if_icmpge     30
      10: aload_1
      11: aload_2
      12: iload         5
      14: aaload
      15: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: iload         5
      23: iconst_1
      24: iadd
      25: istore        5
      27: goto          4
      30: return

  public int count(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_0
       7: invokevirtual #588                // Method until:()I
      10: aload_0
      11: invokevirtual #586                // Method i:()I
      14: invokespecial #713                // Method count_quick:(Lscala/Function1;[Ljava/lang/Object;II)I
      17: istore_2
      18: aload_0
      19: aload_0
      20: invokevirtual #588                // Method until:()I
      23: invokevirtual #594                // Method i_$eq:(I)V
      26: iload_2
      27: ireturn

  private int count_quick(scala.Function1<T, java.lang.Object>, java.lang.Object[], int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         4
       5: istore        6
       7: iload         6
       9: iload_3
      10: if_icmpge     44
      13: aload_1
      14: aload_2
      15: iload         6
      17: aaload
      18: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      26: ifeq          35
      29: iload         5
      31: iconst_1
      32: iadd
      33: istore        5
      35: iload         6
      37: iconst_1
      38: iadd
      39: istore        6
      41: goto          7
      44: iload         5
      46: ireturn

  public <S> S foldLeft(S, scala.Function2<S, T, S>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       5: aload_0
       6: invokevirtual #588                // Method until:()I
       9: aload_2
      10: aload_1
      11: invokespecial #723                // Method foldLeft_quick:([Ljava/lang/Object;ILscala/Function2;Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_3
      15: aload_0
      16: aload_0
      17: invokevirtual #588                // Method until:()I
      20: invokevirtual #594                // Method i_$eq:(I)V
      23: aload_3
      24: areturn

  private <S> S foldLeft_quick(java.lang.Object[], int, scala.Function2<S, T, S>, S);
    Code:
       0: aload_0
       1: invokevirtual #586                // Method i:()I
       4: istore        5
       6: aload         4
       8: astore        6
      10: iload         5
      12: iload_2
      13: if_icmpge     39
      16: aload_3
      17: aload         6
      19: aload_1
      20: iload         5
      22: aaload
      23: invokeinterface #729,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: astore        6
      30: iload         5
      32: iconst_1
      33: iadd
      34: istore        5
      36: goto          10
      39: aload         6
      41: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #733                // Method foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S aggregate(scala.Function0<S>, scala.Function2<S, T, S>, scala.Function2<S, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #739,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_2
       8: invokevirtual #733                // Method foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      11: areturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_0
       7: invokevirtual #588                // Method until:()I
      10: aload_0
      11: invokevirtual #586                // Method i:()I
      14: aload_1
      15: invokeinterface #747,  1          // InterfaceMethod scala/math/Numeric.zero:()Ljava/lang/Object;
      20: invokespecial #751                // Method sum_quick:(Lscala/math/Numeric;[Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object;
      23: astore_2
      24: aload_0
      25: aload_0
      26: invokevirtual #588                // Method until:()I
      29: invokevirtual #594                // Method i_$eq:(I)V
      32: aload_2
      33: areturn

  private <U> U sum_quick(scala.math.Numeric<U>, java.lang.Object[], int, int, U);
    Code:
       0: iload         4
       2: istore        6
       4: aload         5
       6: astore        7
       8: iload         6
      10: iload_3
      11: if_icmpge     37
      14: aload_1
      15: aload         7
      17: aload_2
      18: iload         6
      20: aaload
      21: invokeinterface #757,  3          // InterfaceMethod scala/math/Numeric.plus:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: astore        7
      28: iload         6
      30: iconst_1
      31: iadd
      32: istore        6
      34: goto          8
      37: aload         7
      39: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_0
       7: invokevirtual #588                // Method until:()I
      10: aload_0
      11: invokevirtual #586                // Method i:()I
      14: aload_1
      15: invokeinterface #761,  1          // InterfaceMethod scala/math/Numeric.one:()Ljava/lang/Object;
      20: invokespecial #764                // Method product_quick:(Lscala/math/Numeric;[Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object;
      23: astore_2
      24: aload_0
      25: aload_0
      26: invokevirtual #588                // Method until:()I
      29: invokevirtual #594                // Method i_$eq:(I)V
      32: aload_2
      33: areturn

  private <U> U product_quick(scala.math.Numeric<U>, java.lang.Object[], int, int, U);
    Code:
       0: iload         4
       2: istore        6
       4: aload         5
       6: astore        7
       8: iload         6
      10: iload_3
      11: if_icmpge     37
      14: aload_1
      15: aload         7
      17: aload_2
      18: iload         6
      20: aaload
      21: invokeinterface #767,  3          // InterfaceMethod scala/math/Numeric.times:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: astore        7
      28: iload         6
      30: iconst_1
      31: iadd
      32: istore        6
      34: goto          8
      37: aload         7
      39: areturn

  public boolean forall(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #772                // Method isAborted:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: iconst_1
      10: istore_2
      11: aload_0
      12: invokevirtual #586                // Method i:()I
      15: aload_0
      16: invokevirtual #588                // Method until:()I
      19: if_icmpge     110
      22: aload_0
      23: invokevirtual #586                // Method i:()I
      26: getstatic     #777                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
      29: invokevirtual #780                // Method scala/collection/parallel/package$.CHECK_RATE:()I
      32: iadd
      33: aload_0
      34: invokevirtual #588                // Method until:()I
      37: if_icmple     47
      40: aload_0
      41: invokevirtual #588                // Method until:()I
      44: goto          58
      47: aload_0
      48: invokevirtual #586                // Method i:()I
      51: getstatic     #777                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
      54: invokevirtual #780                // Method scala/collection/parallel/package$.CHECK_RATE:()I
      57: iadd
      58: istore_3
      59: aload_0
      60: aload_1
      61: aload_0
      62: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
      65: invokevirtual #785                // Method scala/collection/parallel/mutable/ParArray.scala$collection$parallel$mutable$ParArray$$array:()[Ljava/lang/Object;
      68: iload_3
      69: aload_0
      70: invokevirtual #586                // Method i:()I
      73: invokespecial #789                // Method forall_quick:(Lscala/Function1;[Ljava/lang/Object;II)Z
      76: dup
      77: istore_2
      78: ifeq          89
      81: aload_0
      82: iload_3
      83: invokevirtual #594                // Method i_$eq:(I)V
      86: goto          101
      89: aload_0
      90: aload_0
      91: invokevirtual #588                // Method until:()I
      94: invokevirtual #594                // Method i_$eq:(I)V
      97: aload_0
      98: invokevirtual #791                // Method abort:()V
     101: aload_0
     102: invokevirtual #772                // Method isAborted:()Z
     105: ifeq          11
     108: iconst_0
     109: ireturn
     110: iload_2
     111: ireturn

  private boolean forall_quick(scala.Function1<T, java.lang.Object>, java.lang.Object[], int, int);
    Code:
       0: iload         4
       2: istore        5
       4: iload         5
       6: iload_3
       7: if_icmpge     37
      10: aload_1
      11: aload_2
      12: iload         5
      14: aaload
      15: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      23: ifeq          35
      26: iload         5
      28: iconst_1
      29: iadd
      30: istore        5
      32: goto          4
      35: iconst_0
      36: ireturn
      37: iconst_1
      38: ireturn

  public boolean exists(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #772                // Method isAborted:()Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: iconst_0
      10: istore_2
      11: aload_0
      12: invokevirtual #586                // Method i:()I
      15: aload_0
      16: invokevirtual #588                // Method until:()I
      19: if_icmpge     110
      22: aload_0
      23: invokevirtual #586                // Method i:()I
      26: getstatic     #777                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
      29: invokevirtual #780                // Method scala/collection/parallel/package$.CHECK_RATE:()I
      32: iadd
      33: aload_0
      34: invokevirtual #588                // Method until:()I
      37: if_icmple     47
      40: aload_0
      41: invokevirtual #588                // Method until:()I
      44: goto          58
      47: aload_0
      48: invokevirtual #586                // Method i:()I
      51: getstatic     #777                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
      54: invokevirtual #780                // Method scala/collection/parallel/package$.CHECK_RATE:()I
      57: iadd
      58: istore_3
      59: aload_0
      60: aload_1
      61: aload_0
      62: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
      65: invokevirtual #785                // Method scala/collection/parallel/mutable/ParArray.scala$collection$parallel$mutable$ParArray$$array:()[Ljava/lang/Object;
      68: iload_3
      69: aload_0
      70: invokevirtual #586                // Method i:()I
      73: invokespecial #798                // Method exists_quick:(Lscala/Function1;[Ljava/lang/Object;II)Z
      76: dup
      77: istore_2
      78: ifeq          96
      81: aload_0
      82: aload_0
      83: invokevirtual #588                // Method until:()I
      86: invokevirtual #594                // Method i_$eq:(I)V
      89: aload_0
      90: invokevirtual #791                // Method abort:()V
      93: goto          101
      96: aload_0
      97: iload_3
      98: invokevirtual #594                // Method i_$eq:(I)V
     101: aload_0
     102: invokevirtual #772                // Method isAborted:()Z
     105: ifeq          11
     108: iconst_1
     109: ireturn
     110: iload_2
     111: ireturn

  private boolean exists_quick(scala.Function1<T, java.lang.Object>, java.lang.Object[], int, int);
    Code:
       0: iload         4
       2: istore        5
       4: iload         5
       6: iload_3
       7: if_icmpge     37
      10: aload_1
      11: aload_2
      12: iload         5
      14: aaload
      15: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      23: ifeq          28
      26: iconst_1
      27: ireturn
      28: iload         5
      30: iconst_1
      31: iadd
      32: istore        5
      34: goto          4
      37: iconst_0
      38: ireturn

  public scala.Option<T> find(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #772                // Method isAborted:()Z
       4: ifeq          11
       7: getstatic     #806                // Field scala/None$.MODULE$:Lscala/None$;
      10: areturn
      11: getstatic     #806                // Field scala/None$.MODULE$:Lscala/None$;
      14: astore_2
      15: aload_0
      16: invokevirtual #586                // Method i:()I
      19: aload_0
      20: invokevirtual #588                // Method until:()I
      23: if_icmpge     132
      26: aload_0
      27: invokevirtual #586                // Method i:()I
      30: getstatic     #777                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
      33: invokevirtual #780                // Method scala/collection/parallel/package$.CHECK_RATE:()I
      36: iadd
      37: aload_0
      38: invokevirtual #588                // Method until:()I
      41: if_icmpge     58
      44: aload_0
      45: invokevirtual #586                // Method i:()I
      48: getstatic     #777                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
      51: invokevirtual #780                // Method scala/collection/parallel/package$.CHECK_RATE:()I
      54: iadd
      55: goto          62
      58: aload_0
      59: invokevirtual #588                // Method until:()I
      62: istore_3
      63: aload_0
      64: aload_1
      65: aload_0
      66: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
      69: invokevirtual #785                // Method scala/collection/parallel/mutable/ParArray.scala$collection$parallel$mutable$ParArray$$array:()[Ljava/lang/Object;
      72: iload_3
      73: aload_0
      74: invokevirtual #586                // Method i:()I
      77: invokespecial #810                // Method find_quick:(Lscala/Function1;[Ljava/lang/Object;II)Lscala/Option;
      80: dup
      81: astore_2
      82: getstatic     #806                // Field scala/None$.MODULE$:Lscala/None$;
      85: astore        4
      87: dup
      88: ifnonnull     95
      91: pop
      92: goto          111
      95: aload         4
      97: invokevirtual #813                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     100: ifeq          111
     103: aload_0
     104: iload_3
     105: invokevirtual #594                // Method i_$eq:(I)V
     108: goto          123
     111: aload_0
     112: aload_0
     113: invokevirtual #588                // Method until:()I
     116: invokevirtual #594                // Method i_$eq:(I)V
     119: aload_0
     120: invokevirtual #791                // Method abort:()V
     123: aload_0
     124: invokevirtual #772                // Method isAborted:()Z
     127: ifeq          15
     130: aload_2
     131: areturn
     132: aload_2
     133: areturn

  private scala.Option<T> find_quick(scala.Function1<T, java.lang.Object>, java.lang.Object[], int, int);
    Code:
       0: iload         4
       2: istore        5
       4: iload         5
       6: iload_3
       7: if_icmpge     49
      10: aload_2
      11: iload         5
      13: aaload
      14: astore        6
      16: aload_1
      17: aload         6
      19: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      27: ifeq          40
      30: new           #818                // class scala/Some
      33: dup
      34: aload         6
      36: invokespecial #820                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      39: areturn
      40: iload         5
      42: iconst_1
      43: iadd
      44: istore        5
      46: goto          4
      49: getstatic     #806                // Field scala/None$.MODULE$:Lscala/None$;
      52: areturn

  public scala.collection.parallel.mutable.ParArray<T>.ParArrayIterator drop(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #586                // Method i:()I
       5: iload_1
       6: iadd
       7: invokevirtual #594                // Method i_$eq:(I)V
      10: aload_0
      11: areturn

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: getstatic     #828                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #665                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: getstatic     #828                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       9: getstatic     #665                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: aload_0
      13: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
      16: invokevirtual #830                // Method scala/collection/parallel/mutable/ParArray.length:()I
      19: aload_0
      20: invokevirtual #586                // Method i:()I
      23: isub
      24: istore        5
      26: astore        4
      28: iload         5
      30: iload_3
      31: invokevirtual #834                // Method scala/runtime/RichInt$.min$extension:(II)I
      34: istore        7
      36: astore        6
      38: iload         7
      40: getstatic     #839                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      43: aload_1
      44: invokevirtual #842                // Method scala/runtime/ScalaRunTime$.array_length:(Ljava/lang/Object;)I
      47: iload_2
      48: isub
      49: invokevirtual #834                // Method scala/runtime/RichInt$.min$extension:(II)I
      52: istore        8
      54: getstatic     #847                // Field scala/Array$.MODULE$:Lscala/Array$;
      57: aload_0
      58: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      61: aload_0
      62: invokevirtual #586                // Method i:()I
      65: aload_1
      66: iload_2
      67: iload         8
      69: invokevirtual #851                // Method scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      72: aload_0
      73: aload_0
      74: invokevirtual #586                // Method i:()I
      77: iload         8
      79: iadd
      80: invokevirtual #594                // Method i_$eq:(I)V
      83: return

  public int prefixLength(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_0
       7: invokevirtual #588                // Method until:()I
      10: aload_0
      11: invokevirtual #586                // Method i:()I
      14: invokespecial #857                // Method prefixLength_quick:(Lscala/Function1;[Ljava/lang/Object;II)I
      17: istore_2
      18: aload_0
      19: aload_0
      20: invokevirtual #586                // Method i:()I
      23: iload_2
      24: iconst_1
      25: iadd
      26: iadd
      27: invokevirtual #594                // Method i_$eq:(I)V
      30: iload_2
      31: ireturn

  private int prefixLength_quick(scala.Function1<T, java.lang.Object>, java.lang.Object[], int, int);
    Code:
       0: iload         4
       2: istore        5
       4: iload_3
       5: istore        6
       7: iload         5
       9: iload         6
      11: if_icmpge     46
      14: aload_1
      15: aload_2
      16: iload         5
      18: aaload
      19: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      27: ifeq          39
      30: iload         5
      32: iconst_1
      33: iadd
      34: istore        5
      36: goto          7
      39: iload         5
      41: istore        6
      43: goto          7
      46: iload         6
      48: iload         4
      50: isub
      51: ireturn

  public int indexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_0
       7: invokevirtual #588                // Method until:()I
      10: aload_0
      11: invokevirtual #586                // Method i:()I
      14: invokespecial #864                // Method indexWhere_quick:(Lscala/Function1;[Ljava/lang/Object;II)I
      17: istore_2
      18: iload_2
      19: iconst_m1
      20: if_icmpeq     32
      23: iload_2
      24: aload_0
      25: invokevirtual #586                // Method i:()I
      28: isub
      29: goto          33
      32: iload_2
      33: istore_3
      34: aload_0
      35: aload_0
      36: invokevirtual #588                // Method until:()I
      39: invokevirtual #594                // Method i_$eq:(I)V
      42: iload_3
      43: ireturn

  private int indexWhere_quick(scala.Function1<T, java.lang.Object>, java.lang.Object[], int, int);
    Code:
       0: iload         4
       2: istore        5
       4: iconst_m1
       5: istore        6
       7: iload         5
       9: iload_3
      10: if_icmpge     48
      13: aload_1
      14: aload_2
      15: iload         5
      17: aaload
      18: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      26: ifeq          39
      29: iload         5
      31: istore        6
      33: iload_3
      34: istore        5
      36: goto          7
      39: iload         5
      41: iconst_1
      42: iadd
      43: istore        5
      45: goto          7
      48: iload         6
      50: ireturn

  public int lastIndexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_0
       7: invokevirtual #586                // Method i:()I
      10: aload_0
      11: invokevirtual #588                // Method until:()I
      14: invokespecial #870                // Method lastIndexWhere_quick:(Lscala/Function1;[Ljava/lang/Object;II)I
      17: istore_2
      18: iload_2
      19: iconst_m1
      20: if_icmpeq     32
      23: iload_2
      24: aload_0
      25: invokevirtual #586                // Method i:()I
      28: isub
      29: goto          33
      32: iload_2
      33: istore_3
      34: aload_0
      35: aload_0
      36: invokevirtual #588                // Method until:()I
      39: invokevirtual #594                // Method i_$eq:(I)V
      42: iload_3
      43: ireturn

  private int lastIndexWhere_quick(scala.Function1<T, java.lang.Object>, java.lang.Object[], int, int);
    Code:
       0: iconst_m1
       1: istore        5
       3: iload         4
       5: iconst_1
       6: isub
       7: istore        6
       9: iload         6
      11: iload_3
      12: if_icmplt     50
      15: aload_1
      16: aload_2
      17: iload         6
      19: aaload
      20: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      28: ifeq          41
      31: iload         6
      33: istore        5
      35: iconst_m1
      36: istore        6
      38: goto          9
      41: iload         6
      43: iconst_1
      44: isub
      45: istore        6
      47: goto          9
      50: iload         5
      52: ireturn

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: iconst_1
       1: istore        4
       3: aload_0
       4: invokevirtual #586                // Method i:()I
       7: aload_0
       8: invokevirtual #588                // Method until:()I
      11: if_icmpge     125
      14: aload_1
      15: invokeinterface #875,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      20: ifeq          125
      23: aload_0
      24: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      27: aload_0
      28: invokevirtual #586                // Method i:()I
      31: aaload
      32: aload_1
      33: invokeinterface #877,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      38: astore_3
      39: dup
      40: astore_2
      41: aload_3
      42: if_acmpne     49
      45: iconst_1
      46: goto          98
      49: aload_2
      50: ifnonnull     57
      53: iconst_0
      54: goto          98
      57: aload_2
      58: instanceof    #879                // class java/lang/Number
      61: ifeq          75
      64: aload_2
      65: checkcast     #879                // class java/lang/Number
      68: aload_3
      69: invokestatic  #883                // Method scala/runtime/BoxesRunTime.equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
      72: goto          98
      75: aload_2
      76: instanceof    #885                // class java/lang/Character
      79: ifeq          93
      82: aload_2
      83: checkcast     #885                // class java/lang/Character
      86: aload_3
      87: invokestatic  #889                // Method scala/runtime/BoxesRunTime.equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
      90: goto          98
      93: aload_2
      94: aload_3
      95: invokevirtual #813                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      98: ifne          112
     101: aload_0
     102: aload_0
     103: invokevirtual #588                // Method until:()I
     106: invokevirtual #594                // Method i_$eq:(I)V
     109: iconst_0
     110: istore        4
     112: aload_0
     113: aload_0
     114: invokevirtual #586                // Method i:()I
     117: iconst_1
     118: iadd
     119: invokevirtual #594                // Method i_$eq:(I)V
     122: goto          3
     125: iload         4
     127: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> map2combiner(scala.Function1<T, S>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #628                // Method remaining:()I
       5: invokeinterface #896,  2          // InterfaceMethod scala/collection/parallel/Combiner.sizeHint:(I)V
      10: aload_0
      11: aload_1
      12: aload_0
      13: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      16: aload_2
      17: aload_0
      18: invokevirtual #588                // Method until:()I
      21: aload_0
      22: invokevirtual #586                // Method i:()I
      25: invokespecial #900                // Method map2combiner_quick:(Lscala/Function1;[Ljava/lang/Object;Lscala/collection/mutable/Builder;II)V
      28: aload_0
      29: aload_0
      30: invokevirtual #588                // Method until:()I
      33: invokevirtual #594                // Method i_$eq:(I)V
      36: aload_2
      37: areturn

  private <S, That> void map2combiner_quick(scala.Function1<T, S>, java.lang.Object[], scala.collection.mutable.Builder<S, That>, int, int);
    Code:
       0: iload         5
       2: istore        6
       4: iload         6
       6: iload         4
       8: if_icmpge     37
      11: aload_3
      12: aload_1
      13: aload_2
      14: iload         6
      16: aaload
      17: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: invokeinterface #906,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      27: pop
      28: iload         6
      30: iconst_1
      31: iadd
      32: istore        6
      34: goto          4
      37: return

  public <S, That> scala.collection.parallel.Combiner<S, That> collect2combiner(scala.PartialFunction<T, S>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       6: aload_2
       7: aload_0
       8: invokevirtual #588                // Method until:()I
      11: aload_0
      12: invokevirtual #586                // Method i:()I
      15: invokespecial #913                // Method collect2combiner_quick:(Lscala/PartialFunction;[Ljava/lang/Object;Lscala/collection/mutable/Builder;II)V
      18: aload_0
      19: aload_0
      20: invokevirtual #588                // Method until:()I
      23: invokevirtual #594                // Method i_$eq:(I)V
      26: aload_2
      27: areturn

  private <S, That> void collect2combiner_quick(scala.PartialFunction<T, S>, java.lang.Object[], scala.collection.mutable.Builder<S, That>, int, int);
    Code:
       0: iload         5
       2: istore        6
       4: aload_1
       5: new           #915                // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$2
       8: dup
       9: aload_0
      10: aload_3
      11: invokespecial #918                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$2."<init>":(Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;Lscala/collection/mutable/Builder;)V
      14: invokeinterface #924,  2          // InterfaceMethod scala/PartialFunction.runWith:(Lscala/Function1;)Lscala/Function1;
      19: astore        7
      21: iload         6
      23: iload         4
      25: if_icmpge     53
      28: aload_2
      29: iload         6
      31: aaload
      32: astore        8
      34: aload         7
      36: aload         8
      38: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: iload         6
      46: iconst_1
      47: iadd
      48: istore        6
      50: goto          21
      53: return

  public <S, That> scala.collection.parallel.Combiner<S, That> flatmap2combiner(scala.Function1<T, scala.collection.GenTraversableOnce<S>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: invokevirtual #586                // Method i:()I
       4: aload_0
       5: invokevirtual #588                // Method until:()I
       8: if_icmpge     81
      11: aload_1
      12: aload_0
      13: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      16: aload_0
      17: invokevirtual #586                // Method i:()I
      20: aaload
      21: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #928                // class scala/collection/GenTraversableOnce
      29: astore_3
      30: aload_3
      31: instanceof    #930                // class scala/collection/Iterable
      34: ifeq          55
      37: aload_2
      38: aload_3
      39: checkcast     #930                // class scala/collection/Iterable
      42: invokeinterface #933,  1          // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
      47: invokeinterface #937,  2          // InterfaceMethod scala/collection/parallel/Combiner.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
      52: goto          67
      55: aload_2
      56: aload_3
      57: invokeinterface #940,  1          // InterfaceMethod scala/collection/GenTraversableOnce.seq:()Lscala/collection/TraversableOnce;
      62: invokeinterface #937,  2          // InterfaceMethod scala/collection/parallel/Combiner.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
      67: pop
      68: aload_0
      69: aload_0
      70: invokevirtual #586                // Method i:()I
      73: iconst_1
      74: iadd
      75: invokevirtual #594                // Method i_$eq:(I)V
      78: goto          0
      81: aload_2
      82: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> filter2combiner(scala.Function1<T, java.lang.Object>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       7: aload_0
       8: invokevirtual #588                // Method until:()I
      11: aload_0
      12: invokevirtual #586                // Method i:()I
      15: invokespecial #948                // Method filter2combiner_quick:(Lscala/Function1;Lscala/collection/mutable/Builder;[Ljava/lang/Object;II)V
      18: aload_0
      19: aload_0
      20: invokevirtual #588                // Method until:()I
      23: invokevirtual #594                // Method i_$eq:(I)V
      26: aload_2
      27: areturn

  private <U, This> void filter2combiner_quick(scala.Function1<T, java.lang.Object>, scala.collection.mutable.Builder<U, This>, java.lang.Object[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #586                // Method i:()I
       4: istore        6
       6: iload         6
       8: iload         4
      10: if_icmpge     57
      13: aload_3
      14: iload         6
      16: aaload
      17: astore        7
      19: aload_1
      20: aload         7
      22: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      30: ifeq          44
      33: aload_2
      34: aload         7
      36: invokeinterface #906,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      41: goto          47
      44: getstatic     #954                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      47: pop
      48: iload         6
      50: iconst_1
      51: iadd
      52: istore        6
      54: goto          6
      57: return

  public <U, This> scala.collection.parallel.Combiner<U, This> filterNot2combiner(scala.Function1<T, java.lang.Object>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       7: aload_0
       8: invokevirtual #588                // Method until:()I
      11: aload_0
      12: invokevirtual #586                // Method i:()I
      15: invokespecial #958                // Method filterNot2combiner_quick:(Lscala/Function1;Lscala/collection/mutable/Builder;[Ljava/lang/Object;II)V
      18: aload_0
      19: aload_0
      20: invokevirtual #588                // Method until:()I
      23: invokevirtual #594                // Method i_$eq:(I)V
      26: aload_2
      27: areturn

  private <U, This> void filterNot2combiner_quick(scala.Function1<T, java.lang.Object>, scala.collection.mutable.Builder<U, This>, java.lang.Object[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #586                // Method i:()I
       4: istore        6
       6: iload         6
       8: iload         4
      10: if_icmpge     57
      13: aload_3
      14: iload         6
      16: aaload
      17: astore        7
      19: aload_1
      20: aload         7
      22: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      30: ifeq          39
      33: getstatic     #954                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      36: goto          47
      39: aload_2
      40: aload         7
      42: invokeinterface #906,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      47: pop
      48: iload         6
      50: iconst_1
      51: iadd
      52: istore        6
      54: goto          6
      57: return

  public <U, Coll, Bld extends scala.collection.mutable.Builder<U, Coll>> Bld copy2builder(Bld);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #628                // Method remaining:()I
       5: invokeinterface #961,  2          // InterfaceMethod scala/collection/mutable/Builder.sizeHint:(I)V
      10: aload_0
      11: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
      14: aload_1
      15: invokevirtual #965                // Method scala/collection/parallel/mutable/ParArray.builder2ops:(Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
      18: new           #967                // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$copy2builder$2
      21: dup
      22: aload_0
      23: invokespecial #968                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$copy2builder$2."<init>":(Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;)V
      26: invokeinterface #974,  2          // InterfaceMethod scala/collection/parallel/ParIterableLike$BuilderOps.ifIs:(Lscala/Function1;)Lscala/collection/parallel/ParIterableLike$BuilderOps$Otherwise;
      31: new           #976                // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$copy2builder$1
      34: dup
      35: aload_0
      36: aload_1
      37: invokespecial #977                // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$copy2builder$1."<init>":(Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;Lscala/collection/mutable/Builder;)V
      40: getstatic     #982                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      43: ldc_w         #984                // class scala/collection/parallel/mutable/ResizableParArrayCombiner
      46: invokevirtual #987                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      49: invokeinterface #993,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike$BuilderOps$Otherwise.otherwise:(Lscala/Function0;Lscala/reflect/ClassTag;)V
      54: aload_1
      55: areturn

  public <U, Coll> void scala$collection$parallel$mutable$ParArray$ParArrayIterator$$copy2builder_quick(scala.collection.mutable.Builder<U, Coll>, java.lang.Object[], int, int);
    Code:
       0: iload         4
       2: istore        5
       4: iload         5
       6: iload_3
       7: if_icmpge     30
      10: aload_1
      11: aload_2
      12: iload         5
      14: aaload
      15: invokeinterface #906,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      20: pop
      21: iload         5
      23: iconst_1
      24: iadd
      25: istore        5
      27: goto          4
      30: return

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> partition2combiners(scala.Function1<T, java.lang.Object>, scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_0
       5: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
       8: aload_0
       9: invokevirtual #588                // Method until:()I
      12: aload_0
      13: invokevirtual #586                // Method i:()I
      16: invokespecial #1000               // Method partition2combiners_quick:(Lscala/Function1;Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;[Ljava/lang/Object;II)V
      19: aload_0
      20: aload_0
      21: invokevirtual #588                // Method until:()I
      24: invokevirtual #594                // Method i_$eq:(I)V
      27: new           #1002               // class scala/Tuple2
      30: dup
      31: aload_2
      32: aload_3
      33: invokespecial #1005               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      36: areturn

  private <U, This> void partition2combiners_quick(scala.Function1<T, java.lang.Object>, scala.collection.mutable.Builder<U, This>, scala.collection.mutable.Builder<U, This>, java.lang.Object[], int, int);
    Code:
       0: iload         6
       2: istore        7
       4: iload         7
       6: iload         5
       8: if_icmpge     61
      11: aload         4
      13: iload         7
      15: aaload
      16: astore        8
      18: aload_1
      19: aload         8
      21: invokeinterface #704,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokestatic  #717                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      29: ifeq          43
      32: aload_2
      33: aload         8
      35: invokeinterface #906,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      40: goto          51
      43: aload_3
      44: aload         8
      46: invokeinterface #906,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      51: pop
      52: iload         7
      54: iconst_1
      55: iadd
      56: istore        7
      58: goto          4
      61: return

  public <U, This> scala.collection.parallel.Combiner<U, This> take2combiner(int, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_2
       1: iload_1
       2: invokeinterface #896,  2          // InterfaceMethod scala/collection/parallel/Combiner.sizeHint:(I)V
       7: aload_0
       8: invokevirtual #586                // Method i:()I
      11: iload_1
      12: iadd
      13: istore_3
      14: aload_0
      15: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      18: astore        4
      20: aload_0
      21: invokevirtual #586                // Method i:()I
      24: iload_3
      25: if_icmpge     55
      28: aload_2
      29: aload         4
      31: aload_0
      32: invokevirtual #586                // Method i:()I
      35: aaload
      36: invokeinterface #1010,  2         // InterfaceMethod scala/collection/parallel/Combiner.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      41: pop
      42: aload_0
      43: aload_0
      44: invokevirtual #586                // Method i:()I
      47: iconst_1
      48: iadd
      49: invokevirtual #594                // Method i_$eq:(I)V
      52: goto          20
      55: aload_2
      56: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> drop2combiner(int, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1013               // Method drop:(I)Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;
       5: pop
       6: aload_2
       7: aload_0
       8: invokevirtual #628                // Method remaining:()I
      11: invokeinterface #896,  2          // InterfaceMethod scala/collection/parallel/Combiner.sizeHint:(I)V
      16: aload_0
      17: invokevirtual #586                // Method i:()I
      20: aload_0
      21: invokevirtual #588                // Method until:()I
      24: if_icmpge     56
      27: aload_2
      28: aload_0
      29: invokevirtual #592                // Method arr:()[Ljava/lang/Object;
      32: aload_0
      33: invokevirtual #586                // Method i:()I
      36: aaload
      37: invokeinterface #1010,  2         // InterfaceMethod scala/collection/parallel/Combiner.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      42: pop
      43: aload_0
      44: aload_0
      45: invokevirtual #586                // Method i:()I
      48: iconst_1
      49: iadd
      50: invokevirtual #594                // Method i_$eq:(I)V
      53: goto          16
      56: aload_2
      57: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> reverse2combiner(scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
       4: aload_1
       5: invokevirtual #965                // Method scala/collection/parallel/mutable/ParArray.builder2ops:(Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
       8: new           #1015               // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$reverse2combiner$2
      11: dup
      12: aload_0
      13: invokespecial #1016               // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$reverse2combiner$2."<init>":(Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;)V
      16: invokeinterface #974,  2          // InterfaceMethod scala/collection/parallel/ParIterableLike$BuilderOps.ifIs:(Lscala/Function1;)Lscala/collection/parallel/ParIterableLike$BuilderOps$Otherwise;
      21: new           #1018               // class scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$reverse2combiner$1
      24: dup
      25: aload_0
      26: aload_1
      27: invokespecial #1021               // Method scala/collection/parallel/mutable/ParArray$ParArrayIterator$$anonfun$reverse2combiner$1."<init>":(Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;Lscala/collection/parallel/Combiner;)V
      30: getstatic     #982                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      33: ldc_w         #984                // class scala/collection/parallel/mutable/ResizableParArrayCombiner
      36: invokevirtual #987                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      39: invokeinterface #993,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike$BuilderOps$Otherwise.otherwise:(Lscala/Function0;Lscala/reflect/ClassTag;)V
      44: aload_1
      45: areturn

  public void scala$collection$parallel$mutable$ParArray$ParArrayIterator$$reverse2combiner_quick(java.lang.Object[], java.lang.Object[], int, int, int);
    Code:
       0: iload         4
       2: istore        6
       4: iload_3
       5: iload         5
       7: iadd
       8: iload         4
      10: isub
      11: iconst_1
      12: isub
      13: istore        7
      15: iload         6
      17: iload         5
      19: if_icmpge     45
      22: aload_1
      23: iload         7
      25: aload_2
      26: iload         6
      28: aaload
      29: aastore
      30: iload         6
      32: iconst_1
      33: iadd
      34: istore        6
      36: iload         7
      38: iconst_1
      39: isub
      40: istore        7
      42: goto          15
      45: return

  public <U, A> void scanToArray(U, scala.Function2<U, U, U>, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #601                // Method scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer:()Lscala/collection/parallel/mutable/ParArray;
       5: invokevirtual #785                // Method scala/collection/parallel/mutable/ParArray.scala$collection$parallel$mutable$ParArray$$array:()[Ljava/lang/Object;
       8: aload_3
       9: checkcast     #666                // class "[Ljava/lang/Object;"
      12: aload_2
      13: aload_1
      14: aload_0
      15: invokevirtual #586                // Method i:()I
      18: aload_0
      19: invokevirtual #588                // Method until:()I
      22: iload         4
      24: invokevirtual #1034               // Method scanToArray_quick:([Ljava/lang/Object;[Ljava/lang/Object;Lscala/Function2;Ljava/lang/Object;III)V
      27: aload_0
      28: aload_0
      29: invokevirtual #588                // Method until:()I
      32: invokevirtual #594                // Method i_$eq:(I)V
      35: return

  public <U> void scanToArray_quick(java.lang.Object[], java.lang.Object[], scala.Function2<U, U, U>, U, int, int, int);
    Code:
       0: aload         4
       2: astore        8
       4: iload         5
       6: istore        9
       8: iload         7
      10: istore        10
      12: iload         9
      14: iload         6
      16: if_icmpge     54
      19: aload_3
      20: aload         8
      22: aload_1
      23: iload         9
      25: aaload
      26: invokeinterface #729,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: astore        8
      33: aload_2
      34: iload         10
      36: aload         8
      38: aastore
      39: iload         9
      41: iconst_1
      42: iadd
      43: istore        9
      45: iload         10
      47: iconst_1
      48: iadd
      49: istore        10
      51: goto          12
      54: return

  public scala.collection.parallel.mutable.ParArray scala$collection$parallel$mutable$ParArray$ParArrayIterator$$$outer();
    Code:
       0: aload_0
       1: getfield      #1041               // Field $outer:Lscala/collection/parallel/mutable/ParArray;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1044               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1047               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1050               // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1053               // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1058               // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public scala.collection.parallel.IterableSplitter$ZippedAll zipAllParSeq(scala.collection.parallel.SeqSplitter, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1061               // Method zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$ZippedAll;
       7: areturn

  public scala.collection.parallel.IterableSplitter$Zipped zipParSeq(scala.collection.parallel.SeqSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1064               // Method zipParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Zipped;
       5: areturn

  public scala.collection.Iterator map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1066               // Method map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public scala.collection.parallel.IterableSplitter$Mapped map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1066               // Method map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public scala.collection.Iterator slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1070               // Method slice:(II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public scala.collection.parallel.IterableSplitter slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1070               // Method slice:(II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public scala.collection.Iterator take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1074               // Method take:(I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.IterableSplitter take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1074               // Method take:(I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.IterableSplitter$Taken newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1078               // Method newTaken:(I)Lscala/collection/parallel/SeqSplitter$Taken;
       5: areturn

  public scala.collection.Iterator drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1013               // Method drop:(I)Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;
       5: areturn

  public scala.collection.parallel.IterableSplitter dup();
    Code:
       0: aload_0
       1: invokevirtual #1081               // Method dup:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;
       4: areturn

  public scala.collection.parallel.SeqSplitter dup();
    Code:
       0: aload_0
       1: invokevirtual #1081               // Method dup:()Lscala/collection/parallel/mutable/ParArray$ParArrayIterator;
       4: areturn

  public scala.collection.parallel.mutable.ParArray$ParArrayIterator(scala.collection.parallel.mutable.ParArray<T>, int, int, java.lang.Object[]);
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #577                // Field i:I
       5: aload_0
       6: iload_3
       7: putfield      #580                // Field until:I
      10: aload_0
      11: aload         4
      13: putfield      #583                // Field arr:[Ljava/lang/Object;
      16: aload_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #1041               // Field $outer:Lscala/collection/parallel/mutable/ParArray;
      27: aload_0
      28: invokespecial #1082               // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #1086               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      35: aload_0
      36: invokestatic  #1089               // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      39: aload_0
      40: invokestatic  #1092               // Method scala/collection/parallel/RemainsIterator$class.$init$:(Lscala/collection/parallel/RemainsIterator;)V
      43: aload_0
      44: invokestatic  #1095               // Method scala/collection/parallel/AugmentedIterableIterator$class.$init$:(Lscala/collection/parallel/AugmentedIterableIterator;)V
      47: aload_0
      48: invokestatic  #1097               // Method scala/collection/generic/DelegatedSignalling$class.$init$:(Lscala/collection/generic/DelegatedSignalling;)V
      51: aload_0
      52: invokestatic  #1100               // Method scala/collection/parallel/IterableSplitter$class.$init$:(Lscala/collection/parallel/IterableSplitter;)V
      55: aload_0
      56: invokestatic  #1103               // Method scala/collection/parallel/AugmentedSeqIterator$class.$init$:(Lscala/collection/parallel/AugmentedSeqIterator;)V
      59: aload_0
      60: invokestatic  #1106               // Method scala/collection/parallel/SeqSplitter$class.$init$:(Lscala/collection/parallel/SeqSplitter;)V
      63: return
}
