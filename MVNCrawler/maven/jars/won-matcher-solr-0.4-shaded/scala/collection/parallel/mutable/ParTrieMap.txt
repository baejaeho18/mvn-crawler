Compiled from "ParTrieMap.scala"
public final class scala.collection.parallel.mutable.ParTrieMap<K, V> implements scala.collection.parallel.mutable.ParMap<K, V>, scala.collection.parallel.mutable.ParTrieMapCombiner<K, V>, scala.Serializable {
  private final scala.collection.concurrent.TrieMap<K, V> scala$collection$parallel$mutable$ParTrieMap$$ctrie;

  private volatile transient scala.collection.parallel.TaskSupport _combinerTaskSupport;

  private volatile transient scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport;

  private volatile scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$module;

  private volatile scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$module;

  public static <K, V> scala.collection.generic.CanCombineFrom<scala.collection.parallel.mutable.ParTrieMap<?, ?>, scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>> canBuildFrom();
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParTrieMap$.MODULE$:Lscala/collection/parallel/mutable/ParTrieMap$;
       3: invokevirtual #25                 // Method scala/collection/parallel/mutable/ParTrieMap$.canBuildFrom:()Lscala/collection/generic/CanCombineFrom;
       6: areturn

  public <N extends scala.Tuple2<K, V>, NewTo> scala.collection.parallel.Combiner<N, NewTo> combine(scala.collection.parallel.Combiner<N, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method scala/collection/parallel/mutable/ParTrieMapCombiner$class.combine:(Lscala/collection/parallel/mutable/ParTrieMapCombiner;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       5: areturn

  public boolean canBeShared();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method scala/collection/parallel/mutable/ParTrieMapCombiner$class.canBeShared:(Lscala/collection/parallel/mutable/ParTrieMapCombiner;)Z
       4: ireturn

  public scala.collection.parallel.TaskSupport _combinerTaskSupport();
    Code:
       0: aload_0
       1: getfield      #54                 // Field _combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void _combinerTaskSupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field _combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
       5: return

  public scala.collection.parallel.TaskSupport combinerTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method scala/collection/parallel/Combiner$class.combinerTaskSupport:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void combinerTaskSupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // Method scala/collection/parallel/Combiner$class.combinerTaskSupport_$eq:(Lscala/collection/parallel/Combiner;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public java.lang.Object resultWithTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method scala/collection/parallel/Combiner$class.resultWithTaskSupport:(Lscala/collection/parallel/Combiner;)Ljava/lang/Object;
       4: areturn

  public void sizeHint(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #81                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;I)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #93                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I)V
       6: return

  public void sizeHintBounded(int, scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #99                 // Method scala/collection/mutable/Builder$class.sizeHintBounded:(Lscala/collection/mutable/Builder;ILscala/collection/TraversableLike;)V
       6: return

  public <NewTo> scala.collection.mutable.Builder<scala.Tuple2<K, V>, NewTo> mapResult(scala.Function1<scala.collection.parallel.mutable.ParTrieMap<K, V>, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
       5: areturn

  public <U> scala.collection.parallel.mutable.ParMap<K, U> updated(K, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #114                // Method scala/collection/parallel/mutable/ParMap$class.updated:(Lscala/collection/parallel/mutable/ParMap;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       6: areturn

  public scala.collection.parallel.mutable.ParMap<K, V> withDefault(scala.Function1<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #122                // Method scala/collection/parallel/mutable/ParMap$class.withDefault:(Lscala/collection/parallel/mutable/ParMap;Lscala/Function1;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.parallel.mutable.ParMap<K, V> withDefaultValue(V);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method scala/collection/parallel/mutable/ParMap$class.withDefaultValue:(Lscala/collection/parallel/mutable/ParMap;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public <U> scala.collection.parallel.mutable.ParMap<K, U> $plus(scala.Tuple2<K, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // Method scala/collection/parallel/mutable/ParMapLike$class.$plus:(Lscala/collection/parallel/mutable/ParMapLike;Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.parallel.mutable.ParMap $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // Method scala/collection/parallel/mutable/ParMapLike$class.$minus:(Lscala/collection/parallel/mutable/ParMapLike;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public java.lang.Object scala$collection$mutable$Cloneable$$super$clone();
    Code:
       0: aload_0
       1: invokespecial #145                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokestatic  #150                // Method scala/collection/mutable/Cloneable$class.clone:(Lscala/collection/mutable/Cloneable;)Ljava/lang/Object;
       4: areturn

  public scala.collection.generic.Shrinkable<K> $minus$eq(K, K, scala.collection.Seq<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #157                // Method scala/collection/generic/Shrinkable$class.$minus$eq:(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;
       7: areturn

  public scala.collection.generic.Shrinkable<K> $minus$minus$eq(scala.collection.TraversableOnce<K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/collection/generic/Shrinkable$class.$minus$minus$eq:(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #175                // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<scala.Tuple2<K, V>> $plus$plus$eq(scala.collection.TraversableOnce<scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #180                // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.parallel.mutable.ParIterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #187                // Method scala/collection/parallel/mutable/ParIterable$class.companion:(Lscala/collection/parallel/mutable/ParIterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.parallel.mutable.ParIterable<scala.Tuple2<K, V>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #192                // Method scala/collection/parallel/mutable/ParIterable$class.toIterable:(Lscala/collection/parallel/mutable/ParIterable;)Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public scala.collection.parallel.mutable.ParSeq<scala.Tuple2<K, V>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #197                // Method scala/collection/parallel/mutable/ParIterable$class.toSeq:(Lscala/collection/parallel/mutable/ParIterable;)Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public V default(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // Method scala/collection/parallel/ParMapLike$class.default:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public V apply(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #207                // Method scala/collection/parallel/ParMapLike$class.apply:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <U> U getOrElse(K, scala.Function0<U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #212                // Method scala/collection/parallel/ParMapLike$class.getOrElse:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public boolean contains(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // Method scala/collection/parallel/ParMapLike$class.contains:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean isDefinedAt(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #221                // Method scala/collection/parallel/ParMapLike$class.isDefinedAt:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.parallel.IterableSplitter<K> keysIterator();
    Code:
       0: aload_0
       1: invokestatic  #226                // Method scala/collection/parallel/ParMapLike$class.keysIterator:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.parallel.IterableSplitter<V> valuesIterator();
    Code:
       0: aload_0
       1: invokestatic  #229                // Method scala/collection/parallel/ParMapLike$class.valuesIterator:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.parallel.ParSet<K> keySet();
    Code:
       0: aload_0
       1: invokestatic  #234                // Method scala/collection/parallel/ParMapLike$class.keySet:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParSet;
       4: areturn

  public scala.collection.parallel.ParIterable<K> keys();
    Code:
       0: aload_0
       1: invokestatic  #239                // Method scala/collection/parallel/ParMapLike$class.keys:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable<V> values();
    Code:
       0: aload_0
       1: invokestatic  #242                // Method scala/collection/parallel/ParMapLike$class.values:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParMap<K, V> filterKeys(scala.Function1<K, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #247                // Method scala/collection/parallel/ParMapLike$class.filterKeys:(Lscala/collection/parallel/ParMapLike;Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public <S> scala.collection.parallel.ParMap<K, S> mapValues(scala.Function1<V, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #251                // Method scala/collection/parallel/ParMapLike$class.mapValues:(Lscala/collection/parallel/ParMapLike;Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport();
    Code:
       0: aload_0
       1: getfield      #253                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void scala$collection$parallel$ParIterableLike$$_tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #253                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       5: return

  private scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #258                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       8: ifnonnull     23
      11: aload_0
      12: new           #260                // class scala/collection/parallel/ParIterableLike$ScanNode$
      15: dup
      16: aload_0
      17: invokespecial #264                // Method scala/collection/parallel/ParIterableLike$ScanNode$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #258                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      23: getstatic     #270                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #258                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode();
    Code:
       0: aload_0
       1: getfield      #258                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #275                // Method ScanNode$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanNode$;
      11: goto          18
      14: aload_0
      15: getfield      #258                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      18: areturn

  private scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #279                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       8: ifnonnull     23
      11: aload_0
      12: new           #281                // class scala/collection/parallel/ParIterableLike$ScanLeaf$
      15: dup
      16: aload_0
      17: invokespecial #282                // Method scala/collection/parallel/ParIterableLike$ScanLeaf$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #279                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      23: getstatic     #270                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #279                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf();
    Code:
       0: aload_0
       1: getfield      #279                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #285                // Method ScanLeaf$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      11: goto          18
      14: aload_0
      15: getfield      #279                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      18: areturn

  public void initTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #291                // Method scala/collection/parallel/ParIterableLike$class.initTaskSupport:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.TaskSupport tasksupport();
    Code:
       0: aload_0
       1: invokestatic  #295                // Method scala/collection/parallel/ParIterableLike$class.tasksupport:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #299                // Method scala/collection/parallel/ParIterableLike$class.tasksupport_$eq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public scala.collection.parallel.ParIterable repr();
    Code:
       0: aload_0
       1: invokestatic  #304                // Method scala/collection/parallel/ParIterableLike$class.repr:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #308                // Method scala/collection/parallel/ParIterableLike$class.isTraversableAgain:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #311                // Method scala/collection/parallel/ParIterableLike$class.hasDefiniteSize:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #314                // Method scala/collection/parallel/ParIterableLike$class.isEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #317                // Method scala/collection/parallel/ParIterableLike$class.nonEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public java.lang.Object head();
    Code:
       0: aload_0
       1: invokestatic  #321                // Method scala/collection/parallel/ParIterableLike$class.head:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<K, V>> headOption();
    Code:
       0: aload_0
       1: invokestatic  #326                // Method scala/collection/parallel/ParIterableLike$class.headOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable tail();
    Code:
       0: aload_0
       1: invokestatic  #329                // Method scala/collection/parallel/ParIterableLike$class.tail:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object last();
    Code:
       0: aload_0
       1: invokestatic  #332                // Method scala/collection/parallel/ParIterableLike$class.last:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<K, V>> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #335                // Method scala/collection/parallel/ParIterableLike$class.lastOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable init();
    Code:
       0: aload_0
       1: invokestatic  #338                // Method scala/collection/parallel/ParIterableLike$class.init:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.Splitter<scala.Tuple2<K, V>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #343                // Method scala/collection/parallel/ParIterableLike$class.iterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/Splitter;
       4: areturn

  public scala.collection.parallel.ParIterable par();
    Code:
       0: aload_0
       1: invokestatic  #346                // Method scala/collection/parallel/ParIterableLike$class.par:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public boolean isStrictSplitterCollection();
    Code:
       0: aload_0
       1: invokestatic  #349                // Method scala/collection/parallel/ParIterableLike$class.isStrictSplitterCollection:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reuse(scala.Option<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #354                // Method scala/collection/parallel/ParIterableLike$class.reuse:(Lscala/collection/parallel/ParIterableLike;Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <R, Tp> java.lang.Object task2ops(scala.collection.parallel.ParIterableLike<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>, scala.collection.concurrent.TrieMap<K, V>>.StrictSplitterCheckTask<R, Tp>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #362                // Method scala/collection/parallel/ParIterableLike$class.task2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
       5: areturn

  public <R> java.lang.Object wrap(scala.Function0<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #369                // Method scala/collection/parallel/ParIterableLike$class.wrap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/ParIterableLike$NonDivisible;
       5: areturn

  public <PI extends scala.collection.generic.DelegatedSignalling> java.lang.Object delegatedSignalling2ops(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // Method scala/collection/parallel/ParIterableLike$class.delegatedSignalling2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/DelegatedSignalling;)Lscala/collection/parallel/ParIterableLike$SignallingOps;
       5: areturn

  public <Elem, To> java.lang.Object builder2ops(scala.collection.mutable.Builder<Elem, To>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #382                // Method scala/collection/parallel/ParIterableLike$class.builder2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
       5: areturn

  public <S, That> java.lang.Object bf2seq(scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #389                // Method scala/collection/parallel/ParIterableLike$class.bf2seq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Lscala/collection/generic/CanBuildFrom;
       5: areturn

  public scala.collection.parallel.ParIterable sequentially(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #396                // Method scala/collection/parallel/ParIterableLike$class.sequentially:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #402                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #410                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #414                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #417                // Method scala/collection/parallel/ParIterableLike$class.toString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // Method scala/collection/parallel/ParIterableLike$class.canEqual:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #426                // Method scala/collection/parallel/ParIterableLike$class.reduce:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceOption(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #433                // Method scala/collection/parallel/ParIterableLike$class.reduceOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #438                // Method scala/collection/parallel/ParIterableLike$class.fold:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S aggregate(scala.Function0<S>, scala.Function2<S, scala.Tuple2<K, V>, S>, scala.Function2<S, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #444                // Method scala/collection/parallel/ParIterableLike$class.aggregate:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <S> S foldLeft(S, scala.Function2<S, scala.Tuple2<K, V>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #449                // Method scala/collection/parallel/ParIterableLike$class.foldLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S foldRight(S, scala.Function2<scala.Tuple2<K, V>, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #452                // Method scala/collection/parallel/ParIterableLike$class.foldRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U> U reduceLeft(scala.Function2<U, scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #455                // Method scala/collection/parallel/ParIterableLike$class.reduceLeft:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> U reduceRight(scala.Function2<scala.Tuple2<K, V>, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #458                // Method scala/collection/parallel/ParIterableLike$class.reduceRight:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceLeftOption(scala.Function2<U, scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #461                // Method scala/collection/parallel/ParIterableLike$class.reduceLeftOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> scala.Option<U> reduceRightOption(scala.Function2<scala.Tuple2<K, V>, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #464                // Method scala/collection/parallel/ParIterableLike$class.reduceRightOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #469                // Method scala/collection/parallel/ParIterableLike$class.foreach:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)V
       5: return

  public int count(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #474                // Method scala/collection/parallel/ParIterableLike$class.count:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)I
       5: ireturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #479                // Method scala/collection/parallel/ParIterableLike$class.sum:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #484                // Method scala/collection/parallel/ParIterableLike$class.product:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #489                // Method scala/collection/parallel/ParIterableLike$class.min:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #494                // Method scala/collection/parallel/ParIterableLike$class.max:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #499                // Method scala/collection/parallel/ParIterableLike$class.maxBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // Method scala/collection/parallel/ParIterableLike$class.minBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S, That> That map(scala.Function1<scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #508                // Method scala/collection/parallel/ParIterableLike$class.map:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That collect(scala.PartialFunction<scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #513                // Method scala/collection/parallel/ParIterableLike$class.collect:(Lscala/collection/parallel/ParIterableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That flatMap(scala.Function1<scala.Tuple2<K, V>, scala.collection.GenTraversableOnce<S>>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #518                // Method scala/collection/parallel/ParIterableLike$class.flatMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean forall(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #523                // Method scala/collection/parallel/ParIterableLike$class.forall:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #526                // Method scala/collection/parallel/ParIterableLike$class.exists:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<scala.Tuple2<K, V>> find(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #531                // Method scala/collection/parallel/ParIterableLike$class.find:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public java.lang.Object combinerFactory();
    Code:
       0: aload_0
       1: invokestatic  #536                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/CombinerFactory;
       4: areturn

  public <S, That> java.lang.Object combinerFactory(scala.Function0<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #540                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/CombinerFactory;
       5: areturn

  public scala.collection.parallel.ParIterable withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #544                // Method scala/collection/parallel/ParIterableLike$class.withFilter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #548                // Method scala/collection/parallel/ParIterableLike$class.filter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #551                // Method scala/collection/parallel/ParIterableLike$class.filterNot:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U, That> That $plus$plus(scala.collection.GenTraversableOnce<U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #556                // Method scala/collection/parallel/ParIterableLike$class.$plus$plus:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParTrieMap<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>> partition(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #563                // Method scala/collection/parallel/ParIterableLike$class.partition:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.parallel.immutable.ParMap<K, scala.collection.parallel.mutable.ParTrieMap<K, V>> groupBy(scala.Function1<scala.Tuple2<K, V>, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #568                // Method scala/collection/parallel/ParIterableLike$class.groupBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParIterable take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #573                // Method scala/collection/parallel/ParIterableLike$class.take:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #577                // Method scala/collection/parallel/ParIterableLike$class.drop:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #582                // Method scala/collection/parallel/ParIterableLike$class.slice:(Lscala/collection/parallel/ParIterableLike;II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParTrieMap<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #589                // Method scala/collection/parallel/ParIterableLike$class.splitAt:(Lscala/collection/parallel/ParIterableLike;I)Lscala/Tuple2;
       5: areturn

  public <U, That> That scan(U, scala.Function2<U, U, U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #594                // Method scala/collection/parallel/ParIterableLike$class.scan:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanLeft(S, scala.Function2<S, scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #597                // Method scala/collection/parallel/ParIterableLike$class.scanLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanRight(S, scala.Function2<scala.Tuple2<K, V>, S, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #600                // Method scala/collection/parallel/ParIterableLike$class.scanRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.collection.parallel.ParIterable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #603                // Method scala/collection/parallel/ParIterableLike$class.takeWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParTrieMap<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>> span(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #606                // Method scala/collection/parallel/ParIterableLike$class.span:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.parallel.ParIterable dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #609                // Method scala/collection/parallel/ParIterableLike$class.dropWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #614                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)V
       5: return

  public <U> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #618                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;I)V
       6: return

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #622                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;II)V
       7: return

  public <U> boolean sameElements(scala.collection.GenIterable<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #628                // Method scala/collection/parallel/ParIterableLike$class.sameElements:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public <U, S, That> That zip(scala.collection.GenIterable<S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #634                // Method scala/collection/parallel/ParIterableLike$class.zip:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, scala.Tuple2<U, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #639                // Method scala/collection/parallel/ParIterableLike$class.zipWithIndex:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <S, U, That> That zipAll(scala.collection.GenIterable<S>, U, S, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParTrieMap<K, V>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #644                // Method scala/collection/parallel/ParIterableLike$class.zipAll:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That toParCollection(scala.Function0<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #651                // Method scala/collection/parallel/ParIterableLike$class.toParCollection:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public <K, V, That> That toParMap(scala.Function0<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>, scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #656                // Method scala/collection/parallel/ParIterableLike$class.toParMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Predef$$less$colon$less;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #663                // Method scala/collection/parallel/ParIterableLike$class.view:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/IterableView;
       4: areturn

  public <U> java.lang.Object toArray(scala.reflect.ClassTag<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #668                // Method scala/collection/parallel/ParIterableLike$class.toArray:(Lscala/collection/parallel/ParIterableLike;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<K, V>> toList();
    Code:
       0: aload_0
       1: invokestatic  #675                // Method scala/collection/parallel/ParIterableLike$class.toList:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<K, V>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #680                // Method scala/collection/parallel/ParIterableLike$class.toIndexedSeq:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Stream<scala.Tuple2<K, V>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #685                // Method scala/collection/parallel/ParIterableLike$class.toStream:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #690                // Method scala/collection/parallel/ParIterableLike$class.toIterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Iterator;
       4: areturn

  public <U> scala.collection.mutable.Buffer<U> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #695                // Method scala/collection/parallel/ParIterableLike$class.toBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.GenTraversable<scala.Tuple2<K, V>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #700                // Method scala/collection/parallel/ParIterableLike$class.toTraversable:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/GenTraversable;
       4: areturn

  public <U> scala.collection.parallel.immutable.ParSet<U> toSet();
    Code:
       0: aload_0
       1: invokestatic  #705                // Method scala/collection/parallel/ParIterableLike$class.toSet:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public <K, V> scala.collection.parallel.immutable.ParMap<K, V> toMap(scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #710                // Method scala/collection/parallel/ParIterableLike$class.toMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<K, V>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #715                // Method scala/collection/parallel/ParIterableLike$class.toVector:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scala.Tuple2<K, V>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #718                // Method scala/collection/parallel/ParIterableLike$class.to:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public int scanBlockSize();
    Code:
       0: aload_0
       1: invokestatic  #723                // Method scala/collection/parallel/ParIterableLike$class.scanBlockSize:(Lscala/collection/parallel/ParIterableLike;)I
       4: ireturn

  public <S> S $div$colon(S, scala.Function2<S, scala.Tuple2<K, V>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #726                // Method scala/collection/parallel/ParIterableLike$class.$div$colon:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S $colon$bslash(S, scala.Function2<scala.Tuple2<K, V>, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #729                // Method scala/collection/parallel/ParIterableLike$class.$colon$bslash:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #732                // Method scala/collection/parallel/ParIterableLike$class.debugInformation:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.Seq<java.lang.String> brokenInvariants();
    Code:
       0: aload_0
       1: invokestatic  #737                // Method scala/collection/parallel/ParIterableLike$class.brokenInvariants:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #742                // Method scala/collection/parallel/ParIterableLike$class.debugBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public void debugclear();
    Code:
       0: aload_0
       1: invokestatic  #745                // Method scala/collection/parallel/ParIterableLike$class.debugclear:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debuglog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #750                // Method scala/collection/parallel/ParIterableLike$class.debuglog:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
       5: areturn

  public void printDebugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #754                // Method scala/collection/parallel/ParIterableLike$class.printDebugBuffer:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.Combiner<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #761                // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <P, Q> scala.collection.parallel.Combiner<scala.Tuple2<P, Q>, scala.collection.parallel.mutable.ParTrieMap<P, Q>> genericMapCombiner();
    Code:
       0: aload_0
       1: invokestatic  #767                // Method scala/collection/generic/GenericParMapTemplate$class.genericMapCombiner:(Lscala/collection/generic/GenericParMapTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParIterable<scala.Tuple2<K, V>>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #774                // Method scala/collection/generic/GenericParTemplate$class.newBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.mutable.ParIterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #778                // Method scala/collection/generic/GenericParTemplate$class.genericBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.mutable.ParIterable<B>> genericCombiner();
    Code:
       0: aload_0
       1: invokestatic  #781                // Method scala/collection/generic/GenericParTemplate$class.genericCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.parallel.mutable.ParIterable<A1>, scala.collection.parallel.mutable.ParIterable<A2>> unzip(scala.Function1<scala.Tuple2<K, V>, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #787                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.parallel.mutable.ParIterable<A1>, scala.collection.parallel.mutable.ParIterable<A2>, scala.collection.parallel.mutable.ParIterable<A3>> unzip3(scala.Function1<scala.Tuple2<K, V>, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #793                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #799                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #803                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #809                // Method scala/collection/GenMapLike$class.hashCode:(Lscala/collection/GenMapLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #813                // Method scala/collection/GenMapLike$class.equals:(Lscala/collection/GenMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.concurrent.TrieMap<K, V> scala$collection$parallel$mutable$ParTrieMap$$ctrie();
    Code:
       0: aload_0
       1: getfield      #816                // Field scala$collection$parallel$mutable$ParTrieMap$$ctrie:Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.generic.GenericParMapCompanion<scala.collection.parallel.mutable.ParTrieMap> mapCompanion();
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParTrieMap$.MODULE$:Lscala/collection/parallel/mutable/ParTrieMap$;
       3: areturn

  public scala.collection.parallel.mutable.ParTrieMap<K, V> empty();
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParTrieMap$.MODULE$:Lscala/collection/parallel/mutable/ParTrieMap$;
       3: invokevirtual #822                // Method scala/collection/parallel/mutable/ParTrieMap$.empty:()Lscala/collection/parallel/mutable/ParTrieMap;
       6: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>> newCombiner();
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParTrieMap$.MODULE$:Lscala/collection/parallel/mutable/ParTrieMap$;
       3: invokevirtual #825                // Method scala/collection/parallel/mutable/ParTrieMap$.newCombiner:()Lscala/collection/parallel/Combiner;
       6: areturn

  public scala.collection.concurrent.TrieMap<K, V> seq();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.parallel.mutable.ParTrieMapSplitter<K, V> splitter();
    Code:
       0: new           #832                // class scala/collection/parallel/mutable/ParTrieMapSplitter
       3: dup
       4: iconst_0
       5: aload_0
       6: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       9: invokevirtual #838                // Method scala/collection/concurrent/TrieMap.readOnlySnapshot:()Lscala/collection/Map;
      12: checkcast     #834                // class scala/collection/concurrent/TrieMap
      15: iconst_1
      16: invokespecial #841                // Method scala/collection/parallel/mutable/ParTrieMapSplitter."<init>":(ILscala/collection/concurrent/TrieMap;Z)V
      19: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: invokevirtual #844                // Method scala/collection/concurrent/TrieMap.clear:()V
       7: return

  public scala.collection.parallel.mutable.ParTrieMap<K, V> result();
    Code:
       0: aload_0
       1: areturn

  public scala.Option<V> get(K);
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: aload_1
       5: invokevirtual #849                // Method scala/collection/concurrent/TrieMap.get:(Ljava/lang/Object;)Lscala/Option;
       8: areturn

  public scala.Option<V> put(K, V);
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #853                // Method scala/collection/concurrent/TrieMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       9: areturn

  public void update(K, V);
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #857                // Method scala/collection/concurrent/TrieMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  public scala.Option<V> remove(K);
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: aload_1
       5: invokevirtual #860                // Method scala/collection/concurrent/TrieMap.remove:(Ljava/lang/Object;)Lscala/Option;
       8: areturn

  public scala.collection.parallel.mutable.ParTrieMap<K, V> $plus$eq(scala.Tuple2<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: aload_1
       5: invokevirtual #864                // Method scala/collection/concurrent/TrieMap.$plus$eq:(Lscala/Tuple2;)Lscala/collection/concurrent/TrieMap;
       8: pop
       9: aload_0
      10: areturn

  public scala.collection.parallel.mutable.ParTrieMap<K, V> $minus$eq(K);
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: aload_1
       5: invokevirtual #868                // Method scala/collection/concurrent/TrieMap.$minus$eq:(Ljava/lang/Object;)Lscala/collection/concurrent/TrieMap;
       8: pop
       9: aload_0
      10: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       4: aload_0
       5: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
       8: invokevirtual #871                // Method scala/collection/concurrent/TrieMap.readRoot$default$1:()Z
      11: invokevirtual #875                // Method scala/collection/concurrent/TrieMap.readRoot:(Z)Lscala/collection/concurrent/INode;
      14: astore_1
      15: aload_1
      16: aload_0
      17: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
      20: invokevirtual #881                // Method scala/collection/concurrent/INode.gcasRead:(Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/MainNode;
      23: astore        6
      25: aload         6
      27: instanceof    #883                // class scala/collection/concurrent/TNode
      30: ifeq          52
      33: aload         6
      35: checkcast     #883                // class scala/collection/concurrent/TNode
      38: astore_2
      39: aload_2
      40: aload_0
      41: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
      44: invokevirtual #887                // Method scala/collection/concurrent/TNode.cachedSize:(Ljava/lang/Object;)I
      47: istore        5
      49: goto          135
      52: aload         6
      54: instanceof    #889                // class scala/collection/concurrent/LNode
      57: ifeq          79
      60: aload         6
      62: checkcast     #889                // class scala/collection/concurrent/LNode
      65: astore_3
      66: aload_3
      67: aload_0
      68: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
      71: invokevirtual #890                // Method scala/collection/concurrent/LNode.cachedSize:(Ljava/lang/Object;)I
      74: istore        5
      76: goto          135
      79: aload         6
      81: instanceof    #892                // class scala/collection/concurrent/CNode
      84: ifeq          138
      87: aload         6
      89: checkcast     #892                // class scala/collection/concurrent/CNode
      92: astore        4
      94: aload_0
      95: invokevirtual #894                // Method tasksupport:()Lscala/collection/parallel/TaskSupport;
      98: new           #896                // class scala/collection/parallel/mutable/ParTrieMap$Size
     101: dup
     102: aload_0
     103: iconst_0
     104: aload         4
     106: invokevirtual #900                // Method scala/collection/concurrent/CNode.array:()[Lscala/collection/concurrent/BasicNode;
     109: arraylength
     110: aload         4
     112: invokevirtual #900                // Method scala/collection/concurrent/CNode.array:()[Lscala/collection/concurrent/BasicNode;
     115: invokespecial #903                // Method scala/collection/parallel/mutable/ParTrieMap$Size."<init>":(Lscala/collection/parallel/mutable/ParTrieMap;II[Lscala/collection/concurrent/BasicNode;)V
     118: invokeinterface #909,  2          // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
     123: pop
     124: aload         4
     126: aload_0
     127: invokevirtual #828                // Method scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
     130: invokevirtual #910                // Method scala/collection/concurrent/CNode.cachedSize:(Ljava/lang/Object;)I
     133: istore        5
     135: iload         5
     137: ireturn
     138: new           #912                // class scala/MatchError
     141: dup
     142: aload         6
     144: invokespecial #914                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     147: athrow

  public java.lang.String stringPrefix();
    Code:
       0: ldc_w         #923                // String ParTrieMap
       3: areturn

  public scala.collection.mutable.Builder genericBuilder();
    Code:
       0: aload_0
       1: invokevirtual #925                // Method genericBuilder:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #928                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #931                // Method toSet:()Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #934                // Method dropWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #936                // Method takeWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #939                // Method slice:(II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #942                // Method drop:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #944                // Method take:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #947                // Method groupBy:(Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #949                // Method filterNot:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #951                // Method filter:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #954                // Method par:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #956                // Method iterator:()Lscala/collection/parallel/Splitter;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #958                // Method init:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #960                // Method tail:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokevirtual #962                // Method repr:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #964                // Method mapValues:(Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #966                // Method filterKeys:(Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #969                // Method values:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #971                // Method keys:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #973                // Method keySet:()Lscala/collection/parallel/ParSet;
       4: areturn

  public scala.collection.Iterator valuesIterator();
    Code:
       0: aload_0
       1: invokevirtual #975                // Method valuesIterator:()Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.Iterator keysIterator();
    Code:
       0: aload_0
       1: invokevirtual #977                // Method keysIterator:()Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #980                // Method toSeq:()Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public scala.collection.parallel.ParSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #980                // Method toSeq:()Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #983                // Method toIterable:()Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #983                // Method toIterable:()Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #985                // Method $minus:(Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #988                // Method $plus:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #988                // Method $plus:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #992                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       6: areturn

  public scala.collection.parallel.ParMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #992                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       6: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #996                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParTrieMap;
       5: areturn

  public scala.collection.parallel.mutable.ParMapLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #996                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParTrieMap;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1001               // class scala/Tuple2
       5: invokevirtual #1003               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParTrieMap;
       8: areturn

  public scala.collection.parallel.mutable.ParMapLike $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1003               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParTrieMap;
       5: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1001               // class scala/Tuple2
       5: invokevirtual #1003               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParTrieMap;
       8: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #1007               // Method result:()Lscala/collection/parallel/mutable/ParTrieMap;
       4: areturn

  public scala.collection.parallel.IterableSplitter splitter();
    Code:
       0: aload_0
       1: invokevirtual #1009               // Method splitter:()Lscala/collection/parallel/mutable/ParTrieMapSplitter;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.mutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.mutable.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #1012               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.parallel.ParMap empty();
    Code:
       0: aload_0
       1: invokevirtual #1018               // Method empty:()Lscala/collection/parallel/mutable/ParTrieMap;
       4: areturn

  public scala.collection.parallel.mutable.ParMap empty();
    Code:
       0: aload_0
       1: invokevirtual #1018               // Method empty:()Lscala/collection/parallel/mutable/ParTrieMap;
       4: areturn

  public scala.collection.parallel.mutable.ParTrieMap(scala.collection.concurrent.TrieMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #816                // Field scala$collection$parallel$mutable$ParTrieMap$$ctrie:Lscala/collection/concurrent/TrieMap;
       5: aload_0
       6: invokespecial #1022               // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #1028               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      13: aload_0
      14: invokestatic  #1031               // Method scala/collection/GenMapLike$class.$init$:(Lscala/collection/GenMapLike;)V
      17: aload_0
      18: invokestatic  #1034               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      21: aload_0
      22: invokestatic  #1039               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      25: aload_0
      26: invokestatic  #1044               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      29: aload_0
      30: invokestatic  #1047               // Method scala/collection/generic/GenericParTemplate$class.$init$:(Lscala/collection/generic/GenericParTemplate;)V
      33: aload_0
      34: invokestatic  #1050               // Method scala/collection/generic/GenericParMapTemplate$class.$init$:(Lscala/collection/generic/GenericParMapTemplate;)V
      37: aload_0
      38: invokestatic  #1053               // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      41: aload_0
      42: invokestatic  #1055               // Method scala/collection/parallel/ParIterableLike$class.$init$:(Lscala/collection/parallel/ParIterableLike;)V
      45: aload_0
      46: invokestatic  #1060               // Method scala/collection/parallel/ParIterable$class.$init$:(Lscala/collection/parallel/ParIterable;)V
      49: aload_0
      50: invokestatic  #1063               // Method scala/collection/parallel/ParMapLike$class.$init$:(Lscala/collection/parallel/ParMapLike;)V
      53: aload_0
      54: invokestatic  #1068               // Method scala/collection/parallel/ParMap$class.$init$:(Lscala/collection/parallel/ParMap;)V
      57: aload_0
      58: invokestatic  #1071               // Method scala/collection/parallel/mutable/ParIterable$class.$init$:(Lscala/collection/parallel/mutable/ParIterable;)V
      61: aload_0
      62: invokestatic  #1074               // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
      65: aload_0
      66: invokestatic  #1077               // Method scala/collection/generic/Shrinkable$class.$init$:(Lscala/collection/generic/Shrinkable;)V
      69: aload_0
      70: invokestatic  #1080               // Method scala/collection/mutable/Cloneable$class.$init$:(Lscala/collection/mutable/Cloneable;)V
      73: aload_0
      74: invokestatic  #1083               // Method scala/collection/parallel/mutable/ParMapLike$class.$init$:(Lscala/collection/parallel/mutable/ParMapLike;)V
      77: aload_0
      78: invokestatic  #1086               // Method scala/collection/parallel/mutable/ParMap$class.$init$:(Lscala/collection/parallel/mutable/ParMap;)V
      81: aload_0
      82: invokestatic  #1089               // Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
      85: aload_0
      86: invokestatic  #1092               // Method scala/collection/parallel/Combiner$class.$init$:(Lscala/collection/parallel/Combiner;)V
      89: aload_0
      90: invokestatic  #1095               // Method scala/collection/parallel/mutable/ParTrieMapCombiner$class.$init$:(Lscala/collection/parallel/mutable/ParTrieMapCombiner;)V
      93: return

  public scala.collection.parallel.mutable.ParTrieMap();
    Code:
       0: aload_0
       1: new           #834                // class scala/collection/concurrent/TrieMap
       4: dup
       5: invokespecial #1097               // Method scala/collection/concurrent/TrieMap."<init>":()V
       8: invokespecial #1099               // Method "<init>":(Lscala/collection/concurrent/TrieMap;)V
      11: return
}
