Compiled from "ParTrieMap.scala"
public class scala.collection.parallel.mutable.ParTrieMap$Size implements scala.collection.parallel.Task<java.lang.Object, scala.collection.parallel.mutable.ParTrieMap<K, V>.Size> {
  private final int offset;

  private final int howmany;

  private final scala.collection.concurrent.BasicNode[] array;

  private int result;

  public final scala.collection.parallel.mutable.ParTrieMap $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #21                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #44                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #51                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method scala/collection/parallel/Task$class.signalAbort:(Lscala/collection/parallel/Task;)V
       4: return

  public int result();
    Code:
       0: aload_0
       1: getfield      #65                 // Field result:I
       4: ireturn

  public void result_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #65                 // Field result:I
       5: return

  public void leaf(scala.Option<java.lang.Object>);
    Code:
       0: iconst_0
       1: istore        6
       3: aload_0
       4: getfield      #70                 // Field offset:I
       7: istore        4
       9: aload_0
      10: getfield      #70                 // Field offset:I
      13: aload_0
      14: getfield      #72                 // Field howmany:I
      17: iadd
      18: istore_2
      19: iload         4
      21: iload_2
      22: if_icmpge     108
      25: aload_0
      26: getfield      #74                 // Field array:[Lscala/collection/concurrent/BasicNode;
      29: iload         4
      31: aaload
      32: astore        5
      34: aload         5
      36: instanceof    #76                 // class scala/collection/concurrent/SNode
      39: ifeq          55
      42: iload         6
      44: iconst_1
      45: iadd
      46: istore        6
      48: getstatic     #82                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      51: pop
      52: goto          89
      55: aload         5
      57: instanceof    #84                 // class scala/collection/concurrent/INode
      60: ifeq          98
      63: aload         5
      65: checkcast     #84                 // class scala/collection/concurrent/INode
      68: astore_3
      69: iload         6
      71: aload_3
      72: aload_0
      73: invokevirtual #88                 // Method scala$collection$parallel$mutable$ParTrieMap$Size$$$outer:()Lscala/collection/parallel/mutable/ParTrieMap;
      76: invokevirtual #94                 // Method scala/collection/parallel/mutable/ParTrieMap.scala$collection$parallel$mutable$ParTrieMap$$ctrie:()Lscala/collection/concurrent/TrieMap;
      79: invokevirtual #98                 // Method scala/collection/concurrent/INode.cachedSize:(Lscala/collection/concurrent/TrieMap;)I
      82: iadd
      83: istore        6
      85: getstatic     #82                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      88: pop
      89: iload         4
      91: iconst_1
      92: iadd
      93: istore        4
      95: goto          19
      98: new           #100                // class scala/MatchError
     101: dup
     102: aload         5
     104: invokespecial #103                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     107: athrow
     108: aload_0
     109: iload         6
     111: invokevirtual #105                // Method result_$eq:(I)V
     114: return

  public scala.collection.Seq<scala.collection.parallel.mutable.ParTrieMap<K, V>.Size> split();
    Code:
       0: aload_0
       1: getfield      #72                 // Field howmany:I
       4: iconst_2
       5: idiv
       6: istore_1
       7: getstatic     #121                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      10: getstatic     #126                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      13: iconst_2
      14: anewarray     #2                  // class scala/collection/parallel/mutable/ParTrieMap$Size
      17: dup
      18: iconst_0
      19: new           #2                  // class scala/collection/parallel/mutable/ParTrieMap$Size
      22: dup
      23: aload_0
      24: invokevirtual #88                 // Method scala$collection$parallel$mutable$ParTrieMap$Size$$$outer:()Lscala/collection/parallel/mutable/ParTrieMap;
      27: aload_0
      28: getfield      #70                 // Field offset:I
      31: iload_1
      32: aload_0
      33: getfield      #74                 // Field array:[Lscala/collection/concurrent/BasicNode;
      36: invokespecial #129                // Method "<init>":(Lscala/collection/parallel/mutable/ParTrieMap;II[Lscala/collection/concurrent/BasicNode;)V
      39: aastore
      40: dup
      41: iconst_1
      42: new           #2                  // class scala/collection/parallel/mutable/ParTrieMap$Size
      45: dup
      46: aload_0
      47: invokevirtual #88                 // Method scala$collection$parallel$mutable$ParTrieMap$Size$$$outer:()Lscala/collection/parallel/mutable/ParTrieMap;
      50: aload_0
      51: getfield      #70                 // Field offset:I
      54: iload_1
      55: iadd
      56: aload_0
      57: getfield      #72                 // Field howmany:I
      60: iload_1
      61: isub
      62: aload_0
      63: getfield      #74                 // Field array:[Lscala/collection/concurrent/BasicNode;
      66: invokespecial #129                // Method "<init>":(Lscala/collection/parallel/mutable/ParTrieMap;II[Lscala/collection/concurrent/BasicNode;)V
      69: aastore
      70: checkcast     #131                // class "[Ljava/lang/Object;"
      73: invokevirtual #135                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      76: invokevirtual #139                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      79: checkcast     #141                // class scala/collection/Seq
      82: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: getfield      #72                 // Field howmany:I
       4: iconst_1
       5: if_icmple     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void merge(scala.collection.parallel.mutable.ParTrieMap<K, V>.Size);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #148                // Method result:()I
       5: aload_1
       6: invokevirtual #148                // Method result:()I
       9: iadd
      10: invokevirtual #105                // Method result_$eq:(I)V
      13: return

  public scala.collection.parallel.mutable.ParTrieMap scala$collection$parallel$mutable$ParTrieMap$Size$$$outer();
    Code:
       0: aload_0
       1: getfield      #150                // Field $outer:Lscala/collection/parallel/mutable/ParTrieMap;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/mutable/ParTrieMap$Size
       5: invokevirtual #152                // Method merge:(Lscala/collection/parallel/mutable/ParTrieMap$Size;)V
       8: return

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #105                // Method result_$eq:(I)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method result:()I
       4: invokestatic  #162                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public scala.collection.parallel.mutable.ParTrieMap$Size(scala.collection.parallel.mutable.ParTrieMap<K, V>, int, int, scala.collection.concurrent.BasicNode[]);
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #70                 // Field offset:I
       5: aload_0
       6: iload_3
       7: putfield      #72                 // Field howmany:I
      10: aload_0
      11: aload         4
      13: putfield      #74                 // Field array:[Lscala/collection/concurrent/BasicNode;
      16: aload_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #150                // Field $outer:Lscala/collection/parallel/mutable/ParTrieMap;
      27: aload_0
      28: invokespecial #164                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #167                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      35: aload_0
      36: iconst_m1
      37: putfield      #65                 // Field result:I
      40: return
}
