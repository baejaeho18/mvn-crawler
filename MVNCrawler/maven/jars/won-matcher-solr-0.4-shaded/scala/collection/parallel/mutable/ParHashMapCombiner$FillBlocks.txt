Compiled from "ParHashMap.scala"
public class scala.collection.parallel.mutable.ParHashMapCombiner$FillBlocks implements scala.collection.parallel.Task<java.lang.Object, scala.collection.parallel.mutable.ParHashMapCombiner<K, V>.FillBlocks> {
  private final scala.collection.mutable.UnrolledBuffer$Unrolled<scala.collection.mutable.DefaultEntry<K, V>>[] buckets;

  private final scala.collection.parallel.mutable.ParHashMapCombiner<K, V>.AddingHashTable table;

  private final int offset;

  private final int howmany;

  private int result;

  public final scala.collection.parallel.mutable.ParHashMapCombiner $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #25                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method scala/collection/parallel/Task$class.signalAbort:(Lscala/collection/parallel/Task;)V
       4: return

  public int result();
    Code:
       0: aload_0
       1: getfield      #69                 // Field result:I
       4: ireturn

  public void result_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field result:I
       5: return

  public void leaf(scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #74                 // Field offset:I
       4: istore_2
       5: aload_0
       6: getfield      #74                 // Field offset:I
       9: aload_0
      10: getfield      #76                 // Field howmany:I
      13: iadd
      14: istore_3
      15: aload_0
      16: iconst_0
      17: invokevirtual #78                 // Method result_$eq:(I)V
      20: iload_2
      21: iload_3
      22: if_icmpge     52
      25: aload_0
      26: aload_0
      27: invokevirtual #80                 // Method result:()I
      30: aload_0
      31: iload_2
      32: aload_0
      33: getfield      #82                 // Field buckets:[Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      36: iload_2
      37: aaload
      38: invokespecial #86                 // Method fillBlock:(ILscala/collection/mutable/UnrolledBuffer$Unrolled;)I
      41: iadd
      42: invokevirtual #78                 // Method result_$eq:(I)V
      45: iload_2
      46: iconst_1
      47: iadd
      48: istore_2
      49: goto          20
      52: return

  private int fillBlock(int, scala.collection.mutable.UnrolledBuffer$Unrolled<scala.collection.mutable.DefaultEntry<K, V>>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: astore        4
       5: iconst_0
       6: istore        5
       8: aload_0
       9: getfield      #91                 // Field table:Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;
      12: astore        6
      14: aload         4
      16: ifnull        86
      19: aload         4
      21: invokevirtual #96                 // Method scala/collection/mutable/UnrolledBuffer$Unrolled.array:()Ljava/lang/Object;
      24: checkcast     #98                 // class "[Lscala/collection/mutable/DefaultEntry;"
      27: astore        7
      29: aload         4
      31: invokevirtual #101                // Method scala/collection/mutable/UnrolledBuffer$Unrolled.size:()I
      34: istore        8
      36: iload         5
      38: iload         8
      40: if_icmpge     73
      43: aload         7
      45: iload         5
      47: aaload
      48: astore        9
      50: aload         6
      52: aload         9
      54: invokevirtual #107                // Method scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable.insertEntry:(Lscala/collection/mutable/DefaultEntry;)Z
      57: ifeq          64
      60: iload_3
      61: iconst_1
      62: iadd
      63: istore_3
      64: iload         5
      66: iconst_1
      67: iadd
      68: istore        5
      70: goto          36
      73: iconst_0
      74: istore        5
      76: aload         4
      78: invokevirtual #111                // Method scala/collection/mutable/UnrolledBuffer$Unrolled.next:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      81: astore        4
      83: goto          14
      86: iload_3
      87: ireturn

  public scala.collection.immutable.List<scala.collection.parallel.mutable.ParHashMapCombiner<K, V>.FillBlocks> split();
    Code:
       0: aload_0
       1: getfield      #76                 // Field howmany:I
       4: iconst_2
       5: idiv
       6: istore_1
       7: getstatic     #130                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      10: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      13: iconst_2
      14: anewarray     #2                  // class scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks
      17: dup
      18: iconst_0
      19: new           #2                  // class scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks
      22: dup
      23: aload_0
      24: invokevirtual #139                // Method scala$collection$parallel$mutable$ParHashMapCombiner$FillBlocks$$$outer:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
      27: aload_0
      28: getfield      #82                 // Field buckets:[Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      31: aload_0
      32: getfield      #91                 // Field table:Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;
      35: aload_0
      36: getfield      #74                 // Field offset:I
      39: iload_1
      40: invokespecial #143                // Method "<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;II)V
      43: aastore
      44: dup
      45: iconst_1
      46: new           #2                  // class scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks
      49: dup
      50: aload_0
      51: invokevirtual #139                // Method scala$collection$parallel$mutable$ParHashMapCombiner$FillBlocks$$$outer:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
      54: aload_0
      55: getfield      #82                 // Field buckets:[Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      58: aload_0
      59: getfield      #91                 // Field table:Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;
      62: aload_0
      63: getfield      #74                 // Field offset:I
      66: iload_1
      67: iadd
      68: aload_0
      69: getfield      #76                 // Field howmany:I
      72: iload_1
      73: isub
      74: invokespecial #143                // Method "<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;II)V
      77: aastore
      78: checkcast     #145                // class "[Ljava/lang/Object;"
      81: invokevirtual #149                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      84: invokevirtual #153                // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      87: areturn

  public void merge(scala.collection.parallel.mutable.ParHashMapCombiner<K, V>.FillBlocks);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #80                 // Method result:()I
       5: aload_1
       6: invokevirtual #80                 // Method result:()I
       9: iadd
      10: invokevirtual #78                 // Method result_$eq:(I)V
      13: return

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: getfield      #76                 // Field howmany:I
       4: getstatic     #163                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
       7: getstatic     #168                // Field scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
      10: invokevirtual #171                // Method scala/collection/parallel/mutable/ParHashMapCombiner$.numblocks:()I
      13: aload_0
      14: invokevirtual #139                // Method scala$collection$parallel$mutable$ParHashMapCombiner$FillBlocks$$$outer:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
      17: invokevirtual #177                // Method scala/collection/parallel/mutable/ParHashMapCombiner.combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
      20: invokeinterface #182,  1          // InterfaceMethod scala/collection/parallel/TaskSupport.parallelismLevel:()I
      25: invokevirtual #186                // Method scala/collection/parallel/package$.thresholdFromSize:(II)I
      28: if_icmple     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public scala.collection.parallel.mutable.ParHashMapCombiner scala$collection$parallel$mutable$ParHashMapCombiner$FillBlocks$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscala/collection/parallel/mutable/ParHashMapCombiner;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks
       5: invokevirtual #190                // Method merge:(Lscala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks;)V
       8: return

  public scala.collection.Seq split();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method split:()Lscala/collection/immutable/List;
       4: areturn

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #199                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #78                 // Method result_$eq:(I)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method result:()I
       4: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public scala.collection.parallel.mutable.ParHashMapCombiner$FillBlocks(scala.collection.parallel.mutable.ParHashMapCombiner<K, V>, scala.collection.mutable.UnrolledBuffer$Unrolled<scala.collection.mutable.DefaultEntry<K, V>>[], scala.collection.parallel.mutable.ParHashMapCombiner<K, V>.AddingHashTable, int, int);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #82                 // Field buckets:[Lscala/collection/mutable/UnrolledBuffer$Unrolled;
       5: aload_0
       6: aload_3
       7: putfield      #91                 // Field table:Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;
      10: aload_0
      11: iload         4
      13: putfield      #74                 // Field offset:I
      16: aload_0
      17: iload         5
      19: putfield      #76                 // Field howmany:I
      22: aload_1
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #188                // Field $outer:Lscala/collection/parallel/mutable/ParHashMapCombiner;
      33: aload_0
      34: invokespecial #205                // Method java/lang/Object."<init>":()V
      37: aload_0
      38: invokestatic  #208                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      41: aload_0
      42: ldc           #209                // int -2147483648
      44: putfield      #69                 // Field result:I
      47: return
}
