Compiled from "ParHashMap.scala"
public class scala.collection.parallel.mutable.ParHashMap<K, V> implements scala.collection.parallel.mutable.ParMap<K, V>, scala.collection.parallel.mutable.ParHashTable<K, scala.collection.mutable.DefaultEntry<K, V>>, scala.Serializable {
  public static final long serialVersionUID;

  private transient int _loadFactor;

  private transient scala.collection.mutable.HashEntry<java.lang.Object, scala.collection.mutable.HashEntry>[] table;

  private transient int tableSize;

  private transient int threshold;

  private transient int[] sizemap;

  private transient int seedvalue;

  private volatile transient scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport;

  private volatile scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$module;

  private volatile scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$module;

  public static <K, V> scala.collection.generic.CanCombineFrom<scala.collection.parallel.mutable.ParHashMap<?, ?>, scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParHashMap<K, V>> canBuildFrom();
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParHashMap$.MODULE$:Lscala/collection/parallel/mutable/ParHashMap$;
       3: invokevirtual #25                 // Method scala/collection/parallel/mutable/ParHashMap$.canBuildFrom:()Lscala/collection/generic/CanCombineFrom;
       6: areturn

  public static void iters_$eq(int);
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParHashMap$.MODULE$:Lscala/collection/parallel/mutable/ParHashMap$;
       3: iload_0
       4: invokevirtual #29                 // Method scala/collection/parallel/mutable/ParHashMap$.iters_$eq:(I)V
       7: return

  public static int iters();
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParHashMap$.MODULE$:Lscala/collection/parallel/mutable/ParHashMap$;
       3: invokevirtual #33                 // Method scala/collection/parallel/mutable/ParHashMap$.iters:()I
       6: ireturn

  public boolean alwaysInitSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method scala/collection/parallel/mutable/ParHashTable$class.alwaysInitSizeMap:(Lscala/collection/parallel/mutable/ParHashTable;)Z
       4: ireturn

  public int _loadFactor();
    Code:
       0: aload_0
       1: getfield      #64                 // Field _loadFactor:I
       4: ireturn

  public void _loadFactor_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field _loadFactor:I
       5: return

  public scala.collection.mutable.HashEntry<K, scala.collection.mutable.DefaultEntry<K, V>>[] table();
    Code:
       0: aload_0
       1: getfield      #70                 // Field table:[Lscala/collection/mutable/HashEntry;
       4: areturn

  public void table_$eq(scala.collection.mutable.HashEntry<K, scala.collection.mutable.DefaultEntry<K, V>>[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field table:[Lscala/collection/mutable/HashEntry;
       5: return

  public int tableSize();
    Code:
       0: aload_0
       1: getfield      #74                 // Field tableSize:I
       4: ireturn

  public void tableSize_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #74                 // Field tableSize:I
       5: return

  public int threshold();
    Code:
       0: aload_0
       1: getfield      #77                 // Field threshold:I
       4: ireturn

  public void threshold_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field threshold:I
       5: return

  public int[] sizemap();
    Code:
       0: aload_0
       1: getfield      #81                 // Field sizemap:[I
       4: areturn

  public void sizemap_$eq(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field sizemap:[I
       5: return

  public int seedvalue();
    Code:
       0: aload_0
       1: getfield      #85                 // Field seedvalue:I
       4: ireturn

  public void seedvalue_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #85                 // Field seedvalue:I
       5: return

  public int tableSizeSeed();
    Code:
       0: aload_0
       1: invokestatic  #92                 // Method scala/collection/mutable/HashTable$class.tableSizeSeed:(Lscala/collection/mutable/HashTable;)I
       4: ireturn

  public int initialSize();
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method scala/collection/mutable/HashTable$class.initialSize:(Lscala/collection/mutable/HashTable;)I
       4: ireturn

  public void init(java.io.ObjectInputStream, scala.Function0<scala.collection.mutable.DefaultEntry<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // Method scala/collection/mutable/HashTable$class.init:(Lscala/collection/mutable/HashTable;Ljava/io/ObjectInputStream;Lscala/Function0;)V
       6: return

  public void serializeTo(java.io.ObjectOutputStream, scala.Function1<scala.collection.mutable.DefaultEntry<K, V>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #109                // Method scala/collection/mutable/HashTable$class.serializeTo:(Lscala/collection/mutable/HashTable;Ljava/io/ObjectOutputStream;Lscala/Function1;)V
       6: return

  public scala.collection.mutable.HashEntry findEntry(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // Method scala/collection/mutable/HashTable$class.findEntry:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: areturn

  public void addEntry(scala.collection.mutable.HashEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method scala/collection/mutable/HashTable$class.addEntry:(Lscala/collection/mutable/HashTable;Lscala/collection/mutable/HashEntry;)V
       5: return

  public scala.collection.mutable.HashEntry findOrAddEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #132                // Method scala/collection/mutable/HashTable$class.findOrAddEntry:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       6: areturn

  public scala.collection.mutable.HashEntry removeEntry(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // Method scala/collection/mutable/HashTable$class.removeEntry:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.DefaultEntry<K, V>> entriesIterator();
    Code:
       0: aload_0
       1: invokestatic  #141                // Method scala/collection/mutable/HashTable$class.entriesIterator:(Lscala/collection/mutable/HashTable;)Lscala/collection/Iterator;
       4: areturn

  public <U> void foreachEntry(scala.Function1<scala.collection.mutable.DefaultEntry<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #146                // Method scala/collection/mutable/HashTable$class.foreachEntry:(Lscala/collection/mutable/HashTable;Lscala/Function1;)V
       5: return

  public void clearTable();
    Code:
       0: aload_0
       1: invokestatic  #152                // Method scala/collection/mutable/HashTable$class.clearTable:(Lscala/collection/mutable/HashTable;)V
       4: return

  public void nnSizeMapAdd(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #156                // Method scala/collection/mutable/HashTable$class.nnSizeMapAdd:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public void nnSizeMapRemove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #160                // Method scala/collection/mutable/HashTable$class.nnSizeMapRemove:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public void nnSizeMapReset(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #163                // Method scala/collection/mutable/HashTable$class.nnSizeMapReset:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public final int totalSizeMapBuckets();
    Code:
       0: aload_0
       1: invokestatic  #167                // Method scala/collection/mutable/HashTable$class.totalSizeMapBuckets:(Lscala/collection/mutable/HashTable;)I
       4: ireturn

  public int calcSizeMapSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #172                // Method scala/collection/mutable/HashTable$class.calcSizeMapSize:(Lscala/collection/mutable/HashTable;I)I
       5: ireturn

  public void sizeMapInit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #175                // Method scala/collection/mutable/HashTable$class.sizeMapInit:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public void sizeMapInitAndRebuild();
    Code:
       0: aload_0
       1: invokestatic  #178                // Method scala/collection/mutable/HashTable$class.sizeMapInitAndRebuild:(Lscala/collection/mutable/HashTable;)V
       4: return

  public void printSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #181                // Method scala/collection/mutable/HashTable$class.printSizeMap:(Lscala/collection/mutable/HashTable;)V
       4: return

  public void sizeMapDisable();
    Code:
       0: aload_0
       1: invokestatic  #184                // Method scala/collection/mutable/HashTable$class.sizeMapDisable:(Lscala/collection/mutable/HashTable;)V
       4: return

  public boolean isSizeMapDefined();
    Code:
       0: aload_0
       1: invokestatic  #188                // Method scala/collection/mutable/HashTable$class.isSizeMapDefined:(Lscala/collection/mutable/HashTable;)Z
       4: ireturn

  public boolean elemEquals(K, K);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #193                // Method scala/collection/mutable/HashTable$class.elemEquals:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public final int index(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #198                // Method scala/collection/mutable/HashTable$class.index:(Lscala/collection/mutable/HashTable;I)I
       5: ireturn

  public void initWithContents(scala.collection.mutable.HashTable$Contents<K, scala.collection.mutable.DefaultEntry<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // Method scala/collection/mutable/HashTable$class.initWithContents:(Lscala/collection/mutable/HashTable;Lscala/collection/mutable/HashTable$Contents;)V
       5: return

  public scala.collection.mutable.HashTable$Contents<K, scala.collection.mutable.DefaultEntry<K, V>> hashTableContents();
    Code:
       0: aload_0
       1: invokestatic  #211                // Method scala/collection/mutable/HashTable$class.hashTableContents:(Lscala/collection/mutable/HashTable;)Lscala/collection/mutable/HashTable$Contents;
       4: areturn

  public final int sizeMapBucketBitSize();
    Code:
       0: aload_0
       1: invokestatic  #217                // Method scala/collection/mutable/HashTable$HashUtils$class.sizeMapBucketBitSize:(Lscala/collection/mutable/HashTable$HashUtils;)I
       4: ireturn

  public final int sizeMapBucketSize();
    Code:
       0: aload_0
       1: invokestatic  #220                // Method scala/collection/mutable/HashTable$HashUtils$class.sizeMapBucketSize:(Lscala/collection/mutable/HashTable$HashUtils;)I
       4: ireturn

  public int elemHashCode(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #225                // Method scala/collection/mutable/HashTable$HashUtils$class.elemHashCode:(Lscala/collection/mutable/HashTable$HashUtils;Ljava/lang/Object;)I
       5: ireturn

  public final int improve(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #230                // Method scala/collection/mutable/HashTable$HashUtils$class.improve:(Lscala/collection/mutable/HashTable$HashUtils;II)I
       6: ireturn

  public <U> scala.collection.parallel.mutable.ParMap<K, U> updated(K, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #238                // Method scala/collection/parallel/mutable/ParMap$class.updated:(Lscala/collection/parallel/mutable/ParMap;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       6: areturn

  public scala.collection.parallel.mutable.ParMap<K, V> withDefault(scala.Function1<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #243                // Method scala/collection/parallel/mutable/ParMap$class.withDefault:(Lscala/collection/parallel/mutable/ParMap;Lscala/Function1;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.parallel.mutable.ParMap<K, V> withDefaultValue(V);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #249                // Method scala/collection/parallel/mutable/ParMap$class.withDefaultValue:(Lscala/collection/parallel/mutable/ParMap;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public <U> scala.collection.parallel.mutable.ParMap<K, U> $plus(scala.Tuple2<K, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // Method scala/collection/parallel/mutable/ParMapLike$class.$plus:(Lscala/collection/parallel/mutable/ParMapLike;Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.parallel.mutable.ParMap $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #262                // Method scala/collection/parallel/mutable/ParMapLike$class.$minus:(Lscala/collection/parallel/mutable/ParMapLike;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public java.lang.Object scala$collection$mutable$Cloneable$$super$clone();
    Code:
       0: aload_0
       1: invokespecial #267                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokestatic  #272                // Method scala/collection/mutable/Cloneable$class.clone:(Lscala/collection/mutable/Cloneable;)Ljava/lang/Object;
       4: areturn

  public scala.collection.generic.Shrinkable<K> $minus$eq(K, K, scala.collection.Seq<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #279                // Method scala/collection/generic/Shrinkable$class.$minus$eq:(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;
       7: areturn

  public scala.collection.generic.Shrinkable<K> $minus$minus$eq(scala.collection.TraversableOnce<K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // Method scala/collection/generic/Shrinkable$class.$minus$minus$eq:(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #297                // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<scala.Tuple2<K, V>> $plus$plus$eq(scala.collection.TraversableOnce<scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #302                // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.parallel.mutable.ParIterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #309                // Method scala/collection/parallel/mutable/ParIterable$class.companion:(Lscala/collection/parallel/mutable/ParIterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.parallel.mutable.ParIterable<scala.Tuple2<K, V>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #314                // Method scala/collection/parallel/mutable/ParIterable$class.toIterable:(Lscala/collection/parallel/mutable/ParIterable;)Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public scala.collection.parallel.mutable.ParSeq<scala.Tuple2<K, V>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #319                // Method scala/collection/parallel/mutable/ParIterable$class.toSeq:(Lscala/collection/parallel/mutable/ParIterable;)Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public V default(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #326                // Method scala/collection/parallel/ParMapLike$class.default:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public V apply(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #329                // Method scala/collection/parallel/ParMapLike$class.apply:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <U> U getOrElse(K, scala.Function0<U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #334                // Method scala/collection/parallel/ParMapLike$class.getOrElse:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public boolean contains(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // Method scala/collection/parallel/ParMapLike$class.contains:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean isDefinedAt(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #342                // Method scala/collection/parallel/ParMapLike$class.isDefinedAt:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.parallel.IterableSplitter<K> keysIterator();
    Code:
       0: aload_0
       1: invokestatic  #347                // Method scala/collection/parallel/ParMapLike$class.keysIterator:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.parallel.IterableSplitter<V> valuesIterator();
    Code:
       0: aload_0
       1: invokestatic  #350                // Method scala/collection/parallel/ParMapLike$class.valuesIterator:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.parallel.ParSet<K> keySet();
    Code:
       0: aload_0
       1: invokestatic  #355                // Method scala/collection/parallel/ParMapLike$class.keySet:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParSet;
       4: areturn

  public scala.collection.parallel.ParIterable<K> keys();
    Code:
       0: aload_0
       1: invokestatic  #360                // Method scala/collection/parallel/ParMapLike$class.keys:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable<V> values();
    Code:
       0: aload_0
       1: invokestatic  #363                // Method scala/collection/parallel/ParMapLike$class.values:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParMap<K, V> filterKeys(scala.Function1<K, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #368                // Method scala/collection/parallel/ParMapLike$class.filterKeys:(Lscala/collection/parallel/ParMapLike;Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public <S> scala.collection.parallel.ParMap<K, S> mapValues(scala.Function1<V, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #372                // Method scala/collection/parallel/ParMapLike$class.mapValues:(Lscala/collection/parallel/ParMapLike;Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport();
    Code:
       0: aload_0
       1: getfield      #375                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void scala$collection$parallel$ParIterableLike$$_tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #375                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       5: return

  private scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #381                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       8: ifnonnull     23
      11: aload_0
      12: new           #383                // class scala/collection/parallel/ParIterableLike$ScanNode$
      15: dup
      16: aload_0
      17: invokespecial #387                // Method scala/collection/parallel/ParIterableLike$ScanNode$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #381                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      23: getstatic     #393                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #381                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode();
    Code:
       0: aload_0
       1: getfield      #381                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #398                // Method ScanNode$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanNode$;
      11: goto          18
      14: aload_0
      15: getfield      #381                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      18: areturn

  private scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #402                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       8: ifnonnull     23
      11: aload_0
      12: new           #404                // class scala/collection/parallel/ParIterableLike$ScanLeaf$
      15: dup
      16: aload_0
      17: invokespecial #405                // Method scala/collection/parallel/ParIterableLike$ScanLeaf$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #402                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      23: getstatic     #393                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #402                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf();
    Code:
       0: aload_0
       1: getfield      #402                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #408                // Method ScanLeaf$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      11: goto          18
      14: aload_0
      15: getfield      #402                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      18: areturn

  public void initTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #413                // Method scala/collection/parallel/ParIterableLike$class.initTaskSupport:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.TaskSupport tasksupport();
    Code:
       0: aload_0
       1: invokestatic  #417                // Method scala/collection/parallel/ParIterableLike$class.tasksupport:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // Method scala/collection/parallel/ParIterableLike$class.tasksupport_$eq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public scala.collection.parallel.ParIterable repr();
    Code:
       0: aload_0
       1: invokestatic  #426                // Method scala/collection/parallel/ParIterableLike$class.repr:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #430                // Method scala/collection/parallel/ParIterableLike$class.isTraversableAgain:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #433                // Method scala/collection/parallel/ParIterableLike$class.hasDefiniteSize:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #436                // Method scala/collection/parallel/ParIterableLike$class.isEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #439                // Method scala/collection/parallel/ParIterableLike$class.nonEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public java.lang.Object head();
    Code:
       0: aload_0
       1: invokestatic  #443                // Method scala/collection/parallel/ParIterableLike$class.head:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<K, V>> headOption();
    Code:
       0: aload_0
       1: invokestatic  #448                // Method scala/collection/parallel/ParIterableLike$class.headOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable tail();
    Code:
       0: aload_0
       1: invokestatic  #451                // Method scala/collection/parallel/ParIterableLike$class.tail:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object last();
    Code:
       0: aload_0
       1: invokestatic  #454                // Method scala/collection/parallel/ParIterableLike$class.last:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<K, V>> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #457                // Method scala/collection/parallel/ParIterableLike$class.lastOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable init();
    Code:
       0: aload_0
       1: invokestatic  #459                // Method scala/collection/parallel/ParIterableLike$class.init:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.Splitter<scala.Tuple2<K, V>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #464                // Method scala/collection/parallel/ParIterableLike$class.iterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/Splitter;
       4: areturn

  public scala.collection.parallel.ParIterable par();
    Code:
       0: aload_0
       1: invokestatic  #467                // Method scala/collection/parallel/ParIterableLike$class.par:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public boolean isStrictSplitterCollection();
    Code:
       0: aload_0
       1: invokestatic  #470                // Method scala/collection/parallel/ParIterableLike$class.isStrictSplitterCollection:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reuse(scala.Option<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #475                // Method scala/collection/parallel/ParIterableLike$class.reuse:(Lscala/collection/parallel/ParIterableLike;Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <R, Tp> java.lang.Object task2ops(scala.collection.parallel.ParIterableLike<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParHashMap<K, V>, scala.collection.mutable.HashMap<K, V>>.StrictSplitterCheckTask<R, Tp>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #484                // Method scala/collection/parallel/ParIterableLike$class.task2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
       5: areturn

  public <R> java.lang.Object wrap(scala.Function0<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #491                // Method scala/collection/parallel/ParIterableLike$class.wrap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/ParIterableLike$NonDivisible;
       5: areturn

  public <PI extends scala.collection.generic.DelegatedSignalling> java.lang.Object delegatedSignalling2ops(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #497                // Method scala/collection/parallel/ParIterableLike$class.delegatedSignalling2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/DelegatedSignalling;)Lscala/collection/parallel/ParIterableLike$SignallingOps;
       5: areturn

  public <Elem, To> java.lang.Object builder2ops(scala.collection.mutable.Builder<Elem, To>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #504                // Method scala/collection/parallel/ParIterableLike$class.builder2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
       5: areturn

  public <S, That> java.lang.Object bf2seq(scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #511                // Method scala/collection/parallel/ParIterableLike$class.bf2seq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Lscala/collection/generic/CanBuildFrom;
       5: areturn

  public scala.collection.parallel.ParIterable sequentially(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #518                // Method scala/collection/parallel/ParIterableLike$class.sequentially:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #524                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #532                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #536                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #539                // Method scala/collection/parallel/ParIterableLike$class.toString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #543                // Method scala/collection/parallel/ParIterableLike$class.canEqual:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #549                // Method scala/collection/parallel/ParIterableLike$class.reduce:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceOption(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #556                // Method scala/collection/parallel/ParIterableLike$class.reduceOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #561                // Method scala/collection/parallel/ParIterableLike$class.fold:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S aggregate(scala.Function0<S>, scala.Function2<S, scala.Tuple2<K, V>, S>, scala.Function2<S, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #567                // Method scala/collection/parallel/ParIterableLike$class.aggregate:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <S> S foldLeft(S, scala.Function2<S, scala.Tuple2<K, V>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #572                // Method scala/collection/parallel/ParIterableLike$class.foldLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S foldRight(S, scala.Function2<scala.Tuple2<K, V>, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #575                // Method scala/collection/parallel/ParIterableLike$class.foldRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U> U reduceLeft(scala.Function2<U, scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #578                // Method scala/collection/parallel/ParIterableLike$class.reduceLeft:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> U reduceRight(scala.Function2<scala.Tuple2<K, V>, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #581                // Method scala/collection/parallel/ParIterableLike$class.reduceRight:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceLeftOption(scala.Function2<U, scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #584                // Method scala/collection/parallel/ParIterableLike$class.reduceLeftOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> scala.Option<U> reduceRightOption(scala.Function2<scala.Tuple2<K, V>, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #587                // Method scala/collection/parallel/ParIterableLike$class.reduceRightOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #591                // Method scala/collection/parallel/ParIterableLike$class.foreach:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)V
       5: return

  public int count(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #596                // Method scala/collection/parallel/ParIterableLike$class.count:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)I
       5: ireturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #601                // Method scala/collection/parallel/ParIterableLike$class.sum:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #606                // Method scala/collection/parallel/ParIterableLike$class.product:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #611                // Method scala/collection/parallel/ParIterableLike$class.min:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #616                // Method scala/collection/parallel/ParIterableLike$class.max:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #621                // Method scala/collection/parallel/ParIterableLike$class.maxBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #625                // Method scala/collection/parallel/ParIterableLike$class.minBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S, That> That map(scala.Function1<scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #630                // Method scala/collection/parallel/ParIterableLike$class.map:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That collect(scala.PartialFunction<scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #635                // Method scala/collection/parallel/ParIterableLike$class.collect:(Lscala/collection/parallel/ParIterableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That flatMap(scala.Function1<scala.Tuple2<K, V>, scala.collection.GenTraversableOnce<S>>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #640                // Method scala/collection/parallel/ParIterableLike$class.flatMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean forall(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #645                // Method scala/collection/parallel/ParIterableLike$class.forall:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #648                // Method scala/collection/parallel/ParIterableLike$class.exists:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<scala.Tuple2<K, V>> find(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #653                // Method scala/collection/parallel/ParIterableLike$class.find:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public java.lang.Object combinerFactory();
    Code:
       0: aload_0
       1: invokestatic  #658                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/CombinerFactory;
       4: areturn

  public <S, That> java.lang.Object combinerFactory(scala.Function0<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #662                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/CombinerFactory;
       5: areturn

  public scala.collection.parallel.ParIterable withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #666                // Method scala/collection/parallel/ParIterableLike$class.withFilter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #670                // Method scala/collection/parallel/ParIterableLike$class.filter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #673                // Method scala/collection/parallel/ParIterableLike$class.filterNot:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U, That> That $plus$plus(scala.collection.GenTraversableOnce<U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #678                // Method scala/collection/parallel/ParIterableLike$class.$plus$plus:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParHashMap<K, V>, scala.collection.parallel.mutable.ParHashMap<K, V>> partition(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #685                // Method scala/collection/parallel/ParIterableLike$class.partition:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.parallel.immutable.ParMap<K, scala.collection.parallel.mutable.ParHashMap<K, V>> groupBy(scala.Function1<scala.Tuple2<K, V>, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #690                // Method scala/collection/parallel/ParIterableLike$class.groupBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParIterable take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #695                // Method scala/collection/parallel/ParIterableLike$class.take:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #699                // Method scala/collection/parallel/ParIterableLike$class.drop:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #704                // Method scala/collection/parallel/ParIterableLike$class.slice:(Lscala/collection/parallel/ParIterableLike;II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParHashMap<K, V>, scala.collection.parallel.mutable.ParHashMap<K, V>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #711                // Method scala/collection/parallel/ParIterableLike$class.splitAt:(Lscala/collection/parallel/ParIterableLike;I)Lscala/Tuple2;
       5: areturn

  public <U, That> That scan(U, scala.Function2<U, U, U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #716                // Method scala/collection/parallel/ParIterableLike$class.scan:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanLeft(S, scala.Function2<S, scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #719                // Method scala/collection/parallel/ParIterableLike$class.scanLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanRight(S, scala.Function2<scala.Tuple2<K, V>, S, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #722                // Method scala/collection/parallel/ParIterableLike$class.scanRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.collection.parallel.ParIterable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #725                // Method scala/collection/parallel/ParIterableLike$class.takeWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.Tuple2<scala.collection.parallel.mutable.ParHashMap<K, V>, scala.collection.parallel.mutable.ParHashMap<K, V>> span(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #728                // Method scala/collection/parallel/ParIterableLike$class.span:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.parallel.ParIterable dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #731                // Method scala/collection/parallel/ParIterableLike$class.dropWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #736                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)V
       5: return

  public <U> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #740                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;I)V
       6: return

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #744                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;II)V
       7: return

  public <U> boolean sameElements(scala.collection.GenIterable<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #750                // Method scala/collection/parallel/ParIterableLike$class.sameElements:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public <U, S, That> That zip(scala.collection.GenIterable<S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #756                // Method scala/collection/parallel/ParIterableLike$class.zip:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, scala.Tuple2<U, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #761                // Method scala/collection/parallel/ParIterableLike$class.zipWithIndex:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <S, U, That> That zipAll(scala.collection.GenIterable<S>, U, S, scala.collection.generic.CanBuildFrom<scala.collection.parallel.mutable.ParHashMap<K, V>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #766                // Method scala/collection/parallel/ParIterableLike$class.zipAll:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That toParCollection(scala.Function0<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #773                // Method scala/collection/parallel/ParIterableLike$class.toParCollection:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public <K, V, That> That toParMap(scala.Function0<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>, scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #778                // Method scala/collection/parallel/ParIterableLike$class.toParMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Predef$$less$colon$less;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #785                // Method scala/collection/parallel/ParIterableLike$class.view:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/IterableView;
       4: areturn

  public <U> java.lang.Object toArray(scala.reflect.ClassTag<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #790                // Method scala/collection/parallel/ParIterableLike$class.toArray:(Lscala/collection/parallel/ParIterableLike;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<K, V>> toList();
    Code:
       0: aload_0
       1: invokestatic  #797                // Method scala/collection/parallel/ParIterableLike$class.toList:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<K, V>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #802                // Method scala/collection/parallel/ParIterableLike$class.toIndexedSeq:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Stream<scala.Tuple2<K, V>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #807                // Method scala/collection/parallel/ParIterableLike$class.toStream:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #811                // Method scala/collection/parallel/ParIterableLike$class.toIterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Iterator;
       4: areturn

  public <U> scala.collection.mutable.Buffer<U> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #816                // Method scala/collection/parallel/ParIterableLike$class.toBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.GenTraversable<scala.Tuple2<K, V>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #821                // Method scala/collection/parallel/ParIterableLike$class.toTraversable:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/GenTraversable;
       4: areturn

  public <U> scala.collection.parallel.immutable.ParSet<U> toSet();
    Code:
       0: aload_0
       1: invokestatic  #826                // Method scala/collection/parallel/ParIterableLike$class.toSet:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public <K, V> scala.collection.parallel.immutable.ParMap<K, V> toMap(scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #831                // Method scala/collection/parallel/ParIterableLike$class.toMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<K, V>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #836                // Method scala/collection/parallel/ParIterableLike$class.toVector:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scala.Tuple2<K, V>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #839                // Method scala/collection/parallel/ParIterableLike$class.to:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public int scanBlockSize();
    Code:
       0: aload_0
       1: invokestatic  #843                // Method scala/collection/parallel/ParIterableLike$class.scanBlockSize:(Lscala/collection/parallel/ParIterableLike;)I
       4: ireturn

  public <S> S $div$colon(S, scala.Function2<S, scala.Tuple2<K, V>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #846                // Method scala/collection/parallel/ParIterableLike$class.$div$colon:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S $colon$bslash(S, scala.Function2<scala.Tuple2<K, V>, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #849                // Method scala/collection/parallel/ParIterableLike$class.$colon$bslash:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #852                // Method scala/collection/parallel/ParIterableLike$class.debugInformation:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #857                // Method scala/collection/parallel/ParIterableLike$class.debugBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public void debugclear();
    Code:
       0: aload_0
       1: invokestatic  #860                // Method scala/collection/parallel/ParIterableLike$class.debugclear:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debuglog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #865                // Method scala/collection/parallel/ParIterableLike$class.debuglog:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
       5: areturn

  public void printDebugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #869                // Method scala/collection/parallel/ParIterableLike$class.printDebugBuffer:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.Combiner<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParHashMap<K, V>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #876                // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <P, Q> scala.collection.parallel.Combiner<scala.Tuple2<P, Q>, scala.collection.parallel.mutable.ParHashMap<P, Q>> genericMapCombiner();
    Code:
       0: aload_0
       1: invokestatic  #882                // Method scala/collection/generic/GenericParMapTemplate$class.genericMapCombiner:(Lscala/collection/generic/GenericParMapTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParIterable<scala.Tuple2<K, V>>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #889                // Method scala/collection/generic/GenericParTemplate$class.newBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.mutable.ParIterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #893                // Method scala/collection/generic/GenericParTemplate$class.genericBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.mutable.ParIterable<B>> genericCombiner();
    Code:
       0: aload_0
       1: invokestatic  #896                // Method scala/collection/generic/GenericParTemplate$class.genericCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.parallel.mutable.ParIterable<A1>, scala.collection.parallel.mutable.ParIterable<A2>> unzip(scala.Function1<scala.Tuple2<K, V>, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #902                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.parallel.mutable.ParIterable<A1>, scala.collection.parallel.mutable.ParIterable<A2>, scala.collection.parallel.mutable.ParIterable<A3>> unzip3(scala.Function1<scala.Tuple2<K, V>, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #908                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #914                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #918                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #924                // Method scala/collection/GenMapLike$class.hashCode:(Lscala/collection/GenMapLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #928                // Method scala/collection/GenMapLike$class.equals:(Lscala/collection/GenMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.generic.GenericParMapCompanion<scala.collection.parallel.mutable.ParHashMap> mapCompanion();
    Code:
       0: getstatic     #23                 // Field scala/collection/parallel/mutable/ParHashMap$.MODULE$:Lscala/collection/parallel/mutable/ParHashMap$;
       3: areturn

  public scala.collection.parallel.mutable.ParHashMap<K, V> empty();
    Code:
       0: new           #2                  // class scala/collection/parallel/mutable/ParHashMap
       3: dup
       4: invokespecial #934                // Method "<init>":()V
       7: areturn

  public scala.collection.parallel.mutable.ParHashMapCombiner<K, V> newCombiner();
    Code:
       0: getstatic     #941                // Field scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
       3: invokevirtual #943                // Method scala/collection/parallel/mutable/ParHashMapCombiner$.apply:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
       6: areturn

  public scala.collection.mutable.HashMap<K, V> seq();
    Code:
       0: new           #947                // class scala/collection/mutable/HashMap
       3: dup
       4: aload_0
       5: invokevirtual #949                // Method hashTableContents:()Lscala/collection/mutable/HashTable$Contents;
       8: invokespecial #951                // Method scala/collection/mutable/HashMap."<init>":(Lscala/collection/mutable/HashTable$Contents;)V
      11: areturn

  public scala.collection.parallel.mutable.ParHashMap<K, V>.ParHashMapIterator splitter();
    Code:
       0: new           #955                // class scala/collection/parallel/mutable/ParHashMap$ParHashMapIterator
       3: dup
       4: aload_0
       5: iconst_1
       6: aload_0
       7: invokevirtual #957                // Method table:()[Lscala/collection/mutable/HashEntry;
      10: arraylength
      11: aload_0
      12: invokevirtual #960                // Method size:()I
      15: aload_0
      16: invokevirtual #957                // Method table:()[Lscala/collection/mutable/HashEntry;
      19: iconst_0
      20: aaload
      21: checkcast     #962                // class scala/collection/mutable/DefaultEntry
      24: invokespecial #965                // Method scala/collection/parallel/mutable/ParHashMap$ParHashMapIterator."<init>":(Lscala/collection/parallel/mutable/ParHashMap;IIILscala/collection/mutable/DefaultEntry;)V
      27: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #967                // Method tableSize:()I
       4: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #970                // Method clearTable:()V
       4: return

  public scala.Option<V> get(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #974                // Method findEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: checkcast     #962                // class scala/collection/mutable/DefaultEntry
       8: astore_2
       9: aload_2
      10: ifnonnull     19
      13: getstatic     #979                // Field scala/None$.MODULE$:Lscala/None$;
      16: goto          30
      19: new           #981                // class scala/Some
      22: dup
      23: aload_2
      24: invokevirtual #983                // Method scala/collection/mutable/DefaultEntry.value:()Ljava/lang/Object;
      27: invokespecial #985                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      30: areturn

  public scala.Option<V> put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #992                // Method findOrAddEntry:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       6: checkcast     #962                // class scala/collection/mutable/DefaultEntry
       9: astore_3
      10: aload_3
      11: ifnonnull     20
      14: getstatic     #979                // Field scala/None$.MODULE$:Lscala/None$;
      17: goto          40
      20: aload_3
      21: invokevirtual #983                // Method scala/collection/mutable/DefaultEntry.value:()Ljava/lang/Object;
      24: astore        4
      26: aload_3
      27: aload_2
      28: invokevirtual #995                // Method scala/collection/mutable/DefaultEntry.value_$eq:(Ljava/lang/Object;)V
      31: new           #981                // class scala/Some
      34: dup
      35: aload         4
      37: invokespecial #985                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      40: areturn

  public void update(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1000               // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       6: pop
       7: return

  public scala.Option<V> remove(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1003               // Method removeEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: checkcast     #962                // class scala/collection/mutable/DefaultEntry
       8: astore_2
       9: aload_2
      10: ifnull        27
      13: new           #981                // class scala/Some
      16: dup
      17: aload_2
      18: invokevirtual #983                // Method scala/collection/mutable/DefaultEntry.value:()Ljava/lang/Object;
      21: invokespecial #985                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      24: goto          30
      27: getstatic     #979                // Field scala/None$.MODULE$:Lscala/None$;
      30: areturn

  public scala.collection.parallel.mutable.ParHashMap<K, V> $plus$eq(scala.Tuple2<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1009               // Method scala/Tuple2._1:()Ljava/lang/Object;
       5: aload_1
       6: invokevirtual #1012               // Method scala/Tuple2._2:()Ljava/lang/Object;
       9: invokevirtual #992                // Method findOrAddEntry:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
      12: checkcast     #962                // class scala/collection/mutable/DefaultEntry
      15: astore_2
      16: aload_2
      17: ifnull        28
      20: aload_2
      21: aload_1
      22: invokevirtual #1012               // Method scala/Tuple2._2:()Ljava/lang/Object;
      25: invokevirtual #995                // Method scala/collection/mutable/DefaultEntry.value_$eq:(Ljava/lang/Object;)V
      28: aload_0
      29: areturn

  public scala.collection.parallel.mutable.ParHashMap<K, V> $minus$eq(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1003               // Method removeEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: pop
       6: aload_0
       7: areturn

  public java.lang.String stringPrefix();
    Code:
       0: ldc_w         #1016               // String ParHashMap
       3: areturn

  public <V1> scala.collection.mutable.DefaultEntry<K, V> createNewEntry(K, V1);
    Code:
       0: new           #962                // class scala/collection/mutable/DefaultEntry
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #1020               // Method scala/collection/mutable/DefaultEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  private void writeObject(java.io.ObjectOutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1024               // class scala/collection/parallel/mutable/ParHashMap$$anonfun$writeObject$1
       5: dup
       6: aload_0
       7: aload_1
       8: invokespecial #1027               // Method scala/collection/parallel/mutable/ParHashMap$$anonfun$writeObject$1."<init>":(Lscala/collection/parallel/mutable/ParHashMap;Ljava/io/ObjectOutputStream;)V
      11: invokevirtual #1029               // Method serializeTo:(Ljava/io/ObjectOutputStream;Lscala/Function1;)V
      14: return

  private void readObject(java.io.ObjectInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1033               // class scala/collection/parallel/mutable/ParHashMap$$anonfun$readObject$1
       5: dup
       6: aload_0
       7: aload_1
       8: invokespecial #1036               // Method scala/collection/parallel/mutable/ParHashMap$$anonfun$readObject$1."<init>":(Lscala/collection/parallel/mutable/ParHashMap;Ljava/io/ObjectInputStream;)V
      11: invokevirtual #1038               // Method init:(Ljava/io/ObjectInputStream;Lscala/Function0;)V
      14: return

  public scala.collection.Seq<java.lang.String> brokenInvariants();
    Code:
       0: getstatic     #1045               // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #1050               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: astore_1
       7: iconst_0
       8: aload_0
       9: invokevirtual #957                // Method table:()[Lscala/collection/mutable/HashEntry;
      12: arraylength
      13: aload_0
      14: invokevirtual #1052               // Method sizeMapBucketSize:()I
      17: idiv
      18: invokevirtual #1056               // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
      21: new           #1058               // class scala/collection/parallel/mutable/ParHashMap$$anonfun$2
      24: dup
      25: aload_0
      26: invokespecial #1061               // Method scala/collection/parallel/mutable/ParHashMap$$anonfun$2."<init>":(Lscala/collection/parallel/mutable/ParHashMap;)V
      29: getstatic     #1066               // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      32: invokevirtual #1069               // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      35: invokevirtual #1073               // Method scala/collection/immutable/Range.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      38: checkcast     #1075               // class scala/collection/immutable/IndexedSeq
      41: astore_3
      42: getstatic     #1045               // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      45: getstatic     #1050               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      48: astore_2
      49: iconst_0
      50: aload_0
      51: invokevirtual #957                // Method table:()[Lscala/collection/mutable/HashEntry;
      54: arraylength
      55: invokevirtual #1056               // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
      58: new           #1077               // class scala/collection/parallel/mutable/ParHashMap$$anonfun$3
      61: dup
      62: aload_0
      63: invokespecial #1078               // Method scala/collection/parallel/mutable/ParHashMap$$anonfun$3."<init>":(Lscala/collection/parallel/mutable/ParHashMap;)V
      66: getstatic     #1066               // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      69: invokevirtual #1069               // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      72: invokevirtual #1073               // Method scala/collection/immutable/Range.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      75: checkcast     #1075               // class scala/collection/immutable/IndexedSeq
      78: astore        4
      80: aload_3
      81: new           #1080               // class scala/collection/parallel/mutable/ParHashMap$$anonfun$brokenInvariants$1
      84: dup
      85: aload_0
      86: invokespecial #1081               // Method scala/collection/parallel/mutable/ParHashMap$$anonfun$brokenInvariants$1."<init>":(Lscala/collection/parallel/mutable/ParHashMap;)V
      89: getstatic     #1066               // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      92: invokevirtual #1069               // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      95: invokeinterface #1083,  3         // InterfaceMethod scala/collection/immutable/IndexedSeq.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     100: checkcast     #1085               // class scala/collection/TraversableLike
     103: aload         4
     105: new           #1087               // class scala/collection/parallel/mutable/ParHashMap$$anonfun$brokenInvariants$2
     108: dup
     109: aload_0
     110: invokespecial #1088               // Method scala/collection/parallel/mutable/ParHashMap$$anonfun$brokenInvariants$2."<init>":(Lscala/collection/parallel/mutable/ParHashMap;)V
     113: getstatic     #1066               // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     116: invokevirtual #1069               // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     119: invokeinterface #1083,  3         // InterfaceMethod scala/collection/immutable/IndexedSeq.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     124: checkcast     #1090               // class scala/collection/GenTraversableOnce
     127: getstatic     #1066               // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     130: invokevirtual #1069               // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     133: invokeinterface #1092,  3         // InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     138: checkcast     #1094               // class scala/collection/Seq
     141: areturn

  public scala.collection.immutable.List<java.lang.String> scala$collection$parallel$mutable$ParHashMap$$checkBucket(int);
    Code:
       0: aload_0
       1: invokevirtual #1100               // Method sizemap:()[I
       4: iload_1
       5: iaload
       6: istore        5
       8: getstatic     #1045               // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      11: getstatic     #1050               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: iload_1
      15: aload_0
      16: invokevirtual #1052               // Method sizeMapBucketSize:()I
      19: imul
      20: istore_3
      21: astore_2
      22: iload_3
      23: iload_1
      24: iconst_1
      25: iadd
      26: aload_0
      27: invokevirtual #1052               // Method sizeMapBucketSize:()I
      30: imul
      31: invokevirtual #1056               // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
      34: iconst_0
      35: invokestatic  #1106               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      38: new           #1108               // class scala/collection/parallel/mutable/ParHashMap$$anonfun$1
      41: dup
      42: aload_0
      43: invokespecial #1109               // Method scala/collection/parallel/mutable/ParHashMap$$anonfun$1."<init>":(Lscala/collection/parallel/mutable/ParHashMap;)V
      46: invokevirtual #1111               // Method scala/collection/immutable/Range.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      49: invokestatic  #1114               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      52: istore        4
      54: iload         4
      56: iload         5
      58: if_icmpeq     124
      61: getstatic     #1119               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      64: getstatic     #1050               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: iconst_1
      68: anewarray     #1121               // class java/lang/String
      71: dup
      72: iconst_0
      73: new           #1123               // class scala/collection/mutable/StringBuilder
      76: dup
      77: invokespecial #1124               // Method scala/collection/mutable/StringBuilder."<init>":()V
      80: ldc_w         #1126               // String Found
      83: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      86: iload         4
      88: invokestatic  #1106               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      91: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      94: ldc_w         #1132               // String  elements, while sizemap showed
      97: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     100: iload         5
     102: invokestatic  #1106               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     105: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     108: invokevirtual #1134               // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     111: aastore
     112: checkcast     #1136               // class "[Ljava/lang/Object;"
     115: invokevirtual #1140               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     118: invokevirtual #1143               // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
     121: goto          127
     124: getstatic     #1148               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     127: areturn

  public scala.collection.immutable.List<java.lang.String> scala$collection$parallel$mutable$ParHashMap$$checkEntry(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #957                // Method table:()[Lscala/collection/mutable/HashEntry;
       5: iload_1
       6: aaload
       7: iload_1
       8: invokespecial #1158               // Method check$1:(Lscala/collection/mutable/HashEntry;I)Lscala/collection/immutable/List;
      11: areturn

  public scala.collection.mutable.Builder genericBuilder();
    Code:
       0: aload_0
       1: invokevirtual #1160               // Method genericBuilder:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1163               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1166               // Method toSet:()Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1169               // Method dropWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1171               // Method takeWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1174               // Method slice:(II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1177               // Method drop:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1179               // Method take:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1182               // Method groupBy:(Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1184               // Method filterNot:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1186               // Method filter:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #1189               // Method par:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #1191               // Method iterator:()Lscala/collection/parallel/Splitter;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #1193               // Method init:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #1195               // Method tail:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokevirtual #1197               // Method repr:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1199               // Method mapValues:(Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1201               // Method filterKeys:(Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #1204               // Method values:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #1206               // Method keys:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #1208               // Method keySet:()Lscala/collection/parallel/ParSet;
       4: areturn

  public scala.collection.Iterator valuesIterator();
    Code:
       0: aload_0
       1: invokevirtual #1210               // Method valuesIterator:()Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.Iterator keysIterator();
    Code:
       0: aload_0
       1: invokevirtual #1212               // Method keysIterator:()Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1215               // Method toSeq:()Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public scala.collection.parallel.ParSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1215               // Method toSeq:()Lscala/collection/parallel/mutable/ParSeq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1218               // Method toIterable:()Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1218               // Method toIterable:()Lscala/collection/parallel/mutable/ParIterable;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1220               // Method $minus:(Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1223               // Method $plus:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1223               // Method $plus:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParMap;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1227               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       6: areturn

  public scala.collection.parallel.ParMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1227               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParMap;
       6: areturn

  public scala.collection.mutable.HashEntry createNewEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1230               // Method createNewEntry:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/DefaultEntry;
       6: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1233               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParHashMap;
       5: areturn

  public scala.collection.parallel.mutable.ParMapLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1233               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/parallel/mutable/ParHashMap;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1006               // class scala/Tuple2
       5: invokevirtual #1238               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParHashMap;
       8: areturn

  public scala.collection.parallel.mutable.ParMapLike $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1238               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParHashMap;
       5: areturn

  public scala.collection.parallel.IterableSplitter splitter();
    Code:
       0: aload_0
       1: invokevirtual #1241               // Method splitter:()Lscala/collection/parallel/mutable/ParHashMap$ParHashMapIterator;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1244               // Method seq:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1244               // Method seq:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #1244               // Method seq:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1244               // Method seq:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.mutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1244               // Method seq:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.mutable.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #1244               // Method seq:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.parallel.Combiner newCombiner();
    Code:
       0: aload_0
       1: invokevirtual #1251               // Method newCombiner:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
       4: areturn

  public scala.collection.parallel.ParMap empty();
    Code:
       0: aload_0
       1: invokevirtual #1254               // Method empty:()Lscala/collection/parallel/mutable/ParHashMap;
       4: areturn

  public scala.collection.parallel.mutable.ParMap empty();
    Code:
       0: aload_0
       1: invokevirtual #1254               // Method empty:()Lscala/collection/parallel/mutable/ParHashMap;
       4: areturn

  public final int scala$collection$parallel$mutable$ParHashMap$$count$1(scala.collection.mutable.HashEntry);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: goto          23
       8: iconst_1
       9: aload_0
      10: aload_1
      11: invokeinterface #1262,  1         // InterfaceMethod scala/collection/mutable/HashEntry.next:()Ljava/lang/Object;
      16: checkcast     #1259               // class scala/collection/mutable/HashEntry
      19: invokevirtual #1264               // Method scala$collection$parallel$mutable$ParHashMap$$count$1:(Lscala/collection/mutable/HashEntry;)I
      22: iadd
      23: ireturn

  private final scala.collection.immutable.List check$1(scala.collection.mutable.HashEntry, int);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #1148               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       7: goto          146
      10: aload_0
      11: aload_0
      12: aload_1
      13: invokeinterface #1266,  1         // InterfaceMethod scala/collection/mutable/HashEntry.key:()Ljava/lang/Object;
      18: invokevirtual #1268               // Method elemHashCode:(Ljava/lang/Object;)I
      21: invokevirtual #1270               // Method index:(I)I
      24: iload_2
      25: if_icmpne     41
      28: aload_1
      29: invokeinterface #1262,  1         // InterfaceMethod scala/collection/mutable/HashEntry.next:()Ljava/lang/Object;
      34: checkcast     #1259               // class scala/collection/mutable/HashEntry
      37: astore_1
      38: goto          0
      41: new           #1123               // class scala/collection/mutable/StringBuilder
      44: dup
      45: invokespecial #1124               // Method scala/collection/mutable/StringBuilder."<init>":()V
      48: ldc_w         #1272               // String Element
      51: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      54: aload_1
      55: invokeinterface #1266,  1         // InterfaceMethod scala/collection/mutable/HashEntry.key:()Ljava/lang/Object;
      60: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      63: ldc_w         #1274               // String  at
      66: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      69: iload_2
      70: invokestatic  #1106               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      73: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      76: ldc_w         #1276               // String  with
      79: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      82: aload_0
      83: aload_1
      84: invokeinterface #1266,  1         // InterfaceMethod scala/collection/mutable/HashEntry.key:()Ljava/lang/Object;
      89: invokevirtual #1268               // Method elemHashCode:(Ljava/lang/Object;)I
      92: invokestatic  #1106               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      95: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      98: ldc_w         #1278               // String  maps to
     101: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     104: aload_0
     105: aload_0
     106: aload_1
     107: invokeinterface #1266,  1         // InterfaceMethod scala/collection/mutable/HashEntry.key:()Ljava/lang/Object;
     112: invokevirtual #1268               // Method elemHashCode:(Ljava/lang/Object;)I
     115: invokevirtual #1270               // Method index:(I)I
     118: invokestatic  #1106               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     121: invokevirtual #1130               // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     124: invokevirtual #1134               // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     127: astore_3
     128: aload_0
     129: aload_1
     130: invokeinterface #1262,  1         // InterfaceMethod scala/collection/mutable/HashEntry.next:()Ljava/lang/Object;
     135: checkcast     #1259               // class scala/collection/mutable/HashEntry
     138: iload_2
     139: invokespecial #1158               // Method check$1:(Lscala/collection/mutable/HashEntry;I)Lscala/collection/immutable/List;
     142: aload_3
     143: invokevirtual #1282               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     146: areturn

  public scala.collection.parallel.mutable.ParHashMap(scala.collection.mutable.HashTable$Contents<K, scala.collection.mutable.DefaultEntry<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #1284               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1290               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
       8: aload_0
       9: invokestatic  #1293               // Method scala/collection/GenMapLike$class.$init$:(Lscala/collection/GenMapLike;)V
      12: aload_0
      13: invokestatic  #1296               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      16: aload_0
      17: invokestatic  #1301               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      20: aload_0
      21: invokestatic  #1306               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      24: aload_0
      25: invokestatic  #1309               // Method scala/collection/generic/GenericParTemplate$class.$init$:(Lscala/collection/generic/GenericParTemplate;)V
      28: aload_0
      29: invokestatic  #1312               // Method scala/collection/generic/GenericParMapTemplate$class.$init$:(Lscala/collection/generic/GenericParMapTemplate;)V
      32: aload_0
      33: invokestatic  #1315               // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      36: aload_0
      37: invokestatic  #1317               // Method scala/collection/parallel/ParIterableLike$class.$init$:(Lscala/collection/parallel/ParIterableLike;)V
      40: aload_0
      41: invokestatic  #1322               // Method scala/collection/parallel/ParIterable$class.$init$:(Lscala/collection/parallel/ParIterable;)V
      44: aload_0
      45: invokestatic  #1325               // Method scala/collection/parallel/ParMapLike$class.$init$:(Lscala/collection/parallel/ParMapLike;)V
      48: aload_0
      49: invokestatic  #1330               // Method scala/collection/parallel/ParMap$class.$init$:(Lscala/collection/parallel/ParMap;)V
      52: aload_0
      53: invokestatic  #1333               // Method scala/collection/parallel/mutable/ParIterable$class.$init$:(Lscala/collection/parallel/mutable/ParIterable;)V
      56: aload_0
      57: invokestatic  #1336               // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
      60: aload_0
      61: invokestatic  #1339               // Method scala/collection/generic/Shrinkable$class.$init$:(Lscala/collection/generic/Shrinkable;)V
      64: aload_0
      65: invokestatic  #1342               // Method scala/collection/mutable/Cloneable$class.$init$:(Lscala/collection/mutable/Cloneable;)V
      68: aload_0
      69: invokestatic  #1345               // Method scala/collection/parallel/mutable/ParMapLike$class.$init$:(Lscala/collection/parallel/mutable/ParMapLike;)V
      72: aload_0
      73: invokestatic  #1348               // Method scala/collection/parallel/mutable/ParMap$class.$init$:(Lscala/collection/parallel/mutable/ParMap;)V
      76: aload_0
      77: invokestatic  #1351               // Method scala/collection/mutable/HashTable$HashUtils$class.$init$:(Lscala/collection/mutable/HashTable$HashUtils;)V
      80: aload_0
      81: invokestatic  #1353               // Method scala/collection/mutable/HashTable$class.$init$:(Lscala/collection/mutable/HashTable;)V
      84: aload_0
      85: invokestatic  #1356               // Method scala/collection/parallel/mutable/ParHashTable$class.$init$:(Lscala/collection/parallel/mutable/ParHashTable;)V
      88: aload_0
      89: aload_1
      90: invokevirtual #1358               // Method initWithContents:(Lscala/collection/mutable/HashTable$Contents;)V
      93: return

  public scala.collection.parallel.mutable.ParHashMap();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1360               // Method "<init>":(Lscala/collection/mutable/HashTable$Contents;)V
       5: return
}
