Compiled from "ParTrieMap.scala"
public class scala.collection.parallel.mutable.ParTrieMapSplitter<K, V> extends scala.collection.concurrent.TrieMapIterator<K, V> implements scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>> {
  private final scala.collection.concurrent.TrieMap<K, V> ct;

  private int totalsize;

  private int iterated;

  private scala.collection.generic.Signalling signalDelegate;

  private volatile boolean bitmap$0;

  private int totalsize$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #25                 // Field bitmap$0:Z
       8: ifne          30
      11: aload_0
      12: aload_0
      13: getfield      #27                 // Field ct:Lscala/collection/concurrent/TrieMap;
      16: invokevirtual #33                 // Method scala/collection/concurrent/TrieMap.par:()Lscala/collection/parallel/mutable/ParTrieMap;
      19: invokevirtual #38                 // Method scala/collection/parallel/mutable/ParTrieMap.size:()I
      22: putfield      #40                 // Field totalsize:I
      25: aload_0
      26: iconst_1
      27: putfield      #25                 // Field bitmap$0:Z
      30: getstatic     #46                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      33: pop
      34: aload_0
      35: monitorexit
      36: aload_0
      37: getfield      #40                 // Field totalsize:I
      40: ireturn
      41: aload_1
      42: monitorexit
      43: athrow
    Exception table:
       from    to  target type
           4    36    41   any

  public scala.collection.generic.Signalling signalDelegate();
    Code:
       0: aload_0
       1: getfield      #53                 // Field signalDelegate:Lscala/collection/generic/Signalling;
       4: areturn

  public void signalDelegate_$eq(scala.collection.generic.Signalling);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field signalDelegate:Lscala/collection/generic/Signalling;
       5: return

  public scala.collection.Seq<scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>> splitWithSignalling();
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method scala/collection/parallel/IterableSplitter$class.splitWithSignalling:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/Seq;
       4: areturn

  public java.lang.String buildString(scala.Function1<scala.Function1<java.lang.String, scala.runtime.BoxedUnit>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // Method scala/collection/parallel/IterableSplitter$class.buildString:(Lscala/collection/parallel/IterableSplitter;Lscala/Function1;)Ljava/lang/String;
       5: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method scala/collection/parallel/IterableSplitter$class.debugInformation:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/String;
       4: areturn

  public scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>.Taken newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #81                 // Method scala/collection/parallel/IterableSplitter$class.newTaken:(Lscala/collection/parallel/IterableSplitter;I)Lscala/collection/parallel/IterableSplitter$Taken;
       5: areturn

  public <U extends scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>.Taken> U newSliceInternal(U, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #87                 // Method scala/collection/parallel/IterableSplitter$class.newSliceInternal:(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
       6: areturn

  public scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #95                 // Method scala/collection/parallel/IterableSplitter$class.take:(Lscala/collection/parallel/IterableSplitter;I)Lscala/collection/parallel/IterableSplitter;
       5: areturn

  public scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #101                // Method scala/collection/parallel/IterableSplitter$class.slice:(Lscala/collection/parallel/IterableSplitter;II)Lscala/collection/parallel/IterableSplitter;
       6: areturn

  public <S> scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>.Mapped<S> map(scala.Function1<scala.Tuple2<K, V>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // Method scala/collection/parallel/IterableSplitter$class.map:(Lscala/collection/parallel/IterableSplitter;Lscala/Function1;)Lscala/collection/parallel/IterableSplitter$Mapped;
       5: areturn

  public <U, PI extends scala.collection.parallel.IterableSplitter<U>> scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>.Appended<U, PI> appendParIterable(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #113                // Method scala/collection/parallel/IterableSplitter$class.appendParIterable:(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/IterableSplitter$Appended;
       5: areturn

  public <S> scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>.Zipped<S> zipParSeq(scala.collection.parallel.SeqSplitter<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method scala/collection/parallel/IterableSplitter$class.zipParSeq:(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/IterableSplitter$Zipped;
       5: areturn

  public <S, U, R> scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>.ZippedAll<U, R> zipAllParSeq(scala.collection.parallel.SeqSplitter<S>, U, R);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #126                // Method scala/collection/parallel/IterableSplitter$class.zipAllParSeq:(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/IterableSplitter$ZippedAll;
       7: areturn

  public boolean isAborted();
    Code:
       0: aload_0
       1: invokestatic  #136                // Method scala/collection/generic/DelegatedSignalling$class.isAborted:(Lscala/collection/generic/DelegatedSignalling;)Z
       4: ireturn

  public void abort();
    Code:
       0: aload_0
       1: invokestatic  #141                // Method scala/collection/generic/DelegatedSignalling$class.abort:(Lscala/collection/generic/DelegatedSignalling;)V
       4: return

  public int indexFlag();
    Code:
       0: aload_0
       1: invokestatic  #145                // Method scala/collection/generic/DelegatedSignalling$class.indexFlag:(Lscala/collection/generic/DelegatedSignalling;)I
       4: ireturn

  public void setIndexFlag(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #150                // Method scala/collection/generic/DelegatedSignalling$class.setIndexFlag:(Lscala/collection/generic/DelegatedSignalling;I)V
       5: return

  public void setIndexFlagIfGreater(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #153                // Method scala/collection/generic/DelegatedSignalling$class.setIndexFlagIfGreater:(Lscala/collection/generic/DelegatedSignalling;I)V
       5: return

  public void setIndexFlagIfLesser(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #156                // Method scala/collection/generic/DelegatedSignalling$class.setIndexFlagIfLesser:(Lscala/collection/generic/DelegatedSignalling;I)V
       5: return

  public int tag();
    Code:
       0: aload_0
       1: invokestatic  #159                // Method scala/collection/generic/DelegatedSignalling$class.tag:(Lscala/collection/generic/DelegatedSignalling;)I
       4: ireturn

  public int count(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/collection/parallel/AugmentedIterableIterator$class.count:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;)I
       5: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // Method scala/collection/parallel/AugmentedIterableIterator$class.reduce:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #179                // Method scala/collection/parallel/AugmentedIterableIterator$class.fold:(Lscala/collection/parallel/AugmentedIterableIterator;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // Method scala/collection/parallel/AugmentedIterableIterator$class.sum:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // Method scala/collection/parallel/AugmentedIterableIterator$class.product:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // Method scala/collection/parallel/AugmentedIterableIterator$class.min:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #200                // Method scala/collection/parallel/AugmentedIterableIterator$class.max:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #205                // Method scala/collection/parallel/AugmentedIterableIterator$class.copyToArray:(Lscala/collection/parallel/AugmentedIterableIterator;Ljava/lang/Object;II)V
       7: return

  public <U> U reduceLeft(int, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #213                // Method scala/collection/parallel/AugmentedIterableIterator$class.reduceLeft:(Lscala/collection/parallel/AugmentedIterableIterator;ILscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S, That> scala.collection.parallel.Combiner<S, That> map2combiner(scala.Function1<scala.Tuple2<K, V>, S>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #219                // Method scala/collection/parallel/AugmentedIterableIterator$class.map2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <S, That> scala.collection.parallel.Combiner<S, That> collect2combiner(scala.PartialFunction<scala.Tuple2<K, V>, S>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #226                // Method scala/collection/parallel/AugmentedIterableIterator$class.collect2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/PartialFunction;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <S, That> scala.collection.parallel.Combiner<S, That> flatmap2combiner(scala.Function1<scala.Tuple2<K, V>, scala.collection.GenTraversableOnce<S>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #231                // Method scala/collection/parallel/AugmentedIterableIterator$class.flatmap2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, Coll, Bld extends scala.collection.mutable.Builder<U, Coll>> Bld copy2builder(Bld);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #236                // Method scala/collection/parallel/AugmentedIterableIterator$class.copy2builder:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/collection/mutable/Builder;)Lscala/collection/mutable/Builder;
       5: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> filter2combiner(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #241                // Method scala/collection/parallel/AugmentedIterableIterator$class.filter2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> filterNot2combiner(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // Method scala/collection/parallel/AugmentedIterableIterator$class.filterNot2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> partition2combiners(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #250                // Method scala/collection/parallel/AugmentedIterableIterator$class.partition2combiners:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
       7: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> take2combiner(int, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #257                // Method scala/collection/parallel/AugmentedIterableIterator$class.take2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;ILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> drop2combiner(int, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #260                // Method scala/collection/parallel/AugmentedIterableIterator$class.drop2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;ILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, This> scala.collection.parallel.Combiner<U, This> slice2combiner(int, int, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #265                // Method scala/collection/parallel/AugmentedIterableIterator$class.slice2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;IILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       7: areturn

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> splitAt2combiners(int, scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #270                // Method scala/collection/parallel/AugmentedIterableIterator$class.splitAt2combiners:(Lscala/collection/parallel/AugmentedIterableIterator;ILscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
       7: areturn

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object> takeWhile2combiner(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #278                // Method scala/collection/parallel/AugmentedIterableIterator$class.takeWhile2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
       6: areturn

  public <U, This> scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> span2combiners(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #281                // Method scala/collection/parallel/AugmentedIterableIterator$class.span2combiners:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
       7: areturn

  public <U, A> void scanToArray(U, scala.Function2<U, U, U>, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokestatic  #286                // Method scala/collection/parallel/AugmentedIterableIterator$class.scanToArray:(Lscala/collection/parallel/AugmentedIterableIterator;Ljava/lang/Object;Lscala/Function2;Ljava/lang/Object;I)V
       9: return

  public <U, That> scala.collection.parallel.Combiner<U, That> scanToCombiner(U, scala.Function2<U, U, U>, scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #291                // Method scala/collection/parallel/AugmentedIterableIterator$class.scanToCombiner:(Lscala/collection/parallel/AugmentedIterableIterator;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       7: areturn

  public <U, That> scala.collection.parallel.Combiner<U, That> scanToCombiner(int, U, scala.Function2<U, U, U>, scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #296                // Method scala/collection/parallel/AugmentedIterableIterator$class.scanToCombiner:(Lscala/collection/parallel/AugmentedIterableIterator;ILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       9: areturn

  public <U, S, That> scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> zip2combiner(scala.collection.parallel.RemainsIterator<S>, scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #301                // Method scala/collection/parallel/AugmentedIterableIterator$class.zip2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, S, That> scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> zipAll2combiner(scala.collection.parallel.RemainsIterator<S>, U, S, scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #308                // Method scala/collection/parallel/AugmentedIterableIterator$class.zipAll2combiner:(Lscala/collection/parallel/AugmentedIterableIterator;Lscala/collection/parallel/RemainsIterator;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       9: areturn

  public int totalsize();
    Code:
       0: aload_0
       1: getfield      #25                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #40                 // Field totalsize:I
      11: goto          18
      14: aload_0
      15: invokespecial #312                // Method totalsize$lzycompute:()I
      18: ireturn

  public int iterated();
    Code:
       0: aload_0
       1: getfield      #314                // Field iterated:I
       4: ireturn

  public void iterated_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #314                // Field iterated:I
       5: return

  public scala.collection.parallel.mutable.ParTrieMapSplitter<K, V> newIterator(int, scala.collection.concurrent.TrieMap<K, V>, boolean);
    Code:
       0: new           #2                  // class scala/collection/parallel/mutable/ParTrieMapSplitter
       3: dup
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokespecial #321                // Method "<init>":(ILscala/collection/concurrent/TrieMap;Z)V
      10: areturn

  public <S> boolean shouldSplitFurther(scala.collection.parallel.ParIterable<S>, int);
    Code:
       0: iconst_3
       1: iload_2
       2: invokestatic  #332                // Method java/lang/Integer.highestOneBit:(I)I
       5: iadd
       6: istore_3
       7: aload_0
       8: invokevirtual #335                // Method level:()I
      11: iload_3
      12: if_icmpge     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public scala.collection.parallel.mutable.ParTrieMapSplitter<K, V> dup();
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: getfield      #27                 // Field ct:Lscala/collection/concurrent/TrieMap;
       6: iconst_0
       7: invokevirtual #343                // Method newIterator:(ILscala/collection/concurrent/TrieMap;Z)Lscala/collection/parallel/mutable/ParTrieMapSplitter;
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokevirtual #347                // Method dupTo:(Lscala/collection/concurrent/TrieMapIterator;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #349                // Method iterated:()I
      21: invokevirtual #351                // Method iterated_$eq:(I)V
      24: aload_1
      25: areturn

  public scala.Tuple2<K, V> next();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #349                // Method iterated:()I
       5: iconst_1
       6: iadd
       7: invokevirtual #351                // Method iterated_$eq:(I)V
      10: aload_0
      11: invokespecial #355                // Method scala/collection/concurrent/TrieMapIterator.next:()Lscala/Tuple2;
      14: areturn

  public scala.collection.Seq<scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>>> split();
    Code:
       0: aload_0
       1: invokevirtual #359                // Method subdivide:()Lscala/collection/Seq;
       4: areturn

  public boolean isRemainingCheap();
    Code:
       0: iconst_0
       1: ireturn

  public int remaining();
    Code:
       0: aload_0
       1: invokevirtual #363                // Method totalsize:()I
       4: aload_0
       5: invokevirtual #349                // Method iterated:()I
       8: isub
       9: ireturn

  public scala.collection.Iterator map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #366                // Method map:(Lscala/Function1;)Lscala/collection/parallel/IterableSplitter$Mapped;
       5: areturn

  public scala.collection.Iterator slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #369                // Method slice:(II)Lscala/collection/parallel/IterableSplitter;
       6: areturn

  public scala.collection.Iterator take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #372                // Method take:(I)Lscala/collection/parallel/IterableSplitter;
       5: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #374                // Method next:()Lscala/Tuple2;
       4: areturn

  public scala.collection.parallel.IterableSplitter dup();
    Code:
       0: aload_0
       1: invokevirtual #377                // Method dup:()Lscala/collection/parallel/mutable/ParTrieMapSplitter;
       4: areturn

  public scala.collection.concurrent.TrieMapIterator newIterator(int, scala.collection.concurrent.TrieMap, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #343                // Method newIterator:(ILscala/collection/concurrent/TrieMap;Z)Lscala/collection/parallel/mutable/ParTrieMapSplitter;
       7: areturn

  public scala.collection.parallel.mutable.ParTrieMapSplitter(int, scala.collection.concurrent.TrieMap<K, V>, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #27                 // Field ct:Lscala/collection/concurrent/TrieMap;
       5: aload_0
       6: iload_1
       7: aload_2
       8: iload_3
       9: invokespecial #379                // Method scala/collection/concurrent/TrieMapIterator."<init>":(ILscala/collection/concurrent/TrieMap;Z)V
      12: aload_0
      13: invokestatic  #385                // Method scala/collection/parallel/RemainsIterator$class.$init$:(Lscala/collection/parallel/RemainsIterator;)V
      16: aload_0
      17: invokestatic  #388                // Method scala/collection/parallel/AugmentedIterableIterator$class.$init$:(Lscala/collection/parallel/AugmentedIterableIterator;)V
      20: aload_0
      21: invokestatic  #390                // Method scala/collection/generic/DelegatedSignalling$class.$init$:(Lscala/collection/generic/DelegatedSignalling;)V
      24: aload_0
      25: invokestatic  #393                // Method scala/collection/parallel/IterableSplitter$class.$init$:(Lscala/collection/parallel/IterableSplitter;)V
      28: aload_0
      29: iconst_0
      30: putfield      #314                // Field iterated:I
      33: return
}
