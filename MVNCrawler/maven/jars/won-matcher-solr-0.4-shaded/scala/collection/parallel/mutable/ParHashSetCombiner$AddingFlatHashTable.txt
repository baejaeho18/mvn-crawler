Compiled from "ParHashSet.scala"
public class scala.collection.parallel.mutable.ParHashSetCombiner$AddingFlatHashTable implements scala.collection.mutable.FlatHashTable<T> {
  public final scala.collection.parallel.mutable.ParHashSetCombiner $outer;

  private transient int _loadFactor;

  private transient java.lang.Object[] table;

  private transient int tableSize;

  private transient int threshold;

  private transient int[] sizemap;

  private transient int seedvalue;

  public int _loadFactor();
    Code:
       0: aload_0
       1: getfield      #22                 // Field _loadFactor:I
       4: ireturn

  public void _loadFactor_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field _loadFactor:I
       5: return

  public java.lang.Object[] table();
    Code:
       0: aload_0
       1: getfield      #31                 // Field table:[Ljava/lang/Object;
       4: areturn

  public void table_$eq(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field table:[Ljava/lang/Object;
       5: return

  public int tableSize();
    Code:
       0: aload_0
       1: getfield      #35                 // Field tableSize:I
       4: ireturn

  public void tableSize_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field tableSize:I
       5: return

  public int threshold();
    Code:
       0: aload_0
       1: getfield      #38                 // Field threshold:I
       4: ireturn

  public void threshold_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field threshold:I
       5: return

  public int[] sizemap();
    Code:
       0: aload_0
       1: getfield      #42                 // Field sizemap:[I
       4: areturn

  public void sizemap_$eq(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field sizemap:[I
       5: return

  public int seedvalue();
    Code:
       0: aload_0
       1: getfield      #46                 // Field seedvalue:I
       4: ireturn

  public void seedvalue_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field seedvalue:I
       5: return

  public int capacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #54                 // Method scala/collection/mutable/FlatHashTable$class.capacity:(Lscala/collection/mutable/FlatHashTable;I)I
       5: ireturn

  public int initialSize();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method scala/collection/mutable/FlatHashTable$class.initialSize:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public int randomSeed();
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method scala/collection/mutable/FlatHashTable$class.randomSeed:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public int tableSizeSeed();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method scala/collection/mutable/FlatHashTable$class.tableSizeSeed:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public void init(java.io.ObjectInputStream, scala.Function1<T, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // Method scala/collection/mutable/FlatHashTable$class.init:(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectInputStream;Lscala/Function1;)V
       6: return

  public void serializeTo(java.io.ObjectOutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method scala/collection/mutable/FlatHashTable$class.serializeTo:(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
       5: return

  public scala.Option<T> findEntry(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method scala/collection/mutable/FlatHashTable$class.findEntry:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public boolean containsElem(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method scala/collection/mutable/FlatHashTable$class.containsElem:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean addElem(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method scala/collection/mutable/FlatHashTable$class.addElem:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean addEntry(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method scala/collection/mutable/FlatHashTable$class.addEntry:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean removeElem(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method scala/collection/mutable/FlatHashTable$class.removeElem:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.Iterator<T> iterator();
    Code:
       0: aload_0
       1: invokestatic  #108                // Method scala/collection/mutable/FlatHashTable$class.iterator:(Lscala/collection/mutable/FlatHashTable;)Lscala/collection/Iterator;
       4: areturn

  public void nnSizeMapAdd(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #112                // Method scala/collection/mutable/FlatHashTable$class.nnSizeMapAdd:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public void nnSizeMapRemove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #116                // Method scala/collection/mutable/FlatHashTable$class.nnSizeMapRemove:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public void nnSizeMapReset(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #119                // Method scala/collection/mutable/FlatHashTable$class.nnSizeMapReset:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public final int totalSizeMapBuckets();
    Code:
       0: aload_0
       1: invokestatic  #123                // Method scala/collection/mutable/FlatHashTable$class.totalSizeMapBuckets:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public int calcSizeMapSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #126                // Method scala/collection/mutable/FlatHashTable$class.calcSizeMapSize:(Lscala/collection/mutable/FlatHashTable;I)I
       5: ireturn

  public void sizeMapInit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #129                // Method scala/collection/mutable/FlatHashTable$class.sizeMapInit:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public void sizeMapInitAndRebuild();
    Code:
       0: aload_0
       1: invokestatic  #134                // Method scala/collection/mutable/FlatHashTable$class.sizeMapInitAndRebuild:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public void printSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #137                // Method scala/collection/mutable/FlatHashTable$class.printSizeMap:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public void printContents();
    Code:
       0: aload_0
       1: invokestatic  #140                // Method scala/collection/mutable/FlatHashTable$class.printContents:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public void sizeMapDisable();
    Code:
       0: aload_0
       1: invokestatic  #143                // Method scala/collection/mutable/FlatHashTable$class.sizeMapDisable:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public boolean isSizeMapDefined();
    Code:
       0: aload_0
       1: invokestatic  #148                // Method scala/collection/mutable/FlatHashTable$class.isSizeMapDefined:(Lscala/collection/mutable/FlatHashTable;)Z
       4: ireturn

  public boolean alwaysInitSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method scala/collection/mutable/FlatHashTable$class.alwaysInitSizeMap:(Lscala/collection/mutable/FlatHashTable;)Z
       4: ireturn

  public final int index(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #154                // Method scala/collection/mutable/FlatHashTable$class.index:(Lscala/collection/mutable/FlatHashTable;I)I
       5: ireturn

  public void clearTable();
    Code:
       0: aload_0
       1: invokestatic  #158                // Method scala/collection/mutable/FlatHashTable$class.clearTable:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public scala.collection.mutable.FlatHashTable$Contents<T> hashTableContents();
    Code:
       0: aload_0
       1: invokestatic  #163                // Method scala/collection/mutable/FlatHashTable$class.hashTableContents:(Lscala/collection/mutable/FlatHashTable;)Lscala/collection/mutable/FlatHashTable$Contents;
       4: areturn

  public void initWithContents(scala.collection.mutable.FlatHashTable$Contents<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #168                // Method scala/collection/mutable/FlatHashTable$class.initWithContents:(Lscala/collection/mutable/FlatHashTable;Lscala/collection/mutable/FlatHashTable$Contents;)V
       5: return

  public final int sizeMapBucketBitSize();
    Code:
       0: aload_0
       1: invokestatic  #176                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.sizeMapBucketBitSize:(Lscala/collection/mutable/FlatHashTable$HashUtils;)I
       4: ireturn

  public final int sizeMapBucketSize();
    Code:
       0: aload_0
       1: invokestatic  #179                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.sizeMapBucketSize:(Lscala/collection/mutable/FlatHashTable$HashUtils;)I
       4: ireturn

  public final int improve(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #184                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.improve:(Lscala/collection/mutable/FlatHashTable$HashUtils;II)I
       6: ireturn

  public final java.lang.Object elemToEntry(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.elemToEntry:(Lscala/collection/mutable/FlatHashTable$HashUtils;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public final T entryToElem(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.entryToElem:(Lscala/collection/mutable/FlatHashTable$HashUtils;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.String toString();
    Code:
       0: new           #198                // class scala/collection/immutable/StringOps
       3: dup
       4: getstatic     #204                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: astore_1
       8: ldc           #206                // String AFHT(%s)
      10: invokespecial #210                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
      13: getstatic     #204                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      16: iconst_1
      17: anewarray     #5                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: invokevirtual #212                // Method table:()[Ljava/lang/Object;
      26: arraylength
      27: invokestatic  #218                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: aastore
      31: invokevirtual #222                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      34: invokevirtual #226                // Method scala/collection/immutable/StringOps.format:(Lscala/collection/Seq;)Ljava/lang/String;
      37: areturn

  public int tableLength();
    Code:
       0: aload_0
       1: invokevirtual #212                // Method table:()[Ljava/lang/Object;
       4: arraylength
       5: ireturn

  public void setSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #229                // Method tableSize_$eq:(I)V
       5: return

  public int insertEntry(int, int, java.lang.Object);
    Code:
       0: iload_1
       1: istore        4
       3: iload_1
       4: iconst_m1
       5: if_icmpne     18
       8: aload_0
       9: aload_3
      10: invokevirtual #235                // Method java/lang/Object.hashCode:()I
      13: invokevirtual #237                // Method index:(I)I
      16: istore        4
      18: aload_0
      19: invokevirtual #212                // Method table:()[Ljava/lang/Object;
      22: iload         4
      24: aaload
      25: astore        5
      27: aload         5
      29: ifnonnull     48
      32: aload_0
      33: invokevirtual #212                // Method table:()[Ljava/lang/Object;
      36: iload         4
      38: aload_3
      39: aastore
      40: aload_0
      41: iload         4
      43: invokevirtual #239                // Method nnSizeMapAdd:(I)V
      46: iconst_1
      47: ireturn
      48: aload         5
      50: aload_3
      51: if_acmpne     58
      54: iconst_1
      55: goto          113
      58: aload         5
      60: ifnonnull     67
      63: iconst_0
      64: goto          113
      67: aload         5
      69: instanceof    #241                // class java/lang/Number
      72: ifeq          87
      75: aload         5
      77: checkcast     #241                // class java/lang/Number
      80: aload_3
      81: invokestatic  #245                // Method scala/runtime/BoxesRunTime.equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
      84: goto          113
      87: aload         5
      89: instanceof    #247                // class java/lang/Character
      92: ifeq          107
      95: aload         5
      97: checkcast     #247                // class java/lang/Character
     100: aload_3
     101: invokestatic  #251                // Method scala/runtime/BoxesRunTime.equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
     104: goto          113
     107: aload         5
     109: aload_3
     110: invokevirtual #254                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     113: ifeq          118
     116: iconst_0
     117: ireturn
     118: iload         4
     120: iconst_1
     121: iadd
     122: dup
     123: istore        4
     125: iload_2
     126: if_icmplt     131
     129: iconst_m1
     130: ireturn
     131: aload_0
     132: invokevirtual #212                // Method table:()[Ljava/lang/Object;
     135: iload         4
     137: aaload
     138: astore        5
     140: goto          27

  public scala.collection.parallel.mutable.ParHashSetCombiner scala$collection$parallel$mutable$ParHashSetCombiner$AddingFlatHashTable$$$outer();
    Code:
       0: aload_0
       1: getfield      #261                // Field $outer:Lscala/collection/parallel/mutable/ParHashSetCombiner;
       4: areturn

  public scala.collection.parallel.mutable.ParHashSetCombiner$AddingFlatHashTable(scala.collection.parallel.mutable.ParHashSetCombiner<T>, int, int, int);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #261                // Field $outer:Lscala/collection/parallel/mutable/ParHashSetCombiner;
      11: aload_0
      12: invokespecial #264                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #268                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.$init$:(Lscala/collection/mutable/FlatHashTable$HashUtils;)V
      19: aload_0
      20: invokestatic  #270                // Method scala/collection/mutable/FlatHashTable$class.$init$:(Lscala/collection/mutable/FlatHashTable;)V
      23: aload_0
      24: iload_3
      25: invokevirtual #272                // Method _loadFactor_$eq:(I)V
      28: aload_0
      29: aload_0
      30: getstatic     #277                // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
      33: iload_2
      34: aload_0
      35: invokevirtual #279                // Method _loadFactor:()I
      38: invokevirtual #282                // Method scala/collection/mutable/FlatHashTable$.sizeForThreshold:(II)I
      41: invokevirtual #284                // Method capacity:(I)I
      44: anewarray     #5                  // class java/lang/Object
      47: invokevirtual #286                // Method table_$eq:([Ljava/lang/Object;)V
      50: aload_0
      51: iconst_0
      52: invokevirtual #229                // Method tableSize_$eq:(I)V
      55: aload_0
      56: getstatic     #277                // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
      59: aload_0
      60: invokevirtual #279                // Method _loadFactor:()I
      63: aload_0
      64: invokevirtual #212                // Method table:()[Ljava/lang/Object;
      67: arraylength
      68: invokevirtual #289                // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
      71: invokevirtual #291                // Method threshold_$eq:(I)V
      74: aload_0
      75: iload         4
      77: invokevirtual #293                // Method seedvalue_$eq:(I)V
      80: aload_0
      81: aload_0
      82: invokevirtual #212                // Method table:()[Ljava/lang/Object;
      85: arraylength
      86: invokevirtual #295                // Method sizeMapInit:(I)V
      89: return
}
