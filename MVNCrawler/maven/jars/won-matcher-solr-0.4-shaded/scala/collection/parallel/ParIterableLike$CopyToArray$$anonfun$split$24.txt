Compiled from "ParIterableLike.scala"
public final class scala.collection.parallel.ParIterableLike$CopyToArray$$anonfun$split$24 extends scala.runtime.AbstractFunction1<scala.Tuple2<scala.collection.parallel.IterableSplitter<T>, java.lang.Object>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.CopyToArray<U, This>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.parallel.ParIterableLike$CopyToArray $outer;

  public final scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.CopyToArray<U, This> apply(scala.Tuple2<scala.collection.parallel.IterableSplitter<T>, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        85
       4: getstatic     #27                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       7: getstatic     #32                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      10: aload_1
      11: invokevirtual #38                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      14: checkcast     #40                 // class scala/collection/parallel/IterableSplitter
      17: invokeinterface #44,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
      22: istore_3
      23: astore_2
      24: iload_3
      25: aload_0
      26: getfield      #46                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CopyToArray;
      29: getfield      #50                 // Field scala/collection/parallel/ParIterableLike$CopyToArray.scala$collection$parallel$ParIterableLike$CopyToArray$$len:I
      32: aload_1
      33: invokevirtual #53                 // Method scala/Tuple2._2$mcI$sp:()I
      36: isub
      37: invokevirtual #57                 // Method scala/runtime/RichInt$.min$extension:(II)I
      40: istore        4
      42: new           #10                 // class scala/collection/parallel/ParIterableLike$CopyToArray
      45: dup
      46: aload_0
      47: getfield      #46                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CopyToArray;
      50: invokevirtual #61                 // Method scala/collection/parallel/ParIterableLike$CopyToArray.scala$collection$parallel$ParIterableLike$CopyToArray$$$outer:()Lscala/collection/parallel/ParIterableLike;
      53: aload_0
      54: getfield      #46                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CopyToArray;
      57: getfield      #64                 // Field scala/collection/parallel/ParIterableLike$CopyToArray.scala$collection$parallel$ParIterableLike$CopyToArray$$from:I
      60: aload_1
      61: invokevirtual #53                 // Method scala/Tuple2._2$mcI$sp:()I
      64: iadd
      65: iload         4
      67: aload_0
      68: getfield      #46                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CopyToArray;
      71: getfield      #68                 // Field scala/collection/parallel/ParIterableLike$CopyToArray.scala$collection$parallel$ParIterableLike$CopyToArray$$array:Ljava/lang/Object;
      74: aload_1
      75: invokevirtual #38                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      78: checkcast     #40                 // class scala/collection/parallel/IterableSplitter
      81: invokespecial #72                 // Method scala/collection/parallel/ParIterableLike$CopyToArray."<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter;)V
      84: areturn
      85: new           #74                 // class scala/MatchError
      88: dup
      89: aload_1
      90: invokespecial #77                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class scala/Tuple2
       5: invokevirtual #85                 // Method apply:(Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$CopyToArray;
       8: areturn

  public scala.collection.parallel.ParIterableLike$CopyToArray$$anonfun$split$24(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.CopyToArray<U, This>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #46                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CopyToArray;
      11: aload_0
      12: invokespecial #90                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
