Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$Updated<U, That> implements scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Transformer<scala.collection.parallel.Combiner<U, That>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Updated<U, That>> {
  public final int scala$collection$parallel$ParSeqLike$Updated$$pos;

  public final U scala$collection$parallel$ParSeqLike$Updated$$elem;

  public final scala.collection.parallel.CombinerFactory<U, That> scala$collection$parallel$ParSeqLike$Updated$$pbf;

  private final scala.collection.parallel.SeqSplitter<T> pit;

  private volatile scala.collection.parallel.Combiner<U, That> result;

  public final scala.collection.parallel.ParSeqLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #51                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.SeqSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #87                 // Field pit:Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.Combiner<U, That> result();
    Code:
       0: aload_0
       1: getfield      #90                 // Field result:Lscala/collection/parallel/Combiner;
       4: areturn

  public void result_$eq(scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field result:Lscala/collection/parallel/Combiner;
       5: return

  public void leaf(scala.Option<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       5: aload_0
       6: getfield      #97                 // Field scala$collection$parallel$ParSeqLike$Updated$$pos:I
       9: aload_0
      10: getfield      #99                 // Field scala$collection$parallel$ParSeqLike$Updated$$elem:Ljava/lang/Object;
      13: aload_0
      14: getfield      #101                // Field scala$collection$parallel$ParSeqLike$Updated$$pbf:Lscala/collection/parallel/CombinerFactory;
      17: invokeinterface #106,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
      22: invokeinterface #112,  4          // InterfaceMethod scala/collection/parallel/SeqSplitter.updated2combiner:(ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      27: invokevirtual #114                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      30: return

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: getstatic     #123                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
       3: invokevirtual #127                // Method scala/collection/parallel/package$.unsupported:()Lscala/runtime/Nothing$;
       6: areturn

  public scala.collection.Seq<scala.collection.parallel.Task<scala.collection.parallel.Combiner<U, That>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Updated<U, That>>> split();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: invokeinterface #134,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.splitWithSignalling:()Lscala/collection/Seq;
       9: astore_1
      10: aload_1
      11: aload_1
      12: iconst_0
      13: invokestatic  #140                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      16: new           #142                // class scala/collection/parallel/ParSeqLike$Updated$$anonfun$split$12
      19: dup
      20: aload_0
      21: invokespecial #146                // Method scala/collection/parallel/ParSeqLike$Updated$$anonfun$split$12."<init>":(Lscala/collection/parallel/ParSeqLike$Updated;)V
      24: getstatic     #151                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      27: invokevirtual #155                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      30: invokeinterface #161,  4          // InterfaceMethod scala/collection/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #163                // class scala/collection/GenIterable
      38: getstatic     #151                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      41: invokevirtual #155                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      44: invokeinterface #167,  3          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      49: checkcast     #169                // class scala/collection/TraversableLike
      52: new           #171                // class scala/collection/parallel/ParSeqLike$Updated$$anonfun$split$13
      55: dup
      56: aload_0
      57: invokespecial #172                // Method scala/collection/parallel/ParSeqLike$Updated$$anonfun$split$13."<init>":(Lscala/collection/parallel/ParSeqLike$Updated;)V
      60: invokeinterface #176,  2          // InterfaceMethod scala/collection/TraversableLike.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      65: new           #178                // class scala/collection/parallel/ParSeqLike$Updated$$anonfun$split$14
      68: dup
      69: aload_0
      70: invokespecial #179                // Method scala/collection/parallel/ParSeqLike$Updated$$anonfun$split$14."<init>":(Lscala/collection/parallel/ParSeqLike$Updated;)V
      73: getstatic     #151                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      76: invokevirtual #155                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      79: invokeinterface #185,  3          // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      84: checkcast     #157                // class scala/collection/Seq
      87: areturn

  public void merge(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Updated<U, That>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #190                // Method result:()Lscala/collection/parallel/Combiner;
       5: aload_1
       6: invokevirtual #190                // Method result:()Lscala/collection/parallel/Combiner;
       9: invokeinterface #196,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      14: invokevirtual #114                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      17: return

  public boolean requiresStrictSplitters();
    Code:
       0: iconst_1
       1: ireturn

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$Updated$$$outer();
    Code:
       0: aload_0
       1: getfield      #201                // Field $outer:Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #205                // Method scala$collection$parallel$ParSeqLike$Updated$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #205                // Method scala$collection$parallel$ParSeqLike$Updated$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$Updated
       5: invokevirtual #208                // Method merge:(Lscala/collection/parallel/ParSeqLike$Updated;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #211                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
       5: athrow

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #192                // class scala/collection/parallel/Combiner
       5: invokevirtual #114                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #190                // Method result:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.parallel.IterableSplitter pit();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.ParSeqLike$Updated(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>, int, U, scala.collection.parallel.CombinerFactory<U, That>, scala.collection.parallel.SeqSplitter<T>);
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #97                 // Field scala$collection$parallel$ParSeqLike$Updated$$pos:I
       5: aload_0
       6: aload_3
       7: putfield      #99                 // Field scala$collection$parallel$ParSeqLike$Updated$$elem:Ljava/lang/Object;
      10: aload_0
      11: aload         4
      13: putfield      #101                // Field scala$collection$parallel$ParSeqLike$Updated$$pbf:Lscala/collection/parallel/CombinerFactory;
      16: aload_0
      17: aload         5
      19: putfield      #87                 // Field pit:Lscala/collection/parallel/SeqSplitter;
      22: aload_1
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #201                // Field $outer:Lscala/collection/parallel/ParSeqLike;
      33: aload_0
      34: invokespecial #215                // Method java/lang/Object."<init>":()V
      37: aload_0
      38: invokestatic  #218                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      41: aload_0
      42: invokestatic  #223                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      45: aload_0
      46: invokestatic  #225                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      49: aload_0
      50: aconst_null
      51: putfield      #90                 // Field result:Lscala/collection/parallel/Combiner;
      54: return
}
