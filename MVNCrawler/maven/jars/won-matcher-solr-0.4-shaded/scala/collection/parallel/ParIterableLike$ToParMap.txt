Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$ToParMap<K, V, That> implements scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Transformer<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ToParMap<K, V, That>> {
  private final scala.collection.parallel.CombinerFactory<scala.Tuple2<K, V>, That> cbf;

  private final scala.collection.parallel.IterableSplitter<T> pit;

  private final scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>> ev;

  private volatile scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That> result;

  public final scala.collection.parallel.ParIterableLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public scala.collection.Seq<scala.collection.parallel.Task<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ToParMap<K, V, That>>> split();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.split:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/Seq;
       4: areturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public boolean requiresStrictSplitters();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.requiresStrictSplitters:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
       4: ireturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #60                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #70                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.IterableSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #97                 // Field pit:Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That> result();
    Code:
       0: aload_0
       1: getfield      #100                // Field result:Lscala/collection/parallel/Combiner;
       4: areturn

  public void result_$eq(scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field result:Lscala/collection/parallel/Combiner;
       5: return

  public void leaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #105                // Field cbf:Lscala/collection/parallel/CombinerFactory;
       5: invokeinterface #110,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
      10: invokevirtual #112                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      13: aload_0
      14: invokevirtual #114                // Method pit:()Lscala/collection/parallel/IterableSplitter;
      17: invokeinterface #119,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.hasNext:()Z
      22: ifeq          54
      25: aload_0
      26: invokevirtual #121                // Method result:()Lscala/collection/parallel/Combiner;
      29: aload_0
      30: getfield      #123                // Field ev:Lscala/Predef$$less$colon$less;
      33: aload_0
      34: invokevirtual #114                // Method pit:()Lscala/collection/parallel/IterableSplitter;
      37: invokeinterface #126,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.next:()Ljava/lang/Object;
      42: invokevirtual #131                // Method scala/Predef$$less$colon$less.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      45: invokeinterface #137,  2          // InterfaceMethod scala/collection/parallel/Combiner.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      50: pop
      51: goto          13
      54: return

  public scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ToParMap<K, V, That> newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: new           #2                  // class scala/collection/parallel/ParIterableLike$ToParMap
       3: dup
       4: aload_0
       5: invokevirtual #144                // Method scala$collection$parallel$ParIterableLike$ToParMap$$$outer:()Lscala/collection/parallel/ParIterableLike;
       8: aload_0
       9: getfield      #105                // Field cbf:Lscala/collection/parallel/CombinerFactory;
      12: aload_1
      13: aload_0
      14: getfield      #123                // Field ev:Lscala/Predef$$less$colon$less;
      17: invokespecial #148                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/Predef$$less$colon$less;)V
      20: areturn

  public void merge(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ToParMap<K, V, That>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #121                // Method result:()Lscala/collection/parallel/Combiner;
       5: aload_1
       6: invokevirtual #121                // Method result:()Lscala/collection/parallel/Combiner;
       9: invokeinterface #155,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      14: invokevirtual #112                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      17: return

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$ToParMap$$$outer();
    Code:
       0: aload_0
       1: getfield      #157                // Field $outer:Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method scala$collection$parallel$ParIterableLike$ToParMap$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method scala$collection$parallel$ParIterableLike$ToParMap$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$ToParMap
       5: invokevirtual #161                // Method merge:(Lscala/collection/parallel/ParIterableLike$ToParMap;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #164                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$ToParMap;
       5: areturn

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #133                // class scala/collection/parallel/Combiner
       5: invokevirtual #112                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #121                // Method result:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.parallel.ParIterableLike$ToParMap(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>, scala.collection.parallel.CombinerFactory<scala.Tuple2<K, V>, That>, scala.collection.parallel.IterableSplitter<T>, scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #105                // Field cbf:Lscala/collection/parallel/CombinerFactory;
       5: aload_0
       6: aload_3
       7: putfield      #97                 // Field pit:Lscala/collection/parallel/IterableSplitter;
      10: aload_0
      11: aload         4
      13: putfield      #123                // Field ev:Lscala/Predef$$less$colon$less;
      16: aload_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #157                // Field $outer:Lscala/collection/parallel/ParIterableLike;
      27: aload_0
      28: invokespecial #166                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #169                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      35: aload_0
      36: invokestatic  #172                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      39: aload_0
      40: invokestatic  #174                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      43: aload_0
      44: aconst_null
      45: putfield      #100                // Field result:Lscala/collection/parallel/Combiner;
      48: return
}
