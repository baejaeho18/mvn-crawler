Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$SameElements<U> implements scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Accessor<java.lang.Object, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SameElements<U>> {
  private final scala.collection.parallel.SeqSplitter<T> pit;

  private final scala.collection.parallel.SeqSplitter<U> otherpit;

  private volatile boolean result;

  public final scala.collection.parallel.ParSeqLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #41                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #44                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.SeqSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #81                 // Field pit:Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.SeqSplitter<U> otherpit();
    Code:
       0: aload_0
       1: getfield      #83                 // Field otherpit:Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public boolean result();
    Code:
       0: aload_0
       1: getfield      #85                 // Field result:Z
       4: ireturn

  public void result_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #85                 // Field result:Z
       5: return

  public void leaf(scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: invokeinterface #95,  1           // InterfaceMethod scala/collection/parallel/SeqSplitter.isAborted:()Z
       9: ifne          45
      12: aload_0
      13: aload_0
      14: invokevirtual #90                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
      17: aload_0
      18: invokevirtual #97                 // Method otherpit:()Lscala/collection/parallel/SeqSplitter;
      21: invokeinterface #101,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.sameElements:(Lscala/collection/Iterator;)Z
      26: invokevirtual #103                // Method result_$eq:(Z)V
      29: aload_0
      30: invokevirtual #105                // Method result:()Z
      33: ifne          45
      36: aload_0
      37: invokevirtual #90                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
      40: invokeinterface #108,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.abort:()V
      45: return

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: getstatic     #117                // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
       3: invokevirtual #121                // Method scala/collection/parallel/package$.unsupported:()Lscala/runtime/Nothing$;
       6: areturn

  public scala.collection.Seq<scala.collection.parallel.Task<java.lang.Object, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SameElements<U>>> split();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: invokeinterface #129,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
       9: iconst_2
      10: idiv
      11: istore_1
      12: aload_0
      13: invokevirtual #90                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
      16: invokeinterface #129,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
      21: iload_1
      22: isub
      23: istore_2
      24: aload_0
      25: invokevirtual #90                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
      28: getstatic     #134                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      31: iconst_2
      32: newarray       int
      34: dup
      35: iconst_0
      36: iload_1
      37: iastore
      38: dup
      39: iconst_1
      40: iload_2
      41: iastore
      42: invokevirtual #138                // Method scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
      45: invokeinterface #142,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/Seq;)Lscala/collection/Seq;
      50: aload_0
      51: invokevirtual #97                 // Method otherpit:()Lscala/collection/parallel/SeqSplitter;
      54: getstatic     #134                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      57: iconst_2
      58: newarray       int
      60: dup
      61: iconst_0
      62: iload_1
      63: iastore
      64: dup
      65: iconst_1
      66: iload_2
      67: iastore
      68: invokevirtual #138                // Method scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
      71: invokeinterface #142,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/Seq;)Lscala/collection/Seq;
      76: getstatic     #147                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      79: invokevirtual #151                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      82: invokeinterface #157,  3          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      87: checkcast     #159                // class scala/collection/TraversableLike
      90: new           #161                // class scala/collection/parallel/ParSeqLike$SameElements$$anonfun$split$10
      93: dup
      94: aload_0
      95: invokespecial #165                // Method scala/collection/parallel/ParSeqLike$SameElements$$anonfun$split$10."<init>":(Lscala/collection/parallel/ParSeqLike$SameElements;)V
      98: invokeinterface #169,  2          // InterfaceMethod scala/collection/TraversableLike.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
     103: new           #171                // class scala/collection/parallel/ParSeqLike$SameElements$$anonfun$split$11
     106: dup
     107: aload_0
     108: invokespecial #172                // Method scala/collection/parallel/ParSeqLike$SameElements$$anonfun$split$11."<init>":(Lscala/collection/parallel/ParSeqLike$SameElements;)V
     111: getstatic     #147                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     114: invokevirtual #151                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     117: invokeinterface #178,  3          // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     122: checkcast     #153                // class scala/collection/Seq
     125: areturn

  public void merge(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.SameElements<U>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #105                // Method result:()Z
       5: ifeq          19
       8: aload_1
       9: invokevirtual #105                // Method result:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokevirtual #103                // Method result_$eq:(Z)V
      23: return

  public boolean requiresStrictSplitters();
    Code:
       0: iconst_1
       1: ireturn

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$SameElements$$$outer();
    Code:
       0: aload_0
       1: getfield      #187                // Field $outer:Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #191                // Method scala$collection$parallel$ParSeqLike$SameElements$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #191                // Method scala$collection$parallel$ParSeqLike$SameElements$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$SameElements
       5: invokevirtual #194                // Method merge:(Lscala/collection/parallel/ParSeqLike$SameElements;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #197                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
       5: athrow

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #203                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokevirtual #103                // Method result_$eq:(Z)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method result:()Z
       4: invokestatic  #207                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public scala.collection.parallel.IterableSplitter pit();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.ParSeqLike$SameElements(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>, scala.collection.parallel.SeqSplitter<T>, scala.collection.parallel.SeqSplitter<U>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #81                 // Field pit:Lscala/collection/parallel/SeqSplitter;
       5: aload_0
       6: aload_3
       7: putfield      #83                 // Field otherpit:Lscala/collection/parallel/SeqSplitter;
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #187                // Field $outer:Lscala/collection/parallel/ParSeqLike;
      21: aload_0
      22: invokespecial #211                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #214                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      29: aload_0
      30: invokestatic  #219                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      33: aload_0
      34: invokestatic  #221                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      37: aload_0
      38: iconst_1
      39: putfield      #85                 // Field result:Z
      42: return
}
