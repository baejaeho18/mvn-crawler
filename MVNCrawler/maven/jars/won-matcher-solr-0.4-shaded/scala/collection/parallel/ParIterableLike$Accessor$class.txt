Compiled from "ParIterableLike.scala"
public abstract class scala.collection.parallel.ParIterableLike$Accessor$class {
  public static boolean shouldSplitFurther(scala.collection.parallel.ParIterableLike$Accessor);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.pit:()Lscala/collection/parallel/IterableSplitter;
       6: aload_0
       7: invokeinterface #17,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.scala$collection$parallel$ParIterableLike$Accessor$$$outer:()Lscala/collection/parallel/ParIterableLike;
      12: invokeinterface #23,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike.repr:()Lscala/collection/parallel/ParIterable;
      17: aload_0
      18: invokeinterface #17,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.scala$collection$parallel$ParIterableLike$Accessor$$$outer:()Lscala/collection/parallel/ParIterableLike;
      23: invokeinterface #27,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike.tasksupport:()Lscala/collection/parallel/TaskSupport;
      28: invokeinterface #33,  1           // InterfaceMethod scala/collection/parallel/TaskSupport.parallelismLevel:()I
      33: invokeinterface #38,  3           // InterfaceMethod scala/collection/parallel/IterableSplitter.shouldSplitFurther:(Lscala/collection/parallel/ParIterable;I)Z
      38: ireturn

  public static scala.collection.Seq split(scala.collection.parallel.ParIterableLike$Accessor);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.pit:()Lscala/collection/parallel/IterableSplitter;
       6: invokeinterface #46,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/Seq;
      11: new           #48                 // class scala/collection/parallel/ParIterableLike$Accessor$$anonfun$split$1
      14: dup
      15: aload_0
      16: invokespecial #52                 // Method scala/collection/parallel/ParIterableLike$Accessor$$anonfun$split$1."<init>":(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      19: getstatic     #58                 // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      22: invokevirtual #62                 // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokeinterface #68,  3           // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #64                 // class scala/collection/Seq
      33: areturn

  public static void signalAbort(scala.collection.parallel.ParIterableLike$Accessor);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.pit:()Lscala/collection/parallel/IterableSplitter;
       6: invokeinterface #73,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.abort:()V
      11: return

  public static java.lang.String toString(scala.collection.parallel.ParIterableLike$Accessor);
    Code:
       0: new           #77                 // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #79                 // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #89                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      17: ldc           #95                 // String (
      19: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      22: aload_0
      23: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.pit:()Lscala/collection/parallel/IterableSplitter;
      28: invokeinterface #97,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.toString:()Ljava/lang/String;
      33: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      36: ldc           #99                 // String )(
      38: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      41: aload_0
      42: invokeinterface #103,  1          // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.result:()Ljava/lang/Object;
      47: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      50: ldc           #105                // String )(supername:
      52: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      55: aload_0
      56: invokeinterface #108,  1          // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.scala$collection$parallel$ParIterableLike$Accessor$$super$toString:()Ljava/lang/String;
      61: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      64: ldc           #110                // String )
      66: invokevirtual #93                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      69: invokevirtual #111                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      72: areturn

  public static void $init$(scala.collection.parallel.ParIterableLike$Accessor);
    Code:
       0: return
}
