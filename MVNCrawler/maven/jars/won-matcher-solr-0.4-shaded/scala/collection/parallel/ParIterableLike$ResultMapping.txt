Compiled from "ParIterableLike.scala"
public abstract class scala.collection.parallel.ParIterableLike$ResultMapping<R, Tp, R1> implements scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.NonDivisibleTask<R1, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ResultMapping<R, Tp, R1>> {
  private final scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R, Tp> inner;

  private volatile R1 result;

  public final scala.collection.parallel.ParIterableLike $outer;

  private volatile java.lang.Throwable throwable;

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method scala/collection/parallel/ParIterableLike$NonDivisibleTask$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$NonDivisibleTask;)Z
       4: ireturn

  public scala.runtime.Nothing$ split();
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method scala/collection/parallel/ParIterableLike$NonDivisibleTask$class.split:(Lscala/collection/parallel/ParIterableLike$NonDivisibleTask;)Lscala/runtime/Nothing$;
       4: areturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #35                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method scala/collection/parallel/Task$class.merge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<R1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R, Tp> inner();
    Code:
       0: aload_0
       1: getfield      #75                 // Field inner:Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;
       4: areturn

  public R1 result();
    Code:
       0: aload_0
       1: getfield      #77                 // Field result:Ljava/lang/Object;
       4: areturn

  public void result_$eq(R1);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field result:Ljava/lang/Object;
       5: return

  public abstract R1 map(R);

  public void leaf(scala.Option<R1>);
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method scala$collection$parallel$ParIterableLike$ResultMapping$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: invokeinterface #91,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike.tasksupport:()Lscala/collection/parallel/TaskSupport;
       9: aload_0
      10: invokevirtual #93                 // Method inner:()Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;
      13: invokeinterface #98,  2           // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
      18: astore_2
      19: aload_0
      20: aload_0
      21: aload_2
      22: invokevirtual #100                // Method map:(Ljava/lang/Object;)Ljava/lang/Object;
      25: invokevirtual #102                // Method result_$eq:(Ljava/lang/Object;)V
      28: return

  public void signalAbort();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method inner:()Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;
       4: invokeinterface #109,  1          // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.signalAbort:()V
       9: return

  public boolean requiresStrictSplitters();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method inner:()Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;
       4: invokeinterface #112,  1          // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.requiresStrictSplitters:()Z
       9: ireturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$ResultMapping$$$outer();
    Code:
       0: aload_0
       1: getfield      #114                // Field $outer:Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$NonDivisibleTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method scala$collection$parallel$ParIterableLike$ResultMapping$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method scala$collection$parallel$ParIterableLike$ResultMapping$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.Seq split();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method split:()Lscala/runtime/Nothing$;
       4: athrow

  public scala.collection.parallel.ParIterableLike$ResultMapping(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R, Tp>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #75                 // Field inner:Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #114                // Field $outer:Lscala/collection/parallel/ParIterableLike;
      16: aload_0
      17: invokespecial #123                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #126                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      24: aload_0
      25: invokestatic  #131                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      28: aload_0
      29: invokestatic  #134                // Method scala/collection/parallel/ParIterableLike$NonDivisibleTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$NonDivisibleTask;)V
      32: aload_0
      33: aconst_null
      34: putfield      #77                 // Field result:Ljava/lang/Object;
      37: return
}
