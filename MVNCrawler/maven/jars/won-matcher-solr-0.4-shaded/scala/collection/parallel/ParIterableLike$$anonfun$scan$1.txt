Compiled from "ParIterableLike.scala"
public final class scala.collection.parallel.ParIterableLike$$anonfun$scan$1 extends scala.runtime.AbstractFunction1<scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ScanTree<U>, That> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.collection.parallel.ParIterableLike $outer;

  private final java.lang.Object z$1;

  private final scala.Function2 op$1;

  public final scala.collection.generic.CanBuildFrom bf$6;

  public final That apply(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ScanTree<U>);
    Code:
       0: aload_0
       1: getfield      #29                 // Field $outer:Lscala/collection/parallel/ParIterableLike;
       4: invokeinterface #33,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike.tasksupport:()Lscala/collection/parallel/TaskSupport;
       9: aload_0
      10: getfield      #29                 // Field $outer:Lscala/collection/parallel/ParIterableLike;
      13: new           #35                 // class scala/collection/parallel/ParIterableLike$FromScanTree
      16: dup
      17: aload_0
      18: getfield      #29                 // Field $outer:Lscala/collection/parallel/ParIterableLike;
      21: aload_1
      22: aload_0
      23: getfield      #37                 // Field z$1:Ljava/lang/Object;
      26: aload_0
      27: getfield      #39                 // Field op$1:Lscala/Function2;
      30: aload_0
      31: getfield      #29                 // Field $outer:Lscala/collection/parallel/ParIterableLike;
      34: new           #41                 // class scala/collection/parallel/ParIterableLike$$anonfun$scan$1$$anonfun$apply$3
      37: dup
      38: aload_0
      39: invokespecial #45                 // Method scala/collection/parallel/ParIterableLike$$anonfun$scan$1$$anonfun$apply$3."<init>":(Lscala/collection/parallel/ParIterableLike$$anonfun$scan$1;)V
      42: invokeinterface #49,  2           // InterfaceMethod scala/collection/parallel/ParIterableLike.combinerFactory:(Lscala/Function0;)Lscala/collection/parallel/CombinerFactory;
      47: invokespecial #52                 // Method scala/collection/parallel/ParIterableLike$FromScanTree."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/CombinerFactory;)V
      50: invokeinterface #56,  2           // InterfaceMethod scala/collection/parallel/ParIterableLike.task2ops:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
      55: new           #58                 // class scala/collection/parallel/ParIterableLike$$anonfun$scan$1$$anonfun$apply$4
      58: dup
      59: aload_0
      60: invokespecial #59                 // Method scala/collection/parallel/ParIterableLike$$anonfun$scan$1$$anonfun$apply$4."<init>":(Lscala/collection/parallel/ParIterableLike$$anonfun$scan$1;)V
      63: invokeinterface #65,  2           // InterfaceMethod scala/collection/parallel/ParIterableLike$TaskOps.mapResult:(Lscala/Function1;)Lscala/collection/parallel/ParIterableLike$ResultMapping;
      68: invokeinterface #71,  2           // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
      73: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #29                 // Field $outer:Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class scala/collection/parallel/ParIterableLike$ScanTree
       5: invokevirtual #82                 // Method apply:(Lscala/collection/parallel/ParIterableLike$ScanTree;)Ljava/lang/Object;
       8: areturn

  public scala.collection.parallel.ParIterableLike$$anonfun$scan$1(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #29                 // Field $outer:Lscala/collection/parallel/ParIterableLike;
      11: aload_0
      12: aload_2
      13: putfield      #37                 // Field z$1:Ljava/lang/Object;
      16: aload_0
      17: aload_3
      18: putfield      #39                 // Field op$1:Lscala/Function2;
      21: aload_0
      22: aload         4
      24: putfield      #86                 // Field bf$6:Lscala/collection/generic/CanBuildFrom;
      27: aload_0
      28: invokespecial #89                 // Method scala/runtime/AbstractFunction1."<init>":()V
      31: return
}
