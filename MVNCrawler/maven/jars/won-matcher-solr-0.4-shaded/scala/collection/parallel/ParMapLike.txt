Compiled from "ParMapLike.scala"
public interface scala.collection.parallel.ParMapLike<K, V, Repr extends scala.collection.parallel.ParMapLike<K, V, Repr, Sequential> & scala.collection.parallel.ParMap<K, V>, Sequential extends scala.collection.Map<K, V> & scala.collection.MapLike<K, V, Sequential>> extends scala.collection.GenMapLike<K, V, Repr>, scala.collection.parallel.ParIterableLike<scala.Tuple2<K, V>, Repr, Sequential> {
  public abstract V default(K);

  public abstract Repr empty();

  public abstract V apply(K);

  public abstract <U> U getOrElse(K, scala.Function0<U>);

  public abstract boolean contains(K);

  public abstract boolean isDefinedAt(K);

  public abstract scala.collection.parallel.IterableSplitter<K> keysIterator();

  public abstract scala.collection.parallel.IterableSplitter<V> valuesIterator();

  public abstract scala.collection.parallel.ParSet<K> keySet();

  public abstract scala.collection.parallel.ParIterable<K> keys();

  public abstract scala.collection.parallel.ParIterable<V> values();

  public abstract scala.collection.parallel.ParMap<K, V> filterKeys(scala.Function1<K, java.lang.Object>);

  public abstract <S> scala.collection.parallel.ParMap<K, S> mapValues(scala.Function1<V, S>);
}
