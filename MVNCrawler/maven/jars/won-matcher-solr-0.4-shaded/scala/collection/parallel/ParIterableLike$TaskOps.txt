Compiled from "ParIterableLike.scala"
public interface scala.collection.parallel.ParIterableLike$TaskOps<R, Tp> {
  public abstract <R1> scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ResultMapping<R, Tp, R1> mapResult(scala.Function1<R, R1>);

  public abstract <R3, R2, Tp2> scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.SeqComposite<R, R2, R3, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R, Tp>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R2, Tp2>> compose(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R2, Tp2>, scala.Function2<R, R2, R3>);

  public abstract <R3, R2, Tp2> scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.ParComposite<R, R2, R3, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R, Tp>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R2, Tp2>> parallel(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.StrictSplitterCheckTask<R2, Tp2>, scala.Function2<R, R2, R3>);
}
