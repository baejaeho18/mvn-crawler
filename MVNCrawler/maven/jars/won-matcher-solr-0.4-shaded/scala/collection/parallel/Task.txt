Compiled from "Tasks.scala"
public interface scala.collection.parallel.Task<R, Tp> {
  public abstract Tp repr();

  public abstract void leaf(scala.Option<R>);

  public abstract R result();

  public abstract void result_$eq(R);

  public abstract boolean shouldSplitFurther();

  public abstract scala.collection.Seq<scala.collection.parallel.Task<R, Tp>> split();

  public abstract void merge(Tp);

  public abstract java.lang.Throwable throwable();

  public abstract void throwable_$eq(java.lang.Throwable);

  public abstract void forwardThrowable();

  public abstract void tryLeaf(scala.Option<R>);

  public abstract void tryMerge(Tp);

  public abstract void mergeThrowables(scala.collection.parallel.Task<?, ?>);

  public abstract void signalAbort();
}
