Compiled from "RemainsIterator.scala"
public abstract class scala.collection.parallel.SeqSplitter$class {
  public static scala.collection.Seq splitWithSignalling(scala.collection.parallel.SeqSplitter);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/SeqSplitter.split:()Lscala/collection/Seq;
       6: astore_1
       7: aload_1
       8: new           #15                 // class scala/collection/parallel/SeqSplitter$$anonfun$splitWithSignalling$2
      11: dup
      12: aload_0
      13: invokespecial #19                 // Method scala/collection/parallel/SeqSplitter$$anonfun$splitWithSignalling$2."<init>":(Lscala/collection/parallel/SeqSplitter;)V
      16: invokeinterface #25,  2           // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
      21: aload_1
      22: areturn

  public static scala.collection.Seq psplitWithSignalling(scala.collection.parallel.SeqSplitter, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #35,  2           // InterfaceMethod scala/collection/parallel/SeqSplitter.psplit:(Lscala/collection/Seq;)Lscala/collection/Seq;
       7: astore_2
       8: aload_2
       9: new           #37                 // class scala/collection/parallel/SeqSplitter$$anonfun$psplitWithSignalling$1
      12: dup
      13: aload_0
      14: invokespecial #38                 // Method scala/collection/parallel/SeqSplitter$$anonfun$psplitWithSignalling$1."<init>":(Lscala/collection/parallel/SeqSplitter;)V
      17: invokeinterface #25,  2           // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
      22: aload_2
      23: areturn

  public static scala.collection.parallel.SeqSplitter$Taken newTaken(scala.collection.parallel.SeqSplitter, int);
    Code:
       0: new           #43                 // class scala/collection/parallel/SeqSplitter$Taken
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #46                 // Method scala/collection/parallel/SeqSplitter$Taken."<init>":(Lscala/collection/parallel/SeqSplitter;I)V
       9: areturn

  public static scala.collection.parallel.SeqSplitter take(scala.collection.parallel.SeqSplitter, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokeinterface #53,  2           // InterfaceMethod scala/collection/parallel/SeqSplitter.newTaken:(I)Lscala/collection/parallel/SeqSplitter$Taken;
       7: areturn

  public static scala.collection.parallel.SeqSplitter slice(scala.collection.parallel.SeqSplitter, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_2
       3: invokeinterface #53,  2           // InterfaceMethod scala/collection/parallel/SeqSplitter.newTaken:(I)Lscala/collection/parallel/SeqSplitter$Taken;
       8: iload_1
       9: invokeinterface #60,  3           // InterfaceMethod scala/collection/parallel/SeqSplitter.newSliceInternal:(Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
      14: checkcast     #9                  // class scala/collection/parallel/SeqSplitter
      17: areturn

  public static scala.collection.parallel.SeqSplitter$Mapped map(scala.collection.parallel.SeqSplitter, scala.Function1);
    Code:
       0: new           #66                 // class scala/collection/parallel/SeqSplitter$Mapped
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #69                 // Method scala/collection/parallel/SeqSplitter$Mapped."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)V
       9: areturn

  public static scala.collection.parallel.SeqSplitter$Appended appendParSeq(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    Code:
       0: new           #75                 // class scala/collection/parallel/SeqSplitter$Appended
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #78                 // Method scala/collection/parallel/SeqSplitter$Appended."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
       9: areturn

  public static scala.collection.parallel.SeqSplitter$Zipped zipParSeq(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    Code:
       0: new           #83                 // class scala/collection/parallel/SeqSplitter$Zipped
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #84                 // Method scala/collection/parallel/SeqSplitter$Zipped."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
       9: areturn

  public static scala.collection.parallel.SeqSplitter$ZippedAll zipAllParSeq(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter, java.lang.Object, java.lang.Object);
    Code:
       0: new           #88                 // class scala/collection/parallel/SeqSplitter$ZippedAll
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #91                 // Method scala/collection/parallel/SeqSplitter$ZippedAll."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)V
      11: areturn

  public static scala.collection.parallel.SeqSplitter reverse(scala.collection.parallel.SeqSplitter);
    Code:
       0: getstatic     #102                // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       3: getstatic     #107                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: anewarray     #109                // class scala/collection/GenTraversableOnce
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokevirtual #113                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      17: invokevirtual #117                // Method scala/collection/parallel/mutable/ParArray$.fromTraversables:(Lscala/collection/Seq;)Lscala/collection/parallel/mutable/ParArray;
      20: invokevirtual #122                // Method scala/collection/parallel/mutable/ParArray.reverse:()Lscala/collection/parallel/ParSeq;
      23: checkcast     #119                // class scala/collection/parallel/mutable/ParArray
      26: astore_1
      27: new           #124                // class scala/collection/parallel/SeqSplitter$$anon$1
      30: dup
      31: aload_0
      32: aload_1
      33: invokespecial #127                // Method scala/collection/parallel/SeqSplitter$$anon$1."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/mutable/ParArray;)V
      36: areturn

  public static scala.collection.parallel.SeqSplitter$Patched patchParSeq(scala.collection.parallel.SeqSplitter, int, scala.collection.parallel.SeqSplitter, int);
    Code:
       0: new           #133                // class scala/collection/parallel/SeqSplitter$Patched
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: iload_3
       8: invokespecial #136                // Method scala/collection/parallel/SeqSplitter$Patched."<init>":(Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)V
      11: areturn

  public static void $init$(scala.collection.parallel.SeqSplitter);
    Code:
       0: return
}
