Compiled from "RemainsIterator.scala"
public abstract class scala.collection.parallel.IterableSplitter$class {
  public static scala.collection.Seq splitWithSignalling(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.split:()Lscala/collection/Seq;
       6: astore_1
       7: aload_1
       8: new           #15                 // class scala/collection/parallel/IterableSplitter$$anonfun$splitWithSignalling$1
      11: dup
      12: aload_0
      13: invokespecial #19                 // Method scala/collection/parallel/IterableSplitter$$anonfun$splitWithSignalling$1."<init>":(Lscala/collection/parallel/IterableSplitter;)V
      16: invokeinterface #25,  2           // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
      21: aload_1
      22: areturn

  public static boolean shouldSplitFurther(scala.collection.parallel.IterableSplitter, scala.collection.parallel.ParIterable, int);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
       6: getstatic     #41                 // Field scala/collection/parallel/package$.MODULE$:Lscala/collection/parallel/package$;
       9: aload_1
      10: invokeinterface #46,  1           // InterfaceMethod scala/collection/parallel/ParIterable.size:()I
      15: iload_2
      16: invokevirtual #50                 // Method scala/collection/parallel/package$.thresholdFromSize:(II)I
      19: if_icmple     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public static java.lang.String buildString(scala.collection.parallel.IterableSplitter, scala.Function1);
    Code:
       0: ldc           #58                 // String
       2: invokestatic  #64                 // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       5: astore_2
       6: aload_1
       7: new           #66                 // class scala/collection/parallel/IterableSplitter$$anonfun$buildString$1
      10: dup
      11: aload_0
      12: aload_2
      13: invokespecial #69                 // Method scala/collection/parallel/IterableSplitter$$anonfun$buildString$1."<init>":(Lscala/collection/parallel/IterableSplitter;Lscala/runtime/ObjectRef;)V
      16: invokeinterface #75,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_2
      23: getfield      #79                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      26: checkcast     #81                 // class java/lang/String
      29: areturn

  public static java.lang.String debugInformation(scala.collection.parallel.IterableSplitter);
    Code:
       0: new           #89                 // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #92                 // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: ldc           #94                 // String Parallel iterator:
       9: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      12: aload_0
      13: invokevirtual #102                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      19: invokevirtual #106                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public static scala.collection.parallel.IterableSplitter$Taken newTaken(scala.collection.parallel.IterableSplitter, int);
    Code:
       0: new           #110                // class scala/collection/parallel/IterableSplitter$Taken
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #113                // Method scala/collection/parallel/IterableSplitter$Taken."<init>":(Lscala/collection/parallel/IterableSplitter;I)V
       9: areturn

  public static scala.collection.parallel.IterableSplitter$Taken newSliceInternal(scala.collection.parallel.IterableSplitter, scala.collection.parallel.IterableSplitter$Taken, int);
    Code:
       0: iload_2
       1: istore_3
       2: iload_3
       3: iconst_0
       4: if_icmple     26
       7: aload_1
       8: invokevirtual #120                // Method scala/collection/parallel/IterableSplitter$Taken.hasNext:()Z
      11: ifeq          26
      14: aload_1
      15: invokevirtual #124                // Method scala/collection/parallel/IterableSplitter$Taken.next:()Ljava/lang/Object;
      18: pop
      19: iload_3
      20: iconst_1
      21: isub
      22: istore_3
      23: goto          2
      26: aload_1
      27: areturn

  public static scala.collection.parallel.IterableSplitter take(scala.collection.parallel.IterableSplitter, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokeinterface #133,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.newTaken:(I)Lscala/collection/parallel/IterableSplitter$Taken;
       7: areturn

  public static scala.collection.parallel.IterableSplitter slice(scala.collection.parallel.IterableSplitter, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_2
       3: invokeinterface #133,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.newTaken:(I)Lscala/collection/parallel/IterableSplitter$Taken;
       8: iload_1
       9: invokeinterface #139,  3          // InterfaceMethod scala/collection/parallel/IterableSplitter.newSliceInternal:(Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
      14: areturn

  public static scala.collection.parallel.IterableSplitter$Mapped map(scala.collection.parallel.IterableSplitter, scala.Function1);
    Code:
       0: new           #144                // class scala/collection/parallel/IterableSplitter$Mapped
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #147                // Method scala/collection/parallel/IterableSplitter$Mapped."<init>":(Lscala/collection/parallel/IterableSplitter;Lscala/Function1;)V
       9: areturn

  public static scala.collection.parallel.IterableSplitter$Appended appendParIterable(scala.collection.parallel.IterableSplitter, scala.collection.parallel.IterableSplitter);
    Code:
       0: new           #152                // class scala/collection/parallel/IterableSplitter$Appended
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #155                // Method scala/collection/parallel/IterableSplitter$Appended."<init>":(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/IterableSplitter;)V
       9: areturn

  public static scala.collection.parallel.IterableSplitter$Zipped zipParSeq(scala.collection.parallel.IterableSplitter, scala.collection.parallel.SeqSplitter);
    Code:
       0: new           #160                // class scala/collection/parallel/IterableSplitter$Zipped
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #163                // Method scala/collection/parallel/IterableSplitter$Zipped."<init>":(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
       9: areturn

  public static scala.collection.parallel.IterableSplitter$ZippedAll zipAllParSeq(scala.collection.parallel.IterableSplitter, scala.collection.parallel.SeqSplitter, java.lang.Object, java.lang.Object);
    Code:
       0: new           #168                // class scala/collection/parallel/IterableSplitter$ZippedAll
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #171                // Method scala/collection/parallel/IterableSplitter$ZippedAll."<init>":(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)V
      11: areturn

  public static final void appendln$1(scala.collection.parallel.IterableSplitter, java.lang.String, scala.runtime.ObjectRef);
    Code:
       0: aload_2
       1: new           #89                 // class scala/collection/mutable/StringBuilder
       4: dup
       5: invokespecial #92                 // Method scala/collection/mutable/StringBuilder."<init>":()V
       8: aload_2
       9: getfield      #79                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      12: checkcast     #81                 // class java/lang/String
      15: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      18: new           #89                 // class scala/collection/mutable/StringBuilder
      21: dup
      22: invokespecial #92                 // Method scala/collection/mutable/StringBuilder."<init>":()V
      25: aload_1
      26: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      29: ldc           #177                // String \n
      31: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      34: invokevirtual #106                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #98                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      40: invokevirtual #106                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      43: putfield      #79                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      46: return

  public static void $init$(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: getstatic     #186                // Field scala/collection/generic/IdleSignalling$.MODULE$:Lscala/collection/generic/IdleSignalling$;
       4: invokeinterface #190,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.signalDelegate_$eq:(Lscala/collection/generic/Signalling;)V
       9: return
}
