Compiled from "Tasks.scala"
public abstract class scala.collection.parallel.ThreadPoolTasks$WrappedTask$class {
  public static void start(scala.collection.parallel.ThreadPoolTasks$WrappedTask);
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      10: invokeinterface #19,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks.executor:()Ljava/util/concurrent/ThreadPoolExecutor;
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      24: invokestatic  #25                 // Method scala/collection/parallel/ThreadPoolTasks$class.scala$collection$parallel$ThreadPoolTasks$$incrTasks:(Lscala/collection/parallel/ThreadPoolTasks;)V
      27: aload_0
      28: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      33: invokeinterface #19,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks.executor:()Ljava/util/concurrent/ThreadPoolExecutor;
      38: aload_0
      39: invokevirtual #31                 // Method java/util/concurrent/ThreadPoolExecutor.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      42: pop
      43: aload_2
      44: monitorexit
      45: aload_0
      46: monitorexit
      47: return
      48: aload_2
      49: monitorexit
      50: goto          56
      53: aload_1
      54: monitorexit
      55: athrow
      56: aload_1
      57: monitorexit
      58: athrow
    Exception table:
       from    to  target type
          18    45    48   any
          48    53    53   any
           4    47    53   any

  public static void sync(scala.collection.parallel.ThreadPoolTasks$WrappedTask);
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      10: invokeinterface #19,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks.executor:()Ljava/util/concurrent/ThreadPoolExecutor;
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      24: invokeinterface #19,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks.executor:()Ljava/util/concurrent/ThreadPoolExecutor;
      29: invokevirtual #40                 // Method java/util/concurrent/ThreadPoolExecutor.getCorePoolSize:()I
      32: istore_3
      33: iload_3
      34: aload_0
      35: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      40: invokeinterface #43,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks.totaltasks:()I
      45: if_icmpge     71
      48: aload_0
      49: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      54: invokeinterface #19,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks.executor:()Ljava/util/concurrent/ThreadPoolExecutor;
      59: iload_3
      60: iconst_1
      61: iadd
      62: invokevirtual #47                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
      65: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      68: goto          74
      71: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      74: pop
      75: aload_2
      76: monitorexit
      77: aload_0
      78: invokeinterface #57,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.completed:()Z
      83: ifeq          93
      86: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      89: pop
      90: aload_0
      91: monitorexit
      92: return
      93: aload_0
      94: invokevirtual #61                 // Method java/lang/Object.wait:()V
      97: goto          77
     100: aload_2
     101: monitorexit
     102: goto          108
     105: aload_1
     106: monitorexit
     107: athrow
     108: aload_1
     109: monitorexit
     110: athrow
    Exception table:
       from    to  target type
          18    77   100   any
          93   105   105   any
           4    92   105   any

  public static boolean tryCancel(scala.collection.parallel.ThreadPoolTasks$WrappedTask);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: invokeinterface #68,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.owned:()Z
      10: ifeq          20
      13: iconst_0
      14: invokestatic  #74                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      17: goto          31
      20: aload_0
      21: iconst_1
      22: invokeinterface #78,  2           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.owned_$eq:(Z)V
      27: iconst_1
      28: invokestatic  #74                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      31: astore_1
      32: aload_0
      33: monitorexit
      34: aload_1
      35: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      38: ireturn
      39: aload_2
      40: monitorexit
      41: athrow
    Exception table:
       from    to  target type
           4    34    39   any

  public static void run(scala.collection.parallel.ThreadPoolTasks$WrappedTask);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: dup
       4: astore_2
       5: monitorenter
       6: aload_0
       7: invokeinterface #68,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.owned:()Z
      12: ifeq          21
      15: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      18: goto          33
      21: aload_0
      22: iconst_1
      23: invokeinterface #78,  2           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.owned_$eq:(Z)V
      28: iconst_1
      29: istore_1
      30: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      33: pop
      34: aload_0
      35: monitorexit
      36: iload_1
      37: ifeq          46
      40: aload_0
      41: invokeinterface #88,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.compute:()V
      46: return
      47: aload_2
      48: monitorexit
      49: athrow
    Exception table:
       from    to  target type
           6    36    47   any

  public static void release(scala.collection.parallel.ThreadPoolTasks$WrappedTask);
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: invokeinterface #94,  2           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.completed_$eq:(Z)V
      11: aload_0
      12: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      17: invokeinterface #19,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks.executor:()Ljava/util/concurrent/ThreadPoolExecutor;
      22: dup
      23: astore_2
      24: monitorenter
      25: aload_0
      26: invokeinterface #13,  1           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.scala$collection$parallel$ThreadPoolTasks$WrappedTask$$$outer:()Lscala/collection/parallel/ThreadPoolTasks;
      31: invokestatic  #97                 // Method scala/collection/parallel/ThreadPoolTasks$class.scala$collection$parallel$ThreadPoolTasks$$decrTasks:(Lscala/collection/parallel/ThreadPoolTasks;)V
      34: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_2
      39: monitorexit
      40: aload_0
      41: invokevirtual #100                // Method java/lang/Object.notifyAll:()V
      44: getstatic     #53                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      47: pop
      48: aload_0
      49: monitorexit
      50: return
      51: aload_2
      52: monitorexit
      53: goto          59
      56: aload_1
      57: monitorexit
      58: athrow
      59: aload_1
      60: monitorexit
      61: athrow
    Exception table:
       from    to  target type
          25    40    51   any
          51    56    56   any
           4    50    56   any

  public static void $init$(scala.collection.parallel.ThreadPoolTasks$WrappedTask);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #78,  2           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.owned_$eq:(Z)V
       7: aload_0
       8: iconst_0
       9: invokeinterface #94,  2           // InterfaceMethod scala/collection/parallel/ThreadPoolTasks$WrappedTask.completed_$eq:(Z)V
      14: return
}
