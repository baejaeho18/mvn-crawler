Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$Reverse<U, This> implements scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Transformer<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Reverse<U, This>> {
  private final scala.Function0<scala.collection.parallel.Combiner<U, This>> cbf;

  private final scala.collection.parallel.SeqSplitter<T> pit;

  private volatile scala.collection.parallel.Combiner<U, This> result;

  public final scala.collection.parallel.ParSeqLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public scala.collection.Seq<scala.collection.parallel.Task<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Reverse<U, This>>> split();
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.split:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/Seq;
       4: areturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public boolean requiresStrictSplitters();
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.requiresStrictSplitters:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
       4: ireturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #57                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<U, This>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #89                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.SeqSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #94                 // Field pit:Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.Combiner<U, This> result();
    Code:
       0: aload_0
       1: getfield      #97                 // Field result:Lscala/collection/parallel/Combiner;
       4: areturn

  public void result_$eq(scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #97                 // Field result:Lscala/collection/parallel/Combiner;
       5: return

  public void leaf(scala.Option<scala.collection.parallel.Combiner<U, This>>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #102                // Method pit:()Lscala/collection/parallel/SeqSplitter;
       5: aload_0
       6: invokevirtual #106                // Method scala$collection$parallel$ParSeqLike$Reverse$$$outer:()Lscala/collection/parallel/ParSeqLike;
       9: aload_1
      10: aload_0
      11: getfield      #108                // Field cbf:Lscala/Function0;
      14: invokeinterface #113,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: checkcast     #115                // class scala/collection/parallel/Combiner
      22: invokeinterface #121,  3          // InterfaceMethod scala/collection/parallel/ParSeqLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      27: invokeinterface #127,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.reverse2combiner:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      32: invokevirtual #129                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      35: return

  public scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Reverse<U, This> newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: new           #2                  // class scala/collection/parallel/ParSeqLike$Reverse
       3: dup
       4: aload_0
       5: invokevirtual #106                // Method scala$collection$parallel$ParSeqLike$Reverse$$$outer:()Lscala/collection/parallel/ParSeqLike;
       8: aload_0
       9: getfield      #108                // Field cbf:Lscala/Function0;
      12: aload_0
      13: invokevirtual #106                // Method scala$collection$parallel$ParSeqLike$Reverse$$$outer:()Lscala/collection/parallel/ParSeqLike;
      16: aload_1
      17: invokeinterface #136,  2          // InterfaceMethod scala/collection/parallel/ParSeqLike.down:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
      22: invokespecial #140                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function0;Lscala/collection/parallel/SeqSplitter;)V
      25: areturn

  public void merge(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Reverse<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #146                // Method result:()Lscala/collection/parallel/Combiner;
       5: aload_0
       6: invokevirtual #146                // Method result:()Lscala/collection/parallel/Combiner;
       9: invokeinterface #149,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      14: invokevirtual #129                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      17: return

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$Reverse$$$outer();
    Code:
       0: aload_0
       1: getfield      #151                // Field $outer:Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method scala$collection$parallel$ParSeqLike$Reverse$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method scala$collection$parallel$ParSeqLike$Reverse$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$Reverse
       5: invokevirtual #156                // Method merge:(Lscala/collection/parallel/ParSeqLike$Reverse;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #159                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParSeqLike$Reverse;
       5: areturn

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class scala/collection/parallel/Combiner
       5: invokevirtual #129                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #146                // Method result:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.parallel.IterableSplitter pit();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.ParSeqLike$Reverse(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>, scala.Function0<scala.collection.parallel.Combiner<U, This>>, scala.collection.parallel.SeqSplitter<T>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #108                // Field cbf:Lscala/Function0;
       5: aload_0
       6: aload_3
       7: putfield      #94                 // Field pit:Lscala/collection/parallel/SeqSplitter;
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #151                // Field $outer:Lscala/collection/parallel/ParSeqLike;
      21: aload_0
      22: invokespecial #162                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #165                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      29: aload_0
      30: invokestatic  #168                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      33: aload_0
      34: invokestatic  #170                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      37: aload_0
      38: aconst_null
      39: putfield      #97                 // Field result:Lscala/collection/parallel/Combiner;
      42: return
}
