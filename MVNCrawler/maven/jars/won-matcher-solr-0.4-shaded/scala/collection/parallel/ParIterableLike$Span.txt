Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$Span<U, This> implements scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Transformer<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Span<U, This>> {
  public final int scala$collection$parallel$ParIterableLike$Span$$pos;

  public final scala.Function1<T, java.lang.Object> scala$collection$parallel$ParIterableLike$Span$$pred;

  public final scala.collection.parallel.CombinerFactory<U, This> scala$collection$parallel$ParIterableLike$Span$$cbfBefore;

  public final scala.collection.parallel.CombinerFactory<U, This> scala$collection$parallel$ParIterableLike$Span$$cbfAfter;

  private final scala.collection.parallel.IterableSplitter<T> pit;

  private volatile scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> result;

  public final scala.collection.parallel.ParIterableLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #41                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #52                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.IterableSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #89                 // Field pit:Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> result();
    Code:
       0: aload_0
       1: getfield      #92                 // Field result:Lscala/Tuple2;
       4: areturn

  public void result_$eq(scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field result:Lscala/Tuple2;
       5: return

  public void leaf(scala.Option<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>>);
    Code:
       0: aload_0
       1: getfield      #97                 // Field scala$collection$parallel$ParIterableLike$Span$$pos:I
       4: aload_0
       5: invokevirtual #99                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
       8: invokeinterface #105,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.indexFlag:()I
      13: if_icmpge     86
      16: aload_0
      17: aload_0
      18: invokevirtual #99                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
      21: aload_0
      22: getfield      #107                // Field scala$collection$parallel$ParIterableLike$Span$$pred:Lscala/Function1;
      25: aload_0
      26: getfield      #109                // Field scala$collection$parallel$ParIterableLike$Span$$cbfBefore:Lscala/collection/parallel/CombinerFactory;
      29: invokeinterface #115,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
      34: aload_0
      35: getfield      #117                // Field scala$collection$parallel$ParIterableLike$Span$$cbfAfter:Lscala/collection/parallel/CombinerFactory;
      38: invokeinterface #115,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
      43: invokeinterface #121,  4          // InterfaceMethod scala/collection/parallel/IterableSplitter.span2combiners:(Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
      48: invokevirtual #123                // Method result_$eq:(Lscala/Tuple2;)V
      51: aload_0
      52: invokevirtual #125                // Method result:()Lscala/Tuple2;
      55: invokevirtual #130                // Method scala/Tuple2._2:()Ljava/lang/Object;
      58: checkcast     #132                // class scala/collection/generic/Sizing
      61: invokeinterface #135,  1          // InterfaceMethod scala/collection/generic/Sizing.size:()I
      66: iconst_0
      67: if_icmple     208
      70: aload_0
      71: invokevirtual #99                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
      74: aload_0
      75: getfield      #97                 // Field scala$collection$parallel$ParIterableLike$Span$$pos:I
      78: invokeinterface #139,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.setIndexFlagIfLesser:(I)V
      83: goto          208
      86: aload_0
      87: new           #127                // class scala/Tuple2
      90: dup
      91: aload_0
      92: invokevirtual #143                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
      95: aload_1
      96: invokevirtual #148                // Method scala/Option.isEmpty:()Z
      99: ifeq          108
     102: getstatic     #154                // Field scala/None$.MODULE$:Lscala/None$;
     105: goto          128
     108: new           #156                // class scala/Some
     111: dup
     112: aload_1
     113: invokevirtual #159                // Method scala/Option.get:()Ljava/lang/Object;
     116: checkcast     #127                // class scala/Tuple2
     119: invokevirtual #130                // Method scala/Tuple2._2:()Ljava/lang/Object;
     122: checkcast     #161                // class scala/collection/parallel/Combiner
     125: invokespecial #164                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     128: aload_0
     129: getfield      #109                // Field scala$collection$parallel$ParIterableLike$Span$$cbfBefore:Lscala/collection/parallel/CombinerFactory;
     132: invokeinterface #115,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
     137: invokeinterface #170,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
     142: aload_0
     143: invokevirtual #99                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
     146: aload_0
     147: invokevirtual #143                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
     150: aload_1
     151: invokevirtual #148                // Method scala/Option.isEmpty:()Z
     154: ifeq          163
     157: getstatic     #154                // Field scala/None$.MODULE$:Lscala/None$;
     160: goto          183
     163: new           #156                // class scala/Some
     166: dup
     167: aload_1
     168: invokevirtual #159                // Method scala/Option.get:()Ljava/lang/Object;
     171: checkcast     #127                // class scala/Tuple2
     174: invokevirtual #130                // Method scala/Tuple2._2:()Ljava/lang/Object;
     177: checkcast     #161                // class scala/collection/parallel/Combiner
     180: invokespecial #164                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     183: aload_0
     184: getfield      #117                // Field scala$collection$parallel$ParIterableLike$Span$$cbfAfter:Lscala/collection/parallel/CombinerFactory;
     187: invokeinterface #115,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
     192: invokeinterface #170,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
     197: invokeinterface #174,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.copy2builder:(Lscala/collection/mutable/Builder;)Lscala/collection/mutable/Builder;
     202: invokespecial #177                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     205: invokevirtual #123                // Method result_$eq:(Lscala/Tuple2;)V
     208: return

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: new           #182                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #184                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public scala.collection.Seq<scala.collection.parallel.Task<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Span<U, This>>> split();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
       4: invokeinterface #190,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/Seq;
       9: astore_1
      10: aload_1
      11: aload_1
      12: iconst_0
      13: invokestatic  #196                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      16: new           #198                // class scala/collection/parallel/ParIterableLike$Span$$anonfun$split$16
      19: dup
      20: aload_0
      21: invokespecial #201                // Method scala/collection/parallel/ParIterableLike$Span$$anonfun$split$16."<init>":(Lscala/collection/parallel/ParIterableLike$Span;)V
      24: getstatic     #206                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      27: invokevirtual #210                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      30: invokeinterface #216,  4          // InterfaceMethod scala/collection/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #218                // class scala/collection/GenIterable
      38: getstatic     #206                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      41: invokevirtual #210                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      44: invokeinterface #222,  3          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      49: checkcast     #224                // class scala/collection/TraversableLike
      52: new           #226                // class scala/collection/parallel/ParIterableLike$Span$$anonfun$split$17
      55: dup
      56: aload_0
      57: invokespecial #227                // Method scala/collection/parallel/ParIterableLike$Span$$anonfun$split$17."<init>":(Lscala/collection/parallel/ParIterableLike$Span;)V
      60: invokeinterface #231,  2          // InterfaceMethod scala/collection/TraversableLike.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      65: new           #233                // class scala/collection/parallel/ParIterableLike$Span$$anonfun$split$18
      68: dup
      69: aload_0
      70: invokespecial #234                // Method scala/collection/parallel/ParIterableLike$Span$$anonfun$split$18."<init>":(Lscala/collection/parallel/ParIterableLike$Span;)V
      73: getstatic     #206                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      76: invokevirtual #210                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      79: invokeinterface #240,  3          // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      84: checkcast     #212                // class scala/collection/Seq
      87: areturn

  public void merge(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Span<U, This>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #125                // Method result:()Lscala/Tuple2;
       5: invokevirtual #130                // Method scala/Tuple2._2:()Ljava/lang/Object;
       8: checkcast     #132                // class scala/collection/generic/Sizing
      11: invokeinterface #135,  1          // InterfaceMethod scala/collection/generic/Sizing.size:()I
      16: iconst_0
      17: if_icmpne     62
      20: new           #127                // class scala/Tuple2
      23: dup
      24: aload_0
      25: invokevirtual #125                // Method result:()Lscala/Tuple2;
      28: invokevirtual #246                // Method scala/Tuple2._1:()Ljava/lang/Object;
      31: checkcast     #161                // class scala/collection/parallel/Combiner
      34: aload_1
      35: invokevirtual #125                // Method result:()Lscala/Tuple2;
      38: invokevirtual #246                // Method scala/Tuple2._1:()Ljava/lang/Object;
      41: checkcast     #161                // class scala/collection/parallel/Combiner
      44: invokeinterface #250,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      49: aload_1
      50: invokevirtual #125                // Method result:()Lscala/Tuple2;
      53: invokevirtual #130                // Method scala/Tuple2._2:()Ljava/lang/Object;
      56: invokespecial #177                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      59: goto          116
      62: new           #127                // class scala/Tuple2
      65: dup
      66: aload_0
      67: invokevirtual #125                // Method result:()Lscala/Tuple2;
      70: invokevirtual #246                // Method scala/Tuple2._1:()Ljava/lang/Object;
      73: aload_0
      74: invokevirtual #125                // Method result:()Lscala/Tuple2;
      77: invokevirtual #130                // Method scala/Tuple2._2:()Ljava/lang/Object;
      80: checkcast     #161                // class scala/collection/parallel/Combiner
      83: aload_1
      84: invokevirtual #125                // Method result:()Lscala/Tuple2;
      87: invokevirtual #246                // Method scala/Tuple2._1:()Ljava/lang/Object;
      90: checkcast     #161                // class scala/collection/parallel/Combiner
      93: invokeinterface #250,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      98: aload_1
      99: invokevirtual #125                // Method result:()Lscala/Tuple2;
     102: invokevirtual #130                // Method scala/Tuple2._2:()Ljava/lang/Object;
     105: checkcast     #161                // class scala/collection/parallel/Combiner
     108: invokeinterface #250,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
     113: invokespecial #177                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     116: invokevirtual #123                // Method result_$eq:(Lscala/Tuple2;)V
     119: return

  public boolean requiresStrictSplitters();
    Code:
       0: iconst_1
       1: ireturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Span$$$outer();
    Code:
       0: aload_0
       1: getfield      #253                // Field $outer:Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$Span
       5: invokevirtual #257                // Method merge:(Lscala/collection/parallel/ParIterableLike$Span;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #260                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
       5: athrow

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #127                // class scala/Tuple2
       5: invokevirtual #123                // Method result_$eq:(Lscala/Tuple2;)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method result:()Lscala/Tuple2;
       4: areturn

  public scala.collection.parallel.ParIterableLike$Span(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>, int, scala.Function1<T, java.lang.Object>, scala.collection.parallel.CombinerFactory<U, This>, scala.collection.parallel.CombinerFactory<U, This>, scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #97                 // Field scala$collection$parallel$ParIterableLike$Span$$pos:I
       5: aload_0
       6: aload_3
       7: putfield      #107                // Field scala$collection$parallel$ParIterableLike$Span$$pred:Lscala/Function1;
      10: aload_0
      11: aload         4
      13: putfield      #109                // Field scala$collection$parallel$ParIterableLike$Span$$cbfBefore:Lscala/collection/parallel/CombinerFactory;
      16: aload_0
      17: aload         5
      19: putfield      #117                // Field scala$collection$parallel$ParIterableLike$Span$$cbfAfter:Lscala/collection/parallel/CombinerFactory;
      22: aload_0
      23: aload         6
      25: putfield      #89                 // Field pit:Lscala/collection/parallel/IterableSplitter;
      28: aload_1
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: aload_0
      35: aload_1
      36: putfield      #253                // Field $outer:Lscala/collection/parallel/ParIterableLike;
      39: aload_0
      40: invokespecial #262                // Method java/lang/Object."<init>":()V
      43: aload_0
      44: invokestatic  #265                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      47: aload_0
      48: invokestatic  #270                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      51: aload_0
      52: invokestatic  #272                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      55: aload_0
      56: aconst_null
      57: putfield      #92                 // Field result:Lscala/Tuple2;
      60: return
}
