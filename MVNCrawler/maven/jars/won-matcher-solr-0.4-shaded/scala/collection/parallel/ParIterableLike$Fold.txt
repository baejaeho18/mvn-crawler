Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$Fold<U> implements scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Accessor<U, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Fold<U>> {
  private final U z;

  private final scala.Function2<U, U, U> op;

  private final scala.collection.parallel.IterableSplitter<T> pit;

  private volatile U result;

  public final scala.collection.parallel.ParIterableLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public scala.collection.Seq<scala.collection.parallel.Task<U, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Fold<U>>> split();
    Code:
       0: aload_0
       1: invokestatic  #41                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.split:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/Seq;
       4: areturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public boolean requiresStrictSplitters();
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.requiresStrictSplitters:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
       4: ireturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #58                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #89                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.IterableSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #94                 // Field pit:Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public U result();
    Code:
       0: aload_0
       1: getfield      #96                 // Field result:Ljava/lang/Object;
       4: areturn

  public void result_$eq(U);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field result:Ljava/lang/Object;
       5: return

  public void leaf(scala.Option<U>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #100                // Method pit:()Lscala/collection/parallel/IterableSplitter;
       5: aload_0
       6: getfield      #102                // Field z:Ljava/lang/Object;
       9: aload_0
      10: getfield      #104                // Field op:Lscala/Function2;
      13: invokeinterface #110,  3          // InterfaceMethod scala/collection/parallel/IterableSplitter.fold:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      18: invokevirtual #112                // Method result_$eq:(Ljava/lang/Object;)V
      21: return

  public scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Fold<U> newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: new           #2                  // class scala/collection/parallel/ParIterableLike$Fold
       3: dup
       4: aload_0
       5: invokevirtual #119                // Method scala$collection$parallel$ParIterableLike$Fold$$$outer:()Lscala/collection/parallel/ParIterableLike;
       8: aload_0
       9: getfield      #102                // Field z:Ljava/lang/Object;
      12: aload_0
      13: getfield      #104                // Field op:Lscala/Function2;
      16: aload_1
      17: invokespecial #123                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
      20: areturn

  public void merge(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Fold<U>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #104                // Field op:Lscala/Function2;
       5: aload_0
       6: invokevirtual #128                // Method result:()Ljava/lang/Object;
       9: aload_1
      10: invokevirtual #128                // Method result:()Ljava/lang/Object;
      13: invokeinterface #134,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: invokevirtual #112                // Method result_$eq:(Ljava/lang/Object;)V
      21: return

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Fold$$$outer();
    Code:
       0: aload_0
       1: getfield      #136                // Field $outer:Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method scala$collection$parallel$ParIterableLike$Fold$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method scala$collection$parallel$ParIterableLike$Fold$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$Fold
       5: invokevirtual #140                // Method merge:(Lscala/collection/parallel/ParIterableLike$Fold;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #143                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Fold;
       5: areturn

  public scala.collection.parallel.ParIterableLike$Fold(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>, U, scala.Function2<U, U, U>, scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #102                // Field z:Ljava/lang/Object;
       5: aload_0
       6: aload_3
       7: putfield      #104                // Field op:Lscala/Function2;
      10: aload_0
      11: aload         4
      13: putfield      #94                 // Field pit:Lscala/collection/parallel/IterableSplitter;
      16: aload_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #136                // Field $outer:Lscala/collection/parallel/ParIterableLike;
      27: aload_0
      28: invokespecial #145                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #148                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      35: aload_0
      36: invokestatic  #151                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      39: aload_0
      40: invokestatic  #153                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      43: aload_0
      44: aconst_null
      45: putfield      #96                 // Field result:Ljava/lang/Object;
      48: return
}
