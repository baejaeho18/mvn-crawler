Compiled from "ParHashMap.scala"
public class scala.collection.parallel.immutable.ParHashMap<K, V> implements scala.collection.parallel.immutable.ParMap<K, V>, scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.immutable.HashMap<K, V> trie;

  private volatile transient scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport;

  private volatile scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$module;

  private volatile scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$module;

  public static void totalcombines_$eq(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashMap$.MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       3: aload_0
       4: invokevirtual #23                 // Method scala/collection/parallel/immutable/ParHashMap$.totalcombines_$eq:(Ljava/util/concurrent/atomic/AtomicInteger;)V
       7: return

  public static java.util.concurrent.atomic.AtomicInteger totalcombines();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashMap$.MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       3: invokevirtual #27                 // Method scala/collection/parallel/immutable/ParHashMap$.totalcombines:()Ljava/util/concurrent/atomic/AtomicInteger;
       6: areturn

  public static <K, V> scala.collection.parallel.immutable.ParHashMap<K, V> fromTrie(scala.collection.immutable.HashMap<K, V>);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashMap$.MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       3: aload_0
       4: invokevirtual #31                 // Method scala/collection/parallel/immutable/ParHashMap$.fromTrie:(Lscala/collection/immutable/HashMap;)Lscala/collection/parallel/immutable/ParHashMap;
       7: areturn

  public static <K, V> scala.collection.generic.CanCombineFrom<scala.collection.parallel.immutable.ParHashMap<?, ?>, scala.Tuple2<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>> canBuildFrom();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashMap$.MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       3: invokevirtual #35                 // Method scala/collection/parallel/immutable/ParHashMap$.canBuildFrom:()Lscala/collection/generic/CanCombineFrom;
       6: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method scala/collection/parallel/immutable/ParMap$class.stringPrefix:(Lscala/collection/parallel/immutable/ParMap;)Ljava/lang/String;
       4: areturn

  public <P, Q> scala.collection.parallel.immutable.ParMap<P, Q> toMap(scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<P, Q>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // Method scala/collection/parallel/immutable/ParMap$class.toMap:(Lscala/collection/parallel/immutable/ParMap;Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public <U> scala.collection.parallel.immutable.ParMap<K, U> updated(K, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // Method scala/collection/parallel/immutable/ParMap$class.updated:(Lscala/collection/parallel/immutable/ParMap;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/immutable/ParMap;
       6: areturn

  public <U> scala.collection.parallel.immutable.ParMap<K, U> withDefault(scala.Function1<K, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/parallel/immutable/ParMap$class.withDefault:(Lscala/collection/parallel/immutable/ParMap;Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public <U> scala.collection.parallel.immutable.ParMap<K, U> withDefaultValue(U);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method scala/collection/parallel/immutable/ParMap$class.withDefaultValue:(Lscala/collection/parallel/immutable/ParMap;Ljava/lang/Object;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.parallel.immutable.ParIterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #91                 // Method scala/collection/parallel/immutable/ParIterable$class.companion:(Lscala/collection/parallel/immutable/ParIterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.parallel.immutable.ParIterable<scala.Tuple2<K, V>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method scala/collection/parallel/immutable/ParIterable$class.toIterable:(Lscala/collection/parallel/immutable/ParIterable;)Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.parallel.immutable.ParSeq<scala.Tuple2<K, V>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #101                // Method scala/collection/parallel/immutable/ParIterable$class.toSeq:(Lscala/collection/parallel/immutable/ParIterable;)Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public V default(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // Method scala/collection/parallel/ParMapLike$class.default:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public V apply(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method scala/collection/parallel/ParMapLike$class.apply:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <U> U getOrElse(K, scala.Function0<U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #116                // Method scala/collection/parallel/ParMapLike$class.getOrElse:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public boolean contains(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #122                // Method scala/collection/parallel/ParMapLike$class.contains:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean isDefinedAt(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method scala/collection/parallel/ParMapLike$class.isDefinedAt:(Lscala/collection/parallel/ParMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.parallel.IterableSplitter<K> keysIterator();
    Code:
       0: aload_0
       1: invokestatic  #130                // Method scala/collection/parallel/ParMapLike$class.keysIterator:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.parallel.IterableSplitter<V> valuesIterator();
    Code:
       0: aload_0
       1: invokestatic  #133                // Method scala/collection/parallel/ParMapLike$class.valuesIterator:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.parallel.ParSet<K> keySet();
    Code:
       0: aload_0
       1: invokestatic  #138                // Method scala/collection/parallel/ParMapLike$class.keySet:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParSet;
       4: areturn

  public scala.collection.parallel.ParIterable<K> keys();
    Code:
       0: aload_0
       1: invokestatic  #143                // Method scala/collection/parallel/ParMapLike$class.keys:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable<V> values();
    Code:
       0: aload_0
       1: invokestatic  #146                // Method scala/collection/parallel/ParMapLike$class.values:(Lscala/collection/parallel/ParMapLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParMap<K, V> filterKeys(scala.Function1<K, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // Method scala/collection/parallel/ParMapLike$class.filterKeys:(Lscala/collection/parallel/ParMapLike;Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public <S> scala.collection.parallel.ParMap<K, S> mapValues(scala.Function1<V, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method scala/collection/parallel/ParMapLike$class.mapValues:(Lscala/collection/parallel/ParMapLike;Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport();
    Code:
       0: aload_0
       1: getfield      #159                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void scala$collection$parallel$ParIterableLike$$_tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #159                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       5: return

  private scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #167                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       8: ifnonnull     23
      11: aload_0
      12: new           #169                // class scala/collection/parallel/ParIterableLike$ScanNode$
      15: dup
      16: aload_0
      17: invokespecial #173                // Method scala/collection/parallel/ParIterableLike$ScanNode$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #167                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      23: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #167                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode();
    Code:
       0: aload_0
       1: getfield      #167                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #184                // Method ScanNode$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanNode$;
      11: goto          18
      14: aload_0
      15: getfield      #167                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      18: areturn

  private scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #188                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       8: ifnonnull     23
      11: aload_0
      12: new           #190                // class scala/collection/parallel/ParIterableLike$ScanLeaf$
      15: dup
      16: aload_0
      17: invokespecial #191                // Method scala/collection/parallel/ParIterableLike$ScanLeaf$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #188                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      23: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #188                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf();
    Code:
       0: aload_0
       1: getfield      #188                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #194                // Method ScanLeaf$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      11: goto          18
      14: aload_0
      15: getfield      #188                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      18: areturn

  public void initTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #200                // Method scala/collection/parallel/ParIterableLike$class.initTaskSupport:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.TaskSupport tasksupport();
    Code:
       0: aload_0
       1: invokestatic  #204                // Method scala/collection/parallel/ParIterableLike$class.tasksupport:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #208                // Method scala/collection/parallel/ParIterableLike$class.tasksupport_$eq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public scala.collection.parallel.ParIterable repr();
    Code:
       0: aload_0
       1: invokestatic  #213                // Method scala/collection/parallel/ParIterableLike$class.repr:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #218                // Method scala/collection/parallel/ParIterableLike$class.isTraversableAgain:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #221                // Method scala/collection/parallel/ParIterableLike$class.hasDefiniteSize:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #224                // Method scala/collection/parallel/ParIterableLike$class.isEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #227                // Method scala/collection/parallel/ParIterableLike$class.nonEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public java.lang.Object head();
    Code:
       0: aload_0
       1: invokestatic  #232                // Method scala/collection/parallel/ParIterableLike$class.head:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<K, V>> headOption();
    Code:
       0: aload_0
       1: invokestatic  #237                // Method scala/collection/parallel/ParIterableLike$class.headOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable tail();
    Code:
       0: aload_0
       1: invokestatic  #240                // Method scala/collection/parallel/ParIterableLike$class.tail:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object last();
    Code:
       0: aload_0
       1: invokestatic  #243                // Method scala/collection/parallel/ParIterableLike$class.last:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<K, V>> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #246                // Method scala/collection/parallel/ParIterableLike$class.lastOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable init();
    Code:
       0: aload_0
       1: invokestatic  #249                // Method scala/collection/parallel/ParIterableLike$class.init:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.Splitter<scala.Tuple2<K, V>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #254                // Method scala/collection/parallel/ParIterableLike$class.iterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/Splitter;
       4: areturn

  public scala.collection.parallel.ParIterable par();
    Code:
       0: aload_0
       1: invokestatic  #257                // Method scala/collection/parallel/ParIterableLike$class.par:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public boolean isStrictSplitterCollection();
    Code:
       0: aload_0
       1: invokestatic  #260                // Method scala/collection/parallel/ParIterableLike$class.isStrictSplitterCollection:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public <R, Tp> java.lang.Object task2ops(scala.collection.parallel.ParIterableLike<scala.Tuple2<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>, scala.collection.immutable.HashMap<K, V>>.StrictSplitterCheckTask<R, Tp>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #265                // Method scala/collection/parallel/ParIterableLike$class.task2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
       5: areturn

  public <R> java.lang.Object wrap(scala.Function0<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // Method scala/collection/parallel/ParIterableLike$class.wrap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/ParIterableLike$NonDivisible;
       5: areturn

  public <PI extends scala.collection.generic.DelegatedSignalling> java.lang.Object delegatedSignalling2ops(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #278                // Method scala/collection/parallel/ParIterableLike$class.delegatedSignalling2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/DelegatedSignalling;)Lscala/collection/parallel/ParIterableLike$SignallingOps;
       5: areturn

  public <Elem, To> java.lang.Object builder2ops(scala.collection.mutable.Builder<Elem, To>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #285                // Method scala/collection/parallel/ParIterableLike$class.builder2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
       5: areturn

  public <S, That> java.lang.Object bf2seq(scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #292                // Method scala/collection/parallel/ParIterableLike$class.bf2seq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Lscala/collection/generic/CanBuildFrom;
       5: areturn

  public scala.collection.parallel.ParIterable sequentially(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #299                // Method scala/collection/parallel/ParIterableLike$class.sequentially:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #305                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #313                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #316                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #319                // Method scala/collection/parallel/ParIterableLike$class.toString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #323                // Method scala/collection/parallel/ParIterableLike$class.canEqual:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #329                // Method scala/collection/parallel/ParIterableLike$class.reduce:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceOption(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #336                // Method scala/collection/parallel/ParIterableLike$class.reduceOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #341                // Method scala/collection/parallel/ParIterableLike$class.fold:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S aggregate(scala.Function0<S>, scala.Function2<S, scala.Tuple2<K, V>, S>, scala.Function2<S, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #347                // Method scala/collection/parallel/ParIterableLike$class.aggregate:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <S> S foldLeft(S, scala.Function2<S, scala.Tuple2<K, V>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #352                // Method scala/collection/parallel/ParIterableLike$class.foldLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S foldRight(S, scala.Function2<scala.Tuple2<K, V>, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #355                // Method scala/collection/parallel/ParIterableLike$class.foldRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U> U reduceLeft(scala.Function2<U, scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #358                // Method scala/collection/parallel/ParIterableLike$class.reduceLeft:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> U reduceRight(scala.Function2<scala.Tuple2<K, V>, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // Method scala/collection/parallel/ParIterableLike$class.reduceRight:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceLeftOption(scala.Function2<U, scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #364                // Method scala/collection/parallel/ParIterableLike$class.reduceLeftOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> scala.Option<U> reduceRightOption(scala.Function2<scala.Tuple2<K, V>, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #367                // Method scala/collection/parallel/ParIterableLike$class.reduceRightOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #372                // Method scala/collection/parallel/ParIterableLike$class.foreach:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)V
       5: return

  public int count(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #377                // Method scala/collection/parallel/ParIterableLike$class.count:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)I
       5: ireturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #382                // Method scala/collection/parallel/ParIterableLike$class.sum:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // Method scala/collection/parallel/ParIterableLike$class.product:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #392                // Method scala/collection/parallel/ParIterableLike$class.min:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #397                // Method scala/collection/parallel/ParIterableLike$class.max:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #402                // Method scala/collection/parallel/ParIterableLike$class.maxBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #406                // Method scala/collection/parallel/ParIterableLike$class.minBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S, That> That map(scala.Function1<scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #411                // Method scala/collection/parallel/ParIterableLike$class.map:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That collect(scala.PartialFunction<scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #416                // Method scala/collection/parallel/ParIterableLike$class.collect:(Lscala/collection/parallel/ParIterableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That flatMap(scala.Function1<scala.Tuple2<K, V>, scala.collection.GenTraversableOnce<S>>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #421                // Method scala/collection/parallel/ParIterableLike$class.flatMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean forall(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #426                // Method scala/collection/parallel/ParIterableLike$class.forall:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #429                // Method scala/collection/parallel/ParIterableLike$class.exists:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<scala.Tuple2<K, V>> find(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #434                // Method scala/collection/parallel/ParIterableLike$class.find:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public java.lang.Object combinerFactory();
    Code:
       0: aload_0
       1: invokestatic  #439                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/CombinerFactory;
       4: areturn

  public <S, That> java.lang.Object combinerFactory(scala.Function0<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #443                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/CombinerFactory;
       5: areturn

  public scala.collection.parallel.ParIterable withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #447                // Method scala/collection/parallel/ParIterableLike$class.withFilter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #451                // Method scala/collection/parallel/ParIterableLike$class.filter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // Method scala/collection/parallel/ParIterableLike$class.filterNot:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U, That> That $plus$plus(scala.collection.GenTraversableOnce<U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #459                // Method scala/collection/parallel/ParIterableLike$class.$plus$plus:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParHashMap<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>> partition(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #466                // Method scala/collection/parallel/ParIterableLike$class.partition:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.parallel.immutable.ParMap<K, scala.collection.parallel.immutable.ParHashMap<K, V>> groupBy(scala.Function1<scala.Tuple2<K, V>, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #470                // Method scala/collection/parallel/ParIterableLike$class.groupBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParIterable take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #475                // Method scala/collection/parallel/ParIterableLike$class.take:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #480                // Method scala/collection/parallel/ParIterableLike$class.drop:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #485                // Method scala/collection/parallel/ParIterableLike$class.slice:(Lscala/collection/parallel/ParIterableLike;II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParHashMap<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #492                // Method scala/collection/parallel/ParIterableLike$class.splitAt:(Lscala/collection/parallel/ParIterableLike;I)Lscala/Tuple2;
       5: areturn

  public <U, That> That scan(U, scala.Function2<U, U, U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #497                // Method scala/collection/parallel/ParIterableLike$class.scan:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanLeft(S, scala.Function2<S, scala.Tuple2<K, V>, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #500                // Method scala/collection/parallel/ParIterableLike$class.scanLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanRight(S, scala.Function2<scala.Tuple2<K, V>, S, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #503                // Method scala/collection/parallel/ParIterableLike$class.scanRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.collection.parallel.ParIterable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #506                // Method scala/collection/parallel/ParIterableLike$class.takeWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParHashMap<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>> span(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #509                // Method scala/collection/parallel/ParIterableLike$class.span:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.parallel.ParIterable dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #512                // Method scala/collection/parallel/ParIterableLike$class.dropWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #517                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)V
       5: return

  public <U> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #522                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;I)V
       6: return

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #526                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;II)V
       7: return

  public <U> boolean sameElements(scala.collection.GenIterable<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #532                // Method scala/collection/parallel/ParIterableLike$class.sameElements:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public <U, S, That> That zip(scala.collection.GenIterable<S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #538                // Method scala/collection/parallel/ParIterableLike$class.zip:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, scala.Tuple2<U, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #543                // Method scala/collection/parallel/ParIterableLike$class.zipWithIndex:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <S, U, That> That zipAll(scala.collection.GenIterable<S>, U, S, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashMap<K, V>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #548                // Method scala/collection/parallel/ParIterableLike$class.zipAll:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That toParCollection(scala.Function0<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #555                // Method scala/collection/parallel/ParIterableLike$class.toParCollection:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public <K, V, That> That toParMap(scala.Function0<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>, scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #560                // Method scala/collection/parallel/ParIterableLike$class.toParMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Predef$$less$colon$less;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #565                // Method scala/collection/parallel/ParIterableLike$class.view:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/IterableView;
       4: areturn

  public <U> java.lang.Object toArray(scala.reflect.ClassTag<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #570                // Method scala/collection/parallel/ParIterableLike$class.toArray:(Lscala/collection/parallel/ParIterableLike;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<K, V>> toList();
    Code:
       0: aload_0
       1: invokestatic  #577                // Method scala/collection/parallel/ParIterableLike$class.toList:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<K, V>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #582                // Method scala/collection/parallel/ParIterableLike$class.toIndexedSeq:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Stream<scala.Tuple2<K, V>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #587                // Method scala/collection/parallel/ParIterableLike$class.toStream:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #592                // Method scala/collection/parallel/ParIterableLike$class.toIterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Iterator;
       4: areturn

  public <U> scala.collection.mutable.Buffer<U> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #597                // Method scala/collection/parallel/ParIterableLike$class.toBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.GenTraversable<scala.Tuple2<K, V>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #602                // Method scala/collection/parallel/ParIterableLike$class.toTraversable:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/GenTraversable;
       4: areturn

  public <U> scala.collection.parallel.immutable.ParSet<U> toSet();
    Code:
       0: aload_0
       1: invokestatic  #607                // Method scala/collection/parallel/ParIterableLike$class.toSet:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<K, V>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #612                // Method scala/collection/parallel/ParIterableLike$class.toVector:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scala.Tuple2<K, V>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #615                // Method scala/collection/parallel/ParIterableLike$class.to:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public int scanBlockSize();
    Code:
       0: aload_0
       1: invokestatic  #620                // Method scala/collection/parallel/ParIterableLike$class.scanBlockSize:(Lscala/collection/parallel/ParIterableLike;)I
       4: ireturn

  public <S> S $div$colon(S, scala.Function2<S, scala.Tuple2<K, V>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #623                // Method scala/collection/parallel/ParIterableLike$class.$div$colon:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S $colon$bslash(S, scala.Function2<scala.Tuple2<K, V>, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #626                // Method scala/collection/parallel/ParIterableLike$class.$colon$bslash:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #629                // Method scala/collection/parallel/ParIterableLike$class.debugInformation:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.Seq<java.lang.String> brokenInvariants();
    Code:
       0: aload_0
       1: invokestatic  #634                // Method scala/collection/parallel/ParIterableLike$class.brokenInvariants:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #639                // Method scala/collection/parallel/ParIterableLike$class.debugBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public void debugclear();
    Code:
       0: aload_0
       1: invokestatic  #642                // Method scala/collection/parallel/ParIterableLike$class.debugclear:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debuglog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #647                // Method scala/collection/parallel/ParIterableLike$class.debuglog:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
       5: areturn

  public void printDebugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #651                // Method scala/collection/parallel/ParIterableLike$class.printDebugBuffer:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.Combiner<scala.Tuple2<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #658                // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <P, Q> scala.collection.parallel.Combiner<scala.Tuple2<P, Q>, scala.collection.parallel.immutable.ParHashMap<P, Q>> genericMapCombiner();
    Code:
       0: aload_0
       1: invokestatic  #664                // Method scala/collection/generic/GenericParMapTemplate$class.genericMapCombiner:(Lscala/collection/generic/GenericParMapTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<K, V>, scala.collection.parallel.immutable.ParIterable<scala.Tuple2<K, V>>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #671                // Method scala/collection/generic/GenericParTemplate$class.newBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.immutable.ParIterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #675                // Method scala/collection/generic/GenericParTemplate$class.genericBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.immutable.ParIterable<B>> genericCombiner();
    Code:
       0: aload_0
       1: invokestatic  #678                // Method scala/collection/generic/GenericParTemplate$class.genericCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.parallel.immutable.ParIterable<A1>, scala.collection.parallel.immutable.ParIterable<A2>> unzip(scala.Function1<scala.Tuple2<K, V>, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #684                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.parallel.immutable.ParIterable<A1>, scala.collection.parallel.immutable.ParIterable<A2>, scala.collection.parallel.immutable.ParIterable<A3>> unzip3(scala.Function1<scala.Tuple2<K, V>, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #690                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #696                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #700                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #706                // Method scala/collection/GenMapLike$class.hashCode:(Lscala/collection/GenMapLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #710                // Method scala/collection/GenMapLike$class.equals:(Lscala/collection/GenMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.generic.GenericParMapCompanion<scala.collection.parallel.immutable.ParHashMap> mapCompanion();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashMap$.MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       3: areturn

  public scala.collection.parallel.immutable.ParHashMap<K, V> empty();
    Code:
       0: new           #2                  // class scala/collection/parallel/immutable/ParHashMap
       3: dup
       4: invokespecial #716                // Method "<init>":()V
       7: areturn

  public scala.collection.parallel.immutable.HashMapCombiner<K, V> newCombiner();
    Code:
       0: getstatic     #723                // Field scala/collection/parallel/immutable/HashMapCombiner$.MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
       3: invokevirtual #725                // Method scala/collection/parallel/immutable/HashMapCombiner$.apply:()Lscala/collection/parallel/immutable/HashMapCombiner;
       6: areturn

  public scala.collection.parallel.IterableSplitter<scala.Tuple2<K, V>> splitter();
    Code:
       0: new           #728                // class scala/collection/parallel/immutable/ParHashMap$ParHashMapIterator
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
       9: invokevirtual #734                // Method scala/collection/immutable/HashMap.iterator:()Lscala/collection/Iterator;
      12: aload_0
      13: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
      16: invokevirtual #737                // Method scala/collection/immutable/HashMap.size:()I
      19: invokespecial #740                // Method scala/collection/parallel/immutable/ParHashMap$ParHashMapIterator."<init>":(Lscala/collection/parallel/immutable/ParHashMap;Lscala/collection/Iterator;I)V
      22: areturn

  public scala.collection.immutable.HashMap<K, V> seq();
    Code:
       0: aload_0
       1: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
       4: areturn

  public scala.collection.parallel.immutable.ParHashMap<K, V> $minus(K);
    Code:
       0: new           #2                  // class scala/collection/parallel/immutable/ParHashMap
       3: dup
       4: aload_0
       5: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
       8: aload_1
       9: invokevirtual #747                // Method scala/collection/immutable/HashMap.$minus:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
      12: invokespecial #750                // Method "<init>":(Lscala/collection/immutable/HashMap;)V
      15: areturn

  public <U> scala.collection.parallel.immutable.ParHashMap<K, U> $plus(scala.Tuple2<K, U>);
    Code:
       0: new           #2                  // class scala/collection/parallel/immutable/ParHashMap
       3: dup
       4: aload_0
       5: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
       8: aload_1
       9: invokevirtual #756                // Method scala/collection/immutable/HashMap.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;
      12: invokespecial #750                // Method "<init>":(Lscala/collection/immutable/HashMap;)V
      15: areturn

  public scala.Option<V> get(K);
    Code:
       0: aload_0
       1: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
       4: aload_1
       5: invokevirtual #762                // Method scala/collection/immutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
       8: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
       4: invokevirtual #737                // Method scala/collection/immutable/HashMap.size:()I
       7: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reuse(scala.Option<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_1
       1: instanceof    #766                // class scala/Some
       4: ifeq          24
       7: aload_1
       8: checkcast     #766                // class scala/Some
      11: astore_3
      12: aload_3
      13: invokevirtual #769                // Method scala/Some.x:()Ljava/lang/Object;
      16: checkcast     #771                // class scala/collection/parallel/Combiner
      19: astore        4
      21: goto          37
      24: getstatic     #776                // Field scala/None$.MODULE$:Lscala/None$;
      27: aload_1
      28: invokevirtual #778                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ifeq          40
      34: aload_2
      35: astore        4
      37: aload         4
      39: areturn
      40: new           #780                // class scala/MatchError
      43: dup
      44: aload_1
      45: invokespecial #782                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow

  public void printDebugInfo();
    Code:
       0: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: ldc_w         #794                // String Parallel hash trie
       6: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
       9: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: new           #799                // class scala/collection/mutable/StringBuilder
      15: dup
      16: invokespecial #800                // Method scala/collection/mutable/StringBuilder."<init>":()V
      19: ldc_w         #802                // String Top level inner trie type:
      22: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      25: aload_0
      26: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
      29: invokevirtual #810                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      35: invokevirtual #812                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      38: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      41: aload_0
      42: getfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
      45: astore_1
      46: aload_1
      47: instanceof    #814                // class scala/collection/immutable/HashMap$HashMap1
      50: ifeq          217
      53: aload_1
      54: checkcast     #814                // class scala/collection/immutable/HashMap$HashMap1
      57: astore_2
      58: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      61: ldc_w         #816                // String single node type
      64: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      67: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      70: new           #799                // class scala/collection/mutable/StringBuilder
      73: dup
      74: invokespecial #800                // Method scala/collection/mutable/StringBuilder."<init>":()V
      77: ldc_w         #818                // String key stored:
      80: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      83: aload_2
      84: invokevirtual #821                // Method scala/collection/immutable/HashMap$HashMap1.getKey:()Ljava/lang/Object;
      87: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      90: invokevirtual #812                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      93: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      96: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      99: new           #799                // class scala/collection/mutable/StringBuilder
     102: dup
     103: invokespecial #800                // Method scala/collection/mutable/StringBuilder."<init>":()V
     106: ldc_w         #823                // String hash of key:
     109: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     112: aload_2
     113: invokevirtual #826                // Method scala/collection/immutable/HashMap$HashMap1.getHash:()I
     116: invokestatic  #832                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     119: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     122: invokevirtual #812                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     125: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
     128: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     131: new           #799                // class scala/collection/mutable/StringBuilder
     134: dup
     135: invokespecial #800                // Method scala/collection/mutable/StringBuilder."<init>":()V
     138: ldc_w         #834                // String computed hash of
     141: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     144: aload_2
     145: invokevirtual #821                // Method scala/collection/immutable/HashMap$HashMap1.getKey:()Ljava/lang/Object;
     148: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     151: ldc_w         #836                // String :
     154: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     157: aload_2
     158: aload_2
     159: invokevirtual #821                // Method scala/collection/immutable/HashMap$HashMap1.getKey:()Ljava/lang/Object;
     162: invokevirtual #840                // Method scala/collection/immutable/HashMap$HashMap1.computeHashFor:(Ljava/lang/Object;)I
     165: invokestatic  #832                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     168: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     171: invokevirtual #812                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     174: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
     177: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     180: new           #799                // class scala/collection/mutable/StringBuilder
     183: dup
     184: invokespecial #800                // Method scala/collection/mutable/StringBuilder."<init>":()V
     187: ldc_w         #842                // String trie.get(key):
     190: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     193: aload_2
     194: aload_2
     195: invokevirtual #821                // Method scala/collection/immutable/HashMap$HashMap1.getKey:()Ljava/lang/Object;
     198: invokevirtual #843                // Method scala/collection/immutable/HashMap$HashMap1.get:(Ljava/lang/Object;)Lscala/Option;
     201: invokevirtual #806                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     204: invokevirtual #812                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     207: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
     210: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     213: pop
     214: goto          230
     217: getstatic     #792                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     220: ldc_w         #845                // String other kind of node
     223: invokevirtual #797                // Method scala/Predef$.println:(Ljava/lang/Object;)V
     226: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     229: pop
     230: return

  public scala.collection.mutable.Builder genericBuilder();
    Code:
       0: aload_0
       1: invokevirtual #847                // Method genericBuilder:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #850                // Method toSet:()Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #853                // Method dropWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #855                // Method takeWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #858                // Method slice:(II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #861                // Method drop:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #863                // Method take:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #866                // Method groupBy:(Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #868                // Method filterNot:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #870                // Method filter:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #873                // Method par:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #875                // Method iterator:()Lscala/collection/parallel/Splitter;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #877                // Method init:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #879                // Method tail:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokevirtual #881                // Method repr:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #883                // Method mapValues:(Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #885                // Method filterKeys:(Lscala/Function1;)Lscala/collection/parallel/ParMap;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #888                // Method values:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #890                // Method keys:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #892                // Method keySet:()Lscala/collection/parallel/ParSet;
       4: areturn

  public scala.collection.Iterator valuesIterator();
    Code:
       0: aload_0
       1: invokevirtual #894                // Method valuesIterator:()Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.Iterator keysIterator();
    Code:
       0: aload_0
       1: invokevirtual #896                // Method keysIterator:()Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #899                // Method toSeq:()Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.parallel.ParSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #899                // Method toSeq:()Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #902                // Method toIterable:()Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #902                // Method toIterable:()Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #905                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/immutable/ParMap;
       6: areturn

  public scala.collection.parallel.ParMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #905                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/immutable/ParMap;
       6: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #909                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #912                // Method $plus:(Lscala/Tuple2;)Lscala/collection/parallel/immutable/ParHashMap;
       5: areturn

  public scala.collection.parallel.ParMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #912                // Method $plus:(Lscala/Tuple2;)Lscala/collection/parallel/immutable/ParHashMap;
       5: areturn

  public scala.collection.parallel.immutable.ParMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #912                // Method $plus:(Lscala/Tuple2;)Lscala/collection/parallel/immutable/ParHashMap;
       5: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #916                // Method $minus:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/ParHashMap;
       5: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #919                // Method seq:()Lscala/collection/immutable/HashMap;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #919                // Method seq:()Lscala/collection/immutable/HashMap;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #919                // Method seq:()Lscala/collection/immutable/HashMap;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #919                // Method seq:()Lscala/collection/immutable/HashMap;
       4: areturn

  public scala.collection.parallel.Combiner newCombiner();
    Code:
       0: aload_0
       1: invokevirtual #924                // Method newCombiner:()Lscala/collection/parallel/immutable/HashMapCombiner;
       4: areturn

  public scala.collection.parallel.ParMap empty();
    Code:
       0: aload_0
       1: invokevirtual #927                // Method empty:()Lscala/collection/parallel/immutable/ParHashMap;
       4: areturn

  public scala.collection.parallel.immutable.ParMap empty();
    Code:
       0: aload_0
       1: invokevirtual #927                // Method empty:()Lscala/collection/parallel/immutable/ParHashMap;
       4: areturn

  public scala.collection.parallel.immutable.ParHashMap(scala.collection.immutable.HashMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #730                // Field trie:Lscala/collection/immutable/HashMap;
       5: aload_0
       6: invokespecial #929                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #935                // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      13: aload_0
      14: invokestatic  #938                // Method scala/collection/GenMapLike$class.$init$:(Lscala/collection/GenMapLike;)V
      17: aload_0
      18: invokestatic  #941                // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      21: aload_0
      22: invokestatic  #946                // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      25: aload_0
      26: invokestatic  #951                // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      29: aload_0
      30: invokestatic  #954                // Method scala/collection/generic/GenericParTemplate$class.$init$:(Lscala/collection/generic/GenericParTemplate;)V
      33: aload_0
      34: invokestatic  #957                // Method scala/collection/generic/GenericParMapTemplate$class.$init$:(Lscala/collection/generic/GenericParMapTemplate;)V
      37: aload_0
      38: invokestatic  #960                // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      41: aload_0
      42: invokestatic  #962                // Method scala/collection/parallel/ParIterableLike$class.$init$:(Lscala/collection/parallel/ParIterableLike;)V
      45: aload_0
      46: invokestatic  #967                // Method scala/collection/parallel/ParIterable$class.$init$:(Lscala/collection/parallel/ParIterable;)V
      49: aload_0
      50: invokestatic  #970                // Method scala/collection/parallel/ParMapLike$class.$init$:(Lscala/collection/parallel/ParMapLike;)V
      53: aload_0
      54: invokestatic  #975                // Method scala/collection/parallel/ParMap$class.$init$:(Lscala/collection/parallel/ParMap;)V
      57: aload_0
      58: invokestatic  #978                // Method scala/collection/parallel/immutable/ParIterable$class.$init$:(Lscala/collection/parallel/immutable/ParIterable;)V
      61: aload_0
      62: invokestatic  #981                // Method scala/collection/parallel/immutable/ParMap$class.$init$:(Lscala/collection/parallel/immutable/ParMap;)V
      65: return

  public scala.collection.parallel.immutable.ParHashMap();
    Code:
       0: aload_0
       1: getstatic     #986                // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       4: invokevirtual #988                // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
       7: invokespecial #750                // Method "<init>":(Lscala/collection/immutable/HashMap;)V
      10: return
}
