Compiled from "ParHashSet.scala"
public class scala.collection.parallel.immutable.ParHashSet<T> implements scala.collection.parallel.immutable.ParSet<T>, scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.immutable.HashSet<T> trie;

  private volatile transient scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport;

  private volatile scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$module;

  private volatile scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$module;

  public static <T> scala.collection.parallel.immutable.ParHashSet<T> fromTrie(scala.collection.immutable.HashSet<T>);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashSet$.MODULE$:Lscala/collection/parallel/immutable/ParHashSet$;
       3: aload_0
       4: invokevirtual #23                 // Method scala/collection/parallel/immutable/ParHashSet$.fromTrie:(Lscala/collection/immutable/HashSet;)Lscala/collection/parallel/immutable/ParHashSet;
       7: areturn

  public static <T> scala.collection.generic.CanCombineFrom<scala.collection.parallel.immutable.ParHashSet<?>, T, scala.collection.parallel.immutable.ParHashSet<T>> canBuildFrom();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashSet$.MODULE$:Lscala/collection/parallel/immutable/ParHashSet$;
       3: invokevirtual #27                 // Method scala/collection/parallel/immutable/ParHashSet$.canBuildFrom:()Lscala/collection/generic/CanCombineFrom;
       6: areturn

  public static <A> java.lang.Object setCanBuildFrom();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashSet$.MODULE$:Lscala/collection/parallel/immutable/ParHashSet$;
       3: invokevirtual #31                 // Method scala/collection/parallel/immutable/ParHashSet$.setCanBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       6: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method scala/collection/parallel/immutable/ParSet$class.stringPrefix:(Lscala/collection/parallel/immutable/ParSet;)Ljava/lang/String;
       4: areturn

  public <U> scala.collection.parallel.immutable.ParSet<U> toSet();
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method scala/collection/parallel/immutable/ParSet$class.toSet:(Lscala/collection/parallel/immutable/ParSet;)Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public scala.collection.parallel.immutable.ParIterable<T> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method scala/collection/parallel/immutable/ParIterable$class.toIterable:(Lscala/collection/parallel/immutable/ParIterable;)Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.parallel.immutable.ParSeq<T> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #70                 // Method scala/collection/parallel/immutable/ParIterable$class.toSeq:(Lscala/collection/parallel/immutable/ParIterable;)Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.parallel.ParSet union(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/parallel/ParSetLike$class.union:(Lscala/collection/parallel/ParSetLike;Lscala/collection/GenSet;)Lscala/collection/parallel/ParSet;
       5: areturn

  public scala.collection.parallel.ParSet diff(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/collection/parallel/ParSetLike$class.diff:(Lscala/collection/parallel/ParSetLike;Lscala/collection/GenSet;)Lscala/collection/parallel/ParSet;
       5: areturn

  public scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport();
    Code:
       0: aload_0
       1: getfield      #85                 // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void scala$collection$parallel$ParIterableLike$$_tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       5: return

  private scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #93                 // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       8: ifnonnull     23
      11: aload_0
      12: new           #95                 // class scala/collection/parallel/ParIterableLike$ScanNode$
      15: dup
      16: aload_0
      17: invokespecial #99                 // Method scala/collection/parallel/ParIterableLike$ScanNode$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #93                 // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      23: getstatic     #105                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #93                 // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode();
    Code:
       0: aload_0
       1: getfield      #93                 // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #110                // Method ScanNode$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanNode$;
      11: goto          18
      14: aload_0
      15: getfield      #93                 // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      18: areturn

  private scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #114                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       8: ifnonnull     23
      11: aload_0
      12: new           #116                // class scala/collection/parallel/ParIterableLike$ScanLeaf$
      15: dup
      16: aload_0
      17: invokespecial #117                // Method scala/collection/parallel/ParIterableLike$ScanLeaf$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #114                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      23: getstatic     #105                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #114                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf();
    Code:
       0: aload_0
       1: getfield      #114                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #120                // Method ScanLeaf$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      11: goto          18
      14: aload_0
      15: getfield      #114                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      18: areturn

  public void initTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method scala/collection/parallel/ParIterableLike$class.initTaskSupport:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.TaskSupport tasksupport();
    Code:
       0: aload_0
       1: invokestatic  #130                // Method scala/collection/parallel/ParIterableLike$class.tasksupport:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // Method scala/collection/parallel/ParIterableLike$class.tasksupport_$eq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public scala.collection.parallel.ParIterable repr();
    Code:
       0: aload_0
       1: invokestatic  #140                // Method scala/collection/parallel/ParIterableLike$class.repr:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #145                // Method scala/collection/parallel/ParIterableLike$class.isTraversableAgain:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #148                // Method scala/collection/parallel/ParIterableLike$class.hasDefiniteSize:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method scala/collection/parallel/ParIterableLike$class.isEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #154                // Method scala/collection/parallel/ParIterableLike$class.nonEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public T head();
    Code:
       0: aload_0
       1: invokestatic  #159                // Method scala/collection/parallel/ParIterableLike$class.head:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<T> headOption();
    Code:
       0: aload_0
       1: invokestatic  #164                // Method scala/collection/parallel/ParIterableLike$class.headOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable tail();
    Code:
       0: aload_0
       1: invokestatic  #167                // Method scala/collection/parallel/ParIterableLike$class.tail:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public T last();
    Code:
       0: aload_0
       1: invokestatic  #170                // Method scala/collection/parallel/ParIterableLike$class.last:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<T> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #173                // Method scala/collection/parallel/ParIterableLike$class.lastOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable init();
    Code:
       0: aload_0
       1: invokestatic  #176                // Method scala/collection/parallel/ParIterableLike$class.init:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.Splitter<T> iterator();
    Code:
       0: aload_0
       1: invokestatic  #181                // Method scala/collection/parallel/ParIterableLike$class.iterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/Splitter;
       4: areturn

  public scala.collection.parallel.ParIterable par();
    Code:
       0: aload_0
       1: invokestatic  #184                // Method scala/collection/parallel/ParIterableLike$class.par:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public boolean isStrictSplitterCollection();
    Code:
       0: aload_0
       1: invokestatic  #187                // Method scala/collection/parallel/ParIterableLike$class.isStrictSplitterCollection:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public <R, Tp> java.lang.Object task2ops(scala.collection.parallel.ParIterableLike<T, scala.collection.parallel.immutable.ParHashSet<T>, scala.collection.immutable.HashSet<T>>.StrictSplitterCheckTask<R, Tp>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // Method scala/collection/parallel/ParIterableLike$class.task2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
       5: areturn

  public <R> java.lang.Object wrap(scala.Function0<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #199                // Method scala/collection/parallel/ParIterableLike$class.wrap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/ParIterableLike$NonDivisible;
       5: areturn

  public <PI extends scala.collection.generic.DelegatedSignalling> java.lang.Object delegatedSignalling2ops(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #206                // Method scala/collection/parallel/ParIterableLike$class.delegatedSignalling2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/DelegatedSignalling;)Lscala/collection/parallel/ParIterableLike$SignallingOps;
       5: areturn

  public <Elem, To> java.lang.Object builder2ops(scala.collection.mutable.Builder<Elem, To>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #213                // Method scala/collection/parallel/ParIterableLike$class.builder2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
       5: areturn

  public <S, That> java.lang.Object bf2seq(scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method scala/collection/parallel/ParIterableLike$class.bf2seq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Lscala/collection/generic/CanBuildFrom;
       5: areturn

  public scala.collection.parallel.ParIterable sequentially(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #227                // Method scala/collection/parallel/ParIterableLike$class.sequentially:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #234                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #242                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #245                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #248                // Method scala/collection/parallel/ParIterableLike$class.toString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #253                // Method scala/collection/parallel/ParIterableLike$class.canEqual:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #260                // Method scala/collection/parallel/ParIterableLike$class.reduce:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceOption(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #267                // Method scala/collection/parallel/ParIterableLike$class.reduceOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #272                // Method scala/collection/parallel/ParIterableLike$class.fold:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S aggregate(scala.Function0<S>, scala.Function2<S, T, S>, scala.Function2<S, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #278                // Method scala/collection/parallel/ParIterableLike$class.aggregate:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <S> S foldLeft(S, scala.Function2<S, T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #283                // Method scala/collection/parallel/ParIterableLike$class.foldLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S foldRight(S, scala.Function2<T, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #286                // Method scala/collection/parallel/ParIterableLike$class.foldRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U> U reduceLeft(scala.Function2<U, T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #289                // Method scala/collection/parallel/ParIterableLike$class.reduceLeft:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> U reduceRight(scala.Function2<T, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #292                // Method scala/collection/parallel/ParIterableLike$class.reduceRight:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceLeftOption(scala.Function2<U, T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // Method scala/collection/parallel/ParIterableLike$class.reduceLeftOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> scala.Option<U> reduceRightOption(scala.Function2<T, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #298                // Method scala/collection/parallel/ParIterableLike$class.reduceRightOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> void foreach(scala.Function1<T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #303                // Method scala/collection/parallel/ParIterableLike$class.foreach:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)V
       5: return

  public int count(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #309                // Method scala/collection/parallel/ParIterableLike$class.count:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)I
       5: ireturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #315                // Method scala/collection/parallel/ParIterableLike$class.sum:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #320                // Method scala/collection/parallel/ParIterableLike$class.product:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> T min(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #325                // Method scala/collection/parallel/ParIterableLike$class.min:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <U> T max(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // Method scala/collection/parallel/ParIterableLike$class.max:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <S> T maxBy(scala.Function1<T, S>, scala.math.Ordering<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #335                // Method scala/collection/parallel/ParIterableLike$class.maxBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S> T minBy(scala.Function1<T, S>, scala.math.Ordering<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #339                // Method scala/collection/parallel/ParIterableLike$class.minBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S, That> That map(scala.Function1<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #344                // Method scala/collection/parallel/ParIterableLike$class.map:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That collect(scala.PartialFunction<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #349                // Method scala/collection/parallel/ParIterableLike$class.collect:(Lscala/collection/parallel/ParIterableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That flatMap(scala.Function1<T, scala.collection.GenTraversableOnce<S>>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #354                // Method scala/collection/parallel/ParIterableLike$class.flatMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean forall(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #359                // Method scala/collection/parallel/ParIterableLike$class.forall:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #362                // Method scala/collection/parallel/ParIterableLike$class.exists:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<T> find(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #367                // Method scala/collection/parallel/ParIterableLike$class.find:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public java.lang.Object combinerFactory();
    Code:
       0: aload_0
       1: invokestatic  #372                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/CombinerFactory;
       4: areturn

  public <S, That> java.lang.Object combinerFactory(scala.Function0<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #376                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/CombinerFactory;
       5: areturn

  public scala.collection.parallel.ParIterable withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // Method scala/collection/parallel/ParIterableLike$class.withFilter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #384                // Method scala/collection/parallel/ParIterableLike$class.filter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // Method scala/collection/parallel/ParIterableLike$class.filterNot:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U, That> That $plus$plus(scala.collection.GenTraversableOnce<U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #392                // Method scala/collection/parallel/ParIterableLike$class.$plus$plus:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParHashSet<T>, scala.collection.parallel.immutable.ParHashSet<T>> partition(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #398                // Method scala/collection/parallel/ParIterableLike$class.partition:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.parallel.immutable.ParMap<K, scala.collection.parallel.immutable.ParHashSet<T>> groupBy(scala.Function1<T, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #403                // Method scala/collection/parallel/ParIterableLike$class.groupBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParIterable take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #408                // Method scala/collection/parallel/ParIterableLike$class.take:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #413                // Method scala/collection/parallel/ParIterableLike$class.drop:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #418                // Method scala/collection/parallel/ParIterableLike$class.slice:(Lscala/collection/parallel/ParIterableLike;II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParHashSet<T>, scala.collection.parallel.immutable.ParHashSet<T>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #425                // Method scala/collection/parallel/ParIterableLike$class.splitAt:(Lscala/collection/parallel/ParIterableLike;I)Lscala/Tuple2;
       5: areturn

  public <U, That> That scan(U, scala.Function2<U, U, U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #430                // Method scala/collection/parallel/ParIterableLike$class.scan:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanLeft(S, scala.Function2<S, T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #433                // Method scala/collection/parallel/ParIterableLike$class.scanLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanRight(S, scala.Function2<T, S, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #436                // Method scala/collection/parallel/ParIterableLike$class.scanRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.collection.parallel.ParIterable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #439                // Method scala/collection/parallel/ParIterableLike$class.takeWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParHashSet<T>, scala.collection.parallel.immutable.ParHashSet<T>> span(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #442                // Method scala/collection/parallel/ParIterableLike$class.span:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.parallel.ParIterable dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #445                // Method scala/collection/parallel/ParIterableLike$class.dropWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #450                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)V
       5: return

  public <U> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #455                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;I)V
       6: return

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #459                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;II)V
       7: return

  public <U> boolean sameElements(scala.collection.GenIterable<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #465                // Method scala/collection/parallel/ParIterableLike$class.sameElements:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public <U, S, That> That zip(scala.collection.GenIterable<S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #471                // Method scala/collection/parallel/ParIterableLike$class.zip:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, scala.Tuple2<U, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #476                // Method scala/collection/parallel/ParIterableLike$class.zipWithIndex:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <S, U, That> That zipAll(scala.collection.GenIterable<S>, U, S, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParHashSet<T>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #481                // Method scala/collection/parallel/ParIterableLike$class.zipAll:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That toParCollection(scala.Function0<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #488                // Method scala/collection/parallel/ParIterableLike$class.toParCollection:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public <K, V, That> That toParMap(scala.Function0<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>, scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #493                // Method scala/collection/parallel/ParIterableLike$class.toParMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Predef$$less$colon$less;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #500                // Method scala/collection/parallel/ParIterableLike$class.view:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/IterableView;
       4: areturn

  public <U> java.lang.Object toArray(scala.reflect.ClassTag<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #505                // Method scala/collection/parallel/ParIterableLike$class.toArray:(Lscala/collection/parallel/ParIterableLike;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<T> toList();
    Code:
       0: aload_0
       1: invokestatic  #512                // Method scala/collection/parallel/ParIterableLike$class.toList:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<T> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #517                // Method scala/collection/parallel/ParIterableLike$class.toIndexedSeq:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Stream<T> toStream();
    Code:
       0: aload_0
       1: invokestatic  #522                // Method scala/collection/parallel/ParIterableLike$class.toStream:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public scala.collection.Iterator<T> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #527                // Method scala/collection/parallel/ParIterableLike$class.toIterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Iterator;
       4: areturn

  public <U> scala.collection.mutable.Buffer<U> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #532                // Method scala/collection/parallel/ParIterableLike$class.toBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.GenTraversable<T> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #537                // Method scala/collection/parallel/ParIterableLike$class.toTraversable:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/GenTraversable;
       4: areturn

  public <K, V> scala.collection.parallel.immutable.ParMap<K, V> toMap(scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #542                // Method scala/collection/parallel/ParIterableLike$class.toMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.immutable.Vector<T> toVector();
    Code:
       0: aload_0
       1: invokestatic  #547                // Method scala/collection/parallel/ParIterableLike$class.toVector:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, T, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #550                // Method scala/collection/parallel/ParIterableLike$class.to:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public int scanBlockSize();
    Code:
       0: aload_0
       1: invokestatic  #555                // Method scala/collection/parallel/ParIterableLike$class.scanBlockSize:(Lscala/collection/parallel/ParIterableLike;)I
       4: ireturn

  public <S> S $div$colon(S, scala.Function2<S, T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #558                // Method scala/collection/parallel/ParIterableLike$class.$div$colon:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S $colon$bslash(S, scala.Function2<T, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #561                // Method scala/collection/parallel/ParIterableLike$class.$colon$bslash:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #564                // Method scala/collection/parallel/ParIterableLike$class.debugInformation:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.Seq<java.lang.String> brokenInvariants();
    Code:
       0: aload_0
       1: invokestatic  #569                // Method scala/collection/parallel/ParIterableLike$class.brokenInvariants:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #574                // Method scala/collection/parallel/ParIterableLike$class.debugBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public void debugclear();
    Code:
       0: aload_0
       1: invokestatic  #577                // Method scala/collection/parallel/ParIterableLike$class.debugclear:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debuglog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #582                // Method scala/collection/parallel/ParIterableLike$class.debuglog:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
       5: areturn

  public void printDebugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #586                // Method scala/collection/parallel/ParIterableLike$class.printDebugBuffer:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.Combiner<T, scala.collection.parallel.immutable.ParHashSet<T>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #593                // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.Builder<T, scala.collection.parallel.immutable.ParHashSet<T>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #600                // Method scala/collection/generic/GenericParTemplate$class.newBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.parallel.Combiner<T, scala.collection.parallel.immutable.ParHashSet<T>> newCombiner();
    Code:
       0: aload_0
       1: invokestatic  #604                // Method scala/collection/generic/GenericParTemplate$class.newCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.immutable.ParHashSet<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #607                // Method scala/collection/generic/GenericParTemplate$class.genericBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.immutable.ParHashSet<B>> genericCombiner();
    Code:
       0: aload_0
       1: invokestatic  #610                // Method scala/collection/generic/GenericParTemplate$class.genericCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.parallel.immutable.ParHashSet<A1>, scala.collection.parallel.immutable.ParHashSet<A2>> unzip(scala.Function1<T, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #616                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.parallel.immutable.ParHashSet<A1>, scala.collection.parallel.immutable.ParHashSet<A2>, scala.collection.parallel.immutable.ParHashSet<A3>> unzip3(scala.Function1<T, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #622                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #628                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #632                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public boolean apply(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #638                // Method scala/collection/GenSetLike$class.apply:(Lscala/collection/GenSetLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object intersect(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #644                // Method scala/collection/GenSetLike$class.intersect:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $amp(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #647                // Method scala/collection/GenSetLike$class.$amp:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $bar(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #650                // Method scala/collection/GenSetLike$class.$bar:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $amp$tilde(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #653                // Method scala/collection/GenSetLike$class.$amp$tilde:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public boolean subsetOf(scala.collection.GenSet<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #658                // Method scala/collection/GenSetLike$class.subsetOf:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Z
       5: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #661                // Method scala/collection/GenSetLike$class.equals:(Lscala/collection/GenSetLike;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #665                // Method scala/collection/GenSetLike$class.hashCode:(Lscala/collection/GenSetLike;)I
       4: ireturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #672                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #679                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #684                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #689                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #694                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #699                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #704                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #710                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #715                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #720                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #725                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #730                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #735                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #740                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #745                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #750                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #755                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #760                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #765                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #770                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #775                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #780                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #785                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #790                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, java.lang.Object> compose(scala.Function1<A, T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #795                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <A> scala.Function1<T, A> andThen(scala.Function1<java.lang.Object, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #799                // Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.parallel.immutable.ParHashSet> companion();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParHashSet$.MODULE$:Lscala/collection/parallel/immutable/ParHashSet$;
       3: areturn

  public scala.collection.parallel.immutable.ParHashSet<T> empty();
    Code:
       0: new           #2                  // class scala/collection/parallel/immutable/ParHashSet
       3: dup
       4: invokespecial #805                // Method "<init>":()V
       7: areturn

  public scala.collection.parallel.IterableSplitter<T> splitter();
    Code:
       0: new           #809                // class scala/collection/parallel/immutable/ParHashSet$ParHashSetIterator
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
       9: invokevirtual #815                // Method scala/collection/immutable/HashSet.iterator:()Lscala/collection/Iterator;
      12: aload_0
      13: getfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
      16: invokevirtual #818                // Method scala/collection/immutable/HashSet.size:()I
      19: invokespecial #821                // Method scala/collection/parallel/immutable/ParHashSet$ParHashSetIterator."<init>":(Lscala/collection/parallel/immutable/ParHashSet;Lscala/collection/Iterator;I)V
      22: areturn

  public scala.collection.immutable.HashSet<T> seq();
    Code:
       0: aload_0
       1: getfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
       4: areturn

  public scala.collection.parallel.immutable.ParHashSet<T> $minus(T);
    Code:
       0: new           #2                  // class scala/collection/parallel/immutable/ParHashSet
       3: dup
       4: aload_0
       5: getfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
       8: aload_1
       9: invokevirtual #828                // Method scala/collection/immutable/HashSet.$minus:(Ljava/lang/Object;)Lscala/collection/immutable/HashSet;
      12: invokespecial #831                // Method "<init>":(Lscala/collection/immutable/HashSet;)V
      15: areturn

  public scala.collection.parallel.immutable.ParHashSet<T> $plus(T);
    Code:
       0: new           #2                  // class scala/collection/parallel/immutable/ParHashSet
       3: dup
       4: aload_0
       5: getfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
       8: aload_1
       9: invokevirtual #835                // Method scala/collection/immutable/HashSet.$plus:(Ljava/lang/Object;)Lscala/collection/immutable/HashSet;
      12: invokespecial #831                // Method "<init>":(Lscala/collection/immutable/HashSet;)V
      15: areturn

  public boolean contains(T);
    Code:
       0: aload_0
       1: getfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
       4: aload_1
       5: invokevirtual #838                // Method scala/collection/immutable/HashSet.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
       4: invokevirtual #818                // Method scala/collection/immutable/HashSet.size:()I
       7: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reuse(scala.Option<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_1
       1: instanceof    #842                // class scala/Some
       4: ifeq          24
       7: aload_1
       8: checkcast     #842                // class scala/Some
      11: astore_3
      12: aload_3
      13: invokevirtual #845                // Method scala/Some.x:()Ljava/lang/Object;
      16: checkcast     #847                // class scala/collection/parallel/Combiner
      19: astore        4
      21: goto          37
      24: getstatic     #852                // Field scala/None$.MODULE$:Lscala/None$;
      27: aload_1
      28: invokevirtual #854                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ifeq          40
      34: aload_2
      35: astore        4
      37: aload         4
      39: areturn
      40: new           #856                // class scala/MatchError
      43: dup
      44: aload_1
      45: invokespecial #858                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #865                // Method apply:(Ljava/lang/Object;)Z
       5: invokestatic  #871                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public scala.collection.mutable.Builder genericBuilder();
    Code:
       0: aload_0
       1: invokevirtual #873                // Method genericBuilder:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #876                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #879                // Method dropWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #881                // Method takeWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #884                // Method slice:(II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #887                // Method drop:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #889                // Method take:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #892                // Method groupBy:(Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #894                // Method filterNot:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #896                // Method filter:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #899                // Method par:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #901                // Method iterator:()Lscala/collection/parallel/Splitter;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #903                // Method init:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #905                // Method tail:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokevirtual #907                // Method repr:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object diff(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #909                // Method diff:(Lscala/collection/GenSet;)Lscala/collection/parallel/ParSet;
       5: areturn

  public java.lang.Object union(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #911                // Method union:(Lscala/collection/GenSet;)Lscala/collection/parallel/ParSet;
       5: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #914                // Method toSeq:()Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.parallel.ParSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #914                // Method toSeq:()Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #918                // Method toIterable:()Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #918                // Method toIterable:()Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #921                // Method toSet:()Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public java.lang.Object $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #923                // Method $plus:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/ParHashSet;
       5: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #925                // Method $minus:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/ParHashSet;
       5: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #928                // Method seq:()Lscala/collection/immutable/HashSet;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #928                // Method seq:()Lscala/collection/immutable/HashSet;
       4: areturn

  public scala.collection.Set seq();
    Code:
       0: aload_0
       1: invokevirtual #928                // Method seq:()Lscala/collection/immutable/HashSet;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #928                // Method seq:()Lscala/collection/immutable/HashSet;
       4: areturn

  public scala.collection.GenSet empty();
    Code:
       0: aload_0
       1: invokevirtual #933                // Method empty:()Lscala/collection/parallel/immutable/ParHashSet;
       4: areturn

  public scala.collection.parallel.ParSet empty();
    Code:
       0: aload_0
       1: invokevirtual #933                // Method empty:()Lscala/collection/parallel/immutable/ParHashSet;
       4: areturn

  public scala.collection.parallel.immutable.ParSet empty();
    Code:
       0: aload_0
       1: invokevirtual #933                // Method empty:()Lscala/collection/parallel/immutable/ParHashSet;
       4: areturn

  public scala.collection.parallel.immutable.ParHashSet(scala.collection.immutable.HashSet<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #811                // Field trie:Lscala/collection/immutable/HashSet;
       5: aload_0
       6: invokespecial #935                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #941                // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      13: aload_0
      14: invokestatic  #943                // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      17: aload_0
      18: invokestatic  #946                // Method scala/collection/GenSetLike$class.$init$:(Lscala/collection/GenSetLike;)V
      21: aload_0
      22: invokestatic  #949                // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      25: aload_0
      26: invokestatic  #954                // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      29: aload_0
      30: invokestatic  #959                // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      33: aload_0
      34: invokestatic  #964                // Method scala/collection/generic/GenericSetTemplate$class.$init$:(Lscala/collection/generic/GenericSetTemplate;)V
      37: aload_0
      38: invokestatic  #969                // Method scala/collection/GenSet$class.$init$:(Lscala/collection/GenSet;)V
      41: aload_0
      42: invokestatic  #972                // Method scala/collection/generic/GenericParTemplate$class.$init$:(Lscala/collection/generic/GenericParTemplate;)V
      45: aload_0
      46: invokestatic  #975                // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      49: aload_0
      50: invokestatic  #977                // Method scala/collection/parallel/ParIterableLike$class.$init$:(Lscala/collection/parallel/ParIterableLike;)V
      53: aload_0
      54: invokestatic  #982                // Method scala/collection/parallel/ParIterable$class.$init$:(Lscala/collection/parallel/ParIterable;)V
      57: aload_0
      58: invokestatic  #985                // Method scala/collection/parallel/ParSetLike$class.$init$:(Lscala/collection/parallel/ParSetLike;)V
      61: aload_0
      62: invokestatic  #990                // Method scala/collection/parallel/ParSet$class.$init$:(Lscala/collection/parallel/ParSet;)V
      65: aload_0
      66: invokestatic  #993                // Method scala/collection/parallel/immutable/ParIterable$class.$init$:(Lscala/collection/parallel/immutable/ParIterable;)V
      69: aload_0
      70: invokestatic  #996                // Method scala/collection/parallel/immutable/ParSet$class.$init$:(Lscala/collection/parallel/immutable/ParSet;)V
      73: return

  public scala.collection.parallel.immutable.ParHashSet();
    Code:
       0: aload_0
       1: getstatic     #1001               // Field scala/collection/immutable/HashSet$.MODULE$:Lscala/collection/immutable/HashSet$;
       4: invokevirtual #1004               // Method scala/collection/immutable/HashSet$.empty:()Lscala/collection/immutable/Set;
       7: checkcast     #813                // class scala/collection/immutable/HashSet
      10: invokespecial #831                // Method "<init>":(Lscala/collection/immutable/HashSet;)V
      13: return
}
