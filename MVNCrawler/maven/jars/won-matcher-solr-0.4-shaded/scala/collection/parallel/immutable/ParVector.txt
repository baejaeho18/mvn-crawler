Compiled from "ParVector.scala"
public class scala.collection.parallel.immutable.ParVector<T> implements scala.collection.parallel.immutable.ParSeq<T>, scala.Serializable {
  private final scala.collection.immutable.Vector<T> vector;

  private volatile transient scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport;

  private volatile scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$module;

  private volatile scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$module;

  public static <T> scala.collection.generic.CanCombineFrom<scala.collection.parallel.immutable.ParVector<?>, T, scala.collection.parallel.immutable.ParVector<T>> canBuildFrom();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: invokevirtual #23                 // Method scala/collection/parallel/immutable/ParVector$.canBuildFrom:()Lscala/collection/generic/CanCombineFrom;
       6: areturn

  public static scala.collection.GenTraversable iterate(java.lang.Object, int, scala.Function1);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #27                 // Method scala/collection/parallel/immutable/ParVector$.iterate:(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable range(java.lang.Object, java.lang.Object, java.lang.Object, scala.math.Integral);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #31                 // Method scala/collection/parallel/immutable/ParVector$.range:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;
      10: areturn

  public static scala.collection.GenTraversable range(java.lang.Object, java.lang.Object, scala.math.Integral);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #34                 // Method scala/collection/parallel/immutable/ParVector$.range:(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable tabulate(int, int, int, int, int, scala.Function5);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: invokevirtual #38                 // Method scala/collection/parallel/immutable/ParVector$.tabulate:(IIIIILscala/Function5;)Lscala/collection/GenTraversable;
      14: areturn

  public static scala.collection.GenTraversable tabulate(int, int, int, int, scala.Function4);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokevirtual #41                 // Method scala/collection/parallel/immutable/ParVector$.tabulate:(IIIILscala/Function4;)Lscala/collection/GenTraversable;
      12: areturn

  public static scala.collection.GenTraversable tabulate(int, int, int, scala.Function3);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #44                 // Method scala/collection/parallel/immutable/ParVector$.tabulate:(IIILscala/Function3;)Lscala/collection/GenTraversable;
      10: areturn

  public static scala.collection.GenTraversable tabulate(int, int, scala.Function2);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #47                 // Method scala/collection/parallel/immutable/ParVector$.tabulate:(IILscala/Function2;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable tabulate(int, scala.Function1);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: aload_1
       5: invokevirtual #50                 // Method scala/collection/parallel/immutable/ParVector$.tabulate:(ILscala/Function1;)Lscala/collection/GenTraversable;
       8: areturn

  public static scala.collection.GenTraversable fill(int, int, int, int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: invokevirtual #54                 // Method scala/collection/parallel/immutable/ParVector$.fill:(IIIIILscala/Function0;)Lscala/collection/GenTraversable;
      14: areturn

  public static scala.collection.GenTraversable fill(int, int, int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokevirtual #57                 // Method scala/collection/parallel/immutable/ParVector$.fill:(IIIILscala/Function0;)Lscala/collection/GenTraversable;
      12: areturn

  public static scala.collection.GenTraversable fill(int, int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #60                 // Method scala/collection/parallel/immutable/ParVector$.fill:(IIILscala/Function0;)Lscala/collection/GenTraversable;
      10: areturn

  public static scala.collection.GenTraversable fill(int, int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #63                 // Method scala/collection/parallel/immutable/ParVector$.fill:(IILscala/Function0;)Lscala/collection/GenTraversable;
       9: areturn

  public static scala.collection.GenTraversable fill(int, scala.Function0);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: iload_0
       4: aload_1
       5: invokevirtual #66                 // Method scala/collection/parallel/immutable/ParVector$.fill:(ILscala/Function0;)Lscala/collection/GenTraversable;
       8: areturn

  public static scala.collection.GenTraversable concat(scala.collection.Seq);
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: aload_0
       4: invokevirtual #70                 // Method scala/collection/parallel/immutable/ParVector$.concat:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
       7: areturn

  public static scala.collection.generic.GenTraversableFactory<scala.collection.parallel.immutable.ParVector>.GenericCanBuildFrom<scala.runtime.Nothing$> ReusableCBF();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: invokevirtual #74                 // Method scala/collection/parallel/immutable/ParVector$.ReusableCBF:()Lscala/collection/generic/GenTraversableFactory$GenericCanBuildFrom;
       6: areturn

  public static scala.collection.GenTraversable empty();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: invokevirtual #78                 // Method scala/collection/parallel/immutable/ParVector$.empty:()Lscala/collection/GenTraversable;
       6: areturn

  public scala.collection.parallel.immutable.ParSeq<T> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method scala/collection/parallel/immutable/ParSeq$class.toSeq:(Lscala/collection/parallel/immutable/ParSeq;)Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.parallel.immutable.ParIterable<T> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #103                // Method scala/collection/parallel/immutable/ParIterable$class.toIterable:(Lscala/collection/parallel/immutable/ParIterable;)Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #110                // Method scala/collection/parallel/ParSeq$class.toString:(Lscala/collection/parallel/ParSeq;)Ljava/lang/String;
       4: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #113                // Method scala/collection/parallel/ParSeq$class.stringPrefix:(Lscala/collection/parallel/ParSeq;)Ljava/lang/String;
       4: areturn

  public java.lang.Object scala$collection$parallel$ParSeqLike$$super$zip(scala.collection.GenIterable, scala.collection.generic.CanBuildFrom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #121                // Method scala/collection/parallel/ParIterableLike$class.zip:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.parallel.PreciseSplitter<T> iterator();
    Code:
       0: aload_0
       1: invokestatic  #132                // Method scala/collection/parallel/ParSeqLike$class.iterator:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/parallel/PreciseSplitter;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #137                // Method scala/collection/parallel/ParSeqLike$class.size:(Lscala/collection/parallel/ParSeqLike;)I
       4: ireturn

  public int segmentLength(scala.Function1<T, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #142                // Method scala/collection/parallel/ParSeqLike$class.segmentLength:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere(scala.Function1<T, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #149                // Method scala/collection/parallel/ParSeqLike$class.indexWhere:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<T, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #152                // Method scala/collection/parallel/ParSeqLike$class.lastIndexWhere:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;I)I
       6: ireturn

  public scala.collection.parallel.ParSeq reverse();
    Code:
       0: aload_0
       1: invokestatic  #158                // Method scala/collection/parallel/ParSeqLike$class.reverse:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/parallel/ParSeq;
       4: areturn

  public <S, That> That reverseMap(scala.Function1<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #163                // Method scala/collection/parallel/ParSeqLike$class.reverseMap:(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S> boolean startsWith(scala.collection.GenSeq<S>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #169                // Method scala/collection/parallel/ParSeqLike$class.startsWith:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;I)Z
       6: ireturn

  public <U> boolean sameElements(scala.collection.GenIterable<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // Method scala/collection/parallel/ParSeqLike$class.sameElements:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public <S> boolean endsWith(scala.collection.GenSeq<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // Method scala/collection/parallel/ParSeqLike$class.endsWith:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <U, That> That patch(int, scala.collection.GenSeq<U>, int, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #186                // Method scala/collection/parallel/ParSeqLike$class.patch:(Lscala/collection/parallel/ParSeqLike;ILscala/collection/GenSeq;ILscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That updated(int, U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #192                // Method scala/collection/parallel/ParSeqLike$class.updated:(Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <U, That> That $plus$colon(U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #200                // Method scala/collection/parallel/ParSeqLike$class.$plus$colon:(Lscala/collection/parallel/ParSeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That $colon$plus(U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #203                // Method scala/collection/parallel/ParSeqLike$class.$colon$plus:(Lscala/collection/parallel/ParSeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <U, That> That padTo(int, U, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #206                // Method scala/collection/parallel/ParSeqLike$class.padTo:(Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <U, S, That> That zip(scala.collection.GenIterable<S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #210                // Method scala/collection/parallel/ParSeqLike$class.zip:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S> boolean corresponds(scala.collection.GenSeq<S>, scala.Function2<T, S, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #215                // Method scala/collection/parallel/ParSeqLike$class.corresponds:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.parallel.ParSeq diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #221                // Method scala/collection/parallel/ParSeqLike$class.diff:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public scala.collection.parallel.ParSeq intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #224                // Method scala/collection/parallel/ParSeqLike$class.intersect:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public scala.collection.parallel.ParSeq distinct();
    Code:
       0: aload_0
       1: invokestatic  #227                // Method scala/collection/parallel/ParSeqLike$class.distinct:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/parallel/ParSeq;
       4: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #232                // Method scala/collection/parallel/ParSeqLike$class.view:(Lscala/collection/parallel/ParSeqLike;)Lscala/collection/SeqView;
       4: areturn

  public scala.collection.parallel.SeqSplitter<T> down(scala.collection.parallel.IterableSplitter<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #237                // Method scala/collection/parallel/ParSeqLike$class.down:(Lscala/collection/parallel/ParSeqLike;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.TaskSupport scala$collection$parallel$ParIterableLike$$_tasksupport();
    Code:
       0: aload_0
       1: getfield      #241                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void scala$collection$parallel$ParIterableLike$$_tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #241                // Field scala$collection$parallel$ParIterableLike$$_tasksupport:Lscala/collection/parallel/TaskSupport;
       5: return

  private scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #249                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       8: ifnonnull     23
      11: aload_0
      12: new           #251                // class scala/collection/parallel/ParIterableLike$ScanNode$
      15: dup
      16: aload_0
      17: invokespecial #255                // Method scala/collection/parallel/ParIterableLike$ScanNode$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #249                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      23: getstatic     #261                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #249                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanNode$ ScanNode();
    Code:
       0: aload_0
       1: getfield      #249                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #266                // Method ScanNode$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanNode$;
      11: goto          18
      14: aload_0
      15: getfield      #249                // Field ScanNode$module:Lscala/collection/parallel/ParIterableLike$ScanNode$;
      18: areturn

  private scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #270                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       8: ifnonnull     23
      11: aload_0
      12: new           #272                // class scala/collection/parallel/ParIterableLike$ScanLeaf$
      15: dup
      16: aload_0
      17: invokespecial #273                // Method scala/collection/parallel/ParIterableLike$ScanLeaf$."<init>":(Lscala/collection/parallel/ParIterableLike;)V
      20: putfield      #270                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      23: getstatic     #261                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      26: pop
      27: aload_0
      28: monitorexit
      29: aload_0
      30: getfield      #270                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      33: areturn
      34: aload_1
      35: monitorexit
      36: athrow
    Exception table:
       from    to  target type
           4    29    34   any

  public scala.collection.parallel.ParIterableLike$ScanLeaf$ ScanLeaf();
    Code:
       0: aload_0
       1: getfield      #270                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #276                // Method ScanLeaf$lzycompute:()Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      11: goto          18
      14: aload_0
      15: getfield      #270                // Field ScanLeaf$module:Lscala/collection/parallel/ParIterableLike$ScanLeaf$;
      18: areturn

  public void initTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #280                // Method scala/collection/parallel/ParIterableLike$class.initTaskSupport:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.TaskSupport tasksupport();
    Code:
       0: aload_0
       1: invokestatic  #284                // Method scala/collection/parallel/ParIterableLike$class.tasksupport:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void tasksupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // Method scala/collection/parallel/ParIterableLike$class.tasksupport_$eq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public scala.collection.parallel.ParIterable repr();
    Code:
       0: aload_0
       1: invokestatic  #294                // Method scala/collection/parallel/ParIterableLike$class.repr:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #299                // Method scala/collection/parallel/ParIterableLike$class.isTraversableAgain:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #302                // Method scala/collection/parallel/ParIterableLike$class.hasDefiniteSize:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #305                // Method scala/collection/parallel/ParIterableLike$class.isEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #308                // Method scala/collection/parallel/ParIterableLike$class.nonEmpty:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public T head();
    Code:
       0: aload_0
       1: invokestatic  #313                // Method scala/collection/parallel/ParIterableLike$class.head:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<T> headOption();
    Code:
       0: aload_0
       1: invokestatic  #318                // Method scala/collection/parallel/ParIterableLike$class.headOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable tail();
    Code:
       0: aload_0
       1: invokestatic  #321                // Method scala/collection/parallel/ParIterableLike$class.tail:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public T last();
    Code:
       0: aload_0
       1: invokestatic  #324                // Method scala/collection/parallel/ParIterableLike$class.last:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<T> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #327                // Method scala/collection/parallel/ParIterableLike$class.lastOption:(Lscala/collection/parallel/ParIterableLike;)Lscala/Option;
       4: areturn

  public scala.collection.parallel.ParIterable init();
    Code:
       0: aload_0
       1: invokestatic  #330                // Method scala/collection/parallel/ParIterableLike$class.init:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable par();
    Code:
       0: aload_0
       1: invokestatic  #333                // Method scala/collection/parallel/ParIterableLike$class.par:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/ParIterable;
       4: areturn

  public boolean isStrictSplitterCollection();
    Code:
       0: aload_0
       1: invokestatic  #336                // Method scala/collection/parallel/ParIterableLike$class.isStrictSplitterCollection:(Lscala/collection/parallel/ParIterableLike;)Z
       4: ireturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reuse(scala.Option<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #341                // Method scala/collection/parallel/ParIterableLike$class.reuse:(Lscala/collection/parallel/ParIterableLike;Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <R, Tp> java.lang.Object task2ops(scala.collection.parallel.ParIterableLike<T, scala.collection.parallel.immutable.ParVector<T>, scala.collection.immutable.Vector<T>>.StrictSplitterCheckTask<R, Tp>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // Method scala/collection/parallel/ParIterableLike$class.task2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Lscala/collection/parallel/ParIterableLike$TaskOps;
       5: areturn

  public <R> java.lang.Object wrap(scala.Function0<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #357                // Method scala/collection/parallel/ParIterableLike$class.wrap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/ParIterableLike$NonDivisible;
       5: areturn

  public <PI extends scala.collection.generic.DelegatedSignalling> java.lang.Object delegatedSignalling2ops(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #364                // Method scala/collection/parallel/ParIterableLike$class.delegatedSignalling2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/DelegatedSignalling;)Lscala/collection/parallel/ParIterableLike$SignallingOps;
       5: areturn

  public <Elem, To> java.lang.Object builder2ops(scala.collection.mutable.Builder<Elem, To>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #371                // Method scala/collection/parallel/ParIterableLike$class.builder2ops:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/mutable/Builder;)Lscala/collection/parallel/ParIterableLike$BuilderOps;
       5: areturn

  public <S, That> java.lang.Object bf2seq(scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #378                // Method scala/collection/parallel/ParIterableLike$class.bf2seq:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Lscala/collection/generic/CanBuildFrom;
       5: areturn

  public scala.collection.parallel.ParIterable sequentially(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #383                // Method scala/collection/parallel/ParIterableLike$class.sequentially:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #389                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #396                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #399                // Method scala/collection/parallel/ParIterableLike$class.mkString:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // Method scala/collection/parallel/ParIterableLike$class.canEqual:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <U> U reduce(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #410                // Method scala/collection/parallel/ParIterableLike$class.reduce:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceOption(scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // Method scala/collection/parallel/ParIterableLike$class.reduceOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> U fold(U, scala.Function2<U, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #421                // Method scala/collection/parallel/ParIterableLike$class.fold:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S aggregate(scala.Function0<S>, scala.Function2<S, T, S>, scala.Function2<S, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #427                // Method scala/collection/parallel/ParIterableLike$class.aggregate:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <S> S foldLeft(S, scala.Function2<S, T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #432                // Method scala/collection/parallel/ParIterableLike$class.foldLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S foldRight(S, scala.Function2<T, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #435                // Method scala/collection/parallel/ParIterableLike$class.foldRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <U> U reduceLeft(scala.Function2<U, T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #438                // Method scala/collection/parallel/ParIterableLike$class.reduceLeft:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> U reduceRight(scala.Function2<T, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #441                // Method scala/collection/parallel/ParIterableLike$class.reduceRight:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <U> scala.Option<U> reduceLeftOption(scala.Function2<U, T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #444                // Method scala/collection/parallel/ParIterableLike$class.reduceLeftOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> scala.Option<U> reduceRightOption(scala.Function2<T, U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #447                // Method scala/collection/parallel/ParIterableLike$class.reduceRightOption:(Lscala/collection/parallel/ParIterableLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <U> void foreach(scala.Function1<T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #452                // Method scala/collection/parallel/ParIterableLike$class.foreach:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)V
       5: return

  public int count(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #457                // Method scala/collection/parallel/ParIterableLike$class.count:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)I
       5: ireturn

  public <U> U sum(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #462                // Method scala/collection/parallel/ParIterableLike$class.sum:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> U product(scala.math.Numeric<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #467                // Method scala/collection/parallel/ParIterableLike$class.product:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <U> T min(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #472                // Method scala/collection/parallel/ParIterableLike$class.min:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <U> T max(scala.math.Ordering<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #477                // Method scala/collection/parallel/ParIterableLike$class.max:(Lscala/collection/parallel/ParIterableLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <S> T maxBy(scala.Function1<T, S>, scala.math.Ordering<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #482                // Method scala/collection/parallel/ParIterableLike$class.maxBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S> T minBy(scala.Function1<T, S>, scala.math.Ordering<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #486                // Method scala/collection/parallel/ParIterableLike$class.minBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <S, That> That map(scala.Function1<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #490                // Method scala/collection/parallel/ParIterableLike$class.map:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That collect(scala.PartialFunction<T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #495                // Method scala/collection/parallel/ParIterableLike$class.collect:(Lscala/collection/parallel/ParIterableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <S, That> That flatMap(scala.Function1<T, scala.collection.GenTraversableOnce<S>>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #500                // Method scala/collection/parallel/ParIterableLike$class.flatMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean forall(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #505                // Method scala/collection/parallel/ParIterableLike$class.forall:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #508                // Method scala/collection/parallel/ParIterableLike$class.exists:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<T> find(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #513                // Method scala/collection/parallel/ParIterableLike$class.find:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public java.lang.Object combinerFactory();
    Code:
       0: aload_0
       1: invokestatic  #518                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/CombinerFactory;
       4: areturn

  public <S, That> java.lang.Object combinerFactory(scala.Function0<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #522                // Method scala/collection/parallel/ParIterableLike$class.combinerFactory:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Lscala/collection/parallel/CombinerFactory;
       5: areturn

  public scala.collection.parallel.ParIterable withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #526                // Method scala/collection/parallel/ParIterableLike$class.withFilter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #530                // Method scala/collection/parallel/ParIterableLike$class.filter:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #533                // Method scala/collection/parallel/ParIterableLike$class.filterNot:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U, That> That $plus$plus(scala.collection.GenTraversableOnce<U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #538                // Method scala/collection/parallel/ParIterableLike$class.$plus$plus:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParVector<T>, scala.collection.parallel.immutable.ParVector<T>> partition(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #544                // Method scala/collection/parallel/ParIterableLike$class.partition:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.parallel.immutable.ParMap<K, scala.collection.parallel.immutable.ParVector<T>> groupBy(scala.Function1<T, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #549                // Method scala/collection/parallel/ParIterableLike$class.groupBy:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.parallel.ParIterable take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #554                // Method scala/collection/parallel/ParIterableLike$class.take:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #558                // Method scala/collection/parallel/ParIterableLike$class.drop:(Lscala/collection/parallel/ParIterableLike;I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.parallel.ParIterable slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #563                // Method scala/collection/parallel/ParIterableLike$class.slice:(Lscala/collection/parallel/ParIterableLike;II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParVector<T>, scala.collection.parallel.immutable.ParVector<T>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #570                // Method scala/collection/parallel/ParIterableLike$class.splitAt:(Lscala/collection/parallel/ParIterableLike;I)Lscala/Tuple2;
       5: areturn

  public <U, That> That scan(U, scala.Function2<U, U, U>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, U, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #575                // Method scala/collection/parallel/ParIterableLike$class.scan:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanLeft(S, scala.Function2<S, T, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #578                // Method scala/collection/parallel/ParIterableLike$class.scanLeft:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <S, That> That scanRight(S, scala.Function2<T, S, S>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #581                // Method scala/collection/parallel/ParIterableLike$class.scanRight:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.collection.parallel.ParIterable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #584                // Method scala/collection/parallel/ParIterableLike$class.takeWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.Tuple2<scala.collection.parallel.immutable.ParVector<T>, scala.collection.parallel.immutable.ParVector<T>> span(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #587                // Method scala/collection/parallel/ParIterableLike$class.span:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.parallel.ParIterable dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #590                // Method scala/collection/parallel/ParIterableLike$class.dropWhile:(Lscala/collection/parallel/ParIterableLike;Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public <U> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #595                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;)V
       5: return

  public <U> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #600                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;I)V
       6: return

  public <U> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #604                // Method scala/collection/parallel/ParIterableLike$class.copyToArray:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;II)V
       7: return

  public <U, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, scala.Tuple2<U, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #609                // Method scala/collection/parallel/ParIterableLike$class.zipWithIndex:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <S, U, That> That zipAll(scala.collection.GenIterable<S>, U, S, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, scala.Tuple2<U, S>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #614                // Method scala/collection/parallel/ParIterableLike$class.zipAll:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <U, That> That toParCollection(scala.Function0<scala.collection.parallel.Combiner<U, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #621                // Method scala/collection/parallel/ParIterableLike$class.toParCollection:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public <K, V, That> That toParMap(scala.Function0<scala.collection.parallel.Combiner<scala.Tuple2<K, V>, That>>, scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #626                // Method scala/collection/parallel/ParIterableLike$class.toParMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Function0;Lscala/Predef$$less$colon$less;)Ljava/lang/Object;
       6: areturn

  public <U> java.lang.Object toArray(scala.reflect.ClassTag<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #633                // Method scala/collection/parallel/ParIterableLike$class.toArray:(Lscala/collection/parallel/ParIterableLike;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<T> toList();
    Code:
       0: aload_0
       1: invokestatic  #640                // Method scala/collection/parallel/ParIterableLike$class.toList:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<T> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #645                // Method scala/collection/parallel/ParIterableLike$class.toIndexedSeq:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Stream<T> toStream();
    Code:
       0: aload_0
       1: invokestatic  #650                // Method scala/collection/parallel/ParIterableLike$class.toStream:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public scala.collection.Iterator<T> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #655                // Method scala/collection/parallel/ParIterableLike$class.toIterator:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Iterator;
       4: areturn

  public <U> scala.collection.mutable.Buffer<U> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #660                // Method scala/collection/parallel/ParIterableLike$class.toBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.GenTraversable<T> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #664                // Method scala/collection/parallel/ParIterableLike$class.toTraversable:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/GenTraversable;
       4: areturn

  public <U> scala.collection.parallel.immutable.ParSet<U> toSet();
    Code:
       0: aload_0
       1: invokestatic  #669                // Method scala/collection/parallel/ParIterableLike$class.toSet:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public <K, V> scala.collection.parallel.immutable.ParMap<K, V> toMap(scala.Predef$$less$colon$less<T, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #674                // Method scala/collection/parallel/ParIterableLike$class.toMap:(Lscala/collection/parallel/ParIterableLike;Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, T, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #677                // Method scala/collection/parallel/ParIterableLike$class.to:(Lscala/collection/parallel/ParIterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public int scanBlockSize();
    Code:
       0: aload_0
       1: invokestatic  #681                // Method scala/collection/parallel/ParIterableLike$class.scanBlockSize:(Lscala/collection/parallel/ParIterableLike;)I
       4: ireturn

  public <S> S $div$colon(S, scala.Function2<S, T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #684                // Method scala/collection/parallel/ParIterableLike$class.$div$colon:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <S> S $colon$bslash(S, scala.Function2<T, S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #687                // Method scala/collection/parallel/ParIterableLike$class.$colon$bslash:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.String debugInformation();
    Code:
       0: aload_0
       1: invokestatic  #690                // Method scala/collection/parallel/ParIterableLike$class.debugInformation:(Lscala/collection/parallel/ParIterableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.Seq<java.lang.String> brokenInvariants();
    Code:
       0: aload_0
       1: invokestatic  #695                // Method scala/collection/parallel/ParIterableLike$class.brokenInvariants:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #700                // Method scala/collection/parallel/ParIterableLike$class.debugBuffer:(Lscala/collection/parallel/ParIterableLike;)Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public void debugclear();
    Code:
       0: aload_0
       1: invokestatic  #703                // Method scala/collection/parallel/ParIterableLike$class.debugclear:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debuglog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #708                // Method scala/collection/parallel/ParIterableLike$class.debuglog:(Lscala/collection/parallel/ParIterableLike;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
       5: areturn

  public void printDebugBuffer();
    Code:
       0: aload_0
       1: invokestatic  #712                // Method scala/collection/parallel/ParIterableLike$class.printDebugBuffer:(Lscala/collection/parallel/ParIterableLike;)V
       4: return

  public scala.collection.parallel.Combiner<T, scala.collection.parallel.immutable.ParVector<T>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #719                // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.Builder<T, scala.collection.parallel.immutable.ParVector<T>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #726                // Method scala/collection/generic/GenericParTemplate$class.newBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.parallel.Combiner<T, scala.collection.parallel.immutable.ParVector<T>> newCombiner();
    Code:
       0: aload_0
       1: invokestatic  #730                // Method scala/collection/generic/GenericParTemplate$class.newCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.immutable.ParVector<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #733                // Method scala/collection/generic/GenericParTemplate$class.genericBuilder:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <B> scala.collection.parallel.Combiner<B, scala.collection.parallel.immutable.ParVector<B>> genericCombiner();
    Code:
       0: aload_0
       1: invokestatic  #736                // Method scala/collection/generic/GenericParTemplate$class.genericCombiner:(Lscala/collection/generic/GenericParTemplate;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.parallel.immutable.ParVector<A1>, scala.collection.parallel.immutable.ParVector<A2>> unzip(scala.Function1<T, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #742                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.parallel.immutable.ParVector<A1>, scala.collection.parallel.immutable.ParVector<A2>, scala.collection.parallel.immutable.ParVector<A3>> unzip3(scala.Function1<T, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #748                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #754                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #758                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public boolean isDefinedAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #765                // Method scala/collection/GenSeqLike$class.isDefinedAt:(Lscala/collection/GenSeqLike;I)Z
       5: ireturn

  public int prefixLength(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #770                // Method scala/collection/GenSeqLike$class.prefixLength:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #772                // Method scala/collection/GenSeqLike$class.indexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #777                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #781                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int lastIndexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #784                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int lastIndexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #786                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #788                // Method scala/collection/GenSeqLike$class.lastIndexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #791                // Method scala/collection/GenSeqLike$class.startsWith:(Lscala/collection/GenSeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <B, That> That union(scala.collection.GenSeq<B>, scala.collection.generic.CanBuildFrom<scala.collection.parallel.immutable.ParVector<T>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #796                // Method scala/collection/GenSeqLike$class.union:(Lscala/collection/GenSeqLike;Lscala/collection/GenSeq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #800                // Method scala/collection/GenSeqLike$class.hashCode:(Lscala/collection/GenSeqLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #804                // Method scala/collection/GenSeqLike$class.equals:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.parallel.immutable.ParVector$ companion();
    Code:
       0: getstatic     #21                 // Field scala/collection/parallel/immutable/ParVector$.MODULE$:Lscala/collection/parallel/immutable/ParVector$;
       3: areturn

  public T apply(int);
    Code:
       0: aload_0
       1: getfield      #810                // Field vector:Lscala/collection/immutable/Vector;
       4: iload_1
       5: invokevirtual #814                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
       8: areturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #810                // Field vector:Lscala/collection/immutable/Vector;
       4: invokevirtual #817                // Method scala/collection/immutable/Vector.length:()I
       7: ireturn

  public scala.collection.parallel.SeqSplitter<T> splitter();
    Code:
       0: new           #821                // class scala/collection/parallel/immutable/ParVector$ParVectorIterator
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #810                // Field vector:Lscala/collection/immutable/Vector;
       9: invokevirtual #824                // Method scala/collection/immutable/Vector.startIndex:()I
      12: aload_0
      13: getfield      #810                // Field vector:Lscala/collection/immutable/Vector;
      16: invokevirtual #827                // Method scala/collection/immutable/Vector.endIndex:()I
      19: invokespecial #830                // Method scala/collection/parallel/immutable/ParVector$ParVectorIterator."<init>":(Lscala/collection/parallel/immutable/ParVector;II)V
      22: astore_1
      23: aload_0
      24: getfield      #810                // Field vector:Lscala/collection/immutable/Vector;
      27: aload_1
      28: invokevirtual #834                // Method scala/collection/immutable/Vector.initIterator:(Lscala/collection/immutable/VectorIterator;)V
      31: aload_1
      32: areturn

  public scala.collection.immutable.Vector<T> seq();
    Code:
       0: aload_0
       1: getfield      #810                // Field vector:Lscala/collection/immutable/Vector;
       4: areturn

  public scala.collection.immutable.Vector<T> toVector();
    Code:
       0: aload_0
       1: getfield      #810                // Field vector:Lscala/collection/immutable/Vector;
       4: areturn

  public scala.collection.mutable.Builder genericBuilder();
    Code:
       0: aload_0
       1: invokevirtual #841                // Method genericBuilder:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #844                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #847                // Method toSet:()Lscala/collection/parallel/immutable/ParSet;
       4: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #850                // Method dropWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #852                // Method takeWhile:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #855                // Method slice:(II)Lscala/collection/parallel/ParIterable;
       6: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #857                // Method drop:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #859                // Method take:(I)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #862                // Method groupBy:(Lscala/Function1;)Lscala/collection/parallel/immutable/ParMap;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #864                // Method filterNot:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #866                // Method filter:(Lscala/Function1;)Lscala/collection/parallel/ParIterable;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #869                // Method par:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #871                // Method init:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #873                // Method tail:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokevirtual #875                // Method repr:()Lscala/collection/parallel/ParIterable;
       4: areturn

  public scala.collection.IterableView view();
    Code:
       0: aload_0
       1: invokevirtual #878                // Method view:()Lscala/collection/SeqView;
       4: areturn

  public java.lang.Object distinct();
    Code:
       0: aload_0
       1: invokevirtual #880                // Method distinct:()Lscala/collection/parallel/ParSeq;
       4: areturn

  public java.lang.Object intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #883                // Method intersect:(Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public java.lang.Object diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #885                // Method diff:(Lscala/collection/GenSeq;)Lscala/collection/parallel/ParSeq;
       5: areturn

  public java.lang.Object reverse();
    Code:
       0: aload_0
       1: invokevirtual #887                // Method reverse:()Lscala/collection/parallel/ParSeq;
       4: areturn

  public scala.collection.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #889                // Method iterator:()Lscala/collection/parallel/PreciseSplitter;
       4: areturn

  public scala.collection.parallel.Splitter iterator();
    Code:
       0: aload_0
       1: invokevirtual #889                // Method iterator:()Lscala/collection/parallel/PreciseSplitter;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #893                // Method toIterable:()Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.parallel.ParIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #893                // Method toIterable:()Lscala/collection/parallel/immutable/ParIterable;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #896                // Method toSeq:()Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.parallel.ParSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #896                // Method toSeq:()Lscala/collection/parallel/immutable/ParSeq;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #899                // Method seq:()Lscala/collection/immutable/Vector;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #899                // Method seq:()Lscala/collection/immutable/Vector;
       4: areturn

  public scala.collection.Seq seq();
    Code:
       0: aload_0
       1: invokevirtual #899                // Method seq:()Lscala/collection/immutable/Vector;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #899                // Method seq:()Lscala/collection/immutable/Vector;
       4: areturn

  public scala.collection.parallel.IterableSplitter splitter();
    Code:
       0: aload_0
       1: invokevirtual #904                // Method splitter:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.generic.GenericCompanion companion();
    Code:
       0: aload_0
       1: invokevirtual #907                // Method companion:()Lscala/collection/parallel/immutable/ParVector$;
       4: areturn

  public scala.collection.parallel.immutable.ParVector(scala.collection.immutable.Vector<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #810                // Field vector:Lscala/collection/immutable/Vector;
       5: aload_0
       6: invokespecial #910                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #916                // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      13: aload_0
      14: invokestatic  #919                // Method scala/collection/GenSeqLike$class.$init$:(Lscala/collection/GenSeqLike;)V
      17: aload_0
      18: invokestatic  #922                // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      21: aload_0
      22: invokestatic  #927                // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      25: aload_0
      26: invokestatic  #932                // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      29: aload_0
      30: invokestatic  #937                // Method scala/collection/GenSeq$class.$init$:(Lscala/collection/GenSeq;)V
      33: aload_0
      34: invokestatic  #940                // Method scala/collection/generic/GenericParTemplate$class.$init$:(Lscala/collection/generic/GenericParTemplate;)V
      37: aload_0
      38: invokestatic  #943                // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      41: aload_0
      42: invokestatic  #945                // Method scala/collection/parallel/ParIterableLike$class.$init$:(Lscala/collection/parallel/ParIterableLike;)V
      45: aload_0
      46: invokestatic  #950                // Method scala/collection/parallel/ParIterable$class.$init$:(Lscala/collection/parallel/ParIterable;)V
      49: aload_0
      50: invokestatic  #953                // Method scala/collection/parallel/ParSeqLike$class.$init$:(Lscala/collection/parallel/ParSeqLike;)V
      53: aload_0
      54: invokestatic  #956                // Method scala/collection/parallel/ParSeq$class.$init$:(Lscala/collection/parallel/ParSeq;)V
      57: aload_0
      58: invokestatic  #959                // Method scala/collection/parallel/immutable/ParIterable$class.$init$:(Lscala/collection/parallel/immutable/ParIterable;)V
      61: aload_0
      62: invokestatic  #962                // Method scala/collection/parallel/immutable/ParSeq$class.$init$:(Lscala/collection/parallel/immutable/ParSeq;)V
      65: return

  public scala.collection.parallel.immutable.ParVector();
    Code:
       0: aload_0
       1: getstatic     #967                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       4: getstatic     #972                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       7: invokevirtual #974                // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      10: checkcast     #812                // class scala/collection/immutable/Vector
      13: invokespecial #976                // Method "<init>":(Lscala/collection/immutable/Vector;)V
      16: return
}
