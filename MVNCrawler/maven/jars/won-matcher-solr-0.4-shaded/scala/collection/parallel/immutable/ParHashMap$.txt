Compiled from "ParHashMap.scala"
public final class scala.collection.parallel.immutable.ParHashMap$ extends scala.collection.generic.ParMapFactory<scala.collection.parallel.immutable.ParHashMap> implements scala.Serializable {
  public static final scala.collection.parallel.immutable.ParHashMap$ MODULE$;

  private java.util.concurrent.atomic.AtomicInteger totalcombines;

  public static {};
    Code:
       0: new           #2                  // class scala/collection/parallel/immutable/ParHashMap$
       3: invokespecial #15                 // Method "<init>":()V
       6: return

  public <K, V> scala.collection.parallel.immutable.ParHashMap<K, V> empty();
    Code:
       0: new           #21                 // class scala/collection/parallel/immutable/ParHashMap
       3: dup
       4: invokespecial #22                 // Method scala/collection/parallel/immutable/ParHashMap."<init>":()V
       7: areturn

  public <K, V> scala.collection.parallel.Combiner<scala.Tuple2<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>> newCombiner();
    Code:
       0: getstatic     #30                 // Field scala/collection/parallel/immutable/HashMapCombiner$.MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
       3: invokevirtual #34                 // Method scala/collection/parallel/immutable/HashMapCombiner$.apply:()Lscala/collection/parallel/immutable/HashMapCombiner;
       6: areturn

  public <K, V> scala.collection.generic.CanCombineFrom<scala.collection.parallel.immutable.ParHashMap<?, ?>, scala.Tuple2<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>> canBuildFrom();
    Code:
       0: new           #38                 // class scala/collection/generic/ParMapFactory$CanCombineFromMap
       3: dup
       4: aload_0
       5: invokespecial #41                 // Method scala/collection/generic/ParMapFactory$CanCombineFromMap."<init>":(Lscala/collection/generic/ParMapFactory;)V
       8: areturn

  public <K, V> scala.collection.parallel.immutable.ParHashMap<K, V> fromTrie(scala.collection.immutable.HashMap<K, V>);
    Code:
       0: new           #21                 // class scala/collection/parallel/immutable/ParHashMap
       3: dup
       4: aload_1
       5: invokespecial #46                 // Method scala/collection/parallel/immutable/ParHashMap."<init>":(Lscala/collection/immutable/HashMap;)V
       8: areturn

  public java.util.concurrent.atomic.AtomicInteger totalcombines();
    Code:
       0: aload_0
       1: getfield      #51                 // Field totalcombines:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  public void totalcombines_$eq(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field totalcombines:Ljava/util/concurrent/atomic/AtomicInteger;
       5: return

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #58                 // Field MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       3: areturn

  public scala.collection.GenMap empty();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method empty:()Lscala/collection/parallel/immutable/ParHashMap;
       4: areturn

  private scala.collection.parallel.immutable.ParHashMap$();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method scala/collection/generic/ParMapFactory."<init>":()V
       4: aload_0
       5: putstatic     #58                 // Field MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       8: aload_0
       9: new           #64                 // class java/util/concurrent/atomic/AtomicInteger
      12: dup
      13: iconst_0
      14: invokespecial #67                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      17: putfield      #51                 // Field totalcombines:Ljava/util/concurrent/atomic/AtomicInteger;
      20: return
}
