Compiled from "package.scala"
public final class scala.collection.parallel.immutable.Repetition$ParIterator$$anonfun$psplit$2 extends scala.runtime.AbstractFunction1<scala.Tuple2<java.lang.Object, java.lang.Object>, scala.collection.parallel.immutable.Repetition<T>.ParIterator> implements scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.parallel.immutable.Repetition$ParIterator $outer;

  public final scala.collection.parallel.immutable.Repetition<T>.ParIterator apply(scala.Tuple2<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        69
       4: new           #10                 // class scala/collection/parallel/immutable/Repetition$ParIterator
       7: dup
       8: aload_0
       9: getfield      #23                 // Field $outer:Lscala/collection/parallel/immutable/Repetition$ParIterator;
      12: invokevirtual #27                 // Method scala/collection/parallel/immutable/Repetition$ParIterator.scala$collection$parallel$immutable$Repetition$ParIterator$$$outer:()Lscala/collection/parallel/immutable/Repetition;
      15: aload_0
      16: getfield      #23                 // Field $outer:Lscala/collection/parallel/immutable/Repetition$ParIterator;
      19: invokevirtual #31                 // Method scala/collection/parallel/immutable/Repetition$ParIterator.i:()I
      22: aload_1
      23: invokevirtual #36                 // Method scala/Tuple2._1$mcI$sp:()I
      26: iadd
      27: getstatic     #42                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      30: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: aload_0
      34: getfield      #23                 // Field $outer:Lscala/collection/parallel/immutable/Repetition$ParIterator;
      37: invokevirtual #31                 // Method scala/collection/parallel/immutable/Repetition$ParIterator.i:()I
      40: aload_1
      41: invokevirtual #50                 // Method scala/Tuple2._2$mcI$sp:()I
      44: iadd
      45: istore_3
      46: astore_2
      47: iload_3
      48: aload_0
      49: getfield      #23                 // Field $outer:Lscala/collection/parallel/immutable/Repetition$ParIterator;
      52: invokevirtual #53                 // Method scala/collection/parallel/immutable/Repetition$ParIterator.until:()I
      55: invokevirtual #57                 // Method scala/runtime/RichInt$.min$extension:(II)I
      58: aload_0
      59: getfield      #23                 // Field $outer:Lscala/collection/parallel/immutable/Repetition$ParIterator;
      62: getfield      #61                 // Field scala/collection/parallel/immutable/Repetition$ParIterator.scala$collection$parallel$immutable$Repetition$ParIterator$$elem:Ljava/lang/Object;
      65: invokespecial #65                 // Method scala/collection/parallel/immutable/Repetition$ParIterator."<init>":(Lscala/collection/parallel/immutable/Repetition;IILjava/lang/Object;)V
      68: areturn
      69: new           #67                 // class scala/MatchError
      72: dup
      73: aload_1
      74: invokespecial #70                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      77: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class scala/Tuple2
       5: invokevirtual #77                 // Method apply:(Lscala/Tuple2;)Lscala/collection/parallel/immutable/Repetition$ParIterator;
       8: areturn

  public scala.collection.parallel.immutable.Repetition$ParIterator$$anonfun$psplit$2(scala.collection.parallel.immutable.Repetition<T>.ParIterator);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lscala/collection/parallel/immutable/Repetition$ParIterator;
      11: aload_0
      12: invokespecial #82                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
