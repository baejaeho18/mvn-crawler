Compiled from "ParVector.scala"
public class scala.collection.parallel.immutable.LazyParVectorCombiner<T> implements scala.collection.parallel.Combiner<T, scala.collection.parallel.immutable.ParVector<T>> {
  private int sz;

  private final scala.collection.mutable.ArrayBuffer<scala.collection.immutable.VectorBuilder<T>> vectors;

  private volatile transient scala.collection.parallel.TaskSupport _combinerTaskSupport;

  public scala.collection.parallel.TaskSupport _combinerTaskSupport();
    Code:
       0: aload_0
       1: getfield      #21                 // Field _combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void _combinerTaskSupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field _combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
       5: return

  public scala.collection.parallel.TaskSupport combinerTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method scala/collection/parallel/Combiner$class.combinerTaskSupport:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/TaskSupport;
       4: areturn

  public void combinerTaskSupport_$eq(scala.collection.parallel.TaskSupport);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method scala/collection/parallel/Combiner$class.combinerTaskSupport_$eq:(Lscala/collection/parallel/Combiner;Lscala/collection/parallel/TaskSupport;)V
       5: return

  public boolean canBeShared();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method scala/collection/parallel/Combiner$class.canBeShared:(Lscala/collection/parallel/Combiner;)Z
       4: ireturn

  public java.lang.Object resultWithTaskSupport();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/parallel/Combiner$class.resultWithTaskSupport:(Lscala/collection/parallel/Combiner;)Ljava/lang/Object;
       4: areturn

  public void sizeHint(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #55                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;I)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #66                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I)V
       6: return

  public void sizeHintBounded(int, scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #72                 // Method scala/collection/mutable/Builder$class.sizeHintBounded:(Lscala/collection/mutable/Builder;ILscala/collection/TraversableLike;)V
       6: return

  public <NewTo> scala.collection.mutable.Builder<T, NewTo> mapResult(scala.Function1<scala.collection.parallel.immutable.ParVector<T>, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
       5: areturn

  public scala.collection.generic.Growable<T> $plus$eq(T, T, scala.collection.Seq<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #87                 // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<T> $plus$plus$eq(scala.collection.TraversableOnce<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #97                 // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public int sz();
    Code:
       0: aload_0
       1: getfield      #102                // Field sz:I
       4: ireturn

  public void sz_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #102                // Field sz:I
       5: return

  public scala.collection.mutable.ArrayBuffer<scala.collection.immutable.VectorBuilder<T>> vectors();
    Code:
       0: aload_0
       1: getfield      #106                // Field vectors:Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method sz:()I
       4: ireturn

  public scala.collection.parallel.immutable.LazyParVectorCombiner<T> $plus$eq(T);
    Code:
       0: aload_0
       1: invokevirtual #111                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
       4: invokevirtual #116                // Method scala/collection/mutable/ArrayBuffer.last:()Ljava/lang/Object;
       7: checkcast     #118                // class scala/collection/immutable/VectorBuilder
      10: aload_1
      11: invokevirtual #121                // Method scala/collection/immutable/VectorBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
      14: pop
      15: aload_0
      16: aload_0
      17: invokevirtual #108                // Method sz:()I
      20: iconst_1
      21: iadd
      22: invokevirtual #123                // Method sz_$eq:(I)V
      25: aload_0
      26: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
       4: invokevirtual #128                // Method scala/collection/mutable/ArrayBuffer.clear:()V
       7: aload_0
       8: invokevirtual #111                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
      11: new           #118                // class scala/collection/immutable/VectorBuilder
      14: dup
      15: invokespecial #131                // Method scala/collection/immutable/VectorBuilder."<init>":()V
      18: invokevirtual #134                // Method scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
      21: pop
      22: aload_0
      23: iconst_0
      24: invokevirtual #123                // Method sz_$eq:(I)V
      27: return

  public scala.collection.parallel.immutable.ParVector<T> result();
    Code:
       0: new           #118                // class scala/collection/immutable/VectorBuilder
       3: dup
       4: invokespecial #131                // Method scala/collection/immutable/VectorBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #111                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
      12: new           #138                // class scala/collection/parallel/immutable/LazyParVectorCombiner$$anonfun$result$1
      15: dup
      16: aload_0
      17: aload_1
      18: invokespecial #141                // Method scala/collection/parallel/immutable/LazyParVectorCombiner$$anonfun$result$1."<init>":(Lscala/collection/parallel/immutable/LazyParVectorCombiner;Lscala/collection/immutable/VectorBuilder;)V
      21: invokevirtual #145                // Method scala/collection/mutable/ArrayBuffer.foreach:(Lscala/Function1;)V
      24: new           #147                // class scala/collection/parallel/immutable/ParVector
      27: dup
      28: aload_1
      29: invokevirtual #150                // Method scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
      32: invokespecial #153                // Method scala/collection/parallel/immutable/ParVector."<init>":(Lscala/collection/immutable/Vector;)V
      35: areturn

  public <U extends T, NewTo> scala.collection.parallel.Combiner<U, NewTo> combine(scala.collection.parallel.Combiner<U, NewTo>);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     9
       5: aload_0
       6: goto          40
       9: aload_1
      10: checkcast     #2                  // class scala/collection/parallel/immutable/LazyParVectorCombiner
      13: astore_2
      14: aload_0
      15: aload_0
      16: invokevirtual #108                // Method sz:()I
      19: aload_2
      20: invokevirtual #108                // Method sz:()I
      23: iadd
      24: invokevirtual #123                // Method sz_$eq:(I)V
      27: aload_0
      28: invokevirtual #111                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
      31: aload_2
      32: invokevirtual #111                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
      35: invokevirtual #160                // Method scala/collection/mutable/ArrayBuffer.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ArrayBuffer;
      38: pop
      39: aload_0
      40: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #165                // Method result:()Lscala/collection/parallel/immutable/ParVector;
       4: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/LazyParVectorCombiner;
       5: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/LazyParVectorCombiner;
       5: areturn

  public scala.collection.parallel.immutable.LazyParVectorCombiner();
    Code:
       0: aload_0
       1: invokespecial #170                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #174                // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
       8: aload_0
       9: invokestatic  #177                // Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
      12: aload_0
      13: invokestatic  #180                // Method scala/collection/parallel/Combiner$class.$init$:(Lscala/collection/parallel/Combiner;)V
      16: aload_0
      17: iconst_0
      18: putfield      #102                // Field sz:I
      21: aload_0
      22: new           #113                // class scala/collection/mutable/ArrayBuffer
      25: dup
      26: invokespecial #181                // Method scala/collection/mutable/ArrayBuffer."<init>":()V
      29: new           #118                // class scala/collection/immutable/VectorBuilder
      32: dup
      33: invokespecial #131                // Method scala/collection/immutable/VectorBuilder."<init>":()V
      36: invokevirtual #134                // Method scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
      39: putfield      #106                // Field vectors:Lscala/collection/mutable/ArrayBuffer;
      42: return
}
