Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$TakeWhile<U, This> implements scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.Transformer<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.TakeWhile<U, This>> {
  public final int scala$collection$parallel$ParIterableLike$TakeWhile$$pos;

  public final scala.Function1<T, java.lang.Object> scala$collection$parallel$ParIterableLike$TakeWhile$$pred;

  public final scala.collection.parallel.CombinerFactory<U, This> scala$collection$parallel$ParIterableLike$TakeWhile$$cbf;

  private final scala.collection.parallel.IterableSplitter<T> pit;

  private volatile scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object> result;

  public final scala.collection.parallel.ParIterableLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #51                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.IterableSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #88                 // Field pit:Lscala/collection/parallel/IterableSplitter;
       4: areturn

  public scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object> result();
    Code:
       0: aload_0
       1: getfield      #91                 // Field result:Lscala/Tuple2;
       4: areturn

  public void result_$eq(scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field result:Lscala/Tuple2;
       5: return

  public void leaf(scala.Option<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object>>);
    Code:
       0: aload_0
       1: getfield      #96                 // Field scala$collection$parallel$ParIterableLike$TakeWhile$$pos:I
       4: aload_0
       5: invokevirtual #98                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
       8: invokeinterface #104,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.indexFlag:()I
      13: if_icmpge     110
      16: aload_0
      17: aload_0
      18: invokevirtual #98                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
      21: aload_0
      22: getfield      #106                // Field scala$collection$parallel$ParIterableLike$TakeWhile$$pred:Lscala/Function1;
      25: aload_0
      26: invokevirtual #110                // Method scala$collection$parallel$ParIterableLike$TakeWhile$$$outer:()Lscala/collection/parallel/ParIterableLike;
      29: aload_1
      30: invokevirtual #115                // Method scala/Option.isEmpty:()Z
      33: ifeq          42
      36: getstatic     #121                // Field scala/None$.MODULE$:Lscala/None$;
      39: goto          62
      42: new           #123                // class scala/Some
      45: dup
      46: aload_1
      47: invokevirtual #126                // Method scala/Option.get:()Ljava/lang/Object;
      50: checkcast     #128                // class scala/Tuple2
      53: invokevirtual #131                // Method scala/Tuple2._1:()Ljava/lang/Object;
      56: checkcast     #133                // class scala/collection/parallel/Combiner
      59: invokespecial #136                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      62: aload_0
      63: getfield      #138                // Field scala$collection$parallel$ParIterableLike$TakeWhile$$cbf:Lscala/collection/parallel/CombinerFactory;
      66: invokeinterface #144,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
      71: invokeinterface #150,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      76: invokeinterface #154,  3          // InterfaceMethod scala/collection/parallel/IterableSplitter.takeWhile2combiner:(Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
      81: invokevirtual #156                // Method result_$eq:(Lscala/Tuple2;)V
      84: aload_0
      85: invokevirtual #158                // Method result:()Lscala/Tuple2;
      88: invokevirtual #161                // Method scala/Tuple2._2$mcZ$sp:()Z
      91: ifne          176
      94: aload_0
      95: invokevirtual #98                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
      98: aload_0
      99: getfield      #96                 // Field scala$collection$parallel$ParIterableLike$TakeWhile$$pos:I
     102: invokeinterface #165,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.setIndexFlagIfLesser:(I)V
     107: goto          176
     110: aload_0
     111: new           #128                // class scala/Tuple2
     114: dup
     115: aload_0
     116: invokevirtual #110                // Method scala$collection$parallel$ParIterableLike$TakeWhile$$$outer:()Lscala/collection/parallel/ParIterableLike;
     119: aload_1
     120: invokevirtual #115                // Method scala/Option.isEmpty:()Z
     123: ifeq          132
     126: getstatic     #121                // Field scala/None$.MODULE$:Lscala/None$;
     129: goto          152
     132: new           #123                // class scala/Some
     135: dup
     136: aload_1
     137: invokevirtual #126                // Method scala/Option.get:()Ljava/lang/Object;
     140: checkcast     #128                // class scala/Tuple2
     143: invokevirtual #131                // Method scala/Tuple2._1:()Ljava/lang/Object;
     146: checkcast     #133                // class scala/collection/parallel/Combiner
     149: invokespecial #136                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     152: aload_0
     153: getfield      #138                // Field scala$collection$parallel$ParIterableLike$TakeWhile$$cbf:Lscala/collection/parallel/CombinerFactory;
     156: invokeinterface #144,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
     161: invokeinterface #150,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
     166: iconst_0
     167: invokestatic  #171                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     170: invokespecial #174                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     173: invokevirtual #156                // Method result_$eq:(Lscala/Tuple2;)V
     176: return

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: new           #181                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #183                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public scala.collection.Seq<scala.collection.parallel.Task<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, java.lang.Object>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.TakeWhile<U, This>>> split();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method pit:()Lscala/collection/parallel/IterableSplitter;
       4: invokeinterface #189,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/Seq;
       9: astore_1
      10: aload_1
      11: aload_1
      12: iconst_0
      13: invokestatic  #193                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      16: new           #195                // class scala/collection/parallel/ParIterableLike$TakeWhile$$anonfun$split$13
      19: dup
      20: aload_0
      21: invokespecial #198                // Method scala/collection/parallel/ParIterableLike$TakeWhile$$anonfun$split$13."<init>":(Lscala/collection/parallel/ParIterableLike$TakeWhile;)V
      24: getstatic     #203                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      27: invokevirtual #207                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      30: invokeinterface #213,  4          // InterfaceMethod scala/collection/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #215                // class scala/collection/GenIterable
      38: getstatic     #203                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      41: invokevirtual #207                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      44: invokeinterface #219,  3          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      49: checkcast     #221                // class scala/collection/TraversableLike
      52: new           #223                // class scala/collection/parallel/ParIterableLike$TakeWhile$$anonfun$split$14
      55: dup
      56: aload_0
      57: invokespecial #224                // Method scala/collection/parallel/ParIterableLike$TakeWhile$$anonfun$split$14."<init>":(Lscala/collection/parallel/ParIterableLike$TakeWhile;)V
      60: invokeinterface #228,  2          // InterfaceMethod scala/collection/TraversableLike.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      65: new           #230                // class scala/collection/parallel/ParIterableLike$TakeWhile$$anonfun$split$15
      68: dup
      69: aload_0
      70: invokespecial #231                // Method scala/collection/parallel/ParIterableLike$TakeWhile$$anonfun$split$15."<init>":(Lscala/collection/parallel/ParIterableLike$TakeWhile;)V
      73: getstatic     #203                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      76: invokevirtual #207                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      79: invokeinterface #237,  3          // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      84: checkcast     #209                // class scala/collection/Seq
      87: areturn

  public void merge(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.TakeWhile<U, This>);
    Code:
       0: aload_0
       1: invokevirtual #158                // Method result:()Lscala/Tuple2;
       4: invokevirtual #161                // Method scala/Tuple2._2$mcZ$sp:()Z
       7: ifeq          56
      10: aload_0
      11: new           #128                // class scala/Tuple2
      14: dup
      15: aload_0
      16: invokevirtual #158                // Method result:()Lscala/Tuple2;
      19: invokevirtual #131                // Method scala/Tuple2._1:()Ljava/lang/Object;
      22: checkcast     #133                // class scala/collection/parallel/Combiner
      25: aload_1
      26: invokevirtual #158                // Method result:()Lscala/Tuple2;
      29: invokevirtual #131                // Method scala/Tuple2._1:()Ljava/lang/Object;
      32: checkcast     #133                // class scala/collection/parallel/Combiner
      35: invokeinterface #244,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      40: aload_1
      41: invokevirtual #158                // Method result:()Lscala/Tuple2;
      44: invokevirtual #161                // Method scala/Tuple2._2$mcZ$sp:()Z
      47: invokestatic  #171                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      50: invokespecial #174                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      53: invokevirtual #156                // Method result_$eq:(Lscala/Tuple2;)V
      56: return

  public boolean requiresStrictSplitters();
    Code:
       0: iconst_1
       1: ireturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$TakeWhile$$$outer();
    Code:
       0: aload_0
       1: getfield      #247                // Field $outer:Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method scala$collection$parallel$ParIterableLike$TakeWhile$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method scala$collection$parallel$ParIterableLike$TakeWhile$$$outer:()Lscala/collection/parallel/ParIterableLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$TakeWhile
       5: invokevirtual #251                // Method merge:(Lscala/collection/parallel/ParIterableLike$TakeWhile;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #254                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
       5: athrow

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #128                // class scala/Tuple2
       5: invokevirtual #156                // Method result_$eq:(Lscala/Tuple2;)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #158                // Method result:()Lscala/Tuple2;
       4: areturn

  public scala.collection.parallel.ParIterableLike$TakeWhile(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>, int, scala.Function1<T, java.lang.Object>, scala.collection.parallel.CombinerFactory<U, This>, scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #96                 // Field scala$collection$parallel$ParIterableLike$TakeWhile$$pos:I
       5: aload_0
       6: aload_3
       7: putfield      #106                // Field scala$collection$parallel$ParIterableLike$TakeWhile$$pred:Lscala/Function1;
      10: aload_0
      11: aload         4
      13: putfield      #138                // Field scala$collection$parallel$ParIterableLike$TakeWhile$$cbf:Lscala/collection/parallel/CombinerFactory;
      16: aload_0
      17: aload         5
      19: putfield      #88                 // Field pit:Lscala/collection/parallel/IterableSplitter;
      22: aload_1
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #247                // Field $outer:Lscala/collection/parallel/ParIterableLike;
      33: aload_0
      34: invokespecial #256                // Method java/lang/Object."<init>":()V
      37: aload_0
      38: invokestatic  #259                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      41: aload_0
      42: invokestatic  #264                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      45: aload_0
      46: invokestatic  #266                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      49: aload_0
      50: aconst_null
      51: putfield      #91                 // Field result:Lscala/Tuple2;
      54: return
}
