Compiled from "RemainsIterator.scala"
public class scala.collection.parallel.SeqSplitter$Appended<U, PI extends scala.collection.parallel.SeqSplitter<U>> extends scala.collection.parallel.IterableSplitter<T>.Appended<U, PI> implements scala.collection.parallel.SeqSplitter<U> {
  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<U>> splitWithSignalling();
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method scala/collection/parallel/SeqSplitter$class.splitWithSignalling:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<U>> psplitWithSignalling(scala.collection.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method scala/collection/parallel/SeqSplitter$class.psplitWithSignalling:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/Seq;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.parallel.SeqSplitter<U>.Taken newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #29                 // Method scala/collection/parallel/SeqSplitter$class.newTaken:(Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Taken;
       5: areturn

  public scala.collection.parallel.SeqSplitter<U> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #36                 // Method scala/collection/parallel/SeqSplitter$class.take:(Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.SeqSplitter<U> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #42                 // Method scala/collection/parallel/SeqSplitter$class.slice:(Lscala/collection/parallel/SeqSplitter;II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public <S> scala.collection.parallel.SeqSplitter<U>.Mapped<S> map(scala.Function1<U, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // Method scala/collection/parallel/SeqSplitter$class.map:(Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public <U, PI extends scala.collection.parallel.SeqSplitter<U>> scala.collection.parallel.SeqSplitter<U>.Appended<U, PI> appendParSeq(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method scala/collection/parallel/SeqSplitter$class.appendParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Appended;
       5: areturn

  public <S> scala.collection.parallel.SeqSplitter<U>.Zipped<S> zipParSeq(scala.collection.parallel.SeqSplitter<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method scala/collection/parallel/SeqSplitter$class.zipParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Zipped;
       5: areturn

  public <S, U, R> scala.collection.parallel.SeqSplitter<U>.ZippedAll<U, R> zipAllParSeq(scala.collection.parallel.SeqSplitter<S>, U, R);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #68                 // Method scala/collection/parallel/SeqSplitter$class.zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$ZippedAll;
       7: areturn

  public scala.collection.parallel.SeqSplitter<U> reverse();
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method scala/collection/parallel/SeqSplitter$class.reverse:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public <U> scala.collection.parallel.SeqSplitter<U>.Patched<U> patchParSeq(int, scala.collection.parallel.SeqSplitter<U>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #81                 // Method scala/collection/parallel/SeqSplitter$class.patchParSeq:(Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
       7: areturn

  public int prefixLength(scala.Function1<U, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method scala/collection/parallel/AugmentedSeqIterator$class.prefixLength:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<U, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // Method scala/collection/parallel/AugmentedSeqIterator$class.indexWhere:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;)I
       5: ireturn

  public int lastIndexWhere(scala.Function1<U, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method scala/collection/parallel/AugmentedSeqIterator$class.lastIndexWhere:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;)I
       5: ireturn

  public <S> boolean corresponds(scala.Function2<U, S, java.lang.Object>, scala.collection.Iterator<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #103                // Method scala/collection/parallel/AugmentedSeqIterator$class.corresponds:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function2;Lscala/collection/Iterator;)Z
       6: ireturn

  public <U, This> scala.collection.parallel.Combiner<U, This> reverse2combiner(scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method scala/collection/parallel/AugmentedSeqIterator$class.reverse2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       5: areturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reverseMap2combiner(scala.Function1<U, S>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // Method scala/collection/parallel/AugmentedSeqIterator$class.reverseMap2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, That> scala.collection.parallel.Combiner<U, That> updated2combiner(int, U, scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #123                // Method scala/collection/parallel/AugmentedSeqIterator$class.updated2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       7: areturn

  public scala.collection.parallel.SeqSplitter<U> dup();
    Code:
       0: aload_0
       1: invokespecial #129                // Method scala/collection/parallel/IterableSplitter$Appended.dup:()Lscala/collection/parallel/IterableSplitter;
       4: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
       7: areturn

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<U>> split();
    Code:
       0: aload_0
       1: invokespecial #132                // Method scala/collection/parallel/IterableSplitter$Appended.split:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<U>> psplit(scala.collection.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #137                // Method firstNonEmpty:()Z
       4: ifeq          467
       7: aload_0
       8: invokevirtual #140                // Method scala$collection$parallel$SeqSplitter$Appended$$$outer:()Lscala/collection/parallel/SeqSplitter;
      11: invokeinterface #144,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
      16: istore        4
      18: iconst_0
      19: invokestatic  #150                // Method scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
      22: astore        12
      24: aload_1
      25: iconst_0
      26: invokestatic  #156                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      29: new           #158                // class scala/collection/parallel/SeqSplitter$Appended$$anonfun$1
      32: dup
      33: aload_0
      34: invokespecial #162                // Method scala/collection/parallel/SeqSplitter$Appended$$anonfun$1."<init>":(Lscala/collection/parallel/SeqSplitter$Appended;)V
      37: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      40: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      43: invokeinterface #178,  4          // InterfaceMethod scala/collection/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      48: checkcast     #174                // class scala/collection/Seq
      51: astore_3
      52: aload_1
      53: aload_3
      54: invokeinterface #182,  1          // InterfaceMethod scala/collection/Seq.init:()Ljava/lang/Object;
      59: checkcast     #184                // class scala/collection/IterableLike
      62: aload_3
      63: invokeinterface #187,  1          // InterfaceMethod scala/collection/Seq.tail:()Ljava/lang/Object;
      68: checkcast     #189                // class scala/collection/GenIterable
      71: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      74: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      77: invokeinterface #193,  3          // InterfaceMethod scala/collection/IterableLike.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      82: checkcast     #189                // class scala/collection/GenIterable
      85: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      88: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      91: invokeinterface #194,  3          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      96: checkcast     #196                // class scala/collection/TraversableLike
      99: new           #198                // class scala/collection/parallel/SeqSplitter$Appended$$anonfun$7
     102: dup
     103: aload_0
     104: iload         4
     106: aload         12
     108: invokespecial #201                // Method scala/collection/parallel/SeqSplitter$Appended$$anonfun$7."<init>":(Lscala/collection/parallel/SeqSplitter$Appended;ILscala/runtime/BooleanRef;)V
     111: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     114: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     117: invokeinterface #205,  3          // InterfaceMethod scala/collection/TraversableLike.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     122: checkcast     #174                // class scala/collection/Seq
     125: astore_2
     126: aload_2
     127: aload_3
     128: invokeinterface #182,  1          // InterfaceMethod scala/collection/Seq.init:()Ljava/lang/Object;
     133: checkcast     #189                // class scala/collection/GenIterable
     136: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     139: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     142: invokeinterface #194,  3          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     147: checkcast     #196                // class scala/collection/TraversableLike
     150: new           #207                // class scala/collection/parallel/SeqSplitter$Appended$$anonfun$8
     153: dup
     154: aload_0
     155: iload         4
     157: invokespecial #210                // Method scala/collection/parallel/SeqSplitter$Appended$$anonfun$8."<init>":(Lscala/collection/parallel/SeqSplitter$Appended;I)V
     160: invokeinterface #214,  2          // InterfaceMethod scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
     165: astore        15
     167: aload         15
     169: ifnull        457
     172: new           #216                // class scala/Tuple2
     175: dup
     176: aload         15
     178: invokevirtual #219                // Method scala/Tuple2._1:()Ljava/lang/Object;
     181: aload         15
     183: invokevirtual #222                // Method scala/Tuple2._2:()Ljava/lang/Object;
     186: invokespecial #225                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     189: astore        5
     191: aload         5
     193: invokevirtual #219                // Method scala/Tuple2._1:()Ljava/lang/Object;
     196: checkcast     #174                // class scala/collection/Seq
     199: astore        6
     201: aload         5
     203: invokevirtual #222                // Method scala/Tuple2._2:()Ljava/lang/Object;
     206: checkcast     #174                // class scala/collection/Seq
     209: astore        7
     211: new           #216                // class scala/Tuple2
     214: dup
     215: aload         6
     217: new           #227                // class scala/collection/parallel/SeqSplitter$Appended$$anonfun$9
     220: dup
     221: aload_0
     222: invokespecial #228                // Method scala/collection/parallel/SeqSplitter$Appended$$anonfun$9."<init>":(Lscala/collection/parallel/SeqSplitter$Appended;)V
     225: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     228: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     231: invokeinterface #230,  3          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     236: aload         7
     238: new           #232                // class scala/collection/parallel/SeqSplitter$Appended$$anonfun$10
     241: dup
     242: aload_0
     243: invokespecial #233                // Method scala/collection/parallel/SeqSplitter$Appended$$anonfun$10."<init>":(Lscala/collection/parallel/SeqSplitter$Appended;)V
     246: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     249: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     252: invokeinterface #230,  3          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     257: invokespecial #225                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     260: astore        8
     262: new           #216                // class scala/Tuple2
     265: dup
     266: aload         8
     268: invokevirtual #219                // Method scala/Tuple2._1:()Ljava/lang/Object;
     271: aload         8
     273: invokevirtual #222                // Method scala/Tuple2._2:()Ljava/lang/Object;
     276: invokespecial #225                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     279: astore        9
     281: aload         9
     283: invokevirtual #219                // Method scala/Tuple2._1:()Ljava/lang/Object;
     286: checkcast     #174                // class scala/collection/Seq
     289: astore        10
     291: aload         9
     293: invokevirtual #222                // Method scala/Tuple2._2:()Ljava/lang/Object;
     296: checkcast     #174                // class scala/collection/Seq
     299: astore        11
     301: aload_0
     302: invokevirtual #140                // Method scala$collection$parallel$SeqSplitter$Appended$$$outer:()Lscala/collection/parallel/SeqSplitter;
     305: aload         10
     307: invokeinterface #235,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplit:(Lscala/collection/Seq;)Lscala/collection/Seq;
     312: astore        13
     314: aload_0
     315: invokevirtual #237                // Method that:()Lscala/collection/parallel/IterableSplitter;
     318: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
     321: aload         11
     323: invokeinterface #235,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplit:(Lscala/collection/Seq;)Lscala/collection/Seq;
     328: astore        14
     330: aload         12
     332: getfield      #240                // Field scala/runtime/BooleanRef.elem:Z
     335: ifeq          436
     338: aload         13
     340: invokeinterface #182,  1          // InterfaceMethod scala/collection/Seq.init:()Ljava/lang/Object;
     345: checkcast     #196                // class scala/collection/TraversableLike
     348: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     351: getstatic     #245                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     354: iconst_1
     355: anewarray     #2                  // class scala/collection/parallel/SeqSplitter$Appended
     358: dup
     359: iconst_0
     360: aload         13
     362: invokeinterface #248,  1          // InterfaceMethod scala/collection/Seq.last:()Ljava/lang/Object;
     367: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
     370: aload         14
     372: invokeinterface #251,  1          // InterfaceMethod scala/collection/Seq.head:()Ljava/lang/Object;
     377: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
     380: invokeinterface #253,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.appendParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Appended;
     385: aastore
     386: checkcast     #255                // class "[Ljava/lang/Object;"
     389: invokevirtual #259                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     392: invokevirtual #263                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
     395: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     398: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     401: invokeinterface #267,  3          // InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     406: checkcast     #196                // class scala/collection/TraversableLike
     409: aload         14
     411: invokeinterface #187,  1          // InterfaceMethod scala/collection/Seq.tail:()Ljava/lang/Object;
     416: checkcast     #269                // class scala/collection/GenTraversableOnce
     419: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     422: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     425: invokeinterface #267,  3          // InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     430: checkcast     #174                // class scala/collection/Seq
     433: goto          480
     436: aload         13
     438: aload         14
     440: getstatic     #168                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     443: invokevirtual #172                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     446: invokeinterface #270,  3          // InterfaceMethod scala/collection/Seq.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     451: checkcast     #174                // class scala/collection/Seq
     454: goto          480
     457: new           #272                // class scala/MatchError
     460: dup
     461: aload         15
     463: invokespecial #275                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     466: athrow
     467: aload_0
     468: invokevirtual #278                // Method curr:()Lscala/collection/parallel/IterableSplitter;
     471: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
     474: aload_1
     475: invokeinterface #235,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplit:(Lscala/collection/Seq;)Lscala/collection/Seq;
     480: areturn

  public scala.collection.parallel.SeqSplitter scala$collection$parallel$SeqSplitter$Appended$$$outer();
    Code:
       0: aload_0
       1: getfield      #293                // Field $outer:Lscala/collection/parallel/IterableSplitter;
       4: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
       7: areturn

  public scala.collection.parallel.IterableSplitter$ZippedAll zipAllParSeq(scala.collection.parallel.SeqSplitter, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #296                // Method zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$ZippedAll;
       7: areturn

  public scala.collection.parallel.IterableSplitter$Zipped zipParSeq(scala.collection.parallel.SeqSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #299                // Method zipParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Zipped;
       5: areturn

  public scala.collection.Iterator map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #302                // Method map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public scala.collection.parallel.IterableSplitter$Mapped map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #302                // Method map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public scala.collection.Iterator slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #306                // Method slice:(II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public scala.collection.parallel.IterableSplitter slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #306                // Method slice:(II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public scala.collection.Iterator take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #310                // Method take:(I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.IterableSplitter take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #310                // Method take:(I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.IterableSplitter$Taken newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #314                // Method newTaken:(I)Lscala/collection/parallel/SeqSplitter$Taken;
       5: areturn

  public scala.collection.parallel.IterableSplitter dup();
    Code:
       0: aload_0
       1: invokevirtual #316                // Method dup:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.SeqSplitter$Appended(scala.collection.parallel.SeqSplitter<T>, PI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #320                // Method scala/collection/parallel/IterableSplitter$Appended."<init>":(Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/IterableSplitter;)V
       6: aload_0
       7: invokestatic  #324                // Method scala/collection/parallel/AugmentedSeqIterator$class.$init$:(Lscala/collection/parallel/AugmentedSeqIterator;)V
      10: aload_0
      11: invokestatic  #327                // Method scala/collection/parallel/SeqSplitter$class.$init$:(Lscala/collection/parallel/SeqSplitter;)V
      14: return
}
