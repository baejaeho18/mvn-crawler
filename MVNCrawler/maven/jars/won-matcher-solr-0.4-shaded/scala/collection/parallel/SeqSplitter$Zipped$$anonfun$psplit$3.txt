Compiled from "RemainsIterator.scala"
public final class scala.collection.parallel.SeqSplitter$Zipped$$anonfun$psplit$3 extends scala.runtime.AbstractFunction1<scala.Tuple2<scala.collection.parallel.SeqSplitter<T>, scala.collection.parallel.SeqSplitter<S>>, scala.collection.parallel.SeqSplitter<T>.Zipped<S>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.collection.parallel.SeqSplitter<T>.Zipped<S> apply(scala.Tuple2<scala.collection.parallel.SeqSplitter<T>, scala.collection.parallel.SeqSplitter<S>>);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: checkcast     #27                 // class scala/collection/parallel/SeqSplitter
       7: aload_1
       8: invokevirtual #30                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      11: checkcast     #27                 // class scala/collection/parallel/SeqSplitter
      14: invokeinterface #34,  2           // InterfaceMethod scala/collection/parallel/SeqSplitter.zipParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Zipped;
      19: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class scala/Tuple2
       5: invokevirtual #41                 // Method apply:(Lscala/Tuple2;)Lscala/collection/parallel/SeqSplitter$Zipped;
       8: areturn

  public scala.collection.parallel.SeqSplitter$Zipped$$anonfun$psplit$3(scala.collection.parallel.SeqSplitter<T>.Zipped<S>);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
