Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$ReverseMap<S, That> implements scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.Transformer<scala.collection.parallel.Combiner<S, That>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.ReverseMap<S, That>> {
  private final scala.Function1<T, S> f;

  private final scala.Function0<scala.collection.parallel.Combiner<S, That>> pbf;

  private final scala.collection.parallel.SeqSplitter<T> pit;

  private volatile scala.collection.parallel.Combiner<S, That> result;

  public final scala.collection.parallel.ParSeqLike $outer;

  private volatile java.lang.Throwable throwable;

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: areturn

  public boolean shouldSplitFurther();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.shouldSplitFurther:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
       4: ireturn

  public scala.collection.Seq<scala.collection.parallel.Task<scala.collection.parallel.Combiner<S, That>, scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.ReverseMap<S, That>>> split();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.split:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/Seq;
       4: areturn

  public void signalAbort();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.signalAbort:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method scala/collection/parallel/ParIterableLike$Accessor$class.toString:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
       4: areturn

  public boolean requiresStrictSplitters();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.requiresStrictSplitters:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
       4: ireturn

  public java.lang.Throwable throwable();
    Code:
       0: aload_0
       1: getfield      #60                 // Field throwable:Ljava/lang/Throwable;
       4: areturn

  public void throwable_$eq(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field throwable:Ljava/lang/Throwable;
       5: return

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #70                 // Method scala/collection/parallel/Task$class.repr:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
       4: areturn

  public void forwardThrowable();
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method scala/collection/parallel/Task$class.forwardThrowable:(Lscala/collection/parallel/Task;)V
       4: return

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method scala/collection/parallel/Task$class.tryLeaf:(Lscala/collection/parallel/Task;Lscala/Option;)V
       5: return

  public void tryMerge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method scala/collection/parallel/Task$class.tryMerge:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
       5: return

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method scala/collection/parallel/Task$class.mergeThrowables:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
       5: return

  public scala.collection.parallel.SeqSplitter<T> pit();
    Code:
       0: aload_0
       1: getfield      #97                 // Field pit:Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.Combiner<S, That> result();
    Code:
       0: aload_0
       1: getfield      #100                // Field result:Lscala/collection/parallel/Combiner;
       4: areturn

  public void result_$eq(scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field result:Lscala/collection/parallel/Combiner;
       5: return

  public void leaf(scala.Option<scala.collection.parallel.Combiner<S, That>>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #105                // Method pit:()Lscala/collection/parallel/SeqSplitter;
       5: aload_0
       6: getfield      #107                // Field f:Lscala/Function1;
       9: aload_0
      10: getfield      #109                // Field pbf:Lscala/Function0;
      13: invokeinterface #114,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      18: checkcast     #116                // class scala/collection/parallel/Combiner
      21: invokeinterface #122,  3          // InterfaceMethod scala/collection/parallel/SeqSplitter.reverseMap2combiner:(Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      26: invokevirtual #124                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      29: return

  public scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.ReverseMap<S, That> newSubtask(scala.collection.parallel.IterableSplitter<T>);
    Code:
       0: new           #2                  // class scala/collection/parallel/ParSeqLike$ReverseMap
       3: dup
       4: aload_0
       5: invokevirtual #131                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
       8: aload_0
       9: getfield      #107                // Field f:Lscala/Function1;
      12: aload_0
      13: getfield      #109                // Field pbf:Lscala/Function0;
      16: aload_0
      17: invokevirtual #131                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
      20: aload_1
      21: invokeinterface #137,  2          // InterfaceMethod scala/collection/parallel/ParSeqLike.down:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
      26: invokespecial #141                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/Function0;Lscala/collection/parallel/SeqSplitter;)V
      29: areturn

  public void merge(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>.ReverseMap<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #147                // Method result:()Lscala/collection/parallel/Combiner;
       5: aload_0
       6: invokevirtual #147                // Method result:()Lscala/collection/parallel/Combiner;
       9: invokeinterface #151,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
      14: invokevirtual #124                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
      17: return

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$ReverseMap$$$outer();
    Code:
       0: aload_0
       1: getfield      #153                // Field $outer:Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #131                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #131                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
       4: areturn

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$ReverseMap
       5: invokevirtual #158                // Method merge:(Lscala/collection/parallel/ParSeqLike$ReverseMap;)V
       8: return

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #161                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParSeqLike$ReverseMap;
       5: areturn

  public void result_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #116                // class scala/collection/parallel/Combiner
       5: invokevirtual #124                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
       8: return

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #147                // Method result:()Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.parallel.IterableSplitter pit();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method pit:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.ParSeqLike$ReverseMap(scala.collection.parallel.ParSeqLike<T, Repr, Sequential>, scala.Function1<T, S>, scala.Function0<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.SeqSplitter<T>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #107                // Field f:Lscala/Function1;
       5: aload_0
       6: aload_3
       7: putfield      #109                // Field pbf:Lscala/Function0;
      10: aload_0
      11: aload         4
      13: putfield      #97                 // Field pit:Lscala/collection/parallel/SeqSplitter;
      16: aload_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #153                // Field $outer:Lscala/collection/parallel/ParSeqLike;
      27: aload_0
      28: invokespecial #164                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #167                // Method scala/collection/parallel/Task$class.$init$:(Lscala/collection/parallel/Task;)V
      35: aload_0
      36: invokestatic  #170                // Method scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask$class.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
      39: aload_0
      40: invokestatic  #172                // Method scala/collection/parallel/ParIterableLike$Accessor$class.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
      43: aload_0
      44: aconst_null
      45: putfield      #100                // Field result:Lscala/collection/parallel/Combiner;
      48: return
}
