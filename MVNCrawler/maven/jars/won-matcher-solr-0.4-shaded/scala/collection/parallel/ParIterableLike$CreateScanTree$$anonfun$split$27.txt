Compiled from "ParIterableLike.scala"
public final class scala.collection.parallel.ParIterableLike$CreateScanTree$$anonfun$split$27 extends scala.runtime.AbstractFunction1<scala.Tuple2<scala.collection.parallel.IterableSplitter<T>, java.lang.Object>, scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.CreateScanTree<U>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.parallel.ParIterableLike$CreateScanTree $outer;

  public final scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.CreateScanTree<U> apply(scala.Tuple2<scala.collection.parallel.IterableSplitter<T>, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        56
       4: new           #10                 // class scala/collection/parallel/ParIterableLike$CreateScanTree
       7: dup
       8: aload_0
       9: getfield      #23                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CreateScanTree;
      12: invokevirtual #27                 // Method scala/collection/parallel/ParIterableLike$CreateScanTree.scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
      15: aload_1
      16: invokevirtual #33                 // Method scala/Tuple2._2$mcI$sp:()I
      19: aload_1
      20: invokevirtual #37                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      23: checkcast     #39                 // class scala/collection/parallel/IterableSplitter
      26: invokeinterface #42,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
      31: aload_0
      32: getfield      #23                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CreateScanTree;
      35: getfield      #46                 // Field scala/collection/parallel/ParIterableLike$CreateScanTree.scala$collection$parallel$ParIterableLike$CreateScanTree$$z:Ljava/lang/Object;
      38: aload_0
      39: getfield      #23                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CreateScanTree;
      42: getfield      #50                 // Field scala/collection/parallel/ParIterableLike$CreateScanTree.scala$collection$parallel$ParIterableLike$CreateScanTree$$op:Lscala/Function2;
      45: aload_1
      46: invokevirtual #37                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      49: checkcast     #39                 // class scala/collection/parallel/IterableSplitter
      52: invokespecial #54                 // Method scala/collection/parallel/ParIterableLike$CreateScanTree."<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
      55: areturn
      56: new           #56                 // class scala/MatchError
      59: dup
      60: aload_1
      61: invokespecial #59                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class scala/Tuple2
       5: invokevirtual #66                 // Method apply:(Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$CreateScanTree;
       8: areturn

  public scala.collection.parallel.ParIterableLike$CreateScanTree$$anonfun$split$27(scala.collection.parallel.ParIterableLike<T, Repr, Sequential>.CreateScanTree<U>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lscala/collection/parallel/ParIterableLike$CreateScanTree;
      11: aload_0
      12: invokespecial #71                 // Method scala/runtime/AbstractFunction1."<init>":()V
      15: return
}
