Compiled from "RemainsIterator.scala"
public class scala.collection.parallel.SeqSplitter$Taken extends scala.collection.parallel.IterableSplitter<T>.Taken implements scala.collection.parallel.SeqSplitter<T> {
  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<T>> splitWithSignalling();
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method scala/collection/parallel/SeqSplitter$class.splitWithSignalling:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<T>> psplitWithSignalling(scala.collection.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method scala/collection/parallel/SeqSplitter$class.psplitWithSignalling:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/Seq;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.parallel.SeqSplitter<T>.Taken newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #29                 // Method scala/collection/parallel/SeqSplitter$class.newTaken:(Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Taken;
       5: areturn

  public scala.collection.parallel.SeqSplitter<T> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #36                 // Method scala/collection/parallel/SeqSplitter$class.take:(Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.SeqSplitter<T> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #42                 // Method scala/collection/parallel/SeqSplitter$class.slice:(Lscala/collection/parallel/SeqSplitter;II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public <S> scala.collection.parallel.SeqSplitter<T>.Mapped<S> map(scala.Function1<T, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // Method scala/collection/parallel/SeqSplitter$class.map:(Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public <U, PI extends scala.collection.parallel.SeqSplitter<U>> scala.collection.parallel.SeqSplitter<T>.Appended<U, PI> appendParSeq(PI);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method scala/collection/parallel/SeqSplitter$class.appendParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Appended;
       5: areturn

  public <S> scala.collection.parallel.SeqSplitter<T>.Zipped<S> zipParSeq(scala.collection.parallel.SeqSplitter<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method scala/collection/parallel/SeqSplitter$class.zipParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Zipped;
       5: areturn

  public <S, U, R> scala.collection.parallel.SeqSplitter<T>.ZippedAll<U, R> zipAllParSeq(scala.collection.parallel.SeqSplitter<S>, U, R);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #68                 // Method scala/collection/parallel/SeqSplitter$class.zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$ZippedAll;
       7: areturn

  public scala.collection.parallel.SeqSplitter<T> reverse();
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method scala/collection/parallel/SeqSplitter$class.reverse:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public <U> scala.collection.parallel.SeqSplitter<T>.Patched<U> patchParSeq(int, scala.collection.parallel.SeqSplitter<U>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #81                 // Method scala/collection/parallel/SeqSplitter$class.patchParSeq:(Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
       7: areturn

  public int prefixLength(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method scala/collection/parallel/AugmentedSeqIterator$class.prefixLength:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // Method scala/collection/parallel/AugmentedSeqIterator$class.indexWhere:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;)I
       5: ireturn

  public int lastIndexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method scala/collection/parallel/AugmentedSeqIterator$class.lastIndexWhere:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;)I
       5: ireturn

  public <S> boolean corresponds(scala.Function2<T, S, java.lang.Object>, scala.collection.Iterator<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #103                // Method scala/collection/parallel/AugmentedSeqIterator$class.corresponds:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function2;Lscala/collection/Iterator;)Z
       6: ireturn

  public <U, This> scala.collection.parallel.Combiner<U, This> reverse2combiner(scala.collection.parallel.Combiner<U, This>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method scala/collection/parallel/AugmentedSeqIterator$class.reverse2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       5: areturn

  public <S, That> scala.collection.parallel.Combiner<S, That> reverseMap2combiner(scala.Function1<T, S>, scala.collection.parallel.Combiner<S, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // Method scala/collection/parallel/AugmentedSeqIterator$class.reverseMap2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       6: areturn

  public <U, That> scala.collection.parallel.Combiner<U, That> updated2combiner(int, U, scala.collection.parallel.Combiner<U, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #123                // Method scala/collection/parallel/AugmentedSeqIterator$class.updated2combiner:(Lscala/collection/parallel/AugmentedSeqIterator;ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       7: areturn

  public scala.collection.parallel.SeqSplitter<T> dup();
    Code:
       0: aload_0
       1: invokespecial #129                // Method scala/collection/parallel/IterableSplitter$Taken.dup:()Lscala/collection/parallel/IterableSplitter;
       4: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
       7: areturn

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<T>> split();
    Code:
       0: aload_0
       1: invokespecial #132                // Method scala/collection/parallel/IterableSplitter$Taken.split:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<scala.collection.parallel.SeqSplitter<T>> psplit(scala.collection.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #136                // Method scala$collection$parallel$SeqSplitter$Taken$$$outer:()Lscala/collection/parallel/SeqSplitter;
       5: aload_1
       6: invokeinterface #138,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplit:(Lscala/collection/Seq;)Lscala/collection/Seq;
      11: new           #140                // class scala/collection/parallel/SeqSplitter$Taken$$anonfun$psplit$1
      14: dup
      15: aload_0
      16: invokespecial #144                // Method scala/collection/parallel/SeqSplitter$Taken$$anonfun$psplit$1."<init>":(Lscala/collection/parallel/SeqSplitter$Taken;)V
      19: invokevirtual #148                // Method takeSeq:(Lscala/collection/Seq;Lscala/Function2;)Lscala/collection/Seq;
      22: areturn

  public scala.collection.parallel.SeqSplitter scala$collection$parallel$SeqSplitter$Taken$$$outer();
    Code:
       0: aload_0
       1: getfield      #152                // Field $outer:Lscala/collection/parallel/IterableSplitter;
       4: checkcast     #7                  // class scala/collection/parallel/SeqSplitter
       7: areturn

  public scala.collection.parallel.IterableSplitter$ZippedAll zipAllParSeq(scala.collection.parallel.SeqSplitter, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #155                // Method zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$ZippedAll;
       7: areturn

  public scala.collection.parallel.IterableSplitter$Zipped zipParSeq(scala.collection.parallel.SeqSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #158                // Method zipParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$Zipped;
       5: areturn

  public scala.collection.Iterator map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #161                // Method map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public scala.collection.parallel.IterableSplitter$Mapped map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #161                // Method map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter$Mapped;
       5: areturn

  public scala.collection.Iterator slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #165                // Method slice:(II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public scala.collection.parallel.IterableSplitter slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #165                // Method slice:(II)Lscala/collection/parallel/SeqSplitter;
       6: areturn

  public scala.collection.Iterator take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #169                // Method take:(I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.IterableSplitter take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #169                // Method take:(I)Lscala/collection/parallel/SeqSplitter;
       5: areturn

  public scala.collection.parallel.IterableSplitter$Taken newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #173                // Method newTaken:(I)Lscala/collection/parallel/SeqSplitter$Taken;
       5: areturn

  public scala.collection.parallel.IterableSplitter dup();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method dup:()Lscala/collection/parallel/SeqSplitter;
       4: areturn

  public scala.collection.parallel.SeqSplitter$Taken(scala.collection.parallel.SeqSplitter<T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #179                // Method scala/collection/parallel/IterableSplitter$Taken."<init>":(Lscala/collection/parallel/IterableSplitter;I)V
       6: aload_0
       7: invokestatic  #183                // Method scala/collection/parallel/AugmentedSeqIterator$class.$init$:(Lscala/collection/parallel/AugmentedSeqIterator;)V
      10: aload_0
      11: invokestatic  #186                // Method scala/collection/parallel/SeqSplitter$class.$init$:(Lscala/collection/parallel/SeqSplitter;)V
      14: return
}
