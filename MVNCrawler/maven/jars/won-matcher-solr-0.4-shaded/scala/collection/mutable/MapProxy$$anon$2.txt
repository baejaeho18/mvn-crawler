Compiled from "MapProxy.scala"
public final class scala.collection.mutable.MapProxy$$anon$2 implements scala.collection.mutable.MapProxy<A, B> {
  private final scala.collection.mutable.Map<A, B> self;

  public scala.collection.mutable.MapProxy<A, B> repr();
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method scala/collection/mutable/MapProxy$class.repr:(Lscala/collection/mutable/MapProxy;)Lscala/collection/mutable/MapProxy;
       4: areturn

  public scala.collection.mutable.MapProxy<A, B> empty();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method scala/collection/mutable/MapProxy$class.empty:(Lscala/collection/mutable/MapProxy;)Lscala/collection/mutable/MapProxy;
       4: areturn

  public <B1> scala.collection.mutable.MapProxy<A, B1> updated(A, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #29                 // Method scala/collection/mutable/MapProxy$class.updated:(Lscala/collection/mutable/MapProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       6: areturn

  public <B1> scala.collection.mutable.Map<A, B1> $plus(scala.Tuple2<A, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method scala/collection/mutable/MapProxy$class.$plus:(Lscala/collection/mutable/MapProxy;Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public <B1> scala.collection.mutable.MapProxy<A, B1> $plus(scala.Tuple2<A, B1>, scala.Tuple2<A, B1>, scala.collection.Seq<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #43                 // Method scala/collection/mutable/MapProxy$class.$plus:(Lscala/collection/mutable/MapProxy;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/MapProxy;
       7: areturn

  public <B1> scala.collection.mutable.MapProxy<A, B1> $plus$plus(scala.collection.GenTraversableOnce<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method scala/collection/mutable/MapProxy$class.$plus$plus:(Lscala/collection/mutable/MapProxy;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.mutable.MapProxy<A, B> $minus(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method scala/collection/mutable/MapProxy$class.$minus:(Lscala/collection/mutable/MapProxy;Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.mutable.MapProxy<A, B> $plus$eq(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method scala/collection/mutable/MapProxy$class.$plus$eq:(Lscala/collection/mutable/MapProxy;Lscala/Tuple2;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.mutable.MapProxy<A, B> $minus$eq(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method scala/collection/mutable/MapProxy$class.$minus$eq:(Lscala/collection/mutable/MapProxy;Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.Option<B> get(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method scala/collection/MapProxyLike$class.get:(Lscala/collection/MapProxyLike;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #79                 // Method scala/collection/MapProxyLike$class.iterator:(Lscala/collection/MapProxyLike;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method scala/collection/MapProxyLike$class.isEmpty:(Lscala/collection/MapProxyLike;)Z
       4: ireturn

  public <B1> B1 getOrElse(A, scala.Function0<B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // Method scala/collection/MapProxyLike$class.getOrElse:(Lscala/collection/MapProxyLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public B apply(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method scala/collection/MapProxyLike$class.apply:(Lscala/collection/MapProxyLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public boolean contains(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // Method scala/collection/MapProxyLike$class.contains:(Lscala/collection/MapProxyLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean isDefinedAt(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #104                // Method scala/collection/MapProxyLike$class.isDefinedAt:(Lscala/collection/MapProxyLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.Set<A> keySet();
    Code:
       0: aload_0
       1: invokestatic  #109                // Method scala/collection/MapProxyLike$class.keySet:(Lscala/collection/MapProxyLike;)Lscala/collection/Set;
       4: areturn

  public scala.collection.Iterator<A> keysIterator();
    Code:
       0: aload_0
       1: invokestatic  #112                // Method scala/collection/MapProxyLike$class.keysIterator:(Lscala/collection/MapProxyLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterable<A> keys();
    Code:
       0: aload_0
       1: invokestatic  #117                // Method scala/collection/MapProxyLike$class.keys:(Lscala/collection/MapProxyLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable<B> values();
    Code:
       0: aload_0
       1: invokestatic  #120                // Method scala/collection/MapProxyLike$class.values:(Lscala/collection/MapProxyLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<B> valuesIterator();
    Code:
       0: aload_0
       1: invokestatic  #123                // Method scala/collection/MapProxyLike$class.valuesIterator:(Lscala/collection/MapProxyLike;)Lscala/collection/Iterator;
       4: areturn

  public B default(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method scala/collection/MapProxyLike$class.default:(Lscala/collection/MapProxyLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Map<A, B> filterKeys(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #130                // Method scala/collection/MapProxyLike$class.filterKeys:(Lscala/collection/MapProxyLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public <C> scala.collection.Map<A, C> mapValues(scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // Method scala/collection/MapProxyLike$class.mapValues:(Lscala/collection/MapProxyLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.Map filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // Method scala/collection/MapProxyLike$class.filterNot:(Lscala/collection/MapProxyLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #144                // Method scala/collection/MapProxyLike$class.addString:(Lscala/collection/MapProxyLike;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.Iterator<scala.collection.mutable.Map<A, B>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #157                // Method scala/collection/IterableProxyLike$class.grouped:(Lscala/collection/IterableProxyLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.Map<A, B>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #162                // Method scala/collection/IterableProxyLike$class.sliding:(Lscala/collection/IterableProxyLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.Map<A, B>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #166                // Method scala/collection/IterableProxyLike$class.sliding:(Lscala/collection/IterableProxyLike;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterable takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #172                // Method scala/collection/IterableProxyLike$class.takeRight:(Lscala/collection/IterableProxyLike;I)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Iterable dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #176                // Method scala/collection/IterableProxyLike$class.dropRight:(Lscala/collection/IterableProxyLike;I)Lscala/collection/Iterable;
       5: areturn

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #181                // Method scala/collection/IterableProxyLike$class.zip:(Lscala/collection/IterableProxyLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #190                // Method scala/collection/IterableProxyLike$class.zipAll:(Lscala/collection/IterableProxyLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // Method scala/collection/IterableProxyLike$class.zipWithIndex:(Lscala/collection/IterableProxyLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // Method scala/collection/IterableProxyLike$class.sameElements:(Lscala/collection/IterableProxyLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #207                // Method scala/collection/IterableProxyLike$class.view:(Lscala/collection/IterableProxyLike;)Lscala/collection/IterableView;
       4: areturn

  public scala.collection.IterableView<scala.Tuple2<A, B>, scala.collection.mutable.Map<A, B>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #211                // Method scala/collection/IterableProxyLike$class.view:(Lscala/collection/IterableProxyLike;II)Lscala/collection/IterableView;
       6: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<A, B>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method scala/collection/TraversableProxyLike$class.foreach:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)V
       5: return

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #224                // Method scala/collection/TraversableProxyLike$class.nonEmpty:(Lscala/collection/TraversableProxyLike;)Z
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #228                // Method scala/collection/TraversableProxyLike$class.size:(Lscala/collection/TraversableProxyLike;)I
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #231                // Method scala/collection/TraversableProxyLike$class.hasDefiniteSize:(Lscala/collection/TraversableProxyLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #235                // Method scala/collection/TraversableProxyLike$class.$plus$plus:(Lscala/collection/TraversableProxyLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<scala.Tuple2<A, B>, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // Method scala/collection/TraversableProxyLike$class.map:(Lscala/collection/TraversableProxyLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<scala.Tuple2<A, B>, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #243                // Method scala/collection/TraversableProxyLike$class.flatMap:(Lscala/collection/TraversableProxyLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.Traversable filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #248                // Method scala/collection/TraversableProxyLike$class.filter:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Lscala/collection/Traversable;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<scala.Tuple2<A, B>, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #253                // Method scala/collection/TraversableProxyLike$class.collect:(Lscala/collection/TraversableProxyLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.mutable.Map<A, B>, scala.collection.mutable.Map<A, B>> partition(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #260                // Method scala/collection/TraversableProxyLike$class.partition:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.mutable.Map<A, B>> groupBy(scala.Function1<scala.Tuple2<A, B>, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #265                // Method scala/collection/TraversableProxyLike$class.groupBy:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public boolean forall(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #270                // Method scala/collection/TraversableProxyLike$class.forall:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #273                // Method scala/collection/TraversableProxyLike$class.exists:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Z
       5: ireturn

  public int count(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #278                // Method scala/collection/TraversableProxyLike$class.count:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)I
       5: ireturn

  public scala.Option<scala.Tuple2<A, B>> find(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #283                // Method scala/collection/TraversableProxyLike$class.find:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldLeft(B, scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #288                // Method scala/collection/TraversableProxyLike$class.foldLeft:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $div$colon(B, scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #294                // Method scala/collection/TraversableProxyLike$class.$div$colon:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #297                // Method scala/collection/TraversableProxyLike$class.foldRight:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #300                // Method scala/collection/TraversableProxyLike$class.$colon$bslash:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #305                // Method scala/collection/TraversableProxyLike$class.reduceLeft:(Lscala/collection/TraversableProxyLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // Method scala/collection/TraversableProxyLike$class.reduceLeftOption:(Lscala/collection/TraversableProxyLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> B reduceRight(scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #313                // Method scala/collection/TraversableProxyLike$class.reduceRight:(Lscala/collection/TraversableProxyLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #316                // Method scala/collection/TraversableProxyLike$class.reduceRightOption:(Lscala/collection/TraversableProxyLike;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, scala.Tuple2<A, B>, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #321                // Method scala/collection/TraversableProxyLike$class.scanLeft:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<scala.Tuple2<A, B>, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #324                // Method scala/collection/TraversableProxyLike$class.scanRight:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #329                // Method scala/collection/TraversableProxyLike$class.sum:(Lscala/collection/TraversableProxyLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #334                // Method scala/collection/TraversableProxyLike$class.product:(Lscala/collection/TraversableProxyLike;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // Method scala/collection/TraversableProxyLike$class.min:(Lscala/collection/TraversableProxyLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #344                // Method scala/collection/TraversableProxyLike$class.max:(Lscala/collection/TraversableProxyLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object head();
    Code:
       0: aload_0
       1: invokestatic  #349                // Method scala/collection/TraversableProxyLike$class.head:(Lscala/collection/TraversableProxyLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<A, B>> headOption();
    Code:
       0: aload_0
       1: invokestatic  #354                // Method scala/collection/TraversableProxyLike$class.headOption:(Lscala/collection/TraversableProxyLike;)Lscala/Option;
       4: areturn

  public scala.collection.Traversable tail();
    Code:
       0: aload_0
       1: invokestatic  #359                // Method scala/collection/TraversableProxyLike$class.tail:(Lscala/collection/TraversableProxyLike;)Lscala/collection/Traversable;
       4: areturn

  public java.lang.Object last();
    Code:
       0: aload_0
       1: invokestatic  #362                // Method scala/collection/TraversableProxyLike$class.last:(Lscala/collection/TraversableProxyLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<A, B>> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #365                // Method scala/collection/TraversableProxyLike$class.lastOption:(Lscala/collection/TraversableProxyLike;)Lscala/Option;
       4: areturn

  public scala.collection.Traversable init();
    Code:
       0: aload_0
       1: invokestatic  #368                // Method scala/collection/TraversableProxyLike$class.init:(Lscala/collection/TraversableProxyLike;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Traversable take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #373                // Method scala/collection/TraversableProxyLike$class.take:(Lscala/collection/TraversableProxyLike;I)Lscala/collection/Traversable;
       5: areturn

  public scala.collection.Traversable drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #376                // Method scala/collection/TraversableProxyLike$class.drop:(Lscala/collection/TraversableProxyLike;I)Lscala/collection/Traversable;
       5: areturn

  public scala.collection.Traversable slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #381                // Method scala/collection/TraversableProxyLike$class.slice:(Lscala/collection/TraversableProxyLike;II)Lscala/collection/Traversable;
       6: areturn

  public scala.collection.Traversable takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #384                // Method scala/collection/TraversableProxyLike$class.takeWhile:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Lscala/collection/Traversable;
       5: areturn

  public scala.collection.Traversable dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // Method scala/collection/TraversableProxyLike$class.dropWhile:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Lscala/collection/Traversable;
       5: areturn

  public scala.Tuple2<scala.collection.mutable.Map<A, B>, scala.collection.mutable.Map<A, B>> span(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #390                // Method scala/collection/TraversableProxyLike$class.span:(Lscala/collection/TraversableProxyLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.mutable.Map<A, B>, scala.collection.mutable.Map<A, B>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #395                // Method scala/collection/TraversableProxyLike$class.splitAt:(Lscala/collection/TraversableProxyLike;I)Lscala/Tuple2;
       5: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #400                // Method scala/collection/TraversableProxyLike$class.copyToBuffer:(Lscala/collection/TraversableProxyLike;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #407                // Method scala/collection/TraversableProxyLike$class.copyToArray:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;II)V
       7: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #412                // Method scala/collection/TraversableProxyLike$class.copyToArray:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // Method scala/collection/TraversableProxyLike$class.copyToArray:(Lscala/collection/TraversableProxyLike;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // Method scala/collection/TraversableProxyLike$class.toArray:(Lscala/collection/TraversableProxyLike;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<A, B>> toList();
    Code:
       0: aload_0
       1: invokestatic  #428                // Method scala/collection/TraversableProxyLike$class.toList:(Lscala/collection/TraversableProxyLike;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<scala.Tuple2<A, B>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #432                // Method scala/collection/TraversableProxyLike$class.toIterable:(Lscala/collection/TraversableProxyLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<scala.Tuple2<A, B>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #437                // Method scala/collection/TraversableProxyLike$class.toSeq:(Lscala/collection/TraversableProxyLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<A, B>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #442                // Method scala/collection/TraversableProxyLike$class.toIndexedSeq:(Lscala/collection/TraversableProxyLike;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #447                // Method scala/collection/TraversableProxyLike$class.toBuffer:(Lscala/collection/TraversableProxyLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.immutable.Stream<scala.Tuple2<A, B>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #452                // Method scala/collection/TraversableProxyLike$class.toStream:(Lscala/collection/TraversableProxyLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #457                // Method scala/collection/TraversableProxyLike$class.toSet:(Lscala/collection/TraversableProxyLike;)Lscala/collection/immutable/Set;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<scala.Tuple2<A, B>, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #462                // Method scala/collection/TraversableProxyLike$class.toMap:(Lscala/collection/TraversableProxyLike;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.Traversable<scala.Tuple2<A, B>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #467                // Method scala/collection/TraversableProxyLike$class.toTraversable:(Lscala/collection/TraversableProxyLike;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #471                // Method scala/collection/TraversableProxyLike$class.toIterator:(Lscala/collection/TraversableProxyLike;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #476                // Method scala/collection/TraversableProxyLike$class.mkString:(Lscala/collection/TraversableProxyLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #480                // Method scala/collection/TraversableProxyLike$class.mkString:(Lscala/collection/TraversableProxyLike;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #484                // Method scala/collection/TraversableProxyLike$class.mkString:(Lscala/collection/TraversableProxyLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #488                // Method scala/collection/TraversableProxyLike$class.addString:(Lscala/collection/TraversableProxyLike;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #492                // Method scala/collection/TraversableProxyLike$class.addString:(Lscala/collection/TraversableProxyLike;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #495                // Method scala/collection/TraversableProxyLike$class.stringPrefix:(Lscala/collection/TraversableProxyLike;)Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #501                // Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #505                // Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #509                // Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.Map<A, B> seq();
    Code:
       0: aload_0
       1: invokestatic  #516                // Method scala/collection/mutable/Map$class.seq:(Lscala/collection/mutable/Map;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<A, B> withDefault(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #521                // Method scala/collection/mutable/Map$class.withDefault:(Lscala/collection/mutable/Map;Lscala/Function1;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map<A, B> withDefaultValue(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #527                // Method scala/collection/mutable/Map$class.withDefaultValue:(Lscala/collection/mutable/Map;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<A, B>, scala.collection.mutable.Map<A, B>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #534                // Method scala/collection/mutable/MapLike$class.newBuilder:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<A, B>, scala.collection.parallel.mutable.ParMap<A, B>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #539                // Method scala/collection/mutable/MapLike$class.parCombiner:(Lscala/collection/mutable/MapLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.Option<B> put(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #544                // Method scala/collection/mutable/MapLike$class.put:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       6: areturn

  public void update(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #549                // Method scala/collection/mutable/MapLike$class.update:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  public scala.Option<B> remove(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #553                // Method scala/collection/mutable/MapLike$class.remove:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokestatic  #558                // Method scala/collection/mutable/MapLike$class.clear:(Lscala/collection/mutable/MapLike;)V
       4: return

  public B getOrElseUpdate(A, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #562                // Method scala/collection/mutable/MapLike$class.getOrElseUpdate:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scala.collection.mutable.MapLike<A, B, scala.collection.mutable.Map<A, B>> transform(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #567                // Method scala/collection/mutable/MapLike$class.transform:(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;
       5: areturn

  public scala.collection.mutable.MapLike<A, B, scala.collection.mutable.Map<A, B>> retain(scala.Function2<A, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #570                // Method scala/collection/mutable/MapLike$class.retain:(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;
       5: areturn

  public scala.collection.mutable.Map<A, B> clone();
    Code:
       0: aload_0
       1: invokestatic  #574                // Method scala/collection/mutable/MapLike$class.clone:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<A, B> result();
    Code:
       0: aload_0
       1: invokestatic  #577                // Method scala/collection/mutable/MapLike$class.result:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<A, B> $minus(A, A, scala.collection.Seq<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #581                // Method scala/collection/mutable/MapLike$class.$minus:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.mutable.Map<A, B> $minus$minus(scala.collection.GenTraversableOnce<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #586                // Method scala/collection/mutable/MapLike$class.$minus$minus:(Lscala/collection/mutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public java.lang.Object scala$collection$mutable$Cloneable$$super$clone();
    Code:
       0: aload_0
       1: invokespecial #589                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public scala.collection.generic.Shrinkable<A> $minus$eq(A, A, scala.collection.Seq<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #595                // Method scala/collection/generic/Shrinkable$class.$minus$eq:(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;
       7: areturn

  public scala.collection.generic.Shrinkable<A> $minus$minus$eq(scala.collection.TraversableOnce<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #600                // Method scala/collection/generic/Shrinkable$class.$minus$minus$eq:(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;
       5: areturn

  public void sizeHint(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #608                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;I)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #612                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #618                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I)V
       6: return

  public void sizeHintBounded(int, scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #624                // Method scala/collection/mutable/Builder$class.sizeHintBounded:(Lscala/collection/mutable/Builder;ILscala/collection/TraversableLike;)V
       6: return

  public <NewTo> scala.collection.mutable.Builder<scala.Tuple2<A, B>, NewTo> mapResult(scala.Function1<scala.collection.mutable.Map<A, B>, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #630                // Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #636                // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<scala.Tuple2<A, B>> $plus$plus$eq(scala.collection.TraversableOnce<scala.Tuple2<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #641                // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public <A1 extends A, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #648                // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<A, C> andThen(scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #653                // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<A, scala.Option<B>> lift();
    Code:
       0: aload_0
       1: invokestatic  #659                // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public <A1 extends A, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #664                // Method scala/PartialFunction$class.applyOrElse:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<A, java.lang.Object> runWith(scala.Function1<B, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #670                // Method scala/PartialFunction$class.runWith:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #678                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #685                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #690                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #695                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #700                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #705                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #710                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #716                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #721                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #726                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #731                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #736                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #741                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #746                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #751                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #756                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #761                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #765                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #770                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #776                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #781                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #786                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #791                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #796                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, B> compose(scala.Function1<A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #800                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.mutable.Iterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #808                // Method scala/collection/mutable/Iterable$class.companion:(Lscala/collection/mutable/Iterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.Iterable<scala.Tuple2<A, B>> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #814                // Method scala/collection/IterableLike$class.thisCollection:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #819                // Method scala/collection/IterableLike$class.toCollection:(Lscala/collection/IterableLike;Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #823                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.mutable.Iterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #829                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.mutable.Iterable<A1>, scala.collection.mutable.Iterable<A2>> unzip(scala.Function1<scala.Tuple2<A, B>, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #833                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.mutable.Iterable<A1>, scala.collection.mutable.Iterable<A2>, scala.collection.mutable.Iterable<A3>> unzip3(scala.Function1<scala.Tuple2<A, B>, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #839                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #845                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #849                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #855                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #860                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #864                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.Map<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #869                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #875                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #880                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public scala.collection.Iterator<scala.collection.mutable.Map<A, B>> tails();
    Code:
       0: aload_0
       1: invokestatic  #884                // Method scala/collection/TraversableLike$class.tails:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.mutable.Map<A, B>> inits();
    Code:
       0: aload_0
       1: invokestatic  #887                // Method scala/collection/TraversableLike$class.inits:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scala.Tuple2<A, B>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #891                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public scala.collection.generic.FilterMonadic<scala.Tuple2<A, B>, scala.collection.mutable.Map<A, B>> withFilter(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #896                // Method scala/collection/TraversableLike$class.withFilter:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #903                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<scala.Tuple2<A, B>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #909                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #914                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #918                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #922                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #926                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, scala.Tuple2<A, B>, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #931                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #938                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #941                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<A, B>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #946                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public scala.collection.mutable.Map<A, B> self();
    Code:
       0: aload_0
       1: getfield      #948                // Field self:Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #951                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #953                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #955                // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #958                // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #961                // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #963                // Method result:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #965                // Method clone:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #968                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #968                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #968                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #968                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #968                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #968                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #974                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #977                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #980                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #983                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #986                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #989                // Method dropWhile:(Lscala/Function1;)Lscala/collection/Traversable;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #991                // Method takeWhile:(Lscala/Function1;)Lscala/collection/Traversable;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #993                // Method slice:(II)Lscala/collection/Traversable;
       6: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #996                // Method drop:(I)Lscala/collection/Traversable;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #998                // Method take:(I)Lscala/collection/Traversable;
       5: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #1000               // Method init:()Lscala/collection/Traversable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #1002               // Method tail:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1005               // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1007               // Method filter:(Lscala/Function1;)Lscala/collection/Traversable;
       5: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1010               // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #1013               // Method view:()Lscala/collection/IterableView;
       4: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1015               // Method dropRight:(I)Lscala/collection/Iterable;
       5: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1017               // Method takeRight:(I)Lscala/collection/Iterable;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1019               // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.Traversable filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1019               // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1021               // Method mapValues:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1023               // Method filterKeys:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #1025               // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #1027               // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #1029               // Method keySet:()Lscala/collection/Set;
       4: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1032               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.mutable.MapLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1032               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1037               // class scala/Tuple2
       5: invokevirtual #1039               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/mutable/MapProxy;
       8: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1037               // class scala/Tuple2
       5: invokevirtual #1039               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/mutable/MapProxy;
       8: areturn

  public scala.collection.mutable.MapLike $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1039               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1043               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1043               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.mutable.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1043               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1043               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.mutable.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1047               // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1047               // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/MapProxy;
       5: areturn

  public scala.collection.mutable.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1051               // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/MapProxy;
       7: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1051               // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/MapProxy;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1058               // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1058               // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1062               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       6: areturn

  public scala.collection.mutable.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1062               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1062               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/MapProxy;
       6: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #1065               // Method empty:()Lscala/collection/mutable/MapProxy;
       4: areturn

  public scala.collection.mutable.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #1065               // Method empty:()Lscala/collection/mutable/MapProxy;
       4: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #1068               // Method repr:()Lscala/collection/mutable/MapProxy;
       4: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokevirtual #1068               // Method repr:()Lscala/collection/mutable/MapProxy;
       4: areturn

  public java.lang.Object self();
    Code:
       0: aload_0
       1: invokevirtual #1070               // Method self:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Traversable self();
    Code:
       0: aload_0
       1: invokevirtual #1070               // Method self:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.MapProxy$$anon$2(scala.collection.mutable.MapProxy<A, B>);
    Code:
       0: aload_0
       1: invokespecial #1074               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1078               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
       8: aload_0
       9: invokestatic  #1081               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      12: aload_0
      13: invokestatic  #1083               // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      16: aload_0
      17: invokestatic  #1086               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      20: aload_0
      21: invokestatic  #1091               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      24: aload_0
      25: invokestatic  #1096               // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      28: aload_0
      29: invokestatic  #1101               // Method scala/collection/mutable/Traversable$class.$init$:(Lscala/collection/mutable/Traversable;)V
      32: aload_0
      33: invokestatic  #1106               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      36: aload_0
      37: invokestatic  #1109               // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      40: aload_0
      41: invokestatic  #1114               // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      44: aload_0
      45: invokestatic  #1117               // Method scala/collection/mutable/Iterable$class.$init$:(Lscala/collection/mutable/Iterable;)V
      48: aload_0
      49: invokestatic  #1122               // Method scala/collection/GenMapLike$class.$init$:(Lscala/collection/GenMapLike;)V
      52: aload_0
      53: invokestatic  #1124               // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      56: aload_0
      57: invokestatic  #1127               // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      60: aload_0
      61: invokestatic  #1132               // Method scala/collection/generic/Subtractable$class.$init$:(Lscala/collection/generic/Subtractable;)V
      64: aload_0
      65: invokestatic  #1137               // Method scala/collection/MapLike$class.$init$:(Lscala/collection/MapLike;)V
      68: aload_0
      69: invokestatic  #1142               // Method scala/collection/Map$class.$init$:(Lscala/collection/Map;)V
      72: aload_0
      73: invokestatic  #1145               // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
      76: aload_0
      77: invokestatic  #1148               // Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
      80: aload_0
      81: invokestatic  #1151               // Method scala/collection/generic/Shrinkable$class.$init$:(Lscala/collection/generic/Shrinkable;)V
      84: aload_0
      85: invokestatic  #1156               // Method scala/collection/mutable/Cloneable$class.$init$:(Lscala/collection/mutable/Cloneable;)V
      88: aload_0
      89: invokestatic  #1158               // Method scala/collection/mutable/MapLike$class.$init$:(Lscala/collection/mutable/MapLike;)V
      92: aload_0
      93: invokestatic  #1161               // Method scala/collection/mutable/Map$class.$init$:(Lscala/collection/mutable/Map;)V
      96: aload_0
      97: invokestatic  #1164               // Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
     100: aload_0
     101: invokestatic  #1167               // Method scala/collection/TraversableProxyLike$class.$init$:(Lscala/collection/TraversableProxyLike;)V
     104: aload_0
     105: invokestatic  #1170               // Method scala/collection/IterableProxyLike$class.$init$:(Lscala/collection/IterableProxyLike;)V
     108: aload_0
     109: invokestatic  #1173               // Method scala/collection/MapProxyLike$class.$init$:(Lscala/collection/MapProxyLike;)V
     112: aload_0
     113: invokestatic  #1175               // Method scala/collection/mutable/MapProxy$class.$init$:(Lscala/collection/mutable/MapProxy;)V
     116: aload_0
     117: aload_1
     118: invokeinterface #1177,  1         // InterfaceMethod scala/collection/mutable/MapProxy.self:()Lscala/collection/Traversable;
     123: checkcast     #1179               // class scala/collection/mutable/Map
     126: invokeinterface #1181,  1         // InterfaceMethod scala/collection/mutable/Map.empty:()Lscala/collection/mutable/Map;
     131: putfield      #948                // Field self:Lscala/collection/mutable/Map;
     134: return
}
