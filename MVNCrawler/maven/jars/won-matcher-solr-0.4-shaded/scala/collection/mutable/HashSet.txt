Compiled from "HashSet.scala"
public class scala.collection.mutable.HashSet<A> extends scala.collection.mutable.AbstractSet<A> implements scala.collection.mutable.FlatHashTable<A>, scala.collection.CustomParallelizable<A, scala.collection.parallel.mutable.ParHashSet<A>>, scala.Serializable {
  public static final long serialVersionUID;

  private transient int _loadFactor;

  private transient java.lang.Object[] table;

  private transient int tableSize;

  private transient int threshold;

  private transient int[] sizemap;

  private transient int seedvalue;

  public static <A> scala.collection.generic.CanBuildFrom<scala.collection.mutable.HashSet<?>, A, scala.collection.mutable.HashSet<A>> canBuildFrom();
    Code:
       0: getstatic     #23                 // Field scala/collection/mutable/HashSet$.MODULE$:Lscala/collection/mutable/HashSet$;
       3: invokevirtual #25                 // Method scala/collection/mutable/HashSet$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       6: areturn

  public static <A> java.lang.Object setCanBuildFrom();
    Code:
       0: getstatic     #23                 // Field scala/collection/mutable/HashSet$.MODULE$:Lscala/collection/mutable/HashSet$;
       3: invokevirtual #28                 // Method scala/collection/mutable/HashSet$.setCanBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       6: areturn

  public scala.collection.parallel.Combiner<A, scala.collection.parallel.mutable.ParHashSet<A>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public int _loadFactor();
    Code:
       0: aload_0
       1: getfield      #53                 // Field _loadFactor:I
       4: ireturn

  public void _loadFactor_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field _loadFactor:I
       5: return

  public java.lang.Object[] table();
    Code:
       0: aload_0
       1: getfield      #60                 // Field table:[Ljava/lang/Object;
       4: areturn

  public void table_$eq(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field table:[Ljava/lang/Object;
       5: return

  public int tableSize();
    Code:
       0: aload_0
       1: getfield      #64                 // Field tableSize:I
       4: ireturn

  public void tableSize_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field tableSize:I
       5: return

  public int threshold();
    Code:
       0: aload_0
       1: getfield      #67                 // Field threshold:I
       4: ireturn

  public void threshold_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field threshold:I
       5: return

  public int[] sizemap();
    Code:
       0: aload_0
       1: getfield      #71                 // Field sizemap:[I
       4: areturn

  public void sizemap_$eq(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field sizemap:[I
       5: return

  public int seedvalue();
    Code:
       0: aload_0
       1: getfield      #75                 // Field seedvalue:I
       4: ireturn

  public void seedvalue_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #75                 // Field seedvalue:I
       5: return

  public int capacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #83                 // Method scala/collection/mutable/FlatHashTable$class.capacity:(Lscala/collection/mutable/FlatHashTable;I)I
       5: ireturn

  public int initialSize();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method scala/collection/mutable/FlatHashTable$class.initialSize:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public int randomSeed();
    Code:
       0: aload_0
       1: invokestatic  #91                 // Method scala/collection/mutable/FlatHashTable$class.randomSeed:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public int tableSizeSeed();
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method scala/collection/mutable/FlatHashTable$class.tableSizeSeed:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public void init(java.io.ObjectInputStream, scala.Function1<A, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #99                 // Method scala/collection/mutable/FlatHashTable$class.init:(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectInputStream;Lscala/Function1;)V
       6: return

  public void serializeTo(java.io.ObjectOutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // Method scala/collection/mutable/FlatHashTable$class.serializeTo:(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
       5: return

  public scala.Option<A> findEntry(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // Method scala/collection/mutable/FlatHashTable$class.findEntry:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public boolean containsElem(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #122                // Method scala/collection/mutable/FlatHashTable$class.containsElem:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean addElem(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method scala/collection/mutable/FlatHashTable$class.addElem:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean addEntry(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method scala/collection/mutable/FlatHashTable$class.addEntry:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean removeElem(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #132                // Method scala/collection/mutable/FlatHashTable$class.removeElem:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
       5: ireturn

  public void nnSizeMapAdd(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #136                // Method scala/collection/mutable/FlatHashTable$class.nnSizeMapAdd:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public void nnSizeMapRemove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #140                // Method scala/collection/mutable/FlatHashTable$class.nnSizeMapRemove:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public void nnSizeMapReset(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #143                // Method scala/collection/mutable/FlatHashTable$class.nnSizeMapReset:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public final int totalSizeMapBuckets();
    Code:
       0: aload_0
       1: invokestatic  #147                // Method scala/collection/mutable/FlatHashTable$class.totalSizeMapBuckets:(Lscala/collection/mutable/FlatHashTable;)I
       4: ireturn

  public int calcSizeMapSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #150                // Method scala/collection/mutable/FlatHashTable$class.calcSizeMapSize:(Lscala/collection/mutable/FlatHashTable;I)I
       5: ireturn

  public void sizeMapInit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #153                // Method scala/collection/mutable/FlatHashTable$class.sizeMapInit:(Lscala/collection/mutable/FlatHashTable;I)V
       5: return

  public void sizeMapInitAndRebuild();
    Code:
       0: aload_0
       1: invokestatic  #158                // Method scala/collection/mutable/FlatHashTable$class.sizeMapInitAndRebuild:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public void printSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #161                // Method scala/collection/mutable/FlatHashTable$class.printSizeMap:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public void printContents();
    Code:
       0: aload_0
       1: invokestatic  #164                // Method scala/collection/mutable/FlatHashTable$class.printContents:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public void sizeMapDisable();
    Code:
       0: aload_0
       1: invokestatic  #167                // Method scala/collection/mutable/FlatHashTable$class.sizeMapDisable:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public boolean isSizeMapDefined();
    Code:
       0: aload_0
       1: invokestatic  #172                // Method scala/collection/mutable/FlatHashTable$class.isSizeMapDefined:(Lscala/collection/mutable/FlatHashTable;)Z
       4: ireturn

  public boolean alwaysInitSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #175                // Method scala/collection/mutable/FlatHashTable$class.alwaysInitSizeMap:(Lscala/collection/mutable/FlatHashTable;)Z
       4: ireturn

  public final int index(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #178                // Method scala/collection/mutable/FlatHashTable$class.index:(Lscala/collection/mutable/FlatHashTable;I)I
       5: ireturn

  public void clearTable();
    Code:
       0: aload_0
       1: invokestatic  #182                // Method scala/collection/mutable/FlatHashTable$class.clearTable:(Lscala/collection/mutable/FlatHashTable;)V
       4: return

  public scala.collection.mutable.FlatHashTable$Contents<A> hashTableContents();
    Code:
       0: aload_0
       1: invokestatic  #187                // Method scala/collection/mutable/FlatHashTable$class.hashTableContents:(Lscala/collection/mutable/FlatHashTable;)Lscala/collection/mutable/FlatHashTable$Contents;
       4: areturn

  public void initWithContents(scala.collection.mutable.FlatHashTable$Contents<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // Method scala/collection/mutable/FlatHashTable$class.initWithContents:(Lscala/collection/mutable/FlatHashTable;Lscala/collection/mutable/FlatHashTable$Contents;)V
       5: return

  public final int sizeMapBucketBitSize();
    Code:
       0: aload_0
       1: invokestatic  #200                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.sizeMapBucketBitSize:(Lscala/collection/mutable/FlatHashTable$HashUtils;)I
       4: ireturn

  public final int sizeMapBucketSize();
    Code:
       0: aload_0
       1: invokestatic  #203                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.sizeMapBucketSize:(Lscala/collection/mutable/FlatHashTable$HashUtils;)I
       4: ireturn

  public final int improve(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #208                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.improve:(Lscala/collection/mutable/FlatHashTable$HashUtils;II)I
       6: ireturn

  public final java.lang.Object elemToEntry(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.elemToEntry:(Lscala/collection/mutable/FlatHashTable$HashUtils;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public final A entryToElem(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.entryToElem:(Lscala/collection/mutable/FlatHashTable$HashUtils;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.mutable.HashSet> companion();
    Code:
       0: getstatic     #23                 // Field scala/collection/mutable/HashSet$.MODULE$:Lscala/collection/mutable/HashSet$;
       3: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #223                // Method tableSize:()I
       4: ireturn

  public boolean contains(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #226                // Method containsElem:(Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.mutable.HashSet<A> $plus$eq(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #230                // Method addElem:(Ljava/lang/Object;)Z
       5: pop
       6: aload_0
       7: areturn

  public scala.collection.mutable.HashSet<A> $minus$eq(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #233                // Method removeElem:(Ljava/lang/Object;)Z
       5: pop
       6: aload_0
       7: areturn

  public scala.collection.parallel.mutable.ParHashSet<A> par();
    Code:
       0: new           #237                // class scala/collection/parallel/mutable/ParHashSet
       3: dup
       4: aload_0
       5: invokevirtual #239                // Method hashTableContents:()Lscala/collection/mutable/FlatHashTable$Contents;
       8: invokespecial #242                // Method scala/collection/parallel/mutable/ParHashSet."<init>":(Lscala/collection/mutable/FlatHashTable$Contents;)V
      11: areturn

  public boolean add(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #230                // Method addElem:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean remove(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #233                // Method removeElem:(Ljava/lang/Object;)Z
       5: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #247                // Method clearTable:()V
       4: return

  public scala.collection.Iterator<A> iterator();
    Code:
       0: aload_0
       1: invokestatic  #252                // Method scala/collection/mutable/FlatHashTable$class.iterator:(Lscala/collection/mutable/FlatHashTable;)Lscala/collection/Iterator;
       4: areturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #256                // Method table:()[Ljava/lang/Object;
       6: arraylength
       7: istore_3
       8: iload_2
       9: iload_3
      10: if_icmpge     52
      13: aload_0
      14: invokevirtual #256                // Method table:()[Ljava/lang/Object;
      17: iload_2
      18: aaload
      19: astore        4
      21: aload         4
      23: ifnull        41
      26: aload_1
      27: aload_0
      28: aload         4
      30: invokevirtual #258                // Method entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
      33: invokeinterface #263,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: goto          44
      41: getstatic     #269                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      44: pop
      45: iload_2
      46: iconst_1
      47: iadd
      48: istore_2
      49: goto          8
      52: return

  public scala.collection.mutable.HashSet<A> clone();
    Code:
       0: new           #2                  // class scala/collection/mutable/HashSet
       3: dup
       4: invokespecial #278                // Method "<init>":()V
       7: aload_0
       8: invokevirtual #282                // Method $plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
      11: checkcast     #2                  // class scala/collection/mutable/HashSet
      14: areturn

  private void writeObject(java.io.ObjectOutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #285                // Method serializeTo:(Ljava/io/ObjectOutputStream;)V
       5: return

  private void readObject(java.io.ObjectInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #290                // class scala/collection/mutable/HashSet$$anonfun$readObject$1
       5: dup
       6: aload_0
       7: invokespecial #293                // Method scala/collection/mutable/HashSet$$anonfun$readObject$1."<init>":(Lscala/collection/mutable/HashSet;)V
      10: invokevirtual #295                // Method init:(Ljava/io/ObjectInputStream;Lscala/Function1;)V
      13: return

  public void useSizeMap(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: invokevirtual #299                // Method isSizeMapDefined:()Z
       8: ifne          22
      11: aload_0
      12: invokevirtual #301                // Method sizeMapInitAndRebuild:()V
      15: goto          22
      18: aload_0
      19: invokevirtual #303                // Method sizeMapDisable:()V
      22: return

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #310                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #315                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #320                // Method repr:()Ljava/lang/Object;
       4: checkcast     #322                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #327                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #333                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #338                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #343                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #346                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #348                // Method apply:(Ljava/lang/Object;)Z
       5: invokestatic  #354                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public scala.collection.Set empty();
    Code:
       0: aload_0
       1: invokevirtual #360                // Method empty:()Lscala/collection/GenSet;
       4: checkcast     #362                // class scala/collection/Set
       7: areturn

  public java.lang.Object diff(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #367                // Method diff:(Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public java.lang.Object union(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #372                // Method union:(Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #377                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #382                // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #389                // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Set;
       7: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #396                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #396                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #396                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #402                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $plus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #406                // Method $plus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Set;
       7: areturn

  public java.lang.Object $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #408                // Method $plus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #408                // Method $plus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #412                // Method result:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #416                // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.Set seq();
    Code:
       0: aload_0
       1: invokevirtual #416                // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #418                // Method clone:()Lscala/collection/mutable/HashSet;
       4: areturn

  public scala.collection.mutable.Set clone();
    Code:
       0: aload_0
       1: invokevirtual #418                // Method clone:()Lscala/collection/mutable/HashSet;
       4: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #421                // Method par:()Lscala/collection/parallel/mutable/ParHashSet;
       4: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #424                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/HashSet;
       5: areturn

  public scala.collection.mutable.SetLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #424                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/HashSet;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #428                // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/HashSet;
       5: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #428                // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/HashSet;
       5: areturn

  public scala.collection.mutable.SetLike $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #428                // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/HashSet;
       5: areturn

  public scala.collection.mutable.HashSet(scala.collection.mutable.FlatHashTable$Contents<A>);
    Code:
       0: aload_0
       1: invokespecial #430                // Method scala/collection/mutable/AbstractSet."<init>":()V
       4: aload_0
       5: invokestatic  #434                // Method scala/collection/mutable/FlatHashTable$HashUtils$class.$init$:(Lscala/collection/mutable/FlatHashTable$HashUtils;)V
       8: aload_0
       9: invokestatic  #436                // Method scala/collection/mutable/FlatHashTable$class.$init$:(Lscala/collection/mutable/FlatHashTable;)V
      12: aload_0
      13: invokestatic  #439                // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      16: aload_0
      17: aload_1
      18: invokevirtual #441                // Method initWithContents:(Lscala/collection/mutable/FlatHashTable$Contents;)V
      21: return

  public scala.collection.mutable.HashSet();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #443                // Method "<init>":(Lscala/collection/mutable/FlatHashTable$Contents;)V
       5: return
}
