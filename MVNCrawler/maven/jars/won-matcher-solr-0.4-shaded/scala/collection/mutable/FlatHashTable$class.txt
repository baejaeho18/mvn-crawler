Compiled from "FlatHashTable.scala"
public abstract class scala.collection.mutable.FlatHashTable$class {
  private static final boolean tableDebug(scala.collection.mutable.FlatHashTable);
    Code:
       0: iconst_0
       1: ireturn

  public static int capacity(scala.collection.mutable.FlatHashTable, int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpne     9
       5: iconst_1
       6: goto          16
       9: getstatic     #17                 // Field scala/collection/mutable/HashTable$.MODULE$:Lscala/collection/mutable/HashTable$;
      12: iload_1
      13: invokevirtual #21                 // Method scala/collection/mutable/HashTable$.powerOfTwo:(I)I
      16: ireturn

  public static int initialSize(scala.collection.mutable.FlatHashTable);
    Code:
       0: bipush        32
       2: ireturn

  private static int initialCapacity(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #31,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.initialSize:()I
       7: invokeinterface #33,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.capacity:(I)I
      12: ireturn

  public static int randomSeed(scala.collection.mutable.FlatHashTable);
    Code:
       0: getstatic     #39                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
       3: invokevirtual #43                 // Method scala/collection/mutable/FlatHashTable$.seedGenerator:()Ljava/lang/ThreadLocal;
       6: invokevirtual #49                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       9: checkcast     #51                 // class scala/util/Random
      12: invokevirtual #54                 // Method scala/util/Random.nextInt:()I
      15: ireturn

  public static int tableSizeSeed(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
       6: arraylength
       7: iconst_1
       8: isub
       9: invokestatic  #64                 // Method java/lang/Integer.bitCount:(I)I
      12: ireturn

  public static void init(scala.collection.mutable.FlatHashTable, java.io.ObjectInputStream, scala.Function1);
    Code:
       0: aload_1
       1: invokevirtual #72                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #75                 // Method java/io/ObjectInputStream.readInt:()I
       9: invokeinterface #79,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor_$eq:(I)V
      14: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      17: aload_0
      18: invokeinterface #87,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
      23: iconst_0
      24: if_icmple     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokevirtual #91                 // Method scala/Predef$.assert:(Z)V
      35: aload_1
      36: invokevirtual #75                 // Method java/io/ObjectInputStream.readInt:()I
      39: istore_3
      40: aload_0
      41: iconst_0
      42: invokeinterface #94,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
      47: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      50: iload_3
      51: iconst_0
      52: if_icmplt     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: invokevirtual #91                 // Method scala/Predef$.assert:(Z)V
      63: aload_0
      64: aload_0
      65: getstatic     #39                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
      68: iload_3
      69: aload_0
      70: invokeinterface #87,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
      75: invokevirtual #98                 // Method scala/collection/mutable/FlatHashTable$.sizeForThreshold:(II)I
      78: invokeinterface #33,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.capacity:(I)I
      83: anewarray     #4                  // class java/lang/Object
      86: invokeinterface #102,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
      91: aload_0
      92: getstatic     #39                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
      95: aload_0
      96: invokeinterface #87,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
     101: aload_0
     102: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     107: arraylength
     108: invokevirtual #105                // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
     111: invokeinterface #108,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
     116: aload_0
     117: aload_1
     118: invokevirtual #75                 // Method java/io/ObjectInputStream.readInt:()I
     121: invokeinterface #111,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.seedvalue_$eq:(I)V
     126: aload_1
     127: invokevirtual #115                // Method java/io/ObjectInputStream.readBoolean:()Z
     130: istore        4
     132: iload         4
     134: ifeq          153
     137: aload_0
     138: aload_0
     139: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     144: arraylength
     145: invokeinterface #118,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapInit:(I)V
     150: goto          160
     153: aload_0
     154: aconst_null
     155: invokeinterface #122,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap_$eq:([I)V
     160: iconst_0
     161: istore        5
     163: iload         5
     165: iload_3
     166: if_icmpge     208
     169: aload_0
     170: aload_1
     171: invokevirtual #125                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
     174: invokeinterface #129,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
     179: astore        6
     181: aload_2
     182: aload         6
     184: invokeinterface #134,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     189: pop
     190: aload_0
     191: aload         6
     193: invokeinterface #138,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.addElem:(Ljava/lang/Object;)Z
     198: pop
     199: iload         5
     201: iconst_1
     202: iadd
     203: istore        5
     205: goto          163
     208: return

  public static void serializeTo(scala.collection.mutable.FlatHashTable, java.io.ObjectOutputStream);
    Code:
       0: aload_1
       1: invokevirtual #155                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokeinterface #87,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
      11: invokevirtual #158                // Method java/io/ObjectOutputStream.writeInt:(I)V
      14: aload_1
      15: aload_0
      16: invokeinterface #161,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
      21: invokevirtual #158                // Method java/io/ObjectOutputStream.writeInt:(I)V
      24: aload_1
      25: aload_0
      26: invokeinterface #164,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.seedvalue:()I
      31: invokevirtual #158                // Method java/io/ObjectOutputStream.writeInt:(I)V
      34: aload_1
      35: aload_0
      36: invokeinterface #167,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.isSizeMapDefined:()Z
      41: invokevirtual #170                // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
      44: aload_0
      45: invokeinterface #174,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.iterator:()Lscala/collection/Iterator;
      50: new           #176                // class scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1
      53: dup
      54: aload_0
      55: aload_1
      56: invokespecial #179                // Method scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1."<init>":(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
      59: invokeinterface #185,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      64: return

  public static scala.Option findEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // Method findElemImpl:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     17
      10: getstatic     #198                // Field scala/None$.MODULE$:Lscala/None$;
      13: astore_3
      14: goto          32
      17: new           #200                // class scala/Some
      20: dup
      21: aload_0
      22: aload_2
      23: invokeinterface #129,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
      28: invokespecial #203                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      31: astore_3
      32: aload_3
      33: areturn

  public static boolean containsElem(scala.collection.mutable.FlatHashTable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // Method findElemImpl:(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnonnull     12
       8: iconst_0
       9: goto          13
      12: iconst_1
      13: ireturn

  private static java.lang.Object findElemImpl(scala.collection.mutable.FlatHashTable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #210,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #213                // Method java/lang/Object.hashCode:()I
      13: invokeinterface #215,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
      18: istore_3
      19: aload_0
      20: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      25: iload_3
      26: aaload
      27: astore        4
      29: aload         4
      31: ifnull        102
      34: aload         4
      36: aload_2
      37: if_acmpne     44
      40: iconst_1
      41: goto          99
      44: aload         4
      46: ifnonnull     53
      49: iconst_0
      50: goto          99
      53: aload         4
      55: instanceof    #217                // class java/lang/Number
      58: ifeq          73
      61: aload         4
      63: checkcast     #217                // class java/lang/Number
      66: aload_2
      67: invokestatic  #223                // Method scala/runtime/BoxesRunTime.equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
      70: goto          99
      73: aload         4
      75: instanceof    #225                // class java/lang/Character
      78: ifeq          93
      81: aload         4
      83: checkcast     #225                // class java/lang/Character
      86: aload_2
      87: invokestatic  #229                // Method scala/runtime/BoxesRunTime.equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
      90: goto          99
      93: aload         4
      95: aload_2
      96: invokevirtual #232                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      99: ifeq          105
     102: aload         4
     104: areturn
     105: iload_3
     106: iconst_1
     107: iadd
     108: aload_0
     109: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     114: arraylength
     115: irem
     116: istore_3
     117: aload_0
     118: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     123: iload_3
     124: aaload
     125: astore        4
     127: goto          29

  public static boolean addElem(scala.collection.mutable.FlatHashTable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #210,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #238,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.addEntry:(Ljava/lang/Object;)Z
      13: ireturn

  public static boolean addEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #213                // Method java/lang/Object.hashCode:()I
       5: invokeinterface #215,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
      10: istore_2
      11: aload_0
      12: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      17: iload_2
      18: aaload
      19: astore_3
      20: aload_3
      21: ifnonnull     75
      24: aload_0
      25: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      30: iload_2
      31: aload_1
      32: aastore
      33: aload_0
      34: aload_0
      35: invokeinterface #161,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
      40: iconst_1
      41: iadd
      42: invokeinterface #94,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
      47: aload_0
      48: iload_2
      49: invokeinterface #241,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.nnSizeMapAdd:(I)V
      54: aload_0
      55: invokeinterface #161,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
      60: aload_0
      61: invokeinterface #244,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.threshold:()I
      66: if_icmplt     73
      69: aload_0
      70: invokestatic  #248                // Method growTable:(Lscala/collection/mutable/FlatHashTable;)V
      73: iconst_1
      74: ireturn
      75: aload_3
      76: aload_1
      77: if_acmpne     84
      80: iconst_1
      81: goto          133
      84: aload_3
      85: ifnonnull     92
      88: iconst_0
      89: goto          133
      92: aload_3
      93: instanceof    #217                // class java/lang/Number
      96: ifeq          110
      99: aload_3
     100: checkcast     #217                // class java/lang/Number
     103: aload_1
     104: invokestatic  #223                // Method scala/runtime/BoxesRunTime.equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
     107: goto          133
     110: aload_3
     111: instanceof    #225                // class java/lang/Character
     114: ifeq          128
     117: aload_3
     118: checkcast     #225                // class java/lang/Character
     121: aload_1
     122: invokestatic  #229                // Method scala/runtime/BoxesRunTime.equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
     125: goto          133
     128: aload_3
     129: aload_1
     130: invokevirtual #232                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     133: ifeq          138
     136: iconst_0
     137: ireturn
     138: iload_2
     139: iconst_1
     140: iadd
     141: aload_0
     142: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     147: arraylength
     148: irem
     149: istore_2
     150: aload_0
     151: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     156: iload_2
     157: aaload
     158: astore_3
     159: goto          20

  public static boolean removeElem(scala.collection.mutable.FlatHashTable, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #252                // Method tableDebug:(Lscala/collection/mutable/FlatHashTable;)Z
       4: ifeq          11
       7: aload_0
       8: invokestatic  #255                // Method checkConsistent:(Lscala/collection/mutable/FlatHashTable;)V
      11: aload_0
      12: aload_1
      13: invokeinterface #210,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
      18: astore_2
      19: aload_0
      20: aload_2
      21: invokevirtual #213                // Method java/lang/Object.hashCode:()I
      24: invokeinterface #215,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
      29: istore        6
      31: aload_0
      32: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      37: iload         6
      39: aaload
      40: astore        7
      42: aload         7
      44: ifnonnull     49
      47: iconst_0
      48: ireturn
      49: aload         7
      51: aload_2
      52: if_acmpne     59
      55: iconst_1
      56: goto          114
      59: aload         7
      61: ifnonnull     68
      64: iconst_0
      65: goto          114
      68: aload         7
      70: instanceof    #217                // class java/lang/Number
      73: ifeq          88
      76: aload         7
      78: checkcast     #217                // class java/lang/Number
      81: aload_2
      82: invokestatic  #223                // Method scala/runtime/BoxesRunTime.equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
      85: goto          114
      88: aload         7
      90: instanceof    #225                // class java/lang/Character
      93: ifeq          108
      96: aload         7
      98: checkcast     #225                // class java/lang/Character
     101: aload_2
     102: invokestatic  #229                // Method scala/runtime/BoxesRunTime.equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
     105: goto          114
     108: aload         7
     110: aload_2
     111: invokevirtual #232                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     114: ifeq          266
     117: iload         6
     119: istore        4
     121: iload         6
     123: iconst_1
     124: iadd
     125: aload_0
     126: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     131: arraylength
     132: irem
     133: istore        5
     135: aload_0
     136: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     141: iload         5
     143: aaload
     144: ifnonnull     192
     147: aload_0
     148: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     153: iload         4
     155: aconst_null
     156: aastore
     157: aload_0
     158: aload_0
     159: invokeinterface #161,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
     164: iconst_1
     165: isub
     166: invokeinterface #94,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
     171: aload_0
     172: iload         4
     174: invokeinterface #258,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.nnSizeMapRemove:(I)V
     179: aload_0
     180: invokestatic  #252                // Method tableDebug:(Lscala/collection/mutable/FlatHashTable;)Z
     183: ifeq          190
     186: aload_0
     187: invokestatic  #255                // Method checkConsistent:(Lscala/collection/mutable/FlatHashTable;)V
     190: iconst_1
     191: ireturn
     192: aload_0
     193: aload_0
     194: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     199: iload         5
     201: aaload
     202: invokevirtual #213                // Method java/lang/Object.hashCode:()I
     205: invokeinterface #215,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
     210: istore_3
     211: iload_3
     212: iload         5
     214: if_icmpeq     249
     217: aload_0
     218: iload_3
     219: iload         4
     221: invokestatic  #262                // Method precedes$1:(Lscala/collection/mutable/FlatHashTable;II)Z
     224: ifeq          249
     227: aload_0
     228: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     233: iload         4
     235: aload_0
     236: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     241: iload         5
     243: aaload
     244: aastore
     245: iload         5
     247: istore        4
     249: iload         5
     251: iconst_1
     252: iadd
     253: aload_0
     254: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     259: arraylength
     260: irem
     261: istore        5
     263: goto          135
     266: iload         6
     268: iconst_1
     269: iadd
     270: aload_0
     271: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     276: arraylength
     277: irem
     278: istore        6
     280: aload_0
     281: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     286: iload         6
     288: aaload
     289: astore        7
     291: goto          42

  public static scala.collection.Iterator iterator(scala.collection.mutable.FlatHashTable);
    Code:
       0: new           #269                // class scala/collection/mutable/FlatHashTable$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #271                // Method scala/collection/mutable/FlatHashTable$$anon$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
       8: areturn

  private static void growTable(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
       6: astore_1
       7: aload_0
       8: aload_0
       9: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      14: arraylength
      15: iconst_2
      16: imul
      17: anewarray     #4                  // class java/lang/Object
      20: invokeinterface #102,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
      25: aload_0
      26: iconst_0
      27: invokeinterface #94,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
      32: aload_0
      33: aload_0
      34: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      39: arraylength
      40: invokeinterface #274,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.nnSizeMapReset:(I)V
      45: aload_0
      46: aload_0
      47: invokeinterface #276,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSizeSeed:()I
      52: invokeinterface #111,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.seedvalue_$eq:(I)V
      57: aload_0
      58: getstatic     #39                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
      61: aload_0
      62: invokeinterface #87,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
      67: aload_0
      68: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      73: arraylength
      74: invokevirtual #105                // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
      77: invokeinterface #108,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
      82: iconst_0
      83: istore_3
      84: iload_3
      85: aload_1
      86: arraylength
      87: if_icmpge     122
      90: aload_1
      91: iload_3
      92: aaload
      93: astore_2
      94: aload_2
      95: ifnonnull     104
      98: getstatic     #282                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     101: goto          114
     104: aload_0
     105: aload_2
     106: invokeinterface #238,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.addEntry:(Ljava/lang/Object;)Z
     111: invokestatic  #286                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     114: pop
     115: iload_3
     116: iconst_1
     117: iadd
     118: istore_3
     119: goto          84
     122: aload_0
     123: invokestatic  #252                // Method tableDebug:(Lscala/collection/mutable/FlatHashTable;)Z
     126: ifeq          133
     129: aload_0
     130: invokestatic  #255                // Method checkConsistent:(Lscala/collection/mutable/FlatHashTable;)V
     133: return

  private static void checkConsistent(scala.collection.mutable.FlatHashTable);
    Code:
       0: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: astore_1
       4: aload_0
       5: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      10: arraylength
      11: istore_3
      12: getstatic     #296                // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
      15: astore_2
      16: new           #298                // class scala/collection/immutable/Range
      19: dup
      20: iconst_0
      21: iload_3
      22: iconst_1
      23: invokespecial #301                // Method scala/collection/immutable/Range."<init>":(III)V
      26: new           #303                // class scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1
      29: dup
      30: aload_0
      31: invokespecial #304                // Method scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
      34: astore        5
      36: dup
      37: astore        4
      39: invokevirtual #307                // Method scala/collection/immutable/Range.isEmpty:()Z
      42: ifne          98
      45: aload         4
      47: invokevirtual #310                // Method scala/collection/immutable/Range.start:()I
      50: istore        7
      52: aload_0
      53: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      58: iload         7
      60: aaload
      61: ifnull        88
      64: aload_0
      65: aload_0
      66: aload_0
      67: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      72: iload         7
      74: aaload
      75: invokeinterface #129,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
      80: invokeinterface #312,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.containsElem:(Ljava/lang/Object;)Z
      85: ifeq          112
      88: iload         7
      90: aload         4
      92: invokevirtual #315                // Method scala/collection/immutable/Range.lastElement:()I
      95: if_icmpne     99
      98: return
      99: iload         7
     101: aload         4
     103: invokevirtual #318                // Method scala/collection/immutable/Range.step:()I
     106: iadd
     107: istore        7
     109: goto          52
     112: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     115: new           #320                // class scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1
     118: dup
     119: aload         5
     121: iload         7
     123: invokespecial #323                // Method scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1."<init>":(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;I)V
     126: astore        8
     128: astore        6
     130: new           #325                // class java/lang/AssertionError
     133: dup
     134: new           #327                // class scala/collection/mutable/StringBuilder
     137: dup
     138: invokespecial #329                // Method scala/collection/mutable/StringBuilder."<init>":()V
     141: ldc_w         #331                // String assertion failed:
     144: invokevirtual #335                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     147: new           #327                // class scala/collection/mutable/StringBuilder
     150: dup
     151: invokespecial #329                // Method scala/collection/mutable/StringBuilder."<init>":()V
     154: iload         7
     156: invokevirtual #338                // Method scala/collection/mutable/StringBuilder.append:(I)Lscala/collection/mutable/StringBuilder;
     159: ldc_w         #340                // String
     162: invokevirtual #335                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     165: aload         8
     167: getfield      #344                // Field scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1.$outer:Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;
     170: getfield      #346                // Field scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1.$outer:Lscala/collection/mutable/FlatHashTable;
     173: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     178: iload         7
     180: aaload
     181: invokevirtual #335                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     184: ldc_w         #340                // String
     187: invokevirtual #335                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     190: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     193: aload         8
     195: getfield      #344                // Field scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1.$outer:Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;
     198: getfield      #346                // Field scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1.$outer:Lscala/collection/mutable/FlatHashTable;
     201: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
     206: astore        10
     208: astore        9
     210: new           #348                // class scala/collection/mutable/ArrayOps$ofRef
     213: dup
     214: aload         10
     216: invokespecial #350                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     219: invokestatic  #356                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
     222: invokevirtual #335                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     225: invokevirtual #360                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     228: invokevirtual #335                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     231: invokevirtual #360                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     234: invokespecial #361                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     237: athrow

  public static void nnSizeMapAdd(scala.collection.mutable.FlatHashTable, int);
    Code:
       0: aload_0
       1: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
       6: ifnull        33
       9: iload_1
      10: aload_0
      11: invokeinterface #370,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapBucketBitSize:()I
      16: ishr
      17: istore_2
      18: aload_0
      19: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
      24: astore_3
      25: aload_3
      26: iload_2
      27: aload_3
      28: iload_2
      29: iaload
      30: iconst_1
      31: iadd
      32: iastore
      33: return

  public static void nnSizeMapRemove(scala.collection.mutable.FlatHashTable, int);
    Code:
       0: aload_0
       1: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
       6: ifnull        33
       9: aload_0
      10: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
      15: astore_2
      16: iload_1
      17: aload_0
      18: invokeinterface #370,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapBucketBitSize:()I
      23: ishr
      24: istore_3
      25: aload_2
      26: iload_3
      27: aload_2
      28: iload_3
      29: iaload
      30: iconst_1
      31: isub
      32: iastore
      33: return

  public static void nnSizeMapReset(scala.collection.mutable.FlatHashTable, int);
    Code:
       0: aload_0
       1: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
       6: ifnull        50
       9: aload_0
      10: iload_1
      11: invokeinterface #374,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.calcSizeMapSize:(I)I
      16: istore_2
      17: aload_0
      18: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
      23: arraylength
      24: iload_2
      25: if_icmpeq     40
      28: aload_0
      29: iload_2
      30: newarray       int
      32: invokeinterface #122,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap_$eq:([I)V
      37: goto          50
      40: aload_0
      41: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
      46: iconst_0
      47: invokestatic  #380                // Method java/util/Arrays.fill:([II)V
      50: return

  public static final int totalSizeMapBuckets(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
       6: arraylength
       7: iconst_1
       8: isub
       9: aload_0
      10: invokeinterface #386,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapBucketSize:()I
      15: idiv
      16: iconst_1
      17: iadd
      18: ireturn

  public static int calcSizeMapSize(scala.collection.mutable.FlatHashTable, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokeinterface #370,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapBucketBitSize:()I
       7: ishr
       8: iconst_1
       9: iadd
      10: ireturn

  public static void sizeMapInit(scala.collection.mutable.FlatHashTable, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokeinterface #374,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.calcSizeMapSize:(I)I
       8: newarray       int
      10: invokeinterface #122,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap_$eq:([I)V
      15: return

  public static void sizeMapInitAndRebuild(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
       7: arraylength
       8: invokeinterface #118,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapInit:(I)V
      13: aload_0
      14: invokeinterface #389,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.totalSizeMapBuckets:()I
      19: istore_3
      20: iconst_0
      21: istore        8
      23: iconst_0
      24: istore        5
      26: aload_0
      27: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      32: astore        4
      34: getstatic     #394                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      37: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      40: aload_0
      41: invokeinterface #386,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapBucketSize:()I
      46: istore_2
      47: astore_1
      48: iload_2
      49: aload         4
      51: arraylength
      52: invokevirtual #397                // Method scala/runtime/RichInt$.min$extension:(II)I
      55: istore        7
      57: iload         8
      59: iload_3
      60: if_icmpge     127
      63: iconst_0
      64: istore        6
      66: iload         5
      68: iload         7
      70: if_icmpge     96
      73: aload         4
      75: iload         5
      77: aaload
      78: ifnull        87
      81: iload         6
      83: iconst_1
      84: iadd
      85: istore        6
      87: iload         5
      89: iconst_1
      90: iadd
      91: istore        5
      93: goto          66
      96: aload_0
      97: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
     102: iload         8
     104: iload         6
     106: iastore
     107: iload         7
     109: aload_0
     110: invokeinterface #386,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapBucketSize:()I
     115: iadd
     116: istore        7
     118: iload         8
     120: iconst_1
     121: iadd
     122: istore        8
     124: goto          57
     127: return

  public static void printSizeMap(scala.collection.mutable.FlatHashTable);
    Code:
       0: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
      12: invokevirtual #408                // Method scala/Predef$.intArrayOps:([I)Lscala/collection/mutable/ArrayOps;
      15: ldc_w         #410                // String szmap: [
      18: ldc_w         #412                // String ,
      21: ldc_w         #414                // String ]
      24: invokeinterface #419,  4          // InterfaceMethod scala/collection/mutable/ArrayOps.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #422                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      32: return

  public static void printContents(scala.collection.mutable.FlatHashTable);
    Code:
       0: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      12: invokevirtual #427                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      15: ldc_w         #429                // String [
      18: ldc_w         #412                // String ,
      21: ldc_w         #414                // String ]
      24: invokeinterface #419,  4          // InterfaceMethod scala/collection/mutable/ArrayOps.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #422                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      32: return

  public static void sizeMapDisable(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: aconst_null
       2: invokeinterface #122,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap_$eq:([I)V
       7: return

  public static boolean isSizeMapDefined(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean alwaysInitSizeMap(scala.collection.mutable.FlatHashTable);
    Code:
       0: iconst_0
       1: ireturn

  public static final int index(scala.collection.mutable.FlatHashTable, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokeinterface #164,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.seedvalue:()I
       8: invokeinterface #434,  3          // InterfaceMethod scala/collection/mutable/FlatHashTable.improve:(II)I
      13: istore_2
      14: aload_0
      15: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      20: arraylength
      21: iconst_1
      22: isub
      23: istore_3
      24: iload_2
      25: bipush        32
      27: iload_3
      28: invokestatic  #64                 // Method java/lang/Integer.bitCount:(I)I
      31: isub
      32: iushr
      33: iload_3
      34: iand
      35: ireturn

  public static void clearTable(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_1
      10: iload_1
      11: iconst_0
      12: if_icmplt     31
      15: aload_0
      16: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      21: iload_1
      22: aconst_null
      23: aastore
      24: iload_1
      25: iconst_1
      26: isub
      27: istore_1
      28: goto          10
      31: aload_0
      32: iconst_0
      33: invokeinterface #94,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
      38: aload_0
      39: aload_0
      40: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      45: arraylength
      46: invokeinterface #274,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.nnSizeMapReset:(I)V
      51: return

  public static scala.collection.mutable.FlatHashTable$Contents hashTableContents(scala.collection.mutable.FlatHashTable);
    Code:
       0: new           #442                // class scala/collection/mutable/FlatHashTable$Contents
       3: dup
       4: aload_0
       5: invokeinterface #87,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
      10: aload_0
      11: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      16: aload_0
      17: invokeinterface #161,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
      22: aload_0
      23: invokeinterface #244,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.threshold:()I
      28: aload_0
      29: invokeinterface #164,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.seedvalue:()I
      34: aload_0
      35: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
      40: invokespecial #445                // Method scala/collection/mutable/FlatHashTable$Contents."<init>":(I[Ljava/lang/Object;III[I)V
      43: areturn

  public static void initWithContents(scala.collection.mutable.FlatHashTable, scala.collection.mutable.FlatHashTable$Contents);
    Code:
       0: aload_1
       1: ifnull        64
       4: aload_0
       5: aload_1
       6: invokevirtual #450                // Method scala/collection/mutable/FlatHashTable$Contents.loadFactor:()I
       9: invokeinterface #79,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor_$eq:(I)V
      14: aload_0
      15: aload_1
      16: invokevirtual #451                // Method scala/collection/mutable/FlatHashTable$Contents.table:()[Ljava/lang/Object;
      19: invokeinterface #102,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
      24: aload_0
      25: aload_1
      26: invokevirtual #452                // Method scala/collection/mutable/FlatHashTable$Contents.tableSize:()I
      29: invokeinterface #94,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
      34: aload_0
      35: aload_1
      36: invokevirtual #453                // Method scala/collection/mutable/FlatHashTable$Contents.threshold:()I
      39: invokeinterface #108,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
      44: aload_0
      45: aload_1
      46: invokevirtual #454                // Method scala/collection/mutable/FlatHashTable$Contents.seedvalue:()I
      49: invokeinterface #111,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.seedvalue_$eq:(I)V
      54: aload_0
      55: aload_1
      56: invokevirtual #455                // Method scala/collection/mutable/FlatHashTable$Contents.sizemap:()[I
      59: invokeinterface #122,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap_$eq:([I)V
      64: aload_0
      65: invokeinterface #457,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.alwaysInitSizeMap:()Z
      70: ifeq          89
      73: aload_0
      74: invokeinterface #367,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap:()[I
      79: aconst_null
      80: if_acmpne     89
      83: aload_0
      84: invokeinterface #459,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizeMapInitAndRebuild:()V
      89: return

  private static final boolean precedes$1(scala.collection.mutable.FlatHashTable, int, int);
    Code:
       0: aload_0
       1: invokeinterface #59,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
       6: arraylength
       7: iconst_1
       8: ishr
       9: istore_3
      10: iload_1
      11: iload_2
      12: if_icmpgt     30
      15: iload_2
      16: iload_1
      17: isub
      18: iload_3
      19: if_icmpge     26
      22: iconst_1
      23: goto          42
      26: iconst_0
      27: goto          42
      30: iload_1
      31: iload_2
      32: isub
      33: iload_3
      34: if_icmple     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public static void $init$(scala.collection.mutable.FlatHashTable);
    Code:
       0: aload_0
       1: getstatic     #39                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
       4: invokevirtual #467                // Method scala/collection/mutable/FlatHashTable$.defaultLoadFactor:()I
       7: invokeinterface #79,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor_$eq:(I)V
      12: aload_0
      13: aload_0
      14: invokestatic  #469                // Method initialCapacity:(Lscala/collection/mutable/FlatHashTable;)I
      17: anewarray     #4                  // class java/lang/Object
      20: invokeinterface #102,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
      25: aload_0
      26: iconst_0
      27: invokeinterface #94,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
      32: aload_0
      33: getstatic     #39                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
      36: aload_0
      37: invokeinterface #87,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
      42: aload_0
      43: invokestatic  #469                // Method initialCapacity:(Lscala/collection/mutable/FlatHashTable;)I
      46: invokevirtual #105                // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
      49: invokeinterface #108,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
      54: aload_0
      55: aconst_null
      56: invokeinterface #122,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.sizemap_$eq:([I)V
      61: aload_0
      62: aload_0
      63: invokeinterface #276,  1          // InterfaceMethod scala/collection/mutable/FlatHashTable.tableSizeSeed:()I
      68: invokeinterface #111,  2          // InterfaceMethod scala/collection/mutable/FlatHashTable.seedvalue_$eq:(I)V
      73: return
}
