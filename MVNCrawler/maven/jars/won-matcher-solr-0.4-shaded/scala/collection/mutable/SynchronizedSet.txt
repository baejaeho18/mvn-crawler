Compiled from "SynchronizedSet.scala"
public interface scala.collection.mutable.SynchronizedSet<A> extends scala.collection.mutable.Set<A> {
  public abstract int scala$collection$mutable$SynchronizedSet$$super$size();

  public abstract boolean scala$collection$mutable$SynchronizedSet$$super$isEmpty();

  public abstract boolean scala$collection$mutable$SynchronizedSet$$super$contains(java.lang.Object);

  public abstract scala.collection.mutable.SynchronizedSet scala$collection$mutable$SynchronizedSet$$super$$plus$eq(java.lang.Object);

  public abstract scala.collection.mutable.SynchronizedSet scala$collection$mutable$SynchronizedSet$$super$$plus$plus$eq(scala.collection.TraversableOnce);

  public abstract scala.collection.mutable.SynchronizedSet scala$collection$mutable$SynchronizedSet$$super$$minus$eq(java.lang.Object);

  public abstract scala.collection.mutable.SynchronizedSet scala$collection$mutable$SynchronizedSet$$super$$minus$minus$eq(scala.collection.TraversableOnce);

  public abstract void scala$collection$mutable$SynchronizedSet$$super$update(java.lang.Object, boolean);

  public abstract boolean scala$collection$mutable$SynchronizedSet$$super$add(java.lang.Object);

  public abstract boolean scala$collection$mutable$SynchronizedSet$$super$remove(java.lang.Object);

  public abstract scala.collection.mutable.Set scala$collection$mutable$SynchronizedSet$$super$intersect(scala.collection.GenSet);

  public abstract void scala$collection$mutable$SynchronizedSet$$super$clear();

  public abstract boolean scala$collection$mutable$SynchronizedSet$$super$subsetOf(scala.collection.GenSet);

  public abstract void scala$collection$mutable$SynchronizedSet$$super$foreach(scala.Function1);

  public abstract void scala$collection$mutable$SynchronizedSet$$super$retain(scala.Function1);

  public abstract scala.collection.immutable.List scala$collection$mutable$SynchronizedSet$$super$toList();

  public abstract java.lang.String scala$collection$mutable$SynchronizedSet$$super$toString();

  public abstract void scala$collection$mutable$SynchronizedSet$$super$$less$less(scala.collection.script.Message);

  public abstract scala.collection.mutable.Set scala$collection$mutable$SynchronizedSet$$super$clone();

  public abstract int size();

  public abstract boolean isEmpty();

  public abstract boolean contains(A);

  public abstract scala.collection.mutable.SynchronizedSet<A> $plus$eq(A);

  public abstract scala.collection.mutable.SynchronizedSet<A> $plus$plus$eq(scala.collection.TraversableOnce<A>);

  public abstract scala.collection.mutable.SynchronizedSet<A> $minus$eq(A);

  public abstract scala.collection.mutable.SynchronizedSet<A> $minus$minus$eq(scala.collection.TraversableOnce<A>);

  public abstract void update(A, boolean);

  public abstract boolean add(A);

  public abstract boolean remove(A);

  public abstract scala.collection.mutable.Set<A> intersect(scala.collection.GenSet<A>);

  public abstract void clear();

  public abstract boolean subsetOf(scala.collection.GenSet<A>);

  public abstract <U> void foreach(scala.Function1<A, U>);

  public abstract void retain(scala.Function1<A, java.lang.Object>);

  public abstract scala.collection.immutable.List<A> toList();

  public abstract java.lang.String toString();

  public abstract void $less$less(scala.collection.script.Message<A>);

  public abstract scala.collection.mutable.Set<A> clone();
}
