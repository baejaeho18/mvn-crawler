Compiled from "SynchronizedMap.scala"
public interface scala.collection.mutable.SynchronizedMap<A, B> extends scala.collection.mutable.Map<A, B> {
  public abstract scala.Option scala$collection$mutable$SynchronizedMap$$super$get(java.lang.Object);

  public abstract scala.collection.Iterator scala$collection$mutable$SynchronizedMap$$super$iterator();

  public abstract scala.collection.mutable.SynchronizedMap scala$collection$mutable$SynchronizedMap$$super$$plus$eq(scala.Tuple2);

  public abstract scala.collection.mutable.SynchronizedMap scala$collection$mutable$SynchronizedMap$$super$$minus$eq(java.lang.Object);

  public abstract int scala$collection$mutable$SynchronizedMap$$super$size();

  public abstract scala.Option scala$collection$mutable$SynchronizedMap$$super$put(java.lang.Object, java.lang.Object);

  public abstract void scala$collection$mutable$SynchronizedMap$$super$update(java.lang.Object, java.lang.Object);

  public abstract scala.Option scala$collection$mutable$SynchronizedMap$$super$remove(java.lang.Object);

  public abstract void scala$collection$mutable$SynchronizedMap$$super$clear();

  public abstract java.lang.Object scala$collection$mutable$SynchronizedMap$$super$getOrElseUpdate(java.lang.Object, scala.Function0);

  public abstract scala.collection.mutable.SynchronizedMap scala$collection$mutable$SynchronizedMap$$super$transform(scala.Function2);

  public abstract scala.collection.mutable.SynchronizedMap scala$collection$mutable$SynchronizedMap$$super$retain(scala.Function2);

  public abstract scala.collection.Iterable scala$collection$mutable$SynchronizedMap$$super$values();

  public abstract scala.collection.Iterator scala$collection$mutable$SynchronizedMap$$super$valuesIterator();

  public abstract scala.collection.mutable.Map scala$collection$mutable$SynchronizedMap$$super$clone();

  public abstract void scala$collection$mutable$SynchronizedMap$$super$foreach(scala.Function1);

  public abstract java.lang.Object scala$collection$mutable$SynchronizedMap$$super$apply(java.lang.Object);

  public abstract scala.collection.Set scala$collection$mutable$SynchronizedMap$$super$keySet();

  public abstract scala.collection.Iterable scala$collection$mutable$SynchronizedMap$$super$keys();

  public abstract scala.collection.Iterator scala$collection$mutable$SynchronizedMap$$super$keysIterator();

  public abstract boolean scala$collection$mutable$SynchronizedMap$$super$isEmpty();

  public abstract boolean scala$collection$mutable$SynchronizedMap$$super$contains(java.lang.Object);

  public abstract boolean scala$collection$mutable$SynchronizedMap$$super$isDefinedAt(java.lang.Object);

  public abstract scala.Option<B> get(A);

  public abstract scala.collection.Iterator<scala.Tuple2<A, B>> iterator();

  public abstract scala.collection.mutable.SynchronizedMap<A, B> $plus$eq(scala.Tuple2<A, B>);

  public abstract scala.collection.mutable.SynchronizedMap<A, B> $minus$eq(A);

  public abstract int size();

  public abstract scala.Option<B> put(A, B);

  public abstract void update(A, B);

  public abstract scala.Option<B> remove(A);

  public abstract void clear();

  public abstract B getOrElseUpdate(A, scala.Function0<B>);

  public abstract scala.collection.mutable.SynchronizedMap<A, B> transform(scala.Function2<A, B, B>);

  public abstract scala.collection.mutable.SynchronizedMap<A, B> retain(scala.Function2<A, B, java.lang.Object>);

  public abstract scala.collection.Iterable<B> values();

  public abstract scala.collection.Iterator<B> valuesIterator();

  public abstract scala.collection.mutable.Map<A, B> clone();

  public abstract <U> void foreach(scala.Function1<scala.Tuple2<A, B>, U>);

  public abstract B apply(A);

  public abstract scala.collection.Set<A> keySet();

  public abstract scala.collection.Iterable<A> keys();

  public abstract scala.collection.Iterator<A> keysIterator();

  public abstract boolean isEmpty();

  public abstract boolean contains(A);

  public abstract boolean isDefinedAt(A);
}
