Compiled from "IndexedSeqView.scala"
public interface scala.collection.mutable.IndexedSeqView<A, Coll> extends scala.collection.mutable.IndexedSeq<A>, scala.collection.mutable.IndexedSeqOptimized<A, scala.collection.mutable.IndexedSeqView<A, Coll>>, scala.collection.SeqView<A, Coll> {
  public abstract scala.collection.mutable.IndexedSeqView scala$collection$mutable$IndexedSeqView$$super$tail();

  public abstract void update(int, A);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll>.Transformed<A> newFiltered(scala.Function1<A, java.lang.Object>);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll>.Transformed<A> newSliced(scala.collection.generic.SliceInterval);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll>.Transformed<A> newDroppedWhile(scala.Function1<A, java.lang.Object>);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll>.Transformed<A> newTakenWhile(scala.Function1<A, java.lang.Object>);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll>.Transformed<A> newReversed();

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> filter(scala.Function1<A, java.lang.Object>);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> init();

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> drop(int);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> take(int);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> slice(int, int);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> dropWhile(scala.Function1<A, java.lang.Object>);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> takeWhile(scala.Function1<A, java.lang.Object>);

  public abstract scala.Tuple2<scala.collection.mutable.IndexedSeqView<A, Coll>, scala.collection.mutable.IndexedSeqView<A, Coll>> span(scala.Function1<A, java.lang.Object>);

  public abstract scala.Tuple2<scala.collection.mutable.IndexedSeqView<A, Coll>, scala.collection.mutable.IndexedSeqView<A, Coll>> splitAt(int);

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> reverse();

  public abstract scala.collection.mutable.IndexedSeqView<A, Coll> tail();
}
