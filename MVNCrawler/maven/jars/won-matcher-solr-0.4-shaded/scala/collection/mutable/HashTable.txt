Compiled from "HashTable.scala"
public interface scala.collection.mutable.HashTable<A, Entry extends scala.collection.mutable.HashEntry<A, Entry>> extends scala.collection.mutable.HashTable$HashUtils<A> {
  public abstract int _loadFactor();

  public abstract void _loadFactor_$eq(int);

  public abstract scala.collection.mutable.HashEntry<A, Entry>[] table();

  public abstract void table_$eq(scala.collection.mutable.HashEntry<A, Entry>[]);

  public abstract int tableSize();

  public abstract void tableSize_$eq(int);

  public abstract int threshold();

  public abstract void threshold_$eq(int);

  public abstract int[] sizemap();

  public abstract void sizemap_$eq(int[]);

  public abstract int seedvalue();

  public abstract void seedvalue_$eq(int);

  public abstract int tableSizeSeed();

  public abstract int initialSize();

  public abstract void init(java.io.ObjectInputStream, scala.Function0<Entry>);

  public abstract void serializeTo(java.io.ObjectOutputStream, scala.Function1<Entry, scala.runtime.BoxedUnit>);

  public abstract Entry findEntry(A);

  public abstract void addEntry(Entry);

  public abstract <B> Entry findOrAddEntry(A, B);

  public abstract <B> Entry createNewEntry(A, B);

  public abstract Entry removeEntry(A);

  public abstract scala.collection.Iterator<Entry> entriesIterator();

  public abstract <U> void foreachEntry(scala.Function1<Entry, U>);

  public abstract void clearTable();

  public abstract void nnSizeMapAdd(int);

  public abstract void nnSizeMapRemove(int);

  public abstract void nnSizeMapReset(int);

  public abstract int totalSizeMapBuckets();

  public abstract int calcSizeMapSize(int);

  public abstract void sizeMapInit(int);

  public abstract void sizeMapInitAndRebuild();

  public abstract void printSizeMap();

  public abstract void sizeMapDisable();

  public abstract boolean isSizeMapDefined();

  public abstract boolean alwaysInitSizeMap();

  public abstract boolean elemEquals(A, A);

  public abstract int index(int);

  public abstract void initWithContents(scala.collection.mutable.HashTable$Contents<A, Entry>);

  public abstract scala.collection.mutable.HashTable$Contents<A, Entry> hashTableContents();
}
