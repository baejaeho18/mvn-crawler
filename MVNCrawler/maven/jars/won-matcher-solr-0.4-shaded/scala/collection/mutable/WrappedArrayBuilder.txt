Compiled from "WrappedArrayBuilder.scala"
public class scala.collection.mutable.WrappedArrayBuilder<A> implements scala.collection.mutable.Builder<A, scala.collection.mutable.WrappedArray<A>> {
  private final scala.reflect.ClassTag<A> tag;

  private final scala.reflect.ClassTag<A> manifest;

  private scala.collection.mutable.WrappedArray<A> elems;

  private int capacity;

  private int size;

  public void sizeHint(scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #36                 // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I)V
       6: return

  public void sizeHintBounded(int, scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #42                 // Method scala/collection/mutable/Builder$class.sizeHintBounded:(Lscala/collection/mutable/Builder;ILscala/collection/TraversableLike;)V
       6: return

  public <NewTo> scala.collection.mutable.Builder<A, NewTo> mapResult(scala.Function1<scala.collection.mutable.WrappedArray<A>, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
       5: areturn

  public scala.collection.generic.Growable<A> $plus$eq(A, A, scala.collection.Seq<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #57                 // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<A> $plus$plus$eq(scala.collection.TraversableOnce<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public scala.reflect.ClassTag<A> manifest();
    Code:
       0: aload_0
       1: getfield      #71                 // Field manifest:Lscala/reflect/ClassTag;
       4: areturn

  private scala.collection.mutable.WrappedArray<A> elems();
    Code:
       0: aload_0
       1: getfield      #74                 // Field elems:Lscala/collection/mutable/WrappedArray;
       4: areturn

  private void elems_$eq(scala.collection.mutable.WrappedArray<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #74                 // Field elems:Lscala/collection/mutable/WrappedArray;
       5: return

  private int capacity();
    Code:
       0: aload_0
       1: getfield      #80                 // Field capacity:I
       4: ireturn

  private void capacity_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #80                 // Field capacity:I
       5: return

  private int size();
    Code:
       0: aload_0
       1: getfield      #84                 // Field size:I
       4: ireturn

  private void size_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #84                 // Field size:I
       5: return

  private scala.collection.mutable.WrappedArray<A> mkArray(int);
    Code:
       0: getstatic     #93                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: getfield      #95                 // Field tag:Lscala/reflect/ClassTag;
       7: invokevirtual #99                 // Method scala/runtime/ScalaRunTime$.arrayElementClass:(Ljava/lang/Object;)Ljava/lang/Class;
      10: astore_2
      11: getstatic     #105                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      14: dup
      15: ifnonnull     26
      18: pop
      19: aload_2
      20: ifnull        33
      23: goto          47
      26: aload_2
      27: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      30: ifeq          47
      33: new           #111                // class scala/collection/mutable/WrappedArray$ofByte
      36: dup
      37: iload_1
      38: newarray       byte
      40: invokespecial #115                // Method scala/collection/mutable/WrappedArray$ofByte."<init>":([B)V
      43: astore_3
      44: goto          357
      47: getstatic     #118                // Field java/lang/Short.TYPE:Ljava/lang/Class;
      50: dup
      51: ifnonnull     62
      54: pop
      55: aload_2
      56: ifnull        69
      59: goto          83
      62: aload_2
      63: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          83
      69: new           #120                // class scala/collection/mutable/WrappedArray$ofShort
      72: dup
      73: iload_1
      74: newarray       short
      76: invokespecial #123                // Method scala/collection/mutable/WrappedArray$ofShort."<init>":([S)V
      79: astore_3
      80: goto          357
      83: getstatic     #126                // Field java/lang/Character.TYPE:Ljava/lang/Class;
      86: dup
      87: ifnonnull     98
      90: pop
      91: aload_2
      92: ifnull        105
      95: goto          119
      98: aload_2
      99: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     102: ifeq          119
     105: new           #128                // class scala/collection/mutable/WrappedArray$ofChar
     108: dup
     109: iload_1
     110: newarray       char
     112: invokespecial #131                // Method scala/collection/mutable/WrappedArray$ofChar."<init>":([C)V
     115: astore_3
     116: goto          357
     119: getstatic     #134                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     122: dup
     123: ifnonnull     134
     126: pop
     127: aload_2
     128: ifnull        141
     131: goto          155
     134: aload_2
     135: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     138: ifeq          155
     141: new           #136                // class scala/collection/mutable/WrappedArray$ofInt
     144: dup
     145: iload_1
     146: newarray       int
     148: invokespecial #139                // Method scala/collection/mutable/WrappedArray$ofInt."<init>":([I)V
     151: astore_3
     152: goto          357
     155: getstatic     #142                // Field java/lang/Long.TYPE:Ljava/lang/Class;
     158: dup
     159: ifnonnull     170
     162: pop
     163: aload_2
     164: ifnull        177
     167: goto          191
     170: aload_2
     171: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     174: ifeq          191
     177: new           #144                // class scala/collection/mutable/WrappedArray$ofLong
     180: dup
     181: iload_1
     182: newarray       long
     184: invokespecial #147                // Method scala/collection/mutable/WrappedArray$ofLong."<init>":([J)V
     187: astore_3
     188: goto          357
     191: getstatic     #150                // Field java/lang/Float.TYPE:Ljava/lang/Class;
     194: dup
     195: ifnonnull     206
     198: pop
     199: aload_2
     200: ifnull        213
     203: goto          227
     206: aload_2
     207: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     210: ifeq          227
     213: new           #152                // class scala/collection/mutable/WrappedArray$ofFloat
     216: dup
     217: iload_1
     218: newarray       float
     220: invokespecial #155                // Method scala/collection/mutable/WrappedArray$ofFloat."<init>":([F)V
     223: astore_3
     224: goto          357
     227: getstatic     #158                // Field java/lang/Double.TYPE:Ljava/lang/Class;
     230: dup
     231: ifnonnull     242
     234: pop
     235: aload_2
     236: ifnull        249
     239: goto          263
     242: aload_2
     243: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     246: ifeq          263
     249: new           #160                // class scala/collection/mutable/WrappedArray$ofDouble
     252: dup
     253: iload_1
     254: newarray       double
     256: invokespecial #163                // Method scala/collection/mutable/WrappedArray$ofDouble."<init>":([D)V
     259: astore_3
     260: goto          357
     263: getstatic     #166                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     266: dup
     267: ifnonnull     278
     270: pop
     271: aload_2
     272: ifnull        285
     275: goto          299
     278: aload_2
     279: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     282: ifeq          299
     285: new           #168                // class scala/collection/mutable/WrappedArray$ofBoolean
     288: dup
     289: iload_1
     290: newarray       boolean
     292: invokespecial #171                // Method scala/collection/mutable/WrappedArray$ofBoolean."<init>":([Z)V
     295: astore_3
     296: goto          357
     299: getstatic     #174                // Field java/lang/Void.TYPE:Ljava/lang/Class;
     302: dup
     303: ifnonnull     314
     306: pop
     307: aload_2
     308: ifnull        321
     311: goto          336
     314: aload_2
     315: invokevirtual #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     318: ifeq          336
     321: new           #176                // class scala/collection/mutable/WrappedArray$ofUnit
     324: dup
     325: iload_1
     326: anewarray     #178                // class scala/runtime/BoxedUnit
     329: invokespecial #181                // Method scala/collection/mutable/WrappedArray$ofUnit."<init>":([Lscala/runtime/BoxedUnit;)V
     332: astore_3
     333: goto          357
     336: new           #183                // class scala/collection/mutable/WrappedArray$ofRef
     339: dup
     340: aload_0
     341: getfield      #95                 // Field tag:Lscala/reflect/ClassTag;
     344: iload_1
     345: invokeinterface #189,  2          // InterfaceMethod scala/reflect/ClassTag.newArray:(I)Ljava/lang/Object;
     350: checkcast     #191                // class "[Ljava/lang/Object;"
     353: invokespecial #194                // Method scala/collection/mutable/WrappedArray$ofRef."<init>":([Ljava/lang/Object;)V
     356: astore_3
     357: aload_0
     358: invokespecial #196                // Method size:()I
     361: iconst_0
     362: if_icmple     388
     365: getstatic     #201                // Field scala/Array$.MODULE$:Lscala/Array$;
     368: aload_0
     369: invokespecial #203                // Method elems:()Lscala/collection/mutable/WrappedArray;
     372: invokevirtual #209                // Method scala/collection/mutable/WrappedArray.array:()Ljava/lang/Object;
     375: iconst_0
     376: aload_3
     377: invokevirtual #209                // Method scala/collection/mutable/WrappedArray.array:()Ljava/lang/Object;
     380: iconst_0
     381: aload_0
     382: invokespecial #196                // Method size:()I
     385: invokevirtual #213                // Method scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     388: aload_3
     389: areturn

  private void resize(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokespecial #219                // Method mkArray:(I)Lscala/collection/mutable/WrappedArray;
       6: invokespecial #221                // Method elems_$eq:(Lscala/collection/mutable/WrappedArray;)V
       9: aload_0
      10: iload_1
      11: invokespecial #223                // Method capacity_$eq:(I)V
      14: return

  public void sizeHint(int);
    Code:
       0: aload_0
       1: invokespecial #225                // Method capacity:()I
       4: iload_1
       5: if_icmpge     13
       8: aload_0
       9: iload_1
      10: invokespecial #227                // Method resize:(I)V
      13: return

  private void ensureSize(int);
    Code:
       0: aload_0
       1: invokespecial #225                // Method capacity:()I
       4: iload_1
       5: if_icmpge     45
       8: aload_0
       9: invokespecial #225                // Method capacity:()I
      12: iconst_0
      13: if_icmpne     21
      16: bipush        16
      18: goto          27
      21: aload_0
      22: invokespecial #225                // Method capacity:()I
      25: iconst_2
      26: imul
      27: istore_2
      28: iload_2
      29: iload_1
      30: if_icmpge     40
      33: iload_2
      34: iconst_2
      35: imul
      36: istore_2
      37: goto          28
      40: aload_0
      41: iload_2
      42: invokespecial #227                // Method resize:(I)V
      45: return

  public scala.collection.mutable.WrappedArrayBuilder<A> $plus$eq(A);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #196                // Method size:()I
       5: iconst_1
       6: iadd
       7: invokespecial #232                // Method ensureSize:(I)V
      10: aload_0
      11: invokespecial #203                // Method elems:()Lscala/collection/mutable/WrappedArray;
      14: aload_0
      15: invokespecial #196                // Method size:()I
      18: aload_1
      19: invokevirtual #236                // Method scala/collection/mutable/WrappedArray.update:(ILjava/lang/Object;)V
      22: aload_0
      23: aload_0
      24: invokespecial #196                // Method size:()I
      27: iconst_1
      28: iadd
      29: invokespecial #238                // Method size_$eq:(I)V
      32: aload_0
      33: areturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #238                // Method size_$eq:(I)V
       5: return

  public scala.collection.mutable.WrappedArray<A> result();
    Code:
       0: aload_0
       1: invokespecial #225                // Method capacity:()I
       4: iconst_0
       5: if_icmpeq     26
       8: aload_0
       9: invokespecial #225                // Method capacity:()I
      12: aload_0
      13: invokespecial #196                // Method size:()I
      16: if_icmpne     26
      19: aload_0
      20: invokespecial #203                // Method elems:()Lscala/collection/mutable/WrappedArray;
      23: goto          34
      26: aload_0
      27: aload_0
      28: invokespecial #196                // Method size:()I
      31: invokespecial #219                // Method mkArray:(I)Lscala/collection/mutable/WrappedArray;
      34: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method result:()Lscala/collection/mutable/WrappedArray;
       4: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #247                // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
       5: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #247                // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
       5: areturn

  public scala.collection.mutable.WrappedArrayBuilder(scala.reflect.ClassTag<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field tag:Lscala/reflect/ClassTag;
       5: aload_0
       6: invokespecial #251                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #255                // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
      13: aload_0
      14: invokestatic  #258                // Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
      17: aload_0
      18: aload_1
      19: putfield      #71                 // Field manifest:Lscala/reflect/ClassTag;
      22: aload_0
      23: iconst_0
      24: putfield      #80                 // Field capacity:I
      27: aload_0
      28: iconst_0
      29: putfield      #84                 // Field size:I
      32: return
}
