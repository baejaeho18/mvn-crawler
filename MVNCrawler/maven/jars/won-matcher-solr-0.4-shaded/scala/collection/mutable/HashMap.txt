Compiled from "HashMap.scala"
public class scala.collection.mutable.HashMap<A, B> extends scala.collection.mutable.AbstractMap<A, B> implements scala.collection.mutable.HashTable<A, scala.collection.mutable.DefaultEntry<A, B>>, scala.collection.CustomParallelizable<scala.Tuple2<A, B>, scala.collection.parallel.mutable.ParHashMap<A, B>>, scala.Serializable {
  public static final long serialVersionUID;

  private transient int _loadFactor;

  private transient scala.collection.mutable.HashEntry<java.lang.Object, scala.collection.mutable.HashEntry>[] table;

  private transient int tableSize;

  private transient int threshold;

  private transient int[] sizemap;

  private transient int seedvalue;

  public static <A, B> scala.collection.generic.CanBuildFrom<scala.collection.mutable.HashMap<?, ?>, scala.Tuple2<A, B>, scala.collection.mutable.HashMap<A, B>> canBuildFrom();
    Code:
       0: getstatic     #23                 // Field scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
       3: invokevirtual #25                 // Method scala/collection/mutable/HashMap$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       6: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<A, B>, scala.collection.parallel.mutable.ParHashMap<A, B>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public int _loadFactor();
    Code:
       0: aload_0
       1: getfield      #51                 // Field _loadFactor:I
       4: ireturn

  public void _loadFactor_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field _loadFactor:I
       5: return

  public scala.collection.mutable.HashEntry<A, scala.collection.mutable.DefaultEntry<A, B>>[] table();
    Code:
       0: aload_0
       1: getfield      #57                 // Field table:[Lscala/collection/mutable/HashEntry;
       4: areturn

  public void table_$eq(scala.collection.mutable.HashEntry<A, scala.collection.mutable.DefaultEntry<A, B>>[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field table:[Lscala/collection/mutable/HashEntry;
       5: return

  public int tableSize();
    Code:
       0: aload_0
       1: getfield      #61                 // Field tableSize:I
       4: ireturn

  public void tableSize_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #61                 // Field tableSize:I
       5: return

  public int threshold();
    Code:
       0: aload_0
       1: getfield      #64                 // Field threshold:I
       4: ireturn

  public void threshold_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field threshold:I
       5: return

  public int[] sizemap();
    Code:
       0: aload_0
       1: getfield      #68                 // Field sizemap:[I
       4: areturn

  public void sizemap_$eq(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field sizemap:[I
       5: return

  public int seedvalue();
    Code:
       0: aload_0
       1: getfield      #72                 // Field seedvalue:I
       4: ireturn

  public void seedvalue_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #72                 // Field seedvalue:I
       5: return

  public int tableSizeSeed();
    Code:
       0: aload_0
       1: invokestatic  #79                 // Method scala/collection/mutable/HashTable$class.tableSizeSeed:(Lscala/collection/mutable/HashTable;)I
       4: ireturn

  public int initialSize();
    Code:
       0: aload_0
       1: invokestatic  #82                 // Method scala/collection/mutable/HashTable$class.initialSize:(Lscala/collection/mutable/HashTable;)I
       4: ireturn

  public void init(java.io.ObjectInputStream, scala.Function0<scala.collection.mutable.DefaultEntry<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // Method scala/collection/mutable/HashTable$class.init:(Lscala/collection/mutable/HashTable;Ljava/io/ObjectInputStream;Lscala/Function0;)V
       6: return

  public void serializeTo(java.io.ObjectOutputStream, scala.Function1<scala.collection.mutable.DefaultEntry<A, B>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // Method scala/collection/mutable/HashTable$class.serializeTo:(Lscala/collection/mutable/HashTable;Ljava/io/ObjectOutputStream;Lscala/Function1;)V
       6: return

  public scala.collection.mutable.HashEntry findEntry(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method scala/collection/mutable/HashTable$class.findEntry:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: areturn

  public void addEntry(scala.collection.mutable.HashEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #112                // Method scala/collection/mutable/HashTable$class.addEntry:(Lscala/collection/mutable/HashTable;Lscala/collection/mutable/HashEntry;)V
       5: return

  public scala.collection.mutable.HashEntry findOrAddEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // Method scala/collection/mutable/HashTable$class.findOrAddEntry:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       6: areturn

  public scala.collection.mutable.HashEntry removeEntry(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // Method scala/collection/mutable/HashTable$class.removeEntry:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.DefaultEntry<A, B>> entriesIterator();
    Code:
       0: aload_0
       1: invokestatic  #128                // Method scala/collection/mutable/HashTable$class.entriesIterator:(Lscala/collection/mutable/HashTable;)Lscala/collection/Iterator;
       4: areturn

  public <U> void foreachEntry(scala.Function1<scala.collection.mutable.DefaultEntry<A, B>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method scala/collection/mutable/HashTable$class.foreachEntry:(Lscala/collection/mutable/HashTable;Lscala/Function1;)V
       5: return

  public void clearTable();
    Code:
       0: aload_0
       1: invokestatic  #139                // Method scala/collection/mutable/HashTable$class.clearTable:(Lscala/collection/mutable/HashTable;)V
       4: return

  public void nnSizeMapAdd(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #143                // Method scala/collection/mutable/HashTable$class.nnSizeMapAdd:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public void nnSizeMapRemove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #147                // Method scala/collection/mutable/HashTable$class.nnSizeMapRemove:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public void nnSizeMapReset(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #150                // Method scala/collection/mutable/HashTable$class.nnSizeMapReset:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public final int totalSizeMapBuckets();
    Code:
       0: aload_0
       1: invokestatic  #154                // Method scala/collection/mutable/HashTable$class.totalSizeMapBuckets:(Lscala/collection/mutable/HashTable;)I
       4: ireturn

  public int calcSizeMapSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #159                // Method scala/collection/mutable/HashTable$class.calcSizeMapSize:(Lscala/collection/mutable/HashTable;I)I
       5: ireturn

  public void sizeMapInit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #162                // Method scala/collection/mutable/HashTable$class.sizeMapInit:(Lscala/collection/mutable/HashTable;I)V
       5: return

  public void sizeMapInitAndRebuild();
    Code:
       0: aload_0
       1: invokestatic  #165                // Method scala/collection/mutable/HashTable$class.sizeMapInitAndRebuild:(Lscala/collection/mutable/HashTable;)V
       4: return

  public void printSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #168                // Method scala/collection/mutable/HashTable$class.printSizeMap:(Lscala/collection/mutable/HashTable;)V
       4: return

  public void sizeMapDisable();
    Code:
       0: aload_0
       1: invokestatic  #171                // Method scala/collection/mutable/HashTable$class.sizeMapDisable:(Lscala/collection/mutable/HashTable;)V
       4: return

  public boolean isSizeMapDefined();
    Code:
       0: aload_0
       1: invokestatic  #176                // Method scala/collection/mutable/HashTable$class.isSizeMapDefined:(Lscala/collection/mutable/HashTable;)Z
       4: ireturn

  public boolean alwaysInitSizeMap();
    Code:
       0: aload_0
       1: invokestatic  #179                // Method scala/collection/mutable/HashTable$class.alwaysInitSizeMap:(Lscala/collection/mutable/HashTable;)Z
       4: ireturn

  public boolean elemEquals(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #184                // Method scala/collection/mutable/HashTable$class.elemEquals:(Lscala/collection/mutable/HashTable;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public final int index(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #189                // Method scala/collection/mutable/HashTable$class.index:(Lscala/collection/mutable/HashTable;I)I
       5: ireturn

  public void initWithContents(scala.collection.mutable.HashTable$Contents<A, scala.collection.mutable.DefaultEntry<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // Method scala/collection/mutable/HashTable$class.initWithContents:(Lscala/collection/mutable/HashTable;Lscala/collection/mutable/HashTable$Contents;)V
       5: return

  public scala.collection.mutable.HashTable$Contents<A, scala.collection.mutable.DefaultEntry<A, B>> hashTableContents();
    Code:
       0: aload_0
       1: invokestatic  #202                // Method scala/collection/mutable/HashTable$class.hashTableContents:(Lscala/collection/mutable/HashTable;)Lscala/collection/mutable/HashTable$Contents;
       4: areturn

  public final int sizeMapBucketBitSize();
    Code:
       0: aload_0
       1: invokestatic  #208                // Method scala/collection/mutable/HashTable$HashUtils$class.sizeMapBucketBitSize:(Lscala/collection/mutable/HashTable$HashUtils;)I
       4: ireturn

  public final int sizeMapBucketSize();
    Code:
       0: aload_0
       1: invokestatic  #211                // Method scala/collection/mutable/HashTable$HashUtils$class.sizeMapBucketSize:(Lscala/collection/mutable/HashTable$HashUtils;)I
       4: ireturn

  public int elemHashCode(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method scala/collection/mutable/HashTable$HashUtils$class.elemHashCode:(Lscala/collection/mutable/HashTable$HashUtils;Ljava/lang/Object;)I
       5: ireturn

  public final int improve(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #221                // Method scala/collection/mutable/HashTable$HashUtils$class.improve:(Lscala/collection/mutable/HashTable$HashUtils;II)I
       6: ireturn

  public scala.collection.mutable.HashMap<A, B> empty();
    Code:
       0: getstatic     #23                 // Field scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
       3: invokevirtual #226                // Method scala/collection/mutable/HashMap$.empty:()Lscala/collection/mutable/HashMap;
       6: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #229                // Method clearTable:()V
       4: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #232                // Method tableSize:()I
       4: ireturn

  public scala.collection.parallel.mutable.ParHashMap<A, B> par();
    Code:
       0: new           #236                // class scala/collection/parallel/mutable/ParHashMap
       3: dup
       4: aload_0
       5: invokevirtual #238                // Method hashTableContents:()Lscala/collection/mutable/HashTable$Contents;
       8: invokespecial #241                // Method scala/collection/parallel/mutable/ParHashMap."<init>":(Lscala/collection/mutable/HashTable$Contents;)V
      11: areturn

  public boolean contains(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method findEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: ifnonnull     12
       8: iconst_0
       9: goto          13
      12: iconst_1
      13: ireturn

  public B apply(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method findEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: checkcast     #249                // class scala/collection/mutable/DefaultEntry
       8: astore_2
       9: aload_2
      10: ifnonnull     21
      13: aload_0
      14: aload_1
      15: invokevirtual #252                // Method default:(Ljava/lang/Object;)Ljava/lang/Object;
      18: goto          25
      21: aload_2
      22: invokevirtual #255                // Method scala/collection/mutable/DefaultEntry.value:()Ljava/lang/Object;
      25: areturn

  public scala.Option<B> get(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method findEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: checkcast     #249                // class scala/collection/mutable/DefaultEntry
       8: astore_2
       9: aload_2
      10: ifnonnull     19
      13: getstatic     #266                // Field scala/None$.MODULE$:Lscala/None$;
      16: goto          30
      19: new           #268                // class scala/Some
      22: dup
      23: aload_2
      24: invokevirtual #255                // Method scala/collection/mutable/DefaultEntry.value:()Ljava/lang/Object;
      27: invokespecial #271                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      30: areturn

  public scala.Option<B> put(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #277                // Method findOrAddEntry:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       6: checkcast     #249                // class scala/collection/mutable/DefaultEntry
       9: astore_3
      10: aload_3
      11: ifnonnull     20
      14: getstatic     #266                // Field scala/None$.MODULE$:Lscala/None$;
      17: goto          40
      20: aload_3
      21: invokevirtual #255                // Method scala/collection/mutable/DefaultEntry.value:()Ljava/lang/Object;
      24: astore        4
      26: aload_3
      27: aload_2
      28: invokevirtual #280                // Method scala/collection/mutable/DefaultEntry.value_$eq:(Ljava/lang/Object;)V
      31: new           #268                // class scala/Some
      34: dup
      35: aload         4
      37: invokespecial #271                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      40: areturn

  public void update(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #285                // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       6: pop
       7: return

  public scala.Option<B> remove(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #288                // Method removeEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: checkcast     #249                // class scala/collection/mutable/DefaultEntry
       8: astore_2
       9: aload_2
      10: ifnull        27
      13: new           #268                // class scala/Some
      16: dup
      17: aload_2
      18: invokevirtual #255                // Method scala/collection/mutable/DefaultEntry.value:()Ljava/lang/Object;
      21: invokespecial #271                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      24: goto          30
      27: getstatic     #266                // Field scala/None$.MODULE$:Lscala/None$;
      30: areturn

  public scala.collection.mutable.HashMap<A, B> $plus$eq(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #295                // Method scala/Tuple2._1:()Ljava/lang/Object;
       5: aload_1
       6: invokevirtual #298                // Method scala/Tuple2._2:()Ljava/lang/Object;
       9: invokevirtual #277                // Method findOrAddEntry:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
      12: checkcast     #249                // class scala/collection/mutable/DefaultEntry
      15: astore_2
      16: aload_2
      17: ifnull        28
      20: aload_2
      21: aload_1
      22: invokevirtual #298                // Method scala/Tuple2._2:()Ljava/lang/Object;
      25: invokevirtual #280                // Method scala/collection/mutable/DefaultEntry.value_$eq:(Ljava/lang/Object;)V
      28: aload_0
      29: areturn

  public scala.collection.mutable.HashMap<A, B> $minus$eq(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #288                // Method removeEntry:(Ljava/lang/Object;)Lscala/collection/mutable/HashEntry;
       5: pop
       6: aload_0
       7: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> iterator();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method entriesIterator:()Lscala/collection/Iterator;
       4: new           #307                // class scala/collection/mutable/HashMap$$anonfun$iterator$1
       7: dup
       8: aload_0
       9: invokespecial #310                // Method scala/collection/mutable/HashMap$$anonfun$iterator$1."<init>":(Lscala/collection/mutable/HashMap;)V
      12: invokeinterface #316,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      17: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<A, B>, U>);
    Code:
       0: aload_0
       1: new           #319                // class scala/collection/mutable/HashMap$$anonfun$foreach$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #322                // Method scala/collection/mutable/HashMap$$anonfun$foreach$1."<init>":(Lscala/collection/mutable/HashMap;Lscala/Function1;)V
      10: invokevirtual #324                // Method foreachEntry:(Lscala/Function1;)V
      13: return

  public scala.collection.Set<A> keySet();
    Code:
       0: new           #328                // class scala/collection/mutable/HashMap$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #329                // Method scala/collection/mutable/HashMap$$anon$1."<init>":(Lscala/collection/mutable/HashMap;)V
       8: areturn

  public scala.collection.Iterable<B> values();
    Code:
       0: new           #333                // class scala/collection/mutable/HashMap$$anon$2
       3: dup
       4: aload_0
       5: invokespecial #334                // Method scala/collection/mutable/HashMap$$anon$2."<init>":(Lscala/collection/mutable/HashMap;)V
       8: areturn

  public scala.collection.Iterator<A> keysIterator();
    Code:
       0: new           #337                // class scala/collection/mutable/HashMap$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #338                // Method scala/collection/mutable/HashMap$$anon$3."<init>":(Lscala/collection/mutable/HashMap;)V
       8: areturn

  public scala.collection.Iterator<B> valuesIterator();
    Code:
       0: new           #341                // class scala/collection/mutable/HashMap$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #342                // Method scala/collection/mutable/HashMap$$anon$4."<init>":(Lscala/collection/mutable/HashMap;)V
       8: areturn

  public void useSizeMap(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: invokevirtual #346                // Method isSizeMapDefined:()Z
       8: ifne          22
      11: aload_0
      12: invokevirtual #348                // Method sizeMapInitAndRebuild:()V
      15: goto          22
      18: aload_0
      19: invokevirtual #350                // Method sizeMapDisable:()V
      22: return

  public <B1> scala.collection.mutable.DefaultEntry<A, B> createNewEntry(A, B1);
    Code:
       0: new           #249                // class scala/collection/mutable/DefaultEntry
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #356                // Method scala/collection/mutable/DefaultEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  private void writeObject(java.io.ObjectOutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #360                // class scala/collection/mutable/HashMap$$anonfun$writeObject$1
       5: dup
       6: aload_0
       7: aload_1
       8: invokespecial #363                // Method scala/collection/mutable/HashMap$$anonfun$writeObject$1."<init>":(Lscala/collection/mutable/HashMap;Ljava/io/ObjectOutputStream;)V
      11: invokevirtual #365                // Method serializeTo:(Ljava/io/ObjectOutputStream;Lscala/Function1;)V
      14: return

  private void readObject(java.io.ObjectInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #369                // class scala/collection/mutable/HashMap$$anonfun$readObject$1
       5: dup
       6: aload_0
       7: aload_1
       8: invokespecial #372                // Method scala/collection/mutable/HashMap$$anonfun$readObject$1."<init>":(Lscala/collection/mutable/HashMap;Ljava/io/ObjectInputStream;)V
      11: invokevirtual #374                // Method init:(Ljava/io/ObjectInputStream;Lscala/Function0;)V
      14: return

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #379                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #384                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #388                // Method repr:()Ljava/lang/Object;
       4: checkcast     #390                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #395                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #401                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #405                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #410                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #413                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #418                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #423                // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #427                // Method mapValues:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #430                // Method filterKeys:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #433                // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #438                // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #445                // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #452                // Method result:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #455                // Method clone:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #458                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #458                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #458                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #465                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #470                // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #477                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #477                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #483                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #483                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #488                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #488                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.HashEntry createNewEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #491                // Method createNewEntry:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/DefaultEntry;
       6: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #493                // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #496                // Method keySet:()Lscala/collection/Set;
       4: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #499                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/HashMap;
       5: areturn

  public scala.collection.mutable.MapLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #499                // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/HashMap;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #292                // class scala/Tuple2
       5: invokevirtual #503                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/mutable/HashMap;
       8: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #292                // class scala/Tuple2
       5: invokevirtual #503                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/mutable/HashMap;
       8: areturn

  public scala.collection.mutable.MapLike $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #503                // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/mutable/HashMap;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #508                // Method par:()Lscala/collection/parallel/mutable/ParHashMap;
       4: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #509                // Method empty:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.mutable.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #509                // Method empty:()Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.mutable.HashMap(scala.collection.mutable.HashTable$Contents<A, scala.collection.mutable.DefaultEntry<A, B>>);
    Code:
       0: aload_0
       1: invokespecial #511                // Method scala/collection/mutable/AbstractMap."<init>":()V
       4: aload_0
       5: invokestatic  #515                // Method scala/collection/mutable/HashTable$HashUtils$class.$init$:(Lscala/collection/mutable/HashTable$HashUtils;)V
       8: aload_0
       9: invokestatic  #517                // Method scala/collection/mutable/HashTable$class.$init$:(Lscala/collection/mutable/HashTable;)V
      12: aload_0
      13: invokestatic  #520                // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
      16: aload_0
      17: aload_1
      18: invokevirtual #522                // Method initWithContents:(Lscala/collection/mutable/HashTable$Contents;)V
      21: return

  public scala.collection.mutable.HashMap();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #524                // Method "<init>":(Lscala/collection/mutable/HashTable$Contents;)V
       5: return
}
