Compiled from "FlatHashTable.scala"
public final class scala.collection.mutable.FlatHashTable$$anonfun$checkConsistent$1 extends scala.runtime.AbstractFunction1$mcVI$sp implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.collection.mutable.FlatHashTable $outer;

  public final void apply(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method apply$mcVI$sp:(I)V
       5: return

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lscala/collection/mutable/FlatHashTable;
       4: invokeinterface #30,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
       9: iload_1
      10: aaload
      11: ifnull        46
      14: aload_0
      15: getfield      #26                 // Field $outer:Lscala/collection/mutable/FlatHashTable;
      18: aload_0
      19: getfield      #26                 // Field $outer:Lscala/collection/mutable/FlatHashTable;
      22: aload_0
      23: getfield      #26                 // Field $outer:Lscala/collection/mutable/FlatHashTable;
      26: invokeinterface #30,  1           // InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
      31: iload_1
      32: aaload
      33: invokeinterface #34,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
      38: invokeinterface #38,  2           // InterfaceMethod scala/collection/mutable/FlatHashTable.containsElem:(Ljava/lang/Object;)Z
      43: ifeq          47
      46: return
      47: getstatic     #44                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      50: new           #46                 // class scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1
      53: dup
      54: aload_0
      55: iload_1
      56: invokespecial #50                 // Method scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1."<init>":(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;I)V
      59: astore_3
      60: astore_2
      61: new           #52                 // class java/lang/AssertionError
      64: dup
      65: new           #54                 // class scala/collection/mutable/StringBuilder
      68: dup
      69: invokespecial #57                 // Method scala/collection/mutable/StringBuilder."<init>":()V
      72: ldc           #59                 // String assertion failed:
      74: invokevirtual #63                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      77: aload_3
      78: invokevirtual #66                 // Method scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1.apply:()Ljava/lang/String;
      81: invokevirtual #63                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      84: invokevirtual #69                 // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #72                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      90: athrow

  public scala.collection.mutable.FlatHashTable scala$collection$mutable$FlatHashTable$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lscala/collection/mutable/FlatHashTable;
       4: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #82                 // Method apply:(I)V
       8: getstatic     #88                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      11: areturn

  public scala.collection.mutable.FlatHashTable$$anonfun$checkConsistent$1(scala.collection.mutable.FlatHashTable<A>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #26                 // Field $outer:Lscala/collection/mutable/FlatHashTable;
      11: aload_0
      12: invokespecial #92                 // Method scala/runtime/AbstractFunction1$mcVI$sp."<init>":()V
      15: return
}
