Compiled from "TreeSet.scala"
public class scala.collection.mutable.TreeSet<A> implements scala.collection.mutable.SortedSet<A>, scala.Serializable {
  private final scala.runtime.ObjectRef<scala.collection.immutable.RedBlackTree$Tree<A, scala.runtime.Null$>> treeRef;

  private final scala.Option<A> from;

  private final scala.Option<A> until;

  private final scala.math.Ordering<A> ordering;

  private final boolean notProjection;

  public static <A> scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<?>, A, scala.collection.mutable.TreeSet<A>> newCanBuildFrom(scala.math.Ordering<A>);
    Code:
       0: getstatic     #21                 // Field scala/collection/mutable/TreeSet$.MODULE$:Lscala/collection/mutable/TreeSet$;
       3: aload_0
       4: invokevirtual #23                 // Method scala/collection/mutable/TreeSet$.newCanBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
       7: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.mutable.Set> companion();
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method scala/collection/mutable/Set$class.companion:(Lscala/collection/mutable/Set;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.mutable.Set<A> seq();
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method scala/collection/mutable/Set$class.seq:(Lscala/collection/mutable/Set;)Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.mutable.Builder<A, scala.collection.mutable.TreeSet<A>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method scala/collection/mutable/SetLike$class.newBuilder:(Lscala/collection/mutable/SetLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.parallel.Combiner<A, scala.collection.parallel.mutable.ParSet<A>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method scala/collection/mutable/SetLike$class.parCombiner:(Lscala/collection/mutable/SetLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public boolean add(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method scala/collection/mutable/SetLike$class.add:(Lscala/collection/mutable/SetLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean remove(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method scala/collection/mutable/SetLike$class.remove:(Lscala/collection/mutable/SetLike;Ljava/lang/Object;)Z
       5: ireturn

  public void update(A, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #76                 // Method scala/collection/mutable/SetLike$class.update:(Lscala/collection/mutable/SetLike;Ljava/lang/Object;Z)V
       6: return

  public void retain(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/collection/mutable/SetLike$class.retain:(Lscala/collection/mutable/SetLike;Lscala/Function1;)V
       5: return

  public void clear();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method scala/collection/mutable/SetLike$class.clear:(Lscala/collection/mutable/SetLike;)V
       4: return

  public scala.collection.mutable.Set result();
    Code:
       0: aload_0
       1: invokestatic  #93                 // Method scala/collection/mutable/SetLike$class.result:(Lscala/collection/mutable/SetLike;)Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.mutable.Set $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method scala/collection/mutable/SetLike$class.$plus:(Lscala/collection/mutable/SetLike;Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.mutable.Set $plus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #102                // Method scala/collection/mutable/SetLike$class.$plus:(Lscala/collection/mutable/SetLike;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Set;
       7: areturn

  public scala.collection.mutable.Set $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method scala/collection/mutable/SetLike$class.$plus$plus:(Lscala/collection/mutable/SetLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.mutable.Set $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // Method scala/collection/mutable/SetLike$class.$minus:(Lscala/collection/mutable/SetLike;Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.mutable.Set $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #118                // Method scala/collection/mutable/SetLike$class.$minus:(Lscala/collection/mutable/SetLike;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Set;
       7: areturn

  public scala.collection.mutable.Set $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #121                // Method scala/collection/mutable/SetLike$class.$minus$minus:(Lscala/collection/mutable/SetLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Set;
       5: areturn

  public void $less$less(scala.collection.script.Message<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // Method scala/collection/mutable/SetLike$class.$less$less:(Lscala/collection/mutable/SetLike;Lscala/collection/script/Message;)V
       5: return

  public java.lang.Object scala$collection$mutable$Cloneable$$super$clone();
    Code:
       0: aload_0
       1: invokespecial #133                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public scala.collection.generic.Shrinkable<A> $minus$eq(A, A, scala.collection.Seq<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #140                // Method scala/collection/generic/Shrinkable$class.$minus$eq:(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;
       7: areturn

  public scala.collection.generic.Shrinkable<A> $minus$minus$eq(scala.collection.TraversableOnce<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // Method scala/collection/generic/Shrinkable$class.$minus$minus$eq:(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;
       5: areturn

  public void sizeHint(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #153                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;I)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #159                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #165                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I)V
       6: return

  public void sizeHintBounded(int, scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #171                // Method scala/collection/mutable/Builder$class.sizeHintBounded:(Lscala/collection/mutable/Builder;ILscala/collection/TraversableLike;)V
       6: return

  public <NewTo> scala.collection.mutable.Builder<A, NewTo> mapResult(scala.Function1<scala.collection.mutable.TreeSet<A>, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
       5: areturn

  public scala.collection.generic.Growable<A> $plus$eq(A, A, scala.collection.Seq<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #185                // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<A> $plus$plus$eq(scala.collection.TraversableOnce<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public boolean scala$collection$SortedSetLike$$super$subsetOf(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #198                // Method scala/collection/GenSetLike$class.subsetOf:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Z
       5: ireturn

  public scala.collection.SortedSet keySet();
    Code:
       0: aload_0
       1: invokestatic  #207                // Method scala/collection/SortedSetLike$class.keySet:(Lscala/collection/SortedSetLike;)Lscala/collection/SortedSet;
       4: areturn

  public A firstKey();
    Code:
       0: aload_0
       1: invokestatic  #211                // Method scala/collection/SortedSetLike$class.firstKey:(Lscala/collection/SortedSetLike;)Ljava/lang/Object;
       4: areturn

  public A lastKey();
    Code:
       0: aload_0
       1: invokestatic  #214                // Method scala/collection/SortedSetLike$class.lastKey:(Lscala/collection/SortedSetLike;)Ljava/lang/Object;
       4: areturn

  public scala.collection.SortedSet from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // Method scala/collection/SortedSetLike$class.from:(Lscala/collection/SortedSetLike;Ljava/lang/Object;)Lscala/collection/SortedSet;
       5: areturn

  public scala.collection.SortedSet until(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method scala/collection/SortedSetLike$class.until:(Lscala/collection/SortedSetLike;Ljava/lang/Object;)Lscala/collection/SortedSet;
       5: areturn

  public scala.collection.SortedSet range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #225                // Method scala/collection/SortedSetLike$class.range:(Lscala/collection/SortedSetLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/SortedSet;
       6: areturn

  public boolean subsetOf(scala.collection.GenSet<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #228                // Method scala/collection/SortedSetLike$class.subsetOf:(Lscala/collection/SortedSetLike;Lscala/collection/GenSet;)Z
       5: ireturn

  public scala.collection.Iterator<A> iteratorFrom(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #233                // Method scala/collection/SortedSetLike$class.iteratorFrom:(Lscala/collection/SortedSetLike;Ljava/lang/Object;)Lscala/collection/Iterator;
       5: areturn

  public int compare(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #241                // Method scala/collection/generic/Sorted$class.compare:(Lscala/collection/generic/Sorted;Ljava/lang/Object;Ljava/lang/Object;)I
       6: ireturn

  public scala.collection.generic.Sorted to(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #248                // Method scala/collection/generic/Sorted$class.to:(Lscala/collection/generic/Sorted;Ljava/lang/Object;)Lscala/collection/generic/Sorted;
       5: areturn

  public boolean hasAll(scala.collection.Iterator<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #253                // Method scala/collection/generic/Sorted$class.hasAll:(Lscala/collection/generic/Sorted;Lscala/collection/Iterator;)Z
       5: ireturn

  public java.lang.Object scala$collection$SetLike$$super$map(scala.Function1, scala.collection.generic.CanBuildFrom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #263                // Method scala/collection/TraversableLike$class.map:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.Seq<A> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #272                // Method scala/collection/SetLike$class.toSeq:(Lscala/collection/SetLike;)Lscala/collection/Seq;
       4: areturn

  public <A1> scala.collection.mutable.Buffer<A1> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #277                // Method scala/collection/SetLike$class.toBuffer:(Lscala/collection/SetLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B, That> That map(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #280                // Method scala/collection/SetLike$class.map:(Lscala/collection/SetLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #285                // Method scala/collection/SetLike$class.isEmpty:(Lscala/collection/SetLike;)Z
       4: ireturn

  public scala.collection.Set union(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #290                // Method scala/collection/SetLike$class.union:(Lscala/collection/SetLike;Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public scala.collection.Set diff(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // Method scala/collection/SetLike$class.diff:(Lscala/collection/SetLike;Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.TreeSet<A>> subsets(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #298                // Method scala/collection/SetLike$class.subsets:(Lscala/collection/SetLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.TreeSet<A>> subsets();
    Code:
       0: aload_0
       1: invokestatic  #303                // Method scala/collection/SetLike$class.subsets:(Lscala/collection/SetLike;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #308                // Method scala/collection/SetLike$class.toString:(Lscala/collection/SetLike;)Ljava/lang/String;
       4: areturn

  public boolean apply(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #312                // Method scala/collection/GenSetLike$class.apply:(Lscala/collection/GenSetLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object intersect(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #317                // Method scala/collection/GenSetLike$class.intersect:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $amp(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #320                // Method scala/collection/GenSetLike$class.$amp:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $bar(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #323                // Method scala/collection/GenSetLike$class.$bar:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $amp$tilde(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #326                // Method scala/collection/GenSetLike$class.$amp$tilde:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #329                // Method scala/collection/GenSetLike$class.equals:(Lscala/collection/GenSetLike;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #334                // Method scala/collection/GenSetLike$class.hashCode:(Lscala/collection/GenSetLike;)I
       4: ireturn

  public scala.collection.Iterable<A> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #341                // Method scala/collection/IterableLike$class.thisCollection:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #346                // Method scala/collection/IterableLike$class.toCollection:(Lscala/collection/IterableLike;Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #351                // Method scala/collection/IterableLike$class.foreach:(Lscala/collection/IterableLike;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #356                // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #359                // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<A> find(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #364                // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #369                // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #377                // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<A> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #380                // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<A> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #384                // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public A head();
    Code:
       0: aload_0
       1: invokestatic  #388                // Method scala/collection/IterableLike$class.head:(Lscala/collection/IterableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #393                // Method scala/collection/IterableLike$class.slice:(Lscala/collection/IterableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #398                // Method scala/collection/IterableLike$class.take:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #402                // Method scala/collection/IterableLike$class.drop:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #407                // Method scala/collection/IterableLike$class.takeWhile:(Lscala/collection/IterableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.TreeSet<A>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #411                // Method scala/collection/IterableLike$class.grouped:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.TreeSet<A>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #414                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.TreeSet<A>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #418                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #422                // Method scala/collection/IterableLike$class.takeRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #425                // Method scala/collection/IterableLike$class.dropRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #430                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #435                // Method scala/collection/IterableLike$class.zip:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #441                // Method scala/collection/IterableLike$class.zipAll:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #448                // Method scala/collection/IterableLike$class.zipWithIndex:(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #453                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokestatic  #458                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #462                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #467                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;)Lscala/collection/IterableView;
       4: areturn

  public scala.collection.IterableView<A, scala.collection.mutable.TreeSet<A>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #471                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;II)Lscala/collection/IterableView;
       6: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.mutable.Set<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #477                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.mutable.Set<A1>, scala.collection.mutable.Set<A2>> unzip(scala.Function1<A, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #482                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.mutable.Set<A1>, scala.collection.mutable.Set<A2>, scala.collection.mutable.Set<A3>> unzip3(scala.Function1<A, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #488                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #494                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #501                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #505                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #508                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #512                // Method scala/collection/TraversableLike$class.$plus$plus:(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #517                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #521                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<A, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #525                // Method scala/collection/TraversableLike$class.flatMap:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #529                // Method scala/collection/TraversableLike$class.filter:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #532                // Method scala/collection/TraversableLike$class.filterNot:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #537                // Method scala/collection/TraversableLike$class.collect:(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.mutable.TreeSet<A>, scala.collection.mutable.TreeSet<A>> partition(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #543                // Method scala/collection/TraversableLike$class.partition:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.mutable.TreeSet<A>> groupBy(scala.Function1<A, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #548                // Method scala/collection/TraversableLike$class.groupBy:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #553                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, A, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #557                // Method scala/collection/TraversableLike$class.scanLeft:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<A, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.mutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #560                // Method scala/collection/TraversableLike$class.scanRight:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.Option<A> headOption();
    Code:
       0: aload_0
       1: invokestatic  #565                // Method scala/collection/TraversableLike$class.headOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokestatic  #568                // Method scala/collection/TraversableLike$class.tail:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public A last();
    Code:
       0: aload_0
       1: invokestatic  #571                // Method scala/collection/TraversableLike$class.last:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<A> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #574                // Method scala/collection/TraversableLike$class.lastOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokestatic  #577                // Method scala/collection/TraversableLike$class.init:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #582                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #586                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #589                // Method scala/collection/TraversableLike$class.dropWhile:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2<scala.collection.mutable.TreeSet<A>, scala.collection.mutable.TreeSet<A>> span(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #592                // Method scala/collection/TraversableLike$class.span:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.mutable.TreeSet<A>, scala.collection.mutable.TreeSet<A>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #597                // Method scala/collection/TraversableLike$class.splitAt:(Lscala/collection/TraversableLike;I)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scala.collection.mutable.TreeSet<A>> tails();
    Code:
       0: aload_0
       1: invokestatic  #601                // Method scala/collection/TraversableLike$class.tails:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.mutable.TreeSet<A>> inits();
    Code:
       0: aload_0
       1: invokestatic  #604                // Method scala/collection/TraversableLike$class.inits:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Traversable<A> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #609                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, A, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #612                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public scala.collection.generic.FilterMonadic<A, scala.collection.mutable.TreeSet<A>> withFilter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // Method scala/collection/TraversableLike$class.withFilter:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #624                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<A> reversed();
    Code:
       0: aload_0
       1: invokestatic  #631                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #635                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #640                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #645                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #649                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #652                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #655                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #659                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #664                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #667                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #670                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #673                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #676                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, A, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #681                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #689                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #694                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> A min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #699                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #703                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A maxBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #708                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> A minBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #711                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #716                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #722                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #726                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #731                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<A> toList();
    Code:
       0: aload_0
       1: invokestatic  #736                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<A> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #741                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #746                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<A> toVector();
    Code:
       0: aload_0
       1: invokestatic  #751                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<A, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #756                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #763                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #770                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #773                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #778                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #784                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #788                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #795                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #802                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #807                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #812                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #817                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #822                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #827                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #833                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #838                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #843                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #848                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #853                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #858                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #863                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #868                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #873                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #878                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #882                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #887                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #893                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #898                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #903                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #908                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #913                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, java.lang.Object> compose(scala.Function1<A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #918                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <A> scala.Function1<A, A> andThen(scala.Function1<java.lang.Object, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #922                // Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.math.Ordering<A> ordering();
    Code:
       0: aload_0
       1: getfield      #925                // Field ordering:Lscala/math/Ordering;
       4: areturn

  public int size();
    Code:
       0: getstatic     #930                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
       7: getfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      10: checkcast     #938                // class scala/collection/immutable/RedBlackTree$Tree
      13: aload_0
      14: getfield      #940                // Field from:Lscala/Option;
      17: aload_0
      18: getfield      #942                // Field until:Lscala/Option;
      21: aload_0
      22: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      25: invokevirtual #948                // Method scala/collection/immutable/RedBlackTree$.countInRange:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)I
      28: ireturn

  public java.lang.String stringPrefix();
    Code:
       0: ldc_w         #951                // String TreeSet
       3: areturn

  public scala.collection.mutable.TreeSet<A> empty();
    Code:
       0: getstatic     #21                 // Field scala/collection/mutable/TreeSet$.MODULE$:Lscala/collection/mutable/TreeSet$;
       3: aload_0
       4: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
       7: invokevirtual #956                // Method scala/collection/mutable/TreeSet$.empty:(Lscala/math/Ordering;)Lscala/collection/mutable/TreeSet;
      10: areturn

  private scala.Option<A> pickBound(scala.Function2<A, A, A>, scala.Option<A>, scala.Option<A>);
    Code:
       0: new           #960                // class scala/Tuple2
       3: dup
       4: aload_3
       5: aload_2
       6: invokespecial #964                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore        4
      11: aload         4
      13: invokevirtual #967                // Method scala/Tuple2._1:()Ljava/lang/Object;
      16: instanceof    #969                // class scala/Some
      19: ifeq          81
      22: aload         4
      24: invokevirtual #967                // Method scala/Tuple2._1:()Ljava/lang/Object;
      27: checkcast     #969                // class scala/Some
      30: astore        5
      32: aload         4
      34: invokevirtual #972                // Method scala/Tuple2._2:()Ljava/lang/Object;
      37: instanceof    #969                // class scala/Some
      40: ifeq          81
      43: aload         4
      45: invokevirtual #972                // Method scala/Tuple2._2:()Ljava/lang/Object;
      48: checkcast     #969                // class scala/Some
      51: astore        6
      53: new           #969                // class scala/Some
      56: dup
      57: aload_1
      58: aload         5
      60: invokevirtual #975                // Method scala/Some.x:()Ljava/lang/Object;
      63: aload         6
      65: invokevirtual #975                // Method scala/Some.x:()Ljava/lang/Object;
      68: invokeinterface #980,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: invokespecial #982                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      76: astore        7
      78: goto          104
      81: getstatic     #987                // Field scala/None$.MODULE$:Lscala/None$;
      84: aload         4
      86: invokevirtual #967                // Method scala/Tuple2._1:()Ljava/lang/Object;
      89: invokevirtual #989                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          101
      95: aload_2
      96: astore        7
      98: goto          104
     101: aload_3
     102: astore        7
     104: aload         7
     106: areturn

  public scala.collection.mutable.TreeSet<A> rangeImpl(scala.Option<A>, scala.Option<A>);
    Code:
       0: aload_0
       1: new           #998                // class scala/collection/mutable/TreeSet$$anonfun$1
       4: dup
       5: aload_0
       6: invokespecial #1001               // Method scala/collection/mutable/TreeSet$$anonfun$1."<init>":(Lscala/collection/mutable/TreeSet;)V
       9: aload_1
      10: aload_0
      11: getfield      #940                // Field from:Lscala/Option;
      14: invokespecial #1003               // Method pickBound:(Lscala/Function2;Lscala/Option;Lscala/Option;)Lscala/Option;
      17: astore_3
      18: aload_0
      19: new           #1005               // class scala/collection/mutable/TreeSet$$anonfun$2
      22: dup
      23: aload_0
      24: invokespecial #1006               // Method scala/collection/mutable/TreeSet$$anonfun$2."<init>":(Lscala/collection/mutable/TreeSet;)V
      27: aload_2
      28: aload_0
      29: getfield      #942                // Field until:Lscala/Option;
      32: invokespecial #1003               // Method pickBound:(Lscala/Function2;Lscala/Option;Lscala/Option;)Lscala/Option;
      35: astore        4
      37: new           #2                  // class scala/collection/mutable/TreeSet
      40: dup
      41: aload_0
      42: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
      45: aload_3
      46: aload         4
      48: aload_0
      49: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      52: invokespecial #1009               // Method "<init>":(Lscala/runtime/ObjectRef;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
      55: areturn

  public scala.collection.mutable.TreeSet<A> $minus$eq(A);
    Code:
       0: aload_0
       1: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
       4: getstatic     #930                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
      11: getfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      14: checkcast     #938                // class scala/collection/immutable/RedBlackTree$Tree
      17: aload_1
      18: aload_0
      19: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      22: invokevirtual #1018               // Method scala/collection/immutable/RedBlackTree$.delete:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      25: putfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      28: aload_0
      29: areturn

  public scala.collection.mutable.TreeSet<A> $plus$eq(A);
    Code:
       0: aload_0
       1: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
       4: getstatic     #930                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
      11: getfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      14: checkcast     #938                // class scala/collection/immutable/RedBlackTree$Tree
      17: aload_1
      18: aconst_null
      19: iconst_0
      20: aload_0
      21: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      24: invokevirtual #1021               // Method scala/collection/immutable/RedBlackTree$.update:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;ZLscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      27: putfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      30: aload_0
      31: areturn

  public scala.collection.mutable.TreeSet<A> clone();
    Code:
       0: new           #2                  // class scala/collection/mutable/TreeSet
       3: dup
       4: new           #934                // class scala/runtime/ObjectRef
       7: dup
       8: aload_0
       9: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
      12: getfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      15: invokespecial #1022               // Method scala/runtime/ObjectRef."<init>":(Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #940                // Field from:Lscala/Option;
      22: aload_0
      23: getfield      #942                // Field until:Lscala/Option;
      26: aload_0
      27: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      30: invokespecial #1009               // Method "<init>":(Lscala/runtime/ObjectRef;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
      33: areturn

  private boolean notProjection();
    Code:
       0: aload_0
       1: getfield      #1024               // Field notProjection:Z
       4: ireturn

  public boolean contains(A);
    Code:
       0: aload_0
       1: invokespecial #1027               // Method notProjection:()Z
       4: ifne          23
       7: aload_0
       8: aload_1
       9: invokespecial #1030               // Method leftAcceptable$1:(Ljava/lang/Object;)Z
      12: ifeq          51
      15: aload_0
      16: aload_1
      17: invokespecial #1033               // Method rightAcceptable$1:(Ljava/lang/Object;)Z
      20: ifeq          51
      23: getstatic     #930                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      26: aload_0
      27: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
      30: getfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      33: checkcast     #938                // class scala/collection/immutable/RedBlackTree$Tree
      36: aload_1
      37: aload_0
      38: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      41: invokevirtual #1036               // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  public scala.collection.Iterator<A> iterator();
    Code:
       0: aload_0
       1: getstatic     #987                // Field scala/None$.MODULE$:Lscala/None$;
       4: invokespecial #1040               // Method iteratorFrom:(Lscala/Option;)Lscala/collection/Iterator;
       7: areturn

  public scala.collection.Iterator<A> keysIteratorFrom(A);
    Code:
       0: aload_0
       1: new           #969                // class scala/Some
       4: dup
       5: aload_1
       6: invokespecial #982                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       9: invokespecial #1040               // Method iteratorFrom:(Lscala/Option;)Lscala/collection/Iterator;
      12: areturn

  private scala.collection.Iterator<A> iteratorFrom(scala.Option<A>);
    Code:
       0: getstatic     #930                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
       7: getfield      #936                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      10: checkcast     #938                // class scala/collection/immutable/RedBlackTree$Tree
      13: aload_0
      14: new           #1043               // class scala/collection/mutable/TreeSet$$anonfun$3
      17: dup
      18: aload_0
      19: invokespecial #1044               // Method scala/collection/mutable/TreeSet$$anonfun$3."<init>":(Lscala/collection/mutable/TreeSet;)V
      22: aload_0
      23: getfield      #940                // Field from:Lscala/Option;
      26: aload_1
      27: invokespecial #1003               // Method pickBound:(Lscala/Function2;Lscala/Option;Lscala/Option;)Lscala/Option;
      30: aload_0
      31: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      34: invokevirtual #1048               // Method scala/collection/immutable/RedBlackTree$.keysIterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      37: astore_2
      38: aload_0
      39: getfield      #942                // Field until:Lscala/Option;
      42: astore_3
      43: getstatic     #987                // Field scala/None$.MODULE$:Lscala/None$;
      46: aload_3
      47: invokevirtual #989                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          59
      53: aload_2
      54: astore        4
      56: goto          90
      59: aload_3
      60: instanceof    #969                // class scala/Some
      63: ifeq          93
      66: aload_3
      67: checkcast     #969                // class scala/Some
      70: astore        5
      72: aload_2
      73: new           #1050               // class scala/collection/mutable/TreeSet$$anonfun$iteratorFrom$1
      76: dup
      77: aload_0
      78: aload         5
      80: invokespecial #1053               // Method scala/collection/mutable/TreeSet$$anonfun$iteratorFrom$1."<init>":(Lscala/collection/mutable/TreeSet;Lscala/Some;)V
      83: invokeinterface #1058,  2         // InterfaceMethod scala/collection/Iterator.takeWhile:(Lscala/Function1;)Lscala/collection/Iterator;
      88: astore        4
      90: aload         4
      92: areturn
      93: new           #1060               // class scala/MatchError
      96: dup
      97: aload_3
      98: invokespecial #1061               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     101: athrow

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1065               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1068               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #1071               // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1074               // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #1077               // Method repr:()Ljava/lang/Object;
       4: checkcast     #1079               // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.generic.Sorted repr();
    Code:
       0: aload_0
       1: invokevirtual #1077               // Method repr:()Ljava/lang/Object;
       4: checkcast     #1082               // class scala/collection/generic/Sorted
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1085               // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #1088               // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1091               // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1094               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1096               // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1099               // Method apply:(Ljava/lang/Object;)Z
       5: invokestatic  #1105               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public java.lang.Object diff(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1107               // Method diff:(Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public java.lang.Object union(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1109               // Method union:(Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1112               // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.generic.Sorted range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1115               // Method range:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/SortedSet;
       6: areturn

  public scala.collection.generic.Sorted until(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1117               // Method until:(Ljava/lang/Object;)Lscala/collection/SortedSet;
       5: areturn

  public scala.collection.generic.Sorted from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1119               // Method from:(Ljava/lang/Object;)Lscala/collection/SortedSet;
       5: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1122               // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1125               // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Set;
       7: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1127               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1127               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1127               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1132               // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $plus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1135               // Method $plus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Set;
       7: areturn

  public java.lang.Object $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1137               // Method $plus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public scala.collection.Set $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1137               // Method $plus:(Ljava/lang/Object;)Lscala/collection/mutable/Set;
       5: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #1139               // Method result:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1142               // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1142               // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1142               // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.Set seq();
    Code:
       0: aload_0
       1: invokevirtual #1142               // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.mutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1142               // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public scala.collection.mutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1142               // Method seq:()Lscala/collection/mutable/Set;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #1147               // Method clone:()Lscala/collection/mutable/TreeSet;
       4: areturn

  public scala.collection.mutable.Set clone();
    Code:
       0: aload_0
       1: invokevirtual #1147               // Method clone:()Lscala/collection/mutable/TreeSet;
       4: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1150               // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/TreeSet;
       5: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1150               // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/TreeSet;
       5: areturn

  public scala.collection.mutable.SetLike $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1150               // Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/TreeSet;
       5: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1155               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/TreeSet;
       5: areturn

  public scala.collection.mutable.SetLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1155               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/TreeSet;
       5: areturn

  public scala.collection.generic.Sorted rangeImpl(scala.Option, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1158               // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
       6: areturn

  public scala.collection.SortedSet rangeImpl(scala.Option, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1158               // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
       6: areturn

  public scala.collection.Set empty();
    Code:
       0: aload_0
       1: invokevirtual #1161               // Method empty:()Lscala/collection/mutable/TreeSet;
       4: areturn

  public scala.collection.GenSet empty();
    Code:
       0: aload_0
       1: invokevirtual #1161               // Method empty:()Lscala/collection/mutable/TreeSet;
       4: areturn

  public scala.collection.SortedSet empty();
    Code:
       0: aload_0
       1: invokevirtual #1161               // Method empty:()Lscala/collection/mutable/TreeSet;
       4: areturn

  public scala.collection.mutable.SortedSet empty();
    Code:
       0: aload_0
       1: invokevirtual #1161               // Method empty:()Lscala/collection/mutable/TreeSet;
       4: areturn

  private final boolean leftAcceptable$1(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #940                // Field from:Lscala/Option;
       4: astore_2
       5: aload_2
       6: instanceof    #969                // class scala/Some
       9: ifeq          36
      12: aload_2
      13: checkcast     #969                // class scala/Some
      16: astore_3
      17: aload_0
      18: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      21: aload_1
      22: aload_3
      23: invokevirtual #975                // Method scala/Some.x:()Ljava/lang/Object;
      26: invokeinterface #1168,  3         // InterfaceMethod scala/math/Ordering.gteq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: istore        4
      33: goto          39
      36: iconst_1
      37: istore        4
      39: iload         4
      41: ireturn

  private final boolean rightAcceptable$1(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #942                // Field until:Lscala/Option;
       4: astore_2
       5: aload_2
       6: instanceof    #969                // class scala/Some
       9: ifeq          36
      12: aload_2
      13: checkcast     #969                // class scala/Some
      16: astore_3
      17: aload_0
      18: invokevirtual #944                // Method ordering:()Lscala/math/Ordering;
      21: aload_1
      22: aload_3
      23: invokevirtual #975                // Method scala/Some.x:()Ljava/lang/Object;
      26: invokeinterface #1172,  3         // InterfaceMethod scala/math/Ordering.lt:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: istore        4
      33: goto          39
      36: iconst_1
      37: istore        4
      39: iload         4
      41: ireturn

  private scala.collection.mutable.TreeSet(scala.runtime.ObjectRef<scala.collection.immutable.RedBlackTree$Tree<A, scala.runtime.Null$>>, scala.Option<A>, scala.Option<A>, scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #932                // Field treeRef:Lscala/runtime/ObjectRef;
       5: aload_0
       6: aload_2
       7: putfield      #940                // Field from:Lscala/Option;
      10: aload_0
      11: aload_3
      12: putfield      #942                // Field until:Lscala/Option;
      15: aload_0
      16: aload         4
      18: putfield      #925                // Field ordering:Lscala/math/Ordering;
      21: aload_0
      22: invokespecial #1174               // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #1177               // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      29: aload_0
      30: invokestatic  #1180               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      33: aload_0
      34: invokestatic  #1183               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      37: aload_0
      38: invokestatic  #1185               // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      41: aload_0
      42: invokestatic  #1188               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      45: aload_0
      46: invokestatic  #1193               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      49: aload_0
      50: invokestatic  #1198               // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      53: aload_0
      54: invokestatic  #1203               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      57: aload_0
      58: invokestatic  #1206               // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      61: aload_0
      62: invokestatic  #1211               // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      65: aload_0
      66: invokestatic  #1214               // Method scala/collection/GenSetLike$class.$init$:(Lscala/collection/GenSetLike;)V
      69: aload_0
      70: invokestatic  #1219               // Method scala/collection/generic/GenericSetTemplate$class.$init$:(Lscala/collection/generic/GenericSetTemplate;)V
      73: aload_0
      74: invokestatic  #1224               // Method scala/collection/GenSet$class.$init$:(Lscala/collection/GenSet;)V
      77: aload_0
      78: invokestatic  #1229               // Method scala/collection/generic/Subtractable$class.$init$:(Lscala/collection/generic/Subtractable;)V
      81: aload_0
      82: invokestatic  #1232               // Method scala/collection/SetLike$class.$init$:(Lscala/collection/SetLike;)V
      85: aload_0
      86: invokestatic  #1237               // Method scala/collection/Set$class.$init$:(Lscala/collection/Set;)V
      89: aload_0
      90: invokestatic  #1240               // Method scala/collection/generic/Sorted$class.$init$:(Lscala/collection/generic/Sorted;)V
      93: aload_0
      94: invokestatic  #1243               // Method scala/collection/SortedSetLike$class.$init$:(Lscala/collection/SortedSetLike;)V
      97: aload_0
      98: invokestatic  #1248               // Method scala/collection/SortedSet$class.$init$:(Lscala/collection/SortedSet;)V
     101: aload_0
     102: invokestatic  #1253               // Method scala/collection/mutable/Traversable$class.$init$:(Lscala/collection/mutable/Traversable;)V
     105: aload_0
     106: invokestatic  #1258               // Method scala/collection/mutable/Iterable$class.$init$:(Lscala/collection/mutable/Iterable;)V
     109: aload_0
     110: invokestatic  #1261               // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
     113: aload_0
     114: invokestatic  #1264               // Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
     117: aload_0
     118: invokestatic  #1267               // Method scala/collection/generic/Shrinkable$class.$init$:(Lscala/collection/generic/Shrinkable;)V
     121: aload_0
     122: invokestatic  #1272               // Method scala/collection/mutable/Cloneable$class.$init$:(Lscala/collection/mutable/Cloneable;)V
     125: aload_0
     126: invokestatic  #1274               // Method scala/collection/mutable/SetLike$class.$init$:(Lscala/collection/mutable/SetLike;)V
     129: aload_0
     130: invokestatic  #1277               // Method scala/collection/mutable/Set$class.$init$:(Lscala/collection/mutable/Set;)V
     133: aload_0
     134: invokestatic  #1282               // Method scala/collection/mutable/SortedSet$class.$init$:(Lscala/collection/mutable/SortedSet;)V
     137: aload         4
     139: ifnonnull     153
     142: new           #1284               // class java/lang/NullPointerException
     145: dup
     146: ldc_w         #1286               // String ordering must not be null
     149: invokespecial #1289               // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: aload_0
     154: aload_2
     155: invokevirtual #1292               // Method scala/Option.isDefined:()Z
     158: ifne          168
     161: aload_3
     162: invokevirtual #1292               // Method scala/Option.isDefined:()Z
     165: ifeq          172
     168: iconst_0
     169: goto          173
     172: iconst_1
     173: putfield      #1024               // Field notProjection:Z
     176: return

  public scala.collection.mutable.TreeSet(scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: new           #934                // class scala/runtime/ObjectRef
       4: dup
       5: aconst_null
       6: invokespecial #1022               // Method scala/runtime/ObjectRef."<init>":(Ljava/lang/Object;)V
       9: getstatic     #987                // Field scala/None$.MODULE$:Lscala/None$;
      12: getstatic     #987                // Field scala/None$.MODULE$:Lscala/None$;
      15: aload_1
      16: invokespecial #1009               // Method "<init>":(Lscala/runtime/ObjectRef;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
      19: return
}
