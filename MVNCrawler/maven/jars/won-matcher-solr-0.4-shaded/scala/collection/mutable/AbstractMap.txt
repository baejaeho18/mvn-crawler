Compiled from "Map.scala"
public abstract class scala.collection.mutable.AbstractMap<A, B> extends scala.collection.AbstractMap<A, B> implements scala.collection.mutable.Map<A, B> {
  public scala.collection.mutable.Map<A, B> empty();
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method scala/collection/mutable/Map$class.empty:(Lscala/collection/mutable/Map;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<A, B> seq();
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method scala/collection/mutable/Map$class.seq:(Lscala/collection/mutable/Map;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<A, B> withDefault(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method scala/collection/mutable/Map$class.withDefault:(Lscala/collection/mutable/Map;Lscala/Function1;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map<A, B> withDefaultValue(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // Method scala/collection/mutable/Map$class.withDefaultValue:(Lscala/collection/mutable/Map;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<A, B>, scala.collection.mutable.Map<A, B>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method scala/collection/mutable/MapLike$class.newBuilder:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<A, B>, scala.collection.parallel.mutable.ParMap<A, B>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/mutable/MapLike$class.parCombiner:(Lscala/collection/mutable/MapLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.Option<B> put(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // Method scala/collection/mutable/MapLike$class.put:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       6: areturn

  public void update(A, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // Method scala/collection/mutable/MapLike$class.update:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  public <B1> scala.collection.mutable.Map<A, B1> updated(A, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // Method scala/collection/mutable/MapLike$class.updated:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public <B1> scala.collection.mutable.Map<A, B1> $plus(scala.Tuple2<A, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/collection/mutable/MapLike$class.$plus:(Lscala/collection/mutable/MapLike;Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public <B1> scala.collection.mutable.Map<A, B1> $plus(scala.Tuple2<A, B1>, scala.Tuple2<A, B1>, scala.collection.Seq<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #76                 // Method scala/collection/mutable/MapLike$class.$plus:(Lscala/collection/mutable/MapLike;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public <B1> scala.collection.mutable.Map<A, B1> $plus$plus(scala.collection.GenTraversableOnce<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method scala/collection/mutable/MapLike$class.$plus$plus:(Lscala/collection/mutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.Option<B> remove(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method scala/collection/mutable/MapLike$class.remove:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scala.collection.mutable.Map<A, B> $minus(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method scala/collection/mutable/MapLike$class.$minus:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokestatic  #101                // Method scala/collection/mutable/MapLike$class.clear:(Lscala/collection/mutable/MapLike;)V
       4: return

  public B getOrElseUpdate(A, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // Method scala/collection/mutable/MapLike$class.getOrElseUpdate:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scala.collection.mutable.MapLike<A, B, scala.collection.mutable.Map<A, B>> transform(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #113                // Method scala/collection/mutable/MapLike$class.transform:(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;
       5: areturn

  public scala.collection.mutable.MapLike<A, B, scala.collection.mutable.Map<A, B>> retain(scala.Function2<A, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // Method scala/collection/mutable/MapLike$class.retain:(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;
       5: areturn

  public scala.collection.mutable.Map<A, B> clone();
    Code:
       0: aload_0
       1: invokestatic  #123                // Method scala/collection/mutable/MapLike$class.clone:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<A, B> result();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method scala/collection/mutable/MapLike$class.result:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map<A, B> $minus(A, A, scala.collection.Seq<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #130                // Method scala/collection/mutable/MapLike$class.$minus:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.mutable.Map<A, B> $minus$minus(scala.collection.GenTraversableOnce<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method scala/collection/mutable/MapLike$class.$minus$minus:(Lscala/collection/mutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public java.lang.Object scala$collection$mutable$Cloneable$$super$clone();
    Code:
       0: aload_0
       1: invokespecial #139                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public scala.collection.generic.Shrinkable<A> $minus$eq(A, A, scala.collection.Seq<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #146                // Method scala/collection/generic/Shrinkable$class.$minus$eq:(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;
       7: areturn

  public scala.collection.generic.Shrinkable<A> $minus$minus$eq(scala.collection.TraversableOnce<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // Method scala/collection/generic/Shrinkable$class.$minus$minus$eq:(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;
       5: areturn

  public void sizeHint(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #159                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;I)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #171                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I)V
       6: return

  public void sizeHintBounded(int, scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #177                // Method scala/collection/mutable/Builder$class.sizeHintBounded:(Lscala/collection/mutable/Builder;ILscala/collection/TraversableLike;)V
       6: return

  public <NewTo> scala.collection.mutable.Builder<scala.Tuple2<A, B>, NewTo> mapResult(scala.Function1<scala.collection.mutable.Map<A, B>, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #183                // Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #190                // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<scala.Tuple2<A, B>> $plus$plus$eq(scala.collection.TraversableOnce<scala.Tuple2<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.mutable.Iterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #202                // Method scala/collection/mutable/Iterable$class.companion:(Lscala/collection/mutable/Iterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #207                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #212                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #216                // Method repr:()Ljava/lang/Object;
       4: checkcast     #218                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #223                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #229                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #239                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #242                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #247                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #252                // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #255                // Method mapValues:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #258                // Method filterKeys:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #261                // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #264                // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #269                // Method keySet:()Lscala/collection/Set;
       4: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #272                // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #275                // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #277                // Method result:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #279                // Method clone:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #282                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #282                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #282                // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #288                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #291                // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #297                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #297                // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #301                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #301                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method seq:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #310                // Method empty:()Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.AbstractMap();
    Code:
       0: aload_0
       1: invokespecial #313                // Method scala/collection/AbstractMap."<init>":()V
       4: aload_0
       5: invokestatic  #319                // Method scala/collection/mutable/Traversable$class.$init$:(Lscala/collection/mutable/Traversable;)V
       8: aload_0
       9: invokestatic  #322                // Method scala/collection/mutable/Iterable$class.$init$:(Lscala/collection/mutable/Iterable;)V
      12: aload_0
      13: invokestatic  #325                // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
      16: aload_0
      17: invokestatic  #328                // Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
      20: aload_0
      21: invokestatic  #331                // Method scala/collection/generic/Shrinkable$class.$init$:(Lscala/collection/generic/Shrinkable;)V
      24: aload_0
      25: invokestatic  #336                // Method scala/collection/mutable/Cloneable$class.$init$:(Lscala/collection/mutable/Cloneable;)V
      28: aload_0
      29: invokestatic  #338                // Method scala/collection/mutable/MapLike$class.$init$:(Lscala/collection/mutable/MapLike;)V
      32: aload_0
      33: invokestatic  #341                // Method scala/collection/mutable/Map$class.$init$:(Lscala/collection/mutable/Map;)V
      36: return
}
