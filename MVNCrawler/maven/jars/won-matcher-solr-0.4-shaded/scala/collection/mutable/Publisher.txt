Compiled from "Publisher.scala"
public interface scala.collection.mutable.Publisher<Evt> {
  public abstract void scala$collection$mutable$Publisher$_setter_$self_$eq(scala.collection.mutable.Publisher);

  public abstract void scala$collection$mutable$Publisher$_setter_$scala$collection$mutable$Publisher$$filters_$eq(scala.collection.mutable.HashMap);

  public abstract void scala$collection$mutable$Publisher$_setter_$scala$collection$mutable$Publisher$$suspended_$eq(scala.collection.mutable.HashSet);

  public abstract scala.collection.mutable.Publisher self();

  public abstract scala.collection.mutable.HashMap<scala.collection.mutable.Subscriber<Evt, scala.collection.mutable.Publisher>, scala.collection.mutable.Set<scala.Function1<Evt, java.lang.Object>>> scala$collection$mutable$Publisher$$filters();

  public abstract scala.collection.mutable.HashSet<scala.collection.mutable.Subscriber<Evt, scala.collection.mutable.Publisher>> scala$collection$mutable$Publisher$$suspended();

  public abstract void subscribe(scala.collection.mutable.Subscriber<Evt, scala.collection.mutable.Publisher>);

  public abstract void subscribe(scala.collection.mutable.Subscriber<Evt, scala.collection.mutable.Publisher>, scala.Function1<Evt, java.lang.Object>);

  public abstract void suspendSubscription(scala.collection.mutable.Subscriber<Evt, scala.collection.mutable.Publisher>);

  public abstract void activateSubscription(scala.collection.mutable.Subscriber<Evt, scala.collection.mutable.Publisher>);

  public abstract void removeSubscription(scala.collection.mutable.Subscriber<Evt, scala.collection.mutable.Publisher>);

  public abstract void removeSubscriptions();

  public abstract void publish(Evt);

  public abstract boolean equals(java.lang.Object);
}
