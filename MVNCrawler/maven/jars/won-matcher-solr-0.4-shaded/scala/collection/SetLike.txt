Compiled from "SetLike.scala"
public interface scala.collection.SetLike<A, This extends scala.collection.SetLike<A, This> & scala.collection.Set<A>> extends scala.collection.IterableLike<A, This>, scala.collection.GenSetLike<A, This>, scala.collection.generic.Subtractable<A, This> {
  public abstract java.lang.Object scala$collection$SetLike$$super$map(scala.Function1, scala.collection.generic.CanBuildFrom);

  public abstract This empty();

  public abstract scala.collection.mutable.Builder<A, This> newBuilder();

  public abstract scala.collection.parallel.Combiner<A, scala.collection.parallel.ParSet<A>> parCombiner();

  public abstract scala.collection.Seq<A> toSeq();

  public abstract <A1> scala.collection.mutable.Buffer<A1> toBuffer();

  public abstract <B, That> That map(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<This, B, That>);

  public abstract boolean contains(A);

  public abstract This $plus(A);

  public abstract This $plus(A, A, scala.collection.Seq<A>);

  public abstract This $plus$plus(scala.collection.GenTraversableOnce<A>);

  public abstract This $minus(A);

  public abstract boolean isEmpty();

  public abstract This union(scala.collection.GenSet<A>);

  public abstract This diff(scala.collection.GenSet<A>);

  public abstract scala.collection.Iterator<This> subsets(int);

  public abstract scala.collection.Iterator<This> subsets();

  public abstract java.lang.String stringPrefix();

  public abstract java.lang.String toString();
}
