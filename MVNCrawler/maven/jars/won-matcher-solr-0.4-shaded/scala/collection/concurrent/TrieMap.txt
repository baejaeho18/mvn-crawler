Compiled from "TrieMap.scala"
public final class scala.collection.concurrent.TrieMap<K, V> implements scala.collection.concurrent.Map<K, V>, scala.collection.CustomParallelizable<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>>, scala.Serializable {
  public static final long serialVersionUID;

  private scala.util.hashing.Hashing<K> hashingobj;

  private scala.math.Equiv<K> equalityobj;

  private java.util.concurrent.atomic.AtomicReferenceFieldUpdater<scala.collection.concurrent.TrieMap<K, V>, java.lang.Object> rootupdater;

  private volatile java.lang.Object root;

  public static <K, V> scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<?, ?>, scala.Tuple2<K, V>, scala.collection.concurrent.TrieMap<K, V>> canBuildFrom();
    Code:
       0: getstatic     #23                 // Field scala/collection/concurrent/TrieMap$.MODULE$:Lscala/collection/concurrent/TrieMap$;
       3: invokevirtual #25                 // Method scala/collection/concurrent/TrieMap$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       6: areturn

  public static java.util.concurrent.atomic.AtomicReferenceFieldUpdater<scala.collection.concurrent.INodeBase<?, ?>, scala.collection.concurrent.MainNode<?, ?>> inodeupdater();
    Code:
       0: getstatic     #23                 // Field scala/collection/concurrent/TrieMap$.MODULE$:Lscala/collection/concurrent/TrieMap$;
       3: invokevirtual #29                 // Method scala/collection/concurrent/TrieMap$.inodeupdater:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       6: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParTrieMap<K, V>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public scala.collection.mutable.Map<K, V> withDefault(scala.Function1<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method scala/collection/mutable/Map$class.withDefault:(Lscala/collection/mutable/Map;Lscala/Function1;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map<K, V> withDefaultValue(V);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method scala/collection/mutable/Map$class.withDefaultValue:(Lscala/collection/mutable/Map;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<K, V>, scala.collection.concurrent.TrieMap<K, V>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method scala/collection/mutable/MapLike$class.newBuilder:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B1> scala.collection.mutable.Map<K, B1> updated(K, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // Method scala/collection/mutable/MapLike$class.updated:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public <B1> scala.collection.mutable.Map<K, B1> $plus(scala.Tuple2<K, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method scala/collection/mutable/MapLike$class.$plus:(Lscala/collection/mutable/MapLike;Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public <B1> scala.collection.mutable.Map<K, B1> $plus(scala.Tuple2<K, B1>, scala.Tuple2<K, B1>, scala.collection.Seq<scala.Tuple2<K, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #92                 // Method scala/collection/mutable/MapLike$class.$plus:(Lscala/collection/mutable/MapLike;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public <B1> scala.collection.mutable.Map<K, B1> $plus$plus(scala.collection.GenTraversableOnce<scala.Tuple2<K, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // Method scala/collection/mutable/MapLike$class.$plus$plus:(Lscala/collection/mutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // Method scala/collection/mutable/MapLike$class.$minus:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.mutable.MapLike<K, V, scala.collection.concurrent.TrieMap<K, V>> transform(scala.Function2<K, V, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #112                // Method scala/collection/mutable/MapLike$class.transform:(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;
       5: areturn

  public scala.collection.mutable.MapLike<K, V, scala.collection.concurrent.TrieMap<K, V>> retain(scala.Function2<K, V, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // Method scala/collection/mutable/MapLike$class.retain:(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;
       5: areturn

  public scala.collection.mutable.Map clone();
    Code:
       0: aload_0
       1: invokestatic  #123                // Method scala/collection/mutable/MapLike$class.clone:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map result();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method scala/collection/mutable/MapLike$class.result:(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;
       4: areturn

  public scala.collection.mutable.Map $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #130                // Method scala/collection/mutable/MapLike$class.$minus:(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.mutable.Map $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method scala/collection/mutable/MapLike$class.$minus$minus:(Lscala/collection/mutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public java.lang.Object scala$collection$mutable$Cloneable$$super$clone();
    Code:
       0: aload_0
       1: invokespecial #137                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public scala.collection.generic.Shrinkable<K> $minus$eq(K, K, scala.collection.Seq<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #144                // Method scala/collection/generic/Shrinkable$class.$minus$eq:(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;
       7: areturn

  public scala.collection.generic.Shrinkable<K> $minus$minus$eq(scala.collection.TraversableOnce<K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #149                // Method scala/collection/generic/Shrinkable$class.$minus$minus$eq:(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;
       5: areturn

  public void sizeHint(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #157                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;I)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;)V
       5: return

  public void sizeHint(scala.collection.TraversableLike<?, ?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #169                // Method scala/collection/mutable/Builder$class.sizeHint:(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I)V
       6: return

  public void sizeHintBounded(int, scala.collection.TraversableLike<?, ?>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #175                // Method scala/collection/mutable/Builder$class.sizeHintBounded:(Lscala/collection/mutable/Builder;ILscala/collection/TraversableLike;)V
       6: return

  public <NewTo> scala.collection.mutable.Builder<scala.Tuple2<K, V>, NewTo> mapResult(scala.Function1<scala.collection.concurrent.TrieMap<K, V>, NewTo>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #188                // Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
       7: areturn

  public scala.collection.generic.Growable<scala.Tuple2<K, V>> $plus$plus$eq(scala.collection.TraversableOnce<scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
       5: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #200                // Method scala/collection/MapLike$class.isEmpty:(Lscala/collection/MapLike;)Z
       4: ireturn

  public <B1> B1 getOrElse(K, scala.Function0<B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #205                // Method scala/collection/MapLike$class.getOrElse:(Lscala/collection/MapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public boolean contains(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // Method scala/collection/MapLike$class.contains:(Lscala/collection/MapLike;Ljava/lang/Object;)Z
       5: ireturn

  public boolean isDefinedAt(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #215                // Method scala/collection/MapLike$class.isDefinedAt:(Lscala/collection/MapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.Set<K> keySet();
    Code:
       0: aload_0
       1: invokestatic  #220                // Method scala/collection/MapLike$class.keySet:(Lscala/collection/MapLike;)Lscala/collection/Set;
       4: areturn

  public scala.collection.Iterator<K> keysIterator();
    Code:
       0: aload_0
       1: invokestatic  #225                // Method scala/collection/MapLike$class.keysIterator:(Lscala/collection/MapLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterable<K> keys();
    Code:
       0: aload_0
       1: invokestatic  #230                // Method scala/collection/MapLike$class.keys:(Lscala/collection/MapLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable<V> values();
    Code:
       0: aload_0
       1: invokestatic  #233                // Method scala/collection/MapLike$class.values:(Lscala/collection/MapLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<V> valuesIterator();
    Code:
       0: aload_0
       1: invokestatic  #236                // Method scala/collection/MapLike$class.valuesIterator:(Lscala/collection/MapLike;)Lscala/collection/Iterator;
       4: areturn

  public V default(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #240                // Method scala/collection/MapLike$class.default:(Lscala/collection/MapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Map<K, V> filterKeys(scala.Function1<K, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #245                // Method scala/collection/MapLike$class.filterKeys:(Lscala/collection/MapLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public <C> scala.collection.Map<K, C> mapValues(scala.Function1<V, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #248                // Method scala/collection/MapLike$class.mapValues:(Lscala/collection/MapLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.Map filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #251                // Method scala/collection/MapLike$class.filterNot:(Lscala/collection/MapLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.Seq<scala.Tuple2<K, V>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #256                // Method scala/collection/MapLike$class.toSeq:(Lscala/collection/MapLike;)Lscala/collection/Seq;
       4: areturn

  public <C> scala.collection.mutable.Buffer<C> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #261                // Method scala/collection/MapLike$class.toBuffer:(Lscala/collection/MapLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #266                // Method scala/collection/MapLike$class.addString:(Lscala/collection/MapLike;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #277                // Method scala/collection/MapLike$class.toString:(Lscala/collection/MapLike;)Ljava/lang/String;
       4: areturn

  public <A1 extends K, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #284                // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<K, C> andThen(scala.Function1<V, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #291                // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<K, scala.Option<V>> lift();
    Code:
       0: aload_0
       1: invokestatic  #297                // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public <A1 extends K, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #302                // Method scala/PartialFunction$class.applyOrElse:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<K, java.lang.Object> runWith(scala.Function1<V, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #308                // Method scala/PartialFunction$class.runWith:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #316                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #323                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #328                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #333                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #338                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #343                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #348                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #354                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #359                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #364                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #369                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #374                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #379                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #384                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #389                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #394                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #399                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #403                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #408                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #413                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #418                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #423                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #428                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #433                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, V> compose(scala.Function1<A, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #445                // Method scala/collection/GenMapLike$class.hashCode:(Lscala/collection/GenMapLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #449                // Method scala/collection/GenMapLike$class.equals:(Lscala/collection/GenMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.generic.GenericCompanion<scala.collection.mutable.Iterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #456                // Method scala/collection/mutable/Iterable$class.companion:(Lscala/collection/mutable/Iterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.Iterable<scala.Tuple2<K, V>> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #462                // Method scala/collection/IterableLike$class.thisCollection:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #467                // Method scala/collection/IterableLike$class.toCollection:(Lscala/collection/IterableLike;Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #473                // Method scala/collection/IterableLike$class.foreach:(Lscala/collection/IterableLike;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #478                // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #481                // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<scala.Tuple2<K, V>> find(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #486                // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldRight(B, scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #491                // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<scala.Tuple2<K, V>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #501                // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #505                // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object head();
    Code:
       0: aload_0
       1: invokestatic  #509                // Method scala/collection/IterableLike$class.head:(Lscala/collection/IterableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #514                // Method scala/collection/IterableLike$class.slice:(Lscala/collection/IterableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #521                // Method scala/collection/IterableLike$class.take:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #525                // Method scala/collection/IterableLike$class.drop:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #530                // Method scala/collection/IterableLike$class.takeWhile:(Lscala/collection/IterableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator<scala.collection.concurrent.TrieMap<K, V>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #535                // Method scala/collection/IterableLike$class.grouped:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.concurrent.TrieMap<K, V>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #538                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.concurrent.TrieMap<K, V>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #542                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #546                // Method scala/collection/IterableLike$class.takeRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #549                // Method scala/collection/IterableLike$class.dropRight:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #554                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #560                // Method scala/collection/IterableLike$class.zip:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #568                // Method scala/collection/IterableLike$class.zipAll:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #575                // Method scala/collection/IterableLike$class.zipWithIndex:(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #580                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<scala.Tuple2<K, V>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #585                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #589                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #594                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;)Lscala/collection/IterableView;
       4: areturn

  public scala.collection.IterableView<scala.Tuple2<K, V>, scala.collection.concurrent.TrieMap<K, V>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #598                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;II)Lscala/collection/IterableView;
       6: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.mutable.Iterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #604                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.mutable.Iterable<A1>, scala.collection.mutable.Iterable<A2>> unzip(scala.Function1<scala.Tuple2<K, V>, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #609                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.mutable.Iterable<A1>, scala.collection.mutable.Iterable<A2>, scala.collection.mutable.Iterable<A3>> unzip3(scala.Function1<scala.Tuple2<K, V>, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #615                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #621                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #625                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #630                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #634                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #637                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #641                // Method scala/collection/TraversableLike$class.$plus$plus:(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #646                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #650                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<scala.Tuple2<K, V>, B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #656                // Method scala/collection/TraversableLike$class.map:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<scala.Tuple2<K, V>, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #659                // Method scala/collection/TraversableLike$class.flatMap:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #663                // Method scala/collection/TraversableLike$class.filter:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<scala.Tuple2<K, V>, B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #668                // Method scala/collection/TraversableLike$class.collect:(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.concurrent.TrieMap<K, V>, scala.collection.concurrent.TrieMap<K, V>> partition(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #673                // Method scala/collection/TraversableLike$class.partition:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.concurrent.TrieMap<K, V>> groupBy(scala.Function1<scala.Tuple2<K, V>, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #678                // Method scala/collection/TraversableLike$class.groupBy:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #683                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, scala.Tuple2<K, V>, B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #687                // Method scala/collection/TraversableLike$class.scanLeft:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<scala.Tuple2<K, V>, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.concurrent.TrieMap<K, V>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #690                // Method scala/collection/TraversableLike$class.scanRight:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.Option<scala.Tuple2<K, V>> headOption();
    Code:
       0: aload_0
       1: invokestatic  #695                // Method scala/collection/TraversableLike$class.headOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokestatic  #698                // Method scala/collection/TraversableLike$class.tail:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object last();
    Code:
       0: aload_0
       1: invokestatic  #701                // Method scala/collection/TraversableLike$class.last:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<scala.Tuple2<K, V>> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #704                // Method scala/collection/TraversableLike$class.lastOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokestatic  #707                // Method scala/collection/TraversableLike$class.init:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #712                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #716                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #719                // Method scala/collection/TraversableLike$class.dropWhile:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2<scala.collection.concurrent.TrieMap<K, V>, scala.collection.concurrent.TrieMap<K, V>> span(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #722                // Method scala/collection/TraversableLike$class.span:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.concurrent.TrieMap<K, V>, scala.collection.concurrent.TrieMap<K, V>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #727                // Method scala/collection/TraversableLike$class.splitAt:(Lscala/collection/TraversableLike;I)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scala.collection.concurrent.TrieMap<K, V>> tails();
    Code:
       0: aload_0
       1: invokestatic  #731                // Method scala/collection/TraversableLike$class.tails:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.concurrent.TrieMap<K, V>> inits();
    Code:
       0: aload_0
       1: invokestatic  #734                // Method scala/collection/TraversableLike$class.inits:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Traversable<scala.Tuple2<K, V>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #739                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scala.Tuple2<K, V>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #743                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public scala.collection.generic.FilterMonadic<scala.Tuple2<K, V>, scala.collection.concurrent.TrieMap<K, V>> withFilter(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #748                // Method scala/collection/TraversableLike$class.withFilter:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<K, V>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #755                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #759                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #764                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #769                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #773                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #776                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #779                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #783                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #788                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #791                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #794                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #797                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #800                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, scala.Tuple2<K, V>, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #805                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #812                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #817                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #822                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #827                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #832                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #835                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #840                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #846                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #850                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #855                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<K, V>> toList();
    Code:
       0: aload_0
       1: invokestatic  #860                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<K, V>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #865                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #870                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<K, V>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #875                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #880                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #887                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #891                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #894                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #898                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #902                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  private scala.util.hashing.Hashing<K> hashingobj();
    Code:
       0: aload_0
       1: getfield      #905                // Field hashingobj:Lscala/util/hashing/Hashing;
       4: areturn

  private void hashingobj_$eq(scala.util.hashing.Hashing<K>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #905                // Field hashingobj:Lscala/util/hashing/Hashing;
       5: return

  private scala.math.Equiv<K> equalityobj();
    Code:
       0: aload_0
       1: getfield      #911                // Field equalityobj:Lscala/math/Equiv;
       4: areturn

  private void equalityobj_$eq(scala.math.Equiv<K>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #911                // Field equalityobj:Lscala/math/Equiv;
       5: return

  private java.util.concurrent.atomic.AtomicReferenceFieldUpdater<scala.collection.concurrent.TrieMap<K, V>, java.lang.Object> rootupdater();
    Code:
       0: aload_0
       1: getfield      #915                // Field rootupdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: areturn

  private void rootupdater_$eq(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<scala.collection.concurrent.TrieMap<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #915                // Field rootupdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       5: return

  public scala.util.hashing.Hashing<K> hashing();
    Code:
       0: aload_0
       1: invokespecial #920                // Method hashingobj:()Lscala/util/hashing/Hashing;
       4: areturn

  public scala.math.Equiv<K> equality();
    Code:
       0: aload_0
       1: invokespecial #923                // Method equalityobj:()Lscala/math/Equiv;
       4: areturn

  public java.lang.Object root();
    Code:
       0: aload_0
       1: getfield      #925                // Field root:Ljava/lang/Object;
       4: areturn

  public void root_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #925                // Field root:Ljava/lang/Object;
       5: return

  private void writeObject(java.io.ObjectOutputStream);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #920                // Method hashingobj:()Lscala/util/hashing/Hashing;
       5: invokevirtual #932                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
       8: aload_1
       9: aload_0
      10: invokespecial #923                // Method equalityobj:()Lscala/math/Equiv;
      13: invokevirtual #932                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      16: aload_0
      17: invokevirtual #935                // Method iterator:()Lscala/collection/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #940,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      27: ifeq          101
      30: aload_2
      31: invokeinterface #943,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #945                // class scala/Tuple2
      39: astore        6
      41: aload         6
      43: ifnull        91
      46: new           #945                // class scala/Tuple2
      49: dup
      50: aload         6
      52: invokevirtual #948                // Method scala/Tuple2._1:()Ljava/lang/Object;
      55: aload         6
      57: invokevirtual #951                // Method scala/Tuple2._2:()Ljava/lang/Object;
      60: invokespecial #955                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      63: astore_3
      64: aload_3
      65: invokevirtual #948                // Method scala/Tuple2._1:()Ljava/lang/Object;
      68: astore        4
      70: aload_3
      71: invokevirtual #951                // Method scala/Tuple2._2:()Ljava/lang/Object;
      74: astore        5
      76: aload_1
      77: aload         4
      79: invokevirtual #932                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      82: aload_1
      83: aload         5
      85: invokevirtual #932                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      88: goto          21
      91: new           #957                // class scala/MatchError
      94: dup
      95: aload         6
      97: invokespecial #959                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     100: athrow
     101: aload_1
     102: getstatic     #964                // Field scala/collection/concurrent/TrieMapSerializationEnd$.MODULE$:Lscala/collection/concurrent/TrieMapSerializationEnd$;
     105: invokevirtual #932                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
     108: return

  private void readObject(java.io.ObjectInputStream);
    Code:
       0: aload_0
       1: getstatic     #976                // Field scala/collection/concurrent/INode$.MODULE$:Lscala/collection/concurrent/INode$;
       4: invokevirtual #980                // Method scala/collection/concurrent/INode$.newRootNode:()Lscala/collection/concurrent/INode;
       7: invokevirtual #982                // Method root_$eq:(Ljava/lang/Object;)V
      10: aload_0
      11: ldc           #2                  // class scala/collection/concurrent/TrieMap
      13: ldc           #5                  // class java/lang/Object
      15: ldc_w         #983                // String root
      18: invokestatic  #989                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: invokespecial #991                // Method rootupdater_$eq:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)V
      24: aload_0
      25: aload_1
      26: invokevirtual #995                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      29: checkcast     #997                // class scala/util/hashing/Hashing
      32: invokespecial #999                // Method hashingobj_$eq:(Lscala/util/hashing/Hashing;)V
      35: aload_0
      36: aload_1
      37: invokevirtual #995                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      40: checkcast     #1001               // class scala/math/Equiv
      43: invokespecial #1003               // Method equalityobj_$eq:(Lscala/math/Equiv;)V
      46: aload_1
      47: invokevirtual #995                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      50: dup
      51: astore        4
      53: getstatic     #964                // Field scala/collection/concurrent/TrieMapSerializationEnd$.MODULE$:Lscala/collection/concurrent/TrieMapSerializationEnd$;
      56: astore_2
      57: dup
      58: ifnonnull     65
      61: pop
      62: goto          72
      65: aload_2
      66: invokevirtual #1005               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifne          84
      72: aload_1
      73: invokevirtual #995                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      76: astore_3
      77: aload_0
      78: aload         4
      80: aload_3
      81: invokevirtual #1008               // Method update:(Ljava/lang/Object;Ljava/lang/Object;)V
      84: aload         4
      86: getstatic     #964                // Field scala/collection/concurrent/TrieMapSerializationEnd$.MODULE$:Lscala/collection/concurrent/TrieMapSerializationEnd$;
      89: astore        5
      91: dup
      92: ifnonnull     99
      95: pop
      96: goto          46
      99: aload         5
     101: invokevirtual #1005               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     104: ifeq          46
     107: return

  public boolean CAS_ROOT(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1015               // Method rootupdater:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #1019               // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  public scala.collection.concurrent.INode<K, V> readRoot(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       5: areturn

  public boolean readRoot$default$1();
    Code:
       0: iconst_0
       1: ireturn

  public scala.collection.concurrent.INode<K, V> RDCSS_READ_ROOT(boolean);
    Code:
       0: aload_0
       1: invokevirtual #1031               // Method root:()Ljava/lang/Object;
       4: astore        4
       6: aload         4
       8: instanceof    #1033               // class scala/collection/concurrent/INode
      11: ifeq          25
      14: aload         4
      16: checkcast     #1033               // class scala/collection/concurrent/INode
      19: astore_2
      20: aload_2
      21: astore_3
      22: goto          39
      25: aload         4
      27: instanceof    #1035               // class scala/collection/concurrent/RDCSS_Descriptor
      30: ifeq          41
      33: aload_0
      34: iload_1
      35: invokespecial #1038               // Method RDCSS_Complete:(Z)Lscala/collection/concurrent/INode;
      38: astore_3
      39: aload_3
      40: areturn
      41: new           #957                // class scala/MatchError
      44: dup
      45: aload         4
      47: invokespecial #959                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      50: athrow

  public boolean RDCSS_READ_ROOT$default$1();
    Code:
       0: iconst_0
       1: ireturn

  private scala.collection.concurrent.INode<K, V> RDCSS_Complete(boolean);
    Code:
       0: aload_0
       1: invokevirtual #1031               // Method root:()Ljava/lang/Object;
       4: astore        10
       6: aload         10
       8: instanceof    #1033               // class scala/collection/concurrent/INode
      11: ifeq          26
      14: aload         10
      16: checkcast     #1033               // class scala/collection/concurrent/INode
      19: astore_2
      20: aload_2
      21: astore        8
      23: goto          168
      26: aload         10
      28: instanceof    #1035               // class scala/collection/concurrent/RDCSS_Descriptor
      31: ifeq          181
      34: aload         10
      36: checkcast     #1035               // class scala/collection/concurrent/RDCSS_Descriptor
      39: astore        9
      41: aload         9
      43: ifnull        171
      46: new           #1042               // class scala/Tuple3
      49: dup
      50: aload         9
      52: invokevirtual #1045               // Method scala/collection/concurrent/RDCSS_Descriptor.old:()Lscala/collection/concurrent/INode;
      55: aload         9
      57: invokevirtual #1049               // Method scala/collection/concurrent/RDCSS_Descriptor.expectedmain:()Lscala/collection/concurrent/MainNode;
      60: aload         9
      62: invokevirtual #1051               // Method scala/collection/concurrent/RDCSS_Descriptor.nv:()Lscala/collection/concurrent/INode;
      65: invokespecial #1054               // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      68: astore_3
      69: aload_3
      70: invokevirtual #1055               // Method scala/Tuple3._1:()Ljava/lang/Object;
      73: checkcast     #1033               // class scala/collection/concurrent/INode
      76: astore        7
      78: aload_3
      79: invokevirtual #1056               // Method scala/Tuple3._2:()Ljava/lang/Object;
      82: checkcast     #1058               // class scala/collection/concurrent/MainNode
      85: astore        5
      87: aload_3
      88: invokevirtual #1061               // Method scala/Tuple3._3:()Ljava/lang/Object;
      91: checkcast     #1033               // class scala/collection/concurrent/INode
      94: astore        6
      96: iload_1
      97: ifeq          116
     100: aload_0
     101: aload         9
     103: aload         7
     105: invokevirtual #1063               // Method CAS_ROOT:(Ljava/lang/Object;Ljava/lang/Object;)Z
     108: ifeq          0
     111: aload         7
     113: goto          166
     116: aload         7
     118: aload_0
     119: invokevirtual #1067               // Method scala/collection/concurrent/INode.gcasRead:(Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/MainNode;
     122: astore        4
     124: aload         4
     126: aload         5
     128: if_acmpne     153
     131: aload_0
     132: aload         9
     134: aload         6
     136: invokevirtual #1063               // Method CAS_ROOT:(Ljava/lang/Object;Ljava/lang/Object;)Z
     139: ifeq          0
     142: aload         9
     144: iconst_1
     145: invokevirtual #1071               // Method scala/collection/concurrent/RDCSS_Descriptor.committed_$eq:(Z)V
     148: aload         6
     150: goto          166
     153: aload_0
     154: aload         9
     156: aload         7
     158: invokevirtual #1063               // Method CAS_ROOT:(Ljava/lang/Object;Ljava/lang/Object;)Z
     161: ifeq          0
     164: aload         7
     166: astore        8
     168: aload         8
     170: areturn
     171: new           #957                // class scala/MatchError
     174: dup
     175: aload         9
     177: invokespecial #959                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     180: athrow
     181: new           #957                // class scala/MatchError
     184: dup
     185: aload         10
     187: invokespecial #959                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     190: athrow

  private boolean RDCSS_ROOT(scala.collection.concurrent.INode<K, V>, scala.collection.concurrent.MainNode<K, V>, scala.collection.concurrent.INode<K, V>);
    Code:
       0: new           #1035               // class scala/collection/concurrent/RDCSS_Descriptor
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #1080               // Method scala/collection/concurrent/RDCSS_Descriptor."<init>":(Lscala/collection/concurrent/INode;Lscala/collection/concurrent/MainNode;Lscala/collection/concurrent/INode;)V
      10: astore        4
      12: aload_0
      13: aload_1
      14: aload         4
      16: invokevirtual #1063               // Method CAS_ROOT:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: ifeq          36
      22: aload_0
      23: iconst_0
      24: invokespecial #1038               // Method RDCSS_Complete:(Z)Lscala/collection/concurrent/INode;
      27: pop
      28: aload         4
      30: invokevirtual #1083               // Method scala/collection/concurrent/RDCSS_Descriptor.committed:()Z
      33: goto          37
      36: iconst_0
      37: ireturn

  private void inserthc(K, int, V);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore        4
      10: aload         4
      12: aload_1
      13: aload_3
      14: iload_2
      15: iconst_0
      16: aconst_null
      17: aload         4
      19: getfield      #1093               // Field scala/collection/concurrent/INode.gen:Lscala/collection/concurrent/Gen;
      22: aload_0
      23: invokevirtual #1097               // Method scala/collection/concurrent/INode.rec_insert:(Ljava/lang/Object;Ljava/lang/Object;IILscala/collection/concurrent/INode;Lscala/collection/concurrent/Gen;Lscala/collection/concurrent/TrieMap;)Z
      26: ifeq          0
      29: getstatic     #1103               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      32: pop
      33: return

  private scala.Option<V> insertifhc(K, int, V, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore        5
      10: aload         5
      12: aload_1
      13: aload_3
      14: iload_2
      15: aload         4
      17: iconst_0
      18: aconst_null
      19: aload         5
      21: getfield      #1093               // Field scala/collection/concurrent/INode.gen:Lscala/collection/concurrent/Gen;
      24: aload_0
      25: invokevirtual #1110               // Method scala/collection/concurrent/INode.rec_insertif:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;ILscala/collection/concurrent/INode;Lscala/collection/concurrent/Gen;Lscala/collection/concurrent/TrieMap;)Lscala/Option;
      28: astore        6
      30: aload         6
      32: ifnull        0
      35: aload         6
      37: areturn

  private java.lang.Object lookuphc(K, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore_3
       9: aload_3
      10: aload_1
      11: iload_2
      12: iconst_0
      13: aconst_null
      14: aload_3
      15: getfield      #1093               // Field scala/collection/concurrent/INode.gen:Lscala/collection/concurrent/Gen;
      18: aload_0
      19: invokevirtual #1119               // Method scala/collection/concurrent/INode.rec_lookup:(Ljava/lang/Object;IILscala/collection/concurrent/INode;Lscala/collection/concurrent/Gen;Lscala/collection/concurrent/TrieMap;)Ljava/lang/Object;
      22: astore        4
      24: aload         4
      26: getstatic     #1124               // Field scala/collection/concurrent/INodeBase.RESTART:Ljava/lang/Object;
      29: if_acmpeq     0
      32: aload         4
      34: areturn

  private scala.Option<V> removehc(K, V, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore        4
      10: aload         4
      12: aload_1
      13: aload_2
      14: iload_3
      15: iconst_0
      16: aconst_null
      17: aload         4
      19: getfield      #1093               // Field scala/collection/concurrent/INode.gen:Lscala/collection/concurrent/Gen;
      22: aload_0
      23: invokevirtual #1131               // Method scala/collection/concurrent/INode.rec_remove:(Ljava/lang/Object;Ljava/lang/Object;IILscala/collection/concurrent/INode;Lscala/collection/concurrent/Gen;Lscala/collection/concurrent/TrieMap;)Lscala/Option;
      26: astore        5
      28: aload         5
      30: ifnull        0
      33: aload         5
      35: areturn

  public java.lang.String string();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: iconst_0
       9: invokevirtual #1135               // Method scala/collection/concurrent/INode.string:(I)Ljava/lang/String;
      12: areturn

  public scala.collection.concurrent.TrieMap<K, V> seq();
    Code:
       0: aload_0
       1: areturn

  public scala.collection.parallel.mutable.ParTrieMap<K, V> par();
    Code:
       0: new           #1141               // class scala/collection/parallel/mutable/ParTrieMap
       3: dup
       4: aload_0
       5: invokespecial #1144               // Method scala/collection/parallel/mutable/ParTrieMap."<init>":(Lscala/collection/concurrent/TrieMap;)V
       8: areturn

  public scala.collection.concurrent.TrieMap<K, V> empty();
    Code:
       0: new           #2                  // class scala/collection/concurrent/TrieMap
       3: dup
       4: invokespecial #1148               // Method "<init>":()V
       7: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: invokespecial #1015               // Method rootupdater:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean nonReadOnly();
    Code:
       0: aload_0
       1: invokespecial #1015               // Method rootupdater:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public scala.collection.concurrent.TrieMap<K, V> snapshot();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore_2
       9: aload_2
      10: aload_0
      11: invokevirtual #1067               // Method scala/collection/concurrent/INode.gcasRead:(Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/MainNode;
      14: astore_1
      15: aload_0
      16: aload_2
      17: aload_1
      18: aload_2
      19: new           #1153               // class scala/collection/concurrent/Gen
      22: dup
      23: invokespecial #1154               // Method scala/collection/concurrent/Gen."<init>":()V
      26: aload_0
      27: invokevirtual #1158               // Method scala/collection/concurrent/INode.copyToGen:(Lscala/collection/concurrent/Gen;Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/INode;
      30: invokespecial #1160               // Method RDCSS_ROOT:(Lscala/collection/concurrent/INode;Lscala/collection/concurrent/MainNode;Lscala/collection/concurrent/INode;)Z
      33: ifeq          0
      36: new           #2                  // class scala/collection/concurrent/TrieMap
      39: dup
      40: aload_2
      41: new           #1153               // class scala/collection/concurrent/Gen
      44: dup
      45: invokespecial #1154               // Method scala/collection/concurrent/Gen."<init>":()V
      48: aload_0
      49: invokevirtual #1158               // Method scala/collection/concurrent/INode.copyToGen:(Lscala/collection/concurrent/Gen;Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/INode;
      52: aload_0
      53: invokespecial #1015               // Method rootupdater:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      56: aload_0
      57: invokevirtual #1162               // Method hashing:()Lscala/util/hashing/Hashing;
      60: aload_0
      61: invokevirtual #1164               // Method equality:()Lscala/math/Equiv;
      64: invokespecial #1167               // Method "<init>":(Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Lscala/util/hashing/Hashing;Lscala/math/Equiv;)V
      67: areturn

  public scala.collection.Map<K, V> readOnlySnapshot();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore_2
       9: aload_2
      10: aload_0
      11: invokevirtual #1067               // Method scala/collection/concurrent/INode.gcasRead:(Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/MainNode;
      14: astore_1
      15: aload_0
      16: aload_2
      17: aload_1
      18: aload_2
      19: new           #1153               // class scala/collection/concurrent/Gen
      22: dup
      23: invokespecial #1154               // Method scala/collection/concurrent/Gen."<init>":()V
      26: aload_0
      27: invokevirtual #1158               // Method scala/collection/concurrent/INode.copyToGen:(Lscala/collection/concurrent/Gen;Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/INode;
      30: invokespecial #1160               // Method RDCSS_ROOT:(Lscala/collection/concurrent/INode;Lscala/collection/concurrent/MainNode;Lscala/collection/concurrent/INode;)Z
      33: ifeq          0
      36: new           #2                  // class scala/collection/concurrent/TrieMap
      39: dup
      40: aload_2
      41: aconst_null
      42: aload_0
      43: invokevirtual #1162               // Method hashing:()Lscala/util/hashing/Hashing;
      46: aload_0
      47: invokevirtual #1164               // Method equality:()Lscala/math/Equiv;
      50: invokespecial #1167               // Method "<init>":(Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Lscala/util/hashing/Hashing;Lscala/math/Equiv;)V
      53: areturn

  public void clear();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore_1
       9: aload_0
      10: aload_1
      11: aload_1
      12: aload_0
      13: invokevirtual #1067               // Method scala/collection/concurrent/INode.gcasRead:(Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/MainNode;
      16: getstatic     #976                // Field scala/collection/concurrent/INode$.MODULE$:Lscala/collection/concurrent/INode$;
      19: invokevirtual #980                // Method scala/collection/concurrent/INode$.newRootNode:()Lscala/collection/concurrent/INode;
      22: invokespecial #1160               // Method RDCSS_ROOT:(Lscala/collection/concurrent/INode;Lscala/collection/concurrent/MainNode;Lscala/collection/concurrent/INode;)Z
      25: ifeq          0
      28: getstatic     #1103               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      31: pop
      32: return

  public int computeHash(K);
    Code:
       0: aload_0
       1: invokespecial #920                // Method hashingobj:()Lscala/util/hashing/Hashing;
       4: aload_1
       5: invokeinterface #1176,  2         // InterfaceMethod scala/util/hashing/Hashing.hash:(Ljava/lang/Object;)I
      10: ireturn

  public V lookup(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_2
       6: aload_0
       7: aload_1
       8: iload_2
       9: invokespecial #1181               // Method lookuphc:(Ljava/lang/Object;I)Ljava/lang/Object;
      12: areturn

  public V apply(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_2
       6: aload_0
       7: aload_1
       8: iload_2
       9: invokespecial #1181               // Method lookuphc:(Ljava/lang/Object;I)Ljava/lang/Object;
      12: astore_3
      13: aload_3
      14: ifnonnull     25
      17: new           #1184               // class java/util/NoSuchElementException
      20: dup
      21: invokespecial #1185               // Method java/util/NoSuchElementException."<init>":()V
      24: athrow
      25: aload_3
      26: areturn

  public scala.Option<V> get(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_2
       6: getstatic     #1192               // Field scala/Option$.MODULE$:Lscala/Option$;
       9: aload_0
      10: aload_1
      11: iload_2
      12: invokespecial #1181               // Method lookuphc:(Ljava/lang/Object;I)Ljava/lang/Object;
      15: invokevirtual #1194               // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      18: areturn

  public scala.Option<V> put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_3
       6: aload_0
       7: aload_1
       8: iload_3
       9: aload_2
      10: aconst_null
      11: invokespecial #1198               // Method insertifhc:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Lscala/Option;
      14: areturn

  public void update(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_3
       6: aload_0
       7: aload_1
       8: iload_3
       9: aload_2
      10: invokespecial #1200               // Method inserthc:(Ljava/lang/Object;ILjava/lang/Object;)V
      13: return

  public scala.collection.concurrent.TrieMap<K, V> $plus$eq(scala.Tuple2<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #948                // Method scala/Tuple2._1:()Ljava/lang/Object;
       5: aload_1
       6: invokevirtual #951                // Method scala/Tuple2._2:()Ljava/lang/Object;
       9: invokevirtual #1008               // Method update:(Ljava/lang/Object;Ljava/lang/Object;)V
      12: aload_0
      13: areturn

  public scala.Option<V> remove(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_2
       6: aload_0
       7: aload_1
       8: aconst_null
       9: iload_2
      10: invokespecial #1204               // Method removehc:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/Option;
      13: areturn

  public scala.collection.concurrent.TrieMap<K, V> $minus$eq(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1207               // Method remove:(Ljava/lang/Object;)Lscala/Option;
       5: pop
       6: aload_0
       7: areturn

  public scala.Option<V> putIfAbsent(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_3
       6: aload_0
       7: aload_1
       8: iload_3
       9: aload_2
      10: getstatic     #976                // Field scala/collection/concurrent/INode$.MODULE$:Lscala/collection/concurrent/INode$;
      13: invokevirtual #1211               // Method scala/collection/concurrent/INode$.KEY_ABSENT:()Ljava/lang/Object;
      16: invokespecial #1198               // Method insertifhc:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Lscala/Option;
      19: areturn

  public V getOrElseUpdate(K, scala.Function0<V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1214               // Method lookup:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     113
      10: aload_2
      11: invokeinterface #1218,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: astore        4
      18: aload         4
      20: ifnonnull     34
      23: new           #1220               // class java/lang/NullPointerException
      26: dup
      27: ldc_w         #1222               // String Concurrent TrieMap values cannot be null.
      30: invokespecial #1225               // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
      39: istore        5
      41: aload_0
      42: aload_1
      43: iload         5
      45: aload         4
      47: getstatic     #976                // Field scala/collection/concurrent/INode$.MODULE$:Lscala/collection/concurrent/INode$;
      50: invokevirtual #1211               // Method scala/collection/concurrent/INode$.KEY_ABSENT:()Ljava/lang/Object;
      53: invokespecial #1198               // Method insertifhc:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Lscala/Option;
      56: astore        6
      58: aload         6
      60: instanceof    #1227               // class scala/Some
      63: ifeq          83
      66: aload         6
      68: checkcast     #1227               // class scala/Some
      71: astore        7
      73: aload         7
      75: invokevirtual #1229               // Method scala/Some.x:()Ljava/lang/Object;
      78: astore        8
      80: goto          98
      83: getstatic     #1234               // Field scala/None$.MODULE$:Lscala/None$;
      86: aload         6
      88: invokevirtual #1005               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      91: ifeq          103
      94: aload         4
      96: astore        8
      98: aload         8
     100: goto          114
     103: new           #957                // class scala/MatchError
     106: dup
     107: aload         6
     109: invokespecial #959                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow
     113: aload_3
     114: areturn

  public boolean remove(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: iload_3
      10: invokespecial #1204               // Method removehc:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/Option;
      13: invokevirtual #1239               // Method scala/Option.nonEmpty:()Z
      16: ireturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore        4
       7: aload_0
       8: aload_1
       9: iload         4
      11: aload_3
      12: aload_2
      13: invokespecial #1198               // Method insertifhc:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Lscala/Option;
      16: invokevirtual #1239               // Method scala/Option.nonEmpty:()Z
      19: ireturn

  public scala.Option<V> replace(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1179               // Method computeHash:(Ljava/lang/Object;)I
       5: istore_3
       6: aload_0
       7: aload_1
       8: iload_3
       9: aload_2
      10: getstatic     #976                // Field scala/collection/concurrent/INode$.MODULE$:Lscala/collection/concurrent/INode$;
      13: invokevirtual #1245               // Method scala/collection/concurrent/INode$.KEY_PRESENT:()Ljava/lang/Object;
      16: invokespecial #1198               // Method insertifhc:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Lscala/Option;
      19: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> iterator();
    Code:
       0: aload_0
       1: invokevirtual #1247               // Method nonReadOnly:()Z
       4: ifeq          19
       7: aload_0
       8: invokevirtual #1249               // Method readOnlySnapshot:()Lscala/collection/Map;
      11: invokeinterface #1252,  1         // InterfaceMethod scala/collection/Map.iterator:()Lscala/collection/Iterator;
      16: goto          34
      19: new           #1254               // class scala/collection/concurrent/TrieMapIterator
      22: dup
      23: iconst_0
      24: aload_0
      25: getstatic     #1259               // Field scala/collection/concurrent/TrieMapIterator$.MODULE$:Lscala/collection/concurrent/TrieMapIterator$;
      28: invokevirtual #1262               // Method scala/collection/concurrent/TrieMapIterator$.$lessinit$greater$default$3:()Z
      31: invokespecial #1265               // Method scala/collection/concurrent/TrieMapIterator."<init>":(ILscala/collection/concurrent/TrieMap;Z)V
      34: areturn

  private int cachedSize();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1089               // Method RDCSS_READ_ROOT$default$1:()Z
       5: invokevirtual #1026               // Method RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #1269               // Method scala/collection/concurrent/INode.cachedSize:(Lscala/collection/concurrent/TrieMap;)I
      14: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #1247               // Method nonReadOnly:()Z
       4: ifeq          19
       7: aload_0
       8: invokevirtual #1249               // Method readOnlySnapshot:()Lscala/collection/Map;
      11: invokeinterface #1271,  1         // InterfaceMethod scala/collection/Map.size:()I
      16: goto          23
      19: aload_0
      20: invokespecial #1273               // Method cachedSize:()I
      23: ireturn

  public java.lang.String stringPrefix();
    Code:
       0: ldc_w         #1276               // String TrieMap
       3: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1279               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1282               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #1285               // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1288               // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #1291               // Method repr:()Ljava/lang/Object;
       4: checkcast     #1293               // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1296               // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #1299               // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1302               // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1305               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1307               // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1309               // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1312               // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1314               // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1316               // Method mapValues:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1318               // Method filterKeys:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #1320               // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #1322               // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #1324               // Method keySet:()Lscala/collection/Set;
       4: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1327               // Method $minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1330               // Method $minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public java.lang.Object result();
    Code:
       0: aload_0
       1: invokevirtual #1332               // Method result:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #1334               // Method clone:()Lscala/collection/mutable/Map;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1336               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1336               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1336               // Method $minus:(Ljava/lang/Object;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1342               // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1345               // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1351               // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1351               // Method $plus:(Lscala/Tuple2;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1355               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1355               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;
       6: areturn

  public scala.collection.generic.Shrinkable $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1359               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/concurrent/TrieMap;
       5: areturn

  public scala.collection.mutable.MapLike $minus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1359               // Method $minus$eq:(Ljava/lang/Object;)Lscala/collection/concurrent/TrieMap;
       5: areturn

  public scala.collection.generic.Growable $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #945                // class scala/Tuple2
       5: invokevirtual #1363               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/concurrent/TrieMap;
       8: areturn

  public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #945                // class scala/Tuple2
       5: invokevirtual #1363               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/concurrent/TrieMap;
       8: areturn

  public scala.collection.mutable.MapLike $plus$eq(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1363               // Method $plus$eq:(Lscala/Tuple2;)Lscala/collection/concurrent/TrieMap;
       5: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #1367               // Method empty:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.mutable.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #1367               // Method empty:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #1370               // Method par:()Lscala/collection/parallel/mutable/ParTrieMap;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1373               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1373               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.mutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1373               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1373               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.mutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1373               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #1373               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  public scala.collection.mutable.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #1373               // Method seq:()Lscala/collection/concurrent/TrieMap;
       4: areturn

  private scala.collection.concurrent.TrieMap(java.lang.Object, java.util.concurrent.atomic.AtomicReferenceFieldUpdater<scala.collection.concurrent.TrieMap<K, V>, java.lang.Object>, scala.util.hashing.Hashing<K>, scala.math.Equiv<K>);
    Code:
       0: aload_0
       1: invokespecial #1376               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1380               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
       8: aload_0
       9: invokestatic  #1385               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      12: aload_0
      13: invokestatic  #1387               // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      16: aload_0
      17: invokestatic  #1390               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      20: aload_0
      21: invokestatic  #1395               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      24: aload_0
      25: invokestatic  #1400               // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      28: aload_0
      29: invokestatic  #1405               // Method scala/collection/mutable/Traversable$class.$init$:(Lscala/collection/mutable/Traversable;)V
      32: aload_0
      33: invokestatic  #1410               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      36: aload_0
      37: invokestatic  #1413               // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      40: aload_0
      41: invokestatic  #1418               // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      44: aload_0
      45: invokestatic  #1421               // Method scala/collection/mutable/Iterable$class.$init$:(Lscala/collection/mutable/Iterable;)V
      48: aload_0
      49: invokestatic  #1424               // Method scala/collection/GenMapLike$class.$init$:(Lscala/collection/GenMapLike;)V
      52: aload_0
      53: invokestatic  #1426               // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      56: aload_0
      57: invokestatic  #1429               // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      60: aload_0
      61: invokestatic  #1434               // Method scala/collection/generic/Subtractable$class.$init$:(Lscala/collection/generic/Subtractable;)V
      64: aload_0
      65: invokestatic  #1437               // Method scala/collection/MapLike$class.$init$:(Lscala/collection/MapLike;)V
      68: aload_0
      69: invokestatic  #1442               // Method scala/collection/Map$class.$init$:(Lscala/collection/Map;)V
      72: aload_0
      73: invokestatic  #1445               // Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
      76: aload_0
      77: invokestatic  #1448               // Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
      80: aload_0
      81: invokestatic  #1451               // Method scala/collection/generic/Shrinkable$class.$init$:(Lscala/collection/generic/Shrinkable;)V
      84: aload_0
      85: invokestatic  #1456               // Method scala/collection/mutable/Cloneable$class.$init$:(Lscala/collection/mutable/Cloneable;)V
      88: aload_0
      89: invokestatic  #1459               // Method scala/collection/mutable/MapLike$class.$init$:(Lscala/collection/mutable/MapLike;)V
      92: aload_0
      93: invokestatic  #1462               // Method scala/collection/mutable/Map$class.$init$:(Lscala/collection/mutable/Map;)V
      96: aload_0
      97: invokestatic  #1465               // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
     100: aload_0
     101: aload_3
     102: instanceof    #1467               // class scala/util/hashing/Hashing$Default
     105: ifeq          118
     108: new           #1469               // class scala/collection/concurrent/TrieMap$MangledHashing
     111: dup
     112: invokespecial #1470               // Method scala/collection/concurrent/TrieMap$MangledHashing."<init>":()V
     115: goto          119
     118: aload_3
     119: putfield      #905                // Field hashingobj:Lscala/util/hashing/Hashing;
     122: aload_0
     123: aload         4
     125: putfield      #911                // Field equalityobj:Lscala/math/Equiv;
     128: aload_0
     129: aload_2
     130: putfield      #915                // Field rootupdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     133: aload_0
     134: aload_1
     135: putfield      #925                // Field root:Ljava/lang/Object;
     138: return

  public scala.collection.concurrent.TrieMap(scala.util.hashing.Hashing<K>, scala.math.Equiv<K>);
    Code:
       0: aload_0
       1: getstatic     #976                // Field scala/collection/concurrent/INode$.MODULE$:Lscala/collection/concurrent/INode$;
       4: invokevirtual #980                // Method scala/collection/concurrent/INode$.newRootNode:()Lscala/collection/concurrent/INode;
       7: ldc           #2                  // class scala/collection/concurrent/TrieMap
       9: ldc           #5                  // class java/lang/Object
      11: ldc_w         #983                // String root
      14: invokestatic  #989                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      17: aload_1
      18: aload_2
      19: invokespecial #1167               // Method "<init>":(Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Lscala/util/hashing/Hashing;Lscala/math/Equiv;)V
      22: return

  public scala.collection.concurrent.TrieMap();
    Code:
       0: aload_0
       1: getstatic     #1479               // Field scala/util/hashing/Hashing$.MODULE$:Lscala/util/hashing/Hashing$;
       4: invokevirtual #1482               // Method scala/util/hashing/Hashing$.default:()Lscala/util/hashing/Hashing$Default;
       7: getstatic     #1487               // Field scala/package$.MODULE$:Lscala/package$;
      10: invokevirtual #1491               // Method scala/package$.Equiv:()Lscala/math/Equiv$;
      13: invokevirtual #1496               // Method scala/math/Equiv$.universal:()Lscala/math/Equiv;
      16: invokespecial #1498               // Method "<init>":(Lscala/util/hashing/Hashing;Lscala/math/Equiv;)V
      19: return
}
