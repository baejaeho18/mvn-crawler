Compiled from "TrieMap.scala"
public class scala.collection.concurrent.TrieMapIterator<K, V> implements scala.collection.Iterator<scala.Tuple2<K, V>> {
  private int level;

  private scala.collection.concurrent.TrieMap<K, V> ct;

  private final scala.collection.concurrent.BasicNode[][] stack;

  private final int[] stackpos;

  private int depth;

  private scala.collection.Iterator<scala.Tuple2<K, V>> subiter;

  private scala.collection.concurrent.KVNode<K, V> current;

  public static <K, V> boolean $lessinit$greater$default$3();
    Code:
       0: getstatic     #19                 // Field scala/collection/concurrent/TrieMapIterator$.MODULE$:Lscala/collection/concurrent/TrieMapIterator$;
       3: invokevirtual #21                 // Method scala/collection/concurrent/TrieMapIterator$.$lessinit$greater$default$3:()Z
       6: ireturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> seq();
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #50                 // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #61                 // Method scala/collection/Iterator$class.take:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #65                 // Method scala/collection/Iterator$class.drop:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #70                 // Method scala/collection/Iterator$class.slice:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/Iterator$class.map:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method scala/collection/Iterator$class.$plus$plus:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<scala.Tuple2<K, V>, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #89                 // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> filter(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<scala.Tuple2<K, V>, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> withFilter(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> filterNot(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #124                // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> takeWhile(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #127                // Method scala/collection/Iterator$class.takeWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scala.Tuple2<K, V>>, scala.collection.Iterator<scala.Tuple2<K, V>>> partition(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #132                // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scala.Tuple2<K, V>>, scala.collection.Iterator<scala.Tuple2<K, V>>> span(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // Method scala/collection/Iterator$class.span:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> dropWhile(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #138                // Method scala/collection/Iterator$class.dropWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<scala.Tuple2<K, V>, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #147                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<scala.Tuple2<K, V>, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #152                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #157                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #164                // Method scala/collection/Iterator$class.foreach:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // Method scala/collection/Iterator$class.forall:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // Method scala/collection/Iterator$class.exists:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<scala.Tuple2<K, V>> find(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #182                // Method scala/collection/Iterator$class.find:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // Method scala/collection/Iterator$class.indexWhere:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // Method scala/collection/Iterator$class.indexOf:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public scala.collection.BufferedIterator<scala.Tuple2<K, V>> buffered();
    Code:
       0: aload_0
       1: invokestatic  #197                // Method scala/collection/Iterator$class.buffered:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<K, V>>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #202                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<K, V>>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #208                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #214                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<scala.Tuple2<K, V>>, scala.collection.Iterator<scala.Tuple2<K, V>>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #219                // Method scala/collection/Iterator$class.duplicate:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #224                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #231                // Method scala/collection/Iterator$class.copyToArray:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #237                // Method scala/collection/Iterator$class.sameElements:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<scala.Tuple2<K, V>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #242                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<K, V>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #245                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<scala.Tuple2<K, V>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #250                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #255                // Method scala/collection/Iterator$class.toString:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #258                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<scala.Tuple2<K, V>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #265                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #268                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #272                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #281                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #286                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #289                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #292                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #295                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #300                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #303                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, scala.Tuple2<K, V>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #308                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<scala.Tuple2<K, V>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #311                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #317                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #320                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, scala.Tuple2<K, V>, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #325                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #332                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #337                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #342                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #347                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #352                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #355                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #360                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #366                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #370                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<K, V>> toList();
    Code:
       0: aload_0
       1: invokestatic  #380                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<scala.Tuple2<K, V>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #385                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<scala.Tuple2<K, V>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #390                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<K, V>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #395                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #400                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #405                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<K, V>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #410                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scala.Tuple2<K, V>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #415                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<scala.Tuple2<K, V>, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #422                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #429                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #436                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #439                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #444                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #450                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public int level();
    Code:
       0: aload_0
       1: getfield      #456                // Field level:I
       4: ireturn

  public void level_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #456                // Field level:I
       5: return

  private scala.collection.concurrent.TrieMap<K, V> ct();
    Code:
       0: aload_0
       1: getfield      #462                // Field ct:Lscala/collection/concurrent/TrieMap;
       4: areturn

  private void ct_$eq(scala.collection.concurrent.TrieMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #462                // Field ct:Lscala/collection/concurrent/TrieMap;
       5: return

  private scala.collection.concurrent.BasicNode[][] stack();
    Code:
       0: aload_0
       1: getfield      #467                // Field stack:[[Lscala/collection/concurrent/BasicNode;
       4: areturn

  private int[] stackpos();
    Code:
       0: aload_0
       1: getfield      #470                // Field stackpos:[I
       4: areturn

  private int depth();
    Code:
       0: aload_0
       1: getfield      #472                // Field depth:I
       4: ireturn

  private void depth_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #472                // Field depth:I
       5: return

  private scala.collection.Iterator<scala.Tuple2<K, V>> subiter();
    Code:
       0: aload_0
       1: getfield      #475                // Field subiter:Lscala/collection/Iterator;
       4: areturn

  private void subiter_$eq(scala.collection.Iterator<scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #475                // Field subiter:Lscala/collection/Iterator;
       5: return

  private scala.collection.concurrent.KVNode<K, V> current();
    Code:
       0: aload_0
       1: getfield      #480                // Field current:Lscala/collection/concurrent/KVNode;
       4: areturn

  private void current_$eq(scala.collection.concurrent.KVNode<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #480                // Field current:Lscala/collection/concurrent/KVNode;
       5: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokespecial #485                // Method current:()Lscala/collection/concurrent/KVNode;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public scala.Tuple2<K, V> next();
    Code:
       0: aload_0
       1: invokevirtual #490                // Method hasNext:()Z
       4: ifeq          52
       7: aload_0
       8: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
      11: ifnull        34
      14: aload_0
      15: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
      18: invokeinterface #493,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #495                // class scala/Tuple2
      26: astore_1
      27: aload_0
      28: invokespecial #499                // Method checkSubiter:()V
      31: goto          48
      34: aload_0
      35: invokespecial #485                // Method current:()Lscala/collection/concurrent/KVNode;
      38: invokeinterface #504,  1          // InterfaceMethod scala/collection/concurrent/KVNode.kvPair:()Lscala/Tuple2;
      43: astore_1
      44: aload_0
      45: invokevirtual #507                // Method advance:()V
      48: aload_1
      49: goto          66
      52: getstatic     #512                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
      55: invokevirtual #515                // Method scala/collection/Iterator$.empty:()Lscala/collection/Iterator;
      58: invokeinterface #493,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #495                // class scala/Tuple2
      66: areturn

  private void readin(scala.collection.concurrent.INode<K, V>);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #521                // Method ct:()Lscala/collection/concurrent/TrieMap;
       5: invokevirtual #527                // Method scala/collection/concurrent/INode.gcasRead:(Lscala/collection/concurrent/TrieMap;)Lscala/collection/concurrent/MainNode;
       8: astore        5
      10: aload         5
      12: instanceof    #529                // class scala/collection/concurrent/CNode
      15: ifeq          68
      18: aload         5
      20: checkcast     #529                // class scala/collection/concurrent/CNode
      23: astore_2
      24: aload_0
      25: aload_0
      26: invokespecial #531                // Method depth:()I
      29: iconst_1
      30: iadd
      31: invokespecial #533                // Method depth_$eq:(I)V
      34: aload_0
      35: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
      38: aload_0
      39: invokespecial #531                // Method depth:()I
      42: aload_2
      43: invokevirtual #539                // Method scala/collection/concurrent/CNode.array:()[Lscala/collection/concurrent/BasicNode;
      46: aastore
      47: aload_0
      48: invokespecial #541                // Method stackpos:()[I
      51: aload_0
      52: invokespecial #531                // Method depth:()I
      55: iconst_m1
      56: iastore
      57: aload_0
      58: invokevirtual #507                // Method advance:()V
      61: getstatic     #547                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      64: pop
      65: goto          146
      68: aload         5
      70: instanceof    #549                // class scala/collection/concurrent/TNode
      73: ifeq          94
      76: aload         5
      78: checkcast     #549                // class scala/collection/concurrent/TNode
      81: astore_3
      82: aload_0
      83: aload_3
      84: invokespecial #551                // Method current_$eq:(Lscala/collection/concurrent/KVNode;)V
      87: getstatic     #547                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      90: pop
      91: goto          146
      94: aload         5
      96: instanceof    #553                // class scala/collection/concurrent/LNode
      99: ifeq          132
     102: aload         5
     104: checkcast     #553                // class scala/collection/concurrent/LNode
     107: astore        4
     109: aload_0
     110: aload         4
     112: invokevirtual #557                // Method scala/collection/concurrent/LNode.listmap:()Lscala/collection/immutable/ListMap;
     115: invokevirtual #562                // Method scala/collection/immutable/ListMap.iterator:()Lscala/collection/Iterator;
     118: invokespecial #564                // Method subiter_$eq:(Lscala/collection/Iterator;)V
     121: aload_0
     122: invokespecial #499                // Method checkSubiter:()V
     125: getstatic     #547                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     128: pop
     129: goto          146
     132: aload         5
     134: ifnonnull     147
     137: aload_0
     138: aconst_null
     139: invokespecial #551                // Method current_$eq:(Lscala/collection/concurrent/KVNode;)V
     142: getstatic     #547                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     145: pop
     146: return
     147: new           #566                // class scala/MatchError
     150: dup
     151: aload         5
     153: invokespecial #569                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     156: athrow

  private void checkSubiter();
    Code:
       0: aload_0
       1: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
       4: invokeinterface #574,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       9: ifne          21
      12: aload_0
      13: aconst_null
      14: invokespecial #564                // Method subiter_$eq:(Lscala/collection/Iterator;)V
      17: aload_0
      18: invokevirtual #507                // Method advance:()V
      21: return

  private void initialize();
    Code:
       0: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokespecial #521                // Method ct:()Lscala/collection/concurrent/TrieMap;
       7: invokevirtual #585                // Method scala/collection/concurrent/TrieMap.isReadOnly:()Z
      10: invokevirtual #589                // Method scala/Predef$.assert:(Z)V
      13: aload_0
      14: invokespecial #521                // Method ct:()Lscala/collection/concurrent/TrieMap;
      17: astore_2
      18: aload_2
      19: invokevirtual #592                // Method scala/collection/concurrent/TrieMap.RDCSS_READ_ROOT$default$1:()Z
      22: istore_3
      23: aload_2
      24: iload_3
      25: invokevirtual #596                // Method scala/collection/concurrent/TrieMap.RDCSS_READ_ROOT:(Z)Lscala/collection/concurrent/INode;
      28: astore_1
      29: aload_0
      30: aload_1
      31: invokespecial #598                // Method readin:(Lscala/collection/concurrent/INode;)V
      34: return

  public void advance();
    Code:
       0: aload_0
       1: invokespecial #531                // Method depth:()I
       4: iconst_0
       5: if_icmplt     136
       8: aload_0
       9: invokespecial #541                // Method stackpos:()[I
      12: aload_0
      13: invokespecial #531                // Method depth:()I
      16: iaload
      17: iconst_1
      18: iadd
      19: istore_1
      20: iload_1
      21: aload_0
      22: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
      25: aload_0
      26: invokespecial #531                // Method depth:()I
      29: aaload
      30: arraylength
      31: if_icmpge     119
      34: aload_0
      35: invokespecial #541                // Method stackpos:()[I
      38: aload_0
      39: invokespecial #531                // Method depth:()I
      42: iload_1
      43: iastore
      44: aload_0
      45: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
      48: aload_0
      49: invokespecial #531                // Method depth:()I
      52: aaload
      53: iload_1
      54: aaload
      55: astore        4
      57: aload         4
      59: instanceof    #603                // class scala/collection/concurrent/SNode
      62: ifeq          83
      65: aload         4
      67: checkcast     #603                // class scala/collection/concurrent/SNode
      70: astore_2
      71: aload_0
      72: aload_2
      73: invokespecial #551                // Method current_$eq:(Lscala/collection/concurrent/KVNode;)V
      76: getstatic     #547                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      79: pop
      80: goto          141
      83: aload         4
      85: instanceof    #523                // class scala/collection/concurrent/INode
      88: ifeq          109
      91: aload         4
      93: checkcast     #523                // class scala/collection/concurrent/INode
      96: astore_3
      97: aload_0
      98: aload_3
      99: invokespecial #598                // Method readin:(Lscala/collection/concurrent/INode;)V
     102: getstatic     #547                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     105: pop
     106: goto          141
     109: new           #566                // class scala/MatchError
     112: dup
     113: aload         4
     115: invokespecial #569                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     118: athrow
     119: aload_0
     120: aload_0
     121: invokespecial #531                // Method depth:()I
     124: iconst_1
     125: isub
     126: invokespecial #533                // Method depth_$eq:(I)V
     129: aload_0
     130: invokevirtual #507                // Method advance:()V
     133: goto          141
     136: aload_0
     137: aconst_null
     138: invokespecial #551                // Method current_$eq:(Lscala/collection/concurrent/KVNode;)V
     141: return

  public scala.collection.concurrent.TrieMapIterator<K, V> newIterator(int, scala.collection.concurrent.TrieMap<K, V>, boolean);
    Code:
       0: new           #2                  // class scala/collection/concurrent/TrieMapIterator
       3: dup
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokespecial #611                // Method "<init>":(ILscala/collection/concurrent/TrieMap;Z)V
      10: areturn

  public void dupTo(scala.collection.concurrent.TrieMapIterator<K, V>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #618                // Method level:()I
       5: invokevirtual #620                // Method level_$eq:(I)V
       8: aload_1
       9: aload_0
      10: invokespecial #521                // Method ct:()Lscala/collection/concurrent/TrieMap;
      13: invokespecial #622                // Method ct_$eq:(Lscala/collection/concurrent/TrieMap;)V
      16: aload_1
      17: aload_0
      18: invokespecial #531                // Method depth:()I
      21: invokespecial #533                // Method depth_$eq:(I)V
      24: aload_1
      25: aload_0
      26: invokespecial #485                // Method current:()Lscala/collection/concurrent/KVNode;
      29: invokespecial #551                // Method current_$eq:(Lscala/collection/concurrent/KVNode;)V
      32: getstatic     #627                // Field scala/Array$.MODULE$:Lscala/Array$;
      35: aload_0
      36: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
      39: iconst_0
      40: aload_1
      41: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
      44: iconst_0
      45: bipush        7
      47: invokevirtual #631                // Method scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: getstatic     #627                // Field scala/Array$.MODULE$:Lscala/Array$;
      53: aload_0
      54: invokespecial #541                // Method stackpos:()[I
      57: iconst_0
      58: aload_1
      59: invokespecial #541                // Method stackpos:()[I
      62: iconst_0
      63: bipush        7
      65: invokevirtual #631                // Method scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: aload_0
      69: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
      72: ifnonnull     83
      75: aload_1
      76: aconst_null
      77: invokespecial #564                // Method subiter_$eq:(Lscala/collection/Iterator;)V
      80: goto          109
      83: aload_0
      84: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
      87: invokeinterface #633,  1          // InterfaceMethod scala/collection/Iterator.toList:()Lscala/collection/immutable/List;
      92: astore_2
      93: aload_0
      94: aload_2
      95: invokevirtual #636                // Method scala/collection/immutable/List.iterator:()Lscala/collection/Iterator;
      98: invokespecial #564                // Method subiter_$eq:(Lscala/collection/Iterator;)V
     101: aload_1
     102: aload_2
     103: invokevirtual #636                // Method scala/collection/immutable/List.iterator:()Lscala/collection/Iterator;
     106: invokespecial #564                // Method subiter_$eq:(Lscala/collection/Iterator;)V
     109: return

  public scala.collection.Seq<scala.collection.Iterator<scala.Tuple2<K, V>>> subdivide();
    Code:
       0: aload_0
       1: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
       4: ifnull        93
       7: aload_0
       8: aload_0
       9: invokevirtual #618                // Method level:()I
      12: iconst_1
      13: iadd
      14: aload_0
      15: invokespecial #521                // Method ct:()Lscala/collection/concurrent/TrieMap;
      18: iconst_0
      19: invokevirtual #642                // Method newIterator:(ILscala/collection/concurrent/TrieMap;Z)Lscala/collection/concurrent/TrieMapIterator;
      22: astore_1
      23: aload_1
      24: iconst_m1
      25: invokespecial #533                // Method depth_$eq:(I)V
      28: aload_1
      29: aload_0
      30: invokespecial #487                // Method subiter:()Lscala/collection/Iterator;
      33: invokespecial #564                // Method subiter_$eq:(Lscala/collection/Iterator;)V
      36: aload_1
      37: aconst_null
      38: invokespecial #551                // Method current_$eq:(Lscala/collection/concurrent/KVNode;)V
      41: aload_0
      42: aconst_null
      43: invokespecial #564                // Method subiter_$eq:(Lscala/collection/Iterator;)V
      46: aload_0
      47: invokevirtual #507                // Method advance:()V
      50: aload_0
      51: aload_0
      52: invokevirtual #618                // Method level:()I
      55: iconst_1
      56: iadd
      57: invokevirtual #620                // Method level_$eq:(I)V
      60: getstatic     #647                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      63: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      66: iconst_2
      67: anewarray     #2                  // class scala/collection/concurrent/TrieMapIterator
      70: dup
      71: iconst_0
      72: aload_1
      73: aastore
      74: dup
      75: iconst_1
      76: aload_0
      77: aastore
      78: checkcast     #649                // class "[Ljava/lang/Object;"
      81: invokevirtual #653                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      84: invokevirtual #657                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      87: checkcast     #659                // class scala/collection/Seq
      90: goto          425
      93: aload_0
      94: invokespecial #531                // Method depth:()I
      97: iconst_m1
      98: if_icmpne     140
     101: aload_0
     102: aload_0
     103: invokevirtual #618                // Method level:()I
     106: iconst_1
     107: iadd
     108: invokevirtual #620                // Method level_$eq:(I)V
     111: getstatic     #647                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     114: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     117: iconst_1
     118: anewarray     #2                  // class scala/collection/concurrent/TrieMapIterator
     121: dup
     122: iconst_0
     123: aload_0
     124: aastore
     125: checkcast     #649                // class "[Ljava/lang/Object;"
     128: invokevirtual #653                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     131: invokevirtual #657                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
     134: checkcast     #659                // class scala/collection/Seq
     137: goto          425
     140: iconst_0
     141: istore        8
     143: iload         8
     145: aload_0
     146: invokespecial #531                // Method depth:()I
     149: if_icmpgt     389
     152: aload_0
     153: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
     156: iload         8
     158: aaload
     159: arraylength
     160: iconst_1
     161: isub
     162: aload_0
     163: invokespecial #541                // Method stackpos:()[I
     166: iload         8
     168: iaload
     169: isub
     170: istore_2
     171: iload_2
     172: iconst_0
     173: if_icmple     380
     176: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     179: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     182: aload_0
     183: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
     186: iload         8
     188: aaload
     189: checkcast     #649                // class "[Ljava/lang/Object;"
     192: invokevirtual #663                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     195: aload_0
     196: invokespecial #541                // Method stackpos:()[I
     199: iload         8
     201: iaload
     202: iconst_1
     203: iadd
     204: invokeinterface #668,  2          // InterfaceMethod scala/collection/mutable/ArrayOps.drop:(I)Ljava/lang/Object;
     209: checkcast     #649                // class "[Ljava/lang/Object;"
     212: invokevirtual #663                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     215: iload_2
     216: iconst_2
     217: idiv
     218: invokeinterface #672,  2          // InterfaceMethod scala/collection/mutable/ArrayOps.splitAt:(I)Lscala/Tuple2;
     223: astore        7
     225: aload         7
     227: ifnull        370
     230: new           #495                // class scala/Tuple2
     233: dup
     234: aload         7
     236: invokevirtual #675                // Method scala/Tuple2._1:()Ljava/lang/Object;
     239: aload         7
     241: invokevirtual #678                // Method scala/Tuple2._2:()Ljava/lang/Object;
     244: invokespecial #681                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     247: astore_3
     248: aload_3
     249: invokevirtual #675                // Method scala/Tuple2._1:()Ljava/lang/Object;
     252: checkcast     #683                // class "[Lscala/collection/concurrent/BasicNode;"
     255: astore        4
     257: aload_3
     258: invokevirtual #678                // Method scala/Tuple2._2:()Ljava/lang/Object;
     261: checkcast     #683                // class "[Lscala/collection/concurrent/BasicNode;"
     264: astore        5
     266: aload_0
     267: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
     270: iload         8
     272: aload         4
     274: aastore
     275: aload_0
     276: invokespecial #541                // Method stackpos:()[I
     279: iload         8
     281: iconst_m1
     282: iastore
     283: aload_0
     284: aload_0
     285: invokevirtual #618                // Method level:()I
     288: iconst_1
     289: iadd
     290: aload_0
     291: invokespecial #521                // Method ct:()Lscala/collection/concurrent/TrieMap;
     294: iconst_0
     295: invokevirtual #642                // Method newIterator:(ILscala/collection/concurrent/TrieMap;Z)Lscala/collection/concurrent/TrieMapIterator;
     298: astore        6
     300: aload         6
     302: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
     305: iconst_0
     306: aload         5
     308: aastore
     309: aload         6
     311: invokespecial #541                // Method stackpos:()[I
     314: iconst_0
     315: iconst_m1
     316: iastore
     317: aload         6
     319: iconst_0
     320: invokespecial #533                // Method depth_$eq:(I)V
     323: aload         6
     325: invokevirtual #507                // Method advance:()V
     328: aload_0
     329: aload_0
     330: invokevirtual #618                // Method level:()I
     333: iconst_1
     334: iadd
     335: invokevirtual #620                // Method level_$eq:(I)V
     338: getstatic     #647                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     341: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     344: iconst_2
     345: anewarray     #2                  // class scala/collection/concurrent/TrieMapIterator
     348: dup
     349: iconst_0
     350: aload_0
     351: aastore
     352: dup
     353: iconst_1
     354: aload         6
     356: aastore
     357: checkcast     #649                // class "[Ljava/lang/Object;"
     360: invokevirtual #653                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     363: invokevirtual #657                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
     366: checkcast     #659                // class scala/collection/Seq
     369: areturn
     370: new           #566                // class scala/MatchError
     373: dup
     374: aload         7
     376: invokespecial #569                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     379: athrow
     380: iload         8
     382: iconst_1
     383: iadd
     384: istore        8
     386: goto          143
     389: aload_0
     390: aload_0
     391: invokevirtual #618                // Method level:()I
     394: iconst_1
     395: iadd
     396: invokevirtual #620                // Method level_$eq:(I)V
     399: getstatic     #647                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     402: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     405: iconst_1
     406: anewarray     #2                  // class scala/collection/concurrent/TrieMapIterator
     409: dup
     410: iconst_0
     411: aload_0
     412: aastore
     413: checkcast     #649                // class "[Ljava/lang/Object;"
     416: invokevirtual #653                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     419: invokevirtual #657                // Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
     422: checkcast     #659                // class scala/collection/Seq
     425: areturn

  public void printDebug();
    Code:
       0: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: ldc_w         #690                // String ctrie iterator
       6: invokevirtual #693                // Method scala/Predef$.println:(Ljava/lang/Object;)V
       9: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: aload_0
      16: invokespecial #541                // Method stackpos:()[I
      19: invokevirtual #697                // Method scala/Predef$.intArrayOps:([I)Lscala/collection/mutable/ArrayOps;
      22: ldc_w         #699                // String ,
      25: invokeinterface #701,  2          // InterfaceMethod scala/collection/mutable/ArrayOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
      30: invokevirtual #693                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      33: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      36: new           #703                // class scala/collection/mutable/StringBuilder
      39: dup
      40: invokespecial #705                // Method scala/collection/mutable/StringBuilder."<init>":()V
      43: ldc_w         #707                // String depth:
      46: invokevirtual #711                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      49: aload_0
      50: invokespecial #531                // Method depth:()I
      53: invokestatic  #717                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: invokevirtual #711                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      59: invokevirtual #719                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      62: invokevirtual #693                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      65: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      68: new           #703                // class scala/collection/mutable/StringBuilder
      71: dup
      72: invokespecial #705                // Method scala/collection/mutable/StringBuilder."<init>":()V
      75: ldc_w         #721                // String curr.:
      78: invokevirtual #711                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      81: aload_0
      82: invokespecial #485                // Method current:()Lscala/collection/concurrent/KVNode;
      85: invokevirtual #711                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      88: invokevirtual #719                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      91: invokevirtual #693                // Method scala/Predef$.println:(Ljava/lang/Object;)V
      94: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      97: getstatic     #580                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     100: aload_0
     101: invokespecial #535                // Method stack:()[[Lscala/collection/concurrent/BasicNode;
     104: checkcast     #649                // class "[Ljava/lang/Object;"
     107: invokevirtual #663                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     110: ldc_w         #723                // String \n
     113: invokeinterface #701,  2          // InterfaceMethod scala/collection/mutable/ArrayOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
     118: invokevirtual #693                // Method scala/Predef$.println:(Ljava/lang/Object;)V
     121: return

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #726                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #729                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #732                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #735                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #738                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #741                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #743                // Method next:()Lscala/Tuple2;
       4: areturn

  public scala.collection.concurrent.TrieMapIterator(int, scala.collection.concurrent.TrieMap<K, V>, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #456                // Field level:I
       5: aload_0
       6: aload_2
       7: putfield      #462                // Field ct:Lscala/collection/concurrent/TrieMap;
      10: aload_0
      11: invokespecial #744                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #748                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      18: aload_0
      19: invokestatic  #750                // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      22: aload_0
      23: bipush        7
      25: anewarray     #683                // class "[Lscala/collection/concurrent/BasicNode;"
      28: putfield      #467                // Field stack:[[Lscala/collection/concurrent/BasicNode;
      31: aload_0
      32: bipush        7
      34: newarray       int
      36: putfield      #470                // Field stackpos:[I
      39: aload_0
      40: iconst_m1
      41: putfield      #472                // Field depth:I
      44: aload_0
      45: aconst_null
      46: putfield      #475                // Field subiter:Lscala/collection/Iterator;
      49: aload_0
      50: aconst_null
      51: putfield      #480                // Field current:Lscala/collection/concurrent/KVNode;
      54: iload_3
      55: ifeq          62
      58: aload_0
      59: invokespecial #752                // Method initialize:()V
      62: return
}
