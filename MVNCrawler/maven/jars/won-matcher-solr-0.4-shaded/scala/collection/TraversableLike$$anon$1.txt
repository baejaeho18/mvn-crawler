Compiled from "TraversableLike.scala"
public final class scala.collection.TraversableLike$$anon$1 implements scala.collection.TraversableView<A, Repr> {
  private Repr underlying;

  private final scala.collection.TraversableLike $outer;

  private volatile boolean bitmap$0;

  private java.lang.Object underlying$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #24                 // Field bitmap$0:Z
       8: ifne          29
      11: aload_0
      12: aload_0
      13: getfield      #26                 // Field $outer:Lscala/collection/TraversableLike;
      16: invokeinterface #29,  1           // InterfaceMethod scala/collection/TraversableLike.repr:()Ljava/lang/Object;
      21: putfield      #31                 // Field underlying:Ljava/lang/Object;
      24: aload_0
      25: iconst_1
      26: putfield      #24                 // Field bitmap$0:Z
      29: getstatic     #37                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      32: pop
      33: aload_0
      34: monitorexit
      35: aload_0
      36: getfield      #31                 // Field underlying:Ljava/lang/Object;
      39: areturn
      40: aload_1
      41: monitorexit
      42: athrow
    Exception table:
       from    to  target type
           4    35    40   any

  public scala.collection.TraversableView scala$collection$TraversableViewLike$$super$tail();
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method scala/collection/TraversableLike$class.tail:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: checkcast     #7                  // class scala/collection/TraversableView
       7: areturn

  public java.lang.String viewIdentifier();
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method scala/collection/TraversableViewLike$class.viewIdentifier:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String viewIdString();
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method scala/collection/TraversableViewLike$class.viewIdString:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String viewToString();
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method scala/collection/TraversableViewLike$class.viewToString:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method scala/collection/TraversableViewLike$class.stringPrefix:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.Builder<A, scala.collection.TraversableView<A, Repr>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method scala/collection/TraversableViewLike$class.newBuilder:(Lscala/collection/TraversableViewLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B, That> That force(scala.collection.generic.CanBuildFrom<Repr, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method scala/collection/TraversableViewLike$class.force:(Lscala/collection/TraversableViewLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // Method scala/collection/TraversableViewLike$class.$plus$plus:(Lscala/collection/TraversableViewLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // Method scala/collection/TraversableViewLike$class.map:(Lscala/collection/TraversableViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That collect(scala.PartialFunction<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // Method scala/collection/TraversableViewLike$class.collect:(Lscala/collection/TraversableViewLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<A, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // Method scala/collection/TraversableViewLike$class.flatMap:(Lscala/collection/TraversableViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B> scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<B> flatten(scala.Function1<A, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method scala/collection/TraversableViewLike$class.flatten:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public <B> scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<B> newForced(scala.Function0<scala.collection.GenSeq<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method scala/collection/TraversableViewLike$class.newForced:(Lscala/collection/TraversableViewLike;Lscala/Function0;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public <B> scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<B> newAppended(scala.collection.GenTraversable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // Method scala/collection/TraversableViewLike$class.newAppended:(Lscala/collection/TraversableViewLike;Lscala/collection/GenTraversable;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public <B> scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<B> newMapped(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #122                // Method scala/collection/TraversableViewLike$class.newMapped:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public <B> scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<B> newFlatMapped(scala.Function1<A, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method scala/collection/TraversableViewLike$class.newFlatMapped:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A> newFiltered(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method scala/collection/TraversableViewLike$class.newFiltered:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A> newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // Method scala/collection/TraversableViewLike$class.newSliced:(Lscala/collection/TraversableViewLike;Lscala/collection/generic/SliceInterval;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A> newDroppedWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // Method scala/collection/TraversableViewLike$class.newDroppedWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A> newTakenWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // Method scala/collection/TraversableViewLike$class.newTakenWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A> newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #147                // Method scala/collection/TraversableViewLike$class.newTaken:(Lscala/collection/TraversableViewLike;I)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A> newDropped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #152                // Method scala/collection/TraversableViewLike$class.newDropped:(Lscala/collection/TraversableViewLike;I)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableView<A, Repr> filter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #157                // Method scala/collection/TraversableViewLike$class.filter:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView<A, Repr> withFilter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // Method scala/collection/TraversableViewLike$class.withFilter:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.Tuple2<scala.collection.TraversableView<A, Repr>, scala.collection.TraversableView<A, Repr>> partition(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // Method scala/collection/TraversableViewLike$class.partition:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.TraversableView<A, Repr> init();
    Code:
       0: aload_0
       1: invokestatic  #169                // Method scala/collection/TraversableViewLike$class.init:(Lscala/collection/TraversableViewLike;)Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.TraversableView<A, Repr> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #174                // Method scala/collection/TraversableViewLike$class.drop:(Lscala/collection/TraversableViewLike;I)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView<A, Repr> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #177                // Method scala/collection/TraversableViewLike$class.take:(Lscala/collection/TraversableViewLike;I)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView<A, Repr> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #182                // Method scala/collection/TraversableViewLike$class.slice:(Lscala/collection/TraversableViewLike;II)Lscala/collection/TraversableView;
       6: areturn

  public scala.collection.TraversableView<A, Repr> dropWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // Method scala/collection/TraversableViewLike$class.dropWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView<A, Repr> takeWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // Method scala/collection/TraversableViewLike$class.takeWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.Tuple2<scala.collection.TraversableView<A, Repr>, scala.collection.TraversableView<A, Repr>> span(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // Method scala/collection/TraversableViewLike$class.span:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.TraversableView<A, Repr>, scala.collection.TraversableView<A, Repr>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #198                // Method scala/collection/TraversableViewLike$class.splitAt:(Lscala/collection/TraversableViewLike;I)Lscala/Tuple2;
       5: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, A, B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #203                // Method scala/collection/TraversableViewLike$class.scanLeft:(Lscala/collection/TraversableViewLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<A, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #209                // Method scala/collection/TraversableViewLike$class.scanRight:(Lscala/collection/TraversableViewLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.TraversableView<A, Repr>> groupBy(scala.Function1<A, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // Method scala/collection/TraversableViewLike$class.groupBy:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <A1, A2> scala.Tuple2<scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A1>, scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A2>> unzip(scala.Function1<A, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // Method scala/collection/TraversableViewLike$class.unzip:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A1>, scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A2>, scala.collection.TraversableViewLike<A, Repr, scala.collection.TraversableView<A, Repr>>.Transformed<A3>> unzip3(scala.Function1<A, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #223                // Method scala/collection/TraversableViewLike$class.unzip3:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.TraversableView<A, Repr> filterNot(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #227                // Method scala/collection/TraversableViewLike$class.filterNot:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.Iterator<scala.collection.TraversableView<A, Repr>> inits();
    Code:
       0: aload_0
       1: invokestatic  #232                // Method scala/collection/TraversableViewLike$class.inits:(Lscala/collection/TraversableViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.TraversableView<A, Repr>> tails();
    Code:
       0: aload_0
       1: invokestatic  #235                // Method scala/collection/TraversableViewLike$class.tails:(Lscala/collection/TraversableViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.TraversableView<A, Repr> tail();
    Code:
       0: aload_0
       1: invokestatic  #237                // Method scala/collection/TraversableViewLike$class.tail:(Lscala/collection/TraversableViewLike;)Lscala/collection/TraversableView;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #240                // Method scala/collection/TraversableViewLike$class.toString:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.Seq<A> thisSeq();
    Code:
       0: aload_0
       1: invokestatic  #247                // Method scala/collection/ViewMkString$class.thisSeq:(Lscala/collection/ViewMkString;)Lscala/collection/Seq;
       4: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #251                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;)Ljava/lang/String;
       4: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #255                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #261                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #268                // Method scala/collection/ViewMkString$class.addString:(Lscala/collection/ViewMkString;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.Traversable> companion();
    Code:
       0: aload_0
       1: invokestatic  #277                // Method scala/collection/Traversable$class.companion:(Lscala/collection/Traversable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.Traversable<A> seq();
    Code:
       0: aload_0
       1: invokestatic  #282                // Method scala/collection/Traversable$class.seq:(Lscala/collection/Traversable;)Lscala/collection/Traversable;
       4: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.Traversable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #288                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #295                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #300                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public scala.collection.Traversable<A> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #304                // Method scala/collection/TraversableLike$class.thisCollection:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #309                // Method scala/collection/TraversableLike$class.toCollection:(Lscala/collection/TraversableLike;Ljava/lang/Object;)Lscala/collection/Traversable;
       5: areturn

  public scala.collection.parallel.Combiner<A, scala.collection.parallel.ParIterable<A>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #314                // Method scala/collection/TraversableLike$class.parCombiner:(Lscala/collection/TraversableLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #317                // Method scala/collection/TraversableLike$class.isEmpty:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #320                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #325                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #330                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #336                // Method scala/collection/TraversableLike$class.forall:(Lscala/collection/TraversableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // Method scala/collection/TraversableLike$class.exists:(Lscala/collection/TraversableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<A> find(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #344                // Method scala/collection/TraversableLike$class.find:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.TraversableView<A, Repr>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #348                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public A head();
    Code:
       0: aload_0
       1: invokestatic  #352                // Method scala/collection/TraversableLike$class.head:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<A> headOption();
    Code:
       0: aload_0
       1: invokestatic  #357                // Method scala/collection/TraversableLike$class.headOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public A last();
    Code:
       0: aload_0
       1: invokestatic  #360                // Method scala/collection/TraversableLike$class.last:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<A> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #363                // Method scala/collection/TraversableLike$class.lastOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #368                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #374                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #379                // Method scala/collection/TraversableLike$class.copyToArray:(Lscala/collection/TraversableLike;Ljava/lang/Object;II)V
       7: return

  public scala.collection.Traversable<A> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #383                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<A> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #387                // Method scala/collection/TraversableLike$class.toIterator:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokestatic  #392                // Method scala/collection/TraversableLike$class.toStream:(Lscala/collection/TraversableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, A, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #396                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #399                // Method scala/collection/TraversableLike$class.view:(Lscala/collection/TraversableLike;)Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.TraversableView<A, scala.collection.TraversableView<A, Repr>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #402                // Method scala/collection/TraversableLike$class.view:(Lscala/collection/TraversableLike;II)Lscala/collection/TraversableView;
       6: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #409                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<A> reversed();
    Code:
       0: aload_0
       1: invokestatic  #416                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #421                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #425                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #430                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #435                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #440                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #443                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #446                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #449                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #457                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #462                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #465                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #468                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #471                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #474                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, A, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #479                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #486                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #491                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> A min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #496                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #501                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A maxBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #506                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> A minBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #509                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #514                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #520                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #524                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #529                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<A> toList();
    Code:
       0: aload_0
       1: invokestatic  #534                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<A> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #539                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<A> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #543                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<A> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #548                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #553                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #558                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<A> toVector();
    Code:
       0: aload_0
       1: invokestatic  #563                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<A, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #568                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #574                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #578                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public Repr underlying();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #31                 // Field underlying:Ljava/lang/Object;
      11: goto          18
      14: aload_0
      15: invokespecial #580                // Method underlying$lzycompute:()Ljava/lang/Object;
      18: areturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: getfield      #26                 // Field $outer:Lscala/collection/TraversableLike;
       4: aload_1
       5: invokeinterface #584,  2          // InterfaceMethod scala/collection/TraversableLike.foreach:(Lscala/Function1;)V
      10: return

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #587                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #590                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #593                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #596                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #599                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #602                // Method seq:()Lscala/collection/Traversable;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #604                // Method tail:()Lscala/collection/TraversableView;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #607                // Method filterNot:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #610                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #612                // Method takeWhile:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #614                // Method dropWhile:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #616                // Method slice:(II)Lscala/collection/TraversableView;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #619                // Method take:(I)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #621                // Method drop:(I)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #623                // Method init:()Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.generic.FilterMonadic withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #626                // Method withFilter:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #628                // Method filter:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #630                // Method flatten:(Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableLike$$anon$1(scala.collection.TraversableLike<A, Repr>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #26                 // Field $outer:Lscala/collection/TraversableLike;
      11: aload_0
      12: invokespecial #635                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #639                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      19: aload_0
      20: invokestatic  #642                // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      23: aload_0
      24: invokestatic  #644                // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      27: aload_0
      28: invokestatic  #647                // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      31: aload_0
      32: invokestatic  #652                // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      35: aload_0
      36: invokestatic  #655                // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      39: aload_0
      40: invokestatic  #658                // Method scala/collection/ViewMkString$class.$init$:(Lscala/collection/ViewMkString;)V
      43: aload_0
      44: invokestatic  #661                // Method scala/collection/TraversableViewLike$class.$init$:(Lscala/collection/TraversableViewLike;)V
      47: return
}
