Compiled from "StringLike.scala"
public interface scala.collection.immutable.StringLike<Repr> extends scala.collection.IndexedSeqOptimized<java.lang.Object, Repr>, scala.math.Ordered<java.lang.String> {
  public abstract scala.collection.mutable.Builder<java.lang.Object, Repr> newBuilder();

  public abstract char apply(int);

  public abstract int length();

  public abstract java.lang.String mkString();

  public abstract Repr slice(int, int);

  public abstract java.lang.String $times(int);

  public abstract int compare(java.lang.String);

  public abstract java.lang.String stripLineEnd();

  public abstract scala.collection.Iterator<java.lang.String> linesWithSeparators();

  public abstract scala.collection.Iterator<java.lang.String> lines();

  public abstract scala.collection.Iterator<java.lang.String> linesIterator();

  public abstract java.lang.String capitalize();

  public abstract java.lang.String stripPrefix(java.lang.String);

  public abstract java.lang.String stripSuffix(java.lang.String);

  public abstract java.lang.String replaceAllLiterally(java.lang.String, java.lang.String);

  public abstract java.lang.String stripMargin(char);

  public abstract java.lang.String stripMargin();

  public abstract java.lang.String[] split(char);

  public abstract java.lang.String[] split(char[]) throws java.util.regex.PatternSyntaxException;

  public abstract scala.util.matching.Regex r();

  public abstract scala.util.matching.Regex r(scala.collection.Seq<java.lang.String>);

  public abstract boolean toBoolean();

  public abstract byte toByte();

  public abstract short toShort();

  public abstract int toInt();

  public abstract long toLong();

  public abstract float toFloat();

  public abstract double toDouble();

  public abstract <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);

  public abstract java.lang.String format(scala.collection.Seq<java.lang.Object>);

  public abstract java.lang.String formatLocal(java.util.Locale, scala.collection.Seq<java.lang.Object>);
}
