Compiled from "Stream.scala"
public final class scala.collection.immutable.Stream$ extends scala.collection.generic.SeqFactory<scala.collection.immutable.Stream> implements scala.Serializable {
  public static final scala.collection.immutable.Stream$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scala/collection/immutable/Stream$
       3: invokespecial #15                 // Method "<init>":()V
       6: return

  public <A> scala.collection.generic.CanBuildFrom<scala.collection.immutable.Stream<?>, A, scala.collection.immutable.Stream<A>> canBuildFrom();
    Code:
       0: new           #19                 // class scala/collection/immutable/Stream$StreamCanBuildFrom
       3: dup
       4: invokespecial #20                 // Method scala/collection/immutable/Stream$StreamCanBuildFrom."<init>":()V
       7: areturn

  public <A> scala.collection.mutable.Builder<A, scala.collection.immutable.Stream<A>> newBuilder();
    Code:
       0: new           #25                 // class scala/collection/immutable/Stream$StreamBuilder
       3: dup
       4: invokespecial #26                 // Method scala/collection/immutable/Stream$StreamBuilder."<init>":()V
       7: areturn

  public <A> scala.collection.immutable.Stream<A> empty();
    Code:
       0: getstatic     #33                 // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       3: areturn

  public <A> scala.collection.immutable.Stream<A> apply(scala.collection.Seq<A>);
    Code:
       0: aload_1
       1: invokeinterface #40,  1           // InterfaceMethod scala/collection/Seq.toStream:()Lscala/collection/immutable/Stream;
       6: areturn

  public <A> scala.collection.immutable.Stream$ConsWrapper<A> consWrapper(scala.Function0<scala.collection.immutable.Stream<A>>);
    Code:
       0: new           #46                 // class scala/collection/immutable/Stream$ConsWrapper
       3: dup
       4: aload_1
       5: invokespecial #49                 // Method scala/collection/immutable/Stream$ConsWrapper."<init>":(Lscala/Function0;)V
       8: areturn

  public <A> scala.collection.immutable.Stream<A> iterate(A, scala.Function1<A, A>);
    Code:
       0: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       3: new           #60                 // class scala/collection/immutable/Stream$$anonfun$iterate$1
       6: dup
       7: aload_1
       8: aload_2
       9: invokespecial #63                 // Method scala/collection/immutable/Stream$$anonfun$iterate$1."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      12: astore        4
      14: astore_3
      15: new           #65                 // class scala/collection/immutable/Stream$Cons
      18: dup
      19: aload_1
      20: aload         4
      22: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      25: areturn

  public <A> scala.collection.immutable.Stream<A> iterate(A, int, scala.Function1<A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #75                 // Method iterate:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: iload_2
       7: invokevirtual #81                 // Method scala/collection/immutable/Stream.take:(I)Lscala/collection/immutable/Stream;
      10: areturn

  public scala.collection.immutable.Stream<java.lang.Object> from(int, int);
    Code:
       0: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       3: iload_1
       4: invokestatic  #91                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: new           #93                 // class scala/collection/immutable/Stream$$anonfun$from$1
      10: dup
      11: iload_1
      12: iload_2
      13: invokespecial #96                 // Method scala/collection/immutable/Stream$$anonfun$from$1."<init>":(II)V
      16: astore        5
      18: astore        4
      20: astore_3
      21: new           #65                 // class scala/collection/immutable/Stream$Cons
      24: dup
      25: aload         4
      27: aload         5
      29: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      32: areturn

  public scala.collection.immutable.Stream<java.lang.Object> from(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokevirtual #99                 // Method from:(II)Lscala/collection/immutable/Stream;
       6: areturn

  public <A> scala.collection.immutable.Stream<A> continually(scala.Function0<A>);
    Code:
       0: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       3: aload_1
       4: invokeinterface #106,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: new           #108                // class scala/collection/immutable/Stream$$anonfun$continually$1
      12: dup
      13: aload_1
      14: invokespecial #109                // Method scala/collection/immutable/Stream$$anonfun$continually$1."<init>":(Lscala/Function0;)V
      17: astore        4
      19: astore_3
      20: astore_2
      21: new           #65                 // class scala/collection/immutable/Stream$Cons
      24: dup
      25: aload_3
      26: aload         4
      28: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      31: areturn

  public <A> scala.collection.immutable.Stream<A> fill(int, scala.Function0<A>);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpgt     11
       5: getstatic     #33                 // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       8: goto          45
      11: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      14: aload_2
      15: invokeinterface #106,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: new           #114                // class scala/collection/immutable/Stream$$anonfun$fill$1
      23: dup
      24: iload_1
      25: aload_2
      26: invokespecial #117                // Method scala/collection/immutable/Stream$$anonfun$fill$1."<init>":(ILscala/Function0;)V
      29: astore        5
      31: astore        4
      33: astore_3
      34: new           #65                 // class scala/collection/immutable/Stream$Cons
      37: dup
      38: aload         4
      40: aload         5
      42: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      45: areturn

  public <A> scala.collection.immutable.Stream<A> tabulate(int, scala.Function1<java.lang.Object, A>);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: aload_2
       4: invokevirtual #124                // Method scala$collection$immutable$Stream$$loop$4:(IILscala/Function1;)Lscala/collection/immutable/Stream;
       7: areturn

  public <T> scala.collection.immutable.Stream<T> range(T, T, T, scala.math.Integral<T>);
    Code:
       0: getstatic     #131                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: astore        5
       5: aload         4
       7: checkcast     #133                // class scala/math/Integral
      10: astore        6
      12: aload         6
      14: aload_3
      15: invokeinterface #137,  2          // InterfaceMethod scala/math/Integral.mkOrderingOps:(Ljava/lang/Object;)Lscala/math/Ordering$Ops;
      20: aload         6
      22: invokeinterface #140,  1          // InterfaceMethod scala/math/Integral.zero:()Ljava/lang/Object;
      27: invokevirtual #146                // Method scala/math/Ordering$Ops.$less:(Ljava/lang/Object;)Z
      30: ifeq          48
      33: aload         6
      35: aload_1
      36: invokeinterface #137,  2          // InterfaceMethod scala/math/Integral.mkOrderingOps:(Ljava/lang/Object;)Lscala/math/Ordering$Ops;
      41: aload_2
      42: invokevirtual #149                // Method scala/math/Ordering$Ops.$less$eq:(Ljava/lang/Object;)Z
      45: goto          60
      48: aload         6
      50: aload_2
      51: invokeinterface #137,  2          // InterfaceMethod scala/math/Integral.mkOrderingOps:(Ljava/lang/Object;)Lscala/math/Ordering$Ops;
      56: aload_1
      57: invokevirtual #149                // Method scala/math/Ordering$Ops.$less$eq:(Ljava/lang/Object;)Z
      60: ifeq          69
      63: getstatic     #33                 // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      66: goto          100
      69: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      72: new           #151                // class scala/collection/immutable/Stream$$anonfun$range$1
      75: dup
      76: aload_1
      77: aload_2
      78: aload_3
      79: aload         4
      81: aload         6
      83: invokespecial #154                // Method scala/collection/immutable/Stream$$anonfun$range$1."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;Lscala/math/Integral;)V
      86: astore        8
      88: astore        7
      90: new           #65                 // class scala/collection/immutable/Stream$Cons
      93: dup
      94: aload_1
      95: aload         8
      97: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
     100: areturn

  public <A> scala.collection.immutable.Stream$Cons<A> filteredTail(scala.collection.immutable.Stream<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       3: aload_1
       4: invokevirtual #163                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
       7: new           #165                // class scala/collection/immutable/Stream$$anonfun$filteredTail$1
      10: dup
      11: aload_1
      12: aload_2
      13: invokespecial #168                // Method scala/collection/immutable/Stream$$anonfun$filteredTail$1."<init>":(Lscala/collection/immutable/Stream;Lscala/Function1;)V
      16: astore        5
      18: astore        4
      20: astore_3
      21: new           #65                 // class scala/collection/immutable/Stream$Cons
      24: dup
      25: aload         4
      27: aload         5
      29: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      32: areturn

  public <A, B, That> scala.collection.immutable.Stream$Cons<B> collectedTail(B, scala.collection.immutable.Stream<A>, scala.PartialFunction<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.Stream<A>, B, That>);
    Code:
       0: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       3: new           #174                // class scala/collection/immutable/Stream$$anonfun$collectedTail$1
       6: dup
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokespecial #177                // Method scala/collection/immutable/Stream$$anonfun$collectedTail$1."<init>":(Lscala/collection/immutable/Stream;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)V
      14: astore        6
      16: astore        5
      18: new           #65                 // class scala/collection/immutable/Stream$Cons
      21: dup
      22: aload_1
      23: aload         6
      25: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      28: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #184                // Field MODULE$:Lscala/collection/immutable/Stream$;
       3: areturn

  public scala.collection.GenTraversable range(java.lang.Object, java.lang.Object, java.lang.Object, scala.math.Integral);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #187                // Method range:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/Stream;
       9: areturn

  public scala.collection.GenTraversable tabulate(int, scala.Function1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #191                // Method tabulate:(ILscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public scala.collection.GenTraversable fill(int, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #194                // Method fill:(ILscala/Function0;)Lscala/collection/immutable/Stream;
       6: areturn

  public scala.collection.GenTraversable iterate(java.lang.Object, int, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokevirtual #197                // Method iterate:(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/immutable/Stream;
       7: areturn

  public scala.collection.GenTraversable apply(scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #200                // Method apply:(Lscala/collection/Seq;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.GenTraversable empty();
    Code:
       0: aload_0
       1: invokevirtual #204                // Method empty:()Lscala/collection/immutable/Stream;
       4: areturn

  public final scala.collection.immutable.Stream scala$collection$immutable$Stream$$loop$4(int, int, scala.Function1);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmplt     11
       5: getstatic     #33                 // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       8: goto          51
      11: getstatic     #58                 // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      14: aload_3
      15: iload_1
      16: invokestatic  #91                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      19: invokeinterface #209,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: new           #211                // class scala/collection/immutable/Stream$$anonfun$scala$collection$immutable$Stream$$loop$4$1
      27: dup
      28: iload_2
      29: aload_3
      30: iload_1
      31: invokespecial #214                // Method scala/collection/immutable/Stream$$anonfun$scala$collection$immutable$Stream$$loop$4$1."<init>":(ILscala/Function1;I)V
      34: astore        6
      36: astore        5
      38: astore        4
      40: new           #65                 // class scala/collection/immutable/Stream$Cons
      43: dup
      44: aload         5
      46: aload         6
      48: invokespecial #68                 // Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      51: areturn

  private scala.collection.immutable.Stream$();
    Code:
       0: aload_0
       1: invokespecial #218                // Method scala/collection/generic/SeqFactory."<init>":()V
       4: aload_0
       5: putstatic     #184                // Field MODULE$:Lscala/collection/immutable/Stream$;
       8: return
}
