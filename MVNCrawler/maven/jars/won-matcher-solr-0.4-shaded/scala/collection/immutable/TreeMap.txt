Compiled from "TreeMap.scala"
public class scala.collection.immutable.TreeMap<A, B> implements scala.collection.immutable.SortedMap<A, B>, scala.Serializable {
  private final scala.collection.immutable.RedBlackTree$Tree<A, B> tree;

  private final scala.math.Ordering<A> ordering;

  public static <A, B> scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<?, ?>, scala.Tuple2<A, B>, scala.collection.immutable.TreeMap<A, B>> canBuildFrom(scala.math.Ordering<A>);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/TreeMap$.MODULE$:Lscala/collection/immutable/TreeMap$;
       3: aload_0
       4: invokevirtual #23                 // Method scala/collection/immutable/TreeMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
       7: areturn

  public scala.collection.immutable.SortedSet<A> keySet();
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method scala/collection/immutable/SortedMap$class.keySet:(Lscala/collection/immutable/SortedMap;)Lscala/collection/immutable/SortedSet;
       4: areturn

  public scala.collection.immutable.SortedMap<A, B> filterKeys(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method scala/collection/immutable/SortedMap$class.filterKeys:(Lscala/collection/immutable/SortedMap;Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public <C> scala.collection.immutable.SortedMap<A, C> mapValues(scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method scala/collection/immutable/SortedMap$class.mapValues:(Lscala/collection/immutable/SortedMap;Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public boolean hasAll(scala.collection.Iterator<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method scala/collection/generic/Sorted$class.hasAll:(Lscala/collection/generic/Sorted;Lscala/collection/Iterator;)Z
       5: ireturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<scala.Tuple2<A, B>, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method scala/collection/immutable/Map$class.toMap:(Lscala/collection/immutable/Map;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<A, B> seq();
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method scala/collection/immutable/Map$class.seq:(Lscala/collection/immutable/Map;)Lscala/collection/immutable/Map;
       4: areturn

  public <B1> scala.collection.immutable.Map<A, B1> withDefault(scala.Function1<A, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/immutable/Map$class.withDefault:(Lscala/collection/immutable/Map;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B1> scala.collection.immutable.Map<A, B1> withDefaultValue(B1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // Method scala/collection/immutable/Map$class.withDefaultValue:(Lscala/collection/immutable/Map;Ljava/lang/Object;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<A, B>, scala.collection.parallel.immutable.ParMap<A, B>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #91                 // Method scala/collection/immutable/MapLike$class.parCombiner:(Lscala/collection/immutable/MapLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public <C, That> That transform(scala.Function2<A, B, C>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, scala.Tuple2<A, C>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // Method scala/collection/immutable/MapLike$class.transform:(Lscala/collection/immutable/MapLike;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #106                // Method scala/collection/MapLike$class.isEmpty:(Lscala/collection/MapLike;)Z
       4: ireturn

  public <B1> B1 getOrElse(A, scala.Function0<B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #111                // Method scala/collection/MapLike$class.getOrElse:(Lscala/collection/MapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public B apply(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method scala/collection/MapLike$class.apply:(Lscala/collection/MapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<A> keys();
    Code:
       0: aload_0
       1: invokestatic  #124                // Method scala/collection/MapLike$class.keys:(Lscala/collection/MapLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable<B> values();
    Code:
       0: aload_0
       1: invokestatic  #127                // Method scala/collection/MapLike$class.values:(Lscala/collection/MapLike;)Lscala/collection/Iterable;
       4: areturn

  public B default(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // Method scala/collection/MapLike$class.default:(Lscala/collection/MapLike;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Map filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // Method scala/collection/MapLike$class.filterNot:(Lscala/collection/MapLike;Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.Seq<scala.Tuple2<A, B>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #139                // Method scala/collection/MapLike$class.toSeq:(Lscala/collection/MapLike;)Lscala/collection/Seq;
       4: areturn

  public <C> scala.collection.mutable.Buffer<C> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #144                // Method scala/collection/MapLike$class.toBuffer:(Lscala/collection/MapLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #149                // Method scala/collection/MapLike$class.addString:(Lscala/collection/MapLike;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #160                // Method scala/collection/MapLike$class.stringPrefix:(Lscala/collection/MapLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #163                // Method scala/collection/MapLike$class.toString:(Lscala/collection/MapLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #170                // Method scala/collection/generic/Subtractable$class.$minus:(Lscala/collection/generic/Subtractable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Subtractable;
       7: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #179                // Method scala/collection/generic/Subtractable$class.$minus$minus:(Lscala/collection/generic/Subtractable;Lscala/collection/GenTraversableOnce;)Lscala/collection/generic/Subtractable;
       5: areturn

  public <A1 extends A, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<A, C> andThen(scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<A, scala.Option<B>> lift();
    Code:
       0: aload_0
       1: invokestatic  #201                // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public <A1 extends A, B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #206                // Method scala/PartialFunction$class.applyOrElse:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<A, java.lang.Object> runWith(scala.Function1<B, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // Method scala/PartialFunction$class.runWith:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #220                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #227                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #232                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #237                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #242                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #247                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #252                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #258                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #263                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #268                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #273                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #278                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #283                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #289                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #294                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #299                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #304                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #309                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #314                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #320                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #325                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #330                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #335                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #340                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, B> compose(scala.Function1<A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #344                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #352                // Method scala/collection/GenMapLike$class.hashCode:(Lscala/collection/GenMapLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #357                // Method scala/collection/GenMapLike$class.equals:(Lscala/collection/GenMapLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.generic.GenericCompanion<scala.collection.immutable.Iterable> companion();
    Code:
       0: aload_0
       1: invokestatic  #364                // Method scala/collection/immutable/Iterable$class.companion:(Lscala/collection/immutable/Iterable;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.Iterable<scala.Tuple2<A, B>> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #370                // Method scala/collection/IterableLike$class.thisCollection:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // Method scala/collection/IterableLike$class.toCollection:(Lscala/collection/IterableLike;Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public boolean forall(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #381                // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #384                // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<scala.Tuple2<A, B>> find(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #389                // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldRight(B, scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #394                // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #401                // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<scala.Tuple2<A, B>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #404                // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #409                // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeMap<A, B>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #414                // Method scala/collection/IterableLike$class.grouped:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeMap<A, B>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #418                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeMap<A, B>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #422                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;II)Lscala/collection/Iterator;
       6: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #428                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #434                // Method scala/collection/IterableLike$class.zip:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #440                // Method scala/collection/IterableLike$class.zipAll:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #447                // Method scala/collection/IterableLike$class.zipWithIndex:(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #452                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<scala.Tuple2<A, B>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #457                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #461                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #466                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;)Lscala/collection/IterableView;
       4: areturn

  public scala.collection.IterableView<scala.Tuple2<A, B>, scala.collection.immutable.TreeMap<A, B>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #470                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;II)Lscala/collection/IterableView;
       6: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.immutable.Iterable<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #479                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>> unzip(scala.Function1<scala.Tuple2<A, B>, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #484                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>, scala.collection.immutable.Iterable<A3>> unzip3(scala.Function1<scala.Tuple2<A, B>, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #490                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #496                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #500                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #506                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #510                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #513                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #518                // Method scala/collection/TraversableLike$class.$plus$plus:(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #523                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #528                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<scala.Tuple2<A, B>, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #534                // Method scala/collection/TraversableLike$class.map:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<scala.Tuple2<A, B>, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #537                // Method scala/collection/TraversableLike$class.flatMap:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #542                // Method scala/collection/TraversableLike$class.filter:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<scala.Tuple2<A, B>, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #547                // Method scala/collection/TraversableLike$class.collect:(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.immutable.TreeMap<A, B>, scala.collection.immutable.TreeMap<A, B>> partition(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #552                // Method scala/collection/TraversableLike$class.partition:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.immutable.TreeMap<A, B>> groupBy(scala.Function1<scala.Tuple2<A, B>, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #556                // Method scala/collection/TraversableLike$class.groupBy:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #561                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, scala.Tuple2<A, B>, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #565                // Method scala/collection/TraversableLike$class.scanLeft:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<scala.Tuple2<A, B>, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeMap<A, B>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #568                // Method scala/collection/TraversableLike$class.scanRight:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #573                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #579                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeMap<A, B>> tails();
    Code:
       0: aload_0
       1: invokestatic  #583                // Method scala/collection/TraversableLike$class.tails:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeMap<A, B>> inits();
    Code:
       0: aload_0
       1: invokestatic  #586                // Method scala/collection/TraversableLike$class.inits:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Traversable<scala.Tuple2<A, B>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #591                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scala.Tuple2<A, B>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #595                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public scala.collection.generic.FilterMonadic<scala.Tuple2<A, B>, scala.collection.immutable.TreeMap<A, B>> withFilter(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #600                // Method scala/collection/TraversableLike$class.withFilter:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #607                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<scala.Tuple2<A, B>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #614                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #618                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #623                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #628                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #632                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #635                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #638                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #642                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, scala.Tuple2<A, B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #647                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<scala.Tuple2<A, B>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #650                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #653                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #656                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #659                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, scala.Tuple2<A, B>, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #664                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #671                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #676                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #681                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #685                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #690                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #693                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #698                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #704                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #708                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #713                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scala.Tuple2<A, B>> toList();
    Code:
       0: aload_0
       1: invokestatic  #718                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<A, B>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #723                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #728                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<A, B>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #733                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #738                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #742                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #745                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #749                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #753                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public scala.math.Ordering<A> ordering();
    Code:
       0: aload_0
       1: getfield      #756                // Field ordering:Lscala/math/Ordering;
       4: areturn

  public scala.collection.mutable.Builder<scala.Tuple2<A, B>, scala.collection.immutable.TreeMap<A, B>> newBuilder();
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/TreeMap$.MODULE$:Lscala/collection/immutable/TreeMap$;
       3: aload_0
       4: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
       7: invokevirtual #762                // Method scala/collection/immutable/TreeMap$.newBuilder:(Lscala/math/Ordering;)Lscala/collection/mutable/Builder;
      10: areturn

  public int size();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #772                // Method scala/collection/immutable/RedBlackTree$.count:(Lscala/collection/immutable/RedBlackTree$Tree;)I
      10: ireturn

  public scala.collection.immutable.TreeMap<A, B> rangeImpl(scala.Option<A>, scala.Option<A>);
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_1
      12: aload_2
      13: aload_0
      14: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      17: invokevirtual #777                // Method scala/collection/immutable/RedBlackTree$.rangeImpl:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      20: aload_0
      21: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      24: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      27: areturn

  public scala.collection.immutable.TreeMap<A, B> range(A, A);
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_1
      12: aload_2
      13: aload_0
      14: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      17: invokevirtual #787                // Method scala/collection/immutable/RedBlackTree$.range:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      20: aload_0
      21: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      24: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      27: areturn

  public scala.collection.immutable.TreeMap<A, B> from(A);
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_1
      12: aload_0
      13: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      16: invokevirtual #791                // Method scala/collection/immutable/RedBlackTree$.from:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      19: aload_0
      20: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      23: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      26: areturn

  public scala.collection.immutable.TreeMap<A, B> to(A);
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_1
      12: aload_0
      13: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      16: invokevirtual #793                // Method scala/collection/immutable/RedBlackTree$.to:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      19: aload_0
      20: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      23: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      26: areturn

  public scala.collection.immutable.TreeMap<A, B> until(A);
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_1
      12: aload_0
      13: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      16: invokevirtual #795                // Method scala/collection/immutable/RedBlackTree$.until:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      19: aload_0
      20: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      23: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      26: areturn

  public A firstKey();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #800                // Method scala/collection/immutable/RedBlackTree$.smallest:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
      10: invokevirtual #804                // Method scala/collection/immutable/RedBlackTree$Tree.key:()Ljava/lang/Object;
      13: areturn

  public A lastKey();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #808                // Method scala/collection/immutable/RedBlackTree$.greatest:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
      10: invokevirtual #804                // Method scala/collection/immutable/RedBlackTree$Tree.key:()Ljava/lang/Object;
      13: areturn

  public int compare(A, A);
    Code:
       0: aload_0
       1: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
       4: aload_1
       5: aload_2
       6: invokeinterface #814,  3          // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      11: ireturn

  public scala.Tuple2<A, B> head();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #800                // Method scala/collection/immutable/RedBlackTree$.smallest:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
      10: astore_1
      11: new           #820                // class scala/Tuple2
      14: dup
      15: aload_1
      16: invokevirtual #804                // Method scala/collection/immutable/RedBlackTree$Tree.key:()Ljava/lang/Object;
      19: aload_1
      20: invokevirtual #823                // Method scala/collection/immutable/RedBlackTree$Tree.value:()Ljava/lang/Object;
      23: invokespecial #826                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      26: areturn

  public scala.Option<scala.Tuple2<A, B>> headOption();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #831                // Method scala/collection/immutable/RedBlackTree$.isEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Z
      10: ifeq          19
      13: getstatic     #836                // Field scala/None$.MODULE$:Lscala/None$;
      16: goto          30
      19: new           #838                // class scala/Some
      22: dup
      23: aload_0
      24: invokevirtual #840                // Method head:()Lscala/Tuple2;
      27: invokespecial #842                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      30: areturn

  public scala.Tuple2<A, B> last();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #808                // Method scala/collection/immutable/RedBlackTree$.greatest:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
      10: astore_1
      11: new           #820                // class scala/Tuple2
      14: dup
      15: aload_1
      16: invokevirtual #804                // Method scala/collection/immutable/RedBlackTree$Tree.key:()Ljava/lang/Object;
      19: aload_1
      20: invokevirtual #823                // Method scala/collection/immutable/RedBlackTree$Tree.value:()Ljava/lang/Object;
      23: invokespecial #826                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      26: areturn

  public scala.Option<scala.Tuple2<A, B>> lastOption();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #831                // Method scala/collection/immutable/RedBlackTree$.isEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Z
      10: ifeq          19
      13: getstatic     #836                // Field scala/None$.MODULE$:Lscala/None$;
      16: goto          30
      19: new           #838                // class scala/Some
      22: dup
      23: aload_0
      24: invokevirtual #848                // Method last:()Lscala/Tuple2;
      27: invokespecial #842                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      30: areturn

  public scala.collection.immutable.TreeMap<A, B> tail();
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_0
      12: invokevirtual #852                // Method firstKey:()Ljava/lang/Object;
      15: aload_0
      16: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #855                // Method scala/collection/immutable/RedBlackTree$.delete:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      22: aload_0
      23: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      26: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      29: areturn

  public scala.collection.immutable.TreeMap<A, B> init();
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_0
      12: invokevirtual #858                // Method lastKey:()Ljava/lang/Object;
      15: aload_0
      16: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #855                // Method scala/collection/immutable/RedBlackTree$.delete:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      22: aload_0
      23: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      26: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      29: areturn

  public scala.collection.immutable.TreeMap<A, B> drop(int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpgt     9
       5: aload_0
       6: goto          50
       9: iload_1
      10: aload_0
      11: invokevirtual #862                // Method size:()I
      14: if_icmplt     24
      17: aload_0
      18: invokevirtual #865                // Method empty:()Lscala/collection/immutable/TreeMap;
      21: goto          50
      24: new           #2                  // class scala/collection/immutable/TreeMap
      27: dup
      28: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      31: aload_0
      32: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      35: iload_1
      36: aload_0
      37: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      40: invokevirtual #868                // Method scala/collection/immutable/RedBlackTree$.drop:(Lscala/collection/immutable/RedBlackTree$Tree;ILscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      43: aload_0
      44: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      47: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      50: areturn

  public scala.collection.immutable.TreeMap<A, B> take(int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpgt     12
       5: aload_0
       6: invokevirtual #865                // Method empty:()Lscala/collection/immutable/TreeMap;
       9: goto          50
      12: iload_1
      13: aload_0
      14: invokevirtual #862                // Method size:()I
      17: if_icmplt     24
      20: aload_0
      21: goto          50
      24: new           #2                  // class scala/collection/immutable/TreeMap
      27: dup
      28: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      31: aload_0
      32: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      35: iload_1
      36: aload_0
      37: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      40: invokevirtual #872                // Method scala/collection/immutable/RedBlackTree$.take:(Lscala/collection/immutable/RedBlackTree$Tree;ILscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      43: aload_0
      44: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      47: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      50: areturn

  public scala.collection.immutable.TreeMap<A, B> slice(int, int);
    Code:
       0: iload_2
       1: iload_1
       2: if_icmpgt     12
       5: aload_0
       6: invokevirtual #865                // Method empty:()Lscala/collection/immutable/TreeMap;
       9: goto          68
      12: iload_1
      13: iconst_0
      14: if_icmpgt     25
      17: aload_0
      18: iload_2
      19: invokevirtual #876                // Method take:(I)Lscala/collection/immutable/TreeMap;
      22: goto          68
      25: iload_2
      26: aload_0
      27: invokevirtual #862                // Method size:()I
      30: if_icmplt     41
      33: aload_0
      34: iload_1
      35: invokevirtual #878                // Method drop:(I)Lscala/collection/immutable/TreeMap;
      38: goto          68
      41: new           #2                  // class scala/collection/immutable/TreeMap
      44: dup
      45: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      48: aload_0
      49: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      52: iload_1
      53: iload_2
      54: aload_0
      55: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      58: invokevirtual #881                // Method scala/collection/immutable/RedBlackTree$.slice:(Lscala/collection/immutable/RedBlackTree$Tree;IILscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      61: aload_0
      62: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      65: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      68: areturn

  public scala.collection.immutable.TreeMap<A, B> dropRight(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #862                // Method size:()I
       5: getstatic     #887                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       8: iload_1
       9: iconst_0
      10: invokevirtual #890                // Method scala/math/package$.max:(II)I
      13: isub
      14: invokevirtual #876                // Method take:(I)Lscala/collection/immutable/TreeMap;
      17: areturn

  public scala.collection.immutable.TreeMap<A, B> takeRight(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #862                // Method size:()I
       5: getstatic     #887                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       8: iload_1
       9: iconst_0
      10: invokevirtual #890                // Method scala/math/package$.max:(II)I
      13: isub
      14: invokevirtual #878                // Method drop:(I)Lscala/collection/immutable/TreeMap;
      17: areturn

  public scala.Tuple2<scala.collection.immutable.TreeMap<A, B>, scala.collection.immutable.TreeMap<A, B>> splitAt(int);
    Code:
       0: new           #820                // class scala/Tuple2
       3: dup
       4: aload_0
       5: iload_1
       6: invokevirtual #876                // Method take:(I)Lscala/collection/immutable/TreeMap;
       9: aload_0
      10: iload_1
      11: invokevirtual #878                // Method drop:(I)Lscala/collection/immutable/TreeMap;
      14: invokespecial #826                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      17: areturn

  private int countWhile(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #897                // Method iterator:()Lscala/collection/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #902,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_1
      17: aload_3
      18: invokeinterface #905,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      23: invokeinterface #909,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: invokestatic  #914                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      31: ifeq          41
      34: iload_2
      35: iconst_1
      36: iadd
      37: istore_2
      38: goto          7
      41: iload_2
      42: ireturn

  public scala.collection.immutable.TreeMap<A, B> dropWhile(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #920                // Method countWhile:(Lscala/Function1;)I
       6: invokevirtual #878                // Method drop:(I)Lscala/collection/immutable/TreeMap;
       9: areturn

  public scala.collection.immutable.TreeMap<A, B> takeWhile(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #920                // Method countWhile:(Lscala/Function1;)I
       6: invokevirtual #876                // Method take:(I)Lscala/collection/immutable/TreeMap;
       9: areturn

  public scala.Tuple2<scala.collection.immutable.TreeMap<A, B>, scala.collection.immutable.TreeMap<A, B>> span(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #920                // Method countWhile:(Lscala/Function1;)I
       6: invokevirtual #924                // Method splitAt:(I)Lscala/Tuple2;
       9: areturn

  public scala.collection.immutable.TreeMap<A, B> empty();
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/TreeMap$.MODULE$:Lscala/collection/immutable/TreeMap$;
       3: aload_0
       4: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
       7: invokevirtual #927                // Method scala/collection/immutable/TreeMap$.empty:(Lscala/math/Ordering;)Lscala/collection/immutable/TreeMap;
      10: areturn

  public <B1> scala.collection.immutable.TreeMap<A, B1> updated(A, B1);
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeMap
       3: dup
       4: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_1
      12: aload_2
      13: iconst_1
      14: aload_0
      15: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      18: invokevirtual #932                // Method scala/collection/immutable/RedBlackTree$.update:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;ZLscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      21: aload_0
      22: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      25: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      28: areturn

  public <B1> scala.collection.immutable.TreeMap<A, B1> $plus(scala.Tuple2<A, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #937                // Method scala/Tuple2._1:()Ljava/lang/Object;
       5: aload_1
       6: invokevirtual #940                // Method scala/Tuple2._2:()Ljava/lang/Object;
       9: invokevirtual #942                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
      12: areturn

  public <B1> scala.collection.immutable.TreeMap<A, B1> $plus(scala.Tuple2<A, B1>, scala.Tuple2<A, B1>, scala.collection.Seq<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #947                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/TreeMap;
       5: aload_2
       6: invokevirtual #947                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/TreeMap;
       9: aload_3
      10: invokevirtual #950                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/TreeMap;
      13: areturn

  public <B1> scala.collection.immutable.TreeMap<A, B1> $plus$plus(scala.collection.GenTraversableOnce<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: invokevirtual #952                // Method repr:()Ljava/lang/Object;
       4: checkcast     #2                  // class scala/collection/immutable/TreeMap
       7: astore_2
       8: aload_1
       9: invokeinterface #957,  1          // InterfaceMethod scala/collection/GenTraversableOnce.seq:()Lscala/collection/TraversableOnce;
      14: aload_2
      15: new           #959                // class scala/collection/immutable/TreeMap$$anonfun$$plus$plus$1
      18: dup
      19: aload_0
      20: invokespecial #962                // Method scala/collection/immutable/TreeMap$$anonfun$$plus$plus$1."<init>":(Lscala/collection/immutable/TreeMap;)V
      23: invokeinterface #966,  3          // InterfaceMethod scala/collection/TraversableOnce.$div$colon:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #2                  // class scala/collection/immutable/TreeMap
      31: areturn

  public <B1> scala.collection.immutable.TreeMap<A, B1> insert(A, B1);
    Code:
       0: getstatic     #972                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       6: aload_0
       7: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      10: aload_1
      11: aload_0
      12: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      15: invokevirtual #976                // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      18: ifeq          25
      21: iconst_0
      22: goto          26
      25: iconst_1
      26: invokevirtual #980                // Method scala/Predef$.assert:(Z)V
      29: new           #2                  // class scala/collection/immutable/TreeMap
      32: dup
      33: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      36: aload_0
      37: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      40: aload_1
      41: aload_2
      42: iconst_1
      43: aload_0
      44: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      47: invokevirtual #932                // Method scala/collection/immutable/RedBlackTree$.update:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;ZLscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      50: aload_0
      51: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      54: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      57: areturn

  public scala.collection.immutable.TreeMap<A, B> $minus(A);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: aload_0
       9: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      12: invokevirtual #976                // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      15: ifeq          47
      18: new           #2                  // class scala/collection/immutable/TreeMap
      21: dup
      22: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      25: aload_0
      26: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      29: aload_1
      30: aload_0
      31: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      34: invokevirtual #855                // Method scala/collection/immutable/RedBlackTree$.delete:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      37: aload_0
      38: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      41: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      44: goto          48
      47: aload_0
      48: areturn

  public scala.Option<B> get(A);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: aload_0
       9: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      12: invokevirtual #985                // Method scala/collection/immutable/RedBlackTree$.get:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
      15: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> iterator();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      10: invokevirtual #989                // Method scala/collection/immutable/RedBlackTree$.iterator$default$2:()Lscala/None$;
      13: aload_0
      14: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      17: invokevirtual #992                // Method scala/collection/immutable/RedBlackTree$.iterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      20: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> iteratorFrom(A);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: new           #838                // class scala/Some
      10: dup
      11: aload_1
      12: invokespecial #842                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      15: aload_0
      16: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #992                // Method scala/collection/immutable/RedBlackTree$.iterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      22: areturn

  public scala.collection.Iterator<A> keysIterator();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      10: invokevirtual #998                // Method scala/collection/immutable/RedBlackTree$.keysIterator$default$2:()Lscala/None$;
      13: aload_0
      14: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      17: invokevirtual #1000               // Method scala/collection/immutable/RedBlackTree$.keysIterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      20: areturn

  public scala.collection.Iterator<A> keysIteratorFrom(A);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: new           #838                // class scala/Some
      10: dup
      11: aload_1
      12: invokespecial #842                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      15: aload_0
      16: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #1000               // Method scala/collection/immutable/RedBlackTree$.keysIterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      22: areturn

  public scala.collection.Iterator<B> valuesIterator();
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      10: invokevirtual #1005               // Method scala/collection/immutable/RedBlackTree$.valuesIterator$default$2:()Lscala/None$;
      13: aload_0
      14: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      17: invokevirtual #1007               // Method scala/collection/immutable/RedBlackTree$.valuesIterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      20: areturn

  public scala.collection.Iterator<B> valuesIteratorFrom(A);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: new           #838                // class scala/Some
      10: dup
      11: aload_1
      12: invokespecial #842                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      15: aload_0
      16: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #1007               // Method scala/collection/immutable/RedBlackTree$.valuesIterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      22: areturn

  public boolean contains(A);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: aload_0
       9: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      12: invokevirtual #976                // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      15: ireturn

  public boolean isDefinedAt(A);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: aload_0
       9: invokevirtual #759                // Method ordering:()Lscala/math/Ordering;
      12: invokevirtual #976                // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      15: ireturn

  public <U> void foreach(scala.Function1<scala.Tuple2<A, B>, U>);
    Code:
       0: getstatic     #767                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: invokevirtual #1014               // Method scala/collection/immutable/RedBlackTree$.foreach:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Function1;)V
      11: return

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1017               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #1020               // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1023               // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #952                // Method repr:()Ljava/lang/Object;
       4: checkcast     #1026               // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.generic.Sorted repr();
    Code:
       0: aload_0
       1: invokevirtual #952                // Method repr:()Ljava/lang/Object;
       4: checkcast     #1029               // class scala/collection/generic/Sorted
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1032               // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #1035               // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1038               // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1041               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1043               // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1045               // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1048               // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1050               // Method filterNot:(Lscala/Function1;)Lscala/collection/Map;
       5: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #1052               // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #1054               // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #1056               // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1062               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1064               // Method mapValues:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.Map mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1064               // Method mapValues:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.immutable.Map mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1064               // Method mapValues:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.SortedMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1064               // Method mapValues:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1067               // Method filterKeys:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.Map filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1067               // Method filterKeys:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.immutable.Map filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1067               // Method filterKeys:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.SortedMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1067               // Method filterKeys:(Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       5: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #1069               // Method keySet:()Lscala/collection/immutable/SortedSet;
       4: areturn

  public scala.collection.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #1069               // Method keySet:()Lscala/collection/immutable/SortedSet;
       4: areturn

  public scala.collection.immutable.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #1069               // Method keySet:()Lscala/collection/immutable/SortedSet;
       4: areturn

  public scala.collection.SortedSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #1069               // Method keySet:()Lscala/collection/immutable/SortedSet;
       4: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1073               // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1073               // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1073               // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #950                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.immutable.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #950                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.SortedMap $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #950                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.immutable.SortedMap $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #950                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1083               // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/TreeMap;
       7: areturn

  public scala.collection.immutable.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1083               // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/TreeMap;
       7: areturn

  public scala.collection.SortedMap $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1083               // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/TreeMap;
       7: areturn

  public scala.collection.immutable.SortedMap $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1083               // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/TreeMap;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #947                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #947                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.immutable.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #947                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.SortedMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #947                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.immutable.SortedMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #947                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #942                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #942                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       6: areturn

  public scala.collection.immutable.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #942                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       6: areturn

  public scala.collection.SortedMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #942                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       6: areturn

  public scala.collection.immutable.SortedMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #942                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       6: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #865                // Method empty:()Lscala/collection/immutable/TreeMap;
       4: areturn

  public scala.collection.immutable.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #865                // Method empty:()Lscala/collection/immutable/TreeMap;
       4: areturn

  public scala.collection.SortedMap empty();
    Code:
       0: aload_0
       1: invokevirtual #865                // Method empty:()Lscala/collection/immutable/TreeMap;
       4: areturn

  public scala.collection.immutable.SortedMap empty();
    Code:
       0: aload_0
       1: invokevirtual #865                // Method empty:()Lscala/collection/immutable/TreeMap;
       4: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1103               // Method takeWhile:(Lscala/Function1;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1105               // Method dropWhile:(Lscala/Function1;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1108               // Method takeRight:(I)Lscala/collection/immutable/TreeMap;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1110               // Method dropRight:(I)Lscala/collection/immutable/TreeMap;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1112               // Method slice:(II)Lscala/collection/immutable/TreeMap;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #876                // Method take:(I)Lscala/collection/immutable/TreeMap;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #878                // Method drop:(I)Lscala/collection/immutable/TreeMap;
       5: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #1114               // Method init:()Lscala/collection/immutable/TreeMap;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #1116               // Method tail:()Lscala/collection/immutable/TreeMap;
       4: areturn

  public java.lang.Object last();
    Code:
       0: aload_0
       1: invokevirtual #848                // Method last:()Lscala/Tuple2;
       4: areturn

  public java.lang.Object head();
    Code:
       0: aload_0
       1: invokevirtual #840                // Method head:()Lscala/Tuple2;
       4: areturn

  public scala.collection.generic.Sorted until(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1119               // Method until:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.generic.Sorted to(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1121               // Method to:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.generic.Sorted from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1123               // Method from:(Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       5: areturn

  public scala.collection.generic.Sorted range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1126               // Method range:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeMap;
       6: areturn

  public scala.collection.generic.Sorted rangeImpl(scala.Option, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1129               // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/immutable/TreeMap;
       6: areturn

  public scala.collection.SortedMap rangeImpl(scala.Option, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1129               // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/immutable/TreeMap;
       6: areturn

  private scala.collection.immutable.TreeMap(scala.collection.immutable.RedBlackTree$Tree<A, B>, scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #769                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       5: aload_0
       6: aload_2
       7: putfield      #756                // Field ordering:Lscala/math/Ordering;
      10: aload_0
      11: invokespecial #1133               // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #1137               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      18: aload_0
      19: invokestatic  #1140               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      22: aload_0
      23: invokestatic  #1143               // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      26: aload_0
      27: invokestatic  #1146               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      30: aload_0
      31: invokestatic  #1151               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      34: aload_0
      35: invokestatic  #1156               // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      38: aload_0
      39: invokestatic  #1161               // Method scala/collection/immutable/Traversable$class.$init$:(Lscala/collection/immutable/Traversable;)V
      42: aload_0
      43: invokestatic  #1166               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      46: aload_0
      47: invokestatic  #1169               // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      50: aload_0
      51: invokestatic  #1174               // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      54: aload_0
      55: invokestatic  #1177               // Method scala/collection/immutable/Iterable$class.$init$:(Lscala/collection/immutable/Iterable;)V
      58: aload_0
      59: invokestatic  #1180               // Method scala/collection/GenMapLike$class.$init$:(Lscala/collection/GenMapLike;)V
      62: aload_0
      63: invokestatic  #1182               // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      66: aload_0
      67: invokestatic  #1185               // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      70: aload_0
      71: invokestatic  #1188               // Method scala/collection/generic/Subtractable$class.$init$:(Lscala/collection/generic/Subtractable;)V
      74: aload_0
      75: invokestatic  #1191               // Method scala/collection/MapLike$class.$init$:(Lscala/collection/MapLike;)V
      78: aload_0
      79: invokestatic  #1196               // Method scala/collection/Map$class.$init$:(Lscala/collection/Map;)V
      82: aload_0
      83: invokestatic  #1199               // Method scala/collection/immutable/MapLike$class.$init$:(Lscala/collection/immutable/MapLike;)V
      86: aload_0
      87: invokestatic  #1202               // Method scala/collection/immutable/Map$class.$init$:(Lscala/collection/immutable/Map;)V
      90: aload_0
      91: invokestatic  #1205               // Method scala/collection/generic/Sorted$class.$init$:(Lscala/collection/generic/Sorted;)V
      94: aload_0
      95: invokestatic  #1210               // Method scala/collection/SortedMapLike$class.$init$:(Lscala/collection/SortedMapLike;)V
      98: aload_0
      99: invokestatic  #1215               // Method scala/collection/SortedMap$class.$init$:(Lscala/collection/SortedMap;)V
     102: aload_0
     103: invokestatic  #1218               // Method scala/collection/immutable/SortedMap$class.$init$:(Lscala/collection/immutable/SortedMap;)V
     106: return

  public scala.collection.immutable.TreeMap(scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #781                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
       6: return
}
