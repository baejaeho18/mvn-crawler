Compiled from "Stream.scala"
public final class scala.collection.immutable.Stream$$anon$1 implements scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>> {
  private scala.collection.immutable.Stream<A> underlying;

  private final scala.collection.immutable.Stream $outer;

  private volatile boolean bitmap$0;

  private scala.collection.immutable.Stream underlying$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #23                 // Field bitmap$0:Z
       8: ifne          30
      11: aload_0
      12: aload_0
      13: getfield      #25                 // Field $outer:Lscala/collection/immutable/Stream;
      16: invokevirtual #29                 // Method scala/collection/immutable/Stream.repr:()Ljava/lang/Object;
      19: checkcast     #10                 // class scala/collection/immutable/Stream
      22: putfield      #31                 // Field underlying:Lscala/collection/immutable/Stream;
      25: aload_0
      26: iconst_1
      27: putfield      #23                 // Field bitmap$0:Z
      30: getstatic     #37                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      33: pop
      34: aload_0
      35: monitorexit
      36: aload_0
      37: getfield      #31                 // Field underlying:Lscala/collection/immutable/Stream;
      40: areturn
      41: aload_1
      42: monitorexit
      43: athrow
    Exception table:
       from    to  target type
           4    36    41   any

  public <B, That> That force(scala.collection.generic.CanBuildFrom<scala.collection.immutable.Stream<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method scala/collection/immutable/StreamViewLike$class.force:(Lscala/collection/immutable/StreamViewLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<B> newForced(scala.Function0<scala.collection.GenSeq<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // Method scala/collection/immutable/StreamViewLike$class.newForced:(Lscala/collection/immutable/StreamViewLike;Lscala/Function0;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public <B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<B> newAppended(scala.collection.GenTraversable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // Method scala/collection/immutable/StreamViewLike$class.newAppended:(Lscala/collection/immutable/StreamViewLike;Lscala/collection/GenTraversable;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public <B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<B> newMapped(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // Method scala/collection/immutable/StreamViewLike$class.newMapped:(Lscala/collection/immutable/StreamViewLike;Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public <B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<B> newFlatMapped(scala.Function1<A, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method scala/collection/immutable/StreamViewLike$class.newFlatMapped:(Lscala/collection/immutable/StreamViewLike;Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A> newFiltered(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method scala/collection/immutable/StreamViewLike$class.newFiltered:(Lscala/collection/immutable/StreamViewLike;Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A> newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // Method scala/collection/immutable/StreamViewLike$class.newSliced:(Lscala/collection/immutable/StreamViewLike;Lscala/collection/generic/SliceInterval;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A> newDroppedWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // Method scala/collection/immutable/StreamViewLike$class.newDroppedWhile:(Lscala/collection/immutable/StreamViewLike;Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A> newTakenWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method scala/collection/immutable/StreamViewLike$class.newTakenWhile:(Lscala/collection/immutable/StreamViewLike;Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public <B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<scala.Tuple2<A, B>> newZipped(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method scala/collection/immutable/StreamViewLike$class.newZipped:(Lscala/collection/immutable/StreamViewLike;Lscala/collection/GenIterable;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public <A1, B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<scala.Tuple2<A1, B>> newZippedAll(scala.collection.GenIterable<B>, A1, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #102                // Method scala/collection/immutable/StreamViewLike$class.newZippedAll:(Lscala/collection/immutable/StreamViewLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/StreamViewLike$Transformed;
       7: areturn

  public scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A> newReversed();
    Code:
       0: aload_0
       1: invokestatic  #110                // Method scala/collection/immutable/StreamViewLike$class.newReversed:(Lscala/collection/immutable/StreamViewLike;)Lscala/collection/immutable/StreamViewLike$Transformed;
       4: areturn

  public <B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<B> newPatched(int, scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #115                // Method scala/collection/immutable/StreamViewLike$class.newPatched:(Lscala/collection/immutable/StreamViewLike;ILscala/collection/GenSeq;I)Lscala/collection/immutable/StreamViewLike$Transformed;
       7: areturn

  public <B> scala.collection.immutable.StreamViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<B> newPrepended(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method scala/collection/immutable/StreamViewLike$class.newPrepended:(Lscala/collection/immutable/StreamViewLike;Ljava/lang/Object;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #131                // Method scala/collection/immutable/StreamViewLike$class.stringPrefix:(Lscala/collection/immutable/StreamViewLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.SeqViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A> newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #138                // Method scala/collection/SeqViewLike$class.newTaken:(Lscala/collection/SeqViewLike;I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A> newDropped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #142                // Method scala/collection/SeqViewLike$class.newDropped:(Lscala/collection/SeqViewLike;I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqView reverse();
    Code:
       0: aload_0
       1: invokestatic  #147                // Method scala/collection/SeqViewLike$class.reverse:(Lscala/collection/SeqViewLike;)Lscala/collection/SeqView;
       4: areturn

  public <B, That> That patch(int, scala.collection.GenSeq<B>, int, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #152                // Method scala/collection/SeqViewLike$class.patch:(Lscala/collection/SeqViewLike;ILscala/collection/GenSeq;ILscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <B, That> That padTo(int, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #159                // Method scala/collection/SeqViewLike$class.padTo:(Lscala/collection/SeqViewLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That reverseMap(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #165                // Method scala/collection/SeqViewLike$class.reverseMap:(Lscala/collection/SeqViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That updated(int, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #168                // Method scala/collection/SeqViewLike$class.updated:(Lscala/collection/SeqViewLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That $plus$colon(B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #174                // Method scala/collection/SeqViewLike$class.$plus$colon:(Lscala/collection/SeqViewLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $colon$plus(B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #177                // Method scala/collection/SeqViewLike$class.$colon$plus:(Lscala/collection/SeqViewLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That union(scala.collection.GenSeq<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #182                // Method scala/collection/SeqViewLike$class.union:(Lscala/collection/SeqViewLike;Lscala/collection/GenSeq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.SeqView diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // Method scala/collection/SeqViewLike$class.diff:(Lscala/collection/SeqViewLike;Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public scala.collection.SeqView intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // Method scala/collection/SeqViewLike$class.intersect:(Lscala/collection/SeqViewLike;Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public scala.collection.SeqView sorted(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // Method scala/collection/SeqViewLike$class.sorted:(Lscala/collection/SeqViewLike;Lscala/math/Ordering;)Lscala/collection/SeqView;
       5: areturn

  public scala.collection.SeqView sortWith(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // Method scala/collection/SeqViewLike$class.sortWith:(Lscala/collection/SeqViewLike;Lscala/Function2;)Lscala/collection/SeqView;
       5: areturn

  public scala.collection.SeqView sortBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #209                // Method scala/collection/SeqViewLike$class.sortBy:(Lscala/collection/SeqViewLike;Lscala/Function1;Lscala/math/Ordering;)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.Iterator<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> combinations(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #214                // Method scala/collection/SeqViewLike$class.combinations:(Lscala/collection/SeqViewLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> permutations();
    Code:
       0: aload_0
       1: invokestatic  #219                // Method scala/collection/SeqViewLike$class.permutations:(Lscala/collection/SeqViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.SeqView distinct();
    Code:
       0: aload_0
       1: invokestatic  #222                // Method scala/collection/SeqViewLike$class.distinct:(Lscala/collection/SeqViewLike;)Lscala/collection/SeqView;
       4: areturn

  public scala.collection.IterableView drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #229                // Method scala/collection/IterableViewLike$class.drop:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.IterableView take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #232                // Method scala/collection/IterableViewLike$class.take:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #237                // Method scala/collection/IterableViewLike$class.zip:(Lscala/collection/IterableViewLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // Method scala/collection/IterableViewLike$class.zipWithIndex:(Lscala/collection/IterableViewLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #246                // Method scala/collection/IterableViewLike$class.zipAll:(Lscala/collection/IterableViewLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public scala.collection.Iterator<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #252                // Method scala/collection/IterableViewLike$class.grouped:(Lscala/collection/IterableViewLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #258                // Method scala/collection/IterableViewLike$class.sliding:(Lscala/collection/IterableViewLike;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #261                // Method scala/collection/IterableViewLike$class.sliding:(Lscala/collection/IterableViewLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.IterableView dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #264                // Method scala/collection/IterableViewLike$class.dropRight:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.IterableView takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #267                // Method scala/collection/IterableViewLike$class.takeRight:(Lscala/collection/IterableViewLike;I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.TraversableView scala$collection$TraversableViewLike$$super$tail();
    Code:
       0: aload_0
       1: invokestatic  #275                // Method scala/collection/TraversableLike$class.tail:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: checkcast     #277                // class scala/collection/TraversableView
       7: areturn

  public java.lang.String viewIdentifier();
    Code:
       0: aload_0
       1: invokestatic  #283                // Method scala/collection/TraversableViewLike$class.viewIdentifier:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String viewIdString();
    Code:
       0: aload_0
       1: invokestatic  #286                // Method scala/collection/TraversableViewLike$class.viewIdString:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public java.lang.String viewToString();
    Code:
       0: aload_0
       1: invokestatic  #289                // Method scala/collection/TraversableViewLike$class.viewToString:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.Builder<A, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #294                // Method scala/collection/TraversableViewLike$class.newBuilder:(Lscala/collection/TraversableViewLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #299                // Method scala/collection/TraversableViewLike$class.$plus$plus:(Lscala/collection/TraversableViewLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #304                // Method scala/collection/TraversableViewLike$class.map:(Lscala/collection/TraversableViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That collect(scala.PartialFunction<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #309                // Method scala/collection/TraversableViewLike$class.collect:(Lscala/collection/TraversableViewLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<A, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #314                // Method scala/collection/TraversableViewLike$class.flatMap:(Lscala/collection/TraversableViewLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B> scala.collection.TraversableViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<B> flatten(scala.Function1<A, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #319                // Method scala/collection/TraversableViewLike$class.flatten:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableView filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #325                // Method scala/collection/TraversableViewLike$class.filter:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #328                // Method scala/collection/TraversableViewLike$class.withFilter:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> partition(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // Method scala/collection/TraversableViewLike$class.partition:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.TraversableView init();
    Code:
       0: aload_0
       1: invokestatic  #337                // Method scala/collection/TraversableViewLike$class.init:(Lscala/collection/TraversableViewLike;)Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.TraversableView slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #342                // Method scala/collection/TraversableViewLike$class.slice:(Lscala/collection/TraversableViewLike;II)Lscala/collection/TraversableView;
       6: areturn

  public scala.collection.TraversableView dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #346                // Method scala/collection/TraversableViewLike$class.dropWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.TraversableView takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #349                // Method scala/collection/TraversableViewLike$class.takeWhile:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> span(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #352                // Method scala/collection/TraversableViewLike$class.span:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #357                // Method scala/collection/TraversableViewLike$class.splitAt:(Lscala/collection/TraversableViewLike;I)Lscala/Tuple2;
       5: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #362                // Method scala/collection/TraversableViewLike$class.scanLeft:(Lscala/collection/TraversableViewLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<A, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #367                // Method scala/collection/TraversableViewLike$class.scanRight:(Lscala/collection/TraversableViewLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> groupBy(scala.Function1<A, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #372                // Method scala/collection/TraversableViewLike$class.groupBy:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <A1, A2> scala.Tuple2<scala.collection.TraversableViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A1>, scala.collection.TraversableViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A2>> unzip(scala.Function1<A, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // Method scala/collection/TraversableViewLike$class.unzip:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.TraversableViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A1>, scala.collection.TraversableViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A2>, scala.collection.TraversableViewLike<A, scala.collection.immutable.Stream<A>, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>>.Transformed<A3>> unzip3(scala.Function1<A, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #381                // Method scala/collection/TraversableViewLike$class.unzip3:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.TraversableView filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #385                // Method scala/collection/TraversableViewLike$class.filterNot:(Lscala/collection/TraversableViewLike;Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> inits();
    Code:
       0: aload_0
       1: invokestatic  #389                // Method scala/collection/TraversableViewLike$class.inits:(Lscala/collection/TraversableViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> tails();
    Code:
       0: aload_0
       1: invokestatic  #392                // Method scala/collection/TraversableViewLike$class.tails:(Lscala/collection/TraversableViewLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.TraversableView tail();
    Code:
       0: aload_0
       1: invokestatic  #394                // Method scala/collection/TraversableViewLike$class.tail:(Lscala/collection/TraversableViewLike;)Lscala/collection/TraversableView;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #397                // Method scala/collection/TraversableViewLike$class.toString:(Lscala/collection/TraversableViewLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.Seq<A> thisSeq();
    Code:
       0: aload_0
       1: invokestatic  #404                // Method scala/collection/ViewMkString$class.thisSeq:(Lscala/collection/ViewMkString;)Lscala/collection/Seq;
       4: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #408                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;)Ljava/lang/String;
       4: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #412                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #418                // Method scala/collection/ViewMkString$class.mkString:(Lscala/collection/ViewMkString;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #425                // Method scala/collection/ViewMkString$class.addString:(Lscala/collection/ViewMkString;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.generic.GenericCompanion<scala.collection.Seq> companion();
    Code:
       0: aload_0
       1: invokestatic  #434                // Method scala/collection/Seq$class.companion:(Lscala/collection/Seq;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.Seq<A> seq();
    Code:
       0: aload_0
       1: invokestatic  #438                // Method scala/collection/Seq$class.seq:(Lscala/collection/Seq;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<A> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #444                // Method scala/collection/SeqLike$class.thisCollection:(Lscala/collection/SeqLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #449                // Method scala/collection/SeqLike$class.toCollection:(Lscala/collection/SeqLike;Ljava/lang/Object;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.parallel.Combiner<A, scala.collection.parallel.ParSeq<A>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #454                // Method scala/collection/SeqLike$class.parCombiner:(Lscala/collection/SeqLike;)Lscala/collection/parallel/Combiner;
       4: areturn

  public int lengthCompare(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #459                // Method scala/collection/SeqLike$class.lengthCompare:(Lscala/collection/SeqLike;I)I
       5: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #464                // Method scala/collection/SeqLike$class.isEmpty:(Lscala/collection/SeqLike;)Z
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #468                // Method scala/collection/SeqLike$class.size:(Lscala/collection/SeqLike;)I
       4: ireturn

  public int segmentLength(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #473                // Method scala/collection/SeqLike$class.segmentLength:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #476                // Method scala/collection/SeqLike$class.indexWhere:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #479                // Method scala/collection/SeqLike$class.lastIndexWhere:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public scala.collection.Iterator<A> reverseIterator();
    Code:
       0: aload_0
       1: invokestatic  #483                // Method scala/collection/SeqLike$class.reverseIterator:(Lscala/collection/SeqLike;)Lscala/collection/Iterator;
       4: areturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #488                // Method scala/collection/SeqLike$class.startsWith:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)Z
       6: ireturn

  public <B> boolean endsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #494                // Method scala/collection/SeqLike$class.endsWith:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <B> int indexOfSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #499                // Method scala/collection/SeqLike$class.indexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)I
       5: ireturn

  public <B> int indexOfSlice(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #503                // Method scala/collection/SeqLike$class.indexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)I
       6: ireturn

  public <B> int lastIndexOfSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #506                // Method scala/collection/SeqLike$class.lastIndexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)I
       5: ireturn

  public <B> int lastIndexOfSlice(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #508                // Method scala/collection/SeqLike$class.lastIndexOfSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)I
       6: ireturn

  public <B> boolean containsSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #511                // Method scala/collection/SeqLike$class.containsSlice:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <A1> boolean contains(A1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #516                // Method scala/collection/SeqLike$class.contains:(Lscala/collection/SeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public <B> boolean corresponds(scala.collection.GenSeq<B>, scala.Function2<A, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #521                // Method scala/collection/SeqLike$class.corresponds:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Seq<A> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #524                // Method scala/collection/SeqLike$class.toSeq:(Lscala/collection/SeqLike;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.Range indices();
    Code:
       0: aload_0
       1: invokestatic  #529                // Method scala/collection/SeqLike$class.indices:(Lscala/collection/SeqLike;)Lscala/collection/immutable/Range;
       4: areturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #532                // Method scala/collection/SeqLike$class.view:(Lscala/collection/SeqLike;)Lscala/collection/SeqView;
       4: areturn

  public scala.collection.SeqView<A, scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #536                // Method scala/collection/SeqLike$class.view:(Lscala/collection/SeqLike;II)Lscala/collection/SeqView;
       6: areturn

  public boolean isDefinedAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #543                // Method scala/collection/GenSeqLike$class.isDefinedAt:(Lscala/collection/GenSeqLike;I)Z
       5: ireturn

  public int prefixLength(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #549                // Method scala/collection/GenSeqLike$class.prefixLength:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #551                // Method scala/collection/GenSeqLike$class.indexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #556                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #560                // Method scala/collection/GenSeqLike$class.indexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int lastIndexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #563                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int lastIndexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #565                // Method scala/collection/GenSeqLike$class.lastIndexOf:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #567                // Method scala/collection/GenSeqLike$class.lastIndexWhere:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #570                // Method scala/collection/GenSeqLike$class.startsWith:(Lscala/collection/GenSeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #574                // Method scala/collection/GenSeqLike$class.hashCode:(Lscala/collection/GenSeqLike;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #578                // Method scala/collection/GenSeqLike$class.equals:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #585                // Method scala/collection/IterableLike$class.foreach:(Lscala/collection/IterableLike;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #590                // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #593                // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<A> find(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #598                // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #603                // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #608                // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<A> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #613                // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<A> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #617                // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public A head();
    Code:
       0: aload_0
       1: invokestatic  #621                // Method scala/collection/IterableLike$class.head:(Lscala/collection/IterableLike;)Ljava/lang/Object;
       4: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #626                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #631                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokestatic  #635                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #639                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.Seq<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #645                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #650                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #652                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #656                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #659                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #664                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #669                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.StreamView<A, scala.collection.immutable.Stream<A>>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #674                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.Option<A> headOption();
    Code:
       0: aload_0
       1: invokestatic  #680                // Method scala/collection/TraversableLike$class.headOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public A last();
    Code:
       0: aload_0
       1: invokestatic  #683                // Method scala/collection/TraversableLike$class.last:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<A> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #686                // Method scala/collection/TraversableLike$class.lastOption:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #691                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #697                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public scala.collection.Traversable<A> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #702                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, A, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #706                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #713                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<A> reversed();
    Code:
       0: aload_0
       1: invokestatic  #720                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #724                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #728                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #733                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #737                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #740                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #743                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #747                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #752                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #755                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #758                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #761                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #764                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, A, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #769                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #776                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #781                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> A min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #786                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #790                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A maxBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #795                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> A minBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #798                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #803                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #809                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #813                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #818                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<A> toList();
    Code:
       0: aload_0
       1: invokestatic  #823                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<A> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #828                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #833                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #838                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<A> toVector();
    Code:
       0: aload_0
       1: invokestatic  #843                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<A, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #848                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #854                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #858                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public <A1, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #865                // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<java.lang.Object, C> andThen(scala.Function1<A, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #870                // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<java.lang.Object, scala.Option<A>> lift();
    Code:
       0: aload_0
       1: invokestatic  #876                // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #881                // Method scala/PartialFunction$class.applyOrElse:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<java.lang.Object, java.lang.Object> runWith(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #888                // Method scala/PartialFunction$class.runWith:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #896                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #903                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #908                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #913                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #918                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #923                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #928                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #934                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #939                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #944                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #949                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #954                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #958                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #963                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #968                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #971                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #976                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #981                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #986                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #992                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #997                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1002               // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1007               // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1012               // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, A> compose(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1016               // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.collection.immutable.Stream<A> underlying();
    Code:
       0: aload_0
       1: getfield      #23                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #31                 // Field underlying:Lscala/collection/immutable/Stream;
      11: goto          18
      14: aload_0
      15: invokespecial #1019               // Method underlying$lzycompute:()Lscala/collection/immutable/Stream;
      18: areturn

  public scala.collection.Iterator<A> iterator();
    Code:
       0: aload_0
       1: getfield      #25                 // Field $outer:Lscala/collection/immutable/Stream;
       4: invokevirtual #1022               // Method scala/collection/immutable/Stream.iterator:()Lscala/collection/Iterator;
       7: areturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #25                 // Field $outer:Lscala/collection/immutable/Stream;
       4: invokevirtual #1025               // Method scala/collection/immutable/Stream.length:()I
       7: ireturn

  public A apply(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field $outer:Lscala/collection/immutable/Stream;
       4: iload_1
       5: invokevirtual #1029               // Method scala/collection/immutable/Stream.apply:(I)Ljava/lang/Object;
       8: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1031               // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1034               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1037               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #1040               // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1043               // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #1050               // Method isDefinedAt:(I)Z
       8: ireturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1052               // Method view:(II)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.IterableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1052               // Method view:(II)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #1055               // Method view:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.IterableView view();
    Code:
       0: aload_0
       1: invokevirtual #1055               // Method view:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1059               // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1062               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1062               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Seq;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1065               // Method thisCollection:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Iterable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1065               // Method thisCollection:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1068               // Method seq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1068               // Method seq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1068               // Method seq:()Lscala/collection/Seq;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #1070               // Method tail:()Lscala/collection/TraversableView;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1073               // Method filterNot:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1076               // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1078               // Method takeWhile:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1080               // Method dropWhile:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1082               // Method slice:(II)Lscala/collection/TraversableView;
       6: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #1084               // Method init:()Lscala/collection/TraversableView;
       4: areturn

  public scala.collection.generic.FilterMonadic withFilter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1087               // Method withFilter:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1089               // Method filter:(Lscala/Function1;)Lscala/collection/TraversableView;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1091               // Method flatten:(Lscala/Function1;)Lscala/collection/TraversableViewLike$Transformed;
       5: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1093               // Method takeRight:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1095               // Method dropRight:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1097               // Method take:(I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.TraversableView take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1097               // Method take:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1100               // Method drop:(I)Lscala/collection/IterableView;
       5: areturn

  public scala.collection.TraversableView drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1100               // Method drop:(I)Lscala/collection/IterableView;
       5: areturn

  public java.lang.Object distinct();
    Code:
       0: aload_0
       1: invokevirtual #1102               // Method distinct:()Lscala/collection/SeqView;
       4: areturn

  public java.lang.Object sortBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1104               // Method sortBy:(Lscala/Function1;Lscala/math/Ordering;)Lscala/collection/SeqView;
       6: areturn

  public java.lang.Object sortWith(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1106               // Method sortWith:(Lscala/Function2;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object sorted(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1108               // Method sorted:(Lscala/math/Ordering;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1111               // Method intersect:(Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1113               // Method diff:(Lscala/collection/GenSeq;)Lscala/collection/SeqView;
       5: areturn

  public java.lang.Object reverse();
    Code:
       0: aload_0
       1: invokevirtual #1115               // Method reverse:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.TraversableViewLike$Transformed newDropped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1118               // Method newDropped:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newDropped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1118               // Method newDropped:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1121               // Method newTaken:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newTaken(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1121               // Method newTaken:(I)Lscala/collection/SeqViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newPrepended(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1124               // Method newPrepended:(Ljava/lang/Object;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newPatched(int, scala.collection.GenSeq, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #1127               // Method newPatched:(ILscala/collection/GenSeq;I)Lscala/collection/immutable/StreamViewLike$Transformed;
       7: areturn

  public scala.collection.SeqViewLike$Transformed newReversed();
    Code:
       0: aload_0
       1: invokevirtual #1130               // Method newReversed:()Lscala/collection/immutable/StreamViewLike$Transformed;
       4: areturn

  public scala.collection.IterableViewLike$Transformed newZippedAll(scala.collection.GenIterable, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1133               // Method newZippedAll:(Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/StreamViewLike$Transformed;
       7: areturn

  public scala.collection.SeqViewLike$Transformed newZippedAll(scala.collection.GenIterable, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1133               // Method newZippedAll:(Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/StreamViewLike$Transformed;
       7: areturn

  public scala.collection.IterableViewLike$Transformed newZipped(scala.collection.GenIterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1137               // Method newZipped:(Lscala/collection/GenIterable;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newZipped(scala.collection.GenIterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1137               // Method newZipped:(Lscala/collection/GenIterable;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newTakenWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1140               // Method newTakenWhile:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newTakenWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1140               // Method newTakenWhile:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newTakenWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1140               // Method newTakenWhile:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newDroppedWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1144               // Method newDroppedWhile:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newDroppedWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1144               // Method newDroppedWhile:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newDroppedWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1144               // Method newDroppedWhile:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1147               // Method newSliced:(Lscala/collection/generic/SliceInterval;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1147               // Method newSliced:(Lscala/collection/generic/SliceInterval;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newSliced(scala.collection.generic.SliceInterval);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1147               // Method newSliced:(Lscala/collection/generic/SliceInterval;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newFiltered(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1151               // Method newFiltered:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newFiltered(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1151               // Method newFiltered:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newFiltered(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1151               // Method newFiltered:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newFlatMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1153               // Method newFlatMapped:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newFlatMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1153               // Method newFlatMapped:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newFlatMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1153               // Method newFlatMapped:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1155               // Method newMapped:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1155               // Method newMapped:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newMapped(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1155               // Method newMapped:(Lscala/Function1;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newAppended(scala.collection.GenTraversable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1158               // Method newAppended:(Lscala/collection/GenTraversable;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newAppended(scala.collection.GenTraversable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1158               // Method newAppended:(Lscala/collection/GenTraversable;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newAppended(scala.collection.GenTraversable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1158               // Method newAppended:(Lscala/collection/GenTraversable;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.TraversableViewLike$Transformed newForced(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1163               // Method newForced:(Lscala/Function0;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.IterableViewLike$Transformed newForced(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1163               // Method newForced:(Lscala/Function0;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public scala.collection.SeqViewLike$Transformed newForced(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1163               // Method newForced:(Lscala/Function0;)Lscala/collection/immutable/StreamViewLike$Transformed;
       5: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #1167               // Method apply:(I)Ljava/lang/Object;
       8: areturn

  public java.lang.Object underlying();
    Code:
       0: aload_0
       1: invokevirtual #1169               // Method underlying:()Lscala/collection/immutable/Stream;
       4: areturn

  public scala.collection.immutable.Stream$$anon$1(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #25                 // Field $outer:Lscala/collection/immutable/Stream;
      11: aload_0
      12: invokespecial #1174               // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #1177               // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      19: aload_0
      20: invokestatic  #1180               // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      23: aload_0
      24: invokestatic  #1183               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      27: aload_0
      28: invokestatic  #1186               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      31: aload_0
      32: invokestatic  #1189               // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      35: aload_0
      36: invokestatic  #1192               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      39: aload_0
      40: invokestatic  #1197               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      43: aload_0
      44: invokestatic  #1202               // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      47: aload_0
      48: invokestatic  #1207               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      51: aload_0
      52: invokestatic  #1210               // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      55: aload_0
      56: invokestatic  #1215               // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      59: aload_0
      60: invokestatic  #1218               // Method scala/collection/GenSeqLike$class.$init$:(Lscala/collection/GenSeqLike;)V
      63: aload_0
      64: invokestatic  #1223               // Method scala/collection/GenSeq$class.$init$:(Lscala/collection/GenSeq;)V
      67: aload_0
      68: invokestatic  #1226               // Method scala/collection/SeqLike$class.$init$:(Lscala/collection/SeqLike;)V
      71: aload_0
      72: invokestatic  #1229               // Method scala/collection/Seq$class.$init$:(Lscala/collection/Seq;)V
      75: aload_0
      76: invokestatic  #1232               // Method scala/collection/ViewMkString$class.$init$:(Lscala/collection/ViewMkString;)V
      79: aload_0
      80: invokestatic  #1235               // Method scala/collection/TraversableViewLike$class.$init$:(Lscala/collection/TraversableViewLike;)V
      83: aload_0
      84: invokestatic  #1238               // Method scala/collection/IterableViewLike$class.$init$:(Lscala/collection/IterableViewLike;)V
      87: aload_0
      88: invokestatic  #1241               // Method scala/collection/SeqViewLike$class.$init$:(Lscala/collection/SeqViewLike;)V
      91: aload_0
      92: invokestatic  #1244               // Method scala/collection/immutable/StreamViewLike$class.$init$:(Lscala/collection/immutable/StreamViewLike;)V
      95: return
}
