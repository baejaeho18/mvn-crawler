Compiled from "MapLike.scala"
public interface scala.collection.immutable.MapLike<A, B, This extends scala.collection.immutable.MapLike<A, B, This> & scala.collection.immutable.Map<A, B>> extends scala.collection.MapLike<A, B, This> {
  public abstract scala.collection.parallel.Combiner<scala.Tuple2<A, B>, scala.collection.parallel.immutable.ParMap<A, B>> parCombiner();

  public abstract <B1> scala.collection.immutable.Map<A, B1> updated(A, B1);

  public abstract <B1> scala.collection.immutable.Map<A, B1> $plus(scala.Tuple2<A, B1>);

  public abstract <B1> scala.collection.immutable.Map<A, B1> $plus(scala.Tuple2<A, B1>, scala.Tuple2<A, B1>, scala.collection.Seq<scala.Tuple2<A, B1>>);

  public abstract <B1> scala.collection.immutable.Map<A, B1> $plus$plus(scala.collection.GenTraversableOnce<scala.Tuple2<A, B1>>);

  public abstract scala.collection.immutable.Map<A, B> filterKeys(scala.Function1<A, java.lang.Object>);

  public abstract <C> scala.collection.immutable.Map<A, C> mapValues(scala.Function1<B, C>);

  public abstract scala.collection.immutable.Set<A> keySet();

  public abstract <C, That> That transform(scala.Function2<A, B, C>, scala.collection.generic.CanBuildFrom<This, scala.Tuple2<A, C>, That>);
}
