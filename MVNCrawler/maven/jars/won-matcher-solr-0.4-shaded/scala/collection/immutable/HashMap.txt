Compiled from "HashMap.scala"
public class scala.collection.immutable.HashMap<A, B> extends scala.collection.immutable.AbstractMap<A, B> implements scala.Serializable, scala.collection.CustomParallelizable<scala.Tuple2<A, B>, scala.collection.parallel.immutable.ParHashMap<A, B>> {
  public static final long serialVersionUID;

  public static java.lang.String bitString$default$2();
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: invokevirtual #23                 // Method scala/collection/immutable/HashMap$.bitString$default$2:()Ljava/lang/String;
       6: areturn

  public static int highestOneBit(int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: invokevirtual #27                 // Method scala/collection/immutable/HashMap$.highestOneBit:(I)I
       7: ireturn

  public static java.lang.String bitString(int, java.lang.String);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: aload_1
       5: invokevirtual #31                 // Method scala/collection/immutable/HashMap$.bitString:(ILjava/lang/String;)Ljava/lang/String;
       8: areturn

  public static scala.collection.immutable.IndexedSeq<java.lang.Object> bits(int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: invokevirtual #35                 // Method scala/collection/immutable/HashMap$.bits:(I)Lscala/collection/immutable/IndexedSeq;
       7: areturn

  public static int complement(int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: invokevirtual #38                 // Method scala/collection/immutable/HashMap$.complement:(I)I
       7: ireturn

  public static boolean shorter(int, int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: iload_1
       5: invokevirtual #42                 // Method scala/collection/immutable/HashMap$.shorter:(II)Z
       8: ireturn

  public static boolean unsignedCompare(int, int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: iload_1
       5: invokevirtual #45                 // Method scala/collection/immutable/HashMap$.unsignedCompare:(II)Z
       8: ireturn

  public static boolean hasMatch(int, int, int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #49                 // Method scala/collection/immutable/HashMap$.hasMatch:(III)Z
       9: ireturn

  public static int mask(int, int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: iload_1
       5: invokevirtual #53                 // Method scala/collection/immutable/HashMap$.mask:(II)I
       8: ireturn

  public static boolean zero(int, int);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: iload_0
       4: iload_1
       5: invokevirtual #56                 // Method scala/collection/immutable/HashMap$.zero:(II)Z
       8: ireturn

  public static <A, B> scala.collection.generic.CanBuildFrom<scala.collection.immutable.HashMap<?, ?>, scala.Tuple2<A, B>, scala.collection.immutable.HashMap<A, B>> canBuildFrom();
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: invokevirtual #60                 // Method scala/collection/immutable/HashMap$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       6: areturn

  public scala.collection.parallel.Combiner<scala.Tuple2<A, B>, scala.collection.parallel.immutable.ParHashMap<A, B>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method scala/collection/CustomParallelizable$class.parCombiner:(Lscala/collection/CustomParallelizable;)Lscala/collection/parallel/Combiner;
       4: areturn

  public int size();
    Code:
       0: iconst_0
       1: ireturn

  public scala.collection.immutable.HashMap<A, B> empty();
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: invokevirtual #79                 // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<A, B>> iterator();
    Code:
       0: getstatic     #86                 // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
       3: invokevirtual #88                 // Method scala/collection/Iterator$.empty:()Lscala/collection/Iterator;
       6: areturn

  public <U> void foreach(scala.Function1<scala.Tuple2<A, B>, U>);
    Code:
       0: return

  public scala.Option<B> get(A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #98                 // Method computeHash:(Ljava/lang/Object;)I
       7: iconst_0
       8: invokevirtual #102                // Method get0:(Ljava/lang/Object;II)Lscala/Option;
      11: areturn

  public <B1> scala.collection.immutable.HashMap<A, B1> updated(A, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #98                 // Method computeHash:(Ljava/lang/Object;)I
       7: iconst_0
       8: aload_2
       9: aconst_null
      10: aconst_null
      11: invokevirtual #110                // Method updated0:(Ljava/lang/Object;IILjava/lang/Object;Lscala/Tuple2;Lscala/collection/immutable/HashMap$Merger;)Lscala/collection/immutable/HashMap;
      14: areturn

  public <B1> scala.collection.immutable.HashMap<A, B1> $plus(scala.Tuple2<A, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #119                // Method scala/Tuple2._1:()Ljava/lang/Object;
       5: aload_0
       6: aload_1
       7: invokevirtual #119                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: invokevirtual #98                 // Method computeHash:(Ljava/lang/Object;)I
      13: iconst_0
      14: aload_1
      15: invokevirtual #122                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: aload_1
      19: aconst_null
      20: invokevirtual #110                // Method updated0:(Ljava/lang/Object;IILjava/lang/Object;Lscala/Tuple2;Lscala/collection/immutable/HashMap$Merger;)Lscala/collection/immutable/HashMap;
      23: areturn

  public <B1> scala.collection.immutable.HashMap<A, B1> $plus(scala.Tuple2<A, B1>, scala.Tuple2<A, B1>, scala.collection.Seq<scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;
       5: aload_2
       6: invokevirtual #127                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;
       9: aload_3
      10: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
      13: invokevirtual #60                 // Method scala/collection/immutable/HashMap$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      16: invokevirtual #131                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      19: checkcast     #2                  // class scala/collection/immutable/HashMap
      22: areturn

  public scala.collection.immutable.HashMap<A, B> $minus(A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #98                 // Method computeHash:(Ljava/lang/Object;)I
       7: iconst_0
       8: invokevirtual #141                // Method removed0:(Ljava/lang/Object;II)Lscala/collection/immutable/HashMap;
      11: areturn

  public scala.collection.immutable.HashMap<A, B> filter(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: aload_0
       4: invokevirtual #145                // Method size:()I
       7: istore_3
       8: astore_2
       9: getstatic     #150                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      12: getstatic     #155                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: iload_3
      16: bipush        6
      18: iadd
      19: istore        5
      21: astore        4
      23: iload         5
      25: sipush        224
      28: invokevirtual #158                // Method scala/runtime/RichInt$.min$extension:(II)I
      31: anewarray     #2                  // class scala/collection/immutable/HashMap
      34: astore        6
      36: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
      39: aload_0
      40: aload_1
      41: iconst_0
      42: iconst_0
      43: aload         6
      45: iconst_0
      46: invokevirtual #162                // Method filter0:(Lscala/Function1;ZI[Lscala/collection/immutable/HashMap;I)Lscala/collection/immutable/HashMap;
      49: astore        8
      51: astore        7
      53: aload         8
      55: ifnonnull     66
      58: aload         7
      60: invokevirtual #79                 // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
      63: goto          68
      66: aload         8
      68: areturn

  public scala.collection.immutable.HashMap<A, B> filterNot(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       3: aload_0
       4: invokevirtual #145                // Method size:()I
       7: istore_3
       8: astore_2
       9: getstatic     #150                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      12: getstatic     #155                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: iload_3
      16: bipush        6
      18: iadd
      19: istore        5
      21: astore        4
      23: iload         5
      25: sipush        224
      28: invokevirtual #158                // Method scala/runtime/RichInt$.min$extension:(II)I
      31: anewarray     #2                  // class scala/collection/immutable/HashMap
      34: astore        6
      36: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
      39: aload_0
      40: aload_1
      41: iconst_1
      42: iconst_0
      43: aload         6
      45: iconst_0
      46: invokevirtual #162                // Method filter0:(Lscala/Function1;ZI[Lscala/collection/immutable/HashMap;I)Lscala/collection/immutable/HashMap;
      49: astore        8
      51: astore        7
      53: aload         8
      55: ifnonnull     66
      58: aload         7
      60: invokevirtual #79                 // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
      63: goto          68
      66: aload         8
      68: areturn

  public scala.collection.immutable.HashMap<A, B> filter0(scala.Function1<scala.Tuple2<A, B>, java.lang.Object>, boolean, int, scala.collection.immutable.HashMap<A, B>[], int);
    Code:
       0: aconst_null
       1: areturn

  public int elemHashCode(A);
    Code:
       0: getstatic     #180                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_1
       4: invokevirtual #183                // Method scala/runtime/ScalaRunTime$.hash:(Ljava/lang/Object;)I
       7: ireturn

  public final int improve(int);
    Code:
       0: iload_1
       1: iload_1
       2: bipush        9
       4: ishl
       5: iconst_m1
       6: ixor
       7: iadd
       8: istore_2
       9: iload_2
      10: iload_2
      11: bipush        14
      13: iushr
      14: ixor
      15: istore_2
      16: iload_2
      17: iload_2
      18: iconst_4
      19: ishl
      20: iadd
      21: istore_2
      22: iload_2
      23: iload_2
      24: bipush        10
      26: iushr
      27: ixor
      28: ireturn

  public int computeHash(A);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #188                // Method elemHashCode:(Ljava/lang/Object;)I
       6: invokevirtual #190                // Method improve:(I)I
       9: ireturn

  public scala.Option<B> get0(A, int, int);
    Code:
       0: getstatic     #195                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public <B1> scala.collection.immutable.HashMap<A, B1> updated0(A, int, int, B1, scala.Tuple2<A, B1>, scala.collection.immutable.HashMap$Merger<A, B1>);
    Code:
       0: new           #197                // class scala/collection/immutable/HashMap$HashMap1
       3: dup
       4: aload_1
       5: iload_2
       6: aload         4
       8: aload         5
      10: invokespecial #201                // Method scala/collection/immutable/HashMap$HashMap1."<init>":(Ljava/lang/Object;ILjava/lang/Object;Lscala/Tuple2;)V
      13: areturn

  public scala.collection.immutable.HashMap<A, B> removed0(A, int, int);
    Code:
       0: aload_0
       1: areturn

  public java.lang.Object writeReplace();
    Code:
       0: new           #206                // class scala/collection/immutable/HashMap$SerializationProxy
       3: dup
       4: aload_0
       5: invokespecial #209                // Method scala/collection/immutable/HashMap$SerializationProxy."<init>":(Lscala/collection/immutable/HashMap;)V
       8: areturn

  public scala.collection.immutable.Seq<scala.collection.immutable.HashMap<A, B>> split();
    Code:
       0: getstatic     #216                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
       3: getstatic     #155                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: anewarray     #2                  // class scala/collection/immutable/HashMap
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: checkcast     #218                // class "[Ljava/lang/Object;"
      17: invokevirtual #222                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      20: invokevirtual #226                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      23: checkcast     #228                // class scala/collection/immutable/Seq
      26: areturn

  public <B1> scala.collection.immutable.HashMap<A, B1> merged(scala.collection.immutable.HashMap<A, B1>, scala.Function2<scala.Tuple2<A, B1>, scala.Tuple2<A, B1>, scala.Tuple2<A, B1>>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: getstatic     #21                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       6: aload_2
       7: invokevirtual #234                // Method scala/collection/immutable/HashMap$.scala$collection$immutable$HashMap$$liftMerger:(Lscala/Function2;)Lscala/collection/immutable/HashMap$Merger;
      10: invokevirtual #238                // Method merge0:(Lscala/collection/immutable/HashMap;ILscala/collection/immutable/HashMap$Merger;)Lscala/collection/immutable/HashMap;
      13: areturn

  public <B1> scala.collection.immutable.HashMap<A, B1> merge0(scala.collection.immutable.HashMap<A, B1>, int, scala.collection.immutable.HashMap$Merger<A, B1>);
    Code:
       0: aload_1
       1: areturn

  public scala.collection.parallel.immutable.ParHashMap<A, B> par();
    Code:
       0: getstatic     #248                // Field scala/collection/parallel/immutable/ParHashMap$.MODULE$:Lscala/collection/parallel/immutable/ParHashMap$;
       3: aload_0
       4: invokevirtual #252                // Method scala/collection/parallel/immutable/ParHashMap$.fromTrie:(Lscala/collection/immutable/HashMap;)Lscala/collection/parallel/immutable/ParHashMap;
       7: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #257                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #262                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #266                // Method repr:()Ljava/lang/Object;
       4: checkcast     #268                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #273                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #279                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #284                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #289                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #292                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #297                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable values();
    Code:
       0: aload_0
       1: invokevirtual #300                // Method values:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenIterable keys();
    Code:
       0: aload_0
       1: invokevirtual #303                // Method keys:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenSet keySet();
    Code:
       0: aload_0
       1: invokevirtual #308                // Method keySet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #308                // Method keySet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenMap mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #312                // Method mapValues:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.Map mapValues(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #312                // Method mapValues:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenMap filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #316                // Method filterKeys:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.Map filterKeys(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #316                // Method filterKeys:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.Map $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #320                // Method $plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #327                // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.Map seq();
    Code:
       0: aload_0
       1: invokevirtual #327                // Method seq:()Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokevirtual #331                // Method par:()Lscala/collection/parallel/immutable/ParHashMap;
       4: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #334                // Method filterNot:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
       5: areturn

  public scala.collection.Map filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #334                // Method filterNot:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #336                // Method filter:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
       5: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #339                // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #339                // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
       5: areturn

  public scala.collection.Map $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #339                // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #345                // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/HashMap;
       7: areturn

  public scala.collection.immutable.Map $plus(scala.Tuple2, scala.Tuple2, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #345                // Method $plus:(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/HashMap;
       7: areturn

  public scala.collection.GenMap $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;
       5: areturn

  public scala.collection.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;
       5: areturn

  public scala.collection.immutable.Map $plus(scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method $plus:(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;
       5: areturn

  public scala.collection.GenMap updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #355                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
       6: areturn

  public scala.collection.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #355                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
       6: areturn

  public scala.collection.immutable.Map updated(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #355                // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
       6: areturn

  public scala.collection.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #358                // Method empty:()Lscala/collection/immutable/HashMap;
       4: areturn

  public scala.collection.immutable.Map empty();
    Code:
       0: aload_0
       1: invokevirtual #358                // Method empty:()Lscala/collection/immutable/HashMap;
       4: areturn

  public scala.collection.immutable.HashMap();
    Code:
       0: aload_0
       1: invokespecial #361                // Method scala/collection/immutable/AbstractMap."<init>":()V
       4: aload_0
       5: invokestatic  #365                // Method scala/collection/CustomParallelizable$class.$init$:(Lscala/collection/CustomParallelizable;)V
       8: return
}
