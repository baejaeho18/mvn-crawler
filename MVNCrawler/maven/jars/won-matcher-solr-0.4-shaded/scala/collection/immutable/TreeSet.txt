Compiled from "TreeSet.scala"
public class scala.collection.immutable.TreeSet<A> implements scala.collection.immutable.SortedSet<A>, scala.Serializable {
  public static final long serialVersionUID;

  private final scala.collection.immutable.RedBlackTree$Tree<A, scala.runtime.BoxedUnit> tree;

  private final scala.math.Ordering<A> ordering;

  public static <A> scala.collection.mutable.Builder<A, scala.collection.immutable.TreeSet<A>> implicitBuilder(scala.math.Ordering<A>);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/TreeSet$.MODULE$:Lscala/collection/immutable/TreeSet$;
       3: aload_0
       4: invokevirtual #23                 // Method scala/collection/immutable/TreeSet$.implicitBuilder:(Lscala/math/Ordering;)Lscala/collection/mutable/Builder;
       7: areturn

  public static <A> scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<?>, A, scala.collection.immutable.TreeSet<A>> newCanBuildFrom(scala.math.Ordering<A>);
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/TreeSet$.MODULE$:Lscala/collection/immutable/TreeSet$;
       3: aload_0
       4: invokevirtual #27                 // Method scala/collection/immutable/TreeSet$.newCanBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
       7: areturn

  public boolean scala$collection$SortedSetLike$$super$subsetOf(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // Method scala/collection/GenSetLike$class.subsetOf:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Z
       5: ireturn

  public scala.collection.SortedSet keySet();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method scala/collection/SortedSetLike$class.keySet:(Lscala/collection/SortedSetLike;)Lscala/collection/SortedSet;
       4: areturn

  public boolean subsetOf(scala.collection.GenSet<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method scala/collection/SortedSetLike$class.subsetOf:(Lscala/collection/SortedSetLike;Lscala/collection/GenSet;)Z
       5: ireturn

  public scala.collection.Iterator<A> iteratorFrom(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method scala/collection/SortedSetLike$class.iteratorFrom:(Lscala/collection/SortedSetLike;Ljava/lang/Object;)Lscala/collection/Iterator;
       5: areturn

  public int compare(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // Method scala/collection/generic/Sorted$class.compare:(Lscala/collection/generic/Sorted;Ljava/lang/Object;Ljava/lang/Object;)I
       6: ireturn

  public boolean hasAll(scala.collection.Iterator<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method scala/collection/generic/Sorted$class.hasAll:(Lscala/collection/generic/Sorted;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.generic.GenericCompanion<scala.collection.immutable.Set> companion();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method scala/collection/immutable/Set$class.companion:(Lscala/collection/immutable/Set;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method scala/collection/immutable/Set$class.toSet:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Set<A> seq();
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method scala/collection/immutable/Set$class.seq:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.parallel.Combiner<A, scala.collection.parallel.immutable.ParSet<A>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #102                // Method scala/collection/immutable/Set$class.parCombiner:(Lscala/collection/immutable/Set;)Lscala/collection/parallel/Combiner;
       4: areturn

  public java.lang.Object scala$collection$SetLike$$super$map(scala.Function1, scala.collection.generic.CanBuildFrom);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #110                // Method scala/collection/TraversableLike$class.map:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.mutable.Builder<A, scala.collection.immutable.TreeSet<A>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #121                // Method scala/collection/SetLike$class.newBuilder:(Lscala/collection/SetLike;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.Seq<A> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method scala/collection/SetLike$class.toSeq:(Lscala/collection/SetLike;)Lscala/collection/Seq;
       4: areturn

  public <A1> scala.collection.mutable.Buffer<A1> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #131                // Method scala/collection/SetLike$class.toBuffer:(Lscala/collection/SetLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B, That> That map(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // Method scala/collection/SetLike$class.map:(Lscala/collection/SetLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.Set $plus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #139                // Method scala/collection/SetLike$class.$plus:(Lscala/collection/SetLike;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/Set;
       7: areturn

  public scala.collection.Set $plus$plus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #148                // Method scala/collection/SetLike$class.$plus$plus:(Lscala/collection/SetLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/Set;
       5: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #154                // Method scala/collection/SetLike$class.isEmpty:(Lscala/collection/SetLike;)Z
       4: ireturn

  public scala.collection.Set union(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #159                // Method scala/collection/SetLike$class.union:(Lscala/collection/SetLike;Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public scala.collection.Set diff(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #162                // Method scala/collection/SetLike$class.diff:(Lscala/collection/SetLike;Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeSet<A>> subsets(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #167                // Method scala/collection/SetLike$class.subsets:(Lscala/collection/SetLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeSet<A>> subsets();
    Code:
       0: aload_0
       1: invokestatic  #173                // Method scala/collection/SetLike$class.subsets:(Lscala/collection/SetLike;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #178                // Method scala/collection/SetLike$class.toString:(Lscala/collection/SetLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object, java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #185                // Method scala/collection/generic/Subtractable$class.$minus:(Lscala/collection/generic/Subtractable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Subtractable;
       7: areturn

  public scala.collection.generic.Subtractable $minus$minus(scala.collection.GenTraversableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // Method scala/collection/generic/Subtractable$class.$minus$minus:(Lscala/collection/generic/Subtractable;Lscala/collection/GenTraversableOnce;)Lscala/collection/generic/Subtractable;
       5: areturn

  public boolean apply(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #196                // Method scala/collection/GenSetLike$class.apply:(Lscala/collection/GenSetLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object intersect(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // Method scala/collection/GenSetLike$class.intersect:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $amp(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // Method scala/collection/GenSetLike$class.$amp:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $bar(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #208                // Method scala/collection/GenSetLike$class.$bar:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object $amp$tilde(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #211                // Method scala/collection/GenSetLike$class.$amp$tilde:(Lscala/collection/GenSetLike;Lscala/collection/GenSet;)Ljava/lang/Object;
       5: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // Method scala/collection/GenSetLike$class.equals:(Lscala/collection/GenSetLike;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #219                // Method scala/collection/GenSetLike$class.hashCode:(Lscala/collection/GenSetLike;)I
       4: ireturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #226                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #233                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #238                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #243                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #248                // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #253                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #258                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #264                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #269                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #274                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #279                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #284                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #289                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #294                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #299                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #304                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #309                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #314                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #319                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #324                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #329                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #334                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #339                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #344                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, java.lang.Object> compose(scala.Function1<A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #349                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <A> scala.Function1<A, A> andThen(scala.Function1<java.lang.Object, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #353                // Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.collection.Iterable<A> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #360                // Method scala/collection/IterableLike$class.thisCollection:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #365                // Method scala/collection/IterableLike$class.toCollection:(Lscala/collection/IterableLike;Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #371                // Method scala/collection/IterableLike$class.forall:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // Method scala/collection/IterableLike$class.exists:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<A> find(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // Method scala/collection/IterableLike$class.find:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #385                // Method scala/collection/IterableLike$class.foldRight:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #393                // Method scala/collection/IterableLike$class.reduceRight:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<A> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #396                // Method scala/collection/IterableLike$class.toIterable:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<A> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #400                // Method scala/collection/IterableLike$class.toIterator:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeSet<A>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #404                // Method scala/collection/IterableLike$class.grouped:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeSet<A>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #408                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeSet<A>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #412                // Method scala/collection/IterableLike$class.sliding:(Lscala/collection/IterableLike;II)Lscala/collection/Iterator;
       6: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #418                // Method scala/collection/IterableLike$class.copyToArray:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #423                // Method scala/collection/IterableLike$class.zip:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #429                // Method scala/collection/IterableLike$class.zipAll:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #436                // Method scala/collection/IterableLike$class.zipWithIndex:(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #441                // Method scala/collection/IterableLike$class.sameElements:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokestatic  #446                // Method scala/collection/IterableLike$class.toStream:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #450                // Method scala/collection/IterableLike$class.canEqual:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object view();
    Code:
       0: aload_0
       1: invokestatic  #455                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;)Lscala/collection/IterableView;
       4: areturn

  public scala.collection.IterableView<A, scala.collection.immutable.TreeSet<A>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #459                // Method scala/collection/IterableLike$class.view:(Lscala/collection/IterableLike;II)Lscala/collection/IterableView;
       6: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.immutable.Set<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #467                // Method scala/collection/generic/GenericTraversableTemplate$class.genericBuilder:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.immutable.Set<A1>, scala.collection.immutable.Set<A2>> unzip(scala.Function1<A, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #472                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.immutable.Set<A1>, scala.collection.immutable.Set<A2>, scala.collection.immutable.Set<A3>> unzip3(scala.Function1<A, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #478                // Method scala/collection/generic/GenericTraversableTemplate$class.unzip3:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #484                // Method scala/collection/generic/GenericTraversableTemplate$class.flatten:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #488                // Method scala/collection/generic/GenericTraversableTemplate$class.transpose:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #492                // Method scala/collection/TraversableLike$class.repr:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #496                // Method scala/collection/TraversableLike$class.isTraversableAgain:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #499                // Method scala/collection/TraversableLike$class.hasDefiniteSize:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // Method scala/collection/TraversableLike$class.$plus$plus:(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #508                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #513                // Method scala/collection/TraversableLike$class.$plus$plus$colon:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<A, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #517                // Method scala/collection/TraversableLike$class.flatMap:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #522                // Method scala/collection/TraversableLike$class.filter:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #525                // Method scala/collection/TraversableLike$class.filterNot:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // Method scala/collection/TraversableLike$class.collect:(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.immutable.TreeSet<A>, scala.collection.immutable.TreeSet<A>> partition(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #536                // Method scala/collection/TraversableLike$class.partition:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.immutable.TreeSet<A>> groupBy(scala.Function1<A, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #541                // Method scala/collection/TraversableLike$class.groupBy:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #546                // Method scala/collection/TraversableLike$class.scan:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #550                // Method scala/collection/TraversableLike$class.scanLeft:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<A, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.TreeSet<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #553                // Method scala/collection/TraversableLike$class.scanRight:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #558                // Method scala/collection/TraversableLike$class.sliceWithKnownDelta:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #564                // Method scala/collection/TraversableLike$class.sliceWithKnownBound:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeSet<A>> tails();
    Code:
       0: aload_0
       1: invokestatic  #568                // Method scala/collection/TraversableLike$class.tails:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.TreeSet<A>> inits();
    Code:
       0: aload_0
       1: invokestatic  #571                // Method scala/collection/TraversableLike$class.inits:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Traversable<A> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #576                // Method scala/collection/TraversableLike$class.toTraversable:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, A, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #580                // Method scala/collection/TraversableLike$class.to:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public scala.collection.generic.FilterMonadic<A, scala.collection.immutable.TreeSet<A>> withFilter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #585                // Method scala/collection/TraversableLike$class.withFilter:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #592                // Method scala/collection/Parallelizable$class.par:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<A> reversed();
    Code:
       0: aload_0
       1: invokestatic  #599                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #603                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #608                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #613                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #617                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #620                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #623                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #627                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #632                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #635                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #638                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #641                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #644                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, A, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #649                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #657                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #662                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> A min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #667                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #671                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A maxBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #676                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> A minBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #679                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #684                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #690                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #694                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #699                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<A> toList();
    Code:
       0: aload_0
       1: invokestatic  #704                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.IndexedSeq<A> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #709                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Vector<A> toVector();
    Code:
       0: aload_0
       1: invokestatic  #714                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<A, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #719                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #726                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #733                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #736                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #741                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #747                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #751                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public scala.math.Ordering<A> ordering();
    Code:
       0: aload_0
       1: getfield      #754                // Field ordering:Lscala/math/Ordering;
       4: areturn

  public java.lang.String stringPrefix();
    Code:
       0: ldc_w         #757                // String TreeSet
       3: areturn

  public int size();
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #767                // Method scala/collection/immutable/RedBlackTree$.count:(Lscala/collection/immutable/RedBlackTree$Tree;)I
      10: ireturn

  public A head();
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #772                // Method scala/collection/immutable/RedBlackTree$.smallest:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
      10: invokevirtual #777                // Method scala/collection/immutable/RedBlackTree$Tree.key:()Ljava/lang/Object;
      13: areturn

  public scala.Option<A> headOption();
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #782                // Method scala/collection/immutable/RedBlackTree$.isEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Z
      10: ifeq          19
      13: getstatic     #787                // Field scala/None$.MODULE$:Lscala/None$;
      16: goto          30
      19: new           #789                // class scala/Some
      22: dup
      23: aload_0
      24: invokevirtual #791                // Method head:()Ljava/lang/Object;
      27: invokespecial #794                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      30: areturn

  public A last();
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #800                // Method scala/collection/immutable/RedBlackTree$.greatest:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
      10: invokevirtual #777                // Method scala/collection/immutable/RedBlackTree$Tree.key:()Ljava/lang/Object;
      13: areturn

  public scala.Option<A> lastOption();
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: invokevirtual #782                // Method scala/collection/immutable/RedBlackTree$.isEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Z
      10: ifeq          19
      13: getstatic     #787                // Field scala/None$.MODULE$:Lscala/None$;
      16: goto          30
      19: new           #789                // class scala/Some
      22: dup
      23: aload_0
      24: invokevirtual #803                // Method last:()Ljava/lang/Object;
      27: invokespecial #794                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      30: areturn

  public scala.collection.immutable.TreeSet<A> tail();
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeSet
       3: dup
       4: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_0
      12: invokevirtual #808                // Method firstKey:()Ljava/lang/Object;
      15: aload_0
      16: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #814                // Method scala/collection/immutable/RedBlackTree$.delete:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      22: aload_0
      23: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      26: invokespecial #817                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      29: areturn

  public scala.collection.immutable.TreeSet<A> init();
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeSet
       3: dup
       4: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       7: aload_0
       8: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      11: aload_0
      12: invokevirtual #821                // Method lastKey:()Ljava/lang/Object;
      15: aload_0
      16: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #814                // Method scala/collection/immutable/RedBlackTree$.delete:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      22: aload_0
      23: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      26: invokespecial #817                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      29: areturn

  public scala.collection.immutable.TreeSet<A> drop(int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpgt     9
       5: aload_0
       6: goto          43
       9: iload_1
      10: aload_0
      11: invokevirtual #825                // Method size:()I
      14: if_icmplt     24
      17: aload_0
      18: invokevirtual #828                // Method empty:()Lscala/collection/immutable/TreeSet;
      21: goto          43
      24: aload_0
      25: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      28: aload_0
      29: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      32: iload_1
      33: aload_0
      34: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      37: invokevirtual #831                // Method scala/collection/immutable/RedBlackTree$.drop:(Lscala/collection/immutable/RedBlackTree$Tree;ILscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      40: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      43: areturn

  public scala.collection.immutable.TreeSet<A> take(int);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpgt     12
       5: aload_0
       6: invokevirtual #828                // Method empty:()Lscala/collection/immutable/TreeSet;
       9: goto          43
      12: iload_1
      13: aload_0
      14: invokevirtual #825                // Method size:()I
      17: if_icmplt     24
      20: aload_0
      21: goto          43
      24: aload_0
      25: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      28: aload_0
      29: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      32: iload_1
      33: aload_0
      34: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      37: invokevirtual #839                // Method scala/collection/immutable/RedBlackTree$.take:(Lscala/collection/immutable/RedBlackTree$Tree;ILscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      40: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      43: areturn

  public scala.collection.immutable.TreeSet<A> slice(int, int);
    Code:
       0: iload_2
       1: iload_1
       2: if_icmpgt     12
       5: aload_0
       6: invokevirtual #828                // Method empty:()Lscala/collection/immutable/TreeSet;
       9: goto          61
      12: iload_1
      13: iconst_0
      14: if_icmpgt     25
      17: aload_0
      18: iload_2
      19: invokevirtual #843                // Method take:(I)Lscala/collection/immutable/TreeSet;
      22: goto          61
      25: iload_2
      26: aload_0
      27: invokevirtual #825                // Method size:()I
      30: if_icmplt     41
      33: aload_0
      34: iload_1
      35: invokevirtual #845                // Method drop:(I)Lscala/collection/immutable/TreeSet;
      38: goto          61
      41: aload_0
      42: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      45: aload_0
      46: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      49: iload_1
      50: iload_2
      51: aload_0
      52: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      55: invokevirtual #848                // Method scala/collection/immutable/RedBlackTree$.slice:(Lscala/collection/immutable/RedBlackTree$Tree;IILscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      58: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      61: areturn

  public scala.collection.immutable.TreeSet<A> dropRight(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #825                // Method size:()I
       5: getstatic     #854                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       8: iload_1
       9: iconst_0
      10: invokevirtual #857                // Method scala/math/package$.max:(II)I
      13: isub
      14: invokevirtual #843                // Method take:(I)Lscala/collection/immutable/TreeSet;
      17: areturn

  public scala.collection.immutable.TreeSet<A> takeRight(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #825                // Method size:()I
       5: getstatic     #854                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       8: iload_1
       9: iconst_0
      10: invokevirtual #857                // Method scala/math/package$.max:(II)I
      13: isub
      14: invokevirtual #845                // Method drop:(I)Lscala/collection/immutable/TreeSet;
      17: areturn

  public scala.Tuple2<scala.collection.immutable.TreeSet<A>, scala.collection.immutable.TreeSet<A>> splitAt(int);
    Code:
       0: new           #862                // class scala/Tuple2
       3: dup
       4: aload_0
       5: iload_1
       6: invokevirtual #843                // Method take:(I)Lscala/collection/immutable/TreeSet;
       9: aload_0
      10: iload_1
      11: invokevirtual #845                // Method drop:(I)Lscala/collection/immutable/TreeSet;
      14: invokespecial #865                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      17: areturn

  private int countWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #869                // Method iterator:()Lscala/collection/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #874,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_1
      17: aload_3
      18: invokeinterface #877,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      23: invokeinterface #882,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: invokestatic  #887                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      31: ifeq          41
      34: iload_2
      35: iconst_1
      36: iadd
      37: istore_2
      38: goto          7
      41: iload_2
      42: ireturn

  public scala.collection.immutable.TreeSet<A> dropWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #893                // Method countWhile:(Lscala/Function1;)I
       6: invokevirtual #845                // Method drop:(I)Lscala/collection/immutable/TreeSet;
       9: areturn

  public scala.collection.immutable.TreeSet<A> takeWhile(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #893                // Method countWhile:(Lscala/Function1;)I
       6: invokevirtual #843                // Method take:(I)Lscala/collection/immutable/TreeSet;
       9: areturn

  public scala.Tuple2<scala.collection.immutable.TreeSet<A>, scala.collection.immutable.TreeSet<A>> span(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #893                // Method countWhile:(Lscala/Function1;)I
       6: invokevirtual #897                // Method splitAt:(I)Lscala/Tuple2;
       9: areturn

  private scala.collection.immutable.TreeSet<A> newSet(scala.collection.immutable.RedBlackTree$Tree<A, scala.runtime.BoxedUnit>);
    Code:
       0: new           #2                  // class scala/collection/immutable/TreeSet
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
       9: invokespecial #817                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
      12: areturn

  public scala.collection.immutable.TreeSet<A> empty();
    Code:
       0: getstatic     #21                 // Field scala/collection/immutable/TreeSet$.MODULE$:Lscala/collection/immutable/TreeSet$;
       3: aload_0
       4: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
       7: invokevirtual #901                // Method scala/collection/immutable/TreeSet$.empty:(Lscala/math/Ordering;)Lscala/collection/immutable/TreeSet;
      10: areturn

  public scala.collection.immutable.TreeSet<A> $plus(A);
    Code:
       0: aload_0
       1: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       4: aload_0
       5: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       8: aload_1
       9: getstatic     #908                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      12: iconst_0
      13: aload_0
      14: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      17: invokevirtual #912                // Method scala/collection/immutable/RedBlackTree$.update:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;ZLscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      20: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      23: areturn

  public scala.collection.immutable.TreeSet<A> insert(A);
    Code:
       0: getstatic     #918                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       6: aload_0
       7: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      10: aload_1
      11: aload_0
      12: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      15: invokevirtual #922                // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      18: ifeq          25
      21: iconst_0
      22: goto          26
      25: iconst_1
      26: invokevirtual #926                // Method scala/Predef$.assert:(Z)V
      29: aload_0
      30: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      33: aload_0
      34: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      37: aload_1
      38: getstatic     #908                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      41: iconst_0
      42: aload_0
      43: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      46: invokevirtual #912                // Method scala/collection/immutable/RedBlackTree$.update:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;ZLscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      49: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      52: areturn

  public scala.collection.immutable.TreeSet<A> $minus(A);
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: aload_0
       9: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      12: invokevirtual #922                // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      15: ifeq          40
      18: aload_0
      19: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      22: aload_0
      23: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
      26: aload_1
      27: aload_0
      28: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      31: invokevirtual #814                // Method scala/collection/immutable/RedBlackTree$.delete:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      34: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      37: goto          41
      40: aload_0
      41: areturn

  public boolean contains(A);
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: aload_0
       9: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      12: invokevirtual #922                // Method scala/collection/immutable/RedBlackTree$.contains:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
      15: ireturn

  public scala.collection.Iterator<A> iterator();
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
      10: invokevirtual #930                // Method scala/collection/immutable/RedBlackTree$.keysIterator$default$2:()Lscala/None$;
      13: aload_0
      14: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      17: invokevirtual #934                // Method scala/collection/immutable/RedBlackTree$.keysIterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      20: areturn

  public scala.collection.Iterator<A> keysIteratorFrom(A);
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: new           #789                // class scala/Some
      10: dup
      11: aload_1
      12: invokespecial #794                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      15: aload_0
      16: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      19: invokevirtual #934                // Method scala/collection/immutable/RedBlackTree$.keysIterator:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
      22: areturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       3: aload_0
       4: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       7: aload_1
       8: invokevirtual #941                // Method scala/collection/immutable/RedBlackTree$.foreachKey:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Function1;)V
      11: return

  public scala.collection.immutable.TreeSet<A> rangeImpl(scala.Option<A>, scala.Option<A>);
    Code:
       0: aload_0
       1: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       4: aload_0
       5: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       8: aload_1
       9: aload_2
      10: aload_0
      11: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      14: invokevirtual #946                // Method scala/collection/immutable/RedBlackTree$.rangeImpl:(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      17: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      20: areturn

  public scala.collection.immutable.TreeSet<A> range(A, A);
    Code:
       0: aload_0
       1: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       4: aload_0
       5: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       8: aload_1
       9: aload_2
      10: aload_0
      11: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      14: invokevirtual #952                // Method scala/collection/immutable/RedBlackTree$.range:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      17: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      20: areturn

  public scala.collection.immutable.TreeSet<A> from(A);
    Code:
       0: aload_0
       1: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       4: aload_0
       5: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       8: aload_1
       9: aload_0
      10: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      13: invokevirtual #954                // Method scala/collection/immutable/RedBlackTree$.from:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      16: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      19: areturn

  public scala.collection.immutable.TreeSet<A> to(A);
    Code:
       0: aload_0
       1: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       4: aload_0
       5: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       8: aload_1
       9: aload_0
      10: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      13: invokevirtual #956                // Method scala/collection/immutable/RedBlackTree$.to:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      16: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      19: areturn

  public scala.collection.immutable.TreeSet<A> until(A);
    Code:
       0: aload_0
       1: getstatic     #762                // Field scala/collection/immutable/RedBlackTree$.MODULE$:Lscala/collection/immutable/RedBlackTree$;
       4: aload_0
       5: getfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       8: aload_1
       9: aload_0
      10: invokevirtual #810                // Method ordering:()Lscala/math/Ordering;
      13: invokevirtual #958                // Method scala/collection/immutable/RedBlackTree$.until:(Lscala/collection/immutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/immutable/RedBlackTree$Tree;
      16: invokespecial #835                // Method newSet:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/TreeSet;
      19: areturn

  public A firstKey();
    Code:
       0: aload_0
       1: invokevirtual #791                // Method head:()Ljava/lang/Object;
       4: areturn

  public A lastKey();
    Code:
       0: aload_0
       1: invokevirtual #803                // Method last:()Ljava/lang/Object;
       4: areturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #961                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #964                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #967                // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.generic.Subtractable repr();
    Code:
       0: aload_0
       1: invokevirtual #970                // Method repr:()Ljava/lang/Object;
       4: checkcast     #972                // class scala/collection/generic/Subtractable
       7: areturn

  public scala.collection.generic.Sorted repr();
    Code:
       0: aload_0
       1: invokevirtual #970                // Method repr:()Ljava/lang/Object;
       4: checkcast     #975                // class scala/collection/generic/Sorted
       7: areturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #978                // Method view:(II)Lscala/collection/IterableView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #981                // Method view:()Lscala/collection/IterableView;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #984                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #987                // Method toCollection:(Ljava/lang/Object;)Lscala/collection/Iterable;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #989                // Method thisCollection:()Lscala/collection/Iterable;
       4: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #991                // Method apply:(Ljava/lang/Object;)Z
       5: invokestatic  #995                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public java.lang.Object diff(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #997                // Method diff:(Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public java.lang.Object union(scala.collection.GenSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #999                // Method union:(Lscala/collection/GenSet;)Lscala/collection/Set;
       5: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1002               // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1005               // Method seq:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1005               // Method seq:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1005               // Method seq:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1005               // Method seq:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1005               // Method seq:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.Set seq();
    Code:
       0: aload_0
       1: invokevirtual #1005               // Method seq:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1011               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.generic.Sorted until(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1014               // Method until:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.SortedSet until(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1014               // Method until:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.generic.Sorted to(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1017               // Method to:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.generic.Sorted from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1019               // Method from:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.SortedSet from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1019               // Method from:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.generic.Sorted range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1022               // Method range:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       6: areturn

  public scala.collection.SortedSet range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1022               // Method range:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       6: areturn

  public scala.collection.generic.Sorted rangeImpl(scala.Option, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1026               // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/immutable/TreeSet;
       6: areturn

  public scala.collection.SortedSet rangeImpl(scala.Option, scala.Option);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1026               // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/immutable/TreeSet;
       6: areturn

  public java.lang.Object $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1029               // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.generic.Subtractable $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1029               // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.Set $minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1029               // Method $minus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public java.lang.Object $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1033               // Method $plus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.Set $plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1033               // Method $plus:(Ljava/lang/Object;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public scala.collection.Set empty();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method empty:()Lscala/collection/immutable/TreeSet;
       4: areturn

  public scala.collection.GenSet empty();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method empty:()Lscala/collection/immutable/TreeSet;
       4: areturn

  public scala.collection.SortedSet empty();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method empty:()Lscala/collection/immutable/TreeSet;
       4: areturn

  public scala.collection.immutable.SortedSet empty();
    Code:
       0: aload_0
       1: invokevirtual #828                // Method empty:()Lscala/collection/immutable/TreeSet;
       4: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1036               // Method takeWhile:(Lscala/Function1;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1038               // Method dropWhile:(Lscala/Function1;)Lscala/collection/immutable/TreeSet;
       5: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1041               // Method takeRight:(I)Lscala/collection/immutable/TreeSet;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1043               // Method dropRight:(I)Lscala/collection/immutable/TreeSet;
       5: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1045               // Method slice:(II)Lscala/collection/immutable/TreeSet;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #843                // Method take:(I)Lscala/collection/immutable/TreeSet;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #845                // Method drop:(I)Lscala/collection/immutable/TreeSet;
       5: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokevirtual #1047               // Method init:()Lscala/collection/immutable/TreeSet;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokevirtual #1049               // Method tail:()Lscala/collection/immutable/TreeSet;
       4: areturn

  private scala.collection.immutable.TreeSet(scala.collection.immutable.RedBlackTree$Tree<A, scala.runtime.BoxedUnit>, scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #764                // Field tree:Lscala/collection/immutable/RedBlackTree$Tree;
       5: aload_0
       6: aload_2
       7: putfield      #754                // Field ordering:Lscala/math/Ordering;
      10: aload_0
      11: invokespecial #1052               // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #1056               // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      18: aload_0
      19: invokestatic  #1059               // Method scala/collection/Parallelizable$class.$init$:(Lscala/collection/Parallelizable;)V
      22: aload_0
      23: invokestatic  #1062               // Method scala/collection/TraversableLike$class.$init$:(Lscala/collection/TraversableLike;)V
      26: aload_0
      27: invokestatic  #1065               // Method scala/collection/generic/GenericTraversableTemplate$class.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      30: aload_0
      31: invokestatic  #1070               // Method scala/collection/GenTraversable$class.$init$:(Lscala/collection/GenTraversable;)V
      34: aload_0
      35: invokestatic  #1075               // Method scala/collection/Traversable$class.$init$:(Lscala/collection/Traversable;)V
      38: aload_0
      39: invokestatic  #1080               // Method scala/collection/immutable/Traversable$class.$init$:(Lscala/collection/immutable/Traversable;)V
      42: aload_0
      43: invokestatic  #1085               // Method scala/collection/GenIterable$class.$init$:(Lscala/collection/GenIterable;)V
      46: aload_0
      47: invokestatic  #1088               // Method scala/collection/IterableLike$class.$init$:(Lscala/collection/IterableLike;)V
      50: aload_0
      51: invokestatic  #1093               // Method scala/collection/Iterable$class.$init$:(Lscala/collection/Iterable;)V
      54: aload_0
      55: invokestatic  #1098               // Method scala/collection/immutable/Iterable$class.$init$:(Lscala/collection/immutable/Iterable;)V
      58: aload_0
      59: invokestatic  #1100               // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      62: aload_0
      63: invokestatic  #1103               // Method scala/collection/GenSetLike$class.$init$:(Lscala/collection/GenSetLike;)V
      66: aload_0
      67: invokestatic  #1108               // Method scala/collection/generic/GenericSetTemplate$class.$init$:(Lscala/collection/generic/GenericSetTemplate;)V
      70: aload_0
      71: invokestatic  #1113               // Method scala/collection/GenSet$class.$init$:(Lscala/collection/GenSet;)V
      74: aload_0
      75: invokestatic  #1116               // Method scala/collection/generic/Subtractable$class.$init$:(Lscala/collection/generic/Subtractable;)V
      78: aload_0
      79: invokestatic  #1119               // Method scala/collection/SetLike$class.$init$:(Lscala/collection/SetLike;)V
      82: aload_0
      83: invokestatic  #1124               // Method scala/collection/Set$class.$init$:(Lscala/collection/Set;)V
      86: aload_0
      87: invokestatic  #1127               // Method scala/collection/immutable/Set$class.$init$:(Lscala/collection/immutable/Set;)V
      90: aload_0
      91: invokestatic  #1130               // Method scala/collection/generic/Sorted$class.$init$:(Lscala/collection/generic/Sorted;)V
      94: aload_0
      95: invokestatic  #1133               // Method scala/collection/SortedSetLike$class.$init$:(Lscala/collection/SortedSetLike;)V
      98: aload_0
      99: invokestatic  #1138               // Method scala/collection/SortedSet$class.$init$:(Lscala/collection/SortedSet;)V
     102: aload_0
     103: invokestatic  #1143               // Method scala/collection/immutable/SortedSet$class.$init$:(Lscala/collection/immutable/SortedSet;)V
     106: aload_2
     107: ifnonnull     121
     110: new           #1145               // class java/lang/NullPointerException
     113: dup
     114: ldc_w         #1147               // String ordering must not be null
     117: invokespecial #1150               // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: return

  public scala.collection.immutable.TreeSet(scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #817                // Method "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
       6: return
}
