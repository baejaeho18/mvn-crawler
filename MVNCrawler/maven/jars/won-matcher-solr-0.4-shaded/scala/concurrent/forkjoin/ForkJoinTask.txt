Compiled from "ForkJoinTask.java"
public abstract class scala.concurrent.forkjoin.ForkJoinTask<V> implements java.util.concurrent.Future<V>, java.io.Serializable {
  volatile int status;

  static final int DONE_MASK;

  static final int NORMAL;

  static final int CANCELLED;

  static final int EXCEPTIONAL;

  static final int SIGNAL;

  static final int SMASK;

  private static final scala.concurrent.forkjoin.ForkJoinTask$ExceptionNode[] exceptionTable;

  private static final java.util.concurrent.locks.ReentrantLock exceptionTableLock;

  private static final java.lang.ref.ReferenceQueue<java.lang.Object> exceptionTableRefQueue;

  private static final int EXCEPTION_MAP_CAPACITY;

  private static final long serialVersionUID;

  private static final sun.misc.Unsafe U;

  private static final long STATUS;

  public scala.concurrent.forkjoin.ForkJoinTask();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  private int setCompletion(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: dup
       5: istore_2
       6: ifge          11
       9: iload_2
      10: ireturn
      11: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      14: aload_0
      15: getstatic     #5                  // Field STATUS:J
      18: iload_2
      19: iload_2
      20: iload_1
      21: ior
      22: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      25: ifeq          0
      28: iload_2
      29: bipush        16
      31: iushr
      32: ifeq          55
      35: aload_0
      36: dup
      37: astore_3
      38: monitorenter
      39: aload_0
      40: invokevirtual #7                  // Method java/lang/Object.notifyAll:()V
      43: aload_3
      44: monitorexit
      45: goto          55
      48: astore        4
      50: aload_3
      51: monitorexit
      52: aload         4
      54: athrow
      55: iload_1
      56: ireturn
    Exception table:
       from    to  target type
          39    45    48   any
          48    52    48   any

  final int doExec();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: dup
       5: istore_1
       6: iflt          35
       9: aload_0
      10: invokevirtual #8                  // Method exec:()Z
      13: istore_2
      14: goto          24
      17: astore_3
      18: aload_0
      19: aload_3
      20: invokespecial #10                 // Method setExceptionalCompletion:(Ljava/lang/Throwable;)I
      23: ireturn
      24: iload_2
      25: ifeq          35
      28: aload_0
      29: ldc           #11                 // int -268435456
      31: invokespecial #12                 // Method setCompletion:(I)I
      34: istore_1
      35: iload_1
      36: ireturn
    Exception table:
       from    to  target type
           9    14    17   Class java/lang/Throwable

  final boolean trySetSignal();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: istore_1
       5: iload_1
       6: iflt          31
       9: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      12: aload_0
      13: getstatic     #5                  // Field STATUS:J
      16: iload_1
      17: iload_1
      18: ldc           #13                 // int 65536
      20: ior
      21: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private int externalAwaitDone();
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method scala/concurrent/forkjoin/ForkJoinPool.externalHelpJoin:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
       4: iconst_0
       5: istore_2
       6: aload_0
       7: getfield      #3                  // Field status:I
      10: dup
      11: istore_1
      12: iflt          77
      15: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      18: aload_0
      19: getstatic     #5                  // Field STATUS:J
      22: iload_1
      23: iload_1
      24: ldc           #13                 // int 65536
      26: ior
      27: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      30: ifeq          6
      33: aload_0
      34: dup
      35: astore_3
      36: monitorenter
      37: aload_0
      38: getfield      #3                  // Field status:I
      41: iflt          58
      44: aload_0
      45: invokevirtual #15                 // Method java/lang/Object.wait:()V
      48: goto          62
      51: astore        4
      53: iconst_1
      54: istore_2
      55: goto          62
      58: aload_0
      59: invokevirtual #7                  // Method java/lang/Object.notifyAll:()V
      62: aload_3
      63: monitorexit
      64: goto          74
      67: astore        5
      69: aload_3
      70: monitorexit
      71: aload         5
      73: athrow
      74: goto          6
      77: iload_2
      78: ifeq          87
      81: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      84: invokevirtual #18                 // Method java/lang/Thread.interrupt:()V
      87: iload_1
      88: ireturn
    Exception table:
       from    to  target type
          44    48    51   Class java/lang/InterruptedException
          37    64    67   any
          67    71    67   any

  private int externalInterruptibleAwaitDone() throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #19                 // Method java/lang/Thread.interrupted:()Z
       3: ifeq          14
       6: new           #16                 // class java/lang/InterruptedException
       9: dup
      10: invokespecial #20                 // Method java/lang/InterruptedException."<init>":()V
      13: athrow
      14: aload_0
      15: invokestatic  #14                 // Method scala/concurrent/forkjoin/ForkJoinPool.externalHelpJoin:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
      18: aload_0
      19: getfield      #3                  // Field status:I
      22: dup
      23: istore_1
      24: iflt          80
      27: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      30: aload_0
      31: getstatic     #5                  // Field STATUS:J
      34: iload_1
      35: iload_1
      36: ldc           #13                 // int 65536
      38: ior
      39: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      42: ifeq          18
      45: aload_0
      46: dup
      47: astore_2
      48: monitorenter
      49: aload_0
      50: getfield      #3                  // Field status:I
      53: iflt          63
      56: aload_0
      57: invokevirtual #15                 // Method java/lang/Object.wait:()V
      60: goto          67
      63: aload_0
      64: invokevirtual #7                  // Method java/lang/Object.notifyAll:()V
      67: aload_2
      68: monitorexit
      69: goto          77
      72: astore_3
      73: aload_2
      74: monitorexit
      75: aload_3
      76: athrow
      77: goto          18
      80: iload_1
      81: ireturn
    Exception table:
       from    to  target type
          49    69    72   any
          72    75    72   any

  private int doJoin();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: dup
       5: istore_1
       6: ifge          13
       9: iload_1
      10: goto          73
      13: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      16: dup
      17: astore_2
      18: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      21: ifeq          69
      24: aload_2
      25: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      28: dup
      29: astore_3
      30: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      33: dup
      34: astore        4
      36: aload_0
      37: invokevirtual #23                 // Method scala/concurrent/forkjoin/ForkJoinPool$WorkQueue.tryUnpush:(Lscala/concurrent/forkjoin/ForkJoinTask;)Z
      40: ifeq          56
      43: aload_0
      44: invokevirtual #24                 // Method doExec:()I
      47: dup
      48: istore_1
      49: ifge          56
      52: iload_1
      53: goto          73
      56: aload_3
      57: getfield      #25                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.pool:Lscala/concurrent/forkjoin/ForkJoinPool;
      60: aload         4
      62: aload_0
      63: invokevirtual #26                 // Method scala/concurrent/forkjoin/ForkJoinPool.awaitJoin:(Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;Lscala/concurrent/forkjoin/ForkJoinTask;)I
      66: goto          73
      69: aload_0
      70: invokespecial #27                 // Method externalAwaitDone:()I
      73: ireturn

  private int doInvoke();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method doExec:()I
       4: dup
       5: istore_1
       6: ifge          13
       9: iload_1
      10: goto          48
      13: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      16: dup
      17: astore_2
      18: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      21: ifeq          44
      24: aload_2
      25: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      28: dup
      29: astore_3
      30: getfield      #25                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.pool:Lscala/concurrent/forkjoin/ForkJoinPool;
      33: aload_3
      34: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      37: aload_0
      38: invokevirtual #26                 // Method scala/concurrent/forkjoin/ForkJoinPool.awaitJoin:(Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;Lscala/concurrent/forkjoin/ForkJoinTask;)I
      41: goto          48
      44: aload_0
      45: invokespecial #27                 // Method externalAwaitDone:()I
      48: ireturn

  final int recordExceptionalCompletion(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: dup
       5: istore_2
       6: iflt          122
       9: aload_0
      10: invokestatic  #28                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      13: istore_3
      14: getstatic     #29                 // Field exceptionTableLock:Ljava/util/concurrent/locks/ReentrantLock;
      17: astore        4
      19: aload         4
      21: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      24: invokestatic  #31                 // Method expungeStaleExceptions:()V
      27: getstatic     #32                 // Field exceptionTable:[Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      30: astore        5
      32: iload_3
      33: aload         5
      35: arraylength
      36: iconst_1
      37: isub
      38: iand
      39: istore        6
      41: aload         5
      43: iload         6
      45: aaload
      46: astore        7
      48: aload         7
      50: ifnonnull     75
      53: aload         5
      55: iload         6
      57: new           #33                 // class scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode
      60: dup
      61: aload_0
      62: aload_1
      63: aload         5
      65: iload         6
      67: aaload
      68: invokespecial #34                 // Method scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode."<init>":(Lscala/concurrent/forkjoin/ForkJoinTask;Ljava/lang/Throwable;Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;)V
      71: aastore
      72: goto          97
      75: aload         7
      77: invokevirtual #35                 // Method scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.get:()Ljava/lang/Object;
      80: aload_0
      81: if_acmpne     87
      84: goto          97
      87: aload         7
      89: getfield      #36                 // Field scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.next:Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      92: astore        7
      94: goto          48
      97: aload         4
      99: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     102: goto          115
     105: astore        8
     107: aload         4
     109: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     112: aload         8
     114: athrow
     115: aload_0
     116: ldc           #38                 // int -2147483648
     118: invokespecial #12                 // Method setCompletion:(I)I
     121: istore_2
     122: iload_2
     123: ireturn
    Exception table:
       from    to  target type
          24    97   105   any
         105   107   105   any

  private int setExceptionalCompletion(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method recordExceptionalCompletion:(Ljava/lang/Throwable;)I
       5: istore_2
       6: iload_2
       7: ldc           #11                 // int -268435456
       9: iand
      10: ldc           #38                 // int -2147483648
      12: if_icmpne     20
      15: aload_0
      16: aload_1
      17: invokevirtual #40                 // Method internalPropagateException:(Ljava/lang/Throwable;)V
      20: iload_2
      21: ireturn

  void internalPropagateException(java.lang.Throwable);
    Code:
       0: return

  static final void cancelIgnoringExceptions(scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: getfield      #3                  // Field status:I
       8: iflt          21
      11: aload_0
      12: iconst_0
      13: invokevirtual #41                 // Method cancel:(Z)Z
      16: pop
      17: goto          21
      20: astore_1
      21: return
    Exception table:
       from    to  target type
          11    17    20   Class java/lang/Throwable

  private void clearExceptionalCompletion();
    Code:
       0: aload_0
       1: invokestatic  #28                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: istore_1
       5: getstatic     #29                 // Field exceptionTableLock:Ljava/util/concurrent/locks/ReentrantLock;
       8: astore_2
       9: aload_2
      10: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      13: getstatic     #32                 // Field exceptionTable:[Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      16: astore_3
      17: iload_1
      18: aload_3
      19: arraylength
      20: iconst_1
      21: isub
      22: iand
      23: istore        4
      25: aload_3
      26: iload         4
      28: aaload
      29: astore        5
      31: aconst_null
      32: astore        6
      34: aload         5
      36: ifnull        90
      39: aload         5
      41: getfield      #36                 // Field scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.next:Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      44: astore        7
      46: aload         5
      48: invokevirtual #35                 // Method scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.get:()Ljava/lang/Object;
      51: aload_0
      52: if_acmpne     79
      55: aload         6
      57: ifnonnull     69
      60: aload_3
      61: iload         4
      63: aload         7
      65: aastore
      66: goto          90
      69: aload         6
      71: aload         7
      73: putfield      #36                 // Field scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.next:Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      76: goto          90
      79: aload         5
      81: astore        6
      83: aload         7
      85: astore        5
      87: goto          34
      90: invokestatic  #31                 // Method expungeStaleExceptions:()V
      93: aload_0
      94: iconst_0
      95: putfield      #3                  // Field status:I
      98: aload_2
      99: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     102: goto          114
     105: astore        8
     107: aload_2
     108: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     111: aload         8
     113: athrow
     114: return
    Exception table:
       from    to  target type
          13    98   105   any
         105   107   105   any

  private java.lang.Throwable getThrowableException();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ldc           #11                 // int -268435456
       6: iand
       7: ldc           #38                 // int -2147483648
       9: if_icmpeq     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: invokestatic  #28                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      18: istore_1
      19: getstatic     #29                 // Field exceptionTableLock:Ljava/util/concurrent/locks/ReentrantLock;
      22: astore_3
      23: aload_3
      24: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      27: invokestatic  #31                 // Method expungeStaleExceptions:()V
      30: getstatic     #32                 // Field exceptionTable:[Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      33: astore        4
      35: aload         4
      37: iload_1
      38: aload         4
      40: arraylength
      41: iconst_1
      42: isub
      43: iand
      44: aaload
      45: astore_2
      46: aload_2
      47: ifnull        66
      50: aload_2
      51: invokevirtual #35                 // Method scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.get:()Ljava/lang/Object;
      54: aload_0
      55: if_acmpeq     66
      58: aload_2
      59: getfield      #36                 // Field scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.next:Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      62: astore_2
      63: goto          46
      66: aload_3
      67: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      70: goto          82
      73: astore        5
      75: aload_3
      76: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      79: aload         5
      81: athrow
      82: aload_2
      83: ifnull        96
      86: aload_2
      87: getfield      #42                 // Field scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.ex:Ljava/lang/Throwable;
      90: dup
      91: astore        4
      93: ifnonnull     98
      96: aconst_null
      97: areturn
      98: aload         4
     100: areturn
    Exception table:
       from    to  target type
          27    66    73   any
          73    75    73   any

  private static void expungeStaleExceptions();
    Code:
       0: getstatic     #1                  // Field exceptionTableRefQueue:Ljava/lang/ref/ReferenceQueue;
       3: invokevirtual #43                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       6: dup
       7: astore_0
       8: ifnull        106
      11: aload_0
      12: instanceof    #33                 // class scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode
      15: ifeq          0
      18: aload_0
      19: checkcast     #33                 // class scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode
      22: invokevirtual #35                 // Method scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.get:()Ljava/lang/Object;
      25: checkcast     #44                 // class scala/concurrent/forkjoin/ForkJoinTask
      28: astore_1
      29: getstatic     #32                 // Field exceptionTable:[Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      32: astore_2
      33: aload_1
      34: invokestatic  #28                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      37: aload_2
      38: arraylength
      39: iconst_1
      40: isub
      41: iand
      42: istore_3
      43: aload_2
      44: iload_3
      45: aaload
      46: astore        4
      48: aconst_null
      49: astore        5
      51: aload         4
      53: ifnull        103
      56: aload         4
      58: getfield      #36                 // Field scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.next:Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      61: astore        6
      63: aload         4
      65: aload_0
      66: if_acmpne     92
      69: aload         5
      71: ifnonnull     82
      74: aload_2
      75: iload_3
      76: aload         6
      78: aastore
      79: goto          103
      82: aload         5
      84: aload         6
      86: putfield      #36                 // Field scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode.next:Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      89: goto          103
      92: aload         4
      94: astore        5
      96: aload         6
      98: astore        4
     100: goto          51
     103: goto          0
     106: return

  static final void helpExpungeStaleExceptions();
    Code:
       0: getstatic     #29                 // Field exceptionTableLock:Ljava/util/concurrent/locks/ReentrantLock;
       3: astore_0
       4: aload_0
       5: invokevirtual #45                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
       8: ifeq          28
      11: invokestatic  #31                 // Method expungeStaleExceptions:()V
      14: aload_0
      15: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      18: goto          28
      21: astore_1
      22: aload_0
      23: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      26: aload_1
      27: athrow
      28: return
    Exception table:
       from    to  target type
          11    14    21   any
          21    22    21   any

  static void rethrow(java.lang.Throwable);
    Code:
       0: aload_0
       1: ifnull        32
       4: aload_0
       5: instanceof    #46                 // class java/lang/Error
       8: ifeq          16
      11: aload_0
      12: checkcast     #46                 // class java/lang/Error
      15: athrow
      16: aload_0
      17: instanceof    #47                 // class java/lang/RuntimeException
      20: ifeq          28
      23: aload_0
      24: checkcast     #47                 // class java/lang/RuntimeException
      27: athrow
      28: aload_0
      29: invokestatic  #48                 // Method uncheckedThrow:(Ljava/lang/Throwable;)V
      32: return

  static <T extends java.lang.Throwable> void uncheckedThrow(java.lang.Throwable) throws T;
    Code:
       0: aload_0
       1: ifnull        6
       4: aload_0
       5: athrow
       6: return

  private void reportException(int);
    Code:
       0: iload_1
       1: ldc           #49                 // int -1073741824
       3: if_icmpne     14
       6: new           #50                 // class java/util/concurrent/CancellationException
       9: dup
      10: invokespecial #51                 // Method java/util/concurrent/CancellationException."<init>":()V
      13: athrow
      14: iload_1
      15: ldc           #38                 // int -2147483648
      17: if_icmpne     27
      20: aload_0
      21: invokespecial #52                 // Method getThrowableException:()Ljava/lang/Throwable;
      24: invokestatic  #53                 // Method rethrow:(Ljava/lang/Throwable;)V
      27: return

  public final scala.concurrent.forkjoin.ForkJoinTask<V> fork();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: dup
       4: astore_1
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          25
      11: aload_1
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      18: aload_0
      19: invokevirtual #54                 // Method scala/concurrent/forkjoin/ForkJoinPool$WorkQueue.push:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
      22: goto          32
      25: getstatic     #55                 // Field scala/concurrent/forkjoin/ForkJoinPool.common:Lscala/concurrent/forkjoin/ForkJoinPool;
      28: aload_0
      29: invokevirtual #56                 // Method scala/concurrent/forkjoin/ForkJoinPool.externalPush:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
      32: aload_0
      33: areturn

  public final V join();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method doJoin:()I
       4: ldc           #11                 // int -268435456
       6: iand
       7: dup
       8: istore_1
       9: ldc           #11                 // int -268435456
      11: if_icmpeq     19
      14: aload_0
      15: iload_1
      16: invokespecial #58                 // Method reportException:(I)V
      19: aload_0
      20: invokevirtual #59                 // Method getRawResult:()Ljava/lang/Object;
      23: areturn

  public final V invoke();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method doInvoke:()I
       4: ldc           #11                 // int -268435456
       6: iand
       7: dup
       8: istore_1
       9: ldc           #11                 // int -268435456
      11: if_icmpeq     19
      14: aload_0
      15: iload_1
      16: invokespecial #58                 // Method reportException:(I)V
      19: aload_0
      20: invokevirtual #59                 // Method getRawResult:()Ljava/lang/Object;
      23: areturn

  public static void invokeAll(scala.concurrent.forkjoin.ForkJoinTask<?>, scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method fork:()Lscala/concurrent/forkjoin/ForkJoinTask;
       4: pop
       5: aload_0
       6: invokespecial #60                 // Method doInvoke:()I
       9: ldc           #11                 // int -268435456
      11: iand
      12: dup
      13: istore_2
      14: ldc           #11                 // int -268435456
      16: if_icmpeq     24
      19: aload_0
      20: iload_2
      21: invokespecial #58                 // Method reportException:(I)V
      24: aload_1
      25: invokespecial #57                 // Method doJoin:()I
      28: ldc           #11                 // int -268435456
      30: iand
      31: dup
      32: istore_3
      33: ldc           #11                 // int -268435456
      35: if_icmpeq     43
      38: aload_1
      39: iload_3
      40: invokespecial #58                 // Method reportException:(I)V
      43: return

  public static void invokeAll(scala.concurrent.forkjoin.ForkJoinTask<?>...);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: arraylength
       4: iconst_1
       5: isub
       6: istore_2
       7: iload_2
       8: istore_3
       9: iload_3
      10: iflt          77
      13: aload_0
      14: iload_3
      15: aaload
      16: astore        4
      18: aload         4
      20: ifnonnull     38
      23: aload_1
      24: ifnonnull     71
      27: new           #62                 // class java/lang/NullPointerException
      30: dup
      31: invokespecial #63                 // Method java/lang/NullPointerException."<init>":()V
      34: astore_1
      35: goto          71
      38: iload_3
      39: ifeq          51
      42: aload         4
      44: invokevirtual #61                 // Method fork:()Lscala/concurrent/forkjoin/ForkJoinTask;
      47: pop
      48: goto          71
      51: aload         4
      53: invokespecial #60                 // Method doInvoke:()I
      56: ldc           #11                 // int -268435456
      58: if_icmpge     71
      61: aload_1
      62: ifnonnull     71
      65: aload         4
      67: invokevirtual #64                 // Method getException:()Ljava/lang/Throwable;
      70: astore_1
      71: iinc          3, -1
      74: goto          9
      77: iconst_1
      78: istore_3
      79: iload_3
      80: iload_2
      81: if_icmpgt     130
      84: aload_0
      85: iload_3
      86: aaload
      87: astore        4
      89: aload         4
      91: ifnull        124
      94: aload_1
      95: ifnull        108
      98: aload         4
     100: iconst_0
     101: invokevirtual #41                 // Method cancel:(Z)Z
     104: pop
     105: goto          124
     108: aload         4
     110: invokespecial #57                 // Method doJoin:()I
     113: ldc           #11                 // int -268435456
     115: if_icmpge     124
     118: aload         4
     120: invokevirtual #64                 // Method getException:()Ljava/lang/Throwable;
     123: astore_1
     124: iinc          3, 1
     127: goto          79
     130: aload_1
     131: ifnull        138
     134: aload_1
     135: invokestatic  #53                 // Method rethrow:(Ljava/lang/Throwable;)V
     138: return

  public static <T extends scala.concurrent.forkjoin.ForkJoinTask<?>> java.util.Collection<T> invokeAll(java.util.Collection<T>);
    Code:
       0: aload_0
       1: instanceof    #65                 // class java/util/RandomAccess
       4: ifeq          14
       7: aload_0
       8: instanceof    #66                 // class java/util/List
      11: ifne          37
      14: aload_0
      15: aload_0
      16: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.size:()I
      21: anewarray     #44                 // class scala/concurrent/forkjoin/ForkJoinTask
      24: invokeinterface #68,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      29: checkcast     #69                 // class "[Lscala/concurrent/forkjoin/ForkJoinTask;"
      32: invokestatic  #70                 // Method invokeAll:([Lscala/concurrent/forkjoin/ForkJoinTask;)V
      35: aload_0
      36: areturn
      37: aload_0
      38: checkcast     #66                 // class java/util/List
      41: astore_1
      42: aconst_null
      43: astore_2
      44: aload_1
      45: invokeinterface #71,  1           // InterfaceMethod java/util/List.size:()I
      50: iconst_1
      51: isub
      52: istore_3
      53: iload_3
      54: istore        4
      56: iload         4
      58: iflt          134
      61: aload_1
      62: iload         4
      64: invokeinterface #72,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      69: checkcast     #44                 // class scala/concurrent/forkjoin/ForkJoinTask
      72: astore        5
      74: aload         5
      76: ifnonnull     94
      79: aload_2
      80: ifnonnull     128
      83: new           #62                 // class java/lang/NullPointerException
      86: dup
      87: invokespecial #63                 // Method java/lang/NullPointerException."<init>":()V
      90: astore_2
      91: goto          128
      94: iload         4
      96: ifeq          108
      99: aload         5
     101: invokevirtual #61                 // Method fork:()Lscala/concurrent/forkjoin/ForkJoinTask;
     104: pop
     105: goto          128
     108: aload         5
     110: invokespecial #60                 // Method doInvoke:()I
     113: ldc           #11                 // int -268435456
     115: if_icmpge     128
     118: aload_2
     119: ifnonnull     128
     122: aload         5
     124: invokevirtual #64                 // Method getException:()Ljava/lang/Throwable;
     127: astore_2
     128: iinc          4, -1
     131: goto          56
     134: iconst_1
     135: istore        4
     137: iload         4
     139: iload_3
     140: if_icmpgt     197
     143: aload_1
     144: iload         4
     146: invokeinterface #72,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     151: checkcast     #44                 // class scala/concurrent/forkjoin/ForkJoinTask
     154: astore        5
     156: aload         5
     158: ifnull        191
     161: aload_2
     162: ifnull        175
     165: aload         5
     167: iconst_0
     168: invokevirtual #41                 // Method cancel:(Z)Z
     171: pop
     172: goto          191
     175: aload         5
     177: invokespecial #57                 // Method doJoin:()I
     180: ldc           #11                 // int -268435456
     182: if_icmpge     191
     185: aload         5
     187: invokevirtual #64                 // Method getException:()Ljava/lang/Throwable;
     190: astore_2
     191: iinc          4, 1
     194: goto          137
     197: aload_2
     198: ifnull        205
     201: aload_2
     202: invokestatic  #53                 // Method rethrow:(Ljava/lang/Throwable;)V
     205: aload_0
     206: areturn

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: ldc           #49                 // int -1073741824
       3: invokespecial #12                 // Method setCompletion:(I)I
       6: ldc           #11                 // int -268435456
       8: iand
       9: ldc           #49                 // int -1073741824
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public final boolean isDone();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ifge          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ldc           #11                 // int -268435456
       6: iand
       7: ldc           #49                 // int -1073741824
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public final boolean isCompletedAbnormally();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ldc           #11                 // int -268435456
       6: if_icmpge     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final boolean isCompletedNormally();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ldc           #11                 // int -268435456
       6: iand
       7: ldc           #11                 // int -268435456
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public final java.lang.Throwable getException();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ldc           #11                 // int -268435456
       6: iand
       7: istore_1
       8: iload_1
       9: ldc           #11                 // int -268435456
      11: if_icmplt     18
      14: aconst_null
      15: goto          38
      18: iload_1
      19: ldc           #49                 // int -1073741824
      21: if_icmpne     34
      24: new           #50                 // class java/util/concurrent/CancellationException
      27: dup
      28: invokespecial #51                 // Method java/util/concurrent/CancellationException."<init>":()V
      31: goto          38
      34: aload_0
      35: invokespecial #52                 // Method getThrowableException:()Ljava/lang/Throwable;
      38: areturn

  public void completeExceptionally(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: instanceof    #47                 // class java/lang/RuntimeException
       5: ifne          15
       8: aload_1
       9: instanceof    #46                 // class java/lang/Error
      12: ifeq          19
      15: aload_1
      16: goto          27
      19: new           #47                 // class java/lang/RuntimeException
      22: dup
      23: aload_1
      24: invokespecial #73                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      27: invokespecial #10                 // Method setExceptionalCompletion:(Ljava/lang/Throwable;)I
      30: pop
      31: return

  public void complete(V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method setRawResult:(Ljava/lang/Object;)V
       5: goto          16
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokespecial #10                 // Method setExceptionalCompletion:(Ljava/lang/Throwable;)I
      14: pop
      15: return
      16: aload_0
      17: ldc           #11                 // int -268435456
      19: invokespecial #12                 // Method setCompletion:(I)I
      22: pop
      23: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Throwable

  public final void quietlyComplete();
    Code:
       0: aload_0
       1: ldc           #11                 // int -268435456
       3: invokespecial #12                 // Method setCompletion:(I)I
       6: pop
       7: return

  public final V get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       6: ifeq          16
       9: aload_0
      10: invokespecial #57                 // Method doJoin:()I
      13: goto          20
      16: aload_0
      17: invokespecial #75                 // Method externalInterruptibleAwaitDone:()I
      20: istore_1
      21: iload_1
      22: ldc           #11                 // int -268435456
      24: iand
      25: dup
      26: istore_1
      27: ldc           #49                 // int -1073741824
      29: if_icmpne     40
      32: new           #50                 // class java/util/concurrent/CancellationException
      35: dup
      36: invokespecial #51                 // Method java/util/concurrent/CancellationException."<init>":()V
      39: athrow
      40: iload_1
      41: ldc           #38                 // int -2147483648
      43: if_icmpne     64
      46: aload_0
      47: invokespecial #52                 // Method getThrowableException:()Ljava/lang/Throwable;
      50: dup
      51: astore_2
      52: ifnull        64
      55: new           #76                 // class java/util/concurrent/ExecutionException
      58: dup
      59: aload_2
      60: invokespecial #77                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      63: athrow
      64: aload_0
      65: invokevirtual #59                 // Method getRawResult:()Ljava/lang/Object;
      68: areturn

  public final V get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: invokestatic  #19                 // Method java/lang/Thread.interrupted:()Z
       3: ifeq          14
       6: new           #16                 // class java/lang/InterruptedException
       9: dup
      10: invokespecial #20                 // Method java/lang/InterruptedException."<init>":()V
      13: athrow
      14: aload_3
      15: lload_1
      16: invokevirtual #78                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      19: lstore        7
      21: aload_0
      22: getfield      #3                  // Field status:I
      25: dup
      26: istore        4
      28: iflt          332
      31: lload         7
      33: lconst_0
      34: lcmp
      35: ifle          332
      38: invokestatic  #79                 // Method java/lang/System.nanoTime:()J
      41: lload         7
      43: ladd
      44: lstore        9
      46: aconst_null
      47: astore        11
      49: aconst_null
      50: astore        12
      52: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      55: astore        13
      57: aload         13
      59: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      62: ifeq          97
      65: aload         13
      67: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      70: astore        14
      72: aload         14
      74: getfield      #25                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.pool:Lscala/concurrent/forkjoin/ForkJoinPool;
      77: astore        11
      79: aload         14
      81: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      84: astore        12
      86: aload         11
      88: aload         12
      90: aload_0
      91: invokevirtual #80                 // Method scala/concurrent/forkjoin/ForkJoinPool.helpJoinOnce:(Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;Lscala/concurrent/forkjoin/ForkJoinTask;)V
      94: goto          101
      97: aload_0
      98: invokestatic  #14                 // Method scala/concurrent/forkjoin/ForkJoinPool.externalHelpJoin:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
     101: iconst_0
     102: istore        14
     104: iconst_0
     105: istore        15
     107: aload_0
     108: getfield      #3                  // Field status:I
     111: dup
     112: istore        4
     114: iflt          281
     117: aload         12
     119: ifnull        137
     122: aload         12
     124: getfield      #81                 // Field scala/concurrent/forkjoin/ForkJoinPool$WorkQueue.qlock:I
     127: ifge          137
     130: aload_0
     131: invokestatic  #82                 // Method cancelIgnoringExceptions:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
     134: goto          107
     137: iload         14
     139: ifne          161
     142: aload         11
     144: ifnull        155
     147: aload         11
     149: invokevirtual #83                 // Method scala/concurrent/forkjoin/ForkJoinPool.tryCompensate:()Z
     152: ifeq          107
     155: iconst_1
     156: istore        14
     158: goto          107
     161: getstatic     #84                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     164: lload         7
     166: invokevirtual #85                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     169: dup2
     170: lstore        5
     172: lconst_0
     173: lcmp
     174: ifle          249
     177: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
     180: aload_0
     181: getstatic     #5                  // Field STATUS:J
     184: iload         4
     186: iload         4
     188: ldc           #13                 // int 65536
     190: ior
     191: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
     194: ifeq          249
     197: aload_0
     198: dup
     199: astore        16
     201: monitorenter
     202: aload_0
     203: getfield      #3                  // Field status:I
     206: iflt          231
     209: aload_0
     210: lload         5
     212: invokevirtual #86                 // Method java/lang/Object.wait:(J)V
     215: goto          235
     218: astore        17
     220: aload         11
     222: ifnonnull     228
     225: iconst_1
     226: istore        15
     228: goto          235
     231: aload_0
     232: invokevirtual #7                  // Method java/lang/Object.notifyAll:()V
     235: aload         16
     237: monitorexit
     238: goto          249
     241: astore        18
     243: aload         16
     245: monitorexit
     246: aload         18
     248: athrow
     249: aload_0
     250: getfield      #3                  // Field status:I
     253: dup
     254: istore        4
     256: iflt          281
     259: iload         15
     261: ifne          281
     264: lload         9
     266: invokestatic  #79                 // Method java/lang/System.nanoTime:()J
     269: lsub
     270: dup2
     271: lstore        7
     273: lconst_0
     274: lcmp
     275: ifgt          107
     278: goto          281
     281: aload         11
     283: ifnull        319
     286: iload         14
     288: ifeq          319
     291: aload         11
     293: invokevirtual #87                 // Method scala/concurrent/forkjoin/ForkJoinPool.incrementActiveCount:()V
     296: goto          319
     299: astore        19
     301: aload         11
     303: ifnull        316
     306: iload         14
     308: ifeq          316
     311: aload         11
     313: invokevirtual #87                 // Method scala/concurrent/forkjoin/ForkJoinPool.incrementActiveCount:()V
     316: aload         19
     318: athrow
     319: iload         15
     321: ifeq          332
     324: new           #16                 // class java/lang/InterruptedException
     327: dup
     328: invokespecial #20                 // Method java/lang/InterruptedException."<init>":()V
     331: athrow
     332: iload         4
     334: ldc           #11                 // int -268435456
     336: iand
     337: dup
     338: istore        4
     340: ldc           #11                 // int -268435456
     342: if_icmpeq     395
     345: iload         4
     347: ldc           #49                 // int -1073741824
     349: if_icmpne     360
     352: new           #50                 // class java/util/concurrent/CancellationException
     355: dup
     356: invokespecial #51                 // Method java/util/concurrent/CancellationException."<init>":()V
     359: athrow
     360: iload         4
     362: ldc           #38                 // int -2147483648
     364: if_icmpeq     375
     367: new           #88                 // class java/util/concurrent/TimeoutException
     370: dup
     371: invokespecial #89                 // Method java/util/concurrent/TimeoutException."<init>":()V
     374: athrow
     375: aload_0
     376: invokespecial #52                 // Method getThrowableException:()Ljava/lang/Throwable;
     379: dup
     380: astore        9
     382: ifnull        395
     385: new           #76                 // class java/util/concurrent/ExecutionException
     388: dup
     389: aload         9
     391: invokespecial #77                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
     394: athrow
     395: aload_0
     396: invokevirtual #59                 // Method getRawResult:()Ljava/lang/Object;
     399: areturn
    Exception table:
       from    to  target type
         209   215   218   Class java/lang/InterruptedException
         202   238   241   any
         241   246   241   any
         107   281   299   any
         299   301   299   any

  public final void quietlyJoin();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method doJoin:()I
       4: pop
       5: return

  public final void quietlyInvoke();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method doInvoke:()I
       4: pop
       5: return

  public static void helpQuiesce();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: dup
       4: astore_0
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          30
      11: aload_0
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: astore_1
      16: aload_1
      17: getfield      #25                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.pool:Lscala/concurrent/forkjoin/ForkJoinPool;
      20: aload_1
      21: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      24: invokevirtual #90                 // Method scala/concurrent/forkjoin/ForkJoinPool.helpQuiescePool:(Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;)V
      27: goto          33
      30: invokestatic  #91                 // Method scala/concurrent/forkjoin/ForkJoinPool.quiesceCommonPool:()V
      33: return

  public void reinitialize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ldc           #11                 // int -268435456
       6: iand
       7: ldc           #38                 // int -2147483648
       9: if_icmpne     19
      12: aload_0
      13: invokespecial #92                 // Method clearExceptionalCompletion:()V
      16: goto          24
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field status:I
      24: return

  public static scala.concurrent.forkjoin.ForkJoinPool getPool();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_0
       4: aload_0
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          21
      11: aload_0
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: getfield      #25                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.pool:Lscala/concurrent/forkjoin/ForkJoinPool;
      18: goto          22
      21: aconst_null
      22: areturn

  public static boolean inForkJoinPool();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       6: ireturn

  public boolean tryUnfork();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: dup
       4: astore_1
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          25
      11: aload_1
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      18: aload_0
      19: invokevirtual #23                 // Method scala/concurrent/forkjoin/ForkJoinPool$WorkQueue.tryUnpush:(Lscala/concurrent/forkjoin/ForkJoinTask;)Z
      22: goto          29
      25: aload_0
      26: invokestatic  #93                 // Method scala/concurrent/forkjoin/ForkJoinPool.tryExternalUnpush:(Lscala/concurrent/forkjoin/ForkJoinTask;)Z
      29: ireturn

  public static int getQueuedTaskCount();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: dup
       4: astore_0
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          22
      11: aload_0
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      18: astore_1
      19: goto          26
      22: invokestatic  #94                 // Method scala/concurrent/forkjoin/ForkJoinPool.commonSubmitterQueue:()Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      25: astore_1
      26: aload_1
      27: ifnonnull     34
      30: iconst_0
      31: goto          38
      34: aload_1
      35: invokevirtual #95                 // Method scala/concurrent/forkjoin/ForkJoinPool$WorkQueue.queueSize:()I
      38: ireturn

  public static int getSurplusQueuedTaskCount();
    Code:
       0: invokestatic  #96                 // Method scala/concurrent/forkjoin/ForkJoinPool.getSurplusQueuedTaskCount:()I
       3: ireturn

  public abstract V getRawResult();

  protected abstract void setRawResult(V);

  protected abstract boolean exec();

  protected static scala.concurrent.forkjoin.ForkJoinTask<?> peekNextLocalTask();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: dup
       4: astore_0
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          22
      11: aload_0
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      18: astore_1
      19: goto          26
      22: invokestatic  #94                 // Method scala/concurrent/forkjoin/ForkJoinPool.commonSubmitterQueue:()Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      25: astore_1
      26: aload_1
      27: ifnonnull     34
      30: aconst_null
      31: goto          38
      34: aload_1
      35: invokevirtual #97                 // Method scala/concurrent/forkjoin/ForkJoinPool$WorkQueue.peek:()Lscala/concurrent/forkjoin/ForkJoinTask;
      38: areturn

  protected static scala.concurrent.forkjoin.ForkJoinTask<?> pollNextLocalTask();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: dup
       4: astore_0
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          24
      11: aload_0
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      18: invokevirtual #98                 // Method scala/concurrent/forkjoin/ForkJoinPool$WorkQueue.nextLocalTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
      21: goto          25
      24: aconst_null
      25: areturn

  protected static scala.concurrent.forkjoin.ForkJoinTask<?> pollTask();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: dup
       4: astore_0
       5: instanceof    #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
       8: ifeq          30
      11: aload_0
      12: checkcast     #21                 // class scala/concurrent/forkjoin/ForkJoinWorkerThread
      15: dup
      16: astore_1
      17: getfield      #25                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.pool:Lscala/concurrent/forkjoin/ForkJoinPool;
      20: aload_1
      21: getfield      #22                 // Field scala/concurrent/forkjoin/ForkJoinWorkerThread.workQueue:Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;
      24: invokevirtual #99                 // Method scala/concurrent/forkjoin/ForkJoinPool.nextTaskFor:(Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;)Lscala/concurrent/forkjoin/ForkJoinTask;
      27: goto          31
      30: aconst_null
      31: areturn

  public final short getForkJoinTaskTag();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: i2s
       5: ireturn

  public final short setForkJoinTaskTag(short);
    Code:
       0: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #5                  // Field STATUS:J
       7: aload_0
       8: getfield      #3                  // Field status:I
      11: dup
      12: istore_2
      13: iload_2
      14: ldc           #100                // int -65536
      16: iand
      17: iload_1
      18: ldc           #101                // int 65535
      20: iand
      21: ior
      22: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      25: ifeq          0
      28: iload_2
      29: i2s
      30: ireturn

  public final boolean compareAndSetForkJoinTaskTag(short, short);
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: dup
       5: istore_3
       6: i2s
       7: iload_1
       8: if_icmpeq     13
      11: iconst_0
      12: ireturn
      13: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      16: aload_0
      17: getstatic     #5                  // Field STATUS:J
      20: iload_3
      21: iload_3
      22: ldc           #100                // int -65536
      24: iand
      25: iload_2
      26: ldc           #101                // int 65535
      28: iand
      29: ior
      30: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      33: ifeq          0
      36: iconst_1
      37: ireturn

  public static scala.concurrent.forkjoin.ForkJoinTask<?> adapt(java.lang.Runnable);
    Code:
       0: new           #102                // class scala/concurrent/forkjoin/ForkJoinTask$AdaptedRunnableAction
       3: dup
       4: aload_0
       5: invokespecial #103                // Method scala/concurrent/forkjoin/ForkJoinTask$AdaptedRunnableAction."<init>":(Ljava/lang/Runnable;)V
       8: areturn

  public static <T> scala.concurrent.forkjoin.ForkJoinTask<T> adapt(java.lang.Runnable, T);
    Code:
       0: new           #104                // class scala/concurrent/forkjoin/ForkJoinTask$AdaptedRunnable
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #105                // Method scala/concurrent/forkjoin/ForkJoinTask$AdaptedRunnable."<init>":(Ljava/lang/Runnable;Ljava/lang/Object;)V
       9: areturn

  public static <T> scala.concurrent.forkjoin.ForkJoinTask<T> adapt(java.util.concurrent.Callable<? extends T>);
    Code:
       0: new           #106                // class scala/concurrent/forkjoin/ForkJoinTask$AdaptedCallable
       3: dup
       4: aload_0
       5: invokespecial #107                // Method scala/concurrent/forkjoin/ForkJoinTask$AdaptedCallable."<init>":(Ljava/util/concurrent/Callable;)V
       8: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #108                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #64                 // Method getException:()Ljava/lang/Throwable;
       9: invokevirtual #109                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #110                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #111                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       8: astore_2
       9: aload_2
      10: ifnull        22
      13: aload_0
      14: aload_2
      15: checkcast     #9                  // class java/lang/Throwable
      18: invokespecial #10                 // Method setExceptionalCompletion:(Ljava/lang/Throwable;)I
      21: pop
      22: return

  private static sun.misc.Unsafe getUnsafe();
    Code:
       0: getstatic     #112                // Field scala/concurrent/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: areturn

  static java.lang.ref.ReferenceQueue access$000();
    Code:
       0: getstatic     #1                  // Field exceptionTableRefQueue:Ljava/lang/ref/ReferenceQueue;
       3: areturn

  static {};
    Code:
       0: new           #113                // class java/util/concurrent/locks/ReentrantLock
       3: dup
       4: invokespecial #114                // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
       7: putstatic     #29                 // Field exceptionTableLock:Ljava/util/concurrent/locks/ReentrantLock;
      10: new           #115                // class java/lang/ref/ReferenceQueue
      13: dup
      14: invokespecial #116                // Method java/lang/ref/ReferenceQueue."<init>":()V
      17: putstatic     #1                  // Field exceptionTableRefQueue:Ljava/lang/ref/ReferenceQueue;
      20: bipush        32
      22: anewarray     #33                 // class scala/concurrent/forkjoin/ForkJoinTask$ExceptionNode
      25: putstatic     #32                 // Field exceptionTable:[Lscala/concurrent/forkjoin/ForkJoinTask$ExceptionNode;
      28: invokestatic  #117                // Method getUnsafe:()Lsun/misc/Unsafe;
      31: putstatic     #4                  // Field U:Lsun/misc/Unsafe;
      34: ldc_w         #44                 // class scala/concurrent/forkjoin/ForkJoinTask
      37: astore_0
      38: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      41: aload_0
      42: ldc           #118                // String status
      44: invokevirtual #119                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      47: invokevirtual #120                // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      50: putstatic     #5                  // Field STATUS:J
      53: goto          66
      56: astore_0
      57: new           #46                 // class java/lang/Error
      60: dup
      61: aload_0
      62: invokespecial #122                // Method java/lang/Error."<init>":(Ljava/lang/Throwable;)V
      65: athrow
      66: return
    Exception table:
       from    to  target type
          28    53    56   Class java/lang/Exception
}
