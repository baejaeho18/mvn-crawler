Compiled from "RecursiveTask.java"
public abstract class scala.concurrent.forkjoin.RecursiveTask<V> extends scala.concurrent.forkjoin.ForkJoinTask<V> {
  private static final long serialVersionUID;

  V result;

  public scala.concurrent.forkjoin.RecursiveTask();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
       4: return

  protected abstract V compute();

  public final V getRawResult();
    Code:
       0: aload_0
       1: getfield      #2                  // Field result:Ljava/lang/Object;
       4: areturn

  protected final void setRawResult(V);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field result:Ljava/lang/Object;
       5: return

  protected final boolean exec();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #3                  // Method compute:()Ljava/lang/Object;
       5: putfield      #2                  // Field result:Ljava/lang/Object;
       8: iconst_1
       9: ireturn
}
