Compiled from "ForkJoinPool.java"
abstract class scala.concurrent.forkjoin.CountedCompleter<T> extends scala.concurrent.forkjoin.ForkJoinTask<T> {
  private static final long serialVersionUID;

  final scala.concurrent.forkjoin.CountedCompleter<?> completer;

  volatile int pending;

  private static final sun.misc.Unsafe U;

  private static final long PENDING;

  protected scala.concurrent.forkjoin.CountedCompleter(scala.concurrent.forkjoin.CountedCompleter<?>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field pending:I
      14: return

  protected scala.concurrent.forkjoin.CountedCompleter(scala.concurrent.forkjoin.CountedCompleter<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
       9: return

  protected scala.concurrent.forkjoin.CountedCompleter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
       9: return

  public abstract void compute();

  public void onCompletion(scala.concurrent.forkjoin.CountedCompleter<?>);
    Code:
       0: return

  public boolean onExceptionalCompletion(java.lang.Throwable, scala.concurrent.forkjoin.CountedCompleter<?>);
    Code:
       0: iconst_1
       1: ireturn

  public final scala.concurrent.forkjoin.CountedCompleter<?> getCompleter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
       4: areturn

  public final int getPendingCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pending:I
       4: ireturn

  public final void setPendingCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field pending:I
       5: return

  public final void addToPendingCount(int);
    Code:
       0: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #5                  // Field PENDING:J
       7: aload_0
       8: getfield      #3                  // Field pending:I
      11: dup
      12: istore_2
      13: iload_2
      14: iload_1
      15: iadd
      16: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      19: ifeq          0
      22: return

  public final boolean compareAndSetPendingCount(int, int);
    Code:
       0: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #5                  // Field PENDING:J
       7: iload_1
       8: iload_2
       9: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      12: ireturn

  public final int decrementPendingCountUnlessZero();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pending:I
       4: dup
       5: istore_1
       6: ifeq          26
       9: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      12: aload_0
      13: getstatic     #5                  // Field PENDING:J
      16: iload_1
      17: iload_1
      18: iconst_1
      19: isub
      20: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      23: ifeq          0
      26: iload_1
      27: ireturn

  public final scala.concurrent.forkjoin.CountedCompleter<?> getRoot();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
       6: dup
       7: astore_2
       8: ifnull        16
      11: aload_2
      12: astore_1
      13: goto          2
      16: aload_1
      17: areturn

  public final void tryComplete();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: astore_2
       4: aload_1
       5: getfield      #3                  // Field pending:I
       8: dup
       9: istore_3
      10: ifne          34
      13: aload_1
      14: aload_2
      15: invokevirtual #7                  // Method onCompletion:(Lscala/concurrent/forkjoin/CountedCompleter;)V
      18: aload_1
      19: dup
      20: astore_2
      21: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
      24: dup
      25: astore_1
      26: ifnonnull     4
      29: aload_2
      30: invokevirtual #8                  // Method quietlyComplete:()V
      33: return
      34: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      37: aload_1
      38: getstatic     #5                  // Field PENDING:J
      41: iload_3
      42: iload_3
      43: iconst_1
      44: isub
      45: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      48: ifeq          4
      51: return

  public final void propagateCompletion();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: astore_2
       4: aload_1
       5: getfield      #3                  // Field pending:I
       8: dup
       9: istore_3
      10: ifne          29
      13: aload_1
      14: dup
      15: astore_2
      16: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
      19: dup
      20: astore_1
      21: ifnonnull     4
      24: aload_2
      25: invokevirtual #8                  // Method quietlyComplete:()V
      28: return
      29: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      32: aload_1
      33: getstatic     #5                  // Field PENDING:J
      36: iload_3
      37: iload_3
      38: iconst_1
      39: isub
      40: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      43: ifeq          4
      46: return

  public void complete(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setRawResult:(Ljava/lang/Object;)V
       5: aload_0
       6: aload_0
       7: invokevirtual #7                  // Method onCompletion:(Lscala/concurrent/forkjoin/CountedCompleter;)V
      10: aload_0
      11: invokevirtual #8                  // Method quietlyComplete:()V
      14: aload_0
      15: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
      18: dup
      19: astore_2
      20: ifnull        27
      23: aload_2
      24: invokevirtual #10                 // Method tryComplete:()V
      27: return

  public final scala.concurrent.forkjoin.CountedCompleter<?> firstComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pending:I
       4: dup
       5: istore_1
       6: ifne          11
       9: aload_0
      10: areturn
      11: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
      14: aload_0
      15: getstatic     #5                  // Field PENDING:J
      18: iload_1
      19: iload_1
      20: iconst_1
      21: isub
      22: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      25: ifeq          0
      28: aconst_null
      29: areturn

  public final scala.concurrent.forkjoin.CountedCompleter<?> nextComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
       4: dup
       5: astore_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #11                 // Method firstComplete:()Lscala/concurrent/forkjoin/CountedCompleter;
      13: areturn
      14: aload_0
      15: invokevirtual #8                  // Method quietlyComplete:()V
      18: aconst_null
      19: areturn

  public final void quietlyCompleteRoot();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
       6: dup
       7: astore_2
       8: ifnonnull     16
      11: aload_1
      12: invokevirtual #8                  // Method quietlyComplete:()V
      15: return
      16: aload_2
      17: astore_1
      18: goto          2

  void internalPropagateException(java.lang.Throwable);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: astore_3
       4: aload_2
       5: aload_1
       6: aload_3
       7: invokevirtual #12                 // Method onExceptionalCompletion:(Ljava/lang/Throwable;Lscala/concurrent/forkjoin/CountedCompleter;)Z
      10: ifeq          40
      13: aload_2
      14: dup
      15: astore_3
      16: getfield      #2                  // Field completer:Lscala/concurrent/forkjoin/CountedCompleter;
      19: dup
      20: astore_2
      21: ifnull        40
      24: aload_2
      25: getfield      #13                 // Field status:I
      28: iflt          40
      31: aload_2
      32: aload_1
      33: invokevirtual #14                 // Method recordExceptionalCompletion:(Ljava/lang/Throwable;)I
      36: pop
      37: goto          4
      40: return

  protected final boolean exec();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method compute:()V
       4: iconst_0
       5: ireturn

  public T getRawResult();
    Code:
       0: aconst_null
       1: areturn

  protected void setRawResult(T);
    Code:
       0: return

  private static sun.misc.Unsafe getUnsafe();
    Code:
       0: getstatic     #16                 // Field scala/concurrent/util/Unsafe.instance:Lsun/misc/Unsafe;
       3: areturn

  static {};
    Code:
       0: invokestatic  #17                 // Method getUnsafe:()Lsun/misc/Unsafe;
       3: putstatic     #4                  // Field U:Lsun/misc/Unsafe;
       6: getstatic     #4                  // Field U:Lsun/misc/Unsafe;
       9: ldc_w         #18                 // class scala/concurrent/forkjoin/CountedCompleter
      12: ldc           #19                 // String pending
      14: invokevirtual #20                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      17: invokevirtual #21                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      20: putstatic     #5                  // Field PENDING:J
      23: goto          36
      26: astore_0
      27: new           #23                 // class java/lang/Error
      30: dup
      31: aload_0
      32: invokespecial #24                 // Method java/lang/Error."<init>":(Ljava/lang/Throwable;)V
      35: athrow
      36: return
    Exception table:
       from    to  target type
           0    23    26   Class java/lang/Exception
}
