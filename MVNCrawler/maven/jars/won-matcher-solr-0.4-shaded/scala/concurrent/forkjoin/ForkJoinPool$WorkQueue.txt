Compiled from "ForkJoinPool.java"
final class scala.concurrent.forkjoin.ForkJoinPool$WorkQueue {
  static final int INITIAL_QUEUE_CAPACITY;

  static final int MAXIMUM_QUEUE_CAPACITY;

  volatile long pad00;

  volatile long pad01;

  volatile long pad02;

  volatile long pad03;

  volatile long pad04;

  volatile long pad05;

  volatile long pad06;

  int seed;

  volatile int eventCount;

  int nextWait;

  int hint;

  int poolIndex;

  final int mode;

  int nsteals;

  volatile int qlock;

  volatile int base;

  int top;

  scala.concurrent.forkjoin.ForkJoinTask<?>[] array;

  final scala.concurrent.forkjoin.ForkJoinPool pool;

  final scala.concurrent.forkjoin.ForkJoinWorkerThread owner;

  volatile java.lang.Thread parker;

  volatile scala.concurrent.forkjoin.ForkJoinTask<?> currentJoin;

  scala.concurrent.forkjoin.ForkJoinTask<?> currentSteal;

  volatile java.lang.Object pad10;

  volatile java.lang.Object pad11;

  volatile java.lang.Object pad12;

  volatile java.lang.Object pad13;

  volatile java.lang.Object pad14;

  volatile java.lang.Object pad15;

  volatile java.lang.Object pad16;

  volatile java.lang.Object pad17;

  volatile java.lang.Object pad18;

  volatile java.lang.Object pad19;

  volatile java.lang.Object pad1a;

  volatile java.lang.Object pad1b;

  volatile java.lang.Object pad1c;

  volatile java.lang.Object pad1d;

  private static final sun.misc.Unsafe U;

  private static final long QLOCK;

  private static final int ABASE;

  private static final int ASHIFT;

  scala.concurrent.forkjoin.ForkJoinPool$WorkQueue(scala.concurrent.forkjoin.ForkJoinPool, scala.concurrent.forkjoin.ForkJoinWorkerThread, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field owner:Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field mode:I
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field seed:I
      25: aload_0
      26: aload_0
      27: sipush        4096
      30: dup_x1
      31: putfield      #6                  // Field top:I
      34: putfield      #7                  // Field base:I
      37: return

  final int queueSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field base:I
       4: aload_0
       5: getfield      #6                  // Field top:I
       8: isub
       9: istore_1
      10: iload_1
      11: iflt          18
      14: iconst_0
      15: goto          20
      18: iload_1
      19: ineg
      20: ireturn

  final boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field base:I
       4: aload_0
       5: getfield      #6                  // Field top:I
       8: dup
       9: istore_3
      10: isub
      11: istore        4
      13: iload         4
      15: ifge          67
      18: iload         4
      20: iconst_m1
      21: if_icmpne     71
      24: aload_0
      25: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
      28: dup
      29: astore_1
      30: ifnull        67
      33: aload_1
      34: arraylength
      35: iconst_1
      36: isub
      37: dup
      38: istore_2
      39: iflt          67
      42: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      45: aload_1
      46: iload_2
      47: iload_3
      48: iconst_1
      49: isub
      50: iand
      51: getstatic     #10                 // Field ASHIFT:I
      54: ishl
      55: i2l
      56: getstatic     #11                 // Field ABASE:I
      59: i2l
      60: ladd
      61: invokevirtual #12                 // Method sun/misc/Unsafe.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;
      64: ifnonnull     71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn

  final void push(scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field top:I
       4: istore        4
       6: aload_0
       7: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
      10: dup
      11: astore_2
      12: ifnull        96
      15: aload_2
      16: arraylength
      17: iconst_1
      18: isub
      19: dup
      20: istore        5
      22: iload         4
      24: iand
      25: getstatic     #10                 // Field ASHIFT:I
      28: ishl
      29: getstatic     #11                 // Field ABASE:I
      32: iadd
      33: istore        7
      35: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      38: aload_2
      39: iload         7
      41: i2l
      42: aload_1
      43: invokevirtual #13                 // Method sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
      46: aload_0
      47: iload         4
      49: iconst_1
      50: iadd
      51: dup_x1
      52: putfield      #6                  // Field top:I
      55: aload_0
      56: getfield      #7                  // Field base:I
      59: isub
      60: dup
      61: istore        6
      63: iconst_2
      64: if_icmpgt     84
      67: aload_0
      68: getfield      #2                  // Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
      71: dup
      72: astore_3
      73: ifnull        96
      76: aload_3
      77: aload_0
      78: invokevirtual #14                 // Method scala/concurrent/forkjoin/ForkJoinPool.signalWork:(Lscala/concurrent/forkjoin/ForkJoinPool$WorkQueue;)V
      81: goto          96
      84: iload         6
      86: iload         5
      88: if_icmplt     96
      91: aload_0
      92: invokevirtual #15                 // Method growArray:()[Lscala/concurrent/forkjoin/ForkJoinTask;
      95: pop
      96: return

  final scala.concurrent.forkjoin.ForkJoinTask<?>[] growArray();
    Code:
       0: aload_0
       1: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: arraylength
      11: iconst_1
      12: ishl
      13: goto          19
      16: sipush        8192
      19: istore_2
      20: iload_2
      21: ldc           #16                 // int 67108864
      23: if_icmple     36
      26: new           #17                 // class java/util/concurrent/RejectedExecutionException
      29: dup
      30: ldc           #18                 // String Queue capacity exceeded
      32: invokespecial #19                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_2
      38: anewarray     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
      41: dup_x1
      42: putfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
      45: astore        6
      47: aload_1
      48: ifnull        171
      51: aload_1
      52: arraylength
      53: iconst_1
      54: isub
      55: dup
      56: istore_3
      57: iflt          171
      60: aload_0
      61: getfield      #6                  // Field top:I
      64: dup
      65: istore        4
      67: aload_0
      68: getfield      #7                  // Field base:I
      71: dup
      72: istore        5
      74: isub
      75: ifle          171
      78: iload_2
      79: iconst_1
      80: isub
      81: istore        7
      83: iload         5
      85: iload_3
      86: iand
      87: getstatic     #10                 // Field ASHIFT:I
      90: ishl
      91: getstatic     #11                 // Field ABASE:I
      94: iadd
      95: istore        9
      97: iload         5
      99: iload         7
     101: iand
     102: getstatic     #10                 // Field ASHIFT:I
     105: ishl
     106: getstatic     #11                 // Field ABASE:I
     109: iadd
     110: istore        10
     112: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
     115: aload_1
     116: iload         9
     118: i2l
     119: invokevirtual #21                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
     122: checkcast     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
     125: astore        8
     127: aload         8
     129: ifnull        161
     132: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
     135: aload_1
     136: iload         9
     138: i2l
     139: aload         8
     141: aconst_null
     142: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     145: ifeq          161
     148: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
     151: aload         6
     153: iload         10
     155: i2l
     156: aload         8
     158: invokevirtual #23                 // Method sun/misc/Unsafe.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
     161: iinc          5, 1
     164: iload         5
     166: iload         4
     168: if_icmpne     83
     171: aload         6
     173: areturn

  final scala.concurrent.forkjoin.ForkJoinTask<?> pop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
       4: dup
       5: astore_1
       6: ifnull        95
       9: aload_1
      10: arraylength
      11: iconst_1
      12: isub
      13: dup
      14: istore_3
      15: iflt          95
      18: aload_0
      19: getfield      #6                  // Field top:I
      22: iconst_1
      23: isub
      24: dup
      25: istore        4
      27: aload_0
      28: getfield      #7                  // Field base:I
      31: isub
      32: iflt          95
      35: iload_3
      36: iload         4
      38: iand
      39: getstatic     #10                 // Field ASHIFT:I
      42: ishl
      43: getstatic     #11                 // Field ABASE:I
      46: iadd
      47: i2l
      48: lstore        5
      50: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      53: aload_1
      54: lload         5
      56: invokevirtual #12                 // Method sun/misc/Unsafe.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;
      59: checkcast     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
      62: dup
      63: astore_2
      64: ifnonnull     70
      67: goto          95
      70: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      73: aload_1
      74: lload         5
      76: aload_2
      77: aconst_null
      78: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      81: ifeq          92
      84: aload_0
      85: iload         4
      87: putfield      #6                  // Field top:I
      90: aload_2
      91: areturn
      92: goto          18
      95: aconst_null
      96: areturn

  final scala.concurrent.forkjoin.ForkJoinTask<?> pollAt(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
       4: dup
       5: astore_3
       6: ifnull        75
       9: aload_3
      10: arraylength
      11: iconst_1
      12: isub
      13: iload_1
      14: iand
      15: getstatic     #10                 // Field ASHIFT:I
      18: ishl
      19: getstatic     #11                 // Field ABASE:I
      22: iadd
      23: istore        4
      25: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      28: aload_3
      29: iload         4
      31: i2l
      32: invokevirtual #21                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      35: checkcast     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
      38: dup
      39: astore_2
      40: ifnull        75
      43: aload_0
      44: getfield      #7                  // Field base:I
      47: iload_1
      48: if_icmpne     75
      51: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      54: aload_3
      55: iload         4
      57: i2l
      58: aload_2
      59: aconst_null
      60: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      63: ifeq          75
      66: aload_0
      67: iload_1
      68: iconst_1
      69: iadd
      70: putfield      #7                  // Field base:I
      73: aload_2
      74: areturn
      75: aconst_null
      76: areturn

  final scala.concurrent.forkjoin.ForkJoinTask<?> poll();
    Code:
       0: aload_0
       1: getfield      #7                  // Field base:I
       4: dup
       5: istore_2
       6: aload_0
       7: getfield      #6                  // Field top:I
      10: isub
      11: ifge          116
      14: aload_0
      15: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
      18: dup
      19: astore_1
      20: ifnull        116
      23: aload_1
      24: arraylength
      25: iconst_1
      26: isub
      27: iload_2
      28: iand
      29: getstatic     #10                 // Field ASHIFT:I
      32: ishl
      33: getstatic     #11                 // Field ABASE:I
      36: iadd
      37: istore        4
      39: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      42: aload_1
      43: iload         4
      45: i2l
      46: invokevirtual #21                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      49: checkcast     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
      52: astore_3
      53: aload_3
      54: ifnull        89
      57: aload_0
      58: getfield      #7                  // Field base:I
      61: iload_2
      62: if_icmpne     113
      65: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      68: aload_1
      69: iload         4
      71: i2l
      72: aload_3
      73: aconst_null
      74: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      77: ifeq          113
      80: aload_0
      81: iload_2
      82: iconst_1
      83: iadd
      84: putfield      #7                  // Field base:I
      87: aload_3
      88: areturn
      89: aload_0
      90: getfield      #7                  // Field base:I
      93: iload_2
      94: if_icmpne     113
      97: iload_2
      98: iconst_1
      99: iadd
     100: aload_0
     101: getfield      #6                  // Field top:I
     104: if_icmpne     110
     107: goto          116
     110: invokestatic  #24                 // Method java/lang/Thread.yield:()V
     113: goto          0
     116: aconst_null
     117: areturn

  final scala.concurrent.forkjoin.ForkJoinTask<?> nextLocalTask();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mode:I
       4: ifne          14
       7: aload_0
       8: invokevirtual #25                 // Method pop:()Lscala/concurrent/forkjoin/ForkJoinTask;
      11: goto          18
      14: aload_0
      15: invokevirtual #26                 // Method poll:()Lscala/concurrent/forkjoin/ForkJoinTask;
      18: areturn

  final scala.concurrent.forkjoin.ForkJoinTask<?> peek();
    Code:
       0: aload_0
       1: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: arraylength
      11: iconst_1
      12: isub
      13: dup
      14: istore_2
      15: ifge          20
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #4                  // Field mode:I
      24: ifne          36
      27: aload_0
      28: getfield      #6                  // Field top:I
      31: iconst_1
      32: isub
      33: goto          40
      36: aload_0
      37: getfield      #7                  // Field base:I
      40: istore_3
      41: iload_3
      42: iload_2
      43: iand
      44: getstatic     #10                 // Field ASHIFT:I
      47: ishl
      48: getstatic     #11                 // Field ABASE:I
      51: iadd
      52: istore        4
      54: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      57: aload_1
      58: iload         4
      60: i2l
      61: invokevirtual #21                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      64: checkcast     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
      67: areturn

  final boolean tryUnpush(scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
       4: dup
       5: astore_2
       6: ifnull        59
       9: aload_0
      10: getfield      #6                  // Field top:I
      13: dup
      14: istore_3
      15: aload_0
      16: getfield      #7                  // Field base:I
      19: if_icmpeq     59
      22: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      25: aload_2
      26: aload_2
      27: arraylength
      28: iconst_1
      29: isub
      30: iinc          3, -1
      33: iload_3
      34: iand
      35: getstatic     #10                 // Field ASHIFT:I
      38: ishl
      39: getstatic     #11                 // Field ABASE:I
      42: iadd
      43: i2l
      44: aload_1
      45: aconst_null
      46: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          59
      52: aload_0
      53: iload_3
      54: putfield      #6                  // Field top:I
      57: iconst_1
      58: ireturn
      59: iconst_0
      60: ireturn

  final void cancelAll();
    Code:
       0: aload_0
       1: getfield      #27                 // Field currentJoin:Lscala/concurrent/forkjoin/ForkJoinTask;
       4: invokestatic  #28                 // Method scala/concurrent/forkjoin/ForkJoinTask.cancelIgnoringExceptions:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
       7: aload_0
       8: getfield      #29                 // Field currentSteal:Lscala/concurrent/forkjoin/ForkJoinTask;
      11: invokestatic  #28                 // Method scala/concurrent/forkjoin/ForkJoinTask.cancelIgnoringExceptions:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
      14: aload_0
      15: invokevirtual #26                 // Method poll:()Lscala/concurrent/forkjoin/ForkJoinTask;
      18: dup
      19: astore_1
      20: ifnull        30
      23: aload_1
      24: invokestatic  #28                 // Method scala/concurrent/forkjoin/ForkJoinTask.cancelIgnoringExceptions:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
      27: goto          14
      30: return

  final int nextSeed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field seed:I
       4: istore_1
       5: iload_1
       6: iload_1
       7: bipush        13
       9: ishl
      10: ixor
      11: istore_1
      12: iload_1
      13: iload_1
      14: bipush        17
      16: iushr
      17: ixor
      18: istore_1
      19: aload_0
      20: iload_1
      21: iload_1
      22: iconst_5
      23: ishl
      24: ixor
      25: dup
      26: istore_1
      27: dup_x1
      28: putfield      #5                  // Field seed:I
      31: ireturn

  private void popAndExecAll();
    Code:
       0: aload_0
       1: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
       4: dup
       5: astore_1
       6: ifnull        94
       9: aload_1
      10: arraylength
      11: iconst_1
      12: isub
      13: dup
      14: istore_2
      15: iflt          94
      18: aload_0
      19: getfield      #6                  // Field top:I
      22: iconst_1
      23: isub
      24: dup
      25: istore_3
      26: aload_0
      27: getfield      #7                  // Field base:I
      30: isub
      31: iflt          94
      34: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      37: aload_1
      38: iload_2
      39: iload_3
      40: iand
      41: getstatic     #10                 // Field ASHIFT:I
      44: ishl
      45: getstatic     #11                 // Field ABASE:I
      48: iadd
      49: i2l
      50: dup2
      51: lstore        4
      53: invokevirtual #12                 // Method sun/misc/Unsafe.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;
      56: checkcast     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
      59: dup
      60: astore        6
      62: ifnull        94
      65: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      68: aload_1
      69: lload         4
      71: aload         6
      73: aconst_null
      74: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      77: ifeq          0
      80: aload_0
      81: iload_3
      82: putfield      #6                  // Field top:I
      85: aload         6
      87: invokevirtual #30                 // Method scala/concurrent/forkjoin/ForkJoinTask.doExec:()I
      90: pop
      91: goto          0
      94: return

  private void pollAndExecAll();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method poll:()Lscala/concurrent/forkjoin/ForkJoinTask;
       4: dup
       5: astore_1
       6: ifnull        17
       9: aload_1
      10: invokevirtual #30                 // Method scala/concurrent/forkjoin/ForkJoinTask.doExec:()I
      13: pop
      14: goto          0
      17: return

  final boolean tryRemoveAndExec(scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: iconst_1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iconst_1
       5: istore        4
       7: aload_0
       8: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
      11: dup
      12: astore        5
      14: ifnull        251
      17: aload         5
      19: arraylength
      20: iconst_1
      21: isub
      22: dup
      23: istore        6
      25: iflt          251
      28: aload_0
      29: getfield      #6                  // Field top:I
      32: dup
      33: istore        7
      35: aload_0
      36: getfield      #7                  // Field base:I
      39: dup
      40: istore        8
      42: isub
      43: dup
      44: istore        9
      46: ifle          251
      49: iinc          7, -1
      52: iload         7
      54: iload         6
      56: iand
      57: getstatic     #10                 // Field ASHIFT:I
      60: ishl
      61: getstatic     #11                 // Field ABASE:I
      64: iadd
      65: istore        11
      67: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      70: aload         5
      72: iload         11
      74: i2l
      75: invokevirtual #21                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      78: checkcast     #20                 // class scala/concurrent/forkjoin/ForkJoinTask
      81: astore        10
      83: aload         10
      85: ifnonnull     91
      88: goto          251
      91: aload         10
      93: aload_1
      94: if_acmpne     170
      97: iload         7
      99: iconst_1
     100: iadd
     101: aload_0
     102: getfield      #6                  // Field top:I
     105: if_icmpne     138
     108: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
     111: aload         5
     113: iload         11
     115: i2l
     116: aload_1
     117: aconst_null
     118: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     121: ifne          127
     124: goto          251
     127: aload_0
     128: iload         7
     130: putfield      #6                  // Field top:I
     133: iconst_1
     134: istore_3
     135: goto          251
     138: aload_0
     139: getfield      #7                  // Field base:I
     142: iload         8
     144: if_icmpne     251
     147: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
     150: aload         5
     152: iload         11
     154: i2l
     155: aload_1
     156: new           #31                 // class scala/concurrent/forkjoin/ForkJoinPool$EmptyTask
     159: dup
     160: invokespecial #32                 // Method scala/concurrent/forkjoin/ForkJoinPool$EmptyTask."<init>":()V
     163: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     166: istore_3
     167: goto          251
     170: aload         10
     172: getfield      #33                 // Field scala/concurrent/forkjoin/ForkJoinTask.status:I
     175: iflt          184
     178: iconst_0
     179: istore        4
     181: goto          221
     184: iload         7
     186: iconst_1
     187: iadd
     188: aload_0
     189: getfield      #6                  // Field top:I
     192: if_icmpne     221
     195: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
     198: aload         5
     200: iload         11
     202: i2l
     203: aload         10
     205: aconst_null
     206: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     209: ifeq          251
     212: aload_0
     213: iload         7
     215: putfield      #6                  // Field top:I
     218: goto          251
     221: iinc          9, -1
     224: iload         9
     226: ifne          248
     229: iload         4
     231: ifne          251
     234: aload_0
     235: getfield      #7                  // Field base:I
     238: iload         8
     240: if_icmpne     251
     243: iconst_0
     244: istore_2
     245: goto          251
     248: goto          49
     251: iload_3
     252: ifeq          260
     255: aload_1
     256: invokevirtual #30                 // Method scala/concurrent/forkjoin/ForkJoinTask.doExec:()I
     259: pop
     260: iload_2
     261: ireturn

  final boolean pollAndExecCC(scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field base:I
       4: dup
       5: istore_3
       6: aload_0
       7: getfield      #6                  // Field top:I
      10: isub
      11: ifge          138
      14: aload_0
      15: getfield      #8                  // Field array:[Lscala/concurrent/forkjoin/ForkJoinTask;
      18: dup
      19: astore_2
      20: ifnull        138
      23: aload_2
      24: arraylength
      25: iconst_1
      26: isub
      27: iload_3
      28: iand
      29: getstatic     #10                 // Field ASHIFT:I
      32: ishl
      33: getstatic     #11                 // Field ABASE:I
      36: iadd
      37: i2l
      38: lstore        5
      40: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      43: aload_2
      44: lload         5
      46: invokevirtual #12                 // Method sun/misc/Unsafe.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;
      49: dup
      50: astore        4
      52: ifnull        138
      55: aload         4
      57: instanceof    #34                 // class scala/concurrent/forkjoin/CountedCompleter
      60: ifne          66
      63: goto          138
      66: aload         4
      68: checkcast     #34                 // class scala/concurrent/forkjoin/CountedCompleter
      71: astore        7
      73: aload         7
      75: astore        8
      77: aload         8
      79: aload_1
      80: if_acmpne     121
      83: aload_0
      84: getfield      #7                  // Field base:I
      87: iload_3
      88: if_icmpne     135
      91: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      94: aload_2
      95: lload         5
      97: aload         7
      99: aconst_null
     100: invokevirtual #22                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     103: ifeq          135
     106: aload_0
     107: iload_3
     108: iconst_1
     109: iadd
     110: putfield      #7                  // Field base:I
     113: aload         7
     115: invokevirtual #35                 // Method scala/concurrent/forkjoin/CountedCompleter.doExec:()I
     118: pop
     119: iconst_1
     120: ireturn
     121: aload         8
     123: getfield      #36                 // Field scala/concurrent/forkjoin/CountedCompleter.completer:Lscala/concurrent/forkjoin/CountedCompleter;
     126: dup
     127: astore        8
     129: ifnonnull     77
     132: goto          138
     135: goto          0
     138: iconst_0
     139: ireturn

  final void runTask(scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: aload_1
       1: ifnull        59
       4: aload_0
       5: aload_1
       6: dup_x1
       7: putfield      #29                 // Field currentSteal:Lscala/concurrent/forkjoin/ForkJoinTask;
      10: invokevirtual #30                 // Method scala/concurrent/forkjoin/ForkJoinTask.doExec:()I
      13: pop
      14: aload_0
      15: aconst_null
      16: putfield      #29                 // Field currentSteal:Lscala/concurrent/forkjoin/ForkJoinTask;
      19: aload_0
      20: dup
      21: getfield      #37                 // Field nsteals:I
      24: iconst_1
      25: iadd
      26: putfield      #37                 // Field nsteals:I
      29: aload_0
      30: getfield      #7                  // Field base:I
      33: aload_0
      34: getfield      #6                  // Field top:I
      37: isub
      38: ifge          59
      41: aload_0
      42: getfield      #4                  // Field mode:I
      45: ifne          55
      48: aload_0
      49: invokespecial #38                 // Method popAndExecAll:()V
      52: goto          59
      55: aload_0
      56: invokespecial #39                 // Method pollAndExecAll:()V
      59: return

  final void runSubtask(scala.concurrent.forkjoin.ForkJoinTask<?>);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_0
       5: getfield      #29                 // Field currentSteal:Lscala/concurrent/forkjoin/ForkJoinTask;
       8: astore_2
       9: aload_0
      10: aload_1
      11: dup_x1
      12: putfield      #29                 // Field currentSteal:Lscala/concurrent/forkjoin/ForkJoinTask;
      15: invokevirtual #30                 // Method scala/concurrent/forkjoin/ForkJoinTask.doExec:()I
      18: pop
      19: aload_0
      20: aload_2
      21: putfield      #29                 // Field currentSteal:Lscala/concurrent/forkjoin/ForkJoinTask;
      24: return

  final boolean isApparentlyUnblocked();
    Code:
       0: aload_0
       1: getfield      #40                 // Field eventCount:I
       4: iflt          46
       7: aload_0
       8: getfield      #3                  // Field owner:Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
      11: dup
      12: astore_1
      13: ifnull        46
      16: aload_1
      17: invokevirtual #41                 // Method java/lang/Thread.getState:()Ljava/lang/Thread$State;
      20: dup
      21: astore_2
      22: getstatic     #42                 // Field java/lang/Thread$State.BLOCKED:Ljava/lang/Thread$State;
      25: if_acmpeq     46
      28: aload_2
      29: getstatic     #43                 // Field java/lang/Thread$State.WAITING:Ljava/lang/Thread$State;
      32: if_acmpeq     46
      35: aload_2
      36: getstatic     #44                 // Field java/lang/Thread$State.TIMED_WAITING:Ljava/lang/Thread$State;
      39: if_acmpeq     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  static {};
    Code:
       0: invokestatic  #45                 // Method scala/concurrent/forkjoin/ForkJoinPool.access$000:()Lsun/misc/Unsafe;
       3: putstatic     #9                  // Field U:Lsun/misc/Unsafe;
       6: ldc_w         #46                 // class scala/concurrent/forkjoin/ForkJoinPool$WorkQueue
       9: astore_0
      10: ldc_w         #47                 // class "[Lscala/concurrent/forkjoin/ForkJoinTask;"
      13: astore_1
      14: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      17: aload_0
      18: ldc           #48                 // String qlock
      20: invokevirtual #49                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      23: invokevirtual #50                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      26: putstatic     #51                 // Field QLOCK:J
      29: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      32: aload_1
      33: invokevirtual #52                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      36: putstatic     #11                 // Field ABASE:I
      39: getstatic     #9                  // Field U:Lsun/misc/Unsafe;
      42: aload_1
      43: invokevirtual #53                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      46: istore_2
      47: iload_2
      48: iload_2
      49: iconst_1
      50: isub
      51: iand
      52: ifeq          65
      55: new           #54                 // class java/lang/Error
      58: dup
      59: ldc           #55                 // String data type scale not a power of two
      61: invokespecial #56                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      64: athrow
      65: bipush        31
      67: iload_2
      68: invokestatic  #57                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      71: isub
      72: putstatic     #10                 // Field ASHIFT:I
      75: goto          88
      78: astore_0
      79: new           #54                 // class java/lang/Error
      82: dup
      83: aload_0
      84: invokespecial #59                 // Method java/lang/Error."<init>":(Ljava/lang/Throwable;)V
      87: athrow
      88: return
    Exception table:
       from    to  target type
           0    75    78   Class java/lang/Exception
}
