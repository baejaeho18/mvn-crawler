Compiled from "Promise.scala"
public final class scala.concurrent.impl.Promise$KeptPromise<T> implements scala.concurrent.impl.Promise<T> {
  private final scala.Some<scala.util.Try<T>> value;

  public scala.concurrent.impl.Promise<T> future();
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method scala/concurrent/impl/Promise$class.future:(Lscala/concurrent/impl/Promise;)Lscala/concurrent/impl/Promise;
       4: areturn

  public <U> void onSuccess(scala.PartialFunction<T, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #27                 // Method scala/concurrent/Future$class.onSuccess:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
       6: return

  public <U> void onFailure(scala.PartialFunction<java.lang.Throwable, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // Method scala/concurrent/Future$class.onFailure:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)V
       6: return

  public scala.concurrent.Future<java.lang.Throwable> failed();
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method scala/concurrent/Future$class.failed:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       4: areturn

  public <U> void foreach(scala.Function1<T, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method scala/concurrent/Future$class.foreach:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
       6: return

  public <S> scala.concurrent.Future<S> transform(scala.Function1<T, S>, scala.Function1<java.lang.Throwable, java.lang.Throwable>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #51                 // Method scala/concurrent/Future$class.transform:(Lscala/concurrent/Future;Lscala/Function1;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public <S> scala.concurrent.Future<S> map(scala.Function1<T, S>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // Method scala/concurrent/Future$class.map:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <S> scala.concurrent.Future<S> flatMap(scala.Function1<T, scala.concurrent.Future<S>>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // Method scala/concurrent/Future$class.flatMap:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future<T> filter(scala.Function1<T, java.lang.Object>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #63                 // Method scala/concurrent/Future$class.filter:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public final scala.concurrent.Future<T> withFilter(scala.Function1<T, java.lang.Object>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // Method scala/concurrent/Future$class.withFilter:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <S> scala.concurrent.Future<S> collect(scala.PartialFunction<T, S>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #72                 // Method scala/concurrent/Future$class.collect:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> scala.concurrent.Future<U> recover(scala.PartialFunction<java.lang.Throwable, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // Method scala/concurrent/Future$class.recover:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> scala.concurrent.Future<U> recoverWith(scala.PartialFunction<java.lang.Throwable, scala.concurrent.Future<U>>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // Method scala/concurrent/Future$class.recoverWith:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public <U> scala.concurrent.Future<scala.Tuple2<T, U>> zip(scala.concurrent.Future<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method scala/concurrent/Future$class.zip:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public <U> scala.concurrent.Future<U> fallbackTo(scala.concurrent.Future<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // Method scala/concurrent/Future$class.fallbackTo:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public <S> scala.concurrent.Future<S> mapTo(scala.reflect.ClassTag<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method scala/concurrent/Future$class.mapTo:(Lscala/concurrent/Future;Lscala/reflect/ClassTag;)Lscala/concurrent/Future;
       5: areturn

  public <U> scala.concurrent.Future<T> andThen(scala.PartialFunction<scala.util.Try<T>, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // Method scala/concurrent/Future$class.andThen:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Promise<T> complete(scala.util.Try<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #104                // Method scala/concurrent/Promise$class.complete:(Lscala/concurrent/Promise;Lscala/util/Try;)Lscala/concurrent/Promise;
       5: areturn

  public final scala.concurrent.Promise<T> completeWith(scala.concurrent.Future<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method scala/concurrent/Promise$class.completeWith:(Lscala/concurrent/Promise;Lscala/concurrent/Future;)Lscala/concurrent/Promise;
       5: areturn

  public final scala.concurrent.Promise<T> tryCompleteWith(scala.concurrent.Future<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // Method scala/concurrent/Promise$class.tryCompleteWith:(Lscala/concurrent/Promise;Lscala/concurrent/Future;)Lscala/concurrent/Promise;
       5: areturn

  public scala.concurrent.Promise<T> success(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method scala/concurrent/Promise$class.success:(Lscala/concurrent/Promise;Ljava/lang/Object;)Lscala/concurrent/Promise;
       5: areturn

  public boolean trySuccess(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // Method scala/concurrent/Promise$class.trySuccess:(Lscala/concurrent/Promise;Ljava/lang/Object;)Z
       5: ireturn

  public scala.concurrent.Promise<T> failure(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // Method scala/concurrent/Promise$class.failure:(Lscala/concurrent/Promise;Ljava/lang/Throwable;)Lscala/concurrent/Promise;
       5: areturn

  public boolean tryFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #138                // Method scala/concurrent/Promise$class.tryFailure:(Lscala/concurrent/Promise;Ljava/lang/Throwable;)Z
       5: ireturn

  public scala.Some<scala.util.Try<T>> value();
    Code:
       0: aload_0
       1: getfield      #141                // Field value:Lscala/Some;
       4: areturn

  public boolean isCompleted();
    Code:
       0: iconst_1
       1: ireturn

  public boolean tryComplete(scala.util.Try<T>);
    Code:
       0: iconst_0
       1: ireturn

  public <U> void onComplete(scala.Function1<scala.util.Try<T>, U>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: invokevirtual #148                // Method value:()Lscala/Some;
       4: invokevirtual #154                // Method scala/Some.get:()Ljava/lang/Object;
       7: checkcast     #156                // class scala/util/Try
      10: astore_3
      11: aload_2
      12: invokeinterface #162,  1          // InterfaceMethod scala/concurrent/ExecutionContext.prepare:()Lscala/concurrent/ExecutionContext;
      17: astore        4
      19: new           #164                // class scala/concurrent/impl/CallbackRunnable
      22: dup
      23: aload         4
      25: aload_1
      26: invokespecial #168                // Method scala/concurrent/impl/CallbackRunnable."<init>":(Lscala/concurrent/ExecutionContext;Lscala/Function1;)V
      29: aload_3
      30: invokevirtual #172                // Method scala/concurrent/impl/CallbackRunnable.executeWithValue:(Lscala/util/Try;)V
      33: return

  public scala.concurrent.impl.Promise$KeptPromise<T> ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: areturn

  public T result(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: invokevirtual #148                // Method value:()Lscala/Some;
       4: invokevirtual #154                // Method scala/Some.get:()Ljava/lang/Object;
       7: checkcast     #156                // class scala/util/Try
      10: invokevirtual #183                // Method scala/util/Try.get:()Ljava/lang/Object;
      13: areturn

  public scala.concurrent.Future future();
    Code:
       0: aload_0
       1: invokevirtual #185                // Method future:()Lscala/concurrent/impl/Promise;
       4: areturn

  public scala.concurrent.Awaitable ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #188                // Method ready:(Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Lscala/concurrent/impl/Promise$KeptPromise;
       6: areturn

  public scala.Option value();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method value:()Lscala/Some;
       4: areturn

  public scala.concurrent.impl.Promise$KeptPromise(scala.util.Try<T>);
    Code:
       0: aload_0
       1: invokespecial #192                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #196                // Method scala/concurrent/Promise$class.$init$:(Lscala/concurrent/Promise;)V
       8: aload_0
       9: invokestatic  #199                // Method scala/concurrent/Future$class.$init$:(Lscala/concurrent/Future;)V
      12: aload_0
      13: invokestatic  #202                // Method scala/concurrent/impl/Promise$class.$init$:(Lscala/concurrent/impl/Promise;)V
      16: aload_0
      17: new           #150                // class scala/Some
      20: dup
      21: getstatic     #208                // Field scala/concurrent/impl/Promise$.MODULE$:Lscala/concurrent/impl/Promise$;
      24: aload_1
      25: invokevirtual #212                // Method scala/concurrent/impl/Promise$.scala$concurrent$impl$Promise$$resolveTry:(Lscala/util/Try;)Lscala/util/Try;
      28: invokespecial #215                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      31: putfield      #141                // Field value:Lscala/Some;
      34: return
}
