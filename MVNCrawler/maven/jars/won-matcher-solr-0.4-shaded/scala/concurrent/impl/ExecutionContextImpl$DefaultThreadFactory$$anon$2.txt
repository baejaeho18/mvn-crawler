Compiled from "ExecutionContextImpl.scala"
public final class scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$2 extends scala.concurrent.forkjoin.ForkJoinWorkerThread implements scala.concurrent.BlockContext {
  public <T> T blockOn(scala.Function0<T>, scala.concurrent.CanAwait);
    Code:
       0: aconst_null
       1: invokestatic  #20                 // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       4: astore_3
       5: new           #22                 // class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$2$$anon$4
       8: dup
       9: aload_0
      10: aload_1
      11: aload_3
      12: invokespecial #26                 // Method scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$2$$anon$4."<init>":(Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$2;Lscala/Function0;Lscala/runtime/ObjectRef;)V
      15: invokestatic  #32                 // Method scala/concurrent/forkjoin/ForkJoinPool.managedBlock:(Lscala/concurrent/forkjoin/ForkJoinPool$ManagedBlocker;)V
      18: aload_3
      19: getfield      #36                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      22: areturn

  public scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$2(scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory, scala.concurrent.forkjoin.ForkJoinPool);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #48                 // Method scala/concurrent/forkjoin/ForkJoinWorkerThread."<init>":(Lscala/concurrent/forkjoin/ForkJoinPool;)V
       5: return
}
