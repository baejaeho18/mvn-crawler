Compiled from "BatchingExecutor.scala"
public class scala.concurrent.BatchingExecutor$Batch implements java.lang.Runnable,scala.concurrent.BlockContext {
  private final scala.collection.immutable.List<java.lang.Runnable> initial;

  private scala.concurrent.BlockContext scala$concurrent$BatchingExecutor$Batch$$parentBlockContext;

  public final scala.concurrent.BatchingExecutor $outer;

  public scala.collection.immutable.List<java.lang.Runnable> initial();
    Code:
       0: aload_0
       1: getfield      #19                 // Field initial:Lscala/collection/immutable/List;
       4: areturn

  private scala.concurrent.BlockContext scala$concurrent$BatchingExecutor$Batch$$parentBlockContext();
    Code:
       0: aload_0
       1: getfield      #24                 // Field scala$concurrent$BatchingExecutor$Batch$$parentBlockContext:Lscala/concurrent/BlockContext;
       4: areturn

  public void scala$concurrent$BatchingExecutor$Batch$$parentBlockContext_$eq(scala.concurrent.BlockContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field scala$concurrent$BatchingExecutor$Batch$$parentBlockContext:Lscala/concurrent/BlockContext;
       5: return

  public void run();
    Code:
       0: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #39                 // Method scala$concurrent$BatchingExecutor$Batch$$$outer:()Lscala/concurrent/BatchingExecutor;
       7: invokeinterface #45,  1           // InterfaceMethod scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
      12: invokevirtual #51                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      15: ifnonnull     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokevirtual #55                 // Method scala/Predef$.require:(Z)V
      26: getstatic     #60                 // Field scala/concurrent/BlockContext$.MODULE$:Lscala/concurrent/BlockContext$;
      29: invokevirtual #63                 // Method scala/concurrent/BlockContext$.current:()Lscala/concurrent/BlockContext;
      32: astore_1
      33: getstatic     #60                 // Field scala/concurrent/BlockContext$.MODULE$:Lscala/concurrent/BlockContext$;
      36: aload_0
      37: new           #65                 // class scala/concurrent/BatchingExecutor$Batch$$anonfun$run$1
      40: dup
      41: aload_0
      42: aload_1
      43: invokespecial #69                 // Method scala/concurrent/BatchingExecutor$Batch$$anonfun$run$1."<init>":(Lscala/concurrent/BatchingExecutor$Batch;Lscala/concurrent/BlockContext;)V
      46: invokevirtual #73                 // Method scala/concurrent/BlockContext$.withBlockContext:(Lscala/concurrent/BlockContext;Lscala/Function0;)Ljava/lang/Object;
      49: pop
      50: return

  public <T> T blockOn(scala.Function0<T>, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method scala$concurrent$BatchingExecutor$Batch$$$outer:()Lscala/concurrent/BatchingExecutor;
       4: invokeinterface #45,  1           // InterfaceMethod scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
       9: invokevirtual #51                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      12: checkcast     #78                 // class scala/collection/immutable/List
      15: astore_3
      16: aload_0
      17: invokevirtual #39                 // Method scala$concurrent$BatchingExecutor$Batch$$$outer:()Lscala/concurrent/BatchingExecutor;
      20: invokeinterface #45,  1           // InterfaceMethod scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
      25: getstatic     #83                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      28: invokevirtual #87                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      31: aload_3
      32: ifnull        63
      35: aload_3
      36: invokevirtual #91                 // Method scala/collection/immutable/List.nonEmpty:()Z
      39: ifeq          63
      42: aload_0
      43: invokevirtual #39                 // Method scala$concurrent$BatchingExecutor$Batch$$$outer:()Lscala/concurrent/BatchingExecutor;
      46: new           #2                  // class scala/concurrent/BatchingExecutor$Batch
      49: dup
      50: aload_0
      51: invokevirtual #39                 // Method scala$concurrent$BatchingExecutor$Batch$$$outer:()Lscala/concurrent/BatchingExecutor;
      54: aload_3
      55: invokespecial #94                 // Method "<init>":(Lscala/concurrent/BatchingExecutor;Lscala/collection/immutable/List;)V
      58: invokeinterface #98,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.unbatchedExecute:(Ljava/lang/Runnable;)V
      63: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      66: aload_0
      67: invokespecial #100                // Method scala$concurrent$BatchingExecutor$Batch$$parentBlockContext:()Lscala/concurrent/BlockContext;
      70: ifnull        77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: invokevirtual #55                 // Method scala/Predef$.require:(Z)V
      81: aload_0
      82: invokespecial #100                // Method scala$concurrent$BatchingExecutor$Batch$$parentBlockContext:()Lscala/concurrent/BlockContext;
      85: aload_1
      86: aload_2
      87: invokeinterface #102,  3          // InterfaceMethod scala/concurrent/BlockContext.blockOn:(Lscala/Function0;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
      92: areturn

  public scala.concurrent.BatchingExecutor scala$concurrent$BatchingExecutor$Batch$$$outer();
    Code:
       0: aload_0
       1: getfield      #113                // Field $outer:Lscala/concurrent/BatchingExecutor;
       4: areturn

  public scala.concurrent.BatchingExecutor$Batch(scala.concurrent.BatchingExecutor, scala.collection.immutable.List<java.lang.Runnable>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #19                 // Field initial:Lscala/collection/immutable/List;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #113                // Field $outer:Lscala/concurrent/BatchingExecutor;
      16: aload_0
      17: invokespecial #115                // Method java/lang/Object."<init>":()V
      20: return
}
