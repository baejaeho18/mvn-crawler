Compiled from "Lock.scala"
public class scala.concurrent.Lock {
  private boolean available;

  public boolean available();
    Code:
       0: aload_0
       1: getfield      #13                 // Field available:Z
       4: ireturn

  public void available_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field available:Z
       5: return

  public synchronized void acquire();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method available:()Z
       4: ifeq          13
       7: aload_0
       8: iconst_0
       9: invokevirtual #24                 // Method available_$eq:(Z)V
      12: return
      13: aload_0
      14: invokevirtual #27                 // Method java/lang/Object.wait:()V
      17: goto          0

  public synchronized void release();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #24                 // Method available_$eq:(Z)V
       5: aload_0
       6: invokevirtual #31                 // Method java/lang/Object.notify:()V
       9: return

  public scala.concurrent.Lock();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #13                 // Field available:Z
       9: return
}
