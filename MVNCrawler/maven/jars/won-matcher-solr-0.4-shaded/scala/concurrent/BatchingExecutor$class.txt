Compiled from "BatchingExecutor.scala"
public abstract class scala.concurrent.BatchingExecutor$class {
  public static void execute(scala.concurrent.BatchingExecutor, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.batchable:(Ljava/lang/Runnable;)Z
       7: ifeq          92
      10: aload_0
      11: invokeinterface #17,  1           // InterfaceMethod scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
      16: invokevirtual #23                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      19: checkcast     #25                 // class scala/collection/immutable/List
      22: astore_2
      23: aload_2
      24: ifnonnull     71
      27: aload_0
      28: new           #27                 // class scala/concurrent/BatchingExecutor$Batch
      31: dup
      32: aload_0
      33: getstatic     #33                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      36: getstatic     #38                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      39: iconst_1
      40: anewarray     #40                 // class java/lang/Runnable
      43: dup
      44: iconst_0
      45: aload_1
      46: aastore
      47: checkcast     #42                 // class "[Ljava/lang/Object;"
      50: invokevirtual #46                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      53: invokevirtual #50                 // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      56: invokespecial #54                 // Method scala/concurrent/BatchingExecutor$Batch."<init>":(Lscala/concurrent/BatchingExecutor;Lscala/collection/immutable/List;)V
      59: invokeinterface #58,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.unbatchedExecute:(Ljava/lang/Runnable;)V
      64: getstatic     #64                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      67: pop
      68: goto          99
      71: aload_0
      72: invokeinterface #17,  1           // InterfaceMethod scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
      77: aload_2
      78: aload_1
      79: invokevirtual #68                 // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      82: invokevirtual #72                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      85: getstatic     #64                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      88: pop
      89: goto          99
      92: aload_0
      93: aload_1
      94: invokeinterface #58,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.unbatchedExecute:(Ljava/lang/Runnable;)V
      99: return

  public static boolean batchable(scala.concurrent.BatchingExecutor, java.lang.Runnable);
    Code:
       0: aload_1
       1: instanceof    #79                 // class scala/concurrent/OnCompleteRunnable
       4: ifeq          12
       7: iconst_1
       8: istore_2
       9: goto          14
      12: iconst_0
      13: istore_2
      14: iload_2
      15: ireturn

  public static void $init$(scala.concurrent.BatchingExecutor);
    Code:
       0: aload_0
       1: new           #19                 // class java/lang/ThreadLocal
       4: dup
       5: invokespecial #84                 // Method java/lang/ThreadLocal."<init>":()V
       8: invokeinterface #88,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq:(Ljava/lang/ThreadLocal;)V
      13: return
}
