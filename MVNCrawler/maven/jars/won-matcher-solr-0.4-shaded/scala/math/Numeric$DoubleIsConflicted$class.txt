Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$DoubleIsConflicted$class {
  public static double plus(scala.math.Numeric$DoubleIsConflicted, double, double);
    Code:
       0: dload_1
       1: dload_3
       2: dadd
       3: dreturn

  public static double minus(scala.math.Numeric$DoubleIsConflicted, double, double);
    Code:
       0: dload_1
       1: dload_3
       2: dsub
       3: dreturn

  public static double times(scala.math.Numeric$DoubleIsConflicted, double, double);
    Code:
       0: dload_1
       1: dload_3
       2: dmul
       3: dreturn

  public static double negate(scala.math.Numeric$DoubleIsConflicted, double);
    Code:
       0: dload_1
       1: dneg
       2: dreturn

  public static double fromInt(scala.math.Numeric$DoubleIsConflicted, int);
    Code:
       0: iload_1
       1: i2d
       2: dreturn

  public static int toInt(scala.math.Numeric$DoubleIsConflicted, double);
    Code:
       0: dload_1
       1: d2i
       2: ireturn

  public static long toLong(scala.math.Numeric$DoubleIsConflicted, double);
    Code:
       0: dload_1
       1: d2l
       2: lreturn

  public static float toFloat(scala.math.Numeric$DoubleIsConflicted, double);
    Code:
       0: dload_1
       1: d2f
       2: freturn

  public static double toDouble(scala.math.Numeric$DoubleIsConflicted, double);
    Code:
       0: dload_1
       1: dreturn

  public static double abs(scala.math.Numeric$DoubleIsConflicted, double);
    Code:
       0: getstatic     #33                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: dload_1
       4: invokevirtual #36                 // Method scala/math/package$.abs:(D)D
       7: dreturn

  public static void $init$(scala.math.Numeric$DoubleIsConflicted);
    Code:
       0: return
}
