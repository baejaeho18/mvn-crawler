Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$FloatIsConflicted$class {
  public static float plus(scala.math.Numeric$FloatIsConflicted, float, float);
    Code:
       0: fload_1
       1: fload_2
       2: fadd
       3: freturn

  public static float minus(scala.math.Numeric$FloatIsConflicted, float, float);
    Code:
       0: fload_1
       1: fload_2
       2: fsub
       3: freturn

  public static float times(scala.math.Numeric$FloatIsConflicted, float, float);
    Code:
       0: fload_1
       1: fload_2
       2: fmul
       3: freturn

  public static float negate(scala.math.Numeric$FloatIsConflicted, float);
    Code:
       0: fload_1
       1: fneg
       2: freturn

  public static float fromInt(scala.math.Numeric$FloatIsConflicted, int);
    Code:
       0: iload_1
       1: i2f
       2: freturn

  public static int toInt(scala.math.Numeric$FloatIsConflicted, float);
    Code:
       0: fload_1
       1: f2i
       2: ireturn

  public static long toLong(scala.math.Numeric$FloatIsConflicted, float);
    Code:
       0: fload_1
       1: f2l
       2: lreturn

  public static float toFloat(scala.math.Numeric$FloatIsConflicted, float);
    Code:
       0: fload_1
       1: freturn

  public static double toDouble(scala.math.Numeric$FloatIsConflicted, float);
    Code:
       0: fload_1
       1: f2d
       2: dreturn

  public static float abs(scala.math.Numeric$FloatIsConflicted, float);
    Code:
       0: getstatic     #33                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: fload_1
       4: invokevirtual #36                 // Method scala/math/package$.abs:(F)F
       7: freturn

  public static void $init$(scala.math.Numeric$FloatIsConflicted);
    Code:
       0: return
}
