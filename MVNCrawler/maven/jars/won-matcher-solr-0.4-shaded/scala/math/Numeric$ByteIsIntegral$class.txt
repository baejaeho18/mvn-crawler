Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$ByteIsIntegral$class {
  public static byte plus(scala.math.Numeric$ByteIsIntegral, byte, byte);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: i2b
       4: ireturn

  public static byte minus(scala.math.Numeric$ByteIsIntegral, byte, byte);
    Code:
       0: iload_1
       1: iload_2
       2: isub
       3: i2b
       4: ireturn

  public static byte times(scala.math.Numeric$ByteIsIntegral, byte, byte);
    Code:
       0: iload_1
       1: iload_2
       2: imul
       3: i2b
       4: ireturn

  public static byte quot(scala.math.Numeric$ByteIsIntegral, byte, byte);
    Code:
       0: iload_1
       1: iload_2
       2: idiv
       3: i2b
       4: ireturn

  public static byte rem(scala.math.Numeric$ByteIsIntegral, byte, byte);
    Code:
       0: iload_1
       1: iload_2
       2: irem
       3: i2b
       4: ireturn

  public static byte negate(scala.math.Numeric$ByteIsIntegral, byte);
    Code:
       0: iload_1
       1: ineg
       2: i2b
       3: ireturn

  public static byte fromInt(scala.math.Numeric$ByteIsIntegral, int);
    Code:
       0: iload_1
       1: i2b
       2: ireturn

  public static int toInt(scala.math.Numeric$ByteIsIntegral, byte);
    Code:
       0: iload_1
       1: ireturn

  public static long toLong(scala.math.Numeric$ByteIsIntegral, byte);
    Code:
       0: iload_1
       1: i2l
       2: lreturn

  public static float toFloat(scala.math.Numeric$ByteIsIntegral, byte);
    Code:
       0: iload_1
       1: i2f
       2: freturn

  public static double toDouble(scala.math.Numeric$ByteIsIntegral, byte);
    Code:
       0: iload_1
       1: i2d
       2: dreturn

  public static void $init$(scala.math.Numeric$ByteIsIntegral);
    Code:
       0: return
}
