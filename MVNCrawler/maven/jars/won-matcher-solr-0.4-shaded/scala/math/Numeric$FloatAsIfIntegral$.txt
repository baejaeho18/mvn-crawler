Compiled from "Numeric.scala"
public class scala.math.Numeric$FloatAsIfIntegral$ implements scala.math.Numeric$FloatAsIfIntegral,scala.math.Ordering$FloatOrdering {
  public static final scala.math.Numeric$FloatAsIfIntegral$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scala/math/Numeric$FloatAsIfIntegral$
       3: invokespecial #16                 // Method "<init>":()V
       6: return

  public int compare(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #23                 // Method scala/math/Ordering$FloatOrdering$class.compare:(Lscala/math/Ordering$FloatOrdering;FF)I
       6: ireturn

  public boolean lteq(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #32                 // Method scala/math/Ordering$FloatOrdering$class.lteq:(Lscala/math/Ordering$FloatOrdering;FF)Z
       6: ireturn

  public boolean gteq(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #35                 // Method scala/math/Ordering$FloatOrdering$class.gteq:(Lscala/math/Ordering$FloatOrdering;FF)Z
       6: ireturn

  public boolean lt(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #38                 // Method scala/math/Ordering$FloatOrdering$class.lt:(Lscala/math/Ordering$FloatOrdering;FF)Z
       6: ireturn

  public boolean gt(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #41                 // Method scala/math/Ordering$FloatOrdering$class.gt:(Lscala/math/Ordering$FloatOrdering;FF)Z
       6: ireturn

  public boolean equiv(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #44                 // Method scala/math/Ordering$FloatOrdering$class.equiv:(Lscala/math/Ordering$FloatOrdering;FF)Z
       6: ireturn

  public float max(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #49                 // Method scala/math/Ordering$FloatOrdering$class.max:(Lscala/math/Ordering$FloatOrdering;FF)F
       6: freturn

  public float min(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #52                 // Method scala/math/Ordering$FloatOrdering$class.min:(Lscala/math/Ordering$FloatOrdering;FF)F
       6: freturn

  public scala.math.Ordering<java.lang.Object> reverse();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method scala/math/Ordering$FloatOrdering$class.reverse:(Lscala/math/Ordering$FloatOrdering;)Lscala/math/Ordering;
       4: areturn

  public float quot(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #63                 // Method scala/math/Numeric$FloatAsIfIntegral$class.quot:(Lscala/math/Numeric$FloatAsIfIntegral;FF)F
       6: freturn

  public float rem(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #66                 // Method scala/math/Numeric$FloatAsIfIntegral$class.rem:(Lscala/math/Numeric$FloatAsIfIntegral;FF)F
       6: freturn

  public scala.math.Integral$IntegralOps mkNumericOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #73                 // Method scala/math/Integral$class.mkNumericOps:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
       5: areturn

  public float plus(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #81                 // Method scala/math/Numeric$FloatIsConflicted$class.plus:(Lscala/math/Numeric$FloatIsConflicted;FF)F
       6: freturn

  public float minus(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #84                 // Method scala/math/Numeric$FloatIsConflicted$class.minus:(Lscala/math/Numeric$FloatIsConflicted;FF)F
       6: freturn

  public float times(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: invokestatic  #87                 // Method scala/math/Numeric$FloatIsConflicted$class.times:(Lscala/math/Numeric$FloatIsConflicted;FF)F
       6: freturn

  public float negate(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #92                 // Method scala/math/Numeric$FloatIsConflicted$class.negate:(Lscala/math/Numeric$FloatIsConflicted;F)F
       5: freturn

  public float fromInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #97                 // Method scala/math/Numeric$FloatIsConflicted$class.fromInt:(Lscala/math/Numeric$FloatIsConflicted;I)F
       5: freturn

  public int toInt(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #103                // Method scala/math/Numeric$FloatIsConflicted$class.toInt:(Lscala/math/Numeric$FloatIsConflicted;F)I
       5: ireturn

  public long toLong(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #108                // Method scala/math/Numeric$FloatIsConflicted$class.toLong:(Lscala/math/Numeric$FloatIsConflicted;F)J
       5: lreturn

  public float toFloat(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #111                // Method scala/math/Numeric$FloatIsConflicted$class.toFloat:(Lscala/math/Numeric$FloatIsConflicted;F)F
       5: freturn

  public double toDouble(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #116                // Method scala/math/Numeric$FloatIsConflicted$class.toDouble:(Lscala/math/Numeric$FloatIsConflicted;F)D
       5: dreturn

  public float abs(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #119                // Method scala/math/Numeric$FloatIsConflicted$class.abs:(Lscala/math/Numeric$FloatIsConflicted;F)F
       5: freturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method scala/math/Numeric$class.zero:(Lscala/math/Numeric;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object one();
    Code:
       0: aload_0
       1: invokestatic  #129                // Method scala/math/Numeric$class.one:(Lscala/math/Numeric;)Ljava/lang/Object;
       4: areturn

  public int signum(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // Method scala/math/Numeric$class.signum:(Lscala/math/Numeric;Ljava/lang/Object;)I
       5: ireturn

  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #141                // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #146                // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #153                // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #156                // Field MODULE$:Lscala/math/Numeric$FloatAsIfIntegral$;
       3: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #159                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public java.lang.Object abs(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #168                // Method abs:(F)F
       8: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: areturn

  public double toDouble(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #175                // Method toDouble:(F)D
       8: dreturn

  public float toFloat(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #177                // Method toFloat:(F)F
       8: freturn

  public long toLong(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #180                // Method toLong:(F)J
       8: lreturn

  public int toInt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #182                // Method toInt:(F)I
       8: ireturn

  public java.lang.Object fromInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #185                // Method fromInt:(I)F
       5: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       8: areturn

  public java.lang.Object negate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: invokevirtual #187                // Method negate:(F)F
       8: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: areturn

  public java.lang.Object times(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #190                // Method times:(FF)F
      12: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      15: areturn

  public java.lang.Object minus(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #192                // Method minus:(FF)F
      12: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      15: areturn

  public java.lang.Object plus(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #194                // Method plus:(FF)F
      12: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      15: areturn

  public scala.math.Numeric$Ops mkNumericOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #197                // Method mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
       5: areturn

  public java.lang.Object rem(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #199                // Method rem:(FF)F
      12: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      15: areturn

  public java.lang.Object quot(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #201                // Method quot:(FF)F
      12: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      15: areturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #204                // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #206                // Method min:(FF)F
      12: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      15: areturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #208                // Method max:(FF)F
      12: invokestatic  #172                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      15: areturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #211                // Method equiv:(FF)Z
      12: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #213                // Method gt:(FF)Z
      12: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #215                // Method lt:(FF)Z
      12: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #217                // Method gteq:(FF)Z
      12: ireturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #219                // Method lteq:(FF)Z
      12: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       5: aload_2
       6: invokestatic  #166                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       9: invokevirtual #222                // Method compare:(FF)I
      12: ireturn

  public scala.math.Numeric$FloatAsIfIntegral$();
    Code:
       0: aload_0
       1: invokespecial #223                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #156                // Field MODULE$:Lscala/math/Numeric$FloatAsIfIntegral$;
       8: aload_0
       9: invokestatic  #229                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      12: aload_0
      13: invokestatic  #232                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      16: aload_0
      17: invokestatic  #235                // Method scala/math/Numeric$class.$init$:(Lscala/math/Numeric;)V
      20: aload_0
      21: invokestatic  #238                // Method scala/math/Numeric$FloatIsConflicted$class.$init$:(Lscala/math/Numeric$FloatIsConflicted;)V
      24: aload_0
      25: invokestatic  #241                // Method scala/math/Integral$class.$init$:(Lscala/math/Integral;)V
      28: aload_0
      29: invokestatic  #244                // Method scala/math/Numeric$FloatAsIfIntegral$class.$init$:(Lscala/math/Numeric$FloatAsIfIntegral;)V
      32: aload_0
      33: invokestatic  #247                // Method scala/math/Ordering$FloatOrdering$class.$init$:(Lscala/math/Ordering$FloatOrdering;)V
      36: return
}
