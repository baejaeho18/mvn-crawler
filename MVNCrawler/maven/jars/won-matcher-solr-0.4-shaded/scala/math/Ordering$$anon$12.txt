Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anon$12 implements scala.math.Ordering<scala.Tuple3<T1, T2, T3>> {
  private final scala.math.Ordering ord1$7;

  private final scala.math.Ordering ord2$7;

  private final scala.math.Ordering ord3$7;

  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #24                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #37                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #46                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<scala.Tuple3<T1, T2, T3>> reverse();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, scala.Tuple3<T1, T2, T3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(scala.Tuple3<T1, T2, T3>, scala.Tuple3<T1, T2, T3>);
    Code:
       0: aload_0
       1: getfield      #76                 // Field ord1$7:Lscala/math/Ordering;
       4: aload_1
       5: invokevirtual #82                 // Method scala/Tuple3._1:()Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #82                 // Method scala/Tuple3._1:()Ljava/lang/Object;
      12: invokeinterface #85,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      17: istore_3
      18: iload_3
      19: iconst_0
      20: if_icmpeq     25
      23: iload_3
      24: ireturn
      25: aload_0
      26: getfield      #87                 // Field ord2$7:Lscala/math/Ordering;
      29: aload_1
      30: invokevirtual #90                 // Method scala/Tuple3._2:()Ljava/lang/Object;
      33: aload_2
      34: invokevirtual #90                 // Method scala/Tuple3._2:()Ljava/lang/Object;
      37: invokeinterface #85,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      42: istore        4
      44: iload         4
      46: iconst_0
      47: if_icmpeq     53
      50: iload         4
      52: ireturn
      53: aload_0
      54: getfield      #92                 // Field ord3$7:Lscala/math/Ordering;
      57: aload_1
      58: invokevirtual #95                 // Method scala/Tuple3._3:()Ljava/lang/Object;
      61: aload_2
      62: invokevirtual #95                 // Method scala/Tuple3._3:()Ljava/lang/Object;
      65: invokeinterface #85,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      70: istore        5
      72: iload         5
      74: iconst_0
      75: if_icmpeq     81
      78: iload         5
      80: ireturn
      81: iconst_0
      82: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #106                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #78                 // class scala/Tuple3
       5: aload_2
       6: checkcast     #78                 // class scala/Tuple3
       9: invokevirtual #108                // Method compare:(Lscala/Tuple3;Lscala/Tuple3;)I
      12: ireturn

  public scala.math.Ordering$$anon$12(scala.math.Ordering, scala.math.Ordering, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field ord1$7:Lscala/math/Ordering;
       5: aload_0
       6: aload_2
       7: putfield      #87                 // Field ord2$7:Lscala/math/Ordering;
      10: aload_0
      11: aload_3
      12: putfield      #92                 // Field ord3$7:Lscala/math/Ordering;
      15: aload_0
      16: invokespecial #113                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #119                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      23: aload_0
      24: invokestatic  #122                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      27: return
}
