Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anon$13 implements scala.math.Ordering<scala.Tuple4<T1, T2, T3, T4>> {
  private final scala.math.Ordering ord1$6;

  private final scala.math.Ordering ord2$6;

  private final scala.math.Ordering ord3$6;

  private final scala.math.Ordering ord4$6;

  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #25                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #41                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<scala.Tuple4<T1, T2, T3, T4>> reverse();
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, scala.Tuple4<T1, T2, T3, T4>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(scala.Tuple4<T1, T2, T3, T4>, scala.Tuple4<T1, T2, T3, T4>);
    Code:
       0: aload_0
       1: getfield      #77                 // Field ord1$6:Lscala/math/Ordering;
       4: aload_1
       5: invokevirtual #83                 // Method scala/Tuple4._1:()Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #83                 // Method scala/Tuple4._1:()Ljava/lang/Object;
      12: invokeinterface #86,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      17: istore_3
      18: iload_3
      19: iconst_0
      20: if_icmpeq     25
      23: iload_3
      24: ireturn
      25: aload_0
      26: getfield      #88                 // Field ord2$6:Lscala/math/Ordering;
      29: aload_1
      30: invokevirtual #91                 // Method scala/Tuple4._2:()Ljava/lang/Object;
      33: aload_2
      34: invokevirtual #91                 // Method scala/Tuple4._2:()Ljava/lang/Object;
      37: invokeinterface #86,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      42: istore        4
      44: iload         4
      46: iconst_0
      47: if_icmpeq     53
      50: iload         4
      52: ireturn
      53: aload_0
      54: getfield      #93                 // Field ord3$6:Lscala/math/Ordering;
      57: aload_1
      58: invokevirtual #96                 // Method scala/Tuple4._3:()Ljava/lang/Object;
      61: aload_2
      62: invokevirtual #96                 // Method scala/Tuple4._3:()Ljava/lang/Object;
      65: invokeinterface #86,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      70: istore        5
      72: iload         5
      74: iconst_0
      75: if_icmpeq     81
      78: iload         5
      80: ireturn
      81: aload_0
      82: getfield      #98                 // Field ord4$6:Lscala/math/Ordering;
      85: aload_1
      86: invokevirtual #101                // Method scala/Tuple4._4:()Ljava/lang/Object;
      89: aload_2
      90: invokevirtual #101                // Method scala/Tuple4._4:()Ljava/lang/Object;
      93: invokeinterface #86,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      98: istore        6
     100: iload         6
     102: iconst_0
     103: if_icmpeq     109
     106: iload         6
     108: ireturn
     109: iconst_0
     110: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #113                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #79                 // class scala/Tuple4
       5: aload_2
       6: checkcast     #79                 // class scala/Tuple4
       9: invokevirtual #115                // Method compare:(Lscala/Tuple4;Lscala/Tuple4;)I
      12: ireturn

  public scala.math.Ordering$$anon$13(scala.math.Ordering, scala.math.Ordering, scala.math.Ordering, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field ord1$6:Lscala/math/Ordering;
       5: aload_0
       6: aload_2
       7: putfield      #88                 // Field ord2$6:Lscala/math/Ordering;
      10: aload_0
      11: aload_3
      12: putfield      #93                 // Field ord3$6:Lscala/math/Ordering;
      15: aload_0
      16: aload         4
      18: putfield      #98                 // Field ord4$6:Lscala/math/Ordering;
      21: aload_0
      22: invokespecial #120                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #126                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      29: aload_0
      30: invokestatic  #129                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      33: return
}
