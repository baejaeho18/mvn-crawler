Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anon$11 implements scala.math.Ordering<scala.Tuple2<T1, T2>> {
  private final scala.math.Ordering ord1$8;

  private final scala.math.Ordering ord2$8;

  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #23                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #33                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #45                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<scala.Tuple2<T1, T2>> reverse();
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, scala.Tuple2<T1, T2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(scala.Tuple2<T1, T2>, scala.Tuple2<T1, T2>);
    Code:
       0: aload_0
       1: getfield      #75                 // Field ord1$8:Lscala/math/Ordering;
       4: aload_1
       5: invokevirtual #81                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #81                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      12: invokeinterface #84,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      17: istore_3
      18: iload_3
      19: iconst_0
      20: if_icmpeq     25
      23: iload_3
      24: ireturn
      25: aload_0
      26: getfield      #86                 // Field ord2$8:Lscala/math/Ordering;
      29: aload_1
      30: invokevirtual #89                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      33: aload_2
      34: invokevirtual #89                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      37: invokeinterface #84,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      42: istore        4
      44: iload         4
      46: iconst_0
      47: if_icmpeq     53
      50: iload         4
      52: ireturn
      53: iconst_0
      54: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #99                 // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #77                 // class scala/Tuple2
       5: aload_2
       6: checkcast     #77                 // class scala/Tuple2
       9: invokevirtual #101                // Method compare:(Lscala/Tuple2;Lscala/Tuple2;)I
      12: ireturn

  public scala.math.Ordering$$anon$11(scala.math.Ordering, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field ord1$8:Lscala/math/Ordering;
       5: aload_0
       6: aload_2
       7: putfield      #86                 // Field ord2$8:Lscala/math/Ordering;
      10: aload_0
      11: invokespecial #106                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #112                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      18: aload_0
      19: invokestatic  #115                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      22: return
}
