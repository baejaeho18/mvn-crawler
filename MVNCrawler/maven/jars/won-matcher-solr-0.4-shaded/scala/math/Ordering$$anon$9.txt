Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anon$9 implements scala.math.Ordering<T> {
  private final scala.Function2 cmp$1;

  public scala.Some<java.lang.Object> tryCompare(T, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean equiv(T, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #32                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public T max(T, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #37                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public T min(T, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<T> reverse();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering<T>.Ops mkOrderingOps(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(T, T);
    Code:
       0: aload_0
       1: getfield      #62                 // Field cmp$1:Lscala/Function2;
       4: aload_1
       5: aload_2
       6: invokeinterface #67,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_m1
      18: goto          43
      21: aload_0
      22: getfield      #62                 // Field cmp$1:Lscala/Function2;
      25: aload_2
      26: aload_1
      27: invokeinterface #67,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public boolean lt(T, T);
    Code:
       0: aload_0
       1: getfield      #62                 // Field cmp$1:Lscala/Function2;
       4: aload_1
       5: aload_2
       6: invokeinterface #67,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean gt(T, T);
    Code:
       0: aload_0
       1: getfield      #62                 // Field cmp$1:Lscala/Function2;
       4: aload_2
       5: aload_1
       6: invokeinterface #67,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean gteq(T, T);
    Code:
       0: aload_0
       1: getfield      #62                 // Field cmp$1:Lscala/Function2;
       4: aload_1
       5: aload_2
       6: invokeinterface #67,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_0
      18: goto          22
      21: iconst_1
      22: ireturn

  public boolean lteq(T, T);
    Code:
       0: aload_0
       1: getfield      #62                 // Field cmp$1:Lscala/Function2;
       4: aload_2
       5: aload_1
       6: invokeinterface #67,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_0
      18: goto          22
      21: iconst_1
      22: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #83                 // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public scala.math.Ordering$$anon$9(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field cmp$1:Lscala/Function2;
       5: aload_0
       6: invokespecial #88                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #94                 // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      13: aload_0
      14: invokestatic  #97                 // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      17: return
}
