Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anon$5 implements scala.math.Ordering<U> {
  private final scala.math.Ordering $outer;

  private final scala.Function1 f$2;

  public scala.Some<java.lang.Object> tryCompare(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #32                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #41                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public U max(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public U min(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<U> reverse();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering<U>.Ops mkOrderingOps(U);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(U, U);
    Code:
       0: aload_0
       1: getfield      #71                 // Field $outer:Lscala/math/Ordering;
       4: aload_0
       5: getfield      #73                 // Field f$2:Lscala/Function1;
       8: aload_1
       9: invokeinterface #79,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_0
      15: getfield      #73                 // Field f$2:Lscala/Function1;
      18: aload_2
      19: invokeinterface #79,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokeinterface #81,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      29: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #87                 // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public scala.math.Ordering$$anon$5(scala.math.Ordering<T>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #71                 // Field $outer:Lscala/math/Ordering;
      11: aload_0
      12: aload_2
      13: putfield      #73                 // Field f$2:Lscala/Function1;
      16: aload_0
      17: invokespecial #92                 // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #98                 // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      24: aload_0
      25: invokestatic  #101                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      28: return
}
