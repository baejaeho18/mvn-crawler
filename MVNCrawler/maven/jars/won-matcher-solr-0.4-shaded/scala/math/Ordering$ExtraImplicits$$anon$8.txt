Compiled from "Ordering.scala"
public final class scala.math.Ordering$ExtraImplicits$$anon$8 implements scala.math.Ordering<CC> {
  private final scala.math.Ordering ord$4;

  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #32                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #41                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<CC> reverse();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, CC>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(CC, CC);
    Code:
       0: aload_1
       1: invokeinterface #77,  1           // InterfaceMethod scala/collection/Seq.iterator:()Lscala/collection/Iterator;
       6: astore_3
       7: aload_2
       8: invokeinterface #77,  1           // InterfaceMethod scala/collection/Seq.iterator:()Lscala/collection/Iterator;
      13: astore        4
      15: aload_3
      16: invokeinterface #83,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      21: ifeq          67
      24: aload         4
      26: invokeinterface #83,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      31: ifeq          67
      34: aload_0
      35: getfield      #85                 // Field ord$4:Lscala/math/Ordering;
      38: aload_3
      39: invokeinterface #89,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      44: aload         4
      46: invokeinterface #89,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      51: invokeinterface #92,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      56: istore        5
      58: iload         5
      60: iconst_0
      61: if_icmpeq     15
      64: iload         5
      66: ireturn
      67: getstatic     #98                 // Field scala/math/Ordering$Boolean$.MODULE$:Lscala/math/Ordering$Boolean$;
      70: aload_3
      71: invokeinterface #83,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      76: aload         4
      78: invokeinterface #83,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      83: invokevirtual #101                // Method scala/math/Ordering$Boolean$.compare:(ZZ)I
      86: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #113                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #73                 // class scala/collection/Seq
       5: aload_2
       6: checkcast     #73                 // class scala/collection/Seq
       9: invokevirtual #115                // Method compare:(Lscala/collection/Seq;Lscala/collection/Seq;)I
      12: ireturn

  public scala.math.Ordering$ExtraImplicits$$anon$8(scala.math.Ordering$ExtraImplicits, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #85                 // Field ord$4:Lscala/math/Ordering;
       5: aload_0
       6: invokespecial #120                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #126                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      13: aload_0
      14: invokestatic  #129                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      17: return
}
