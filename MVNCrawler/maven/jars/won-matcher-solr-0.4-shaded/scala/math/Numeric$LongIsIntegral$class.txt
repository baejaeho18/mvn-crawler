Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$LongIsIntegral$class {
  public static long plus(scala.math.Numeric$LongIsIntegral, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: ladd
       3: lreturn

  public static long minus(scala.math.Numeric$LongIsIntegral, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lsub
       3: lreturn

  public static long times(scala.math.Numeric$LongIsIntegral, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lmul
       3: lreturn

  public static long quot(scala.math.Numeric$LongIsIntegral, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: ldiv
       3: lreturn

  public static long rem(scala.math.Numeric$LongIsIntegral, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lrem
       3: lreturn

  public static long negate(scala.math.Numeric$LongIsIntegral, long);
    Code:
       0: lload_1
       1: lneg
       2: lreturn

  public static long fromInt(scala.math.Numeric$LongIsIntegral, int);
    Code:
       0: iload_1
       1: i2l
       2: lreturn

  public static int toInt(scala.math.Numeric$LongIsIntegral, long);
    Code:
       0: lload_1
       1: l2i
       2: ireturn

  public static long toLong(scala.math.Numeric$LongIsIntegral, long);
    Code:
       0: lload_1
       1: lreturn

  public static float toFloat(scala.math.Numeric$LongIsIntegral, long);
    Code:
       0: lload_1
       1: l2f
       2: freturn

  public static double toDouble(scala.math.Numeric$LongIsIntegral, long);
    Code:
       0: lload_1
       1: l2d
       2: dreturn

  public static void $init$(scala.math.Numeric$LongIsIntegral);
    Code:
       0: return
}
