Compiled from "IteratorPrimitiveIntWrapper.java"
public class scala.compat.java8.wrappers.IteratorPrimitiveIntWrapper implements java.util.PrimitiveIterator$OfInt {
  private java.util.Iterator<java.lang.Integer> it;

  public scala.compat.java8.wrappers.IteratorPrimitiveIntWrapper(java.util.Iterator<java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field it:Ljava/util/Iterator;
       9: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field it:Ljava/util/Iterator;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public int nextInt();
    Code:
       0: aload_0
       1: getfield      #2                  // Field it:Ljava/util/Iterator;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #5                  // class java/lang/Integer
      12: invokevirtual #6                  // Method java/lang/Integer.intValue:()I
      15: ireturn

  public void forEachRemaining(java.util.function.Consumer<? super java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field it:Ljava/util/Iterator;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Iterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      10: return
}
