Compiled from "Manifest.scala"
public final class scala.reflect.ManifestFactory$$anon$12 extends scala.reflect.AnyValManifest<java.lang.Object> {
  public java.lang.Class<java.lang.Double> runtimeClass();
    Code:
       0: getstatic     #16                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
       3: areturn

  public double[] newArray(int);
    Code:
       0: iload_1
       1: newarray       double
       3: areturn

  public scala.collection.mutable.WrappedArray<java.lang.Object> newWrappedArray(int);
    Code:
       0: new           #26                 // class scala/collection/mutable/WrappedArray$ofDouble
       3: dup
       4: iload_1
       5: newarray       double
       7: invokespecial #30                 // Method scala/collection/mutable/WrappedArray$ofDouble."<init>":([D)V
      10: areturn

  public scala.collection.mutable.ArrayBuilder<java.lang.Object> newArrayBuilder();
    Code:
       0: new           #34                 // class scala/collection/mutable/ArrayBuilder$ofDouble
       3: dup
       4: invokespecial #37                 // Method scala/collection/mutable/ArrayBuilder$ofDouble."<init>":()V
       7: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #45                 // Field scala/reflect/package$.MODULE$:Lscala/reflect/package$;
       3: invokevirtual #49                 // Method scala/reflect/package$.Manifest:()Lscala/reflect/ManifestFactory$;
       6: invokevirtual #53                 // Method scala/reflect/ManifestFactory$.Double:()Lscala/reflect/AnyValManifest;
       9: areturn

  public java.lang.Object newArray(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method newArray:(I)[D
       5: areturn

  public scala.reflect.ManifestFactory$$anon$12();
    Code:
       0: aload_0
       1: ldc           #57                 // String Double
       3: invokespecial #60                 // Method scala/reflect/AnyValManifest."<init>":(Ljava/lang/String;)V
       6: return
}
