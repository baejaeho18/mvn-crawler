Compiled from "MurmurHash.scala"
public class scala.util.MurmurHash<T> implements scala.Function1<T, scala.runtime.BoxedUnit> {
  private final int seed;

  private int scala$util$MurmurHash$$h;

  private int scala$util$MurmurHash$$c;

  private int scala$util$MurmurHash$$k;

  private boolean scala$util$MurmurHash$$hashed;

  private int hashvalue;

  public static <T> int symmetricHash(scala.collection.TraversableOnce<T>, int);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: aload_0
       4: iload_1
       5: invokevirtual #21                 // Method scala/util/MurmurHash$.symmetricHash:(Lscala/collection/TraversableOnce;I)I
       8: ireturn

  public static int stringHash(java.lang.String);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: aload_0
       4: invokevirtual #25                 // Method scala/util/MurmurHash$.stringHash:(Ljava/lang/String;)I
       7: ireturn

  public static <T> int arrayHash(java.lang.Object);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: aload_0
       4: invokevirtual #29                 // Method scala/util/MurmurHash$.arrayHash:(Ljava/lang/Object;)I
       7: ireturn

  public static int finalizeHash(int);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: iload_0
       4: invokevirtual #33                 // Method scala/util/MurmurHash$.finalizeHash:(I)I
       7: ireturn

  public static int nextMagicB(int);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: iload_0
       4: invokevirtual #36                 // Method scala/util/MurmurHash$.nextMagicB:(I)I
       7: ireturn

  public static int nextMagicA(int);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: iload_0
       4: invokevirtual #39                 // Method scala/util/MurmurHash$.nextMagicA:(I)I
       7: ireturn

  public static int extendHash(int, int, int, int);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: iload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #43                 // Method scala/util/MurmurHash$.extendHash:(IIII)I
      10: ireturn

  public static int startMagicB();
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: invokevirtual #47                 // Method scala/util/MurmurHash$.startMagicB:()I
       6: ireturn

  public static int startMagicA();
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: invokevirtual #50                 // Method scala/util/MurmurHash$.startMagicA:()I
       6: ireturn

  public static int startHash(int);
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: iload_0
       4: invokevirtual #53                 // Method scala/util/MurmurHash$.startHash:(I)I
       7: ireturn

  public static int[] storedMagicB();
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: invokevirtual #57                 // Method scala/util/MurmurHash$.storedMagicB:()[I
       6: areturn

  public static int[] storedMagicA();
    Code:
       0: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       3: invokevirtual #60                 // Method scala/util/MurmurHash$.storedMagicA:()[I
       6: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #75                 // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #84                 // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #89                 // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #94                 // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #99                 // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #104                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #109                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #115                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #120                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #125                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #130                // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #135                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #140                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #145                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #150                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #154                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #159                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #164                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #169                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #175                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #180                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #185                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #190                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #195                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, scala.runtime.BoxedUnit> compose(scala.Function1<A, T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #200                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <A> scala.Function1<T, A> andThen(scala.Function1<scala.runtime.BoxedUnit, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #210                // Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
       4: areturn

  public int scala$util$MurmurHash$$h();
    Code:
       0: aload_0
       1: getfield      #212                // Field scala$util$MurmurHash$$h:I
       4: ireturn

  public void scala$util$MurmurHash$$h_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #212                // Field scala$util$MurmurHash$$h:I
       5: return

  public int scala$util$MurmurHash$$c();
    Code:
       0: aload_0
       1: getfield      #216                // Field scala$util$MurmurHash$$c:I
       4: ireturn

  public void scala$util$MurmurHash$$c_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #216                // Field scala$util$MurmurHash$$c:I
       5: return

  public int scala$util$MurmurHash$$k();
    Code:
       0: aload_0
       1: getfield      #219                // Field scala$util$MurmurHash$$k:I
       4: ireturn

  public void scala$util$MurmurHash$$k_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #219                // Field scala$util$MurmurHash$$k:I
       5: return

  private boolean scala$util$MurmurHash$$hashed();
    Code:
       0: aload_0
       1: getfield      #223                // Field scala$util$MurmurHash$$hashed:Z
       4: ireturn

  public void scala$util$MurmurHash$$hashed_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #223                // Field scala$util$MurmurHash$$hashed:Z
       5: return

  private int hashvalue();
    Code:
       0: aload_0
       1: getfield      #227                // Field hashvalue:I
       4: ireturn

  private void hashvalue_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #227                // Field hashvalue:I
       5: return

  public void reset();
    Code:
       0: aload_0
       1: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       4: aload_0
       5: getfield      #232                // Field seed:I
       8: invokevirtual #53                 // Method scala/util/MurmurHash$.startHash:(I)I
      11: invokevirtual #234                // Method scala$util$MurmurHash$$h_$eq:(I)V
      14: aload_0
      15: ldc           #235                // int -1789642873
      17: invokevirtual #237                // Method scala$util$MurmurHash$$c_$eq:(I)V
      20: aload_0
      21: ldc           #238                // int 718793509
      23: invokevirtual #240                // Method scala$util$MurmurHash$$k_$eq:(I)V
      26: aload_0
      27: iconst_0
      28: invokevirtual #242                // Method scala$util$MurmurHash$$hashed_$eq:(Z)V
      31: return

  public void apply(T);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       4: aload_0
       5: invokevirtual #246                // Method scala$util$MurmurHash$$h:()I
       8: getstatic     #251                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      11: aload_1
      12: invokevirtual #254                // Method scala/runtime/ScalaRunTime$.hash:(Ljava/lang/Object;)I
      15: aload_0
      16: invokevirtual #256                // Method scala$util$MurmurHash$$c:()I
      19: aload_0
      20: invokevirtual #258                // Method scala$util$MurmurHash$$k:()I
      23: invokevirtual #43                 // Method scala/util/MurmurHash$.extendHash:(IIII)I
      26: invokevirtual #234                // Method scala$util$MurmurHash$$h_$eq:(I)V
      29: aload_0
      30: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
      33: aload_0
      34: invokevirtual #256                // Method scala$util$MurmurHash$$c:()I
      37: invokevirtual #39                 // Method scala/util/MurmurHash$.nextMagicA:(I)I
      40: invokevirtual #237                // Method scala$util$MurmurHash$$c_$eq:(I)V
      43: aload_0
      44: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
      47: aload_0
      48: invokevirtual #258                // Method scala$util$MurmurHash$$k:()I
      51: invokevirtual #36                 // Method scala/util/MurmurHash$.nextMagicB:(I)I
      54: invokevirtual #240                // Method scala$util$MurmurHash$$k_$eq:(I)V
      57: aload_0
      58: iconst_0
      59: invokevirtual #242                // Method scala$util$MurmurHash$$hashed_$eq:(Z)V
      62: return

  public void append(int);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
       4: aload_0
       5: invokevirtual #246                // Method scala$util$MurmurHash$$h:()I
       8: iload_1
       9: aload_0
      10: invokevirtual #256                // Method scala$util$MurmurHash$$c:()I
      13: aload_0
      14: invokevirtual #258                // Method scala$util$MurmurHash$$k:()I
      17: invokevirtual #43                 // Method scala/util/MurmurHash$.extendHash:(IIII)I
      20: invokevirtual #234                // Method scala$util$MurmurHash$$h_$eq:(I)V
      23: aload_0
      24: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
      27: aload_0
      28: invokevirtual #256                // Method scala$util$MurmurHash$$c:()I
      31: invokevirtual #39                 // Method scala/util/MurmurHash$.nextMagicA:(I)I
      34: invokevirtual #237                // Method scala$util$MurmurHash$$c_$eq:(I)V
      37: aload_0
      38: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
      41: aload_0
      42: invokevirtual #258                // Method scala$util$MurmurHash$$k:()I
      45: invokevirtual #36                 // Method scala/util/MurmurHash$.nextMagicB:(I)I
      48: invokevirtual #240                // Method scala$util$MurmurHash$$k_$eq:(I)V
      51: aload_0
      52: iconst_0
      53: invokevirtual #242                // Method scala$util$MurmurHash$$hashed_$eq:(Z)V
      56: return

  public int hash();
    Code:
       0: aload_0
       1: invokespecial #264                // Method scala$util$MurmurHash$$hashed:()Z
       4: ifne          26
       7: aload_0
       8: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
      11: aload_0
      12: invokevirtual #246                // Method scala$util$MurmurHash$$h:()I
      15: invokevirtual #33                 // Method scala/util/MurmurHash$.finalizeHash:(I)I
      18: invokespecial #266                // Method hashvalue_$eq:(I)V
      21: aload_0
      22: iconst_1
      23: invokevirtual #242                // Method scala$util$MurmurHash$$hashed_$eq:(Z)V
      26: aload_0
      27: invokespecial #268                // Method hashvalue:()I
      30: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #271                // Method hash:()I
       4: ireturn

  public void apply$mcD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #278                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       5: invokevirtual #280                // Method apply:(Ljava/lang/Object;)V
       8: return

  public void apply$mcF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #285                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       5: invokevirtual #280                // Method apply:(Ljava/lang/Object;)V
       8: return

  public void apply$mcI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #290                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       5: invokevirtual #280                // Method apply:(Ljava/lang/Object;)V
       8: return

  public void apply$mcJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #295                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       5: invokevirtual #280                // Method apply:(Ljava/lang/Object;)V
       8: return

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #280                // Method apply:(Ljava/lang/Object;)V
       5: getstatic     #302                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  public scala.util.MurmurHash(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #232                // Field seed:I
       5: aload_0
       6: invokespecial #305                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #309                // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      13: aload_0
      14: getstatic     #19                 // Field scala/util/MurmurHash$.MODULE$:Lscala/util/MurmurHash$;
      17: iload_1
      18: invokevirtual #53                 // Method scala/util/MurmurHash$.startHash:(I)I
      21: putfield      #212                // Field scala$util$MurmurHash$$h:I
      24: aload_0
      25: ldc           #235                // int -1789642873
      27: putfield      #216                // Field scala$util$MurmurHash$$c:I
      30: aload_0
      31: ldc           #238                // int 718793509
      33: putfield      #219                // Field scala$util$MurmurHash$$k:I
      36: aload_0
      37: iconst_0
      38: putfield      #223                // Field scala$util$MurmurHash$$hashed:Z
      41: aload_0
      42: aload_0
      43: invokevirtual #246                // Method scala$util$MurmurHash$$h:()I
      46: putfield      #227                // Field hashvalue:I
      49: return
}
