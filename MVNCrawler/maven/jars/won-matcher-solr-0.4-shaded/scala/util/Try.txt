Compiled from "Try.scala"
public abstract class scala.util.Try<T> {
  public static <T> scala.util.Try<T> apply(scala.Function0<T>);
    Code:
       0: getstatic     #17                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
       3: aload_0
       4: invokevirtual #19                 // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
       7: areturn

  public abstract boolean isFailure();

  public abstract boolean isSuccess();

  public <U> U getOrElse(scala.Function0<U>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isSuccess:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #30                 // Method get:()Ljava/lang/Object;
      11: goto          20
      14: aload_1
      15: invokeinterface #34,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: areturn

  public <U> scala.util.Try<U> orElse(scala.Function0<scala.util.Try<U>>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isSuccess:()Z
       4: ifeq          11
       7: aload_0
       8: goto          55
      11: aload_1
      12: invokeinterface #34,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      17: checkcast     #2                  // class scala/util/Try
      20: goto          55
      23: astore_2
      24: getstatic     #44                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      27: aload_2
      28: invokevirtual #48                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      31: astore_3
      32: aload_3
      33: invokevirtual #53                 // Method scala/Option.isEmpty:()Z
      36: ifeq          41
      39: aload_2
      40: athrow
      41: new           #55                 // class scala/util/Failure
      44: dup
      45: aload_3
      46: invokevirtual #56                 // Method scala/Option.get:()Ljava/lang/Object;
      49: checkcast     #58                 // class java/lang/Throwable
      52: invokespecial #62                 // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
      55: areturn
    Exception table:
       from    to  target type
           0    23    23   any

  public abstract T get();

  public abstract <U> void foreach(scala.Function1<T, U>);

  public abstract <U> scala.util.Try<U> flatMap(scala.Function1<T, scala.util.Try<U>>);

  public abstract <U> scala.util.Try<U> map(scala.Function1<T, U>);

  public abstract scala.util.Try<T> filter(scala.Function1<T, java.lang.Object>);

  public final scala.util.Try<T>.WithFilter withFilter(scala.Function1<T, java.lang.Object>);
    Code:
       0: new           #72                 // class scala/util/Try$WithFilter
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #75                 // Method scala/util/Try$WithFilter."<init>":(Lscala/util/Try;Lscala/Function1;)V
       9: areturn

  public abstract <U> scala.util.Try<U> recoverWith(scala.PartialFunction<java.lang.Throwable, scala.util.Try<U>>);

  public abstract <U> scala.util.Try<U> recover(scala.PartialFunction<java.lang.Throwable, U>);

  public scala.Option<T> toOption();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isSuccess:()Z
       4: ifeq          21
       7: new           #84                 // class scala/Some
      10: dup
      11: aload_0
      12: invokevirtual #30                 // Method get:()Ljava/lang/Object;
      15: invokespecial #87                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      18: goto          24
      21: getstatic     #92                 // Field scala/None$.MODULE$:Lscala/None$;
      24: areturn

  public abstract <U> scala.util.Try<U> flatten(scala.Predef$$less$colon$less<T, scala.util.Try<U>>);

  public abstract scala.util.Try<java.lang.Throwable> failed();

  public <U> scala.util.Try<U> transform(scala.Function1<T, scala.util.Try<U>>, scala.Function1<java.lang.Throwable, scala.util.Try<U>>);
    Code:
       0: aload_0
       1: instanceof    #100                // class scala/util/Success
       4: ifeq          30
       7: aload_0
       8: checkcast     #100                // class scala/util/Success
      11: astore_3
      12: aload_1
      13: aload_3
      14: invokevirtual #103                // Method scala/util/Success.value:()Ljava/lang/Object;
      17: invokeinterface #108,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #2                  // class scala/util/Try
      25: astore        5
      27: goto          59
      30: aload_0
      31: instanceof    #55                 // class scala/util/Failure
      34: ifeq          64
      37: aload_0
      38: checkcast     #55                 // class scala/util/Failure
      41: astore        4
      43: aload_2
      44: aload         4
      46: invokevirtual #112                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
      49: invokeinterface #108,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #2                  // class scala/util/Try
      57: astore        5
      59: aload         5
      61: goto          133
      64: new           #114                // class scala/MatchError
      67: dup
      68: aload_0
      69: invokespecial #115                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      72: astore        6
      74: getstatic     #44                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      77: aload         6
      79: invokevirtual #48                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      82: astore        7
      84: aload         7
      86: invokevirtual #53                 // Method scala/Option.isEmpty:()Z
      89: ifne          115
      92: goto          118
      95: astore        6
      97: getstatic     #44                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     100: aload         6
     102: invokevirtual #48                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     105: astore        7
     107: aload         7
     109: invokevirtual #53                 // Method scala/Option.isEmpty:()Z
     112: ifeq          118
     115: aload         6
     117: athrow
     118: new           #55                 // class scala/util/Failure
     121: dup
     122: aload         7
     124: invokevirtual #56                 // Method scala/Option.get:()Ljava/lang/Object;
     127: checkcast     #58                 // class java/lang/Throwable
     130: invokespecial #62                 // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
     133: areturn
    Exception table:
       from    to  target type
           0    74    95   any

  public scala.util.Try();
    Code:
       0: aload_0
       1: invokespecial #120                // Method java/lang/Object."<init>":()V
       4: return
}
