Compiled from "Exception.scala"
public final class scala.util.control.Exception$ {
  public static final scala.util.control.Exception$ MODULE$;

  private final scala.PartialFunction<java.lang.Throwable, scala.runtime.Nothing$> nothingCatcher;

  private final scala.util.control.Exception$Catch<scala.runtime.Nothing$> noCatch;

  public static {};
    Code:
       0: new           #2                  // class scala/util/control/Exception$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public <Ex extends java.lang.Throwable, T> java.lang.Object mkCatcher(scala.Function1<Ex, java.lang.Object>, scala.Function1<Ex, T>, scala.reflect.ClassTag<Ex>);
    Code:
       0: new           #22                 // class scala/util/control/Exception$$anon$1
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #25                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/Function1;Lscala/Function1;Lscala/reflect/ClassTag;)V
      10: areturn

  public <T> java.lang.Object mkThrowableCatcher(scala.Function1<java.lang.Throwable, java.lang.Object>, scala.Function1<java.lang.Throwable, T>);
    Code:
       0: getstatic     #38                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       3: ldc           #40                 // class java/lang/Throwable
       5: invokevirtual #44                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       8: astore_3
       9: new           #22                 // class scala/util/control/Exception$$anon$1
      12: dup
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokespecial #25                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/Function1;Lscala/Function1;Lscala/reflect/ClassTag;)V
      19: areturn

  public <Ex extends java.lang.Throwable, T> java.lang.Object throwableSubtypeToCatcher(scala.PartialFunction<Ex, T>, scala.reflect.ClassTag<Ex>);
    Code:
       0: new           #48                 // class scala/util/control/Exception$$anonfun$throwableSubtypeToCatcher$1
       3: dup
       4: aload_1
       5: invokespecial #51                 // Method scala/util/control/Exception$$anonfun$throwableSubtypeToCatcher$1."<init>":(Lscala/PartialFunction;)V
       8: new           #53                 // class scala/util/control/Exception$$anonfun$throwableSubtypeToCatcher$2
      11: dup
      12: aload_1
      13: invokespecial #54                 // Method scala/util/control/Exception$$anonfun$throwableSubtypeToCatcher$2."<init>":(Lscala/PartialFunction;)V
      16: astore        4
      18: astore_3
      19: new           #22                 // class scala/util/control/Exception$$anon$1
      22: dup
      23: aload_3
      24: aload         4
      26: aload_2
      27: invokespecial #25                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/Function1;Lscala/Function1;Lscala/reflect/ClassTag;)V
      30: areturn

  public boolean shouldRethrow(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #60                 // class scala/util/control/ControlThrowable
       4: ifeq          12
       7: iconst_1
       8: istore_2
       9: goto          26
      12: aload_1
      13: instanceof    #62                 // class java/lang/InterruptedException
      16: ifeq          24
      19: iconst_1
      20: istore_2
      21: goto          26
      24: iconst_0
      25: istore_2
      26: iload_2
      27: ireturn

  public final scala.PartialFunction<java.lang.Throwable, scala.runtime.Nothing$> nothingCatcher();
    Code:
       0: aload_0
       1: getfield      #67                 // Field nothingCatcher:Lscala/PartialFunction;
       4: areturn

  public final <T> scala.PartialFunction<java.lang.Throwable, T> nonFatalCatcher();
    Code:
       0: aload_0
       1: new           #70                 // class scala/util/control/Exception$$anonfun$nonFatalCatcher$1
       4: dup
       5: invokespecial #71                 // Method scala/util/control/Exception$$anonfun$nonFatalCatcher$1."<init>":()V
       8: new           #73                 // class scala/util/control/Exception$$anonfun$nonFatalCatcher$2
      11: dup
      12: invokespecial #74                 // Method scala/util/control/Exception$$anonfun$nonFatalCatcher$2."<init>":()V
      15: invokevirtual #76                 // Method mkThrowableCatcher:(Lscala/Function1;Lscala/Function1;)Lscala/PartialFunction;
      18: areturn

  public final <T> scala.PartialFunction<java.lang.Throwable, T> allCatcher();
    Code:
       0: new           #79                 // class scala/util/control/Exception$$anonfun$allCatcher$1
       3: dup
       4: invokespecial #80                 // Method scala/util/control/Exception$$anonfun$allCatcher$1."<init>":()V
       7: new           #82                 // class scala/util/control/Exception$$anonfun$allCatcher$2
      10: dup
      11: invokespecial #83                 // Method scala/util/control/Exception$$anonfun$allCatcher$2."<init>":()V
      14: astore_2
      15: astore_1
      16: getstatic     #38                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      19: ldc           #40                 // class java/lang/Throwable
      21: invokevirtual #44                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      24: astore_3
      25: new           #22                 // class scala/util/control/Exception$$anon$1
      28: dup
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokespecial #25                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/Function1;Lscala/Function1;Lscala/reflect/ClassTag;)V
      35: areturn

  public final scala.util.control.Exception$Catch<scala.runtime.Nothing$> noCatch();
    Code:
       0: aload_0
       1: getfield      #86                 // Field noCatch:Lscala/util/control/Exception$Catch;
       4: areturn

  public final <T> scala.util.control.Exception$Catch<T> allCatch();
    Code:
       0: new           #89                 // class scala/util/control/Exception$Catch
       3: dup
       4: aload_0
       5: invokevirtual #91                 // Method allCatcher:()Lscala/PartialFunction;
       8: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      11: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$2:()Lscala/Option;
      14: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      17: invokevirtual #104                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
      20: invokespecial #107                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
      23: ldc           #109                // String <everything>
      25: invokevirtual #113                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
      28: checkcast     #89                 // class scala/util/control/Exception$Catch
      31: areturn

  public final <T> scala.util.control.Exception$Catch<T> nonFatalCatch();
    Code:
       0: new           #89                 // class scala/util/control/Exception$Catch
       3: dup
       4: aload_0
       5: invokevirtual #116                // Method nonFatalCatcher:()Lscala/PartialFunction;
       8: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      11: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$2:()Lscala/Option;
      14: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      17: invokevirtual #104                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
      20: invokespecial #107                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
      23: ldc           #118                // String <non-fatal>
      25: invokevirtual #113                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
      28: checkcast     #89                 // class scala/util/control/Exception$Catch
      31: areturn

  public <T> scala.util.control.Exception$Catch<T> catching(scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: new           #89                 // class scala/util/control/Exception$Catch
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #124                // Method pfFromExceptions:(Lscala/collection/Seq;)Lscala/PartialFunction;
       9: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      12: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$2:()Lscala/Option;
      15: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      18: invokevirtual #104                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
      21: invokespecial #107                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
      24: aload_1
      25: new           #126                // class scala/util/control/Exception$$anonfun$catching$1
      28: dup
      29: invokespecial #127                // Method scala/util/control/Exception$$anonfun$catching$1."<init>":()V
      32: getstatic     #132                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      35: invokevirtual #136                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokeinterface #142,  3          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      43: checkcast     #144                // class scala/collection/TraversableOnce
      46: ldc           #146                // String ,
      48: invokeinterface #150,  2          // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;)Ljava/lang/String;
      53: invokevirtual #113                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
      56: checkcast     #89                 // class scala/util/control/Exception$Catch
      59: areturn

  public <T> scala.util.control.Exception$Catch<T> catching(scala.PartialFunction<java.lang.Throwable, T>);
    Code:
       0: new           #89                 // class scala/util/control/Exception$Catch
       3: dup
       4: aload_1
       5: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
       8: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$2:()Lscala/Option;
      11: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      14: invokevirtual #104                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
      17: invokespecial #107                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
      20: areturn

  public <T> scala.util.control.Exception$Catch<T> catchingPromiscuously(scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #124                // Method pfFromExceptions:(Lscala/collection/Seq;)Lscala/PartialFunction;
       6: invokevirtual #157                // Method catchingPromiscuously:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
       9: areturn

  public <T> scala.util.control.Exception$Catch<T> catchingPromiscuously(scala.PartialFunction<java.lang.Throwable, T>);
    Code:
       0: new           #89                 // class scala/util/control/Exception$Catch
       3: dup
       4: aload_1
       5: getstatic     #162                // Field scala/None$.MODULE$:Lscala/None$;
       8: new           #164                // class scala/util/control/Exception$$anonfun$catchingPromiscuously$1
      11: dup
      12: invokespecial #165                // Method scala/util/control/Exception$$anonfun$catchingPromiscuously$1."<init>":()V
      15: invokespecial #107                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
      18: areturn

  public scala.util.control.Exception$Catch<scala.runtime.BoxedUnit> ignoring(scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
       5: new           #170                // class scala/util/control/Exception$$anonfun$ignoring$1
       8: dup
       9: invokespecial #171                // Method scala/util/control/Exception$$anonfun$ignoring$1."<init>":()V
      12: invokevirtual #175                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
      15: areturn

  public <T> scala.util.control.Exception$Catch<scala.Option<T>> failing(scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
       5: new           #178                // class scala/util/control/Exception$$anonfun$failing$1
       8: dup
       9: invokespecial #179                // Method scala/util/control/Exception$$anonfun$failing$1."<init>":()V
      12: invokevirtual #175                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
      15: areturn

  public <T> scala.util.control.Exception$Catch<T> failAsValue(scala.collection.Seq<java.lang.Class<?>>, scala.Function0<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
       5: new           #183                // class scala/util/control/Exception$$anonfun$failAsValue$1
       8: dup
       9: aload_2
      10: invokespecial #186                // Method scala/util/control/Exception$$anonfun$failAsValue$1."<init>":(Lscala/Function0;)V
      13: invokevirtual #175                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
      16: areturn

  public <T> scala.util.control.Exception$By<scala.Function1<java.lang.Throwable, T>, scala.util.control.Exception$Catch<T>> handling(scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: new           #192                // class scala/util/control/Exception$By
       3: dup
       4: new           #194                // class scala/util/control/Exception$$anonfun$handling$1
       7: dup
       8: aload_1
       9: invokespecial #197                // Method scala/util/control/Exception$$anonfun$handling$1."<init>":(Lscala/collection/Seq;)V
      12: invokespecial #200                // Method scala/util/control/Exception$By."<init>":(Lscala/Function1;)V
      15: areturn

  public <T> scala.util.control.Exception$Catch<T> ultimately(scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: invokevirtual #204                // Method noCatch:()Lscala/util/control/Exception$Catch;
       4: aload_1
       5: invokevirtual #207                // Method scala/util/control/Exception$Catch.andFinally:(Lscala/Function0;)Lscala/util/control/Exception$Catch;
       8: areturn

  public <T> scala.util.control.Exception$Catch<T> unwrapping(scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
       5: new           #211                // class scala/util/control/Exception$$anonfun$unwrapping$1
       8: dup
       9: aload_1
      10: invokespecial #212                // Method scala/util/control/Exception$$anonfun$unwrapping$1."<init>":(Lscala/collection/Seq;)V
      13: invokevirtual #175                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
      16: areturn

  public boolean scala$util$control$Exception$$wouldMatch(java.lang.Throwable, scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: aload_2
       1: new           #216                // class scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1
       4: dup
       5: aload_1
       6: invokespecial #219                // Method scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1."<init>":(Ljava/lang/Throwable;)V
       9: invokeinterface #223,  2          // InterfaceMethod scala/collection/Seq.exists:(Lscala/Function1;)Z
      14: ireturn

  private scala.PartialFunction<java.lang.Throwable, scala.runtime.Nothing$> pfFromExceptions(scala.collection.Seq<java.lang.Class<?>>);
    Code:
       0: new           #226                // class scala/util/control/Exception$$anonfun$pfFromExceptions$1
       3: dup
       4: aload_1
       5: invokespecial #227                // Method scala/util/control/Exception$$anonfun$pfFromExceptions$1."<init>":(Lscala/collection/Seq;)V
       8: areturn

  public final scala.util.control.Exception$Catch scala$util$control$Exception$$fun$1(scala.Function1, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #168                // Method catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
       5: aload_1
       6: invokevirtual #175                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
       9: areturn

  public final java.lang.Throwable scala$util$control$Exception$$unwrap$1(java.lang.Throwable, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #234                // Method scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Seq;)Z
       6: ifeq          24
       9: aload_1
      10: invokevirtual #238                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      13: ifnull        24
      16: aload_1
      17: invokevirtual #238                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      20: astore_1
      21: goto          0
      24: aload_1
      25: areturn

  private scala.util.control.Exception$();
    Code:
       0: aload_0
       1: invokespecial #240                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #242                // Field MODULE$:Lscala/util/control/Exception$;
       8: aload_0
       9: new           #244                // class scala/util/control/Exception$$anonfun$1
      12: dup
      13: invokespecial #245                // Method scala/util/control/Exception$$anonfun$1."<init>":()V
      16: new           #247                // class scala/util/control/Exception$$anonfun$2
      19: dup
      20: invokespecial #248                // Method scala/util/control/Exception$$anonfun$2."<init>":()V
      23: astore_2
      24: astore_1
      25: getstatic     #38                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      28: ldc           #40                 // class java/lang/Throwable
      30: invokevirtual #44                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      33: astore_3
      34: new           #22                 // class scala/util/control/Exception$$anon$1
      37: dup
      38: aload_1
      39: aload_2
      40: aload_3
      41: invokespecial #25                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/Function1;Lscala/Function1;Lscala/reflect/ClassTag;)V
      44: putfield      #67                 // Field nothingCatcher:Lscala/PartialFunction;
      47: aload_0
      48: new           #89                 // class scala/util/control/Exception$Catch
      51: dup
      52: aload_0
      53: invokevirtual #250                // Method nothingCatcher:()Lscala/PartialFunction;
      56: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      59: astore        4
      61: getstatic     #162                // Field scala/None$.MODULE$:Lscala/None$;
      64: getstatic     #96                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
      67: astore        5
      69: new           #252                // class scala/util/control/Exception$Catch$$anonfun$$lessinit$greater$default$3$1
      72: dup
      73: invokespecial #253                // Method scala/util/control/Exception$Catch$$anonfun$$lessinit$greater$default$3$1."<init>":()V
      76: invokespecial #107                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
      79: ldc           #255                // String <nothing>
      81: invokevirtual #113                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
      84: checkcast     #89                 // class scala/util/control/Exception$Catch
      87: putfield      #86                 // Field noCatch:Lscala/util/control/Exception$Catch;
      90: return
}
