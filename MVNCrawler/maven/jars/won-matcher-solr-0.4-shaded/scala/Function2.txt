Compiled from "Function2.scala"
public interface scala.Function2<T1, T2, R> {
  public abstract R apply(T1, T2);

  public abstract scala.Function1<T1, scala.Function1<T2, R>> curried();

  public abstract scala.Function1<scala.Tuple2<T1, T2>, R> tupled();

  public abstract java.lang.String toString();

  public abstract boolean apply$mcZDD$sp(double, double);

  public abstract double apply$mcDDD$sp(double, double);

  public abstract float apply$mcFDD$sp(double, double);

  public abstract int apply$mcIDD$sp(double, double);

  public abstract long apply$mcJDD$sp(double, double);

  public abstract void apply$mcVDD$sp(double, double);

  public abstract boolean apply$mcZDI$sp(double, int);

  public abstract double apply$mcDDI$sp(double, int);

  public abstract float apply$mcFDI$sp(double, int);

  public abstract int apply$mcIDI$sp(double, int);

  public abstract long apply$mcJDI$sp(double, int);

  public abstract void apply$mcVDI$sp(double, int);

  public abstract boolean apply$mcZDJ$sp(double, long);

  public abstract double apply$mcDDJ$sp(double, long);

  public abstract float apply$mcFDJ$sp(double, long);

  public abstract int apply$mcIDJ$sp(double, long);

  public abstract long apply$mcJDJ$sp(double, long);

  public abstract void apply$mcVDJ$sp(double, long);

  public abstract boolean apply$mcZID$sp(int, double);

  public abstract double apply$mcDID$sp(int, double);

  public abstract float apply$mcFID$sp(int, double);

  public abstract int apply$mcIID$sp(int, double);

  public abstract long apply$mcJID$sp(int, double);

  public abstract void apply$mcVID$sp(int, double);

  public abstract boolean apply$mcZII$sp(int, int);

  public abstract double apply$mcDII$sp(int, int);

  public abstract float apply$mcFII$sp(int, int);

  public abstract int apply$mcIII$sp(int, int);

  public abstract long apply$mcJII$sp(int, int);

  public abstract void apply$mcVII$sp(int, int);

  public abstract boolean apply$mcZIJ$sp(int, long);

  public abstract double apply$mcDIJ$sp(int, long);

  public abstract float apply$mcFIJ$sp(int, long);

  public abstract int apply$mcIIJ$sp(int, long);

  public abstract long apply$mcJIJ$sp(int, long);

  public abstract void apply$mcVIJ$sp(int, long);

  public abstract boolean apply$mcZJD$sp(long, double);

  public abstract double apply$mcDJD$sp(long, double);

  public abstract float apply$mcFJD$sp(long, double);

  public abstract int apply$mcIJD$sp(long, double);

  public abstract long apply$mcJJD$sp(long, double);

  public abstract void apply$mcVJD$sp(long, double);

  public abstract boolean apply$mcZJI$sp(long, int);

  public abstract double apply$mcDJI$sp(long, int);

  public abstract float apply$mcFJI$sp(long, int);

  public abstract int apply$mcIJI$sp(long, int);

  public abstract long apply$mcJJI$sp(long, int);

  public abstract void apply$mcVJI$sp(long, int);

  public abstract boolean apply$mcZJJ$sp(long, long);

  public abstract double apply$mcDJJ$sp(long, long);

  public abstract float apply$mcFJJ$sp(long, long);

  public abstract int apply$mcIJJ$sp(long, long);

  public abstract long apply$mcJJJ$sp(long, long);

  public abstract void apply$mcVJJ$sp(long, long);
}
