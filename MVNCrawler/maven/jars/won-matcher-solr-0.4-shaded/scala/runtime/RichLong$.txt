Compiled from "RichLong.scala"
public final class scala.runtime.RichLong$ {
  public static final scala.runtime.RichLong$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scala/runtime/RichLong$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public final scala.math.Numeric$LongIsIntegral$ num$extension(long);
    Code:
       0: getstatic     #19                 // Field scala/math/Numeric$LongIsIntegral$.MODULE$:Lscala/math/Numeric$LongIsIntegral$;
       3: areturn

  public final scala.math.Ordering$Long$ ord$extension(long);
    Code:
       0: getstatic     #29                 // Field scala/math/Ordering$Long$.MODULE$:Lscala/math/Ordering$Long$;
       3: areturn

  public final double doubleValue$extension(long);
    Code:
       0: lload_1
       1: l2d
       2: dreturn

  public final float floatValue$extension(long);
    Code:
       0: lload_1
       1: l2f
       2: freturn

  public final long longValue$extension(long);
    Code:
       0: lload_1
       1: lreturn

  public final int intValue$extension(long);
    Code:
       0: lload_1
       1: l2i
       2: ireturn

  public final byte byteValue$extension(long);
    Code:
       0: lload_1
       1: l2i
       2: i2b
       3: ireturn

  public final short shortValue$extension(long);
    Code:
       0: lload_1
       1: l2i
       2: i2s
       3: ireturn

  public final boolean isValidByte$extension(long);
    Code:
       0: lload_1
       1: l2i
       2: i2b
       3: i2l
       4: lload_1
       5: lcmp
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final boolean isValidShort$extension(long);
    Code:
       0: lload_1
       1: l2i
       2: i2s
       3: i2l
       4: lload_1
       5: lcmp
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final boolean isValidChar$extension(long);
    Code:
       0: lload_1
       1: l2i
       2: i2c
       3: i2l
       4: lload_1
       5: lcmp
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final boolean isValidInt$extension(long);
    Code:
       0: lload_1
       1: l2i
       2: i2l
       3: lload_1
       4: lcmp
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public final boolean isValidLong$extension(long);
    Code:
       0: iconst_1
       1: ireturn

  public final long abs$extension(long);
    Code:
       0: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: lload_1
       4: invokevirtual #56                 // Method scala/math/package$.abs:(J)J
       7: lreturn

  public final long max$extension(long, long);
    Code:
       0: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: lload_1
       4: lload_3
       5: invokevirtual #61                 // Method scala/math/package$.max:(JJ)J
       8: lreturn

  public final long min$extension(long, long);
    Code:
       0: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: lload_1
       4: lload_3
       5: invokevirtual #66                 // Method scala/math/package$.min:(JJ)J
       8: lreturn

  public final int signum$extension(long);
    Code:
       0: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: lload_1
       4: invokevirtual #70                 // Method scala/math/package$.signum:(J)J
       7: l2i
       8: ireturn

  public final long round$extension(long);
    Code:
       0: lload_1
       1: lreturn

  public final java.lang.String toBinaryString$extension(long);
    Code:
       0: lload_1
       1: invokestatic  #78                 // Method java/lang/Long.toBinaryString:(J)Ljava/lang/String;
       4: areturn

  public final java.lang.String toHexString$extension(long);
    Code:
       0: lload_1
       1: invokestatic  #82                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
       4: areturn

  public final java.lang.String toOctalString$extension(long);
    Code:
       0: lload_1
       1: invokestatic  #86                 // Method java/lang/Long.toOctalString:(J)Ljava/lang/String;
       4: areturn

  public final int hashCode$extension(long);
    Code:
       0: lload_1
       1: invokestatic  #93                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       4: invokevirtual #97                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public final boolean equals$extension(long, java.lang.Object);
    Code:
       0: aload_3
       1: instanceof    #101                // class scala/runtime/RichLong
       4: ifeq          13
       7: iconst_1
       8: istore        4
      10: goto          16
      13: iconst_0
      14: istore        4
      16: iload         4
      18: ifeq          49
      21: aload_3
      22: checkcast     #101                // class scala/runtime/RichLong
      25: invokevirtual #105                // Method scala/runtime/RichLong.self:()J
      28: lstore        5
      30: lload_1
      31: lload         5
      33: lcmp
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  private scala.runtime.RichLong$();
    Code:
       0: aload_0
       1: invokespecial #108                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #110                // Field MODULE$:Lscala/runtime/RichLong$;
       8: return
}
