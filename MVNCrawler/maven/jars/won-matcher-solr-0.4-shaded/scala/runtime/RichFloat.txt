Compiled from "RichFloat.scala"
public final class scala.runtime.RichFloat implements scala.runtime.FractionalProxy<java.lang.Object> {
  private final float self;

  public static boolean equals$extension(float, java.lang.Object);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: aload_1
       5: invokevirtual #21                 // Method scala/runtime/RichFloat$.equals$extension:(FLjava/lang/Object;)Z
       8: ireturn

  public static int hashCode$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #25                 // Method scala/runtime/RichFloat$.hashCode$extension:(F)I
       7: ireturn

  public static float toDegrees$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #29                 // Method scala/runtime/RichFloat$.toDegrees$extension:(F)F
       7: freturn

  public static float toRadians$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #32                 // Method scala/runtime/RichFloat$.toRadians$extension:(F)F
       7: freturn

  public static float floor$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #35                 // Method scala/runtime/RichFloat$.floor$extension:(F)F
       7: freturn

  public static float ceil$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #38                 // Method scala/runtime/RichFloat$.ceil$extension:(F)F
       7: freturn

  public static int round$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #41                 // Method scala/runtime/RichFloat$.round$extension:(F)I
       7: ireturn

  public static int signum$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #44                 // Method scala/runtime/RichFloat$.signum$extension:(F)I
       7: ireturn

  public static float min$extension(float, float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: fload_1
       5: invokevirtual #48                 // Method scala/runtime/RichFloat$.min$extension:(FF)F
       8: freturn

  public static float max$extension(float, float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: fload_1
       5: invokevirtual #51                 // Method scala/runtime/RichFloat$.max$extension:(FF)F
       8: freturn

  public static float abs$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #54                 // Method scala/runtime/RichFloat$.abs$extension:(F)F
       7: freturn

  public static boolean isNegInfinity$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #58                 // Method scala/runtime/RichFloat$.isNegInfinity$extension:(F)Z
       7: ireturn

  public static boolean isPosInfinity$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #61                 // Method scala/runtime/RichFloat$.isPosInfinity$extension:(F)Z
       7: ireturn

  public static boolean isInfinity$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #64                 // Method scala/runtime/RichFloat$.isInfinity$extension:(F)Z
       7: ireturn

  public static boolean isNaN$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #67                 // Method scala/runtime/RichFloat$.isNaN$extension:(F)Z
       7: ireturn

  public static boolean isValidInt$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #70                 // Method scala/runtime/RichFloat$.isValidInt$extension:(F)Z
       7: ireturn

  public static boolean isValidChar$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #73                 // Method scala/runtime/RichFloat$.isValidChar$extension:(F)Z
       7: ireturn

  public static boolean isValidShort$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #76                 // Method scala/runtime/RichFloat$.isValidShort$extension:(F)Z
       7: ireturn

  public static boolean isValidByte$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #79                 // Method scala/runtime/RichFloat$.isValidByte$extension:(F)Z
       7: ireturn

  public static boolean isWhole$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #82                 // Method scala/runtime/RichFloat$.isWhole$extension:(F)Z
       7: ireturn

  public static short shortValue$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #86                 // Method scala/runtime/RichFloat$.shortValue$extension:(F)S
       7: ireturn

  public static byte byteValue$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #90                 // Method scala/runtime/RichFloat$.byteValue$extension:(F)B
       7: ireturn

  public static int intValue$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #93                 // Method scala/runtime/RichFloat$.intValue$extension:(F)I
       7: ireturn

  public static long longValue$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #97                 // Method scala/runtime/RichFloat$.longValue$extension:(F)J
       7: lreturn

  public static float floatValue$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #100                // Method scala/runtime/RichFloat$.floatValue$extension:(F)F
       7: freturn

  public static double doubleValue$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #104                // Method scala/runtime/RichFloat$.doubleValue$extension:(F)D
       7: dreturn

  public static scala.math.Numeric$FloatAsIfIntegral$ integralNum$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #108                // Method scala/runtime/RichFloat$.integralNum$extension:(F)Lscala/math/Numeric$FloatAsIfIntegral$;
       7: areturn

  public static scala.math.Ordering$Float$ ord$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #112                // Method scala/runtime/RichFloat$.ord$extension:(F)Lscala/math/Ordering$Float$;
       7: areturn

  public static scala.math.Numeric$FloatIsFractional$ num$extension(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: fload_0
       4: invokevirtual #116                // Method scala/runtime/RichFloat$.num$extension:(F)Lscala/math/Numeric$FloatIsFractional$;
       7: areturn

  public scala.collection.immutable.Range$Partial until(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method scala/runtime/FractionalProxy$class.until:(Lscala/runtime/FractionalProxy;Ljava/lang/Object;)Lscala/collection/immutable/Range$Partial;
       5: areturn

  public scala.collection.immutable.NumericRange$Exclusive until(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #133                // Method scala/runtime/FractionalProxy$class.until:(Lscala/runtime/FractionalProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
       6: areturn

  public scala.collection.immutable.Range$Partial to(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method scala/runtime/FractionalProxy$class.to:(Lscala/runtime/FractionalProxy;Ljava/lang/Object;)Lscala/collection/immutable/Range$Partial;
       5: areturn

  public scala.collection.immutable.NumericRange$Inclusive to(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #141                // Method scala/runtime/FractionalProxy$class.to:(Lscala/runtime/FractionalProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
       6: areturn

  public java.lang.Object underlying();
    Code:
       0: aload_0
       1: invokestatic  #148                // Method scala/runtime/ScalaNumberProxy$class.underlying:(Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
       4: areturn

  public int compare(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method scala/runtime/OrderedProxy$class.compare:(Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
       5: ireturn

  public boolean $less(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // Method scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public boolean $greater(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // Method scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public boolean $less$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // Method scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public boolean $greater$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // Method scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
       5: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // Method scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #184                // Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
       4: areturn

  public char toChar();
    Code:
       0: aload_0
       1: invokestatic  #191                // Method scala/math/ScalaNumericAnyConversions$class.toChar:(Lscala/math/ScalaNumericAnyConversions;)C
       4: ireturn

  public byte toByte();
    Code:
       0: aload_0
       1: invokestatic  #196                // Method scala/math/ScalaNumericAnyConversions$class.toByte:(Lscala/math/ScalaNumericAnyConversions;)B
       4: ireturn

  public short toShort();
    Code:
       0: aload_0
       1: invokestatic  #201                // Method scala/math/ScalaNumericAnyConversions$class.toShort:(Lscala/math/ScalaNumericAnyConversions;)S
       4: ireturn

  public int toInt();
    Code:
       0: aload_0
       1: invokestatic  #206                // Method scala/math/ScalaNumericAnyConversions$class.toInt:(Lscala/math/ScalaNumericAnyConversions;)I
       4: ireturn

  public long toLong();
    Code:
       0: aload_0
       1: invokestatic  #211                // Method scala/math/ScalaNumericAnyConversions$class.toLong:(Lscala/math/ScalaNumericAnyConversions;)J
       4: lreturn

  public float toFloat();
    Code:
       0: aload_0
       1: invokestatic  #216                // Method scala/math/ScalaNumericAnyConversions$class.toFloat:(Lscala/math/ScalaNumericAnyConversions;)F
       4: freturn

  public double toDouble();
    Code:
       0: aload_0
       1: invokestatic  #221                // Method scala/math/ScalaNumericAnyConversions$class.toDouble:(Lscala/math/ScalaNumericAnyConversions;)D
       4: dreturn

  public int unifiedPrimitiveHashcode();
    Code:
       0: aload_0
       1: invokestatic  #224                // Method scala/math/ScalaNumericAnyConversions$class.unifiedPrimitiveHashcode:(Lscala/math/ScalaNumericAnyConversions;)I
       4: ireturn

  public boolean unifiedPrimitiveEquals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #228                // Method scala/math/ScalaNumericAnyConversions$class.unifiedPrimitiveEquals:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
       5: ireturn

  public float self();
    Code:
       0: aload_0
       1: getfield      #231                // Field self:F
       4: freturn

  public scala.math.Numeric$FloatIsFractional$ num();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #116                // Method scala/runtime/RichFloat$.num$extension:(F)Lscala/math/Numeric$FloatIsFractional$;
      10: areturn

  public scala.math.Ordering$Float$ ord();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #112                // Method scala/runtime/RichFloat$.ord$extension:(F)Lscala/math/Ordering$Float$;
      10: areturn

  public scala.math.Numeric$FloatAsIfIntegral$ integralNum();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #108                // Method scala/runtime/RichFloat$.integralNum$extension:(F)Lscala/math/Numeric$FloatAsIfIntegral$;
      10: areturn

  public double doubleValue();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #104                // Method scala/runtime/RichFloat$.doubleValue$extension:(F)D
      10: dreturn

  public float floatValue();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #100                // Method scala/runtime/RichFloat$.floatValue$extension:(F)F
      10: freturn

  public long longValue();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #97                 // Method scala/runtime/RichFloat$.longValue$extension:(F)J
      10: lreturn

  public int intValue();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #93                 // Method scala/runtime/RichFloat$.intValue$extension:(F)I
      10: ireturn

  public byte byteValue();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #90                 // Method scala/runtime/RichFloat$.byteValue$extension:(F)B
      10: ireturn

  public short shortValue();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #86                 // Method scala/runtime/RichFloat$.shortValue$extension:(F)S
      10: ireturn

  public boolean isWhole();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #82                 // Method scala/runtime/RichFloat$.isWhole$extension:(F)Z
      10: ireturn

  public boolean isValidByte();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #79                 // Method scala/runtime/RichFloat$.isValidByte$extension:(F)Z
      10: ireturn

  public boolean isValidShort();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #76                 // Method scala/runtime/RichFloat$.isValidShort$extension:(F)Z
      10: ireturn

  public boolean isValidChar();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #73                 // Method scala/runtime/RichFloat$.isValidChar$extension:(F)Z
      10: ireturn

  public boolean isValidInt();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #70                 // Method scala/runtime/RichFloat$.isValidInt$extension:(F)Z
      10: ireturn

  public boolean isNaN();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #67                 // Method scala/runtime/RichFloat$.isNaN$extension:(F)Z
      10: ireturn

  public boolean isInfinity();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #64                 // Method scala/runtime/RichFloat$.isInfinity$extension:(F)Z
      10: ireturn

  public boolean isPosInfinity();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #61                 // Method scala/runtime/RichFloat$.isPosInfinity$extension:(F)Z
      10: ireturn

  public boolean isNegInfinity();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #58                 // Method scala/runtime/RichFloat$.isNegInfinity$extension:(F)Z
      10: ireturn

  public float abs();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #54                 // Method scala/runtime/RichFloat$.abs$extension:(F)F
      10: freturn

  public float max(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: fload_1
       8: invokevirtual #51                 // Method scala/runtime/RichFloat$.max$extension:(FF)F
      11: freturn

  public float min(float);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: fload_1
       8: invokevirtual #48                 // Method scala/runtime/RichFloat$.min$extension:(FF)F
      11: freturn

  public int signum();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #44                 // Method scala/runtime/RichFloat$.signum$extension:(F)I
      10: ireturn

  public int round();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #41                 // Method scala/runtime/RichFloat$.round$extension:(F)I
      10: ireturn

  public float ceil();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #38                 // Method scala/runtime/RichFloat$.ceil$extension:(F)F
      10: freturn

  public float floor();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #35                 // Method scala/runtime/RichFloat$.floor$extension:(F)F
      10: freturn

  public float toRadians();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #32                 // Method scala/runtime/RichFloat$.toRadians$extension:(F)F
      10: freturn

  public float toDegrees();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #29                 // Method scala/runtime/RichFloat$.toDegrees$extension:(F)F
      10: freturn

  public int hashCode();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #25                 // Method scala/runtime/RichFloat$.hashCode$extension:(F)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: aload_1
       8: invokevirtual #21                 // Method scala/runtime/RichFloat$.equals$extension:(FLjava/lang/Object;)Z
      11: ireturn

  public scala.collection.immutable.IndexedSeq to(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #270                // Method to:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
       6: areturn

  public java.lang.Object to(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #273                // Method to:(Ljava/lang/Object;)Lscala/collection/immutable/Range$Partial;
       5: areturn

  public scala.collection.immutable.IndexedSeq until(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #275                // Method until:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
       6: areturn

  public java.lang.Object until(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #277                // Method until:(Ljava/lang/Object;)Lscala/collection/immutable/Range$Partial;
       5: areturn

  public java.lang.Object min(java.lang.Object);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: aload_1
       8: invokestatic  #283                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
      11: invokevirtual #48                 // Method scala/runtime/RichFloat$.min$extension:(FF)F
      14: invokestatic  #287                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      17: areturn

  public java.lang.Object max(java.lang.Object);
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: aload_1
       8: invokestatic  #283                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
      11: invokevirtual #51                 // Method scala/runtime/RichFloat$.max$extension:(FF)F
      14: invokestatic  #287                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      17: areturn

  public java.lang.Object abs();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #54                 // Method scala/runtime/RichFloat$.abs$extension:(F)F
      10: invokestatic  #287                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      13: areturn

  public scala.math.Integral integralNum();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #108                // Method scala/runtime/RichFloat$.integralNum$extension:(F)Lscala/math/Numeric$FloatAsIfIntegral$;
      10: areturn

  public scala.math.Ordering ord();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #112                // Method scala/runtime/RichFloat$.ord$extension:(F)Lscala/math/Ordering$Float$;
      10: areturn

  public scala.math.Numeric num();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #116                // Method scala/runtime/RichFloat$.num$extension:(F)Lscala/math/Numeric$FloatIsFractional$;
      10: areturn

  public scala.math.Fractional num();
    Code:
       0: getstatic     #19                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       3: aload_0
       4: invokevirtual #235                // Method self:()F
       7: invokevirtual #116                // Method scala/runtime/RichFloat$.num$extension:(F)Lscala/math/Numeric$FloatIsFractional$;
      10: areturn

  public java.lang.Object self();
    Code:
       0: aload_0
       1: invokevirtual #235                // Method self:()F
       4: invokestatic  #287                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
       7: areturn

  public scala.runtime.RichFloat(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #231                // Field self:F
       5: aload_0
       6: invokespecial #296                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #300                // Method scala/math/ScalaNumericAnyConversions$class.$init$:(Lscala/math/ScalaNumericAnyConversions;)V
      13: aload_0
      14: invokestatic  #303                // Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
      17: aload_0
      18: invokestatic  #306                // Method scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
      21: return
}
