Compiled from "RichInt.scala"
public final class scala.runtime.RichInt$ {
  public static final scala.runtime.RichInt$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scala/runtime/RichInt$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public final scala.math.Numeric$IntIsIntegral$ num$extension(int);
    Code:
       0: getstatic     #19                 // Field scala/math/Numeric$IntIsIntegral$.MODULE$:Lscala/math/Numeric$IntIsIntegral$;
       3: areturn

  public final scala.math.Ordering$Int$ ord$extension(int);
    Code:
       0: getstatic     #29                 // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
       3: areturn

  public final double doubleValue$extension(int);
    Code:
       0: iload_1
       1: i2d
       2: dreturn

  public final float floatValue$extension(int);
    Code:
       0: iload_1
       1: i2f
       2: freturn

  public final long longValue$extension(int);
    Code:
       0: iload_1
       1: i2l
       2: lreturn

  public final int intValue$extension(int);
    Code:
       0: iload_1
       1: ireturn

  public final byte byteValue$extension(int);
    Code:
       0: iload_1
       1: i2b
       2: ireturn

  public final short shortValue$extension(int);
    Code:
       0: iload_1
       1: i2s
       2: ireturn

  public final boolean isWhole$extension(int);
    Code:
       0: iconst_1
       1: ireturn

  public final boolean isValidInt$extension(int);
    Code:
       0: iconst_1
       1: ireturn

  public final boolean isValidLong$extension(int);
    Code:
       0: iconst_1
       1: ireturn

  public final int abs$extension(int);
    Code:
       0: getstatic     #51                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: iload_1
       4: invokevirtual #54                 // Method scala/math/package$.abs:(I)I
       7: ireturn

  public final int max$extension(int, int);
    Code:
       0: getstatic     #51                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: iload_1
       4: iload_2
       5: invokevirtual #59                 // Method scala/math/package$.max:(II)I
       8: ireturn

  public final int min$extension(int, int);
    Code:
       0: getstatic     #51                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: iload_1
       4: iload_2
       5: invokevirtual #64                 // Method scala/math/package$.min:(II)I
       8: ireturn

  public final int signum$extension(int);
    Code:
       0: getstatic     #51                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: iload_1
       4: invokevirtual #68                 // Method scala/math/package$.signum:(I)I
       7: ireturn

  public final int round$extension(int);
    Code:
       0: iload_1
       1: ireturn

  public final java.lang.String toBinaryString$extension(int);
    Code:
       0: iload_1
       1: invokestatic  #76                 // Method java/lang/Integer.toBinaryString:(I)Ljava/lang/String;
       4: areturn

  public final java.lang.String toHexString$extension(int);
    Code:
       0: iload_1
       1: invokestatic  #80                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
       4: areturn

  public final java.lang.String toOctalString$extension(int);
    Code:
       0: iload_1
       1: invokestatic  #84                 // Method java/lang/Integer.toOctalString:(I)Ljava/lang/String;
       4: areturn

  public final scala.collection.immutable.Range until$extension0(int, int);
    Code:
       0: getstatic     #91                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
       3: iload_1
       4: iload_2
       5: invokevirtual #94                 // Method scala/collection/immutable/Range$.apply:(II)Lscala/collection/immutable/Range;
       8: areturn

  public final scala.collection.immutable.Range until$extension1(int, int, int);
    Code:
       0: getstatic     #91                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
       3: iload_1
       4: iload_2
       5: iload_3
       6: invokevirtual #99                 // Method scala/collection/immutable/Range$.apply:(III)Lscala/collection/immutable/Range;
       9: areturn

  public final scala.collection.immutable.Range$Inclusive to$extension0(int, int);
    Code:
       0: getstatic     #91                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
       3: iload_1
       4: iload_2
       5: invokevirtual #105                // Method scala/collection/immutable/Range$.inclusive:(II)Lscala/collection/immutable/Range$Inclusive;
       8: areturn

  public final scala.collection.immutable.Range$Inclusive to$extension1(int, int, int);
    Code:
       0: getstatic     #91                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
       3: iload_1
       4: iload_2
       5: iload_3
       6: invokevirtual #109                // Method scala/collection/immutable/Range$.inclusive:(III)Lscala/collection/immutable/Range$Inclusive;
       9: areturn

  public final int hashCode$extension(int);
    Code:
       0: iload_1
       1: invokestatic  #116                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       4: invokevirtual #120                // Method java/lang/Object.hashCode:()I
       7: ireturn

  public final boolean equals$extension(int, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #124                // class scala/runtime/RichInt
       4: ifeq          12
       7: iconst_1
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: iload_3
      15: ifeq          45
      18: aload_2
      19: checkcast     #124                // class scala/runtime/RichInt
      22: invokevirtual #127                // Method scala/runtime/RichInt.self:()I
      25: istore        4
      27: iload_1
      28: iload         4
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  private scala.runtime.RichInt$();
    Code:
       0: aload_0
       1: invokespecial #130                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #132                // Field MODULE$:Lscala/runtime/RichInt$;
       8: return
}
