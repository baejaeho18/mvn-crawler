Compiled from "RichChar.scala"
public final class scala.runtime.RichChar$ {
  public static final scala.runtime.RichChar$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scala/runtime/RichChar$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public final scala.math.Numeric$CharIsIntegral$ num$extension(char);
    Code:
       0: getstatic     #19                 // Field scala/math/Numeric$CharIsIntegral$.MODULE$:Lscala/math/Numeric$CharIsIntegral$;
       3: areturn

  public final scala.math.Ordering$Char$ ord$extension(char);
    Code:
       0: getstatic     #29                 // Field scala/math/Ordering$Char$.MODULE$:Lscala/math/Ordering$Char$;
       3: areturn

  public final double doubleValue$extension(char);
    Code:
       0: iload_1
       1: i2d
       2: dreturn

  public final float floatValue$extension(char);
    Code:
       0: iload_1
       1: i2f
       2: freturn

  public final long longValue$extension(char);
    Code:
       0: iload_1
       1: i2l
       2: lreturn

  public final int intValue$extension(char);
    Code:
       0: iload_1
       1: ireturn

  public final byte byteValue$extension(char);
    Code:
       0: iload_1
       1: i2b
       2: ireturn

  public final short shortValue$extension(char);
    Code:
       0: iload_1
       1: i2s
       2: ireturn

  public final boolean isValidChar$extension(char);
    Code:
       0: iconst_1
       1: ireturn

  public final char abs$extension(char);
    Code:
       0: iload_1
       1: ireturn

  public final char max$extension(char, char);
    Code:
       0: getstatic     #52                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: iload_1
       4: iload_2
       5: invokevirtual #56                 // Method scala/math/package$.max:(II)I
       8: i2c
       9: ireturn

  public final char min$extension(char, char);
    Code:
       0: getstatic     #52                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: iload_1
       4: iload_2
       5: invokevirtual #61                 // Method scala/math/package$.min:(II)I
       8: i2c
       9: ireturn

  public final int signum$extension(char);
    Code:
       0: getstatic     #52                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
       3: iload_1
       4: invokevirtual #66                 // Method scala/math/package$.signum:(I)I
       7: ireturn

  public final int asDigit$extension(char);
    Code:
       0: iload_1
       1: bipush        36
       3: invokestatic  #73                 // Method java/lang/Character.digit:(CI)I
       6: ireturn

  public final boolean isControl$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #77                 // Method java/lang/Character.isISOControl:(C)Z
       4: ireturn

  public final boolean isDigit$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #81                 // Method java/lang/Character.isDigit:(C)Z
       4: ireturn

  public final boolean isLetter$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #85                 // Method java/lang/Character.isLetter:(C)Z
       4: ireturn

  public final boolean isLetterOrDigit$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #89                 // Method java/lang/Character.isLetterOrDigit:(C)Z
       4: ireturn

  public final boolean isWhitespace$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #93                 // Method java/lang/Character.isWhitespace:(C)Z
       4: ireturn

  public final boolean isSpaceChar$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #97                 // Method java/lang/Character.isSpaceChar:(C)Z
       4: ireturn

  public final boolean isHighSurrogate$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #101                // Method java/lang/Character.isHighSurrogate:(C)Z
       4: ireturn

  public final boolean isLowSurrogate$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #105                // Method java/lang/Character.isLowSurrogate:(C)Z
       4: ireturn

  public final boolean isSurrogate$extension(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #108                // Method isHighSurrogate$extension:(C)Z
       5: ifne          16
       8: aload_0
       9: iload_1
      10: invokevirtual #110                // Method isLowSurrogate$extension:(C)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public final boolean isUnicodeIdentifierStart$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #114                // Method java/lang/Character.isUnicodeIdentifierStart:(C)Z
       4: ireturn

  public final boolean isUnicodeIdentifierPart$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #118                // Method java/lang/Character.isUnicodeIdentifierPart:(C)Z
       4: ireturn

  public final boolean isIdentifierIgnorable$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #122                // Method java/lang/Character.isIdentifierIgnorable:(C)Z
       4: ireturn

  public final boolean isMirrored$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #126                // Method java/lang/Character.isMirrored:(C)Z
       4: ireturn

  public final boolean isLower$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #130                // Method java/lang/Character.isLowerCase:(C)Z
       4: ireturn

  public final boolean isUpper$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #134                // Method java/lang/Character.isUpperCase:(C)Z
       4: ireturn

  public final boolean isTitleCase$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #138                // Method java/lang/Character.isTitleCase:(C)Z
       4: ireturn

  public final char toLower$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #142                // Method java/lang/Character.toLowerCase:(C)C
       4: ireturn

  public final char toUpper$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #146                // Method java/lang/Character.toUpperCase:(C)C
       4: ireturn

  public final char toTitleCase$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #150                // Method java/lang/Character.toTitleCase:(C)C
       4: ireturn

  public final int getType$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #154                // Method java/lang/Character.getType:(C)I
       4: ireturn

  public final int getNumericValue$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #158                // Method java/lang/Character.getNumericValue:(C)I
       4: ireturn

  public final byte getDirectionality$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #162                // Method java/lang/Character.getDirectionality:(C)B
       4: ireturn

  public final char reverseBytes$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #166                // Method java/lang/Character.reverseBytes:(C)C
       4: ireturn

  public final int hashCode$extension(char);
    Code:
       0: iload_1
       1: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       4: invokevirtual #177                // Method java/lang/Object.hashCode:()I
       7: ireturn

  public final boolean equals$extension(char, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #181                // class scala/runtime/RichChar
       4: ifeq          12
       7: iconst_1
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: iload_3
      15: ifeq          45
      18: aload_2
      19: checkcast     #181                // class scala/runtime/RichChar
      22: invokevirtual #185                // Method scala/runtime/RichChar.self:()C
      25: istore        4
      27: iload_1
      28: iload         4
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  private scala.runtime.RichChar$();
    Code:
       0: aload_0
       1: invokespecial #188                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #190                // Field MODULE$:Lscala/runtime/RichChar$;
       8: return
}
