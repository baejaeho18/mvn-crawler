Compiled from "ValueEncoderFactory.java"
final class org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder extends org.codehaus.stax2.ri.typed.AsciiValueEncoder {
  static final char PAD_CHAR;

  static final byte PAD_BYTE;

  static final byte LF_CHAR;

  static final byte LF_BYTE;

  final org.codehaus.stax2.typed.Base64Variant _variant;

  final byte[] _input;

  int _inputPtr;

  final int _inputEnd;

  int _chunksBeforeLf;

  protected org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder(org.codehaus.stax2.typed.Base64Variant, byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/stax2/ri/typed/AsciiValueEncoder."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field _input:[B
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field _inputPtr:I
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field _inputEnd:I
      25: aload_0
      26: aload_0
      27: getfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
      30: invokevirtual #6                  // Method org/codehaus/stax2/typed/Base64Variant.getMaxLineLength:()I
      33: iconst_2
      34: ishr
      35: putfield      #7                  // Field _chunksBeforeLf:I
      38: return

  public boolean isCompleted();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _inputPtr:I
       4: aload_0
       5: getfield      #5                  // Field _inputEnd:I
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int encodeMore(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _inputEnd:I
       4: iconst_3
       5: isub
       6: istore        4
       8: iinc          3, -5
      11: aload_0
      12: getfield      #4                  // Field _inputPtr:I
      15: iload         4
      17: if_icmpgt     151
      20: iload_2
      21: iload_3
      22: if_icmple     27
      25: iload_2
      26: ireturn
      27: aload_0
      28: getfield      #3                  // Field _input:[B
      31: aload_0
      32: dup
      33: getfield      #4                  // Field _inputPtr:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #4                  // Field _inputPtr:I
      42: baload
      43: bipush        8
      45: ishl
      46: istore        5
      48: iload         5
      50: aload_0
      51: getfield      #3                  // Field _input:[B
      54: aload_0
      55: dup
      56: getfield      #4                  // Field _inputPtr:I
      59: dup_x1
      60: iconst_1
      61: iadd
      62: putfield      #4                  // Field _inputPtr:I
      65: baload
      66: sipush        255
      69: iand
      70: ior
      71: istore        5
      73: iload         5
      75: bipush        8
      77: ishl
      78: aload_0
      79: getfield      #3                  // Field _input:[B
      82: aload_0
      83: dup
      84: getfield      #4                  // Field _inputPtr:I
      87: dup_x1
      88: iconst_1
      89: iadd
      90: putfield      #4                  // Field _inputPtr:I
      93: baload
      94: sipush        255
      97: iand
      98: ior
      99: istore        5
     101: aload_0
     102: getfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     105: iload         5
     107: aload_1
     108: iload_2
     109: invokevirtual #8                  // Method org/codehaus/stax2/typed/Base64Variant.encodeBase64Chunk:(I[CI)I
     112: istore_2
     113: aload_0
     114: dup
     115: getfield      #7                  // Field _chunksBeforeLf:I
     118: iconst_1
     119: isub
     120: dup_x1
     121: putfield      #7                  // Field _chunksBeforeLf:I
     124: ifgt          148
     127: aload_1
     128: iload_2
     129: iinc          2, 1
     132: bipush        10
     134: castore
     135: aload_0
     136: aload_0
     137: getfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     140: invokevirtual #6                  // Method org/codehaus/stax2/typed/Base64Variant.getMaxLineLength:()I
     143: iconst_2
     144: ishr
     145: putfield      #7                  // Field _chunksBeforeLf:I
     148: goto          11
     151: aload_0
     152: getfield      #5                  // Field _inputEnd:I
     155: aload_0
     156: getfield      #4                  // Field _inputPtr:I
     159: isub
     160: istore        5
     162: iload         5
     164: ifle          241
     167: iload_2
     168: iload_3
     169: if_icmpgt     241
     172: aload_0
     173: getfield      #3                  // Field _input:[B
     176: aload_0
     177: dup
     178: getfield      #4                  // Field _inputPtr:I
     181: dup_x1
     182: iconst_1
     183: iadd
     184: putfield      #4                  // Field _inputPtr:I
     187: baload
     188: bipush        16
     190: ishl
     191: istore        6
     193: iload         5
     195: iconst_2
     196: if_icmpne     227
     199: iload         6
     201: aload_0
     202: getfield      #3                  // Field _input:[B
     205: aload_0
     206: dup
     207: getfield      #4                  // Field _inputPtr:I
     210: dup_x1
     211: iconst_1
     212: iadd
     213: putfield      #4                  // Field _inputPtr:I
     216: baload
     217: sipush        255
     220: iand
     221: bipush        8
     223: ishl
     224: ior
     225: istore        6
     227: aload_0
     228: getfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     231: iload         6
     233: iload         5
     235: aload_1
     236: iload_2
     237: invokevirtual #9                  // Method org/codehaus/stax2/typed/Base64Variant.encodeBase64Partial:(II[CI)I
     240: istore_2
     241: iload_2
     242: ireturn

  public int encodeMore(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _inputEnd:I
       4: iconst_3
       5: isub
       6: istore        4
       8: iinc          3, -5
      11: aload_0
      12: getfield      #4                  // Field _inputPtr:I
      15: iload         4
      17: if_icmpgt     151
      20: iload_2
      21: iload_3
      22: if_icmple     27
      25: iload_2
      26: ireturn
      27: aload_0
      28: getfield      #3                  // Field _input:[B
      31: aload_0
      32: dup
      33: getfield      #4                  // Field _inputPtr:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #4                  // Field _inputPtr:I
      42: baload
      43: bipush        8
      45: ishl
      46: istore        5
      48: iload         5
      50: aload_0
      51: getfield      #3                  // Field _input:[B
      54: aload_0
      55: dup
      56: getfield      #4                  // Field _inputPtr:I
      59: dup_x1
      60: iconst_1
      61: iadd
      62: putfield      #4                  // Field _inputPtr:I
      65: baload
      66: sipush        255
      69: iand
      70: ior
      71: istore        5
      73: iload         5
      75: bipush        8
      77: ishl
      78: aload_0
      79: getfield      #3                  // Field _input:[B
      82: aload_0
      83: dup
      84: getfield      #4                  // Field _inputPtr:I
      87: dup_x1
      88: iconst_1
      89: iadd
      90: putfield      #4                  // Field _inputPtr:I
      93: baload
      94: sipush        255
      97: iand
      98: ior
      99: istore        5
     101: aload_0
     102: getfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     105: iload         5
     107: aload_1
     108: iload_2
     109: invokevirtual #10                 // Method org/codehaus/stax2/typed/Base64Variant.encodeBase64Chunk:(I[BI)I
     112: istore_2
     113: aload_0
     114: dup
     115: getfield      #7                  // Field _chunksBeforeLf:I
     118: iconst_1
     119: isub
     120: dup_x1
     121: putfield      #7                  // Field _chunksBeforeLf:I
     124: ifgt          148
     127: aload_1
     128: iload_2
     129: iinc          2, 1
     132: bipush        10
     134: bastore
     135: aload_0
     136: aload_0
     137: getfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     140: invokevirtual #6                  // Method org/codehaus/stax2/typed/Base64Variant.getMaxLineLength:()I
     143: iconst_2
     144: ishr
     145: putfield      #7                  // Field _chunksBeforeLf:I
     148: goto          11
     151: aload_0
     152: getfield      #5                  // Field _inputEnd:I
     155: aload_0
     156: getfield      #4                  // Field _inputPtr:I
     159: isub
     160: istore        5
     162: iload         5
     164: ifle          241
     167: iload_2
     168: iload_3
     169: if_icmpgt     241
     172: aload_0
     173: getfield      #3                  // Field _input:[B
     176: aload_0
     177: dup
     178: getfield      #4                  // Field _inputPtr:I
     181: dup_x1
     182: iconst_1
     183: iadd
     184: putfield      #4                  // Field _inputPtr:I
     187: baload
     188: bipush        16
     190: ishl
     191: istore        6
     193: iload         5
     195: iconst_2
     196: if_icmpne     227
     199: iload         6
     201: aload_0
     202: getfield      #3                  // Field _input:[B
     205: aload_0
     206: dup
     207: getfield      #4                  // Field _inputPtr:I
     210: dup_x1
     211: iconst_1
     212: iadd
     213: putfield      #4                  // Field _inputPtr:I
     216: baload
     217: sipush        255
     220: iand
     221: bipush        8
     223: ishl
     224: ior
     225: istore        6
     227: aload_0
     228: getfield      #2                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     231: iload         6
     233: iload         5
     235: aload_1
     236: iload_2
     237: invokevirtual #11                 // Method org/codehaus/stax2/typed/Base64Variant.encodeBase64Partial:(II[BI)I
     240: istore_2
     241: iload_2
     242: ireturn
}
