class org.apache.xerces.impl.dv.xs.PrecisionDecimalDV extends org.apache.xerces.impl.dv.xs.TypeValidator {
  org.apache.xerces.impl.dv.xs.PrecisionDecimalDV();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xerces/impl/dv/xs/TypeValidator."<init>":()V
       4: return

  public short getAllowedFacets();
    Code:
       0: sipush        4088
       3: ireturn

  public java.lang.Object getActualValue(java.lang.String, org.apache.xerces.impl.dv.ValidationContext) throws org.apache.xerces.impl.dv.InvalidDatatypeValueException;
    Code:
       0: new           #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
       3: dup
       4: aload_1
       5: invokespecial #3                  // Method org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal."<init>":(Ljava/lang/String;)V
       8: areturn
       9: astore_3
      10: new           #5                  // class org/apache/xerces/impl/dv/InvalidDatatypeValueException
      13: dup
      14: ldc           #6                  // String cvc-datatype-valid.1.2.1
      16: iconst_2
      17: anewarray     #7                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: dup
      25: iconst_1
      26: ldc           #8                  // String precisionDecimal
      28: aastore
      29: invokespecial #9                  // Method org/apache/xerces/impl/dv/InvalidDatatypeValueException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      32: athrow
    Exception table:
       from    to  target type
           0     9     9   Class java/lang/NumberFormatException

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
       4: aload_2
       5: checkcast     #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
       8: invokevirtual #10                 // Method org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal.compareTo:(Lorg/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal;)I
      11: ireturn

  public int getFractionDigits(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
       4: getfield      #11                 // Field org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal.fracDigits:I
       7: ireturn

  public int getTotalDigits(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
       4: getfield      #12                 // Field org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal.totalDigits:I
       7: ireturn

  public boolean isIdentical(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
       4: ifeq          14
       7: aload_1
       8: instanceof    #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
      20: aload_2
      21: checkcast     #2                  // class org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal
      24: invokevirtual #13                 // Method org/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal.isIdentical:(Lorg/apache/xerces/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal;)Z
      27: ireturn
}
