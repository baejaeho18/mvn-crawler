public class org.apache.xerces.impl.io.Latin1Reader extends java.io.Reader {
  public static final int DEFAULT_BUFFER_SIZE;

  protected final java.io.InputStream fInputStream;

  protected final byte[] fBuffer;

  public org.apache.xerces.impl.io.Latin1Reader(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        2048
       5: invokespecial #1                  // Method "<init>":(Ljava/io/InputStream;I)V
       8: return

  public org.apache.xerces.impl.io.Latin1Reader(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: newarray       byte
       5: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;[B)V
       8: return

  public org.apache.xerces.impl.io.Latin1Reader(java.io.InputStream, byte[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/io/Reader."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field fInputStream:Ljava/io/InputStream;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field fBuffer:[B
      14: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fInputStream:Ljava/io/InputStream;
       4: invokevirtual #6                  // Method java/io/InputStream.read:()I
       7: ireturn

  public int read(char[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #5                  // Field fBuffer:[B
       5: arraylength
       6: if_icmple     15
       9: aload_0
      10: getfield      #5                  // Field fBuffer:[B
      13: arraylength
      14: istore_3
      15: aload_0
      16: getfield      #4                  // Field fInputStream:Ljava/io/InputStream;
      19: aload_0
      20: getfield      #5                  // Field fBuffer:[B
      23: iconst_0
      24: iload_3
      25: invokevirtual #7                  // Method java/io/InputStream.read:([BII)I
      28: istore        4
      30: iconst_0
      31: istore        5
      33: goto          57
      36: aload_1
      37: iload_2
      38: iload         5
      40: iadd
      41: aload_0
      42: getfield      #5                  // Field fBuffer:[B
      45: iload         5
      47: baload
      48: sipush        255
      51: iand
      52: i2c
      53: castore
      54: iinc          5, 1
      57: iload         5
      59: iload         4
      61: if_icmplt     36
      64: iload         4
      66: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fInputStream:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #8                  // Method java/io/InputStream.skip:(J)J
       8: lreturn

  public boolean ready() throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fInputStream:Ljava/io/InputStream;
       4: invokevirtual #9                  // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  public void mark(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fInputStream:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #10                 // Method java/io/InputStream.mark:(I)V
       8: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fInputStream:Ljava/io/InputStream;
       4: invokevirtual #11                 // Method java/io/InputStream.reset:()V
       7: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fInputStream:Ljava/io/InputStream;
       4: invokevirtual #12                 // Method java/io/InputStream.close:()V
       7: return
}
