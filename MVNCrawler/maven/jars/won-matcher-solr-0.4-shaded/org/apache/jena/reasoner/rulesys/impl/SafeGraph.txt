Compiled from "SafeGraph.java"
public class org.apache.jena.reasoner.rulesys.impl.SafeGraph extends org.apache.jena.graph.impl.WrappedGraph implements org.apache.jena.graph.Graph {
  public org.apache.jena.reasoner.rulesys.impl.SafeGraph(org.apache.jena.graph.Graph);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/jena/graph/impl/WrappedGraph."<init>":(Lorg/apache/jena/graph/Graph;)V
       5: return

  public org.apache.jena.util.iterator.ExtendedIterator<org.apache.jena.graph.Triple> find(org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method org/apache/jena/graph/Triple.getMatchSubject:()Lorg/apache/jena/graph/Node;
       5: aload_1
       6: invokevirtual #3                  // Method org/apache/jena/graph/Triple.getMatchPredicate:()Lorg/apache/jena/graph/Node;
       9: aload_1
      10: invokevirtual #4                  // Method org/apache/jena/graph/Triple.getMatchObject:()Lorg/apache/jena/graph/Node;
      13: invokevirtual #5                  // Method find:(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;)Lorg/apache/jena/util/iterator/ExtendedIterator;
      16: areturn

  public org.apache.jena.util.iterator.ExtendedIterator<org.apache.jena.graph.Triple> find(org.apache.jena.graph.Node, org.apache.jena.graph.Node, org.apache.jena.graph.Node);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field base:Lorg/apache/jena/graph/Graph;
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #7,  4            // InterfaceMethod org/apache/jena/graph/Graph.find:(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;)Lorg/apache/jena/util/iterator/ExtendedIterator;
      13: invokedynamic #8,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      18: invokeinterface #9,  2            // InterfaceMethod org/apache/jena/util/iterator/ExtendedIterator.filterDrop:(Ljava/util/function/Predicate;)Lorg/apache/jena/util/iterator/ExtendedIterator;
      23: invokestatic  #10                 // Method org/apache/jena/graph/impl/SimpleEventManager.notifyingRemove:(Lorg/apache/jena/graph/Graph;Ljava/util/Iterator;)Lorg/apache/jena/util/iterator/ExtendedIterator;
      26: areturn

  public org.apache.jena.graph.Graph getRawGraph();
    Code:
       0: aload_0
       1: getfield      #6                  // Field base:Lorg/apache/jena/graph/Graph;
       4: areturn

  private static boolean lambda$find$0(org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method org/apache/jena/graph/Triple.getSubject:()Lorg/apache/jena/graph/Node;
       4: invokevirtual #12                 // Method org/apache/jena/graph/Node.isLiteral:()Z
       7: ifne          30
      10: aload_0
      11: invokevirtual #13                 // Method org/apache/jena/graph/Triple.getPredicate:()Lorg/apache/jena/graph/Node;
      14: invokevirtual #14                 // Method org/apache/jena/graph/Node.isBlank:()Z
      17: ifne          30
      20: aload_0
      21: invokevirtual #13                 // Method org/apache/jena/graph/Triple.getPredicate:()Lorg/apache/jena/graph/Node;
      24: invokevirtual #12                 // Method org/apache/jena/graph/Node.isLiteral:()Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn
}
