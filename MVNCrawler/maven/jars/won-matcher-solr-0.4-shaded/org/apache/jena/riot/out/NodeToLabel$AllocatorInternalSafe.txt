Compiled from "NodeToLabel.java"
class org.apache.jena.riot.out.NodeToLabel$AllocatorInternalSafe extends org.apache.jena.riot.out.NodeToLabel$AllocatorBase {
  private org.apache.jena.riot.out.NodeToLabel$AllocatorInternalSafe();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method org/apache/jena/riot/out/NodeToLabel$AllocatorBase."<init>":(Lorg/apache/jena/riot/out/NodeToLabel$1;)V
       5: return

  protected java.lang.String labelForBlank(org.apache.jena.graph.Node);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #5                  // String _:
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #7                  // Method org/apache/jena/graph/Node.getBlankNodeLabel:()Ljava/lang/String;
      16: invokestatic  #8                  // Method org/apache/jena/riot/out/NodeFmtLib.encodeBNodeLabel:(Ljava/lang/String;)Ljava/lang/String;
      19: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  org.apache.jena.riot.out.NodeToLabel$AllocatorInternalSafe(org.apache.jena.riot.out.NodeToLabel$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
