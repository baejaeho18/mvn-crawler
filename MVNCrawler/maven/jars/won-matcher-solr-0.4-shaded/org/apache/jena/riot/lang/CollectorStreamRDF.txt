Compiled from "CollectorStreamRDF.java"
public class org.apache.jena.riot.lang.CollectorStreamRDF implements org.apache.jena.riot.system.StreamRDF {
  private org.apache.jena.riot.system.PrefixMap prefixes;

  private java.lang.String baseIri;

  private java.util.List<org.apache.jena.graph.Triple> triples;

  private java.util.List<org.apache.jena.sparql.core.Quad> quads;

  public org.apache.jena.riot.lang.CollectorStreamRDF();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/jena/riot/system/PrefixMapFactory.createForInput:()Lorg/apache/jena/riot/system/PrefixMap;
       8: putfield      #3                  // Field prefixes:Lorg/apache/jena/riot/system/PrefixMap;
      11: aload_0
      12: new           #4                  // class java/util/ArrayList
      15: dup
      16: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      19: putfield      #6                  // Field triples:Ljava/util/List;
      22: aload_0
      23: new           #4                  // class java/util/ArrayList
      26: dup
      27: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      30: putfield      #7                  // Field quads:Ljava/util/List;
      33: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #6                  // Field triples:Ljava/util/List;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #7                  // Field quads:Ljava/util/List;
      13: invokeinterface #8,  1            // InterfaceMethod java/util/List.clear:()V
      18: aload_0
      19: invokestatic  #2                  // Method org/apache/jena/riot/system/PrefixMapFactory.createForInput:()Lorg/apache/jena/riot/system/PrefixMap;
      22: putfield      #3                  // Field prefixes:Lorg/apache/jena/riot/system/PrefixMap;
      25: return

  public void finish();
    Code:
       0: return

  public void triple(org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: getfield      #6                  // Field triples:Ljava/util/List;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void quad(org.apache.jena.sparql.core.Quad);
    Code:
       0: aload_0
       1: getfield      #7                  // Field quads:Ljava/util/List;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void base(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field baseIri:Ljava/lang/String;
       5: return

  public void prefix(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefixes:Lorg/apache/jena/riot/system/PrefixMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod org/apache/jena/riot/system/PrefixMap.add:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public org.apache.jena.riot.system.PrefixMap getPrefixes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefixes:Lorg/apache/jena/riot/system/PrefixMap;
       4: areturn

  public java.lang.String getBaseIri();
    Code:
       0: aload_0
       1: getfield      #10                 // Field baseIri:Ljava/lang/String;
       4: areturn

  public java.util.List<org.apache.jena.graph.Triple> getTriples();
    Code:
       0: aload_0
       1: getfield      #6                  // Field triples:Ljava/util/List;
       4: areturn

  public java.util.List<org.apache.jena.sparql.core.Quad> getQuads();
    Code:
       0: aload_0
       1: getfield      #7                  // Field quads:Ljava/util/List;
       4: areturn
}
