Compiled from "TurtleValidate.java"
public class org.apache.jena.riot.out.TurtleValidate {
  public org.apache.jena.riot.out.TurtleValidate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected static boolean checkValidPrefixedName(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method checkValidPrefixPart:(Ljava/lang/String;)Z
       4: ifeq          18
       7: aload_1
       8: invokestatic  #3                  // Method checkValidNamePart:(Ljava/lang/String;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected static boolean checkValidPrefixPart(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/String.length:()I
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: new           #5                  // class java/text/StringCharacterIterator
      12: dup
      13: aload_0
      14: invokespecial #6                  // Method java/text/StringCharacterIterator."<init>":(Ljava/lang/String;)V
      17: astore_1
      18: aload_1
      19: invokeinterface #7,  1            // InterfaceMethod java/text/CharacterIterator.first:()C
      24: istore_2
      25: iload_2
      26: invokestatic  #8                  // Method checkNameStartChar:(C)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: iload_2
      35: bipush        95
      37: if_icmpne     42
      40: iconst_0
      41: ireturn
      42: aload_1
      43: invokestatic  #9                  // Method checkNameTail:(Ljava/text/CharacterIterator;)Z
      46: ireturn

  private static boolean checkValidPrefixName(java.lang.String);
    Code:
       0: aload_0
       1: bipush        58
       3: invokevirtual #10                 // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: ifge          38
      11: new           #11                 // class org/apache/jena/riot/RiotException
      14: dup
      15: new           #12                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #14                 // String Broken short form --
      24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #17                 // Method org/apache/jena/riot/RiotException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_0
      40: iload_1
      41: invokevirtual #18                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      44: astore_2
      45: aload_0
      46: iload_1
      47: iconst_1
      48: iadd
      49: invokevirtual #19                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      52: astore_3
      53: aload_2
      54: aload_3
      55: invokestatic  #20                 // Method checkValidPrefixedName:(Ljava/lang/String;Ljava/lang/String;)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: iconst_0
      64: ireturn

  protected static boolean checkValidNamePart(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/String.length:()I
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: new           #5                  // class java/text/StringCharacterIterator
      12: dup
      13: aload_0
      14: invokespecial #6                  // Method java/text/StringCharacterIterator."<init>":(Ljava/lang/String;)V
      17: astore_1
      18: aload_1
      19: invokeinterface #7,  1            // InterfaceMethod java/text/CharacterIterator.first:()C
      24: istore_2
      25: iload_2
      26: invokestatic  #8                  // Method checkNameStartChar:(C)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: invokestatic  #9                  // Method checkNameTail:(Ljava/text/CharacterIterator;)Z
      38: ireturn

  private static boolean checkNameTail(java.text.CharacterIterator);
    Code:
       0: aload_0
       1: invokeinterface #21,  1           // InterfaceMethod java/text/CharacterIterator.next:()C
       6: istore_1
       7: iload_1
       8: ldc           #23                 // int 65535
      10: if_icmpeq     32
      13: iload_1
      14: invokestatic  #24                 // Method checkNameChar:(C)Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: invokeinterface #21,  1           // InterfaceMethod java/text/CharacterIterator.next:()C
      28: istore_1
      29: goto          7
      32: iconst_1
      33: ireturn

  protected static boolean checkNameStartChar(char);
    Code:
       0: iload_0
       1: invokestatic  #25                 // Method java/lang/Character.isLetter:(C)Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: iload_0
      10: bipush        95
      12: if_icmpne     17
      15: iconst_1
      16: ireturn
      17: iconst_0
      18: ireturn

  protected static boolean checkNameChar(char);
    Code:
       0: iload_0
       1: invokestatic  #26                 // Method java/lang/Character.isLetterOrDigit:(C)Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: iload_0
      10: bipush        95
      12: if_icmpne     17
      15: iconst_1
      16: ireturn
      17: iload_0
      18: bipush        45
      20: if_icmpne     25
      23: iconst_1
      24: ireturn
      25: iconst_0
      26: ireturn
}
