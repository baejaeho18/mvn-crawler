Compiled from "CollectorStreamBase.java"
public abstract class org.apache.jena.riot.lang.CollectorStreamBase<T> implements org.apache.jena.riot.system.StreamRDF {
  private final org.apache.jena.riot.system.PrefixMap prefixes;

  private java.lang.String baseIri;

  public org.apache.jena.riot.lang.CollectorStreamBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/jena/riot/system/PrefixMapFactory.createForInput:()Lorg/apache/jena/riot/system/PrefixMap;
       8: putfield      #3                  // Field prefixes:Lorg/apache/jena/riot/system/PrefixMap;
      11: return

  public void finish();
    Code:
       0: return

  public void triple(org.apache.jena.graph.Triple);
    Code:
       0: return

  public void quad(org.apache.jena.sparql.core.Quad);
    Code:
       0: return

  public void start();
    Code:
       0: return

  public void base(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field baseIri:Ljava/lang/String;
       5: return

  public void prefix(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefixes:Lorg/apache/jena/riot/system/PrefixMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod org/apache/jena/riot/system/PrefixMap.add:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public org.apache.jena.riot.system.PrefixMap getPrefixes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefixes:Lorg/apache/jena/riot/system/PrefixMap;
       4: areturn

  public java.lang.String getBaseIri();
    Code:
       0: aload_0
       1: getfield      #4                  // Field baseIri:Ljava/lang/String;
       4: areturn

  public abstract java.util.Collection<T> getCollected();
}
