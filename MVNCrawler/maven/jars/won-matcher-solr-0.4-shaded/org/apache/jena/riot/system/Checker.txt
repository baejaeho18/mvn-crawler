Compiled from "Checker.java"
public final class org.apache.jena.riot.system.Checker {
  private boolean allowRelativeIRIs;

  private boolean warningsAreErrors;

  private org.apache.jena.riot.system.ErrorHandler handler;

  private org.apache.jena.riot.checker.NodeChecker checkLiterals;

  private org.apache.jena.riot.checker.NodeChecker checkURIs;

  private org.apache.jena.riot.checker.NodeChecker checkBlankNodes;

  private org.apache.jena.riot.checker.NodeChecker checkVars;

  public org.apache.jena.riot.system.Checker();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/jena/riot/system/ErrorHandler;)V
       5: return

  public org.apache.jena.riot.system.Checker(org.apache.jena.riot.system.ErrorHandler);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field allowRelativeIRIs:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field warningsAreErrors:Z
      14: aload_1
      15: ifnonnull     22
      18: invokestatic  #5                  // Method org/apache/jena/riot/system/ErrorHandlerFactory.getDefaultErrorHandler:()Lorg/apache/jena/riot/system/ErrorHandler;
      21: astore_1
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field handler:Lorg/apache/jena/riot/system/ErrorHandler;
      27: aload_0
      28: new           #7                  // class org/apache/jena/riot/checker/CheckerLiterals
      31: dup
      32: aload_1
      33: invokespecial #8                  // Method org/apache/jena/riot/checker/CheckerLiterals."<init>":(Lorg/apache/jena/riot/system/ErrorHandler;)V
      36: putfield      #9                  // Field checkLiterals:Lorg/apache/jena/riot/checker/NodeChecker;
      39: aload_0
      40: new           #10                 // class org/apache/jena/riot/checker/CheckerIRI
      43: dup
      44: aload_1
      45: getstatic     #11                 // Field org/apache/jena/riot/system/IRIResolver.iriFactory:Lorg/apache/jena/iri/IRIFactory;
      48: invokespecial #12                 // Method org/apache/jena/riot/checker/CheckerIRI."<init>":(Lorg/apache/jena/riot/system/ErrorHandler;Lorg/apache/jena/iri/IRIFactory;)V
      51: putfield      #13                 // Field checkURIs:Lorg/apache/jena/riot/checker/NodeChecker;
      54: aload_0
      55: new           #14                 // class org/apache/jena/riot/checker/CheckerBlankNodes
      58: dup
      59: aload_1
      60: invokespecial #15                 // Method org/apache/jena/riot/checker/CheckerBlankNodes."<init>":(Lorg/apache/jena/riot/system/ErrorHandler;)V
      63: putfield      #16                 // Field checkBlankNodes:Lorg/apache/jena/riot/checker/NodeChecker;
      66: aload_0
      67: new           #17                 // class org/apache/jena/riot/checker/CheckerVar
      70: dup
      71: aload_1
      72: invokespecial #18                 // Method org/apache/jena/riot/checker/CheckerVar."<init>":(Lorg/apache/jena/riot/system/ErrorHandler;)V
      75: putfield      #19                 // Field checkVars:Lorg/apache/jena/riot/checker/NodeChecker;
      78: return

  public org.apache.jena.riot.system.ErrorHandler getHandler();
    Code:
       0: aload_0
       1: getfield      #6                  // Field handler:Lorg/apache/jena/riot/system/ErrorHandler;
       4: areturn

  public void setHandler(org.apache.jena.riot.system.ErrorHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field handler:Lorg/apache/jena/riot/system/ErrorHandler;
       5: return

  public boolean check(org.apache.jena.graph.Node, long, long);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/apache/jena/graph/Node.isURI:()Z
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: lload_2
      10: lload         4
      12: invokevirtual #21                 // Method checkIRI:(Lorg/apache/jena/graph/Node;JJ)Z
      15: ireturn
      16: aload_1
      17: invokevirtual #22                 // Method org/apache/jena/graph/Node.isBlank:()Z
      20: ifeq          32
      23: aload_0
      24: aload_1
      25: lload_2
      26: lload         4
      28: invokevirtual #23                 // Method checkBlank:(Lorg/apache/jena/graph/Node;JJ)Z
      31: ireturn
      32: aload_1
      33: invokevirtual #24                 // Method org/apache/jena/graph/Node.isLiteral:()Z
      36: ifeq          48
      39: aload_0
      40: aload_1
      41: lload_2
      42: lload         4
      44: invokevirtual #25                 // Method checkLiteral:(Lorg/apache/jena/graph/Node;JJ)Z
      47: ireturn
      48: aload_1
      49: invokevirtual #26                 // Method org/apache/jena/graph/Node.isVariable:()Z
      52: ifeq          64
      55: aload_0
      56: aload_1
      57: lload_2
      58: lload         4
      60: invokevirtual #27                 // Method checkVar:(Lorg/apache/jena/graph/Node;JJ)Z
      63: ireturn
      64: aload_0
      65: getfield      #6                  // Field handler:Lorg/apache/jena/riot/system/ErrorHandler;
      68: ldc           #28                 // String Not a recognized node:
      70: lload_2
      71: lload         4
      73: invokeinterface #29,  6           // InterfaceMethod org/apache/jena/riot/system/ErrorHandler.warning:(Ljava/lang/String;JJ)V
      78: iconst_0
      79: ireturn

  public boolean check(org.apache.jena.graph.Triple, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method org/apache/jena/graph/Triple.getSubject:()Lorg/apache/jena/graph/Node;
       5: aload_1
       6: invokevirtual #31                 // Method org/apache/jena/graph/Triple.getPredicate:()Lorg/apache/jena/graph/Node;
       9: aload_1
      10: invokevirtual #32                 // Method org/apache/jena/graph/Triple.getObject:()Lorg/apache/jena/graph/Node;
      13: lload_2
      14: lload         4
      16: invokevirtual #33                 // Method checkTriple:(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;JJ)Z
      19: ireturn

  public boolean checkTriple(org.apache.jena.graph.Node, org.apache.jena.graph.Node, org.apache.jena.graph.Node, long, long);
    Code:
       0: iconst_1
       1: istore        8
       3: aload_1
       4: ifnull        21
       7: aload_1
       8: invokevirtual #20                 // Method org/apache/jena/graph/Node.isURI:()Z
      11: ifne          39
      14: aload_1
      15: invokevirtual #22                 // Method org/apache/jena/graph/Node.isBlank:()Z
      18: ifne          39
      21: aload_0
      22: getfield      #6                  // Field handler:Lorg/apache/jena/riot/system/ErrorHandler;
      25: ldc           #34                 // String Subject is not a URI or blank node
      27: lload         4
      29: lload         6
      31: invokeinterface #35,  6           // InterfaceMethod org/apache/jena/riot/system/ErrorHandler.error:(Ljava/lang/String;JJ)V
      36: iconst_0
      37: istore        8
      39: aload_2
      40: ifnull        50
      43: aload_2
      44: invokevirtual #20                 // Method org/apache/jena/graph/Node.isURI:()Z
      47: ifne          68
      50: aload_0
      51: getfield      #6                  // Field handler:Lorg/apache/jena/riot/system/ErrorHandler;
      54: ldc           #36                 // String Predicate not a URI
      56: lload         4
      58: lload         6
      60: invokeinterface #35,  6           // InterfaceMethod org/apache/jena/riot/system/ErrorHandler.error:(Ljava/lang/String;JJ)V
      65: iconst_0
      66: istore        8
      68: aload_3
      69: ifnull        93
      72: aload_3
      73: invokevirtual #20                 // Method org/apache/jena/graph/Node.isURI:()Z
      76: ifne          111
      79: aload_3
      80: invokevirtual #22                 // Method org/apache/jena/graph/Node.isBlank:()Z
      83: ifne          111
      86: aload_3
      87: invokevirtual #24                 // Method org/apache/jena/graph/Node.isLiteral:()Z
      90: ifne          111
      93: aload_0
      94: getfield      #6                  // Field handler:Lorg/apache/jena/riot/system/ErrorHandler;
      97: ldc           #37                 // String Object is not a URI, blank node or literal
      99: lload         4
     101: lload         6
     103: invokeinterface #35,  6           // InterfaceMethod org/apache/jena/riot/system/ErrorHandler.error:(Ljava/lang/String;JJ)V
     108: iconst_0
     109: istore        8
     111: iload         8
     113: ireturn

  public final boolean checkVar(org.apache.jena.graph.Node, long, long);
    Code:
       0: aload_0
       1: getfield      #19                 // Field checkVars:Lorg/apache/jena/riot/checker/NodeChecker;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokeinterface #38,  6           // InterfaceMethod org/apache/jena/riot/checker/NodeChecker.check:(Lorg/apache/jena/graph/Node;JJ)Z
      13: ireturn

  public final boolean checkLiteral(org.apache.jena.graph.Node, long, long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field checkLiterals:Lorg/apache/jena/riot/checker/NodeChecker;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokeinterface #38,  6           // InterfaceMethod org/apache/jena/riot/checker/NodeChecker.check:(Lorg/apache/jena/graph/Node;JJ)Z
      13: ireturn

  public final boolean checkBlank(org.apache.jena.graph.Node, long, long);
    Code:
       0: aload_0
       1: getfield      #16                 // Field checkBlankNodes:Lorg/apache/jena/riot/checker/NodeChecker;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokeinterface #38,  6           // InterfaceMethod org/apache/jena/riot/checker/NodeChecker.check:(Lorg/apache/jena/graph/Node;JJ)Z
      13: ireturn

  public final boolean checkIRI(org.apache.jena.graph.Node, long, long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field checkURIs:Lorg/apache/jena/riot/checker/NodeChecker;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokeinterface #38,  6           // InterfaceMethod org/apache/jena/riot/checker/NodeChecker.check:(Lorg/apache/jena/graph/Node;JJ)Z
      13: ireturn

  public final boolean checkIRI(org.apache.jena.iri.IRI, long, long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field checkURIs:Lorg/apache/jena/riot/checker/NodeChecker;
       4: instanceof    #10                 // class org/apache/jena/riot/checker/CheckerIRI
       7: ifne          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: getfield      #13                 // Field checkURIs:Lorg/apache/jena/riot/checker/NodeChecker;
      16: checkcast     #10                 // class org/apache/jena/riot/checker/CheckerIRI
      19: aload_1
      20: lload_2
      21: lload         4
      23: invokevirtual #39                 // Method org/apache/jena/riot/checker/CheckerIRI.checkIRI:(Lorg/apache/jena/iri/IRI;JJ)Z
      26: ireturn

  public final org.apache.jena.riot.checker.NodeChecker getCheckLiterals();
    Code:
       0: aload_0
       1: getfield      #9                  // Field checkLiterals:Lorg/apache/jena/riot/checker/NodeChecker;
       4: areturn

  public final void setCheckLiterals(org.apache.jena.riot.checker.NodeChecker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field checkLiterals:Lorg/apache/jena/riot/checker/NodeChecker;
       5: return

  public final org.apache.jena.riot.checker.NodeChecker getCheckURIs();
    Code:
       0: aload_0
       1: getfield      #13                 // Field checkURIs:Lorg/apache/jena/riot/checker/NodeChecker;
       4: areturn

  public final void setCheckURIs(org.apache.jena.riot.checker.NodeChecker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field checkURIs:Lorg/apache/jena/riot/checker/NodeChecker;
       5: return

  public final org.apache.jena.riot.checker.NodeChecker getCheckBlankNodes();
    Code:
       0: aload_0
       1: getfield      #16                 // Field checkBlankNodes:Lorg/apache/jena/riot/checker/NodeChecker;
       4: areturn

  public final void setCheckBlankNodes(org.apache.jena.riot.checker.NodeChecker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field checkBlankNodes:Lorg/apache/jena/riot/checker/NodeChecker;
       5: return

  public final org.apache.jena.riot.checker.NodeChecker getCheckVars();
    Code:
       0: aload_0
       1: getfield      #19                 // Field checkVars:Lorg/apache/jena/riot/checker/NodeChecker;
       4: areturn

  public final void setCheckVars(org.apache.jena.riot.checker.NodeChecker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field checkVars:Lorg/apache/jena/riot/checker/NodeChecker;
       5: return
}
