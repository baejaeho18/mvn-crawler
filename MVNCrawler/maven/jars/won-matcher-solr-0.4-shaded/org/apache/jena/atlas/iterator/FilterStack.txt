Compiled from "FilterStack.java"
public abstract class org.apache.jena.atlas.iterator.FilterStack<T> implements java.util.function.Predicate<T> {
  private final java.util.function.Predicate<T> other;

  private final boolean subFilterLast;

  public org.apache.jena.atlas.iterator.FilterStack(java.util.function.Predicate<T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/util/function/Predicate;Z)V
       6: return

  public org.apache.jena.atlas.iterator.FilterStack(java.util.function.Predicate<T>, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field other:Ljava/util/function/Predicate;
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field subFilterLast:Z
      14: return

  public final boolean test(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field subFilterLast:Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #5                  // Method acceptAdditionaOther:(Ljava/lang/Object;)Z
      12: ireturn
      13: aload_0
      14: aload_1
      15: invokespecial #6                  // Method acceptOtherAdditional:(Ljava/lang/Object;)Z
      18: ireturn

  private boolean acceptAdditionaOther(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method acceptAdditional:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #3                  // Field other:Ljava/util/function/Predicate;
      14: ifnull        32
      17: aload_0
      18: getfield      #3                  // Field other:Ljava/util/function/Predicate;
      21: aload_1
      22: invokeinterface #8,  2            // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: iconst_1
      33: ireturn

  private boolean acceptOtherAdditional(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field other:Ljava/util/function/Predicate;
       4: ifnull        22
       7: aload_0
       8: getfield      #3                  // Field other:Ljava/util/function/Predicate;
      11: aload_1
      12: invokeinterface #8,  2            // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: aload_1
      24: invokevirtual #7                  // Method acceptAdditional:(Ljava/lang/Object;)Z
      27: ireturn

  public abstract boolean acceptAdditional(T);
}
