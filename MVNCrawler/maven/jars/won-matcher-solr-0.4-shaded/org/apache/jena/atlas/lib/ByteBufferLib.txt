Compiled from "ByteBufferLib.java"
public class org.apache.jena.atlas.lib.ByteBufferLib {
  public static boolean allowArray;

  private org.apache.jena.atlas.lib.ByteBufferLib();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void fill(java.nio.ByteBuffer, byte);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
       5: aload_0
       6: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
       9: iload_1
      10: invokestatic  #4                  // Method fill:(Ljava/nio/ByteBuffer;IIB)V
      13: return

  public static void fill(java.nio.ByteBuffer, int, int, byte);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: iload_2
       6: if_icmpge     23
       9: aload_0
      10: iload         4
      12: iload_3
      13: invokevirtual #5                  // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      16: pop
      17: iinc          4, 1
      20: goto          3
      23: return

  public static java.lang.String details(java.nio.ByteBuffer);
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #8                  // String [pos=
       9: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
      16: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #11                 // String  lim=
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
      28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #12                 // String  cap=
      33: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #13                 // Method java/nio/ByteBuffer.capacity:()I
      40: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #14                 // String ]
      45: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public static void print(java.nio.ByteBuffer);
    Code:
       0: getstatic     #16                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: aload_0
       4: invokestatic  #17                 // Method print:(Ljava/io/PrintStream;Ljava/nio/ByteBuffer;)V
       7: return

  public static void print(java.io.PrintStream, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_0
       6: ldc           #19                 // String ByteBuffer[pos=%d lim=%d cap=%d]
       8: iconst_3
       9: anewarray     #20                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
      18: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aastore
      22: dup
      23: iconst_1
      24: aload_1
      25: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
      28: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: dup
      33: iconst_2
      34: aload_1
      35: invokevirtual #13                 // Method java/nio/ByteBuffer.capacity:()I
      38: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: invokevirtual #22                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      45: pop
      46: iconst_0
      47: istore_2
      48: bipush        60
      50: istore_3
      51: iload_2
      52: iload_3
      53: if_icmpge     103
      56: iload_2
      57: aload_1
      58: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
      61: if_icmpge     103
      64: iload_2
      65: bipush        20
      67: irem
      68: ifne          75
      71: aload_0
      72: invokevirtual #23                 // Method java/io/PrintStream.println:()V
      75: aload_0
      76: ldc           #24                 // String  0x%02X
      78: iconst_1
      79: anewarray     #20                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload_1
      85: iload_2
      86: invokevirtual #25                 // Method java/nio/ByteBuffer.get:(I)B
      89: invokestatic  #26                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      92: aastore
      93: invokevirtual #22                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      96: pop
      97: iinc          2, 1
     100: goto          51
     103: iload_2
     104: aload_1
     105: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
     108: if_icmpge     128
     111: iload_2
     112: bipush        24
     114: irem
     115: ifne          122
     118: aload_0
     119: invokevirtual #23                 // Method java/io/PrintStream.println:()V
     122: aload_0
     123: ldc           #27                 // String  ...
     125: invokevirtual #28                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
     128: aload_0
     129: invokevirtual #23                 // Method java/io/PrintStream.println:()V
     132: return

  public static boolean sameValue(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.capacity:()I
       4: aload_1
       5: invokevirtual #13                 // Method java/nio/ByteBuffer.capacity:()I
       8: if_icmpeq     13
      11: iconst_0
      12: ireturn
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_0
      17: invokevirtual #13                 // Method java/nio/ByteBuffer.capacity:()I
      20: if_icmpge     44
      23: aload_0
      24: iload_2
      25: invokevirtual #25                 // Method java/nio/ByteBuffer.get:(I)B
      28: aload_1
      29: iload_2
      30: invokevirtual #25                 // Method java/nio/ByteBuffer.get:(I)B
      33: if_icmpeq     38
      36: iconst_0
      37: ireturn
      38: iinc          2, 1
      41: goto          15
      44: iconst_1
      45: ireturn

  public static final java.nio.ByteBuffer duplicate(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
       4: aload_0
       5: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
       8: isub
       9: invokestatic  #29                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      12: astore_1
      13: aload_0
      14: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
      17: istore_2
      18: aload_1
      19: aload_0
      20: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_0
      25: iload_2
      26: invokevirtual #31                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      29: pop
      30: aload_1
      31: iconst_0
      32: invokevirtual #31                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      35: pop
      36: aload_1
      37: aload_1
      38: invokevirtual #13                 // Method java/nio/ByteBuffer.capacity:()I
      41: invokevirtual #32                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      44: pop
      45: aload_1
      46: areturn

  public static final byte[] bb2array(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: newarray       byte
       5: astore_3
       6: aload_0
       7: iload_1
       8: iload_2
       9: aload_3
      10: invokestatic  #33                 // Method bb2array:(Ljava/nio/ByteBuffer;II[B)V
      13: aload_3
      14: areturn

  private static void bb2array(java.nio.ByteBuffer, int, int, byte[]);
    Code:
       0: iconst_0
       1: istore        4
       3: iload_1
       4: istore        5
       6: iload         5
       8: iload_2
       9: if_icmpge     31
      12: aload_3
      13: iload         4
      15: iinc          4, 1
      18: aload_0
      19: iload         5
      21: iinc          5, 1
      24: invokevirtual #25                 // Method java/nio/ByteBuffer.get:(I)B
      27: bastore
      28: goto          6
      31: return

  public static final void bbcopy(java.nio.ByteBuffer, int, int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpne     6
       5: return
       6: getstatic     #34                 // Field allowArray:Z
       9: ifeq          29
      12: aload_0
      13: invokevirtual #35                 // Method java/nio/ByteBuffer.hasArray:()Z
      16: ifeq          29
      19: aload_0
      20: iload_1
      21: iload_2
      22: iload_3
      23: iload         4
      25: invokestatic  #36                 // Method acopyArray:(Ljava/nio/ByteBuffer;IIII)V
      28: return
      29: iload_1
      30: iload_2
      31: if_icmpge     46
      34: aload_0
      35: iload_1
      36: iload_2
      37: iload_3
      38: iload         4
      40: invokestatic  #37                 // Method bbcopy1:(Ljava/nio/ByteBuffer;IIII)V
      43: goto          55
      46: aload_0
      47: iload_1
      48: iload_2
      49: iload_3
      50: iload         4
      52: invokestatic  #38                 // Method bbcopy2:(Ljava/nio/ByteBuffer;IIII)V
      55: return

  private static final void bbcopy1(java.nio.ByteBuffer, int, int, int, int);
    Code:
       0: iload_2
       1: iload         4
       3: imul
       4: istore        5
       6: iload_1
       7: iload         4
       9: imul
      10: istore        6
      12: iload_3
      13: iload         4
      15: imul
      16: istore        7
      18: iload         7
      20: iconst_1
      21: isub
      22: istore        8
      24: iload         8
      26: iflt          54
      29: aload_0
      30: iload         5
      32: iload         8
      34: iadd
      35: aload_0
      36: iload         6
      38: iload         8
      40: iadd
      41: invokevirtual #25                 // Method java/nio/ByteBuffer.get:(I)B
      44: invokevirtual #5                  // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      47: pop
      48: iinc          8, -1
      51: goto          24
      54: return

  private static final void bbcopy2(java.nio.ByteBuffer, int, int, int, int);
    Code:
       0: iload_2
       1: iload         4
       3: imul
       4: istore        5
       6: iload_1
       7: iload         4
       9: imul
      10: istore        6
      12: iload_3
      13: iload         4
      15: imul
      16: istore        7
      18: iconst_0
      19: istore        8
      21: iload         8
      23: iload         7
      25: if_icmpge     53
      28: aload_0
      29: iload         5
      31: iload         8
      33: iadd
      34: aload_0
      35: iload         6
      37: iload         8
      39: iadd
      40: invokevirtual #25                 // Method java/nio/ByteBuffer.get:(I)B
      43: invokevirtual #5                  // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      46: pop
      47: iinc          8, 1
      50: goto          21
      53: return

  public static final void bbcopy(java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, int, int);
    Code:
       0: getstatic     #34                 // Field allowArray:Z
       3: ifeq          32
       6: aload_0
       7: invokevirtual #35                 // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          32
      13: aload_2
      14: invokevirtual #35                 // Method java/nio/ByteBuffer.hasArray:()Z
      17: ifeq          32
      20: aload_0
      21: iload_1
      22: aload_2
      23: iload_3
      24: iload         4
      26: iload         5
      28: invokestatic  #39                 // Method acopyArray:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V
      31: return
      32: iload_1
      33: iload         5
      35: imul
      36: istore        6
      38: iload_3
      39: iload         5
      41: imul
      42: istore        7
      44: iload         4
      46: iload         5
      48: imul
      49: istore        8
      51: iconst_0
      52: istore        9
      54: iload         9
      56: iload         8
      58: if_icmpge     86
      61: aload_2
      62: iload         7
      64: iload         9
      66: iadd
      67: aload_0
      68: iload         6
      70: iload         9
      72: iadd
      73: invokevirtual #25                 // Method java/nio/ByteBuffer.get:(I)B
      76: invokevirtual #5                  // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      79: pop
      80: iinc          9, 1
      83: goto          54
      86: return

  public static final void bbfill(java.nio.ByteBuffer, int, int, byte, int);
    Code:
       0: getstatic     #34                 // Field allowArray:Z
       3: ifeq          23
       6: aload_0
       7: invokevirtual #35                 // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          23
      13: aload_0
      14: iload_1
      15: iload_2
      16: iload_3
      17: iload         4
      19: invokestatic  #40                 // Method afillArray:(Ljava/nio/ByteBuffer;IIBI)V
      22: return
      23: iload_1
      24: iload         4
      26: imul
      27: istore        5
      29: iload_2
      30: iload         4
      32: imul
      33: istore        6
      35: iload         5
      37: istore        7
      39: iload         7
      41: iload         6
      43: if_icmpge     60
      46: aload_0
      47: iload         7
      49: iload_3
      50: invokevirtual #5                  // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      53: pop
      54: iinc          7, 1
      57: goto          39
      60: return

  private static final void acopyArray(java.nio.ByteBuffer, int, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method java/nio/ByteBuffer.array:()[B
       4: astore        5
       6: aload_0
       7: invokevirtual #42                 // Method java/nio/ByteBuffer.arrayOffset:()I
      10: istore        6
      12: iload_1
      13: iload         4
      15: imul
      16: istore        7
      18: iload_2
      19: iload         4
      21: imul
      22: istore        8
      24: iload_3
      25: iload         4
      27: imul
      28: istore        9
      30: aload         5
      32: iload         6
      34: iload         7
      36: iadd
      37: aload         5
      39: iload         6
      41: iload         8
      43: iadd
      44: iload         9
      46: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: return

  private static final void acopyArray(java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method java/nio/ByteBuffer.array:()[B
       4: astore        6
       6: aload_2
       7: invokevirtual #41                 // Method java/nio/ByteBuffer.array:()[B
      10: astore        7
      12: aload_0
      13: invokevirtual #42                 // Method java/nio/ByteBuffer.arrayOffset:()I
      16: istore        8
      18: aload_2
      19: invokevirtual #42                 // Method java/nio/ByteBuffer.arrayOffset:()I
      22: istore        9
      24: iload_1
      25: iload         5
      27: imul
      28: istore        10
      30: iload_3
      31: iload         5
      33: imul
      34: istore        11
      36: iload         4
      38: iload         5
      40: imul
      41: istore        12
      43: aload         6
      45: iload         8
      47: iload         10
      49: iadd
      50: aload         7
      52: iload         9
      54: iload         11
      56: iadd
      57: iload         12
      59: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: return

  private static final void afillArray(java.nio.ByteBuffer, int, int, byte, int);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method java/nio/ByteBuffer.arrayOffset:()I
       4: istore        5
       6: iload_1
       7: iload         4
       9: imul
      10: istore        6
      12: iload_2
      13: iload         4
      15: imul
      16: istore        7
      18: aload_0
      19: invokevirtual #41                 // Method java/nio/ByteBuffer.array:()[B
      22: iload         6
      24: iload         5
      26: iadd
      27: iload         7
      29: iload         5
      31: iadd
      32: iload_3
      33: invokestatic  #44                 // Method java/util/Arrays.fill:([BIIB)V
      36: return

  static {};
    Code:
       0: iconst_1
       1: putstatic     #34                 // Field allowArray:Z
       4: return
}
