Compiled from "Alg.java"
public class org.apache.jena.atlas.lib.Alg {
  public org.apache.jena.atlas.lib.Alg();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static int linearSearch(java.nio.IntBuffer, int);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: invokevirtual #2                  // Method java/nio/IntBuffer.limit:()I
       6: iload_1
       7: invokestatic  #3                  // Method linearSearch:(Ljava/nio/IntBuffer;III)I
      10: ireturn

  static int linearSearch(java.nio.IntBuffer, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/nio/IntBuffer.limit:()I
       4: istore        4
       6: iload         4
       8: iload_1
       9: iload_2
      10: invokestatic  #4                  // Method check:(III)V
      13: iload_1
      14: istore        5
      16: iload         5
      18: iload_2
      19: if_icmpge     57
      22: aload_0
      23: iload         5
      25: invokevirtual #5                  // Method java/nio/IntBuffer.get:(I)I
      28: istore        6
      30: iload         6
      32: iload_3
      33: if_icmpne     39
      36: iload         5
      38: ireturn
      39: iload         6
      41: iload_3
      42: if_icmple     51
      45: iload         5
      47: invokestatic  #6                  // Method encodeIndex:(I)I
      50: ireturn
      51: iinc          5, 1
      54: goto          16
      57: iload_2
      58: invokestatic  #6                  // Method encodeIndex:(I)I
      61: ireturn

  public static final int encodeIndex(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: ineg
       4: ireturn

  public static final int decodeIndex(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: ineg
       4: ireturn

  public static int binarySearch(java.nio.IntBuffer, int);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: invokevirtual #2                  // Method java/nio/IntBuffer.limit:()I
       6: iload_1
       7: invokestatic  #7                  // Method binarySearch:(Ljava/nio/IntBuffer;III)I
      10: ireturn

  public static int binarySearch(java.nio.IntBuffer, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/nio/IntBuffer.limit:()I
       4: iload_1
       5: iload_2
       6: invokestatic  #4                  // Method check:(III)V
       9: iinc          2, -1
      12: iload_1
      13: iload_2
      14: if_icmpgt     66
      17: iload_1
      18: iload_2
      19: iadd
      20: iconst_1
      21: iushr
      22: istore        4
      24: aload_0
      25: iload         4
      27: invokevirtual #5                  // Method java/nio/IntBuffer.get:(I)I
      30: istore        5
      32: iload         5
      34: iload_3
      35: if_icmpge     46
      38: iload         4
      40: iconst_1
      41: iadd
      42: istore_1
      43: goto          63
      46: iload         5
      48: iload_3
      49: if_icmple     60
      52: iload         4
      54: iconst_1
      55: isub
      56: istore_2
      57: goto          63
      60: iload         4
      62: ireturn
      63: goto          12
      66: iload_1
      67: invokestatic  #6                  // Method encodeIndex:(I)I
      70: ireturn

  private static void check(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmple     46
       5: new           #8                  // class java/lang/IllegalArgumentException
       8: dup
       9: new           #9                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #11                 // String Low index (
      18: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_1
      22: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #14                 // String ) is not less than high index (
      27: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_2
      31: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #15                 // String )
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: iload_1
      47: ifge          77
      50: new           #18                 // class java/lang/ArrayIndexOutOfBoundsException
      53: dup
      54: new           #9                  // class java/lang/StringBuilder
      57: dup
      58: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #19                 // String Low index is negative:
      63: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: iload_1
      67: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #20                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: iload_2
      78: iload_0
      79: if_icmple     109
      82: new           #18                 // class java/lang/ArrayIndexOutOfBoundsException
      85: dup
      86: new           #9                  // class java/lang/StringBuilder
      89: dup
      90: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #21                 // String High index is too large:
      95: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: iload_2
      99: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     102: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #20                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: return

  public static <T> int binarySearch(java.util.List<T>, int, int, T, java.util.Comparator<T>);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod java/util/List.size:()I
       6: iload_1
       7: iload_2
       8: invokestatic  #4                  // Method check:(III)V
      11: iinc          2, -1
      14: iload_1
      15: iload_2
      16: if_icmpgt     80
      19: iload_1
      20: iload_2
      21: iadd
      22: iconst_1
      23: iushr
      24: istore        5
      26: aload_0
      27: iload         5
      29: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: astore        6
      36: aload         4
      38: aload         6
      40: aload_3
      41: invokeinterface #24,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      46: istore        7
      48: iload         7
      50: ifge          61
      53: iload         5
      55: iconst_1
      56: iadd
      57: istore_1
      58: goto          77
      61: iload         7
      63: ifle          74
      66: iload         5
      68: iconst_1
      69: isub
      70: istore_2
      71: goto          77
      74: iload         5
      76: ireturn
      77: goto          14
      80: iload_1
      81: invokestatic  #6                  // Method encodeIndex:(I)I
      84: ireturn

  public static <T extends java.lang.Comparable<? super T>> int binarySearch(T[], int, int, T);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: iload_2
       4: invokestatic  #4                  // Method check:(III)V
       7: iinc          2, -1
      10: iload_1
      11: iload_2
      12: if_icmpgt     70
      15: iload_1
      16: iload_2
      17: iadd
      18: iconst_1
      19: iushr
      20: istore        4
      22: aload_0
      23: iload         4
      25: aaload
      26: astore        5
      28: aload         5
      30: aload_3
      31: invokeinterface #25,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      36: istore        6
      38: iload         6
      40: ifge          51
      43: iload         4
      45: iconst_1
      46: iadd
      47: istore_1
      48: goto          67
      51: iload         6
      53: ifle          64
      56: iload         4
      58: iconst_1
      59: isub
      60: istore_2
      61: goto          67
      64: iload         4
      66: ireturn
      67: goto          10
      70: iload_1
      71: invokestatic  #6                  // Method encodeIndex:(I)I
      74: ireturn
}
