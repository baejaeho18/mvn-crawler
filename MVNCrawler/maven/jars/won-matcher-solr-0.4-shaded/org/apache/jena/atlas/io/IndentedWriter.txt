Compiled from "IndentedWriter.java"
public class org.apache.jena.atlas.io.IndentedWriter extends org.apache.jena.atlas.io.AWriterBase implements org.apache.jena.atlas.io.AWriter,org.apache.jena.atlas.lib.Closeable {
  public static final org.apache.jena.atlas.io.IndentedWriter stdout;

  public static final org.apache.jena.atlas.io.IndentedWriter stderr;

  protected java.io.Writer out;

  protected static final int INDENT;

  protected int unitIndent;

  private char padChar;

  private java.lang.String padString;

  private java.lang.String linePrefix;

  protected boolean lineNumbers;

  protected boolean flatMode;

  private boolean flushOnNewline;

  protected boolean startingNewLine;

  private java.lang.String endOfLineMarker;

  protected int currentIndent;

  protected int column;

  protected int row;

  private char lastChar;

  private int widthLineNumber;

  public org.apache.jena.atlas.io.IndentedWriter(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/io/OutputStream;Z)V
       6: return

  public org.apache.jena.atlas.io.IndentedWriter(java.io.OutputStream, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method makeWriter:(Ljava/io/OutputStream;)Ljava/io/Writer;
       5: iload_2
       6: invokespecial #3                  // Method "<init>":(Ljava/io/Writer;Z)V
       9: return

  public org.apache.jena.atlas.io.IndentedWriter clone(org.apache.jena.atlas.io.IndentedWriter);
    Code:
       0: new           #4                  // class org/apache/jena/atlas/io/IndentedWriter
       3: dup
       4: aload_1
       5: getfield      #5                  // Field out:Ljava/io/Writer;
       8: invokespecial #6                  // Method "<init>":(Ljava/io/Writer;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: getfield      #7                  // Field unitIndent:I
      17: putfield      #7                  // Field unitIndent:I
      20: aload_2
      21: aload_1
      22: getfield      #8                  // Field padChar:C
      25: putfield      #8                  // Field padChar:C
      28: aload_2
      29: aload_1
      30: getfield      #9                  // Field padString:Ljava/lang/String;
      33: putfield      #9                  // Field padString:Ljava/lang/String;
      36: aload_2
      37: aload_1
      38: getfield      #10                 // Field linePrefix:Ljava/lang/String;
      41: putfield      #10                 // Field linePrefix:Ljava/lang/String;
      44: aload_2
      45: aload_1
      46: getfield      #11                 // Field lineNumbers:Z
      49: putfield      #11                 // Field lineNumbers:Z
      52: aload_2
      53: aload_1
      54: getfield      #12                 // Field flatMode:Z
      57: putfield      #12                 // Field flatMode:Z
      60: aload_2
      61: aload_1
      62: getfield      #13                 // Field flushOnNewline:Z
      65: putfield      #13                 // Field flushOnNewline:Z
      68: aload_2
      69: areturn

  private static java.io.Writer makeWriter(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method org/apache/jena/atlas/io/IO.asBufferedUTF8:(Ljava/io/OutputStream;)Ljava/io/Writer;
       4: areturn

  protected org.apache.jena.atlas.io.IndentedWriter(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #3                  // Method "<init>":(Ljava/io/Writer;Z)V
       6: return

  protected org.apache.jena.atlas.io.IndentedWriter(java.io.Writer, boolean);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/apache/jena/atlas/io/AWriterBase."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #5                  // Field out:Ljava/io/Writer;
       9: aload_0
      10: iconst_2
      11: putfield      #7                  // Field unitIndent:I
      14: aload_0
      15: bipush        32
      17: putfield      #8                  // Field padChar:C
      20: aload_0
      21: aconst_null
      22: putfield      #9                  // Field padString:Ljava/lang/String;
      25: aload_0
      26: aconst_null
      27: putfield      #10                 // Field linePrefix:Ljava/lang/String;
      30: aload_0
      31: iconst_0
      32: putfield      #11                 // Field lineNumbers:Z
      35: aload_0
      36: iconst_0
      37: putfield      #12                 // Field flatMode:Z
      40: aload_0
      41: iconst_0
      42: putfield      #13                 // Field flushOnNewline:Z
      45: aload_0
      46: iconst_1
      47: putfield      #16                 // Field startingNewLine:Z
      50: aload_0
      51: aconst_null
      52: putfield      #17                 // Field endOfLineMarker:Ljava/lang/String;
      55: aload_0
      56: iconst_0
      57: putfield      #18                 // Field currentIndent:I
      60: aload_0
      61: iconst_0
      62: putfield      #19                 // Field column:I
      65: aload_0
      66: iconst_1
      67: putfield      #20                 // Field row:I
      70: aload_0
      71: iconst_0
      72: putfield      #21                 // Field lastChar:C
      75: aload_0
      76: iconst_3
      77: putfield      #22                 // Field widthLineNumber:I
      80: aload_0
      81: aload_1
      82: putfield      #5                  // Field out:Ljava/io/Writer;
      85: aload_0
      86: iload_2
      87: putfield      #11                 // Field lineNumbers:Z
      90: aload_0
      91: iconst_1
      92: putfield      #16                 // Field startingNewLine:Z
      95: return

  public void print(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #23                 // String null
       6: astore_1
       7: iconst_0
       8: istore_2
       9: iload_2
      10: aload_1
      11: invokevirtual #24                 // Method java/lang/String.length:()I
      14: if_icmpge     32
      17: aload_0
      18: aload_1
      19: iload_2
      20: invokevirtual #25                 // Method java/lang/String.charAt:(I)C
      23: invokespecial #26                 // Method printOneChar:(C)V
      26: iinc          2, 1
      29: goto          9
      32: return

  public void printf(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       6: invokevirtual #28                 // Method print:(Ljava/lang/String;)V
       9: return

  public void print(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #26                 // Method printOneChar:(C)V
       5: return

  public void println(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method print:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #29                 // Method newline:()V
       9: return

  public void println(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #30                 // Method print:(C)V
       5: aload_0
       6: invokevirtual #29                 // Method newline:()V
       9: return

  public void println();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method newline:()V
       4: return

  public void print(char[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: caload
      18: istore        5
      20: aload_0
      21: iload         5
      23: invokespecial #26                 // Method printOneChar:(C)V
      26: iinc          4, 1
      29: goto          8
      32: return

  public void print(java.lang.String, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     18
       7: aload_0
       8: aload_1
       9: invokevirtual #28                 // Method print:(Ljava/lang/String;)V
      12: iinc          3, 1
      15: goto          2
      18: return

  public void print(char, int);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method lineStart:()V
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_2
       8: if_icmpge     22
      11: aload_0
      12: iload_1
      13: invokespecial #26                 // Method printOneChar:(C)V
      16: iinc          3, 1
      19: goto          6
      22: return

  private void printOneChar(char);
    Code:
       0: iload_1
       1: bipush        10
       3: if_icmpne     21
       6: aload_0
       7: getfield      #21                 // Field lastChar:C
      10: bipush        13
      12: if_icmpne     21
      15: aload_0
      16: iload_1
      17: putfield      #21                 // Field lastChar:C
      20: return
      21: aload_0
      22: invokespecial #31                 // Method lineStart:()V
      25: aload_0
      26: iload_1
      27: putfield      #21                 // Field lastChar:C
      30: iload_1
      31: bipush        10
      33: if_icmpeq     42
      36: iload_1
      37: bipush        13
      39: if_icmpne     47
      42: aload_0
      43: invokevirtual #29                 // Method newline:()V
      46: return
      47: aload_0
      48: iload_1
      49: invokespecial #32                 // Method write$:(C)V
      52: aload_0
      53: dup
      54: getfield      #19                 // Field column:I
      57: iconst_1
      58: iadd
      59: putfield      #19                 // Field column:I
      62: return

  private void write$(char);
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/Writer;
       4: iload_1
       5: invokevirtual #33                 // Method java/io/Writer.write:(I)V
       8: goto          16
      11: astore_2
      12: aload_2
      13: invokestatic  #35                 // Method org/apache/jena/atlas/io/IO.exception:(Ljava/io/IOException;)V
      16: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  private void write$(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/Writer;
       4: aload_1
       5: invokevirtual #36                 // Method java/io/Writer.write:(Ljava/lang/String;)V
       8: goto          16
      11: astore_2
      12: aload_2
      13: invokestatic  #35                 // Method org/apache/jena/atlas/io/IO.exception:(Ljava/io/IOException;)V
      16: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  public void newline();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method lineStart:()V
       4: aload_0
       5: getfield      #17                 // Field endOfLineMarker:Ljava/lang/String;
       8: ifnull        19
      11: aload_0
      12: aload_0
      13: getfield      #17                 // Field endOfLineMarker:Ljava/lang/String;
      16: invokevirtual #28                 // Method print:(Ljava/lang/String;)V
      19: aload_0
      20: getfield      #12                 // Field flatMode:Z
      23: ifne          32
      26: aload_0
      27: bipush        10
      29: invokespecial #32                 // Method write$:(C)V
      32: aload_0
      33: iconst_1
      34: putfield      #16                 // Field startingNewLine:Z
      37: aload_0
      38: dup
      39: getfield      #20                 // Field row:I
      42: iconst_1
      43: iadd
      44: putfield      #20                 // Field row:I
      47: aload_0
      48: iconst_0
      49: putfield      #19                 // Field column:I
      52: aload_0
      53: getfield      #13                 // Field flushOnNewline:Z
      56: ifeq          63
      59: aload_0
      60: invokevirtual #37                 // Method flush:()V
      63: return

  private boolean atStartOfLine();
    Code:
       0: aload_0
       1: getfield      #19                 // Field column:I
       4: aload_0
       5: getfield      #18                 // Field currentIndent:I
       8: if_icmpgt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void ensureStartOfLine();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method atStartOfLine:()Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #29                 // Method newline:()V
      11: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/Writer;
       4: invokestatic  #39                 // Method org/apache/jena/atlas/io/IO.close:(Ljava/io/Closeable;)V
       7: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/Writer;
       4: invokestatic  #40                 // Method org/apache/jena/atlas/io/IO.flush:(Ljava/io/Writer;)V
       7: return

  public void pad();
    Code:
       0: aload_0
       1: getfield      #16                 // Field startingNewLine:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #18                 // Field currentIndent:I
      11: ifle          18
      14: aload_0
      15: invokespecial #31                 // Method lineStart:()V
      18: aload_0
      19: invokespecial #41                 // Method padInternal:()V
      22: return

  public void pad(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #42                 // Method pad:(IZ)V
       6: return

  public void pad(int, boolean);
    Code:
       0: iload_2
       1: ifne          11
       4: iload_1
       5: aload_0
       6: getfield      #18                 // Field currentIndent:I
       9: iadd
      10: istore_1
      11: iload_1
      12: aload_0
      13: getfield      #19                 // Field column:I
      16: isub
      17: istore_3
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     49
      27: aload_0
      28: bipush        32
      30: invokespecial #32                 // Method write$:(C)V
      33: aload_0
      34: dup
      35: getfield      #19                 // Field column:I
      38: iconst_1
      39: iadd
      40: putfield      #19                 // Field column:I
      43: iinc          4, 1
      46: goto          21
      49: return

  private void padInternal();
    Code:
       0: aload_0
       1: getfield      #9                  // Field padString:Ljava/lang/String;
       4: ifnonnull     47
       7: aload_0
       8: getfield      #19                 // Field column:I
      11: istore_1
      12: iload_1
      13: aload_0
      14: getfield      #18                 // Field currentIndent:I
      17: if_icmpge     44
      20: aload_0
      21: aload_0
      22: getfield      #8                  // Field padChar:C
      25: invokespecial #32                 // Method write$:(C)V
      28: aload_0
      29: dup
      30: getfield      #19                 // Field column:I
      33: iconst_1
      34: iadd
      35: putfield      #19                 // Field column:I
      38: iinc          1, 1
      41: goto          12
      44: goto          97
      47: aload_0
      48: getfield      #19                 // Field column:I
      51: istore_1
      52: iload_1
      53: aload_0
      54: getfield      #18                 // Field currentIndent:I
      57: if_icmpge     97
      60: aload_0
      61: aload_0
      62: getfield      #9                  // Field padString:Ljava/lang/String;
      65: invokespecial #43                 // Method write$:(Ljava/lang/String;)V
      68: aload_0
      69: dup
      70: getfield      #19                 // Field column:I
      73: aload_0
      74: getfield      #9                  // Field padString:Ljava/lang/String;
      77: invokevirtual #24                 // Method java/lang/String.length:()I
      80: iadd
      81: putfield      #19                 // Field column:I
      84: iload_1
      85: aload_0
      86: getfield      #9                  // Field padString:Ljava/lang/String;
      89: invokevirtual #24                 // Method java/lang/String.length:()I
      92: iadd
      93: istore_1
      94: goto          52
      97: return

  public int getRow();
    Code:
       0: aload_0
       1: getfield      #20                 // Field row:I
       4: ireturn

  public int getCol();
    Code:
       0: aload_0
       1: getfield      #18                 // Field currentIndent:I
       4: aload_0
       5: getfield      #19                 // Field column:I
       8: if_icmple     16
      11: aload_0
      12: getfield      #18                 // Field currentIndent:I
      15: ireturn
      16: aload_0
      17: getfield      #19                 // Field column:I
      20: ireturn

  public int getAbsoluteIndent();
    Code:
       0: aload_0
       1: getfield      #18                 // Field currentIndent:I
       4: ireturn

  public void setAbsoluteIndent(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field currentIndent:I
       5: return

  public int getCurrentOffset();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getCol:()I
       4: aload_0
       5: invokevirtual #45                 // Method getAbsoluteIndent:()I
       8: isub
       9: istore_1
      10: iload_1
      11: iflt          16
      14: iload_1
      15: ireturn
      16: iconst_0
      17: ireturn

  public boolean hasLineNumbers();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lineNumbers:Z
       4: ireturn

  public void setLineNumbers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field lineNumbers:Z
       5: return

  public java.lang.String getEndOfLineMarker();
    Code:
       0: aload_0
       1: getfield      #17                 // Field endOfLineMarker:Ljava/lang/String;
       4: areturn

  public void setEndOfLineMarker(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field endOfLineMarker:Ljava/lang/String;
       5: return

  public boolean inFlatMode();
    Code:
       0: aload_0
       1: getfield      #12                 // Field flatMode:Z
       4: ireturn

  public void setFlatMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field flatMode:Z
       5: return

  public boolean getFlushOnNewline();
    Code:
       0: aload_0
       1: getfield      #13                 // Field flushOnNewline:Z
       4: ireturn

  public void setFlushOnNewline(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field flushOnNewline:Z
       5: return

  public char getPadChar();
    Code:
       0: aload_0
       1: getfield      #8                  // Field padChar:C
       4: ireturn

  public void setPadChar(char);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field padChar:C
       5: return

  public java.lang.String getPadString();
    Code:
       0: aload_0
       1: getfield      #9                  // Field padString:Ljava/lang/String;
       4: areturn

  public void setPadString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field padString:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokevirtual #24                 // Method java/lang/String.length:()I
      10: putfield      #7                  // Field unitIndent:I
      13: return

  public java.lang.String getLinePrefix();
    Code:
       0: aload_0
       1: getfield      #10                 // Field linePrefix:Ljava/lang/String;
       4: areturn

  public void setLinePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field linePrefix:Ljava/lang/String;
       5: return

  public void incIndent();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field unitIndent:I
       5: invokevirtual #46                 // Method incIndent:(I)V
       8: return

  public void incIndent(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #18                 // Field currentIndent:I
       5: iload_1
       6: iadd
       7: putfield      #18                 // Field currentIndent:I
      10: return

  public void decIndent();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field unitIndent:I
       5: invokevirtual #47                 // Method decIndent:(I)V
       8: return

  public void decIndent(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #18                 // Field currentIndent:I
       5: iload_1
       6: isub
       7: putfield      #18                 // Field currentIndent:I
      10: return

  public void setUnitIndent(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field unitIndent:I
       5: return

  public int getUnitIndent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field unitIndent:I
       4: ireturn

  public boolean atLineStart();
    Code:
       0: aload_0
       1: getfield      #16                 // Field startingNewLine:Z
       4: ireturn

  private void lineStart();
    Code:
       0: aload_0
       1: getfield      #12                 // Field flatMode:Z
       4: ifeq          34
       7: aload_0
       8: getfield      #16                 // Field startingNewLine:Z
      11: ifeq          28
      14: aload_0
      15: getfield      #20                 // Field row:I
      18: iconst_1
      19: if_icmple     28
      22: aload_0
      23: bipush        32
      25: invokespecial #32                 // Method write$:(C)V
      28: aload_0
      29: iconst_0
      30: putfield      #16                 // Field startingNewLine:Z
      33: return
      34: aload_0
      35: getfield      #16                 // Field startingNewLine:Z
      38: ifeq          60
      41: aload_0
      42: getfield      #10                 // Field linePrefix:Ljava/lang/String;
      45: ifnull        56
      48: aload_0
      49: aload_0
      50: getfield      #10                 // Field linePrefix:Ljava/lang/String;
      53: invokespecial #43                 // Method write$:(Ljava/lang/String;)V
      56: aload_0
      57: invokespecial #48                 // Method insertLineNumber:()V
      60: aload_0
      61: invokespecial #41                 // Method padInternal:()V
      64: aload_0
      65: iconst_0
      66: putfield      #16                 // Field startingNewLine:Z
      69: return

  public int getNumberWidth();
    Code:
       0: aload_0
       1: getfield      #22                 // Field widthLineNumber:I
       4: ireturn

  public void setNumberWidth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field widthLineNumber:I
       5: return

  private void insertLineNumber();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lineNumbers:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #20                 // Field row:I
      12: invokestatic  #49                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      15: astore_1
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_0
      20: getfield      #22                 // Field widthLineNumber:I
      23: aload_1
      24: invokevirtual #24                 // Method java/lang/String.length:()I
      27: isub
      28: if_icmpge     43
      31: aload_0
      32: bipush        32
      34: invokespecial #32                 // Method write$:(C)V
      37: iinc          2, 1
      40: goto          18
      43: aload_0
      44: aload_1
      45: invokespecial #43                 // Method write$:(Ljava/lang/String;)V
      48: aload_0
      49: bipush        32
      51: invokespecial #32                 // Method write$:(C)V
      54: return

  public java.lang.String toString();
    Code:
       0: ldc           #50                 // String Indent = %d : [%d, %d]
       2: iconst_3
       3: anewarray     #51                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #18                 // Field currentIndent:I
      12: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #20                 // Field row:I
      22: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_0
      29: getfield      #19                 // Field column:I
      32: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aastore
      36: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: areturn

  static {};
    Code:
       0: new           #4                  // class org/apache/jena/atlas/io/IndentedWriter
       3: dup
       4: getstatic     #53                 // Field java/lang/System.out:Ljava/io/PrintStream;
       7: invokespecial #54                 // Method "<init>":(Ljava/io/OutputStream;)V
      10: putstatic     #55                 // Field stdout:Lorg/apache/jena/atlas/io/IndentedWriter;
      13: new           #4                  // class org/apache/jena/atlas/io/IndentedWriter
      16: dup
      17: getstatic     #56                 // Field java/lang/System.err:Ljava/io/PrintStream;
      20: invokespecial #54                 // Method "<init>":(Ljava/io/OutputStream;)V
      23: putstatic     #57                 // Field stderr:Lorg/apache/jena/atlas/io/IndentedWriter;
      26: getstatic     #55                 // Field stdout:Lorg/apache/jena/atlas/io/IndentedWriter;
      29: iconst_1
      30: invokevirtual #58                 // Method setFlushOnNewline:(Z)V
      33: getstatic     #57                 // Field stderr:Lorg/apache/jena/atlas/io/IndentedWriter;
      36: iconst_1
      37: invokevirtual #58                 // Method setFlushOnNewline:(Z)V
      40: return
}
