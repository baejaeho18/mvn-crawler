Compiled from "BitsInt.java"
public final class org.apache.jena.atlas.lib.BitsInt {
  private static int IntLen;

  private org.apache.jena.atlas.lib.BitsInt();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static final int unpack(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_2
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: iload_0
      12: getstatic     #3                  // Field IntLen:I
      15: iload_2
      16: isub
      17: ishl
      18: getstatic     #3                  // Field IntLen:I
      21: iload_2
      22: isub
      23: iload_1
      24: iadd
      25: iushr
      26: ireturn

  public static final int pack(int, int, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_0
       6: iload_2
       7: iload_3
       8: invokestatic  #4                  // Method clear$:(III)I
      11: istore_0
      12: iload_0
      13: iload_1
      14: iload_2
      15: ishl
      16: ior
      17: istore_0
      18: iload_0
      19: ireturn

  public static final int unpack(java.lang.String, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #5                  // Method java/lang/String.substring:(II)Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: bipush        16
      10: invokestatic  #6                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
      13: ireturn

  public static final int set(int, int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method check:(I)V
       4: iload_0
       5: iload_1
       6: invokestatic  #8                  // Method set$:(II)I
       9: ireturn

  public static final int set(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_0
       6: iload_1
       7: iload_2
       8: invokestatic  #9                  // Method set$:(III)I
      11: ireturn

  public static final boolean test(int, boolean, int);
    Code:
       0: iload_2
       1: invokestatic  #7                  // Method check:(I)V
       4: iload_0
       5: iload_1
       6: iload_2
       7: invokestatic  #10                 // Method test$:(IZI)Z
      10: ireturn

  public static final boolean isSet(int, int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method check:(I)V
       4: iload_0
       5: iconst_1
       6: iload_1
       7: invokestatic  #10                 // Method test$:(IZI)Z
      10: ireturn

  public static final boolean test(int, int, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_0
       6: iload_1
       7: iload_2
       8: iload_3
       9: invokestatic  #11                 // Method test$:(IIII)Z
      12: ireturn

  public static final int access(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_0
       6: iload_1
       7: iload_2
       8: invokestatic  #12                 // Method access$:(III)I
      11: ireturn

  public static final int clear(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_0
       6: iload_1
       7: iload_2
       8: invokestatic  #4                  // Method clear$:(III)I
      11: ireturn

  public static final int mask(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_0
       6: iload_1
       7: invokestatic  #13                 // Method mask$:(II)I
      10: ireturn

  public static final int maskZero(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #2                  // Method check:(II)V
       5: iload_0
       6: iload_1
       7: invokestatic  #14                 // Method maskZero$:(II)I
      10: ireturn

  private static final int clear$(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #14                 // Method maskZero$:(II)I
       5: istore_3
       6: iload_0
       7: iload_3
       8: iand
       9: istore_0
      10: iload_0
      11: ireturn

  private static final int set$(int, int);
    Code:
       0: iload_1
       1: invokestatic  #15                 // Method mask$:(I)I
       4: istore_2
       5: iload_0
       6: iload_2
       7: ior
       8: ireturn

  private static final int set$(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #13                 // Method mask$:(II)I
       5: istore_3
       6: iload_0
       7: iload_3
       8: ior
       9: ireturn

  private static boolean test$(int, boolean, int);
    Code:
       0: iload_1
       1: iload_0
       2: iload_2
       3: invokestatic  #16                 // Method access$:(II)Z
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static boolean test$(int, int, int, int);
    Code:
       0: iload_0
       1: iload_2
       2: iload_3
       3: invokestatic  #12                 // Method access$:(III)I
       6: istore        4
       8: iload         4
      10: iload_1
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static final boolean access$(int, int);
    Code:
       0: iload_1
       1: invokestatic  #15                 // Method mask$:(I)I
       4: istore_2
       5: iload_0
       6: iload_2
       7: iand
       8: i2l
       9: lconst_0
      10: lcmp
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static final int access$(int, int, int);
    Code:
       0: iload_0
       1: getstatic     #3                  // Field IntLen:I
       4: iload_2
       5: isub
       6: ishl
       7: getstatic     #3                  // Field IntLen:I
      10: iload_2
      11: isub
      12: iload_1
      13: iadd
      14: iushr
      15: iload_1
      16: ishl
      17: ireturn

  private static final int mask$(int);
    Code:
       0: iconst_1
       1: iload_0
       2: ishl
       3: ireturn

  private static final int mask$(int, int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iconst_m1
       7: istore_2
       8: iload_2
       9: getstatic     #3                  // Field IntLen:I
      12: iload_1
      13: isub
      14: ishl
      15: getstatic     #3                  // Field IntLen:I
      18: iload_1
      19: isub
      20: iload_0
      21: iadd
      22: iushr
      23: iload_0
      24: ishl
      25: ireturn

  private static final int maskZero$(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #13                 // Method mask$:(II)I
       5: iconst_m1
       6: ixor
       7: ireturn

  private static final void check(int);
    Code:
       0: iload_0
       1: iflt          11
       4: iload_0
       5: getstatic     #3                  // Field IntLen:I
       8: if_icmplt     38
      11: new           #17                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #18                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #20                 // String Illegal bit index:
      24: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_0
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: return

  private static final void check(int, int);
    Code:
       0: iload_0
       1: iflt          11
       4: iload_0
       5: getstatic     #3                  // Field IntLen:I
       8: if_icmplt     38
      11: new           #17                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #18                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #25                 // String Illegal start:
      24: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_0
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload_1
      39: iflt          49
      42: iload_1
      43: getstatic     #3                  // Field IntLen:I
      46: if_icmple     76
      49: new           #17                 // class java/lang/IllegalArgumentException
      52: dup
      53: new           #18                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #26                 // String Illegal finish:
      62: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: iload_1
      66: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: iload_0
      77: iload_1
      78: if_icmple     122
      81: new           #17                 // class java/lang/IllegalArgumentException
      84: dup
      85: new           #18                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #27                 // String Illegal range: (
      94: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: iload_0
      98: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     101: ldc           #28                 // String ,
     103: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: iload_1
     107: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     110: ldc           #29                 // String )
     112: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: return

  static {};
    Code:
       0: bipush        32
       2: putstatic     #3                  // Field IntLen:I
       5: return
}
