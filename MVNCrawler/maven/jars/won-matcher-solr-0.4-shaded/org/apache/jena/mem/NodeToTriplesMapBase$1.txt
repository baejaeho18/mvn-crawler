Compiled from "NodeToTriplesMapBase.java"
class org.apache.jena.mem.NodeToTriplesMapBase$1 extends org.apache.jena.util.iterator.NiceIterator<org.apache.jena.graph.Triple> {
  private java.util.Iterator<org.apache.jena.graph.Triple> current;

  private org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe emptier;

  final java.util.Iterator val$nodes;

  final org.apache.jena.mem.NodeToTriplesMapBase this$0;

  org.apache.jena.mem.NodeToTriplesMapBase$1(org.apache.jena.mem.NodeToTriplesMapBase, java.util.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/jena/mem/NodeToTriplesMapBase;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$nodes:Ljava/util/Iterator;
      10: aload_0
      11: invokespecial #3                  // Method org/apache/jena/util/iterator/NiceIterator."<init>":()V
      14: aload_0
      15: invokestatic  #4                  // Method org/apache/jena/util/iterator/NullIterator.instance:()Lorg/apache/jena/util/iterator/NullIterator;
      18: putfield      #5                  // Field current:Ljava/util/Iterator;
      21: aload_0
      22: new           #6                  // class org/apache/jena/mem/NodeToTriplesMapBase$1$NotifyMe
      25: dup
      26: aload_0
      27: invokespecial #7                  // Method org/apache/jena/mem/NodeToTriplesMapBase$1$NotifyMe."<init>":(Lorg/apache/jena/mem/NodeToTriplesMapBase$1;)V
      30: putfield      #8                  // Field emptier:Lorg/apache/jena/mem/NodeToTriplesMapBase$1$NotifyMe;
      33: return

  public org.apache.jena.graph.Triple next();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method hasNext:()Z
       4: ifne          14
       7: aload_0
       8: ldc           #10                 // String NodeToTriples iterator
      10: invokevirtual #11                 // Method noElements:(Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #5                  // Field current:Ljava/util/Iterator;
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #13                 // class org/apache/jena/graph/Triple
      26: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Ljava/util/Iterator;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #2                  // Field val$nodes:Ljava/util/Iterator;
      18: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: getfield      #2                  // Field val$nodes:Ljava/util/Iterator;
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: astore_1
      38: aload_0
      39: aload_0
      40: getfield      #1                  // Field this$0:Lorg/apache/jena/mem/NodeToTriplesMapBase;
      43: aload_1
      44: aload_0
      45: getfield      #8                  // Field emptier:Lorg/apache/jena/mem/NodeToTriplesMapBase$1$NotifyMe;
      48: invokevirtual #15                 // Method org/apache/jena/mem/NodeToTriplesMapBase.iterator:(Ljava/lang/Object;Lorg/apache/jena/mem/HashCommon$NotifyEmpty;)Ljava/util/Iterator;
      51: putfield      #5                  // Field current:Ljava/util/Iterator;
      54: goto          0

  public void remove();
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Ljava/util/Iterator;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.remove:()V
       9: return

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method next:()Lorg/apache/jena/graph/Triple;
       4: areturn
}
