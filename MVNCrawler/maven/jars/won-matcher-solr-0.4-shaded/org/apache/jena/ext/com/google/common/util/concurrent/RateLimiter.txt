Compiled from "RateLimiter.java"
public abstract class org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter {
  private final org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch stopwatch;

  private volatile java.lang.Object mutexDoNotUseDirectly;

  public static org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter create(double);
    Code:
       0: invokestatic  #29                 // Method org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch.createFromSystemTimer:()Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
       3: dload_0
       4: invokestatic  #32                 // Method create:(Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;D)Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter;
       7: areturn

  static org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter create(org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch, double);
    Code:
       0: new           #13                 // class org/apache/jena/ext/com/google/common/util/concurrent/SmoothRateLimiter$SmoothBursty
       3: dup
       4: aload_0
       5: dconst_1
       6: invokespecial #39                 // Method org/apache/jena/ext/com/google/common/util/concurrent/SmoothRateLimiter$SmoothBursty."<init>":(Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;D)V
       9: astore_3
      10: aload_3
      11: dload_1
      12: invokevirtual #43                 // Method setRate:(D)V
      15: aload_3
      16: areturn

  public static org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter create(double, long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #48                 // String warmupPeriod must not be negative: %s
      13: lload_2
      14: invokestatic  #54                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;J)V
      17: invokestatic  #29                 // Method org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch.createFromSystemTimer:()Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
      20: dload_0
      21: lload_2
      22: aload         4
      24: ldc2_w        #55                 // double 3.0d
      27: invokestatic  #59                 // Method create:(Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;DJLjava/util/concurrent/TimeUnit;D)Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter;
      30: areturn

  static org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter create(org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch, double, long, java.util.concurrent.TimeUnit, double);
    Code:
       0: new           #18                 // class org/apache/jena/ext/com/google/common/util/concurrent/SmoothRateLimiter$SmoothWarmingUp
       3: dup
       4: aload_0
       5: lload_3
       6: aload         5
       8: dload         6
      10: invokespecial #66                 // Method org/apache/jena/ext/com/google/common/util/concurrent/SmoothRateLimiter$SmoothWarmingUp."<init>":(Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;JLjava/util/concurrent/TimeUnit;D)V
      13: astore        8
      15: aload         8
      17: dload_1
      18: invokevirtual #43                 // Method setRate:(D)V
      21: aload         8
      23: areturn

  private java.lang.Object mutex();
    Code:
       0: aload_0
       1: getfield      #71                 // Field mutexDoNotUseDirectly:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnonnull     45
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #71                 // Field mutexDoNotUseDirectly:Ljava/lang/Object;
      17: astore_1
      18: aload_1
      19: ifnonnull     35
      22: aload_0
      23: new           #4                  // class java/lang/Object
      26: dup
      27: invokespecial #74                 // Method java/lang/Object."<init>":()V
      30: dup
      31: astore_1
      32: putfield      #71                 // Field mutexDoNotUseDirectly:Ljava/lang/Object;
      35: aload_2
      36: monitorexit
      37: goto          45
      40: astore_3
      41: aload_2
      42: monitorexit
      43: aload_3
      44: athrow
      45: aload_1
      46: areturn
    Exception table:
       from    to  target type
          13    37    40   any
          40    43    40   any

  org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter(org.apache.jena.ext.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #82                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #10                 // class org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch
      12: putfield      #84                 // Field stopwatch:Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
      15: return

  public final void setRate(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: ifle          17
       6: dload_1
       7: invokestatic  #90                 // Method java/lang/Double.isNaN:(D)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #92                 // String rate must be positive
      20: invokestatic  #95                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      23: aload_0
      24: invokespecial #97                 // Method mutex:()Ljava/lang/Object;
      27: dup
      28: astore_3
      29: monitorenter
      30: aload_0
      31: dload_1
      32: aload_0
      33: getfield      #84                 // Field stopwatch:Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
      36: invokevirtual #101                // Method org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch.readMicros:()J
      39: invokevirtual #105                // Method doSetRate:(DJ)V
      42: aload_3
      43: monitorexit
      44: goto          54
      47: astore        4
      49: aload_3
      50: monitorexit
      51: aload         4
      53: athrow
      54: return
    Exception table:
       from    to  target type
          30    44    47   any
          47    51    47   any

  abstract void doSetRate(double, long);

  public final double getRate();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method mutex:()Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokevirtual #110                // Method doGetRate:()D
      11: aload_1
      12: monitorexit
      13: dreturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  abstract double doGetRate();

  public double acquire();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #115                // Method acquire:(I)D
       5: dreturn

  public double acquire(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #119                // Method reserve:(I)J
       5: lstore_2
       6: aload_0
       7: getfield      #84                 // Field stopwatch:Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
      10: lload_2
      11: invokevirtual #123                // Method org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch.sleepMicrosUninterruptibly:(J)V
      14: dconst_1
      15: lload_2
      16: l2d
      17: dmul
      18: getstatic     #128                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      21: lconst_1
      22: invokevirtual #132                // Method java/util/concurrent/TimeUnit.toMicros:(J)J
      25: l2d
      26: ddiv
      27: dreturn

  final long reserve(int);
    Code:
       0: iload_1
       1: invokestatic  #139                // Method checkPermits:(I)V
       4: aload_0
       5: invokespecial #97                 // Method mutex:()Ljava/lang/Object;
       8: dup
       9: astore_2
      10: monitorenter
      11: aload_0
      12: iload_1
      13: aload_0
      14: getfield      #84                 // Field stopwatch:Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
      17: invokevirtual #101                // Method org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch.readMicros:()J
      20: invokevirtual #143                // Method reserveAndGetWaitLength:(IJ)J
      23: aload_2
      24: monitorexit
      25: lreturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
          11    25    26   any
          26    29    26   any

  public boolean tryAcquire(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: iconst_1
       2: lload_1
       3: aload_3
       4: invokevirtual #148                // Method tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z
       7: ireturn

  public boolean tryAcquire(int);
    Code:
       0: aload_0
       1: iload_1
       2: lconst_0
       3: getstatic     #153                // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokevirtual #148                // Method tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public boolean tryAcquire();
    Code:
       0: aload_0
       1: iconst_1
       2: lconst_0
       3: getstatic     #153                // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokevirtual #148                // Method tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public boolean tryAcquire(int, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #132                // Method java/util/concurrent/TimeUnit.toMicros:(J)J
       6: lconst_0
       7: invokestatic  #160                // Method java/lang/Math.max:(JJ)J
      10: lstore        5
      12: iload_1
      13: invokestatic  #139                // Method checkPermits:(I)V
      16: aload_0
      17: invokespecial #97                 // Method mutex:()Ljava/lang/Object;
      20: dup
      21: astore        7
      23: monitorenter
      24: aload_0
      25: getfield      #84                 // Field stopwatch:Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
      28: invokevirtual #101                // Method org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch.readMicros:()J
      31: lstore        8
      33: aload_0
      34: lload         8
      36: lload         5
      38: invokespecial #164                // Method canAcquire:(JJ)Z
      41: ifne          49
      44: iconst_0
      45: aload         7
      47: monitorexit
      48: ireturn
      49: aload_0
      50: iload_1
      51: lload         8
      53: invokevirtual #143                // Method reserveAndGetWaitLength:(IJ)J
      56: lstore        10
      58: aload         7
      60: monitorexit
      61: goto          72
      64: astore        12
      66: aload         7
      68: monitorexit
      69: aload         12
      71: athrow
      72: aload_0
      73: getfield      #84                 // Field stopwatch:Lorg/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch;
      76: lload         10
      78: invokevirtual #123                // Method org/apache/jena/ext/com/google/common/util/concurrent/RateLimiter$SleepingStopwatch.sleepMicrosUninterruptibly:(J)V
      81: iconst_1
      82: ireturn
    Exception table:
       from    to  target type
          24    48    64   any
          49    61    64   any
          64    69    64   any

  private boolean canAcquire(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #169                // Method queryEarliestAvailable:(J)J
       5: lload_3
       6: lsub
       7: lload_1
       8: lcmp
       9: ifgt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  final long reserveAndGetWaitLength(int, long);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: invokevirtual #172                // Method reserveEarliestAvailable:(IJ)J
       6: lstore        4
       8: lload         4
      10: lload_2
      11: lsub
      12: lconst_0
      13: invokestatic  #160                // Method java/lang/Math.max:(JJ)J
      16: lreturn

  abstract long queryEarliestAvailable(long);

  abstract long reserveEarliestAvailable(int, long);

  public java.lang.String toString();
    Code:
       0: getstatic     #181                // Field java/util/Locale.ROOT:Ljava/util/Locale;
       3: ldc           #183                // String RateLimiter[stableRate=%3.1fqps]
       5: iconst_1
       6: anewarray     #4                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: invokevirtual #185                // Method getRate:()D
      15: invokestatic  #189                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      18: aastore
      19: invokestatic  #195                // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: areturn

  private static void checkPermits(int);
    Code:
       0: iload_0
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #197                // String Requested permits (%s) must be positive
      11: iload_0
      12: invokestatic  #200                // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      15: return
}
