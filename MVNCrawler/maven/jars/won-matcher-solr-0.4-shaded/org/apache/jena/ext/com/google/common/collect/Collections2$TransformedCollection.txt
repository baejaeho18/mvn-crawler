Compiled from "Collections2.java"
class org.apache.jena.ext.com.google.common.collect.Collections2$TransformedCollection<F, T> extends java.util.AbstractCollection<T> {
  final java.util.Collection<F> fromCollection;

  final org.apache.jena.ext.com.google.common.base.Function<? super F, ? extends T> function;

  org.apache.jena.ext.com.google.common.collect.Collections2$TransformedCollection(java.util.Collection<F>, org.apache.jena.ext.com.google.common.base.Function<? super F, ? extends T>);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/util/AbstractCollection."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #33                 // class java/util/Collection
      12: putfield      #35                 // Field fromCollection:Ljava/util/Collection;
      15: aload_0
      16: aload_2
      17: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #37                 // class org/apache/jena/ext/com/google/common/base/Function
      23: putfield      #39                 // Field function:Lorg/apache/jena/ext/com/google/common/base/Function;
      26: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #35                 // Field fromCollection:Ljava/util/Collection;
       4: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.clear:()V
       9: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field fromCollection:Ljava/util/Collection;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       9: ireturn

  public java.util.Iterator<T> iterator();
    Code:
       0: aload_0
       1: getfield      #35                 // Field fromCollection:Ljava/util/Collection;
       4: invokeinterface #53,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: aload_0
      10: getfield      #39                 // Field function:Lorg/apache/jena/ext/com/google/common/base/Function;
      13: invokestatic  #59                 // Method org/apache/jena/ext/com/google/common/collect/Iterators.transform:(Ljava/util/Iterator;Lorg/apache/jena/ext/com/google/common/base/Function;)Ljava/util/Iterator;
      16: areturn

  public java.util.Spliterator<T> spliterator();
    Code:
       0: aload_0
       1: getfield      #35                 // Field fromCollection:Ljava/util/Collection;
       4: invokeinterface #63,  1           // InterfaceMethod java/util/Collection.spliterator:()Ljava/util/Spliterator;
       9: aload_0
      10: getfield      #39                 // Field function:Lorg/apache/jena/ext/com/google/common/base/Function;
      13: invokestatic  #69                 // Method org/apache/jena/ext/com/google/common/collect/CollectSpliterators.map:(Ljava/util/Spliterator;Ljava/util/function/Function;)Ljava/util/Spliterator;
      16: areturn

  public void forEach(java.util.function.Consumer<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #35                 // Field fromCollection:Ljava/util/Collection;
       9: aload_0
      10: aload_1
      11: invokedynamic #89,  0             // InvokeDynamic #0:accept:(Lorg/apache/jena/ext/com/google/common/collect/Collections2$TransformedCollection;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      16: invokeinterface #91,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      21: return

  public boolean removeIf(java.util.function.Predicate<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #35                 // Field fromCollection:Ljava/util/Collection;
       9: aload_0
      10: aload_1
      11: invokedynamic #107,  0            // InvokeDynamic #1:test:(Lorg/apache/jena/ext/com/google/common/collect/Collections2$TransformedCollection;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      16: invokeinterface #109,  2          // InterfaceMethod java/util/Collection.removeIf:(Ljava/util/function/Predicate;)Z
      21: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #35                 // Field fromCollection:Ljava/util/Collection;
       4: invokeinterface #116,  1          // InterfaceMethod java/util/Collection.size:()I
       9: ireturn

  private boolean lambda$removeIf$1(java.util.function.Predicate, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #39                 // Field function:Lorg/apache/jena/ext/com/google/common/base/Function;
       5: aload_2
       6: invokeinterface #119,  2          // InterfaceMethod org/apache/jena/ext/com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      16: ireturn

  private void lambda$forEach$0(java.util.function.Consumer, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #39                 // Field function:Lorg/apache/jena/ext/com/google/common/base/Function;
       5: aload_2
       6: invokeinterface #119,  2          // InterfaceMethod org/apache/jena/ext/com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokeinterface #129,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      16: return
}
