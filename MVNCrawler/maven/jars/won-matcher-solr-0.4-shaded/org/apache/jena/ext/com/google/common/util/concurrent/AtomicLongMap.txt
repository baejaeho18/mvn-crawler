Compiled from "AtomicLongMap.java"
public final class org.apache.jena.ext.com.google.common.util.concurrent.AtomicLongMap<K> implements java.io.Serializable {
  private final java.util.concurrent.ConcurrentHashMap<K, java.lang.Long> map;

  private transient java.util.Map<K, java.lang.Long> asMap;

  private org.apache.jena.ext.com.google.common.util.concurrent.AtomicLongMap(java.util.concurrent.ConcurrentHashMap<K, java.lang.Long>);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #33                 // class java/util/concurrent/ConcurrentHashMap
      12: putfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      15: return

  public static <K> org.apache.jena.ext.com.google.common.util.concurrent.AtomicLongMap<K> create();
    Code:
       0: new           #2                  // class org/apache/jena/ext/com/google/common/util/concurrent/AtomicLongMap
       3: dup
       4: new           #33                 // class java/util/concurrent/ConcurrentHashMap
       7: dup
       8: invokespecial #41                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      11: invokespecial #43                 // Method "<init>":(Ljava/util/concurrent/ConcurrentHashMap;)V
      14: areturn

  public static <K> org.apache.jena.ext.com.google.common.util.concurrent.AtomicLongMap<K> create(java.util.Map<? extends K, ? extends java.lang.Long>);
    Code:
       0: invokestatic  #46                 // Method create:()Lorg/apache/jena/ext/com/google/common/util/concurrent/AtomicLongMap;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #50                 // Method putAll:(Ljava/util/Map;)V
       9: aload_1
      10: areturn

  public long get(K);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: lconst_0
       6: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokevirtual #65                 // Method java/util/concurrent/ConcurrentHashMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #57                 // class java/lang/Long
      15: invokevirtual #69                 // Method java/lang/Long.longValue:()J
      18: lreturn

  public long incrementAndGet(K);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_1
       3: invokevirtual #78                 // Method addAndGet:(Ljava/lang/Object;J)J
       6: lreturn

  public long decrementAndGet(K);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #80                 // long -1l
       5: invokevirtual #78                 // Method addAndGet:(Ljava/lang/Object;J)J
       8: lreturn

  public long addAndGet(K, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokedynamic #98,  0             // InvokeDynamic #0:applyAsLong:()Ljava/util/function/LongBinaryOperator;
       8: invokevirtual #102                // Method accumulateAndGet:(Ljava/lang/Object;JLjava/util/function/LongBinaryOperator;)J
      11: lreturn

  public long getAndIncrement(K);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_1
       3: invokevirtual #108                // Method getAndAdd:(Ljava/lang/Object;J)J
       6: lreturn

  public long getAndDecrement(K);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #80                 // long -1l
       5: invokevirtual #108                // Method getAndAdd:(Ljava/lang/Object;J)J
       8: lreturn

  public long getAndAdd(K, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokedynamic #98,  0             // InvokeDynamic #0:applyAsLong:()Ljava/util/function/LongBinaryOperator;
       8: invokevirtual #112                // Method getAndAccumulate:(Ljava/lang/Object;JLjava/util/function/LongBinaryOperator;)J
      11: lreturn

  public long updateAndGet(K, java.util.function.LongUnaryOperator);
    Code:
       0: aload_2
       1: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       9: aload_1
      10: aload_2
      11: invokedynamic #126,  0            // InvokeDynamic #1:apply:(Ljava/util/function/LongUnaryOperator;)Ljava/util/function/BiFunction;
      16: invokevirtual #130                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      19: checkcast     #57                 // class java/lang/Long
      22: invokevirtual #69                 // Method java/lang/Long.longValue:()J
      25: lreturn

  public long getAndUpdate(K, java.util.function.LongUnaryOperator);
    Code:
       0: aload_2
       1: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #135                // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #136                // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: astore_3
      13: aload_0
      14: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      17: aload_1
      18: aload_3
      19: aload_2
      20: invokedynamic #144,  0            // InvokeDynamic #2:apply:(Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/function/LongUnaryOperator;)Ljava/util/function/BiFunction;
      25: invokevirtual #130                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      28: pop
      29: aload_3
      30: invokevirtual #146                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      33: lreturn

  public long accumulateAndGet(K, long, java.util.function.LongBinaryOperator);
    Code:
       0: aload         4
       2: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: aload_1
       8: aload         4
      10: lload_2
      11: invokedynamic #158,  0            // InvokeDynamic #3:applyAsLong:(Ljava/util/function/LongBinaryOperator;J)Ljava/util/function/LongUnaryOperator;
      16: invokevirtual #160                // Method updateAndGet:(Ljava/lang/Object;Ljava/util/function/LongUnaryOperator;)J
      19: lreturn

  public long getAndAccumulate(K, long, java.util.function.LongBinaryOperator);
    Code:
       0: aload         4
       2: invokestatic  #31                 // Method org/apache/jena/ext/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: aload_1
       8: aload         4
      10: lload_2
      11: invokedynamic #168,  0            // InvokeDynamic #4:applyAsLong:(Ljava/util/function/LongBinaryOperator;J)Ljava/util/function/LongUnaryOperator;
      16: invokevirtual #170                // Method getAndUpdate:(Ljava/lang/Object;Ljava/util/function/LongUnaryOperator;)J
      19: lreturn

  public long put(K, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokedynamic #178,  0            // InvokeDynamic #5:applyAsLong:(J)Ljava/util/function/LongUnaryOperator;
       8: invokevirtual #170                // Method getAndUpdate:(Ljava/lang/Object;Ljava/util/function/LongUnaryOperator;)J
      11: lreturn

  public void putAll(java.util.Map<? extends K, ? extends java.lang.Long>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #190,  0            // InvokeDynamic #6:accept:(Lorg/apache/jena/ext/com/google/common/util/concurrent/AtomicLongMap;)Ljava/util/function/BiConsumer;
       7: invokeinterface #196,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public long remove(K);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #199                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #57                 // class java/lang/Long
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: lconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #69                 // Method java/lang/Long.longValue:()J
      24: lreturn

  public boolean removeIfZero(K);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: invokevirtual #206                // Method remove:(Ljava/lang/Object;J)Z
       6: ireturn

  public void removeAllZeros();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #211                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokedynamic #222,  0            // InvokeDynamic #7:test:()Ljava/util/function/Predicate;
      12: invokeinterface #228,  2          // InterfaceMethod java/util/Collection.removeIf:(Ljava/util/function/Predicate;)Z
      17: pop
      18: return

  public long sum();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #211                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #232,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: invokedynamic #239,  0            // InvokeDynamic #8:applyAsLong:()Ljava/util/function/ToLongFunction;
      17: invokeinterface #245,  2          // InterfaceMethod java/util/stream/Stream.mapToLong:(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;
      22: invokeinterface #249,  1          // InterfaceMethod java/util/stream/LongStream.sum:()J
      27: lreturn

  public java.util.Map<K, java.lang.Long> asMap();
    Code:
       0: aload_0
       1: getfield      #252                // Field asMap:Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: invokespecial #255                // Method createAsMap:()Ljava/util/Map;
      14: dup_x1
      15: putfield      #252                // Field asMap:Ljava/util/Map;
      18: goto          22
      21: aload_1
      22: areturn

  private java.util.Map<K, java.lang.Long> createAsMap();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokestatic  #261                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #264                // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #268                // Method java/util/concurrent/ConcurrentHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #272                // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #275                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #279                // Method java/util/concurrent/ConcurrentHashMap.toString:()Ljava/lang/String;
       7: areturn

  long putIfAbsent(K, long);
    Code:
       0: new           #282                // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #285                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore        4
      10: aload_0
      11: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      14: aload_1
      15: aload         4
      17: lload_2
      18: invokedynamic #293,  0            // InvokeDynamic #9:apply:(Ljava/util/concurrent/atomic/AtomicBoolean;J)Ljava/util/function/BiFunction;
      23: invokevirtual #130                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      26: checkcast     #57                 // class java/lang/Long
      29: astore        5
      31: aload         4
      33: invokevirtual #295                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      36: ifeq          43
      39: lconst_0
      40: goto          48
      43: aload         5
      45: invokevirtual #69                 // Method java/lang/Long.longValue:()J
      48: lreturn

  boolean replace(K, long, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifne          24
       6: aload_0
       7: aload_1
       8: lload         4
      10: invokevirtual #301                // Method putIfAbsent:(Ljava/lang/Object;J)J
      13: lconst_0
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      28: aload_1
      29: lload_2
      30: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: lload         4
      35: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: invokevirtual #304                // Method java/util/concurrent/ConcurrentHashMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ireturn

  boolean remove(K, long);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: lload_2
       6: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokevirtual #308                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  private static java.lang.Long lambda$putIfAbsent$6(java.util.concurrent.atomic.AtomicBoolean, long, java.lang.Object, java.lang.Long);
    Code:
       0: aload         4
       2: ifnull        15
       5: aload         4
       7: invokevirtual #69                 // Method java/lang/Long.longValue:()J
      10: lconst_0
      11: lcmp
      12: ifne          25
      15: aload_0
      16: iconst_1
      17: invokevirtual #312                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      20: lload_1
      21: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      24: areturn
      25: aload         4
      27: areturn

  private static boolean lambda$removeAllZeros$5(java.lang.Long);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method java/lang/Long.longValue:()J
       4: lconst_0
       5: lcmp
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static long lambda$put$4(long, long);
    Code:
       0: lload_0
       1: lreturn

  private static long lambda$getAndAccumulate$3(java.util.function.LongBinaryOperator, long, long);
    Code:
       0: aload_0
       1: lload_3
       2: lload_1
       3: invokeinterface #318,  5          // InterfaceMethod java/util/function/LongBinaryOperator.applyAsLong:(JJ)J
       8: lreturn

  private static long lambda$accumulateAndGet$2(java.util.function.LongBinaryOperator, long, long);
    Code:
       0: aload_0
       1: lload_3
       2: lload_1
       3: invokeinterface #318,  5          // InterfaceMethod java/util/function/LongBinaryOperator.applyAsLong:(JJ)J
       8: lreturn

  private static java.lang.Long lambda$getAndUpdate$1(java.util.concurrent.atomic.AtomicLong, java.util.function.LongUnaryOperator, java.lang.Object, java.lang.Long);
    Code:
       0: aload_3
       1: ifnonnull     8
       4: lconst_0
       5: goto          12
       8: aload_3
       9: invokevirtual #69                 // Method java/lang/Long.longValue:()J
      12: lstore        4
      14: aload_0
      15: lload         4
      17: invokevirtual #321                // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      20: aload_1
      21: lload         4
      23: invokeinterface #325,  3          // InterfaceMethod java/util/function/LongUnaryOperator.applyAsLong:(J)J
      28: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: areturn

  private static java.lang.Long lambda$updateAndGet$0(java.util.function.LongUnaryOperator, java.lang.Object, java.lang.Long);
    Code:
       0: aload_0
       1: aload_2
       2: ifnonnull     9
       5: lconst_0
       6: goto          13
       9: aload_2
      10: invokevirtual #69                 // Method java/lang/Long.longValue:()J
      13: invokeinterface #325,  3          // InterfaceMethod java/util/function/LongUnaryOperator.applyAsLong:(J)J
      18: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: areturn
}
