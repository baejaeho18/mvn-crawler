Compiled from "Block.java"
public final class org.apache.jena.tdb.base.block.Block {
  private final java.lang.Long id;

  private boolean readOnly;

  private boolean modified;

  private final java.nio.ByteBuffer byteBuffer;

  private java.nio.ByteBuffer underlyingByteBuffer;

  public org.apache.jena.tdb.base.block.Block(long, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: aload_3
       6: invokespecial #2                  // Method "<init>":(Ljava/lang/Long;Ljava/nio/ByteBuffer;)V
       9: return

  public org.apache.jena.tdb.base.block.Block(java.lang.Long, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field readOnly:Z
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field modified:Z
      14: aload_0
      15: aload_1
      16: putfield      #6                  // Field id:Ljava/lang/Long;
      19: aload_0
      20: aload_2
      21: putfield      #7                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      24: aload_0
      25: iconst_0
      26: putfield      #4                  // Field readOnly:Z
      29: aload_0
      30: iconst_0
      31: putfield      #5                  // Field modified:Z
      34: aload_0
      35: aconst_null
      36: putfield      #8                  // Field underlyingByteBuffer:Ljava/nio/ByteBuffer;
      39: return

  public <T extends org.apache.jena.tdb.base.page.Page> T convert(org.apache.jena.tdb.base.block.BlockConverter<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #9,  2            // InterfaceMethod org/apache/jena/tdb/base/block/BlockConverter.fromBlock:(Lorg/apache/jena/tdb/base/block/Block;)Lorg/apache/jena/tdb/base/page/Page;
       7: areturn

  public final java.lang.Long getId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field id:Ljava/lang/Long;
       4: areturn

  public final java.nio.ByteBuffer getByteBuffer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readOnly:Z
       4: ireturn

  public void setReadOnly(boolean);
    Code:
       0: iload_1
       1: ifeq          21
       4: aload_0
       5: getfield      #5                  // Field modified:Z
       8: ifeq          21
      11: new           #10                 // class org/apache/jena/tdb/base/block/BlockException
      14: dup
      15: ldc           #11                 // String Attempt to mark a modified block as read-only
      17: invokespecial #12                 // Method org/apache/jena/tdb/base/block/BlockException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #4                  // Field readOnly:Z
      26: return

  public boolean isModified();
    Code:
       0: aload_0
       1: getfield      #5                  // Field modified:Z
       4: ireturn

  public void setModified(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field readOnly:Z
       4: ifeq          21
       7: iload_1
       8: ifeq          21
      11: new           #10                 // class org/apache/jena/tdb/base/block/BlockException
      14: dup
      15: ldc           #13                 // String Attempt to mark a readonly block as modified
      17: invokespecial #12                 // Method org/apache/jena/tdb/base/block/BlockException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #5                  // Field modified:Z
      26: return

  public java.nio.ByteBuffer getUnderlyingByteBuffer();
    Code:
       0: aload_0
       1: getfield      #8                  // Field underlyingByteBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public void setUnderlyingByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field underlyingByteBuffer:Ljava/nio/ByteBuffer;
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getByteBuffer:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: ldc           #15                 // String Block: %d (posn=%d, limit=%d, cap=%d)
       7: iconst_4
       8: anewarray     #16                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #6                  // Field id:Ljava/lang/Long;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_1
      21: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
      24: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: dup
      29: iconst_2
      30: aload_1
      31: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:()I
      34: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: aastore
      38: dup
      39: iconst_3
      40: aload_1
      41: invokevirtual #20                 // Method java/nio/ByteBuffer.capacity:()I
      44: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: aastore
      48: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: areturn

  public org.apache.jena.tdb.base.block.Block replicate();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getByteBuffer:()Ljava/nio/ByteBuffer;
       4: invokevirtual #20                 // Method java/nio/ByteBuffer.capacity:()I
       7: invokestatic  #22                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokevirtual #23                 // Method replicate:(Ljava/nio/ByteBuffer;)Lorg/apache/jena/tdb/base/block/Block;
      16: areturn

  public org.apache.jena.tdb.base.block.Block replicate(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getByteBuffer:()Ljava/nio/ByteBuffer;
       4: aload_1
       5: invokestatic  #24                 // Method replicateByteBuffer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
       8: pop
       9: new           #25                 // class org/apache/jena/tdb/base/block/Block
      12: dup
      13: aload_0
      14: invokevirtual #26                 // Method getId:()Ljava/lang/Long;
      17: aload_1
      18: invokespecial #2                  // Method "<init>":(Ljava/lang/Long;Ljava/nio/ByteBuffer;)V
      21: astore_2
      22: aload_2
      23: aload_0
      24: getfield      #5                  // Field modified:Z
      27: putfield      #5                  // Field modified:Z
      30: aload_2
      31: aload_0
      32: getfield      #4                  // Field readOnly:Z
      35: putfield      #4                  // Field readOnly:Z
      38: aload_2
      39: areturn

  public static void replicate(org.apache.jena.tdb.base.block.Block, org.apache.jena.tdb.base.block.Block);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getId:()Ljava/lang/Long;
       4: aload_1
       5: invokevirtual #26                 // Method getId:()Ljava/lang/Long;
       8: invokevirtual #27                 // Method java/lang/Long.equals:(Ljava/lang/Object;)Z
      11: ifne          56
      14: new           #10                 // class org/apache/jena/tdb/base/block/BlockException
      17: dup
      18: new           #28                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #30                 // String FileAccessMem: Attempt to copy across blocks:
      27: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #26                 // Method getId:()Ljava/lang/Long;
      34: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #33                 // String  =>
      39: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #26                 // Method getId:()Ljava/lang/Long;
      46: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #12                 // Method org/apache/jena/tdb/base/block/BlockException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: invokevirtual #14                 // Method getByteBuffer:()Ljava/nio/ByteBuffer;
      60: aload_1
      61: invokevirtual #14                 // Method getByteBuffer:()Ljava/nio/ByteBuffer;
      64: invokestatic  #35                 // Method replicate:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
      67: return

  private static java.nio.ByteBuffer replicateByteBuffer(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:()I
       9: istore_3
      10: aload_0
      11: invokevirtual #36                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      14: pop
      15: aload_0
      16: invokevirtual #37                 // Method java/nio/ByteBuffer.hasArray:()Z
      19: ifeq          49
      22: aload_1
      23: invokevirtual #37                 // Method java/nio/ByteBuffer.hasArray:()Z
      26: ifeq          49
      29: aload_0
      30: invokevirtual #38                 // Method java/nio/ByteBuffer.array:()[B
      33: iconst_0
      34: aload_1
      35: invokevirtual #38                 // Method java/nio/ByteBuffer.array:()[B
      38: iconst_0
      39: aload_0
      40: invokevirtual #20                 // Method java/nio/ByteBuffer.capacity:()I
      43: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: goto          55
      49: aload_1
      50: aload_0
      51: invokevirtual #40                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      54: pop
      55: aload_0
      56: iload_2
      57: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      60: pop
      61: aload_1
      62: iload_2
      63: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      66: pop
      67: aload_0
      68: iload_3
      69: invokevirtual #42                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      72: pop
      73: aload_1
      74: iload_3
      75: invokevirtual #42                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      78: pop
      79: aload_1
      80: areturn

  private static void replicate(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       5: pop
       6: aload_1
       7: iconst_0
       8: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      11: pop
      12: aload_1
      13: aload_0
      14: invokevirtual #40                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      17: pop
      18: return
}
