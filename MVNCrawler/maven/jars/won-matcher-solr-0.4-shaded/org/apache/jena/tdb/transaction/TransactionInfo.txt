Compiled from "TransactionInfo.java"
public class org.apache.jena.tdb.transaction.TransactionInfo implements org.apache.jena.tdb.transaction.TransactionInfoMBean {
  private org.apache.jena.tdb.transaction.TransactionManager transactionManager;

  public org.apache.jena.tdb.transaction.TransactionInfo(org.apache.jena.tdb.transaction.TransactionManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field transactionManager:Lorg/apache/jena/tdb/transaction/TransactionManager;
       9: return

  public long getTransactionCount();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getReadTransactionCount:()J
       4: aload_0
       5: invokevirtual #4                  // Method getWriteTransactionCount:()J
       8: ladd
       9: lreturn

  public long getReadTransactionCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionManager:Lorg/apache/jena/tdb/transaction/TransactionManager;
       4: getfield      #5                  // Field org/apache/jena/tdb/transaction/TransactionManager.finishedReaders:Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
      10: lreturn

  public long getWriteTransactionCount();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getWriteCommitTransactionCount:()J
       4: aload_0
       5: invokevirtual #8                  // Method getWriteAbortTransactionCount:()J
       8: ladd
       9: lreturn

  public long getWriteAbortTransactionCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionManager:Lorg/apache/jena/tdb/transaction/TransactionManager;
       4: getfield      #9                  // Field org/apache/jena/tdb/transaction/TransactionManager.abortedWriters:Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
      10: lreturn

  public long getWriteCommitTransactionCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionManager:Lorg/apache/jena/tdb/transaction/TransactionManager;
       4: getfield      #10                 // Field org/apache/jena/tdb/transaction/TransactionManager.committedWriters:Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
      10: lreturn

  public long getWriteCommitTransactionPendingCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionManager:Lorg/apache/jena/tdb/transaction/TransactionManager;
       4: getfield      #11                 // Field org/apache/jena/tdb/transaction/TransactionManager.commitedAwaitingFlush:Ljava/util/List;
       7: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      12: i2l
      13: lreturn

  public long getCurrentWriteTransactionCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionManager:Lorg/apache/jena/tdb/transaction/TransactionManager;
       4: getfield      #13                 // Field org/apache/jena/tdb/transaction/TransactionManager.activeWriters:Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
      10: lreturn

  public long getCurrentReadTransactionCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionManager:Lorg/apache/jena/tdb/transaction/TransactionManager;
       4: getfield      #14                 // Field org/apache/jena/tdb/transaction/TransactionManager.activeReaders:Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
      10: lreturn
}
