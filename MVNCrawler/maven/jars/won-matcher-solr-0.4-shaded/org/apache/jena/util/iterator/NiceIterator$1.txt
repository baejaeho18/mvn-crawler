Compiled from "NiceIterator.java"
final class org.apache.jena.util.iterator.NiceIterator$1 extends org.apache.jena.util.iterator.NiceIterator<T> {
  private int index;

  private java.util.Iterator<? extends T> current;

  private java.util.Iterator<? extends T> removeFrom;

  final java.util.Iterator val$a;

  final java.util.List val$pending;

  org.apache.jena.util.iterator.NiceIterator$1(java.util.Iterator, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$a:Ljava/util/Iterator;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$pending:Ljava/util/List;
      10: aload_0
      11: invokespecial #3                  // Method org/apache/jena/util/iterator/NiceIterator."<init>":()V
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field index:I
      19: aload_0
      20: aload_0
      21: getfield      #1                  // Field val$a:Ljava/util/Iterator;
      24: putfield      #5                  // Field current:Ljava/util/Iterator;
      27: aload_0
      28: aconst_null
      29: putfield      #6                  // Field removeFrom:Ljava/util/Iterator;
      32: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Ljava/util/Iterator;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ifne          39
      12: aload_0
      13: getfield      #4                  // Field index:I
      16: aload_0
      17: getfield      #2                  // Field val$pending:Ljava/util/List;
      20: invokeinterface #8,  1            // InterfaceMethod java/util/List.size:()I
      25: if_icmpge     39
      28: aload_0
      29: aload_0
      30: invokespecial #9                  // Method advance:()Ljava/util/Iterator;
      33: putfield      #5                  // Field current:Ljava/util/Iterator;
      36: goto          0
      39: aload_0
      40: getfield      #5                  // Field current:Ljava/util/Iterator;
      43: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ireturn

  private java.util.Iterator<? extends T> advance();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$pending:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field index:I
       8: invokeinterface #10,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      13: checkcast     #11                 // class java/util/Iterator
      16: astore_1
      17: aload_0
      18: getfield      #2                  // Field val$pending:Ljava/util/List;
      21: aload_0
      22: getfield      #4                  // Field index:I
      25: aconst_null
      26: invokeinterface #12,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_0
      33: dup
      34: getfield      #4                  // Field index:I
      37: iconst_1
      38: iadd
      39: putfield      #4                  // Field index:I
      42: aload_1
      43: areturn

  public T next();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method hasNext:()Z
       4: ifne          14
       7: aload_0
       8: ldc           #14                 // String concatenation
      10: invokevirtual #15                 // Method noElements:(Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_0
      16: getfield      #5                  // Field current:Ljava/util/Iterator;
      19: putfield      #6                  // Field removeFrom:Ljava/util/Iterator;
      22: aload_0
      23: getfield      #5                  // Field current:Ljava/util/Iterator;
      26: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Ljava/util/Iterator;
       4: invokestatic  #17                 // Method close:(Ljava/util/Iterator;)V
       7: aload_0
       8: getfield      #4                  // Field index:I
      11: istore_1
      12: iload_1
      13: aload_0
      14: getfield      #2                  // Field val$pending:Ljava/util/List;
      17: invokeinterface #8,  1            // InterfaceMethod java/util/List.size:()I
      22: if_icmpge     47
      25: aload_0
      26: getfield      #2                  // Field val$pending:Ljava/util/List;
      29: iload_1
      30: invokeinterface #10,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      35: checkcast     #11                 // class java/util/Iterator
      38: invokestatic  #17                 // Method close:(Ljava/util/Iterator;)V
      41: iinc          1, 1
      44: goto          12
      47: aload_0
      48: getfield      #2                  // Field val$pending:Ljava/util/List;
      51: invokeinterface #18,  1           // InterfaceMethod java/util/List.clear:()V
      56: aload_0
      57: aconst_null
      58: putfield      #6                  // Field removeFrom:Ljava/util/Iterator;
      61: return

  public void remove();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #6                  // Field removeFrom:Ljava/util/Iterator;
       5: if_acmpne     18
       8: new           #19                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #20                 // String no calls to next() since last call to remove()
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #6                  // Field removeFrom:Ljava/util/Iterator;
      22: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.remove:()V
      27: aload_0
      28: aconst_null
      29: putfield      #6                  // Field removeFrom:Ljava/util/Iterator;
      32: return

  public <X extends T> org.apache.jena.util.iterator.ExtendedIterator<T> andThen(java.util.Iterator<X>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$pending:Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.apache.jena.util.iterator.ExtendedIterator filterDrop(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method org/apache/jena/util/iterator/NiceIterator.filterDrop:(Ljava/util/function/Predicate;)Lorg/apache/jena/util/iterator/FilterIterator;
       5: areturn

  public org.apache.jena.util.iterator.ExtendedIterator filterKeep(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/apache/jena/util/iterator/NiceIterator.filterKeep:(Ljava/util/function/Predicate;)Lorg/apache/jena/util/iterator/FilterIterator;
       5: areturn
}
