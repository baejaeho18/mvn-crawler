Compiled from "SplitIRI.java"
public class org.apache.jena.util.SplitIRI {
  public org.apache.jena.util.SplitIRI();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String namespace(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method splitpoint:(Ljava/lang/String;)I
       4: istore_1
       5: iload_1
       6: ifge          11
       9: aload_0
      10: areturn
      11: aload_0
      12: iconst_0
      13: iload_1
      14: invokevirtual #3                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      17: areturn

  public static java.lang.String localname(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method splitpoint:(Ljava/lang/String;)I
       4: istore_1
       5: iload_1
       6: ifge          12
       9: ldc           #4                  // String
      11: areturn
      12: aload_0
      13: iload_1
      14: invokevirtual #5                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      17: areturn

  public static java.lang.String namespaceTTL(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method namespace:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  public static java.lang.String localnameTTL(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method localname:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: invokevirtual #8                  // Method java/lang/String.isEmpty:()Z
       9: ifeq          14
      12: aload_1
      13: areturn
      14: aload_1
      15: invokestatic  #9                  // Method escape_PN_LOCAL_ESC:(Ljava/lang/String;)Ljava/lang/String;
      18: areturn

  private static java.lang.String escape_PN_LOCAL_ESC(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/lang/String.length:()I
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_1
      11: if_icmpge     52
      14: aload_0
      15: iload_3
      16: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      19: istore        4
      21: iload         4
      23: iload_3
      24: iload_1
      25: iconst_1
      26: isub
      27: if_icmpne     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: invokestatic  #12                 // Method needsEscape:(CZ)Z
      38: ifeq          46
      41: iconst_1
      42: istore_2
      43: goto          52
      46: iinc          3, 1
      49: goto          9
      52: iload_2
      53: ifne          58
      56: aload_0
      57: areturn
      58: new           #13                 // class java/lang/StringBuilder
      61: dup
      62: iload_1
      63: bipush        10
      65: iadd
      66: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(I)V
      69: astore_3
      70: iconst_0
      71: istore        4
      73: iload         4
      75: iload_1
      76: if_icmpge     128
      79: aload_0
      80: iload         4
      82: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      85: istore        5
      87: iload         5
      89: iload         4
      91: iload_1
      92: iconst_1
      93: isub
      94: if_icmpne     101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: invokestatic  #12                 // Method needsEscape:(CZ)Z
     105: ifeq          115
     108: aload_3
     109: bipush        92
     111: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     114: pop
     115: aload_3
     116: iload         5
     118: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     121: pop
     122: iinc          4, 1
     125: goto          73
     128: aload_3
     129: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: areturn

  private static boolean needsEscape(char, boolean);
    Code:
       0: iload_0
       1: bipush        46
       3: if_icmpne     8
       6: iload_1
       7: ireturn
       8: iload_0
       9: invokestatic  #17                 // Method isPN_LOCAL_ESC:(C)Z
      12: ireturn

  public static int splitpoint(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // String urn:
       3: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: istore_1
       7: aload_0
       8: bipush        35
      10: invokevirtual #20                 // Method java/lang/String.lastIndexOf:(I)I
      13: istore_2
      14: iload_1
      15: ifeq          27
      18: aload_0
      19: bipush        58
      21: invokevirtual #20                 // Method java/lang/String.lastIndexOf:(I)I
      24: goto          33
      27: aload_0
      28: bipush        47
      30: invokevirtual #20                 // Method java/lang/String.lastIndexOf:(I)I
      33: istore_3
      34: aload_0
      35: bipush        58
      37: invokevirtual #21                 // Method java/lang/String.indexOf:(I)I
      40: istore        4
      42: iload_2
      43: iload_3
      44: invokestatic  #22                 // Method java/lang/Math.max:(II)I
      47: istore        5
      49: iload         5
      51: iload         4
      53: invokestatic  #22                 // Method java/lang/Math.max:(II)I
      56: istore        5
      58: iconst_m1
      59: iload         5
      61: invokestatic  #22                 // Method java/lang/Math.max:(II)I
      64: istore        5
      66: iconst_m1
      67: istore        6
      69: aload_0
      70: invokevirtual #10                 // Method java/lang/String.length:()I
      73: iconst_1
      74: isub
      75: istore        7
      77: iload         7
      79: iload         5
      81: if_icmple     147
      84: aload_0
      85: iload         7
      87: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      90: istore        8
      92: iload         8
      94: invokestatic  #23                 // Method isPNChars_U_N:(I)Z
      97: ifne          141
     100: iload         8
     102: invokestatic  #17                 // Method isPN_LOCAL_ESC:(C)Z
     105: ifne          141
     108: iload         8
     110: bipush        58
     112: if_icmpeq     141
     115: iload         8
     117: bipush        45
     119: if_icmpeq     141
     122: iload         8
     124: bipush        46
     126: if_icmpne     132
     129: goto          141
     132: iload         7
     134: iconst_1
     135: iadd
     136: istore        6
     138: goto          147
     141: iinc          7, -1
     144: goto          77
     147: iload         6
     149: iconst_m1
     150: if_icmpne     159
     153: iload         5
     155: iconst_1
     156: iadd
     157: istore        6
     159: iload         6
     161: aload_0
     162: invokevirtual #10                 // Method java/lang/String.length:()I
     165: if_icmplt     170
     168: iconst_m1
     169: ireturn
     170: aload_0
     171: iload         6
     173: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
     176: istore        7
     178: iload         7
     180: bipush        46
     182: if_icmpeq     192
     185: iload         7
     187: bipush        45
     189: if_icmpne     217
     192: iinc          6, 1
     195: iload         6
     197: aload_0
     198: invokevirtual #10                 // Method java/lang/String.length:()I
     201: if_icmplt     206
     204: iconst_m1
     205: ireturn
     206: aload_0
     207: iload         6
     209: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
     212: istore        7
     214: goto          178
     217: iload         6
     219: ireturn

  private static boolean checkhex(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
       5: invokestatic  #24                 // Method isHexChar:(I)Z
       8: ireturn

  public static int splitXML(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method org/apache/jena/rdf/model/impl/Util.splitNamespaceXML:(Ljava/lang/String;)I
       4: ireturn

  public static java.lang.String namespaceXML(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method splitXML:(Ljava/lang/String;)I
       4: istore_1
       5: aload_0
       6: iconst_0
       7: iload_1
       8: invokevirtual #3                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      11: areturn

  public static java.lang.String localnameXML(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method splitXML:(Ljava/lang/String;)I
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokevirtual #5                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      10: areturn

  private static boolean isPN_LOCAL_ESC(char);
    Code:
       0: iload_0
       1: tableswitch   { // 33 to 126
                    33: 392
                    34: 394
                    35: 392
                    36: 392
                    37: 392
                    38: 392
                    39: 392
                    40: 392
                    41: 392
                    42: 392
                    43: 392
                    44: 392
                    45: 392
                    46: 392
                    47: 392
                    48: 394
                    49: 394
                    50: 394
                    51: 394
                    52: 394
                    53: 394
                    54: 394
                    55: 394
                    56: 394
                    57: 394
                    58: 394
                    59: 392
                    60: 394
                    61: 392
                    62: 394
                    63: 392
                    64: 392
                    65: 394
                    66: 394
                    67: 394
                    68: 394
                    69: 394
                    70: 394
                    71: 394
                    72: 394
                    73: 394
                    74: 394
                    75: 394
                    76: 394
                    77: 394
                    78: 394
                    79: 394
                    80: 394
                    81: 394
                    82: 394
                    83: 394
                    84: 394
                    85: 394
                    86: 394
                    87: 394
                    88: 394
                    89: 394
                    90: 394
                    91: 394
                    92: 392
                    93: 394
                    94: 394
                    95: 392
                    96: 394
                    97: 394
                    98: 394
                    99: 394
                   100: 394
                   101: 394
                   102: 394
                   103: 394
                   104: 394
                   105: 394
                   106: 394
                   107: 394
                   108: 394
                   109: 394
                   110: 394
                   111: 394
                   112: 394
                   113: 394
                   114: 394
                   115: 394
                   116: 394
                   117: 394
                   118: 394
                   119: 394
                   120: 394
                   121: 394
                   122: 394
                   123: 394
                   124: 394
                   125: 394
                   126: 392
               default: 394
          }
     392: iconst_1
     393: ireturn
     394: iconst_0
     395: ireturn

  private static boolean isDigit(int);
    Code:
       0: iload_0
       1: bipush        48
       3: bipush        57
       5: invokestatic  #27                 // Method range:(ICC)Z
       8: ireturn

  private static boolean isPNCharsBase(int);
    Code:
       0: iload_0
       1: bipush        97
       3: bipush        122
       5: invokestatic  #28                 // Method r:(III)Z
       8: ifne          182
      11: iload_0
      12: bipush        65
      14: bipush        90
      16: invokestatic  #28                 // Method r:(III)Z
      19: ifne          182
      22: iload_0
      23: sipush        192
      26: sipush        214
      29: invokestatic  #28                 // Method r:(III)Z
      32: ifne          182
      35: iload_0
      36: sipush        216
      39: sipush        246
      42: invokestatic  #28                 // Method r:(III)Z
      45: ifne          182
      48: iload_0
      49: sipush        248
      52: sipush        767
      55: invokestatic  #28                 // Method r:(III)Z
      58: ifne          182
      61: iload_0
      62: sipush        880
      65: sipush        893
      68: invokestatic  #28                 // Method r:(III)Z
      71: ifne          182
      74: iload_0
      75: sipush        895
      78: sipush        8191
      81: invokestatic  #28                 // Method r:(III)Z
      84: ifne          182
      87: iload_0
      88: sipush        8204
      91: sipush        8205
      94: invokestatic  #28                 // Method r:(III)Z
      97: ifne          182
     100: iload_0
     101: sipush        8304
     104: sipush        8591
     107: invokestatic  #28                 // Method r:(III)Z
     110: ifne          182
     113: iload_0
     114: sipush        11264
     117: sipush        12271
     120: invokestatic  #28                 // Method r:(III)Z
     123: ifne          182
     126: iload_0
     127: sipush        12289
     130: ldc           #29                 // int 55295
     132: invokestatic  #28                 // Method r:(III)Z
     135: ifne          182
     138: iload_0
     139: ldc           #30                 // int 55296
     141: ldc           #31                 // int 57343
     143: invokestatic  #28                 // Method r:(III)Z
     146: ifne          182
     149: iload_0
     150: ldc           #32                 // int 63744
     152: ldc           #33                 // int 64975
     154: invokestatic  #28                 // Method r:(III)Z
     157: ifne          182
     160: iload_0
     161: ldc           #34                 // int 65008
     163: ldc           #35                 // int 65533
     165: invokestatic  #28                 // Method r:(III)Z
     168: ifne          182
     171: iload_0
     172: ldc           #36                 // int 65536
     174: ldc           #37                 // int 983039
     176: invokestatic  #28                 // Method r:(III)Z
     179: ifeq          186
     182: iconst_1
     183: goto          187
     186: iconst_0
     187: ireturn

  private static boolean isPNChars_U(int);
    Code:
       0: iload_0
       1: invokestatic  #38                 // Method isPNCharsBase:(I)Z
       4: ifne          13
       7: iload_0
       8: bipush        95
      10: if_icmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private static boolean isPNChars_U_N(int);
    Code:
       0: iload_0
       1: invokestatic  #38                 // Method isPNCharsBase:(I)Z
       4: ifne          20
       7: iload_0
       8: bipush        95
      10: if_icmpeq     20
      13: iload_0
      14: invokestatic  #39                 // Method isDigit:(I)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private static boolean isPNChars(int);
    Code:
       0: iload_0
       1: invokestatic  #40                 // Method isPNChars_U:(I)Z
       4: ifne          53
       7: iload_0
       8: invokestatic  #39                 // Method isDigit:(I)Z
      11: ifne          53
      14: iload_0
      15: bipush        45
      17: if_icmpeq     53
      20: iload_0
      21: sipush        183
      24: if_icmpeq     53
      27: iload_0
      28: sipush        768
      31: sipush        879
      34: invokestatic  #28                 // Method r:(III)Z
      37: ifne          53
      40: iload_0
      41: sipush        8255
      44: sipush        8256
      47: invokestatic  #28                 // Method r:(III)Z
      50: ifeq          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  private static boolean isHexChar(int);
    Code:
       0: iload_0
       1: bipush        48
       3: bipush        57
       5: invokestatic  #27                 // Method range:(ICC)Z
       8: ifne          33
      11: iload_0
      12: bipush        97
      14: bipush        102
      16: invokestatic  #27                 // Method range:(ICC)Z
      19: ifne          33
      22: iload_0
      23: bipush        65
      25: bipush        70
      27: invokestatic  #27                 // Method range:(ICC)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  private static int valHexChar(int);
    Code:
       0: iload_0
       1: bipush        48
       3: bipush        57
       5: invokestatic  #27                 // Method range:(ICC)Z
       8: ifeq          16
      11: iload_0
      12: bipush        48
      14: isub
      15: ireturn
      16: iload_0
      17: bipush        97
      19: bipush        102
      21: invokestatic  #27                 // Method range:(ICC)Z
      24: ifeq          35
      27: iload_0
      28: bipush        97
      30: isub
      31: bipush        10
      33: iadd
      34: ireturn
      35: iload_0
      36: bipush        65
      38: bipush        70
      40: invokestatic  #27                 // Method range:(ICC)Z
      43: ifeq          54
      46: iload_0
      47: bipush        65
      49: isub
      50: bipush        10
      52: iadd
      53: ireturn
      54: iconst_m1
      55: ireturn

  private static boolean r(int, int, int);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmplt     14
       5: iload_0
       6: iload_2
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static boolean range(int, char, char);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmplt     14
       5: iload_0
       6: iload_2
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
