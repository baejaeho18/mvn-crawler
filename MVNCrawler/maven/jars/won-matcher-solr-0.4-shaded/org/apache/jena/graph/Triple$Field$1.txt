Compiled from "Triple.java"
final class org.apache.jena.graph.Triple$Field$1 extends org.apache.jena.graph.Triple$Field {
  org.apache.jena.graph.Triple$Field$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/jena/graph/Triple$Field."<init>":()V
       4: return

  public org.apache.jena.graph.Node getField(org.apache.jena.graph.Triple);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method org/apache/jena/graph/Triple.access$000:(Lorg/apache/jena/graph/Triple;)Lorg/apache/jena/graph/Node;
       4: areturn

  public java.util.function.Predicate<org.apache.jena.graph.Triple> filterOn(org.apache.jena.graph.Node);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/apache/jena/graph/Node.isConcrete:()Z
       4: ifeq          16
       7: aload_1
       8: invokedynamic #4,  0              // InvokeDynamic #0:test:(Lorg/apache/jena/graph/Node;)Ljava/util/function/Predicate;
      13: goto          19
      16: getstatic     #5                  // Field anyTriple:Ljava/util/function/Predicate;
      19: areturn

  private static boolean lambda$filterOn$0(org.apache.jena.graph.Node, org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method org/apache/jena/graph/Triple.access$000:(Lorg/apache/jena/graph/Triple;)Lorg/apache/jena/graph/Node;
       5: invokevirtual #6                  // Method org/apache/jena/graph/Node.equals:(Ljava/lang/Object;)Z
       8: ireturn
}
