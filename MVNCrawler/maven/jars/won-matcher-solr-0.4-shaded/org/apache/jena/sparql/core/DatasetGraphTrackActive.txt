Compiled from "DatasetGraphTrackActive.java"
public abstract class org.apache.jena.sparql.core.DatasetGraphTrackActive extends org.apache.jena.sparql.core.DatasetGraphWrapper {
  protected abstract org.apache.jena.sparql.core.DatasetGraph get();

  protected org.apache.jena.sparql.core.DatasetGraphTrackActive();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method org/apache/jena/sparql/core/DatasetGraphWrapper."<init>":(Lorg/apache/jena/sparql/core/DatasetGraph;)V
       5: return

  protected abstract void checkActive();

  protected abstract void checkNotActive();

  public final void begin(org.apache.jena.query.ReadWrite);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method checkNotActive:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method _begin:(Lorg/apache/jena/query/ReadWrite;)V
       9: return

  public final void commit();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method checkActive:()V
       4: aload_0
       5: invokevirtual #5                  // Method _commit:()V
       8: return

  public final void abort();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method checkActive:()V
       4: aload_0
       5: invokevirtual #6                  // Method _abort:()V
       8: return

  public final void end();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method _end:()V
       4: return

  public abstract boolean isInTransaction();

  protected abstract void _begin(org.apache.jena.query.ReadWrite);

  protected abstract void _commit();

  protected abstract void _abort();

  protected abstract void _end();

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method isInTransaction:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #9                  // Method abort:()V
      11: aload_0
      12: invokevirtual #10                 // Method _close:()V
      15: return

  protected abstract void _close();
}
