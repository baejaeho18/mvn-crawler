Compiled from "OpTopN.java"
public class org.apache.jena.sparql.algebra.op.OpTopN extends org.apache.jena.sparql.algebra.op.OpModifier {
  private final java.util.List<org.apache.jena.query.SortCondition> conditions;

  private final int limit;

  public org.apache.jena.sparql.algebra.op.OpTopN(org.apache.jena.sparql.algebra.Op, int, java.util.List<org.apache.jena.query.SortCondition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/jena/sparql/algebra/op/OpModifier."<init>":(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field conditions:Ljava/util/List;
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field limit:I
      15: return

  public java.util.List<org.apache.jena.query.SortCondition> getConditions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conditions:Ljava/util/List;
       4: areturn

  public int getLimit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field limit:I
       4: ireturn

  public java.lang.String getName();
    Code:
       0: ldc           #5                  // String top
       2: areturn

  public void visit(org.apache.jena.sparql.algebra.OpVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #6,  2            // InterfaceMethod org/apache/jena/sparql/algebra/OpVisitor.visit:(Lorg/apache/jena/sparql/algebra/op/OpTopN;)V
       7: return

  public org.apache.jena.sparql.algebra.op.Op1 copy(org.apache.jena.sparql.algebra.Op);
    Code:
       0: new           #7                  // class org/apache/jena/sparql/algebra/op/OpTopN
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field limit:I
       9: aload_0
      10: getfield      #2                  // Field conditions:Ljava/util/List;
      13: invokespecial #8                  // Method "<init>":(Lorg/apache/jena/sparql/algebra/Op;ILjava/util/List;)V
      16: areturn

  public org.apache.jena.sparql.algebra.Op apply(org.apache.jena.sparql.algebra.Transform, org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #9,  3            // InterfaceMethod org/apache/jena/sparql/algebra/Transform.transform:(Lorg/apache/jena/sparql/algebra/op/OpTopN;Lorg/apache/jena/sparql/algebra/Op;)Lorg/apache/jena/sparql/algebra/Op;
       8: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conditions:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.hashCode:()I
       9: aload_0
      10: invokevirtual #11                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      13: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      16: ixor
      17: ireturn

  public boolean equalTo(org.apache.jena.sparql.algebra.Op, org.apache.jena.sparql.util.NodeIsomorphismMap);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/apache/jena/sparql/algebra/op/OpTopN
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #7                  // class org/apache/jena/sparql/algebra/op/OpTopN
      13: astore_3
      14: aload_0
      15: invokevirtual #11                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      18: aload_3
      19: invokevirtual #11                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      22: aload_2
      23: invokeinterface #13,  3           // InterfaceMethod org/apache/jena/sparql/algebra/Op.equalTo:(Lorg/apache/jena/sparql/algebra/Op;Lorg/apache/jena/sparql/util/NodeIsomorphismMap;)Z
      28: ireturn
}
