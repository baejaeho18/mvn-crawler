Compiled from "TriTable.java"
public class org.apache.jena.sparql.core.mem.TriTable implements org.apache.jena.sparql.core.mem.TripleTable {
  private final java.util.Map<org.apache.jena.sparql.core.mem.TripleTableForm, org.apache.jena.sparql.core.mem.TripleTable> indexBlock;

  public org.apache.jena.sparql.core.mem.TriTable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/EnumMap
       8: dup
       9: invokestatic  #3                  // Method org/apache/jena/sparql/core/mem/TripleTableForm.tableForms:()Ljava/util/stream/Stream;
      12: invokedynamic #4,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      17: invokedynamic #5,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      22: invokestatic  #6                  // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      25: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      30: checkcast     #8                  // class java/util/Map
      33: invokespecial #9                  // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
      36: putfield      #10                 // Field indexBlock:Ljava/util/Map;
      39: return

  protected java.util.Map<org.apache.jena.sparql.core.mem.TripleTableForm, org.apache.jena.sparql.core.mem.TripleTable> indexBlock();
    Code:
       0: aload_0
       1: getfield      #10                 // Field indexBlock:Ljava/util/Map;
       4: areturn

  public void commit();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #13,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: aload_0
      20: invokevirtual #15                 // Method end:()V
      23: return

  public void abort();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #16,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: aload_0
      20: invokevirtual #15                 // Method end:()V
      23: return

  public void end();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #17,  0             // InvokeDynamic #4:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  public java.util.stream.Stream<org.apache.jena.graph.Triple> find(org.apache.jena.graph.Node, org.apache.jena.graph.Node, org.apache.jena.graph.Node);
    Code:
       0: ldc           #18                 // class org/apache/jena/sparql/core/mem/TupleSlot
       2: invokestatic  #19                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       5: astore        4
       7: aload_1
       8: invokestatic  #20                 // Method isConcrete:(Lorg/apache/jena/graph/Node;)Z
      11: ifeq          25
      14: aload         4
      16: getstatic     #21                 // Field org/apache/jena/sparql/core/mem/TupleSlot.SUBJECT:Lorg/apache/jena/sparql/core/mem/TupleSlot;
      19: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_2
      26: invokestatic  #20                 // Method isConcrete:(Lorg/apache/jena/graph/Node;)Z
      29: ifeq          43
      32: aload         4
      34: getstatic     #23                 // Field org/apache/jena/sparql/core/mem/TupleSlot.PREDICATE:Lorg/apache/jena/sparql/core/mem/TupleSlot;
      37: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_3
      44: invokestatic  #20                 // Method isConcrete:(Lorg/apache/jena/graph/Node;)Z
      47: ifeq          61
      50: aload         4
      52: getstatic     #24                 // Field org/apache/jena/sparql/core/mem/TupleSlot.OBJECT:Lorg/apache/jena/sparql/core/mem/TupleSlot;
      55: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload         4
      63: invokestatic  #25                 // Method org/apache/jena/sparql/core/mem/TripleTableForm.chooseFrom:(Ljava/util/Set;)Lorg/apache/jena/sparql/core/mem/TripleTableForm;
      66: astore        5
      68: aload_0
      69: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
      72: aload         5
      74: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      79: checkcast     #27                 // class org/apache/jena/sparql/core/mem/TripleTable
      82: aload_1
      83: aload_2
      84: aload_3
      85: invokeinterface #28,  4           // InterfaceMethod org/apache/jena/sparql/core/mem/TripleTable.find:(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;)Ljava/util/stream/Stream;
      90: areturn

  private static boolean isConcrete(org.apache.jena.graph.Node);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method java/util/Objects.nonNull:(Ljava/lang/Object;)Z
       4: ifeq          18
       7: aload_0
       8: invokevirtual #30                 // Method org/apache/jena/graph/Node.isConcrete:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void add(org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #31,  0             // InvokeDynamic #5:accept:(Lorg/apache/jena/graph/Triple;)Ljava/util/function/Consumer;
      15: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      20: return

  public void delete(org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #32,  0             // InvokeDynamic #6:accept:(Lorg/apache/jena/graph/Triple;)Ljava/util/function/Consumer;
      15: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      20: return

  public void begin(org.apache.jena.query.ReadWrite);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #33,  0             // InvokeDynamic #7:accept:(Lorg/apache/jena/query/ReadWrite;)Ljava/util/function/Consumer;
      15: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      20: return

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method indexBlock:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #34,  0             // InvokeDynamic #8:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #14,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  public void delete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class org/apache/jena/graph/Triple
       5: invokevirtual #36                 // Method delete:(Lorg/apache/jena/graph/Triple;)V
       8: return

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class org/apache/jena/graph/Triple
       5: invokevirtual #37                 // Method add:(Lorg/apache/jena/graph/Triple;)V
       8: return

  private static void lambda$begin$3(org.apache.jena.query.ReadWrite, org.apache.jena.sparql.core.mem.TripleTable);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #38,  2           // InterfaceMethod org/apache/jena/sparql/core/mem/TripleTable.begin:(Lorg/apache/jena/query/ReadWrite;)V
       7: return

  private static void lambda$delete$2(org.apache.jena.graph.Triple, org.apache.jena.sparql.core.mem.TripleTable);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #39,  2           // InterfaceMethod org/apache/jena/sparql/core/mem/TripleTable.delete:(Ljava/lang/Object;)V
       7: return

  private static void lambda$add$1(org.apache.jena.graph.Triple, org.apache.jena.sparql.core.mem.TripleTable);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #40,  2           // InterfaceMethod org/apache/jena/sparql/core/mem/TripleTable.add:(Ljava/lang/Object;)V
       7: return

  private static org.apache.jena.sparql.core.mem.TripleTableForm lambda$new$0(org.apache.jena.sparql.core.mem.TripleTableForm);
    Code:
       0: aload_0
       1: areturn
}
