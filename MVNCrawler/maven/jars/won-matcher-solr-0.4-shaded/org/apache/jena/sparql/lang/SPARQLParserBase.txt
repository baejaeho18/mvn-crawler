Compiled from "SPARQLParserBase.java"
public class org.apache.jena.sparql.lang.SPARQLParserBase extends org.apache.jena.sparql.lang.ParserBase {
  private java.util.Deque<org.apache.jena.query.Query> stack;

  protected org.apache.jena.query.Query query;

  private org.apache.jena.sparql.modify.UpdateSink sink;

  private boolean oldBNodesAreVariables;

  private boolean oldBNodesAreAllowed;

  private int queryLevel;

  private java.util.Deque<java.util.Set<java.lang.String>> stackPreviousLabels;

  private java.util.Deque<org.apache.jena.sparql.util.LabelToNodeMap> stackCurrentLabels;

  private static org.apache.jena.sparql.modify.request.UpdateVisitor v;

  private java.util.List<org.apache.jena.sparql.core.Var> variables;

  private java.util.List<org.apache.jena.sparql.engine.binding.Binding> values;

  private int currentColumn;

  protected org.apache.jena.sparql.lang.SPARQLParserBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/jena/sparql/lang/ParserBase."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #4                  // Field stack:Ljava/util/Deque;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field sink:Lorg/apache/jena/sparql/modify/UpdateSink;
      20: aload_0
      21: iconst_m1
      22: putfield      #6                  // Field queryLevel:I
      25: aload_0
      26: new           #2                  // class java/util/ArrayDeque
      29: dup
      30: invokespecial #3                  // Method java/util/ArrayDeque."<init>":()V
      33: putfield      #7                  // Field stackPreviousLabels:Ljava/util/Deque;
      36: aload_0
      37: new           #2                  // class java/util/ArrayDeque
      40: dup
      41: invokespecial #3                  // Method java/util/ArrayDeque."<init>":()V
      44: putfield      #8                  // Field stackCurrentLabels:Ljava/util/Deque;
      47: aload_0
      48: aconst_null
      49: putfield      #9                  // Field variables:Ljava/util/List;
      52: aload_0
      53: aconst_null
      54: putfield      #10                 // Field values:Ljava/util/List;
      57: aload_0
      58: iconst_m1
      59: putfield      #11                 // Field currentColumn:I
      62: return

  public void setQuery(org.apache.jena.query.Query);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field query:Lorg/apache/jena/query/Query;
       5: aload_0
       6: aload_1
       7: invokevirtual #13                 // Method setPrologue:(Lorg/apache/jena/sparql/core/Prologue;)V
      10: return

  public org.apache.jena.query.Query getQuery();
    Code:
       0: aload_0
       1: getfield      #12                 // Field query:Lorg/apache/jena/query/Query;
       4: areturn

  public void setUpdateSink(org.apache.jena.sparql.modify.UpdateSink);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field sink:Lorg/apache/jena/sparql/modify/UpdateSink;
       5: aload_0
       6: new           #14                 // class org/apache/jena/query/Query
       9: dup
      10: invokespecial #15                 // Method org/apache/jena/query/Query."<init>":()V
      13: putfield      #12                 // Field query:Lorg/apache/jena/query/Query;
      16: aload_0
      17: aload_1
      18: invokeinterface #16,  1           // InterfaceMethod org/apache/jena/sparql/modify/UpdateSink.getPrologue:()Lorg/apache/jena/sparql/core/Prologue;
      23: invokevirtual #13                 // Method setPrologue:(Lorg/apache/jena/sparql/core/Prologue;)V
      26: return

  protected void startQuery();
    Code:
       0: return

  protected void finishQuery();
    Code:
       0: return

  protected void startUpdateRequest();
    Code:
       0: return

  protected void finishUpdateRequest();
    Code:
       0: return

  protected void startUpdateOperation();
    Code:
       0: return

  protected void finishUpdateOperation();
    Code:
       0: return

  protected void startModifyUpdate();
    Code:
       0: return

  protected void finishModifyUpdate();
    Code:
       0: return

  protected void startDataInsert(org.apache.jena.sparql.modify.request.QuadDataAccSink, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #17                 // Method getBNodesAreVariables:()Z
       5: putfield      #18                 // Field oldBNodesAreVariables:Z
       8: aload_0
       9: iconst_0
      10: invokevirtual #19                 // Method setBNodesAreVariables:(Z)V
      13: aload_0
      14: getfield      #20                 // Field activeLabelMap:Lorg/apache/jena/sparql/util/LabelToNodeMap;
      17: invokevirtual #21                 // Method org/apache/jena/sparql/util/LabelToNodeMap.clear:()V
      20: return

  protected void finishDataInsert(org.apache.jena.sparql.modify.request.QuadDataAccSink, int, int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field previousLabels:Ljava/util/Set;
       4: aload_0
       5: getfield      #20                 // Field activeLabelMap:Lorg/apache/jena/sparql/util/LabelToNodeMap;
       8: invokevirtual #23                 // Method org/apache/jena/sparql/util/LabelToNodeMap.getLabels:()Ljava/util/Set;
      11: invokeinterface #24,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      16: pop
      17: aload_0
      18: getfield      #20                 // Field activeLabelMap:Lorg/apache/jena/sparql/util/LabelToNodeMap;
      21: invokevirtual #21                 // Method org/apache/jena/sparql/util/LabelToNodeMap.clear:()V
      24: aload_0
      25: aload_0
      26: getfield      #18                 // Field oldBNodesAreVariables:Z
      29: invokevirtual #19                 // Method setBNodesAreVariables:(Z)V
      32: return

  protected void startDataDelete(org.apache.jena.sparql.modify.request.QuadDataAccSink, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #25                 // Method getBNodesAreAllowed:()Z
       5: putfield      #26                 // Field oldBNodesAreAllowed:Z
       8: aload_0
       9: iconst_0
      10: invokevirtual #27                 // Method setBNodesAreAllowed:(Z)V
      13: return

  protected void finishDataDelete(org.apache.jena.sparql.modify.request.QuadDataAccSink, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #26                 // Field oldBNodesAreAllowed:Z
       5: invokevirtual #27                 // Method setBNodesAreAllowed:(Z)V
       8: return

  protected void startWherePattern();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field queryLevel:I
       5: iconst_1
       6: iadd
       7: putfield      #6                  // Field queryLevel:I
      10: aload_0
      11: getfield      #6                  // Field queryLevel:I
      14: ifne          25
      17: aload_0
      18: invokespecial #28                 // Method pushLabelState:()V
      21: aload_0
      22: invokespecial #29                 // Method clearLabelState:()V
      25: return

  protected void finishWherePattern();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queryLevel:I
       4: ifne          11
       7: aload_0
       8: invokespecial #30                 // Method popLabelState:()V
      11: aload_0
      12: dup
      13: getfield      #6                  // Field queryLevel:I
      16: iconst_1
      17: isub
      18: putfield      #6                  // Field queryLevel:I
      21: return

  protected void startInsertTemplate(org.apache.jena.sparql.modify.request.QuadAcc, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #17                 // Method getBNodesAreVariables:()Z
       5: putfield      #18                 // Field oldBNodesAreVariables:Z
       8: aload_0
       9: iconst_0
      10: invokevirtual #19                 // Method setBNodesAreVariables:(Z)V
      13: aload_0
      14: invokespecial #28                 // Method pushLabelState:()V
      17: return

  protected void finishInsertTemplate(org.apache.jena.sparql.modify.request.QuadAcc, int, int);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method popLabelState:()V
       4: aload_0
       5: aload_0
       6: getfield      #18                 // Field oldBNodesAreVariables:Z
       9: invokevirtual #19                 // Method setBNodesAreVariables:(Z)V
      12: return

  protected void startDeleteTemplate(org.apache.jena.sparql.modify.request.QuadAcc, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #25                 // Method getBNodesAreAllowed:()Z
       5: putfield      #26                 // Field oldBNodesAreAllowed:Z
       8: aload_0
       9: iconst_0
      10: invokevirtual #27                 // Method setBNodesAreAllowed:(Z)V
      13: return

  protected void finishDeleteTemplate(org.apache.jena.sparql.modify.request.QuadAcc, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #26                 // Field oldBNodesAreAllowed:Z
       5: invokevirtual #27                 // Method setBNodesAreAllowed:(Z)V
       8: return

  protected void emitUpdate(org.apache.jena.update.Update);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     20
       5: aload_0
       6: aload_1
       7: invokespecial #31                 // Method verifyUpdate:(Lorg/apache/jena/update/Update;)V
      10: aload_0
      11: getfield      #5                  // Field sink:Lorg/apache/jena/sparql/modify/UpdateSink;
      14: aload_1
      15: invokeinterface #32,  2           // InterfaceMethod org/apache/jena/sparql/modify/UpdateSink.send:(Ljava/lang/Object;)V
      20: return

  private void verifyUpdate(org.apache.jena.update.Update);
    Code:
       0: aload_1
       1: getstatic     #33                 // Field v:Lorg/apache/jena/sparql/modify/request/UpdateVisitor;
       4: invokevirtual #34                 // Method org/apache/jena/update/Update.visit:(Lorg/apache/jena/sparql/modify/request/UpdateVisitor;)V
       7: return

  protected org.apache.jena.sparql.modify.request.QuadDataAccSink createInsertDataSink();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sink:Lorg/apache/jena/sparql/modify/UpdateSink;
       4: invokeinterface #35,  1           // InterfaceMethod org/apache/jena/sparql/modify/UpdateSink.createInsertDataSink:()Lorg/apache/jena/sparql/modify/request/QuadDataAccSink;
       9: areturn

  protected org.apache.jena.sparql.modify.request.QuadDataAccSink createDeleteDataSink();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sink:Lorg/apache/jena/sparql/modify/UpdateSink;
       4: invokeinterface #36,  1           // InterfaceMethod org/apache/jena/sparql/modify/UpdateSink.createDeleteDataSink:()Lorg/apache/jena/sparql/modify/request/QuadDataAccSink;
       9: areturn

  protected void pushQuery();
    Code:
       0: aload_0
       1: getfield      #12                 // Field query:Lorg/apache/jena/query/Query;
       4: ifnonnull     17
       7: new           #37                 // class org/apache/jena/sparql/ARQInternalErrorException
      10: dup
      11: ldc           #38                 // String Parser query object is null
      13: invokespecial #39                 // Method org/apache/jena/sparql/ARQInternalErrorException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field stack:Ljava/util/Deque;
      21: aload_0
      22: getfield      #12                 // Field query:Lorg/apache/jena/query/Query;
      25: invokeinterface #40,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      30: return

  protected void startSubSelect(int, int);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method pushQuery:()V
       4: aload_0
       5: aload_0
       6: aload_0
       7: invokevirtual #42                 // Method getPrologue:()Lorg/apache/jena/sparql/core/Prologue;
      10: invokevirtual #43                 // Method newSubQuery:(Lorg/apache/jena/sparql/core/Prologue;)Lorg/apache/jena/query/Query;
      13: putfield      #12                 // Field query:Lorg/apache/jena/query/Query;
      16: return

  protected org.apache.jena.query.Query newSubQuery(org.apache.jena.sparql.core.Prologue);
    Code:
       0: new           #14                 // class org/apache/jena/query/Query
       3: dup
       4: aload_0
       5: invokevirtual #42                 // Method getPrologue:()Lorg/apache/jena/sparql/core/Prologue;
       8: invokespecial #44                 // Method org/apache/jena/query/Query."<init>":(Lorg/apache/jena/sparql/core/Prologue;)V
      11: areturn

  protected void popQuery();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field stack:Ljava/util/Deque;
       5: invokeinterface #45,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      10: checkcast     #14                 // class org/apache/jena/query/Query
      13: putfield      #12                 // Field query:Lorg/apache/jena/query/Query;
      16: return

  protected org.apache.jena.query.Query endSubSelect(int, int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field query:Lorg/apache/jena/query/Query;
       4: astore_3
       5: aload_3
       6: invokevirtual #46                 // Method org/apache/jena/query/Query.isSelectType:()Z
       9: ifne          19
      12: ldc           #47                 // String Subquery not a SELECT query
      14: iload_1
      15: iload_2
      16: invokestatic  #48                 // Method throwParseException:(Ljava/lang/String;II)V
      19: aload_0
      20: invokevirtual #49                 // Method popQuery:()V
      23: aload_3
      24: areturn

  protected void startValuesClause(int, int);
    Code:
       0: aload_0
       1: new           #50                 // class java/util/ArrayList
       4: dup
       5: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
       8: putfield      #9                  // Field variables:Ljava/util/List;
      11: aload_0
      12: new           #50                 // class java/util/ArrayList
      15: dup
      16: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
      19: putfield      #10                 // Field values:Ljava/util/List;
      22: return

  protected void finishValuesClause(int, int);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getQuery:()Lorg/apache/jena/query/Query;
       4: aload_0
       5: getfield      #9                  // Field variables:Ljava/util/List;
       8: aload_0
       9: getfield      #10                 // Field values:Ljava/util/List;
      12: invokevirtual #53                 // Method org/apache/jena/query/Query.setValuesDataBlock:(Ljava/util/List;Ljava/util/List;)V
      15: return

  protected void startInlineData(java.util.List<org.apache.jena.sparql.core.Var>, java.util.List<org.apache.jena.sparql.engine.binding.Binding>, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field variables:Ljava/util/List;
       5: aload_0
       6: aload_2
       7: putfield      #10                 // Field values:Ljava/util/List;
      10: return

  protected void finishInlineData(int, int);
    Code:
       0: return

  private org.apache.jena.sparql.engine.binding.BindingMap currentValueRow();
    Code:
       0: aload_0
       1: getfield      #10                 // Field values:Ljava/util/List;
       4: aload_0
       5: getfield      #10                 // Field values:Ljava/util/List;
       8: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #55,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #56                 // class org/apache/jena/sparql/engine/binding/BindingMap
      23: areturn

  protected void emitDataBlockVariable(org.apache.jena.sparql.core.Var);
    Code:
       0: aload_0
       1: getfield      #9                  // Field variables:Ljava/util/List;
       4: aload_1
       5: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  protected void startDataBlockValueRow(int, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field values:Ljava/util/List;
       4: invokestatic  #58                 // Method org/apache/jena/sparql/engine/binding/BindingFactory.create:()Lorg/apache/jena/sparql/engine/binding/BindingMap;
       7: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      12: pop
      13: aload_0
      14: iconst_m1
      15: putfield      #11                 // Field currentColumn:I
      18: return

  protected void emitDataBlockValue(org.apache.jena.graph.Node, int, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field currentColumn:I
       5: iconst_1
       6: iadd
       7: putfield      #11                 // Field currentColumn:I
      10: aload_0
      11: getfield      #11                 // Field currentColumn:I
      14: aload_0
      15: getfield      #9                  // Field variables:Ljava/util/List;
      18: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      23: if_icmplt     27
      26: return
      27: aload_0
      28: getfield      #9                  // Field variables:Ljava/util/List;
      31: aload_0
      32: getfield      #11                 // Field currentColumn:I
      35: invokeinterface #55,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      40: checkcast     #59                 // class org/apache/jena/sparql/core/Var
      43: astore        4
      45: aload_1
      46: ifnull        61
      49: aload_0
      50: invokespecial #60                 // Method currentValueRow:()Lorg/apache/jena/sparql/engine/binding/BindingMap;
      53: aload         4
      55: aload_1
      56: invokeinterface #61,  3           // InterfaceMethod org/apache/jena/sparql/engine/binding/BindingMap.add:(Lorg/apache/jena/sparql/core/Var;Lorg/apache/jena/graph/Node;)V
      61: return

  protected void finishDataBlockValueRow(int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field currentColumn:I
       4: iconst_1
       5: iadd
       6: aload_0
       7: getfield      #9                  // Field variables:Ljava/util/List;
      10: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      15: if_icmpeq     73
      18: ldc           #62                 // String Mismatch: %d variables but %d values
      20: iconst_2
      21: anewarray     #63                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: getfield      #9                  // Field variables:Ljava/util/List;
      30: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      35: invokestatic  #64                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: dup
      40: iconst_1
      41: aload_0
      42: getfield      #11                 // Field currentColumn:I
      45: iconst_1
      46: iadd
      47: invokestatic  #64                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: aastore
      51: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      54: astore_3
      55: aload_3
      56: iload_1
      57: iload_2
      58: invokestatic  #66                 // Method org/apache/jena/query/QueryParseException.formatMessage:(Ljava/lang/String;II)Ljava/lang/String;
      61: astore_3
      62: new           #67                 // class org/apache/jena/query/QueryParseException
      65: dup
      66: aload_3
      67: iload_1
      68: iload_2
      69: invokespecial #68                 // Method org/apache/jena/query/QueryParseException."<init>":(Ljava/lang/String;II)V
      72: athrow
      73: return

  private void pushLabelState();
    Code:
       0: aload_0
       1: getfield      #7                  // Field stackPreviousLabels:Ljava/util/Deque;
       4: aload_0
       5: getfield      #22                 // Field previousLabels:Ljava/util/Set;
       8: invokeinterface #40,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      13: aload_0
      14: getfield      #8                  // Field stackCurrentLabels:Ljava/util/Deque;
      17: aload_0
      18: getfield      #20                 // Field activeLabelMap:Lorg/apache/jena/sparql/util/LabelToNodeMap;
      21: invokeinterface #40,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      26: aload_0
      27: new           #69                 // class java/util/HashSet
      30: dup
      31: invokespecial #70                 // Method java/util/HashSet."<init>":()V
      34: putfield      #22                 // Field previousLabels:Ljava/util/Set;
      37: aload_0
      38: getfield      #20                 // Field activeLabelMap:Lorg/apache/jena/sparql/util/LabelToNodeMap;
      41: invokevirtual #21                 // Method org/apache/jena/sparql/util/LabelToNodeMap.clear:()V
      44: return

  private void popLabelState();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field stackPreviousLabels:Ljava/util/Deque;
       5: invokeinterface #45,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      10: checkcast     #71                 // class java/util/Set
      13: putfield      #22                 // Field previousLabels:Ljava/util/Set;
      16: aload_0
      17: aload_0
      18: getfield      #8                  // Field stackCurrentLabels:Ljava/util/Deque;
      21: invokeinterface #45,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      26: checkcast     #72                 // class org/apache/jena/sparql/util/LabelToNodeMap
      29: putfield      #20                 // Field activeLabelMap:Lorg/apache/jena/sparql/util/LabelToNodeMap;
      32: return

  private void clearLabelState();
    Code:
       0: aload_0
       1: getfield      #20                 // Field activeLabelMap:Lorg/apache/jena/sparql/util/LabelToNodeMap;
       4: invokevirtual #21                 // Method org/apache/jena/sparql/util/LabelToNodeMap.clear:()V
       7: aload_0
       8: getfield      #22                 // Field previousLabels:Ljava/util/Set;
      11: invokeinterface #73,  1           // InterfaceMethod java/util/Set.clear:()V
      16: return

  static {};
    Code:
       0: new           #74                 // class org/apache/jena/sparql/lang/SPARQLParserBase$1
       3: dup
       4: invokespecial #75                 // Method org/apache/jena/sparql/lang/SPARQLParserBase$1."<init>":()V
       7: putstatic     #33                 // Field v:Lorg/apache/jena/sparql/modify/request/UpdateVisitor;
      10: return
}
