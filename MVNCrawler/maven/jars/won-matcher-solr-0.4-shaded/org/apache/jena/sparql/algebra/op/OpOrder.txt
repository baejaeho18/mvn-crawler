Compiled from "OpOrder.java"
public class org.apache.jena.sparql.algebra.op.OpOrder extends org.apache.jena.sparql.algebra.op.OpModifier {
  private java.util.List<org.apache.jena.query.SortCondition> conditions;

  public org.apache.jena.sparql.algebra.op.OpOrder(org.apache.jena.sparql.algebra.Op, java.util.List<org.apache.jena.query.SortCondition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/jena/sparql/algebra/op/OpModifier."<init>":(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field conditions:Ljava/util/List;
      10: return

  public java.util.List<org.apache.jena.query.SortCondition> getConditions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conditions:Ljava/util/List;
       4: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #4                  // String order
       2: areturn

  public void visit(org.apache.jena.sparql.algebra.OpVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #5,  2            // InterfaceMethod org/apache/jena/sparql/algebra/OpVisitor.visit:(Lorg/apache/jena/sparql/algebra/op/OpOrder;)V
       7: return

  public org.apache.jena.sparql.algebra.op.Op1 copy(org.apache.jena.sparql.algebra.Op);
    Code:
       0: new           #6                  // class org/apache/jena/sparql/algebra/op/OpOrder
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field conditions:Ljava/util/List;
       9: invokespecial #7                  // Method "<init>":(Lorg/apache/jena/sparql/algebra/Op;Ljava/util/List;)V
      12: areturn

  public org.apache.jena.sparql.algebra.Op apply(org.apache.jena.sparql.algebra.Transform, org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #8,  3            // InterfaceMethod org/apache/jena/sparql/algebra/Transform.transform:(Lorg/apache/jena/sparql/algebra/op/OpOrder;Lorg/apache/jena/sparql/algebra/Op;)Lorg/apache/jena/sparql/algebra/Op;
       8: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conditions:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.hashCode:()I
       9: aload_0
      10: invokevirtual #10                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      13: invokevirtual #11                 // Method java/lang/Object.hashCode:()I
      16: ixor
      17: ireturn

  public boolean equalTo(org.apache.jena.sparql.algebra.Op, org.apache.jena.sparql.util.NodeIsomorphismMap);
    Code:
       0: aload_1
       1: instanceof    #6                  // class org/apache/jena/sparql/algebra/op/OpOrder
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #6                  // class org/apache/jena/sparql/algebra/op/OpOrder
      13: astore_3
      14: aload_3
      15: invokevirtual #12                 // Method getConditions:()Ljava/util/List;
      18: aload_0
      19: invokevirtual #12                 // Method getConditions:()Ljava/util/List;
      22: invokeinterface #13,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #10                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      36: aload_3
      37: invokevirtual #10                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      40: aload_2
      41: invokeinterface #14,  3           // InterfaceMethod org/apache/jena/sparql/algebra/Op.equalTo:(Lorg/apache/jena/sparql/algebra/Op;Lorg/apache/jena/sparql/util/NodeIsomorphismMap;)Z
      46: ireturn
}
