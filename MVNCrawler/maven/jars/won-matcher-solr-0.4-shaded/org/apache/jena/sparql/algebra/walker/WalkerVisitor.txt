Compiled from "WalkerVisitor.java"
public class org.apache.jena.sparql.algebra.walker.WalkerVisitor implements org.apache.jena.sparql.algebra.walker.OpVisitorByTypeAndExpr,org.apache.jena.sparql.algebra.walker.ExprVisitorFunction {
  protected final org.apache.jena.sparql.expr.ExprVisitor exprVisitor;

  protected final org.apache.jena.sparql.algebra.OpVisitor opVisitor;

  protected int opDepthLimit;

  protected int exprDepthLimit;

  protected int opDepth;

  protected int exprDepth;

  private final org.apache.jena.sparql.algebra.OpVisitor beforeVisitor;

  private final org.apache.jena.sparql.algebra.OpVisitor afterVisitor;

  public org.apache.jena.sparql.algebra.walker.WalkerVisitor(org.apache.jena.sparql.algebra.OpVisitor, org.apache.jena.sparql.expr.ExprVisitor, org.apache.jena.sparql.algebra.OpVisitor, org.apache.jena.sparql.algebra.OpVisitor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 2147483647
       7: putfield      #4                  // Field opDepthLimit:I
      10: aload_0
      11: ldc           #3                  // int 2147483647
      13: putfield      #5                  // Field exprDepthLimit:I
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field opDepth:I
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field exprDepth:I
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      36: aload_0
      37: getfield      #4                  // Field opDepthLimit:I
      40: ifge          49
      43: aload_0
      44: ldc           #3                  // int 2147483647
      46: putfield      #4                  // Field opDepthLimit:I
      49: aload_0
      50: getfield      #7                  // Field exprDepth:I
      53: ifge          62
      56: aload_0
      57: ldc           #3                  // int 2147483647
      59: putfield      #5                  // Field exprDepthLimit:I
      62: aload_0
      63: iconst_0
      64: putfield      #6                  // Field opDepth:I
      67: aload_0
      68: iconst_0
      69: putfield      #7                  // Field exprDepth:I
      72: aload_0
      73: aload_3
      74: putfield      #10                 // Field beforeVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      77: aload_0
      78: aload         4
      80: putfield      #11                 // Field afterVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      83: return

  protected final void before(org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_0
       1: getfield      #10                 // Field beforeVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
       4: ifnull        17
       7: aload_1
       8: aload_0
       9: getfield      #10                 // Field beforeVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      12: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      17: return

  protected final void after(org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_0
       1: getfield      #11                 // Field afterVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
       4: ifnull        17
       7: aload_1
       8: aload_0
       9: getfield      #11                 // Field afterVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      12: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      17: return

  public void walk(org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #6                  // Field opDepth:I
       9: aload_0
      10: getfield      #4                  // Field opDepthLimit:I
      13: if_icmpne     17
      16: return
      17: aload_0
      18: dup
      19: getfield      #6                  // Field opDepth:I
      22: iconst_1
      23: iadd
      24: putfield      #6                  // Field opDepth:I
      27: aload_1
      28: aload_0
      29: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      34: aload_0
      35: dup
      36: getfield      #6                  // Field opDepth:I
      39: iconst_1
      40: isub
      41: putfield      #6                  // Field opDepth:I
      44: goto          60
      47: astore_2
      48: aload_0
      49: dup
      50: getfield      #6                  // Field opDepth:I
      53: iconst_1
      54: isub
      55: putfield      #6                  // Field opDepth:I
      58: aload_2
      59: athrow
      60: return
    Exception table:
       from    to  target type
          27    34    47   any

  public void walk(org.apache.jena.sparql.expr.Expr);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #7                  // Field exprDepth:I
       9: aload_0
      10: getfield      #5                  // Field exprDepthLimit:I
      13: if_icmpne     17
      16: return
      17: aload_0
      18: dup
      19: getfield      #7                  // Field exprDepth:I
      22: iconst_1
      23: iadd
      24: putfield      #7                  // Field exprDepth:I
      27: aload_1
      28: aload_0
      29: invokeinterface #13,  2           // InterfaceMethod org/apache/jena/sparql/expr/Expr.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      34: aload_0
      35: dup
      36: getfield      #7                  // Field exprDepth:I
      39: iconst_1
      40: isub
      41: putfield      #7                  // Field exprDepth:I
      44: goto          60
      47: astore_2
      48: aload_0
      49: dup
      50: getfield      #7                  // Field exprDepth:I
      53: iconst_1
      54: isub
      55: putfield      #7                  // Field exprDepth:I
      58: aload_2
      59: athrow
      60: return
    Exception table:
       from    to  target type
          27    34    47   any

  public void walk(org.apache.jena.sparql.expr.ExprList);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_0
       7: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Lorg/apache/jena/sparql/algebra/walker/WalkerVisitor;)Ljava/util/function/Consumer;
      12: invokevirtual #15                 // Method org/apache/jena/sparql/expr/ExprList.forEach:(Ljava/util/function/Consumer;)V
      15: return

  public void walk(org.apache.jena.sparql.core.VarExprList);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_0
       7: invokedynamic #16,  0             // InvokeDynamic #1:accept:(Lorg/apache/jena/sparql/algebra/walker/WalkerVisitor;)Ljava/util/function/BiConsumer;
      12: invokevirtual #17                 // Method org/apache/jena/sparql/core/VarExprList.forEachVarExpr:(Ljava/util/function/BiConsumer;)V
      15: return

  public void visitExpr(org.apache.jena.sparql.expr.ExprList);
    Code:
       0: aload_0
       1: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
       4: ifnull        12
       7: aload_0
       8: aload_1
       9: invokevirtual #18                 // Method walk:(Lorg/apache/jena/sparql/expr/ExprList;)V
      12: return

  public void visitVarExpr(org.apache.jena.sparql.core.VarExprList);
    Code:
       0: aload_0
       1: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
       4: ifnull        12
       7: aload_0
       8: aload_1
       9: invokevirtual #19                 // Method walk:(Lorg/apache/jena/sparql/core/VarExprList;)V
      12: return

  public void visitOp(org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_0
       6: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
       9: ifnull        19
      12: aload_1
      13: aload_0
      14: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      24: return

  public void visit0(org.apache.jena.sparql.algebra.op.Op0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_0
       6: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
       9: ifnull        20
      12: aload_1
      13: aload_0
      14: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      17: invokevirtual #22                 // Method org/apache/jena/sparql/algebra/op/Op0.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      20: aload_0
      21: aload_1
      22: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      25: return

  public void visit1(org.apache.jena.sparql.algebra.op.Op1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_0
       6: aload_1
       7: invokespecial #23                 // Method visit1$:(Lorg/apache/jena/sparql/algebra/op/Op1;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      15: return

  private void visit1$(org.apache.jena.sparql.algebra.op.Op1);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/apache/jena/sparql/algebra/op/Op1.getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
       4: ifnull        17
       7: aload_1
       8: invokevirtual #24                 // Method org/apache/jena/sparql/algebra/op/Op1.getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      11: aload_0
      12: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      17: aload_0
      18: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      21: ifnull        32
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      29: invokevirtual #25                 // Method org/apache/jena/sparql/algebra/op/Op1.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      32: return

  public void visit2(org.apache.jena.sparql.algebra.op.Op2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_1
       6: invokevirtual #26                 // Method org/apache/jena/sparql/algebra/op/Op2.getLeft:()Lorg/apache/jena/sparql/algebra/Op;
       9: ifnull        22
      12: aload_1
      13: invokevirtual #26                 // Method org/apache/jena/sparql/algebra/op/Op2.getLeft:()Lorg/apache/jena/sparql/algebra/Op;
      16: aload_0
      17: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      22: aload_1
      23: invokevirtual #27                 // Method org/apache/jena/sparql/algebra/op/Op2.getRight:()Lorg/apache/jena/sparql/algebra/Op;
      26: ifnull        39
      29: aload_1
      30: invokevirtual #27                 // Method org/apache/jena/sparql/algebra/op/Op2.getRight:()Lorg/apache/jena/sparql/algebra/Op;
      33: aload_0
      34: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      39: aload_0
      40: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      43: ifnull        54
      46: aload_1
      47: aload_0
      48: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      51: invokevirtual #28                 // Method org/apache/jena/sparql/algebra/op/Op2.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      54: aload_0
      55: aload_1
      56: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      59: return

  public void visitN(org.apache.jena.sparql.algebra.op.OpN);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_1
       6: invokevirtual #29                 // Method org/apache/jena/sparql/algebra/op/OpN.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #32                 // class org/apache/jena/sparql/algebra/Op
      28: astore_3
      29: aload_3
      30: aload_0
      31: invokeinterface #12,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Op.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      36: goto          10
      39: aload_0
      40: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      43: ifnull        54
      46: aload_1
      47: aload_0
      48: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      51: invokevirtual #33                 // Method org/apache/jena/sparql/algebra/op/OpN.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      54: aload_0
      55: aload_1
      56: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      59: return

  public void visitExt(org.apache.jena.sparql.algebra.op.OpExt);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_0
       6: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
       9: ifnull        20
      12: aload_1
      13: aload_0
      14: getfield      #8                  // Field opVisitor:Lorg/apache/jena/sparql/algebra/OpVisitor;
      17: invokevirtual #34                 // Method org/apache/jena/sparql/algebra/op/OpExt.visit:(Lorg/apache/jena/sparql/algebra/OpVisitor;)V
      20: aload_0
      21: aload_1
      22: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      25: return

  public void visit(org.apache.jena.sparql.algebra.op.OpOrder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method visit1:(Lorg/apache/jena/sparql/algebra/op/Op1;)V
       5: return

  public void visit(org.apache.jena.sparql.algebra.op.OpAssign);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_1
       6: invokevirtual #36                 // Method org/apache/jena/sparql/algebra/op/OpAssign.getVarExprList:()Lorg/apache/jena/sparql/core/VarExprList;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #37                 // Method visitVarExpr:(Lorg/apache/jena/sparql/core/VarExprList;)V
      15: aload_0
      16: aload_1
      17: invokespecial #23                 // Method visit1$:(Lorg/apache/jena/sparql/algebra/op/Op1;)V
      20: aload_0
      21: aload_1
      22: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      25: return

  public void visit(org.apache.jena.sparql.algebra.op.OpExtend);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method before:(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_1
       6: invokevirtual #38                 // Method org/apache/jena/sparql/algebra/op/OpExtend.getVarExprList:()Lorg/apache/jena/sparql/core/VarExprList;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #37                 // Method visitVarExpr:(Lorg/apache/jena/sparql/core/VarExprList;)V
      15: aload_0
      16: aload_1
      17: invokespecial #23                 // Method visit1$:(Lorg/apache/jena/sparql/algebra/op/Op1;)V
      20: aload_0
      21: aload_1
      22: invokevirtual #21                 // Method after:(Lorg/apache/jena/sparql/algebra/Op;)V
      25: return

  public void visit(org.apache.jena.sparql.expr.ExprFunction0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method visitExprFunction:(Lorg/apache/jena/sparql/expr/ExprFunction;)V
       5: return

  public void visit(org.apache.jena.sparql.expr.ExprFunction1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method visitExprFunction:(Lorg/apache/jena/sparql/expr/ExprFunction;)V
       5: return

  public void visit(org.apache.jena.sparql.expr.ExprFunction2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method visitExprFunction:(Lorg/apache/jena/sparql/expr/ExprFunction;)V
       5: return

  public void visit(org.apache.jena.sparql.expr.ExprFunction3);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method visitExprFunction:(Lorg/apache/jena/sparql/expr/ExprFunction;)V
       5: return

  public void visit(org.apache.jena.sparql.expr.ExprFunctionN);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method visitExprFunction:(Lorg/apache/jena/sparql/expr/ExprFunction;)V
       5: return

  public void visitExprFunction(org.apache.jena.sparql.expr.ExprFunction);
    Code:
       0: iconst_1
       1: istore_2
       2: iload_2
       3: aload_1
       4: invokevirtual #40                 // Method org/apache/jena/sparql/expr/ExprFunction.numArgs:()I
       7: if_icmpgt     45
      10: aload_1
      11: iload_2
      12: invokevirtual #41                 // Method org/apache/jena/sparql/expr/ExprFunction.getArg:(I)Lorg/apache/jena/sparql/expr/Expr;
      15: astore_3
      16: aload_3
      17: ifnonnull     32
      20: getstatic     #42                 // Field org/apache/jena/sparql/expr/Expr.NONE:Lorg/apache/jena/sparql/expr/Expr;
      23: aload_0
      24: invokeinterface #13,  2           // InterfaceMethod org/apache/jena/sparql/expr/Expr.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      29: goto          39
      32: aload_3
      33: aload_0
      34: invokeinterface #13,  2           // InterfaceMethod org/apache/jena/sparql/expr/Expr.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      39: iinc          2, 1
      42: goto          2
      45: aload_0
      46: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      49: ifnull        60
      52: aload_1
      53: aload_0
      54: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      57: invokevirtual #43                 // Method org/apache/jena/sparql/expr/ExprFunction.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      60: return

  public void visit(org.apache.jena.sparql.expr.ExprFunctionOp);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method org/apache/jena/sparql/expr/ExprFunctionOp.getGraphPattern:()Lorg/apache/jena/sparql/algebra/Op;
       5: invokevirtual #45                 // Method walk:(Lorg/apache/jena/sparql/algebra/Op;)V
       8: aload_0
       9: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      12: ifnull        23
      15: aload_1
      16: aload_0
      17: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      20: invokevirtual #46                 // Method org/apache/jena/sparql/expr/ExprFunctionOp.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      23: return

  public void visit(org.apache.jena.sparql.expr.NodeValue);
    Code:
       0: aload_0
       1: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      12: invokevirtual #47                 // Method org/apache/jena/sparql/expr/NodeValue.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      15: return

  public void visit(org.apache.jena.sparql.expr.ExprVar);
    Code:
       0: aload_0
       1: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      12: invokevirtual #48                 // Method org/apache/jena/sparql/expr/ExprVar.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      15: return

  public void visit(org.apache.jena.sparql.expr.ExprNone);
    Code:
       0: aload_0
       1: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      12: invokevirtual #49                 // Method org/apache/jena/sparql/expr/ExprNone.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      15: return

  public void visit(org.apache.jena.sparql.expr.ExprAggregator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method org/apache/jena/sparql/expr/ExprAggregator.getAggVar:()Lorg/apache/jena/sparql/expr/ExprVar;
       5: invokevirtual #51                 // Method org/apache/jena/sparql/expr/ExprVar.asVar:()Lorg/apache/jena/sparql/core/Var;
       8: invokevirtual #52                 // Method visitAssignVar:(Lorg/apache/jena/sparql/core/Var;)V
      11: aload_0
      12: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      15: ifnull        26
      18: aload_1
      19: aload_0
      20: getfield      #9                  // Field exprVisitor:Lorg/apache/jena/sparql/expr/ExprVisitor;
      23: invokevirtual #53                 // Method org/apache/jena/sparql/expr/ExprAggregator.visit:(Lorg/apache/jena/sparql/expr/ExprVisitor;)V
      26: return

  private void lambda$walk$1(org.apache.jena.sparql.core.Var, org.apache.jena.sparql.expr.Expr);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_2
       5: goto          11
       8: getstatic     #42                 // Field org/apache/jena/sparql/expr/Expr.NONE:Lorg/apache/jena/sparql/expr/Expr;
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #54                 // Method walk:(Lorg/apache/jena/sparql/expr/Expr;)V
      17: return

  private void lambda$walk$0(org.apache.jena.sparql.expr.Expr);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method walk:(Lorg/apache/jena/sparql/expr/Expr;)V
       5: return
}
