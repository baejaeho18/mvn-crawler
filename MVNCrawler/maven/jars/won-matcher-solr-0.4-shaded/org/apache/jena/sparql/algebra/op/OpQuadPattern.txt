Compiled from "OpQuadPattern.java"
public class org.apache.jena.sparql.algebra.op.OpQuadPattern extends org.apache.jena.sparql.algebra.op.Op0 {
  private org.apache.jena.graph.Node graphNode;

  private org.apache.jena.sparql.core.BasicPattern triples;

  private org.apache.jena.sparql.core.QuadPattern quads;

  public static boolean isQuadPattern(org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_0
       1: instanceof    #1                  // class org/apache/jena/sparql/algebra/op/OpQuadPattern
       4: ireturn

  public org.apache.jena.sparql.algebra.op.OpQuadPattern(org.apache.jena.graph.Node, org.apache.jena.sparql.core.BasicPattern);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/jena/sparql/algebra/op/Op0."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field quads:Lorg/apache/jena/sparql/core/QuadPattern;
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
      19: return

  private void initQuads();
    Code:
       0: aload_0
       1: getfield      #3                  // Field quads:Lorg/apache/jena/sparql/core/QuadPattern;
       4: ifnonnull     67
       7: aload_0
       8: new           #6                  // class org/apache/jena/sparql/core/QuadPattern
      11: dup
      12: invokespecial #7                  // Method org/apache/jena/sparql/core/QuadPattern."<init>":()V
      15: putfield      #3                  // Field quads:Lorg/apache/jena/sparql/core/QuadPattern;
      18: aload_0
      19: getfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
      22: invokevirtual #8                  // Method org/apache/jena/sparql/core/BasicPattern.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          67
      35: aload_1
      36: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #11                 // class org/apache/jena/graph/Triple
      44: astore_2
      45: aload_0
      46: getfield      #3                  // Field quads:Lorg/apache/jena/sparql/core/QuadPattern;
      49: new           #12                 // class org/apache/jena/sparql/core/Quad
      52: dup
      53: aload_0
      54: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
      57: aload_2
      58: invokespecial #13                 // Method org/apache/jena/sparql/core/Quad."<init>":(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Triple;)V
      61: invokevirtual #14                 // Method org/apache/jena/sparql/core/QuadPattern.add:(Lorg/apache/jena/sparql/core/Quad;)V
      64: goto          26
      67: return

  public org.apache.jena.sparql.core.QuadPattern getPattern();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method initQuads:()V
       4: aload_0
       5: getfield      #3                  // Field quads:Lorg/apache/jena/sparql/core/QuadPattern;
       8: areturn

  public org.apache.jena.graph.Node getGraphNode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
       4: areturn

  public org.apache.jena.sparql.core.BasicPattern getBasicPattern();
    Code:
       0: aload_0
       1: getfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
       4: invokevirtual #16                 // Method org/apache/jena/sparql/core/BasicPattern.size:()I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDefaultGraph();
    Code:
       0: aload_0
       1: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
       4: invokestatic  #17                 // Method org/apache/jena/sparql/core/Quad.isDefaultGraph:(Lorg/apache/jena/graph/Node;)Z
       7: ireturn

  public boolean isUnionGraph();
    Code:
       0: aload_0
       1: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
       4: invokestatic  #18                 // Method org/apache/jena/sparql/core/Quad.isUnionGraph:(Lorg/apache/jena/graph/Node;)Z
       7: ireturn

  public java.lang.String getName();
    Code:
       0: ldc           #20                 // String quadpattern
       2: areturn

  public org.apache.jena.sparql.algebra.Op apply(org.apache.jena.sparql.algebra.Transform);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #21,  2           // InterfaceMethod org/apache/jena/sparql/algebra/Transform.transform:(Lorg/apache/jena/sparql/algebra/op/OpQuadPattern;)Lorg/apache/jena/sparql/algebra/Op;
       7: areturn

  public void visit(org.apache.jena.sparql.algebra.OpVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #22,  2           // InterfaceMethod org/apache/jena/sparql/algebra/OpVisitor.visit:(Lorg/apache/jena/sparql/algebra/op/OpQuadPattern;)V
       7: return

  public org.apache.jena.sparql.algebra.op.Op0 copy();
    Code:
       0: new           #1                  // class org/apache/jena/sparql/algebra/op/OpQuadPattern
       3: dup
       4: aload_0
       5: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
       8: aload_0
       9: getfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
      12: invokespecial #23                 // Method "<init>":(Lorg/apache/jena/graph/Node;Lorg/apache/jena/sparql/core/BasicPattern;)V
      15: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
       4: invokevirtual #24                 // Method org/apache/jena/graph/Node.hashCode:()I
       7: aload_0
       8: getfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
      11: invokevirtual #25                 // Method org/apache/jena/sparql/core/BasicPattern.hashCode:()I
      14: ixor
      15: ireturn

  public boolean equalTo(org.apache.jena.sparql.algebra.Op, org.apache.jena.sparql.util.NodeIsomorphismMap);
    Code:
       0: aload_1
       1: instanceof    #1                  // class org/apache/jena/sparql/algebra/op/OpQuadPattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #1                  // class org/apache/jena/sparql/algebra/op/OpQuadPattern
      13: astore_3
      14: aload_0
      15: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
      18: aload_3
      19: getfield      #4                  // Field graphNode:Lorg/apache/jena/graph/Node;
      22: invokevirtual #26                 // Method org/apache/jena/graph/Node.equals:(Ljava/lang/Object;)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: getfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
      34: aload_3
      35: getfield      #5                  // Field triples:Lorg/apache/jena/sparql/core/BasicPattern;
      38: aload_2
      39: invokevirtual #27                 // Method org/apache/jena/sparql/core/BasicPattern.equiv:(Lorg/apache/jena/sparql/core/BasicPattern;Lorg/apache/jena/sparql/util/NodeIsomorphismMap;)Z
      42: ireturn
}
