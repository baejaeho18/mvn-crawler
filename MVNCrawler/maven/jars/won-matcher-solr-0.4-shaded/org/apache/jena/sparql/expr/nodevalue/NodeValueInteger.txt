Compiled from "NodeValueInteger.java"
public class org.apache.jena.sparql.expr.nodevalue.NodeValueInteger extends org.apache.jena.sparql.expr.NodeValue {
  java.math.BigInteger integer;

  public org.apache.jena.sparql.expr.nodevalue.NodeValueInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/jena/sparql/expr/NodeValue."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field integer:Ljava/math/BigInteger;
       9: return

  public org.apache.jena.sparql.expr.nodevalue.NodeValueInteger(java.math.BigInteger, org.apache.jena.graph.Node);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method org/apache/jena/sparql/expr/NodeValue."<init>":(Lorg/apache/jena/graph/Node;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field integer:Ljava/math/BigInteger;
      10: return

  public org.apache.jena.sparql.expr.nodevalue.NodeValueInteger(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/jena/sparql/expr/NodeValue."<init>":()V
       4: aload_0
       5: new           #4                  // class java/math/BigInteger
       8: dup
       9: lload_1
      10: invokestatic  #5                  // Method java/lang/Long.toString:(J)Ljava/lang/String;
      13: invokespecial #6                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      16: putfield      #2                  // Field integer:Ljava/math/BigInteger;
      19: return

  public boolean isNumber();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isInteger();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isDecimal();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isFloat();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isDouble();
    Code:
       0: iconst_1
       1: ireturn

  public java.math.BigInteger getInteger();
    Code:
       0: aload_0
       1: getfield      #2                  // Field integer:Ljava/math/BigInteger;
       4: areturn

  public double getDouble();
    Code:
       0: aload_0
       1: getfield      #2                  // Field integer:Ljava/math/BigInteger;
       4: invokevirtual #7                  // Method java/math/BigInteger.doubleValue:()D
       7: dreturn

  public float getFloat();
    Code:
       0: aload_0
       1: getfield      #2                  // Field integer:Ljava/math/BigInteger;
       4: invokevirtual #8                  // Method java/math/BigInteger.floatValue:()F
       7: freturn

  public java.math.BigDecimal getDecimal();
    Code:
       0: new           #9                  // class java/math/BigDecimal
       3: dup
       4: aload_0
       5: getfield      #2                  // Field integer:Ljava/math/BigInteger;
       8: invokespecial #10                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      11: areturn

  protected org.apache.jena.graph.Node makeNode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field integer:Ljava/math/BigInteger;
       4: invokevirtual #11                 // Method java/math/BigInteger.toString:()Ljava/lang/String;
       7: getstatic     #12                 // Field org/apache/jena/datatypes/xsd/XSDDatatype.XSDinteger:Lorg/apache/jena/datatypes/xsd/XSDDatatype;
      10: invokestatic  #13                 // Method org/apache/jena/graph/NodeFactory.createLiteral:(Ljava/lang/String;Lorg/apache/jena/datatypes/RDFDatatype;)Lorg/apache/jena/graph/Node;
      13: areturn

  public java.lang.String asString();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method toString:()Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getNode:()Lorg/apache/jena/graph/Node;
       4: ifnull        12
       7: aload_0
       8: invokespecial #16                 // Method org/apache/jena/sparql/expr/NodeValue.asString:()Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #2                  // Field integer:Ljava/math/BigInteger;
      16: invokevirtual #11                 // Method java/math/BigInteger.toString:()Ljava/lang/String;
      19: areturn

  public void visit(org.apache.jena.sparql.expr.nodevalue.NodeValueVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #17,  2           // InterfaceMethod org/apache/jena/sparql/expr/nodevalue/NodeValueVisitor.visit:(Lorg/apache/jena/sparql/expr/nodevalue/NodeValueInteger;)V
       7: return
}
