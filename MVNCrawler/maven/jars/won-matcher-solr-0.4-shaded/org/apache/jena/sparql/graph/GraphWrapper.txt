Compiled from "GraphWrapper.java"
public class org.apache.jena.sparql.graph.GraphWrapper implements org.apache.jena.graph.Graph {
  private final org.apache.jena.graph.Graph graph;

  public org.apache.jena.sparql.graph.GraphWrapper(org.apache.jena.graph.Graph);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       9: return

  public org.apache.jena.graph.Graph get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: areturn

  public void add(org.apache.jena.graph.Triple) throws org.apache.jena.shared.AddDeniedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod org/apache/jena/graph/Graph.add:(Lorg/apache/jena/graph/Triple;)V
      10: return

  public boolean dependsOn(org.apache.jena.graph.Graph);
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod org/apache/jena/graph/Graph.dependsOn:(Lorg/apache/jena/graph/Graph;)Z
      10: ireturn

  public org.apache.jena.graph.TransactionHandler getTransactionHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/jena/graph/Graph.getTransactionHandler:()Lorg/apache/jena/graph/TransactionHandler;
       9: areturn

  public org.apache.jena.graph.Capabilities getCapabilities();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/jena/graph/Graph.getCapabilities:()Lorg/apache/jena/graph/Capabilities;
       9: areturn

  public org.apache.jena.graph.GraphEventManager getEventManager();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/jena/graph/Graph.getEventManager:()Lorg/apache/jena/graph/GraphEventManager;
       9: areturn

  public org.apache.jena.graph.GraphStatisticsHandler getStatisticsHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #8,  1            // InterfaceMethod org/apache/jena/graph/Graph.getStatisticsHandler:()Lorg/apache/jena/graph/GraphStatisticsHandler;
       9: areturn

  public org.apache.jena.shared.PrefixMapping getPrefixMapping();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/jena/graph/Graph.getPrefixMapping:()Lorg/apache/jena/shared/PrefixMapping;
       9: areturn

  public void delete(org.apache.jena.graph.Triple) throws org.apache.jena.shared.DeleteDeniedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod org/apache/jena/graph/Graph.delete:(Lorg/apache/jena/graph/Triple;)V
      10: return

  public org.apache.jena.util.iterator.ExtendedIterator<org.apache.jena.graph.Triple> find(org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod org/apache/jena/graph/Graph.find:(Lorg/apache/jena/graph/Triple;)Lorg/apache/jena/util/iterator/ExtendedIterator;
      10: areturn

  public org.apache.jena.util.iterator.ExtendedIterator<org.apache.jena.graph.Triple> find(org.apache.jena.graph.Node, org.apache.jena.graph.Node, org.apache.jena.graph.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #12,  4           // InterfaceMethod org/apache/jena/graph/Graph.find:(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;)Lorg/apache/jena/util/iterator/ExtendedIterator;
      12: areturn

  public boolean isIsomorphicWith(org.apache.jena.graph.Graph);
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod org/apache/jena/graph/Graph.isIsomorphicWith:(Lorg/apache/jena/graph/Graph;)Z
      10: ireturn

  public boolean contains(org.apache.jena.graph.Node, org.apache.jena.graph.Node, org.apache.jena.graph.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #14,  4           // InterfaceMethod org/apache/jena/graph/Graph.contains:(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;)Z
      12: ireturn

  public boolean contains(org.apache.jena.graph.Triple);
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/apache/jena/graph/Graph.contains:(Lorg/apache/jena/graph/Triple;)Z
      10: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/jena/graph/Graph.close:()V
       9: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/jena/graph/Graph.isEmpty:()Z
       9: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/jena/graph/Graph.size:()I
       9: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/jena/graph/Graph.isClosed:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: invokeinterface #20,  1           // InterfaceMethod org/apache/jena/graph/Graph.clear:()V
       9: return

  public void remove(org.apache.jena.graph.Node, org.apache.jena.graph.Node, org.apache.jena.graph.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field graph:Lorg/apache/jena/graph/Graph;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #21,  4           // InterfaceMethod org/apache/jena/graph/Graph.remove:(Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;Lorg/apache/jena/graph/Node;)V
      12: return
}
