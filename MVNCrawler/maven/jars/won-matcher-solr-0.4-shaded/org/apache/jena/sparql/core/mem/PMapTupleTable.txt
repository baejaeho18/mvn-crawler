Compiled from "PMapTupleTable.java"
public abstract class org.apache.jena.sparql.core.mem.PMapTupleTable<TupleMapType, TupleType, ConsumerType> extends org.apache.jena.sparql.core.mem.OrderedTupleTable<TupleType, ConsumerType> implements org.apache.jena.sparql.core.mem.TupleTable<TupleType> {
  private final java.util.concurrent.atomic.AtomicReference<TupleMapType> master;

  private final java.lang.ThreadLocal<TupleMapType> local;

  private final java.lang.String tableName;

  protected abstract TupleMapType initial();

  protected java.util.concurrent.atomic.AtomicReference<TupleMapType> master();
    Code:
       0: aload_0
       1: getfield      #1                  // Field master:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  protected java.lang.ThreadLocal<TupleMapType> local();
    Code:
       0: aload_0
       1: getfield      #2                  // Field local:Ljava/lang/ThreadLocal;
       4: areturn

  public org.apache.jena.sparql.core.mem.PMapTupleTable(java.lang.String, org.apache.jena.atlas.lib.tuple.TupleMap);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method org/apache/jena/sparql/core/mem/OrderedTupleTable."<init>":(Lorg/apache/jena/atlas/lib/tuple/TupleMap;)V
       5: aload_0
       6: new           #4                  // class java/util/concurrent/atomic/AtomicReference
       9: dup
      10: aload_0
      11: invokevirtual #5                  // Method initial:()Ljava/lang/Object;
      14: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      17: putfield      #1                  // Field master:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: invokedynamic #7,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      26: invokestatic  #8                  // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
      29: putfield      #2                  // Field local:Ljava/lang/ThreadLocal;
      32: aload_0
      33: aload_1
      34: putfield      #9                  // Field tableName:Ljava/lang/String;
      37: return

  protected abstract org.slf4j.Logger log();

  protected void debug(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method log:()Lorg/slf4j/Logger;
       4: invokeinterface #11,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          48
      12: aload_0
      13: invokevirtual #10                 // Method log:()Lorg/slf4j/Logger;
      16: new           #12                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_0
      24: getfield      #9                  // Field tableName:Ljava/lang/String;
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #15                 // String :
      32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: aload_2
      43: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      48: return

  public void begin(org.apache.jena.query.ReadWrite);
    Code:
       0: aload_0
       1: getfield      #2                  // Field local:Ljava/lang/ThreadLocal;
       4: aload_0
       5: invokevirtual #18                 // Method master:()Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: invokevirtual #20                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      14: return

  public void end();
    Code:
       0: aload_0
       1: ldc           #21                 // String Abandoning transactional reference.
       3: iconst_0
       4: anewarray     #22                 // class java/lang/Object
       7: invokevirtual #23                 // Method debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #2                  // Field local:Ljava/lang/ThreadLocal;
      14: invokevirtual #24                 // Method java/lang/ThreadLocal.remove:()V
      17: return

  public void commit();
    Code:
       0: aload_0
       1: ldc           #25                 // String Swapping transactional reference in for shared reference
       3: iconst_0
       4: anewarray     #22                 // class java/lang/Object
       7: invokevirtual #23                 // Method debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #18                 // Method master:()Ljava/util/concurrent/atomic/AtomicReference;
      14: aload_0
      15: getfield      #2                  // Field local:Ljava/lang/ThreadLocal;
      18: invokevirtual #26                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      21: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      24: aload_0
      25: invokevirtual #28                 // Method end:()V
      28: return

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method local:()Ljava/lang/ThreadLocal;
       4: aload_0
       5: invokevirtual #5                  // Method initial:()Ljava/lang/Object;
       8: invokevirtual #20                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      11: return

  protected boolean isConcrete(org.apache.jena.graph.Node);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: invokevirtual #30                 // Method org/apache/jena/graph/Node.isConcrete:()Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static java.lang.Object lambda$new$0();
    Code:
       0: aconst_null
       1: areturn
}
