Compiled from "OpGraph.java"
public class org.apache.jena.sparql.algebra.op.OpGraph extends org.apache.jena.sparql.algebra.op.Op1 {
  private final org.apache.jena.graph.Node node;

  public org.apache.jena.sparql.algebra.op.OpGraph(org.apache.jena.graph.Node, org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/apache/jena/sparql/algebra/op/Op1."<init>":(Lorg/apache/jena/sparql/algebra/Op;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field node:Lorg/apache/jena/graph/Node;
      10: return

  public org.apache.jena.graph.Node getNode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/apache/jena/graph/Node;
       4: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #4                  // String graph
       2: areturn

  public org.apache.jena.sparql.algebra.Op apply(org.apache.jena.sparql.algebra.Transform, org.apache.jena.sparql.algebra.Op);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #5,  3            // InterfaceMethod org/apache/jena/sparql/algebra/Transform.transform:(Lorg/apache/jena/sparql/algebra/op/OpGraph;Lorg/apache/jena/sparql/algebra/Op;)Lorg/apache/jena/sparql/algebra/Op;
       8: areturn

  public void visit(org.apache.jena.sparql.algebra.OpVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #6,  2            // InterfaceMethod org/apache/jena/sparql/algebra/OpVisitor.visit:(Lorg/apache/jena/sparql/algebra/op/OpGraph;)V
       7: return

  public org.apache.jena.sparql.algebra.op.Op1 copy(org.apache.jena.sparql.algebra.Op);
    Code:
       0: new           #7                  // class org/apache/jena/sparql/algebra/op/OpGraph
       3: dup
       4: aload_0
       5: getfield      #2                  // Field node:Lorg/apache/jena/graph/Node;
       8: aload_1
       9: invokespecial #8                  // Method "<init>":(Lorg/apache/jena/graph/Node;Lorg/apache/jena/sparql/algebra/Op;)V
      12: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/apache/jena/graph/Node;
       4: invokevirtual #9                  // Method org/apache/jena/graph/Node.hashCode:()I
       7: aload_0
       8: invokevirtual #10                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      11: invokevirtual #11                 // Method java/lang/Object.hashCode:()I
      14: ixor
      15: ireturn

  public boolean equalTo(org.apache.jena.sparql.algebra.Op, org.apache.jena.sparql.util.NodeIsomorphismMap);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/apache/jena/sparql/algebra/op/OpGraph
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #7                  // class org/apache/jena/sparql/algebra/op/OpGraph
      13: astore_3
      14: aload_0
      15: getfield      #2                  // Field node:Lorg/apache/jena/graph/Node;
      18: aload_3
      19: getfield      #2                  // Field node:Lorg/apache/jena/graph/Node;
      22: invokevirtual #12                 // Method org/apache/jena/graph/Node.equals:(Ljava/lang/Object;)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: invokevirtual #10                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      34: aload_3
      35: invokevirtual #10                 // Method getSubOp:()Lorg/apache/jena/sparql/algebra/Op;
      38: aload_2
      39: invokeinterface #13,  3           // InterfaceMethod org/apache/jena/sparql/algebra/Op.equalTo:(Lorg/apache/jena/sparql/algebra/Op;Lorg/apache/jena/sparql/util/NodeIsomorphismMap;)Z
      44: ireturn
}
