Compiled from "XSDBaseNumericType.java"
public class org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType extends org.apache.jena.datatypes.xsd.XSDDatatype {
  private static final java.math.BigInteger ten;

  private static final int QUOT;

  private static final int REM;

  public org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/jena/datatypes/xsd/XSDDatatype."<init>":(Ljava/lang/String;)V
       5: return

  public org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/jena/datatypes/xsd/XSDDatatype."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
       6: return

  public boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isBaseTypeCompatible:(Lorg/apache/jena/graph/impl/LiteralLabel;)Z
       5: ifeq          56
       8: aload_1
       9: invokeinterface #4,  1            // InterfaceMethod org/apache/jena/graph/impl/LiteralLabel.getLexicalForm:()Ljava/lang/String;
      14: astore_2
      15: getstatic     #5                  // Field org/apache/jena/shared/impl/JenaParameters.enableWhitespaceCheckingOfTypedLiterals:Z
      18: ifeq          45
      21: aload_2
      22: invokevirtual #6                  // Method java/lang/String.trim:()Ljava/lang/String;
      25: aload_2
      26: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          43
      32: aload_0
      33: aload_1
      34: invokeinterface #4,  1            // InterfaceMethod org/apache/jena/graph/impl/LiteralLabel.getLexicalForm:()Ljava/lang/String;
      39: invokevirtual #8                  // Method isValid:(Ljava/lang/String;)Z
      42: ireturn
      43: iconst_0
      44: ireturn
      45: aload_0
      46: aload_1
      47: invokeinterface #4,  1            // InterfaceMethod org/apache/jena/graph/impl/LiteralLabel.getLexicalForm:()Ljava/lang/String;
      52: invokevirtual #8                  // Method isValid:(Ljava/lang/String;)Z
      55: ireturn
      56: iconst_0
      57: ireturn

  public boolean isValidValue(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #9                  // class java/lang/Number
       4: ifeq          17
       7: aload_0
       8: aload_0
       9: aload_1
      10: invokevirtual #10                 // Method unparse:(Ljava/lang/Object;)Ljava/lang/String;
      13: invokevirtual #8                  // Method isValid:(Ljava/lang/String;)Z
      16: ireturn
      17: iconst_0
      18: ireturn

  public java.lang.Object cannonicalise(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #11                 // class java/math/BigInteger
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #11                 // class java/math/BigInteger
      12: invokespecial #12                 // Method cannonicalizeInteger:(Ljava/math/BigInteger;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: instanceof    #13                 // class java/math/BigDecimal
      20: ifeq          32
      23: aload_0
      24: aload_1
      25: checkcast     #13                 // class java/math/BigDecimal
      28: invokespecial #14                 // Method cannonicalizeDecimal:(Ljava/math/BigDecimal;)Ljava/lang/Object;
      31: areturn
      32: aload_1
      33: checkcast     #9                  // class java/lang/Number
      36: invokevirtual #15                 // Method java/lang/Number.longValue:()J
      39: invokestatic  #16                 // Method suitableInteger:(J)Ljava/lang/Number;
      42: areturn

  private java.lang.Object cannonicalizeDecimal(java.math.BigDecimal);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method java/math/BigDecimal.scale:()I
       4: ifle          98
       7: aload_1
       8: invokevirtual #18                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      11: astore_2
      12: aload_1
      13: invokevirtual #17                 // Method java/math/BigDecimal.scale:()I
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iconst_0
      21: istore        4
      23: iload         4
      25: iload_3
      26: if_icmpge     62
      29: aload_2
      30: getstatic     #19                 // Field ten:Ljava/math/BigInteger;
      33: invokevirtual #20                 // Method java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      36: astore        5
      38: aload         5
      40: iconst_1
      41: aaload
      42: invokevirtual #22                 // Method java/math/BigInteger.intValue:()I
      45: ifeq          51
      48: goto          62
      51: aload         5
      53: iconst_0
      54: aaload
      55: astore_2
      56: iinc          4, 1
      59: goto          23
      62: iload         4
      64: ifle          96
      67: new           #13                 // class java/math/BigDecimal
      70: dup
      71: aload_2
      72: iload_3
      73: iload         4
      75: isub
      76: invokespecial #23                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
      79: astore_1
      80: aload_1
      81: invokevirtual #17                 // Method java/math/BigDecimal.scale:()I
      84: ifgt          96
      87: aload_0
      88: aload_1
      89: invokevirtual #24                 // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      92: invokespecial #12                 // Method cannonicalizeInteger:(Ljava/math/BigInteger;)Ljava/lang/Object;
      95: areturn
      96: aload_1
      97: areturn
      98: aload_0
      99: aload_1
     100: invokevirtual #24                 // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
     103: invokespecial #12                 // Method cannonicalizeInteger:(Ljava/math/BigInteger;)Ljava/lang/Object;
     106: areturn

  private java.lang.Object cannonicalizeInteger(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method java/math/BigInteger.bitLength:()I
       4: bipush        63
       6: if_icmple     11
       9: aload_1
      10: areturn
      11: aload_1
      12: invokevirtual #26                 // Method java/math/BigInteger.longValue:()J
      15: invokestatic  #16                 // Method suitableInteger:(J)Ljava/lang/Number;
      18: areturn

  public java.lang.Object parse(java.lang.String) throws org.apache.jena.datatypes.DatatypeFormatException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method checkWhitespace:(Ljava/lang/String;)V
       5: aload_0
       6: aload_1
       7: invokespecial #28                 // Method org/apache/jena/datatypes/xsd/XSDDatatype.parse:(Ljava/lang/String;)Ljava/lang/Object;
      10: areturn

  public java.lang.String unparse(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #13                 // class java/math/BigDecimal
       4: ifeq          15
       7: aload_1
       8: checkcast     #13                 // class java/math/BigDecimal
      11: invokevirtual #29                 // Method java/math/BigDecimal.toPlainString:()Ljava/lang/String;
      14: areturn
      15: aload_1
      16: invokevirtual #30                 // Method java/lang/Object.toString:()Ljava/lang/String;
      19: areturn

  protected void checkWhitespace(java.lang.String);
    Code:
       0: getstatic     #5                  // Field org/apache/jena/shared/impl/JenaParameters.enableWhitespaceCheckingOfTypedLiterals:Z
       3: ifeq          29
       6: aload_1
       7: invokevirtual #6                  // Method java/lang/String.trim:()Ljava/lang/String;
      10: aload_1
      11: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifne          29
      17: new           #31                 // class org/apache/jena/datatypes/DatatypeFormatException
      20: dup
      21: aload_1
      22: aload_0
      23: ldc           #32                 // String whitespace violation
      25: invokespecial #33                 // Method org/apache/jena/datatypes/DatatypeFormatException."<init>":(Ljava/lang/String;Lorg/apache/jena/datatypes/RDFDatatype;Ljava/lang/String;)V
      28: athrow
      29: return

  public boolean isEqual(org.apache.jena.graph.impl.LiteralLabel, org.apache.jena.graph.impl.LiteralLabel);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod org/apache/jena/graph/impl/LiteralLabel.getDatatype:()Lorg/apache/jena/datatypes/RDFDatatype;
       6: instanceof    #21                 // class org/apache/jena/datatypes/xsd/impl/XSDBaseNumericType
       9: ifeq          88
      12: aload_2
      13: invokeinterface #34,  1           // InterfaceMethod org/apache/jena/graph/impl/LiteralLabel.getDatatype:()Lorg/apache/jena/datatypes/RDFDatatype;
      18: instanceof    #21                 // class org/apache/jena/datatypes/xsd/impl/XSDBaseNumericType
      21: ifeq          88
      24: aload_1
      25: invokeinterface #35,  1           // InterfaceMethod org/apache/jena/graph/impl/LiteralLabel.getValue:()Ljava/lang/Object;
      30: checkcast     #9                  // class java/lang/Number
      33: astore_3
      34: aload_2
      35: invokeinterface #35,  1           // InterfaceMethod org/apache/jena/graph/impl/LiteralLabel.getValue:()Ljava/lang/Object;
      40: checkcast     #9                  // class java/lang/Number
      43: astore        4
      45: aload_3
      46: instanceof    #13                 // class java/math/BigDecimal
      49: ifeq          81
      52: aload         4
      54: instanceof    #13                 // class java/math/BigDecimal
      57: ifeq          81
      60: aload_3
      61: checkcast     #13                 // class java/math/BigDecimal
      64: aload         4
      66: checkcast     #13                 // class java/math/BigDecimal
      69: invokevirtual #36                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      72: ifne          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn
      81: aload_3
      82: aload         4
      84: invokevirtual #37                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ireturn
      88: iconst_0
      89: ireturn

  static {};
    Code:
       0: new           #11                 // class java/math/BigInteger
       3: dup
       4: ldc           #38                 // String 10
       6: invokespecial #39                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
       9: putstatic     #19                 // Field ten:Ljava/math/BigInteger;
      12: return
}
