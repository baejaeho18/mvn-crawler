Compiled from "AbstractDateTime.java"
public class org.apache.jena.datatypes.xsd.AbstractDateTime implements java.lang.Comparable<org.apache.jena.datatypes.xsd.AbstractDateTime> {
  protected int[] data;

  protected double fractionalSeconds;

  protected static final int CY;

  protected static final int M;

  protected static final int D;

  protected static final int h;

  protected static final int m;

  protected static final int s;

  protected static final int ms;

  protected static final int utc;

  protected static final int msscale;

  protected static final int hh;

  protected static final int mm;

  protected static final int TOTAL_SIZE;

  protected static final int COMPARABLE_SUBSET;

  public static final short LESS_THAN;

  public static final short EQUAL;

  public static final short GREATER_THAN;

  public static final short INDETERMINATE;

  public org.apache.jena.datatypes.xsd.AbstractDateTime(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: checkcast     #2                  // class "[I"
       9: checkcast     #2                  // class "[I"
      12: putfield      #3                  // Field data:[I
      15: aload_0
      16: invokevirtual #4                  // Method extractFractionalSeconds:()V
      19: return

  public int compare(org.apache.jena.datatypes.xsd.AbstractDateTime);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field data:[I
       5: aload_1
       6: getfield      #3                  // Field data:[I
       9: iconst_1
      10: invokevirtual #5                  // Method compareValues:([I[IZ)S
      13: ireturn

  public int compareTo(org.apache.jena.datatypes.xsd.AbstractDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method compare:(Lorg/apache/jena/datatypes/xsd/AbstractDateTime;)I
       5: tableswitch   { // -1 to 2
                    -1: 38
                     0: 36
                     1: 40
                     2: 36
               default: 42
          }
      36: iconst_0
      37: ireturn
      38: iconst_m1
      39: ireturn
      40: iconst_1
      41: ireturn
      42: iconst_0
      43: ireturn

  protected void extractFractionalSeconds();
    Code:
       0: aload_0
       1: dconst_0
       2: putfield      #7                  // Field fractionalSeconds:D
       5: aload_0
       6: getfield      #3                  // Field data:[I
       9: bipush        6
      11: iaload
      12: ifeq          44
      15: aload_0
      16: getfield      #3                  // Field data:[I
      19: bipush        6
      21: iaload
      22: istore_1
      23: aload_0
      24: iload_1
      25: i2d
      26: ldc2_w        #9                  // double 10.0d
      29: aload_0
      30: getfield      #3                  // Field data:[I
      33: bipush        8
      35: iaload
      36: i2d
      37: invokestatic  #11                 // Method java/lang/Math.pow:(DD)D
      40: ddiv
      41: putfield      #7                  // Field fractionalSeconds:D
      44: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/apache/jena/datatypes/xsd/AbstractDateTime
       4: ifeq          48
       7: aload_1
       8: checkcast     #8                  // class org/apache/jena/datatypes/xsd/AbstractDateTime
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: aload_0
      16: getfield      #3                  // Field data:[I
      19: arraylength
      20: if_icmpge     46
      23: aload_0
      24: getfield      #3                  // Field data:[I
      27: iload_3
      28: iaload
      29: aload_2
      30: getfield      #3                  // Field data:[I
      33: iload_3
      34: iaload
      35: if_icmpeq     40
      38: iconst_0
      39: ireturn
      40: iinc          3, 1
      43: goto          14
      46: iconst_1
      47: ireturn
      48: iconst_0
      49: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #3                  // Field data:[I
      13: invokestatic  #12                 // Method java/util/Arrays.hashCode:([I)I
      16: iadd
      17: istore_2
      18: iload_2
      19: ireturn

  protected short compareValues(int[], int[], boolean);
    Code:
       0: aload_1
       1: bipush        7
       3: iaload
       4: aload_2
       5: bipush        7
       7: iaload
       8: if_icmpne     18
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokevirtual #13                 // Method compareOrder:([I[I)S
      17: ireturn
      18: bipush        9
      20: newarray       int
      22: astore        6
      24: iconst_2
      25: newarray       int
      27: astore        7
      29: aload_1
      30: bipush        7
      32: iaload
      33: bipush        90
      35: if_icmpne     140
      38: aload_0
      39: aload_2
      40: aload         6
      42: invokespecial #14                 // Method cloneDate:([I[I)V
      45: aload         7
      47: iconst_0
      48: bipush        14
      50: iastore
      51: aload         7
      53: iconst_1
      54: iconst_0
      55: iastore
      56: aload         6
      58: bipush        7
      60: bipush        43
      62: iastore
      63: aload         6
      65: aload         7
      67: invokestatic  #15                 // Method normalize:([I[I)V
      70: aload_0
      71: aload_1
      72: aload         6
      74: invokevirtual #13                 // Method compareOrder:([I[I)S
      77: istore        4
      79: iload         4
      81: iconst_m1
      82: if_icmpne     88
      85: iload         4
      87: ireturn
      88: aload_0
      89: aload_2
      90: aload         6
      92: invokespecial #14                 // Method cloneDate:([I[I)V
      95: aload         7
      97: iconst_0
      98: bipush        14
     100: iastore
     101: aload         7
     103: iconst_1
     104: iconst_0
     105: iastore
     106: aload         6
     108: bipush        7
     110: bipush        45
     112: iastore
     113: aload         6
     115: aload         7
     117: invokestatic  #15                 // Method normalize:([I[I)V
     120: aload_0
     121: aload_1
     122: aload         6
     124: invokevirtual #13                 // Method compareOrder:([I[I)S
     127: istore        5
     129: iload         5
     131: iconst_1
     132: if_icmpne     138
     135: iload         5
     137: ireturn
     138: iconst_2
     139: ireturn
     140: aload_2
     141: bipush        7
     143: iaload
     144: bipush        90
     146: if_icmpne     251
     149: aload_0
     150: aload_1
     151: aload         6
     153: invokespecial #14                 // Method cloneDate:([I[I)V
     156: aload         7
     158: iconst_0
     159: bipush        14
     161: iastore
     162: aload         7
     164: iconst_1
     165: iconst_0
     166: iastore
     167: aload         6
     169: bipush        7
     171: bipush        45
     173: iastore
     174: aload         6
     176: aload         7
     178: invokestatic  #15                 // Method normalize:([I[I)V
     181: aload_0
     182: aload         6
     184: aload_2
     185: invokevirtual #13                 // Method compareOrder:([I[I)S
     188: istore        4
     190: iload         4
     192: iconst_m1
     193: if_icmpne     199
     196: iload         4
     198: ireturn
     199: aload_0
     200: aload_1
     201: aload         6
     203: invokespecial #14                 // Method cloneDate:([I[I)V
     206: aload         7
     208: iconst_0
     209: bipush        14
     211: iastore
     212: aload         7
     214: iconst_1
     215: iconst_0
     216: iastore
     217: aload         6
     219: bipush        7
     221: bipush        43
     223: iastore
     224: aload         6
     226: aload         7
     228: invokestatic  #15                 // Method normalize:([I[I)V
     231: aload_0
     232: aload         6
     234: aload_2
     235: invokevirtual #13                 // Method compareOrder:([I[I)S
     238: istore        5
     240: iload         5
     242: iconst_1
     243: if_icmpne     249
     246: iload         5
     248: ireturn
     249: iconst_2
     250: ireturn
     251: iconst_2
     252: ireturn

  protected short compareOrder(int[], int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        6
       5: if_icmpge     36
       8: aload_1
       9: iload_3
      10: iaload
      11: aload_2
      12: iload_3
      13: iaload
      14: if_icmpge     19
      17: iconst_m1
      18: ireturn
      19: aload_1
      20: iload_3
      21: iaload
      22: aload_2
      23: iload_3
      24: iaload
      25: if_icmple     30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          2
      36: aload_1
      37: bipush        8
      39: iaload
      40: aload_2
      41: bipush        8
      43: iaload
      44: invokestatic  #16                 // Method java/lang/Math.max:(II)I
      47: istore_3
      48: aload_0
      49: aload_1
      50: bipush        6
      52: iaload
      53: aload_1
      54: bipush        8
      56: iaload
      57: iload_3
      58: invokespecial #17                 // Method scale:(III)I
      61: istore        4
      63: aload_0
      64: aload_2
      65: bipush        6
      67: iaload
      68: aload_2
      69: bipush        8
      71: iaload
      72: iload_3
      73: invokespecial #17                 // Method scale:(III)I
      76: istore        5
      78: iload         4
      80: iload         5
      82: if_icmpge     87
      85: iconst_m1
      86: ireturn
      87: iload         4
      89: iload         5
      91: if_icmple     96
      94: iconst_1
      95: ireturn
      96: iconst_0
      97: ireturn

  private int scale(int, int, int);
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     20
       9: iload_1
      10: bipush        10
      12: imul
      13: istore_1
      14: iinc          4, 1
      17: goto          3
      20: iload_1
      21: ireturn

  public static void normalize(int[], int[]);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: bipush        7
       5: iaload
       6: bipush        43
       8: if_icmpne     13
      11: iconst_m1
      12: istore_2
      13: aload_0
      14: iconst_4
      15: iaload
      16: iload_2
      17: aload_1
      18: iconst_1
      19: iaload
      20: imul
      21: iadd
      22: istore_3
      23: iload_3
      24: bipush        60
      26: invokestatic  #18                 // Method fQuotient:(II)I
      29: istore        4
      31: aload_0
      32: iconst_4
      33: iload_3
      34: bipush        60
      36: iload         4
      38: invokestatic  #19                 // Method mod:(III)I
      41: iastore
      42: aload_0
      43: iconst_3
      44: iaload
      45: iload_2
      46: aload_1
      47: iconst_0
      48: iaload
      49: imul
      50: iadd
      51: iload         4
      53: iadd
      54: istore_3
      55: iload_3
      56: bipush        24
      58: invokestatic  #18                 // Method fQuotient:(II)I
      61: istore        4
      63: aload_0
      64: iconst_3
      65: iload_3
      66: bipush        24
      68: iload         4
      70: invokestatic  #19                 // Method mod:(III)I
      73: iastore
      74: aload_0
      75: iconst_2
      76: aload_0
      77: iconst_2
      78: iaload
      79: iload         4
      81: iadd
      82: iastore
      83: aload_0
      84: iconst_0
      85: iaload
      86: aload_0
      87: iconst_1
      88: iaload
      89: invokestatic  #20                 // Method maxDayInMonthFor:(II)I
      92: istore_3
      93: aload_0
      94: iconst_2
      95: iaload
      96: iconst_1
      97: if_icmpge     124
     100: aload_0
     101: iconst_2
     102: aload_0
     103: iconst_2
     104: iaload
     105: aload_0
     106: iconst_0
     107: iaload
     108: aload_0
     109: iconst_1
     110: iaload
     111: iconst_1
     112: isub
     113: invokestatic  #20                 // Method maxDayInMonthFor:(II)I
     116: iadd
     117: iastore
     118: iconst_m1
     119: istore        4
     121: goto          142
     124: aload_0
     125: iconst_2
     126: iaload
     127: iload_3
     128: if_icmple     176
     131: aload_0
     132: iconst_2
     133: aload_0
     134: iconst_2
     135: iaload
     136: iload_3
     137: isub
     138: iastore
     139: iconst_1
     140: istore        4
     142: aload_0
     143: iconst_1
     144: iaload
     145: iload         4
     147: iadd
     148: istore_3
     149: aload_0
     150: iconst_1
     151: iload_3
     152: iconst_1
     153: bipush        13
     155: invokestatic  #21                 // Method modulo:(III)I
     158: iastore
     159: aload_0
     160: iconst_0
     161: aload_0
     162: iconst_0
     163: iaload
     164: iload_3
     165: iconst_1
     166: bipush        13
     168: invokestatic  #22                 // Method fQuotient:(III)I
     171: iadd
     172: iastore
     173: goto          83
     176: aload_0
     177: bipush        7
     179: bipush        90
     181: iastore
     182: return

  protected void resetDateObj(int[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        9
       5: if_icmpge     18
       8: aload_1
       9: iload_2
      10: iconst_0
      11: iastore
      12: iinc          2, 1
      15: goto          2
      18: return

  protected static int maxDayInMonthFor(int, int);
    Code:
       0: iload_1
       1: iconst_4
       2: if_icmpeq     23
       5: iload_1
       6: bipush        6
       8: if_icmpeq     23
      11: iload_1
      12: bipush        9
      14: if_icmpeq     23
      17: iload_1
      18: bipush        11
      20: if_icmpne     26
      23: bipush        30
      25: ireturn
      26: iload_1
      27: iconst_2
      28: if_icmpne     44
      31: iload_0
      32: invokestatic  #23                 // Method isLeapYear:(I)Z
      35: ifeq          41
      38: bipush        29
      40: ireturn
      41: bipush        28
      43: ireturn
      44: bipush        31
      46: ireturn

  private static boolean isLeapYear(int);
    Code:
       0: iload_0
       1: iconst_4
       2: irem
       3: ifne          25
       6: iload_0
       7: bipush        100
       9: irem
      10: ifne          21
      13: iload_0
      14: sipush        400
      17: irem
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected static int mod(int, int, int);
    Code:
       0: iload_0
       1: iload_2
       2: iload_1
       3: imul
       4: isub
       5: ireturn

  protected static int fQuotient(int, int);
    Code:
       0: iload_0
       1: i2f
       2: iload_1
       3: i2f
       4: fdiv
       5: f2d
       6: invokestatic  #24                 // Method java/lang/Math.floor:(D)D
       9: d2i
      10: ireturn

  protected static int modulo(int, int, int);
    Code:
       0: iload_0
       1: iload_1
       2: isub
       3: istore_3
       4: iload_2
       5: iload_1
       6: isub
       7: istore        4
       9: iload_3
      10: iload         4
      12: iload_3
      13: iload         4
      15: invokestatic  #18                 // Method fQuotient:(II)I
      18: invokestatic  #19                 // Method mod:(III)I
      21: iload_1
      22: iadd
      23: ireturn

  protected static int fQuotient(int, int, int);
    Code:
       0: iload_0
       1: iload_1
       2: isub
       3: iload_2
       4: iload_1
       5: isub
       6: invokestatic  #18                 // Method fQuotient:(II)I
       9: ireturn

  private void cloneDate(int[], int[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_2
       3: iconst_0
       4: bipush        9
       6: invokestatic  #25                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       9: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class org/apache/jena/datatypes/xsd/AbstractDateTime
       5: invokevirtual #26                 // Method compareTo:(Lorg/apache/jena/datatypes/xsd/AbstractDateTime;)I
       8: ireturn
}
