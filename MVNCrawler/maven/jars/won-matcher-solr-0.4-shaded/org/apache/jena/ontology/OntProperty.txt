Compiled from "OntProperty.java"
public interface org.apache.jena.ontology.OntProperty extends org.apache.jena.ontology.OntResource,org.apache.jena.rdf.model.Property {
  public abstract void setSuperProperty(org.apache.jena.rdf.model.Property);

  public abstract void addSuperProperty(org.apache.jena.rdf.model.Property);

  public abstract org.apache.jena.ontology.OntProperty getSuperProperty();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntProperty> listSuperProperties();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntProperty> listSuperProperties(boolean);

  public abstract boolean hasSuperProperty(org.apache.jena.rdf.model.Property, boolean);

  public abstract void removeSuperProperty(org.apache.jena.rdf.model.Property);

  public abstract void setSubProperty(org.apache.jena.rdf.model.Property);

  public abstract void addSubProperty(org.apache.jena.rdf.model.Property);

  public abstract org.apache.jena.ontology.OntProperty getSubProperty();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntProperty> listSubProperties();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntProperty> listSubProperties(boolean);

  public abstract boolean hasSubProperty(org.apache.jena.rdf.model.Property, boolean);

  public abstract void removeSubProperty(org.apache.jena.rdf.model.Property);

  public abstract void setDomain(org.apache.jena.rdf.model.Resource);

  public abstract void addDomain(org.apache.jena.rdf.model.Resource);

  public abstract org.apache.jena.ontology.OntResource getDomain();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntResource> listDomain();

  public abstract boolean hasDomain(org.apache.jena.rdf.model.Resource);

  public abstract void removeDomain(org.apache.jena.rdf.model.Resource);

  public abstract void setRange(org.apache.jena.rdf.model.Resource);

  public abstract void addRange(org.apache.jena.rdf.model.Resource);

  public abstract org.apache.jena.ontology.OntResource getRange();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntResource> listRange();

  public abstract boolean hasRange(org.apache.jena.rdf.model.Resource);

  public abstract void removeRange(org.apache.jena.rdf.model.Resource);

  public abstract void setEquivalentProperty(org.apache.jena.rdf.model.Property);

  public abstract void addEquivalentProperty(org.apache.jena.rdf.model.Property);

  public abstract org.apache.jena.ontology.OntProperty getEquivalentProperty();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntProperty> listEquivalentProperties();

  public abstract boolean hasEquivalentProperty(org.apache.jena.rdf.model.Property);

  public abstract void removeEquivalentProperty(org.apache.jena.rdf.model.Property);

  public abstract void setInverseOf(org.apache.jena.rdf.model.Property);

  public abstract void addInverseOf(org.apache.jena.rdf.model.Property);

  public abstract org.apache.jena.ontology.OntProperty getInverseOf();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntProperty> listInverseOf();

  public abstract boolean isInverseOf(org.apache.jena.rdf.model.Property);

  public abstract void removeInverseProperty(org.apache.jena.rdf.model.Property);

  public abstract org.apache.jena.ontology.FunctionalProperty asFunctionalProperty();

  public abstract org.apache.jena.ontology.DatatypeProperty asDatatypeProperty();

  public abstract org.apache.jena.ontology.ObjectProperty asObjectProperty();

  public abstract org.apache.jena.ontology.TransitiveProperty asTransitiveProperty();

  public abstract org.apache.jena.ontology.InverseFunctionalProperty asInverseFunctionalProperty();

  public abstract org.apache.jena.ontology.SymmetricProperty asSymmetricProperty();

  public abstract org.apache.jena.ontology.FunctionalProperty convertToFunctionalProperty();

  public abstract org.apache.jena.ontology.DatatypeProperty convertToDatatypeProperty();

  public abstract org.apache.jena.ontology.ObjectProperty convertToObjectProperty();

  public abstract org.apache.jena.ontology.TransitiveProperty convertToTransitiveProperty();

  public abstract org.apache.jena.ontology.InverseFunctionalProperty convertToInverseFunctionalProperty();

  public abstract org.apache.jena.ontology.SymmetricProperty convertToSymmetricProperty();

  public abstract boolean isFunctionalProperty();

  public abstract boolean isDatatypeProperty();

  public abstract boolean isObjectProperty();

  public abstract boolean isTransitiveProperty();

  public abstract boolean isInverseFunctionalProperty();

  public abstract boolean isSymmetricProperty();

  public abstract org.apache.jena.ontology.OntProperty getInverse();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntProperty> listInverse();

  public abstract boolean hasInverse();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntClass> listDeclaringClasses();

  public abstract org.apache.jena.util.iterator.ExtendedIterator<? extends org.apache.jena.ontology.OntClass> listDeclaringClasses(boolean);

  public abstract org.apache.jena.util.iterator.ExtendedIterator<org.apache.jena.ontology.Restriction> listReferringRestrictions();
}
