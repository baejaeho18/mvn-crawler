Compiled from "ShortStack.java"
public class org.apache.thrift.ShortStack {
  private short[] vector;

  private int top;

  public org.apache.thrift.ShortStack(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field top:I
       9: aload_0
      10: iload_1
      11: newarray       short
      13: putfield      #3                  // Field vector:[S
      16: return

  public short pop();
    Code:
       0: aload_0
       1: getfield      #3                  // Field vector:[S
       4: aload_0
       5: dup
       6: getfield      #2                  // Field top:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #2                  // Field top:I
      15: saload
      16: ireturn

  public void push(short);
    Code:
       0: aload_0
       1: getfield      #3                  // Field vector:[S
       4: arraylength
       5: aload_0
       6: getfield      #2                  // Field top:I
       9: iconst_1
      10: iadd
      11: if_icmpne     18
      14: aload_0
      15: invokespecial #4                  // Method grow:()V
      18: aload_0
      19: getfield      #3                  // Field vector:[S
      22: aload_0
      23: dup
      24: getfield      #2                  // Field top:I
      27: iconst_1
      28: iadd
      29: dup_x1
      30: putfield      #2                  // Field top:I
      33: iload_1
      34: sastore
      35: return

  private void grow();
    Code:
       0: aload_0
       1: getfield      #3                  // Field vector:[S
       4: arraylength
       5: iconst_2
       6: imul
       7: newarray       short
       9: astore_1
      10: aload_0
      11: getfield      #3                  // Field vector:[S
      14: iconst_0
      15: aload_1
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field vector:[S
      21: arraylength
      22: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_0
      26: aload_1
      27: putfield      #3                  // Field vector:[S
      30: return

  public short peek();
    Code:
       0: aload_0
       1: getfield      #3                  // Field vector:[S
       4: aload_0
       5: getfield      #2                  // Field top:I
       8: saload
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #2                  // Field top:I
       5: return

  public java.lang.String toString();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #8                  // String <ShortStack vector:[
      11: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: getfield      #3                  // Field vector:[S
      22: arraylength
      23: if_icmpge     84
      26: iload_2
      27: ifeq          37
      30: aload_1
      31: ldc           #10                 // String
      33: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: iload_2
      38: aload_0
      39: getfield      #2                  // Field top:I
      42: if_icmpne     52
      45: aload_1
      46: ldc           #11                 // String >>
      48: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: aload_0
      54: getfield      #3                  // Field vector:[S
      57: iload_2
      58: saload
      59: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: pop
      63: iload_2
      64: aload_0
      65: getfield      #2                  // Field top:I
      68: if_icmpne     78
      71: aload_1
      72: ldc           #13                 // String <<
      74: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: iinc          2, 1
      81: goto          17
      84: aload_1
      85: ldc           #14                 // String ]>
      87: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: areturn
}
