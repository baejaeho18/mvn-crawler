Compiled from "FieldMetaData.java"
public class org.apache.thrift.meta_data.FieldMetaData implements java.io.Serializable {
  public final java.lang.String fieldName;

  public final byte requirementType;

  public final org.apache.thrift.meta_data.FieldValueMetaData valueMetaData;

  private static java.util.Map<java.lang.Class<? extends org.apache.thrift.TBase>, java.util.Map<? extends org.apache.thrift.TFieldIdEnum, org.apache.thrift.meta_data.FieldMetaData>> structMap;

  public org.apache.thrift.meta_data.FieldMetaData(java.lang.String, byte, org.apache.thrift.meta_data.FieldValueMetaData);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field fieldName:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field requirementType:B
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field valueMetaData:Lorg/apache/thrift/meta_data/FieldValueMetaData;
      19: return

  public static synchronized void addStructMetaDataMap(java.lang.Class<? extends org.apache.thrift.TBase>, java.util.Map<? extends org.apache.thrift.TFieldIdEnum, org.apache.thrift.meta_data.FieldMetaData>);
    Code:
       0: getstatic     #5                  // Field structMap:Ljava/util/Map;
       3: aload_0
       4: aload_1
       5: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public static synchronized java.util.Map<? extends org.apache.thrift.TFieldIdEnum, org.apache.thrift.meta_data.FieldMetaData> getStructMetaDataMap(java.lang.Class<? extends org.apache.thrift.TBase>);
    Code:
       0: getstatic     #5                  // Field structMap:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       9: ifne          106
      12: aload_0
      13: invokevirtual #8                  // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      16: pop
      17: goto          106
      20: astore_1
      21: new           #10                 // class java/lang/RuntimeException
      24: dup
      25: new           #11                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #13                 // String InstantiationException for TBase class:
      34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      41: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #16                 // String , message:
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #17                 // Method java/lang/InstantiationException.getMessage:()Ljava/lang/String;
      53: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: astore_1
      64: new           #10                 // class java/lang/RuntimeException
      67: dup
      68: new           #11                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #21                 // String IllegalAccessException for TBase class:
      77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      84: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #16                 // String , message:
      89: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #22                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
      96: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: getstatic     #5                  // Field structMap:Ljava/util/Map;
     109: aload_0
     110: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     115: checkcast     #24                 // class java/util/Map
     118: areturn
    Exception table:
       from    to  target type
          12    17    20   Class java/lang/InstantiationException
          12    17    63   Class java/lang/IllegalAccessException

  static {};
    Code:
       0: new           #25                 // class java/util/HashMap
       3: dup
       4: invokespecial #26                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #5                  // Field structMap:Ljava/util/Map;
      10: return
}
