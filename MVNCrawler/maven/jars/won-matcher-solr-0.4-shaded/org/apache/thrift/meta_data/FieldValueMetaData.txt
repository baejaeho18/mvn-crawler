Compiled from "FieldValueMetaData.java"
public class org.apache.thrift.meta_data.FieldValueMetaData implements java.io.Serializable {
  public final byte type;

  private final boolean isTypedefType;

  private final java.lang.String typedefName;

  private final boolean isBinary;

  public org.apache.thrift.meta_data.FieldValueMetaData(byte, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isTypedefType:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field typedefName:Ljava/lang/String;
      19: aload_0
      20: iload_2
      21: putfield      #5                  // Field isBinary:Z
      24: return

  public org.apache.thrift.meta_data.FieldValueMetaData(byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #6                  // Method "<init>":(BZ)V
       6: return

  public org.apache.thrift.meta_data.FieldValueMetaData(byte, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field isTypedefType:Z
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field typedefName:Ljava/lang/String;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field isBinary:Z
      24: return

  public boolean isTypedef();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isTypedefType:Z
       4: ireturn

  public java.lang.String getTypedefName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field typedefName:Ljava/lang/String;
       4: areturn

  public boolean isStruct();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:B
       4: bipush        12
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isContainer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:B
       4: bipush        15
       6: if_icmpeq     27
       9: aload_0
      10: getfield      #2                  // Field type:B
      13: bipush        13
      15: if_icmpeq     27
      18: aload_0
      19: getfield      #2                  // Field type:B
      22: bipush        14
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public boolean isBinary();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isBinary:Z
       4: ireturn
}
