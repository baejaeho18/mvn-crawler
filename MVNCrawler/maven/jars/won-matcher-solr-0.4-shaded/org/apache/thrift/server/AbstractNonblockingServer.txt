Compiled from "AbstractNonblockingServer.java"
public abstract class org.apache.thrift.server.AbstractNonblockingServer extends org.apache.thrift.server.TServer {
  protected final org.slf4j.Logger LOGGER;

  final long MAX_READ_BUFFER_BYTES;

  final java.util.concurrent.atomic.AtomicLong readBufferBytesAllocated;

  public org.apache.thrift.server.AbstractNonblockingServer(org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/thrift/server/TServer."<init>":(Lorg/apache/thrift/server/TServer$AbstractServerArgs;)V
       5: aload_0
       6: aload_0
       7: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
      13: invokestatic  #4                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      16: putfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      19: aload_0
      20: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      23: dup
      24: lconst_0
      25: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      28: putfield      #8                  // Field readBufferBytesAllocated:Ljava/util/concurrent/atomic/AtomicLong;
      31: aload_0
      32: aload_1
      33: getfield      #9                  // Field org/apache/thrift/server/AbstractNonblockingServer$AbstractNonblockingServerArgs.maxReadBufferBytes:J
      36: putfield      #10                 // Field MAX_READ_BUFFER_BYTES:J
      39: return

  public void serve();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method startThreads:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #12                 // Method startListening:()Z
      12: ifne          16
      15: return
      16: aload_0
      17: iconst_1
      18: invokevirtual #13                 // Method setServing:(Z)V
      21: aload_0
      22: invokevirtual #14                 // Method waitForShutdown:()V
      25: aload_0
      26: iconst_0
      27: invokevirtual #13                 // Method setServing:(Z)V
      30: aload_0
      31: invokevirtual #15                 // Method stopListening:()V
      34: return

  protected abstract boolean startThreads();

  protected abstract void waitForShutdown();

  protected boolean startListening();
    Code:
       0: aload_0
       1: getfield      #16                 // Field serverTransport_:Lorg/apache/thrift/transport/TServerTransport;
       4: invokevirtual #17                 // Method org/apache/thrift/transport/TServerTransport.listen:()V
       7: iconst_1
       8: ireturn
       9: astore_1
      10: aload_0
      11: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #19                 // String Failed to start listening on server socket!
      16: aload_1
      17: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: iconst_0
      23: ireturn
    Exception table:
       from    to  target type
           0     8     9   Class org/apache/thrift/transport/TTransportException

  protected void stopListening();
    Code:
       0: aload_0
       1: getfield      #16                 // Field serverTransport_:Lorg/apache/thrift/transport/TServerTransport;
       4: invokevirtual #21                 // Method org/apache/thrift/transport/TServerTransport.close:()V
       7: return

  protected abstract boolean requestInvoke(org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer);
}
