Compiled from "TThreadedSelectorServer.java"
public class org.apache.thrift.server.TThreadedSelectorServer$Args extends org.apache.thrift.server.AbstractNonblockingServer$AbstractNonblockingServerArgs<org.apache.thrift.server.TThreadedSelectorServer$Args> {
  public int selectorThreads;

  private int workerThreads;

  private int stopTimeoutVal;

  private java.util.concurrent.TimeUnit stopTimeoutUnit;

  private java.util.concurrent.ExecutorService executorService;

  private int acceptQueueSizePerThread;

  private org.apache.thrift.server.TThreadedSelectorServer$Args$AcceptPolicy acceptPolicy;

  public org.apache.thrift.server.TThreadedSelectorServer$Args(org.apache.thrift.transport.TNonblockingServerTransport);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/apache/thrift/server/AbstractNonblockingServer$AbstractNonblockingServerArgs."<init>":(Lorg/apache/thrift/transport/TNonblockingServerTransport;)V
       5: aload_0
       6: iconst_2
       7: putfield      #8                  // Field selectorThreads:I
      10: aload_0
      11: iconst_5
      12: putfield      #2                  // Field workerThreads:I
      15: aload_0
      16: bipush        60
      18: putfield      #4                  // Field stopTimeoutVal:I
      21: aload_0
      22: getstatic     #9                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      25: putfield      #3                  // Field stopTimeoutUnit:Ljava/util/concurrent/TimeUnit;
      28: aload_0
      29: aconst_null
      30: putfield      #6                  // Field executorService:Ljava/util/concurrent/ExecutorService;
      33: aload_0
      34: iconst_4
      35: putfield      #5                  // Field acceptQueueSizePerThread:I
      38: aload_0
      39: getstatic     #10                 // Field org/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy.FAST_ACCEPT:Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;
      42: putfield      #1                  // Field acceptPolicy:Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;
      45: return

  public org.apache.thrift.server.TThreadedSelectorServer$Args selectorThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field selectorThreads:I
       5: aload_0
       6: areturn

  public int getSelectorThreads();
    Code:
       0: aload_0
       1: getfield      #8                  // Field selectorThreads:I
       4: ireturn

  public org.apache.thrift.server.TThreadedSelectorServer$Args workerThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field workerThreads:I
       5: aload_0
       6: areturn

  public int getWorkerThreads();
    Code:
       0: aload_0
       1: getfield      #2                  // Field workerThreads:I
       4: ireturn

  public int getStopTimeoutVal();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stopTimeoutVal:I
       4: ireturn

  public org.apache.thrift.server.TThreadedSelectorServer$Args stopTimeoutVal(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field stopTimeoutVal:I
       5: aload_0
       6: areturn

  public java.util.concurrent.TimeUnit getStopTimeoutUnit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stopTimeoutUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public org.apache.thrift.server.TThreadedSelectorServer$Args stopTimeoutUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field stopTimeoutUnit:Ljava/util/concurrent/TimeUnit;
       5: aload_0
       6: areturn

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #6                  // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public org.apache.thrift.server.TThreadedSelectorServer$Args executorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field executorService:Ljava/util/concurrent/ExecutorService;
       5: aload_0
       6: areturn

  public int getAcceptQueueSizePerThread();
    Code:
       0: aload_0
       1: getfield      #5                  // Field acceptQueueSizePerThread:I
       4: ireturn

  public org.apache.thrift.server.TThreadedSelectorServer$Args acceptQueueSizePerThread(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field acceptQueueSizePerThread:I
       5: aload_0
       6: areturn

  public org.apache.thrift.server.TThreadedSelectorServer$Args$AcceptPolicy getAcceptPolicy();
    Code:
       0: aload_0
       1: getfield      #1                  // Field acceptPolicy:Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;
       4: areturn

  public org.apache.thrift.server.TThreadedSelectorServer$Args acceptPolicy(org.apache.thrift.server.TThreadedSelectorServer$Args$AcceptPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field acceptPolicy:Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;
       5: aload_0
       6: areturn

  public void validate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field selectorThreads:I
       4: ifgt          17
       7: new           #11                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #12                 // String selectorThreads must be positive.
      13: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field workerThreads:I
      21: ifge          34
      24: new           #11                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #14                 // String workerThreads must be non-negative.
      30: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #5                  // Field acceptQueueSizePerThread:I
      38: ifgt          51
      41: new           #11                 // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #15                 // String acceptQueueSizePerThread must be positive.
      47: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: return

  static java.util.concurrent.ExecutorService access$000(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static int access$100(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: getfield      #5                  // Field acceptQueueSizePerThread:I
       4: ireturn

  static int access$200(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stopTimeoutVal:I
       4: ireturn

  static java.util.concurrent.TimeUnit access$300(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: getfield      #3                  // Field stopTimeoutUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  static int access$400(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: getfield      #2                  // Field workerThreads:I
       4: ireturn

  static org.apache.thrift.server.TThreadedSelectorServer$Args$AcceptPolicy access$700(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: getfield      #1                  // Field acceptPolicy:Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;
       4: areturn
}
