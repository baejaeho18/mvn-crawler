Compiled from "TThreadedSelectorServer.java"
public class org.apache.thrift.server.TThreadedSelectorServer extends org.apache.thrift.server.AbstractNonblockingServer {
  private static final org.slf4j.Logger LOGGER;

  private org.apache.thrift.server.TThreadedSelectorServer$AcceptThread acceptThread;

  private final java.util.Set<org.apache.thrift.server.TThreadedSelectorServer$SelectorThread> selectorThreads;

  private final java.util.concurrent.ExecutorService invoker;

  private final org.apache.thrift.server.TThreadedSelectorServer$Args args;

  public org.apache.thrift.server.TThreadedSelectorServer(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/thrift/server/AbstractNonblockingServer."<init>":(Lorg/apache/thrift/server/AbstractNonblockingServer$AbstractNonblockingServerArgs;)V
       5: aload_0
       6: new           #6                  // class java/util/HashSet
       9: dup
      10: invokespecial #7                  // Method java/util/HashSet."<init>":()V
      13: putfield      #8                  // Field selectorThreads:Ljava/util/Set;
      16: aload_1
      17: invokevirtual #9                  // Method org/apache/thrift/server/TThreadedSelectorServer$Args.validate:()V
      20: aload_0
      21: aload_1
      22: invokestatic  #10                 // Method org/apache/thrift/server/TThreadedSelectorServer$Args.access$000:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)Ljava/util/concurrent/ExecutorService;
      25: ifnonnull     35
      28: aload_1
      29: invokestatic  #11                 // Method createDefaultExecutor:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)Ljava/util/concurrent/ExecutorService;
      32: goto          39
      35: aload_1
      36: invokestatic  #10                 // Method org/apache/thrift/server/TThreadedSelectorServer$Args.access$000:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)Ljava/util/concurrent/ExecutorService;
      39: putfield      #2                  // Field invoker:Ljava/util/concurrent/ExecutorService;
      42: aload_0
      43: aload_1
      44: putfield      #3                  // Field args:Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
      47: return

  protected boolean startThreads();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #3                  // Field args:Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
       7: getfield      #12                 // Field org/apache/thrift/server/TThreadedSelectorServer$Args.selectorThreads:I
      10: if_icmpge     44
      13: aload_0
      14: getfield      #8                  // Field selectorThreads:Ljava/util/Set;
      17: new           #13                 // class org/apache/thrift/server/TThreadedSelectorServer$SelectorThread
      20: dup
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field args:Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
      26: invokestatic  #14                 // Method org/apache/thrift/server/TThreadedSelectorServer$Args.access$100:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)I
      29: invokespecial #15                 // Method org/apache/thrift/server/TThreadedSelectorServer$SelectorThread."<init>":(Lorg/apache/thrift/server/TThreadedSelectorServer;I)V
      32: invokeinterface #16,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: iinc          1, 1
      41: goto          2
      44: aload_0
      45: new           #17                 // class org/apache/thrift/server/TThreadedSelectorServer$AcceptThread
      48: dup
      49: aload_0
      50: aload_0
      51: getfield      #18                 // Field serverTransport_:Lorg/apache/thrift/transport/TServerTransport;
      54: checkcast     #19                 // class org/apache/thrift/transport/TNonblockingServerTransport
      57: aload_0
      58: aload_0
      59: getfield      #8                  // Field selectorThreads:Ljava/util/Set;
      62: invokevirtual #20                 // Method createSelectorThreadLoadBalancer:(Ljava/util/Collection;)Lorg/apache/thrift/server/TThreadedSelectorServer$SelectorThreadLoadBalancer;
      65: invokespecial #21                 // Method org/apache/thrift/server/TThreadedSelectorServer$AcceptThread."<init>":(Lorg/apache/thrift/server/TThreadedSelectorServer;Lorg/apache/thrift/transport/TNonblockingServerTransport;Lorg/apache/thrift/server/TThreadedSelectorServer$SelectorThreadLoadBalancer;)V
      68: putfield      #22                 // Field acceptThread:Lorg/apache/thrift/server/TThreadedSelectorServer$AcceptThread;
      71: aload_0
      72: getfield      #8                  // Field selectorThreads:Ljava/util/Set;
      75: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      80: astore_1
      81: aload_1
      82: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          107
      90: aload_1
      91: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #13                 // class org/apache/thrift/server/TThreadedSelectorServer$SelectorThread
      99: astore_2
     100: aload_2
     101: invokevirtual #26                 // Method org/apache/thrift/server/TThreadedSelectorServer$SelectorThread.start:()V
     104: goto          81
     107: aload_0
     108: getfield      #22                 // Field acceptThread:Lorg/apache/thrift/server/TThreadedSelectorServer$AcceptThread;
     111: invokevirtual #27                 // Method org/apache/thrift/server/TThreadedSelectorServer$AcceptThread.start:()V
     114: iconst_1
     115: ireturn
     116: astore_1
     117: getstatic     #4                  // Field LOGGER:Lorg/slf4j/Logger;
     120: ldc           #29                 // String Failed to start threads!
     122: aload_1
     123: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     128: iconst_0
     129: ireturn
    Exception table:
       from    to  target type
           0   115   116   Class java/io/IOException

  protected void waitForShutdown();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method joinThreads:()V
       4: goto          19
       7: astore_1
       8: getstatic     #4                  // Field LOGGER:Lorg/slf4j/Logger;
      11: ldc           #33                 // String Interrupted while joining threads!
      13: aload_1
      14: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: aload_0
      20: invokevirtual #34                 // Method gracefullyShutdownInvokerPool:()V
      23: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/InterruptedException

  protected void joinThreads() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field acceptThread:Lorg/apache/thrift/server/TThreadedSelectorServer$AcceptThread;
       4: invokevirtual #35                 // Method org/apache/thrift/server/TThreadedSelectorServer$AcceptThread.join:()V
       7: aload_0
       8: getfield      #8                  // Field selectorThreads:Ljava/util/Set;
      11: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          43
      26: aload_1
      27: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #13                 // class org/apache/thrift/server/TThreadedSelectorServer$SelectorThread
      35: astore_2
      36: aload_2
      37: invokevirtual #36                 // Method org/apache/thrift/server/TThreadedSelectorServer$SelectorThread.join:()V
      40: goto          17
      43: return

  public void stop();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #37                 // Field stopped_:Z
       5: aload_0
       6: invokevirtual #38                 // Method stopListening:()V
       9: aload_0
      10: getfield      #22                 // Field acceptThread:Lorg/apache/thrift/server/TThreadedSelectorServer$AcceptThread;
      13: ifnull        23
      16: aload_0
      17: getfield      #22                 // Field acceptThread:Lorg/apache/thrift/server/TThreadedSelectorServer$AcceptThread;
      20: invokevirtual #39                 // Method org/apache/thrift/server/TThreadedSelectorServer$AcceptThread.wakeupSelector:()V
      23: aload_0
      24: getfield      #8                  // Field selectorThreads:Ljava/util/Set;
      27: ifnull        70
      30: aload_0
      31: getfield      #8                  // Field selectorThreads:Ljava/util/Set;
      34: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore_1
      40: aload_1
      41: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          70
      49: aload_1
      50: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #13                 // class org/apache/thrift/server/TThreadedSelectorServer$SelectorThread
      58: astore_2
      59: aload_2
      60: ifnull        67
      63: aload_2
      64: invokevirtual #40                 // Method org/apache/thrift/server/TThreadedSelectorServer$SelectorThread.wakeupSelector:()V
      67: goto          40
      70: return

  protected void gracefullyShutdownInvokerPool();
    Code:
       0: aload_0
       1: getfield      #2                  // Field invoker:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
       9: aload_0
      10: getfield      #3                  // Field args:Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
      13: invokestatic  #42                 // Method org/apache/thrift/server/TThreadedSelectorServer$Args.access$300:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)Ljava/util/concurrent/TimeUnit;
      16: aload_0
      17: getfield      #3                  // Field args:Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
      20: invokestatic  #43                 // Method org/apache/thrift/server/TThreadedSelectorServer$Args.access$200:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)I
      23: i2l
      24: invokevirtual #44                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      27: lstore_1
      28: invokestatic  #45                 // Method java/lang/System.currentTimeMillis:()J
      31: lstore_3
      32: lload_1
      33: lconst_0
      34: lcmp
      35: iflt          75
      38: aload_0
      39: getfield      #2                  // Field invoker:Ljava/util/concurrent/ExecutorService;
      42: lload_1
      43: getstatic     #46                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      46: invokeinterface #47,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      51: pop
      52: goto          75
      55: astore        5
      57: invokestatic  #45                 // Method java/lang/System.currentTimeMillis:()J
      60: lstore        6
      62: lload_1
      63: lload         6
      65: lload_3
      66: lsub
      67: lsub
      68: lstore_1
      69: lload         6
      71: lstore_3
      72: goto          32
      75: return
    Exception table:
       from    to  target type
          38    52    55   Class java/lang/InterruptedException

  protected boolean requestInvoke(org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method getRunnable:(Lorg/apache/thrift/server/AbstractNonblockingServer$FrameBuffer;)Ljava/lang/Runnable;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field invoker:Ljava/util/concurrent/ExecutorService;
      10: ifnull        39
      13: aload_0
      14: getfield      #2                  // Field invoker:Ljava/util/concurrent/ExecutorService;
      17: aload_2
      18: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      23: iconst_1
      24: ireturn
      25: astore_3
      26: getstatic     #4                  // Field LOGGER:Lorg/slf4j/Logger;
      29: ldc           #51                 // String ExecutorService rejected execution!
      31: aload_3
      32: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: iconst_0
      38: ireturn
      39: aload_2
      40: invokeinterface #53,  1           // InterfaceMethod java/lang/Runnable.run:()V
      45: iconst_1
      46: ireturn
    Exception table:
       from    to  target type
          13    24    25   Class java/util/concurrent/RejectedExecutionException

  protected java.lang.Runnable getRunnable(org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer);
    Code:
       0: new           #54                 // class org/apache/thrift/server/Invocation
       3: dup
       4: aload_1
       5: invokespecial #55                 // Method org/apache/thrift/server/Invocation."<init>":(Lorg/apache/thrift/server/AbstractNonblockingServer$FrameBuffer;)V
       8: areturn

  protected static java.util.concurrent.ExecutorService createDefaultExecutor(org.apache.thrift.server.TThreadedSelectorServer$Args);
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method org/apache/thrift/server/TThreadedSelectorServer$Args.access$400:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)I
       4: ifle          17
       7: aload_0
       8: invokestatic  #56                 // Method org/apache/thrift/server/TThreadedSelectorServer$Args.access$400:(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)I
      11: invokestatic  #57                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      14: goto          18
      17: aconst_null
      18: areturn

  private static java.util.concurrent.BlockingQueue<org.apache.thrift.transport.TNonblockingTransport> createDefaultAcceptQueue(int);
    Code:
       0: iload_0
       1: ifne          12
       4: new           #58                 // class java/util/concurrent/LinkedBlockingQueue
       7: dup
       8: invokespecial #59                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      11: areturn
      12: new           #60                 // class java/util/concurrent/ArrayBlockingQueue
      15: dup
      16: iload_0
      17: invokespecial #61                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      20: areturn

  protected org.apache.thrift.server.TThreadedSelectorServer$SelectorThreadLoadBalancer createSelectorThreadLoadBalancer(java.util.Collection<? extends org.apache.thrift.server.TThreadedSelectorServer$SelectorThread>);
    Code:
       0: new           #62                 // class org/apache/thrift/server/TThreadedSelectorServer$SelectorThreadLoadBalancer
       3: dup
       4: aload_1
       5: invokespecial #63                 // Method org/apache/thrift/server/TThreadedSelectorServer$SelectorThreadLoadBalancer."<init>":(Ljava/util/Collection;)V
       8: areturn

  static org.slf4j.Logger access$500();
    Code:
       0: getstatic     #4                  // Field LOGGER:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.thrift.server.TThreadedSelectorServer$Args access$600(org.apache.thrift.server.TThreadedSelectorServer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field args:Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
       4: areturn

  static java.util.concurrent.ExecutorService access$800(org.apache.thrift.server.TThreadedSelectorServer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field invoker:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static java.util.concurrent.BlockingQueue access$1000(int);
    Code:
       0: iload_0
       1: invokestatic  #1                  // Method createDefaultAcceptQueue:(I)Ljava/util/concurrent/BlockingQueue;
       4: areturn

  static {};
    Code:
       0: ldc_w         #64                 // class org/apache/thrift/server/TThreadedSelectorServer
       3: invokevirtual #65                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #66                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       9: putstatic     #4                  // Field LOGGER:Lorg/slf4j/Logger;
      12: return
}
