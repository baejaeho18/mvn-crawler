Compiled from "Traversal.java"
public class org.apache.solr.client.solrj.io.graph.Traversal {
  private java.util.List<java.util.Map<java.lang.String, org.apache.solr.client.solrj.io.graph.Node>> graph;

  private java.util.List<java.lang.String> fields;

  private java.util.List<java.lang.String> collections;

  private java.util.Set<org.apache.solr.client.solrj.io.graph.Traversal$Scatter> scatter;

  private java.util.Set<java.lang.String> collectionSet;

  private boolean trackTraversal;

  private int depth;

  public org.apache.solr.client.solrj.io.graph.Traversal();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field graph:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field fields:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/ArrayList
      30: dup
      31: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #6                  // Field collections:Ljava/util/List;
      37: aload_0
      38: new           #7                  // class java/util/HashSet
      41: dup
      42: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      45: putfield      #9                  // Field scatter:Ljava/util/Set;
      48: aload_0
      49: new           #7                  // class java/util/HashSet
      52: dup
      53: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      56: putfield      #10                 // Field collectionSet:Ljava/util/Set;
      59: return

  public void addLevel(java.util.Map<java.lang.String, org.apache.solr.client.solrj.io.graph.Node>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field graph:Ljava/util/List;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #6                  // Field collections:Ljava/util/List;
      15: aload_2
      16: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: getfield      #10                 // Field collectionSet:Ljava/util/Set;
      26: aload_2
      27: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      32: pop
      33: aload_0
      34: getfield      #5                  // Field fields:Ljava/util/List;
      37: aload_3
      38: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: dup
      46: getfield      #13                 // Field depth:I
      49: iconst_1
      50: iadd
      51: putfield      #13                 // Field depth:I
      54: return

  public int getDepth();
    Code:
       0: aload_0
       1: getfield      #13                 // Field depth:I
       4: ireturn

  public boolean getTrackTraversal();
    Code:
       0: aload_0
       1: getfield      #14                 // Field trackTraversal:Z
       4: ireturn

  public boolean visited(java.lang.String, java.lang.String, org.apache.solr.client.solrj.io.Tuple);
    Code:
       0: aload_0
       1: getfield      #4                  // Field graph:Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          88
      21: aload         4
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #18                 // class java/util/Map
      31: astore        5
      33: aload         5
      35: aload_1
      36: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #20                 // class org/apache/solr/client/solrj/io/graph/Node
      44: astore        6
      46: aload         6
      48: ifnull        85
      51: aload         6
      53: new           #21                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      60: aload_0
      61: getfield      #13                 // Field depth:I
      64: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #24                 // String ^
      69: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_2
      73: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: aload_3
      80: invokevirtual #27                 // Method org/apache/solr/client/solrj/io/graph/Node.add:(Ljava/lang/String;Lorg/apache/solr/client/solrj/io/Tuple;)V
      83: iconst_1
      84: ireturn
      85: goto          11
      88: iconst_0
      89: ireturn

  public boolean isMultiCollection();
    Code:
       0: aload_0
       1: getfield      #10                 // Field collectionSet:Ljava/util/Set;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Set.size:()I
       9: iconst_1
      10: if_icmple     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public java.util.List<java.util.Map<java.lang.String, org.apache.solr.client.solrj.io.graph.Node>> getGraph();
    Code:
       0: aload_0
       1: getfield      #4                  // Field graph:Ljava/util/List;
       4: areturn

  public void setScatter(java.util.Set<org.apache.solr.client.solrj.io.graph.Traversal$Scatter>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field scatter:Ljava/util/Set;
       5: return

  public java.util.Set<org.apache.solr.client.solrj.io.graph.Traversal$Scatter> getScatter();
    Code:
       0: aload_0
       1: getfield      #9                  // Field scatter:Ljava/util/Set;
       4: areturn

  public void setTrackTraversal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field trackTraversal:Z
       5: return

  public java.util.List<java.lang.String> getCollections();
    Code:
       0: aload_0
       1: getfield      #6                  // Field collections:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getFields();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fields:Ljava/util/List;
       4: areturn

  public java.util.Iterator<org.apache.solr.client.solrj.io.Tuple> iterator();
    Code:
       0: new           #29                 // class org/apache/solr/client/solrj/io/graph/TraversalIterator
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #9                  // Field scatter:Ljava/util/Set;
       9: invokespecial #30                 // Method org/apache/solr/client/solrj/io/graph/TraversalIterator."<init>":(Lorg/apache/solr/client/solrj/io/graph/Traversal;Ljava/util/Set;)V
      12: areturn
}
