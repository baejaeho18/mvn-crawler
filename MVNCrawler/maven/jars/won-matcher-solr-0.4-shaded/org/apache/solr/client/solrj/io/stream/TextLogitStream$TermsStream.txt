Compiled from "TextLogitStream.java"
public class org.apache.solr.client.solrj.io.stream.TextLogitStream$TermsStream extends org.apache.solr.client.solrj.io.stream.TupleStream {
  private java.util.List<java.lang.String> terms;

  private java.util.Iterator<java.lang.String> it;

  final org.apache.solr.client.solrj.io.stream.TextLogitStream this$0;

  public org.apache.solr.client.solrj.io.stream.TextLogitStream$TermsStream(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/solr/client/solrj/io/stream/TextLogitStream;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/solr/client/solrj/io/stream/TupleStream."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field terms:Ljava/util/List;
      14: return

  public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext);
    Code:
       0: return

  public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: areturn

  public void open() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field terms:Ljava/util/List;
       5: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: putfield      #7                  // Field it:Ljava/util/Iterator;
      13: return

  public void close() throws java.io.IOException;
    Code:
       0: return

  public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException;
    Code:
       0: new           #8                  // class java/util/HashMap
       3: dup
       4: invokespecial #9                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field it:Ljava/util/Iterator;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          56
      20: aload_1
      21: ldc           #11                 // String term_s
      23: aload_0
      24: getfield      #7                  // Field it:Ljava/util/Iterator;
      27: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_1
      37: ldc           #14                 // String score_f
      39: dconst_1
      40: invokestatic  #15                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      43: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: new           #16                 // class org/apache/solr/client/solrj/io/Tuple
      50: dup
      51: aload_1
      52: invokespecial #17                 // Method org/apache/solr/client/solrj/io/Tuple."<init>":(Ljava/util/Map;)V
      55: areturn
      56: aload_1
      57: ldc           #18                 // String EOF
      59: iconst_1
      60: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      63: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: new           #16                 // class org/apache/solr/client/solrj/io/Tuple
      70: dup
      71: aload_1
      72: invokespecial #17                 // Method org/apache/solr/client/solrj/io/Tuple."<init>":(Ljava/util/Map;)V
      75: areturn

  public org.apache.solr.client.solrj.io.comp.StreamComparator getStreamSort();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.solr.client.solrj.io.stream.expr.Explanation toExplanation(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException;
    Code:
       0: new           #20                 // class org/apache/solr/client/solrj/io/stream/expr/StreamExplanation
       3: dup
       4: aload_0
       5: invokevirtual #21                 // Method getStreamNodeId:()Ljava/util/UUID;
       8: invokevirtual #22                 // Method java/util/UUID.toString:()Ljava/lang/String;
      11: invokespecial #23                 // Method org/apache/solr/client/solrj/io/stream/expr/StreamExplanation."<init>":(Ljava/lang/String;)V
      14: ldc           #24                 // String non-expressible
      16: invokevirtual #25                 // Method org/apache/solr/client/solrj/io/stream/expr/StreamExplanation.withFunctionName:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      19: aload_0
      20: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      26: invokevirtual #28                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withImplementingClass:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      29: ldc           #30                 // String stream-source
      31: invokevirtual #31                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withExpressionType:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      34: ldc           #24                 // String non-expressible
      36: invokevirtual #32                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withExpression:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      39: areturn
}
