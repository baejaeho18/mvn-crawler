Compiled from "HttpClientUtil.java"
public class org.apache.solr.client.solrj.impl.HttpClientUtil {
  public static final java.lang.String PROP_SO_TIMEOUT;

  public static final java.lang.String PROP_CONNECTION_TIMEOUT;

  public static final java.lang.String PROP_MAX_CONNECTIONS_PER_HOST;

  public static final java.lang.String PROP_MAX_CONNECTIONS;

  public static final java.lang.String PROP_USE_RETRY;

  public static final java.lang.String PROP_ALLOW_COMPRESSION;

  public static final java.lang.String PROP_FOLLOW_REDIRECTS;

  public static final java.lang.String PROP_BASIC_AUTH_USER;

  public static final java.lang.String PROP_BASIC_AUTH_PASS;

  public static final java.lang.String SYS_PROP_CHECK_PEER_NAME;

  public static final java.lang.String SYS_PROP_HTTP_CLIENT_BUILDER_FACTORY;

  private static final org.slf4j.Logger logger;

  static final org.apache.http.impl.client.DefaultHttpRequestRetryHandler NO_RETRY;

  private static final java.util.List<org.apache.solr.client.solrj.impl.HttpClientConfigurer> configurers;

  private static final java.util.List<org.apache.http.HttpRequestInterceptor> interceptors;

  public org.apache.solr.client.solrj.impl.HttpClientUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setConfigurer(org.apache.solr.client.solrj.impl.HttpClientConfigurer);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method addConfigurer:(Lorg/apache/solr/client/solrj/impl/HttpClientConfigurer;)V
       4: return

  public static void addConfigurer(org.apache.solr.client.solrj.impl.HttpClientConfigurer);
    Code:
       0: getstatic     #3                  // Field configurers:Ljava/util/List;
       3: aload_0
       4: invokeinterface #4,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  public static void removeConfigurer(org.apache.solr.client.solrj.impl.HttpClientConfigurer);
    Code:
       0: getstatic     #3                  // Field configurers:Ljava/util/List;
       3: aload_0
       4: invokeinterface #5,  2            // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
       9: pop
      10: return

  public static void resetConfigurers();
    Code:
       0: getstatic     #3                  // Field configurers:Ljava/util/List;
       3: invokeinterface #6,  1            // InterfaceMethod java/util/List.clear:()V
       8: getstatic     #3                  // Field configurers:Ljava/util/List;
      11: new           #7                  // class org/apache/solr/client/solrj/impl/HttpClientConfigurer
      14: dup
      15: invokespecial #8                  // Method org/apache/solr/client/solrj/impl/HttpClientConfigurer."<init>":()V
      18: invokeinterface #4,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public static org.apache.http.impl.client.CloseableHttpClient createClient(org.apache.solr.common.params.SolrParams);
    Code:
       0: new           #9                  // class org/apache/solr/common/params/ModifiableSolrParams
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method org/apache/solr/common/params/ModifiableSolrParams."<init>":(Lorg/apache/solr/common/params/SolrParams;)V
       8: astore_1
       9: getstatic     #11                 // Field logger:Lorg/slf4j/Logger;
      12: invokeinterface #12,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      17: ifeq          47
      20: getstatic     #11                 // Field logger:Lorg/slf4j/Logger;
      23: new           #13                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #15                 // String Creating new http client, config:
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      47: invokestatic  #20                 // Method org/apache/solr/client/solrj/impl/HttpClientUtil$HttpClientFactory.createHttpClient:()Lorg/apache/http/impl/client/SystemDefaultHttpClient;
      50: astore_2
      51: aload_2
      52: aload_1
      53: invokestatic  #21                 // Method configureClient:(Lorg/apache/http/impl/client/DefaultHttpClient;Lorg/apache/solr/common/params/SolrParams;)V
      56: aload_2
      57: areturn

  static org.apache.http.impl.conn.PoolingClientConnectionManager createPoolingConnectionManager();
    Code:
       0: new           #22                 // class org/apache/http/impl/conn/PoolingClientConnectionManager
       3: dup
       4: invokestatic  #23                 // Method org/apache/http/impl/conn/SchemeRegistryFactory.createSystemDefault:()Lorg/apache/http/conn/scheme/SchemeRegistry;
       7: invokespecial #24                 // Method org/apache/http/impl/conn/PoolingClientConnectionManager."<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
      10: areturn

  public static org.apache.http.impl.client.CloseableHttpClient createClient(org.apache.solr.common.params.SolrParams, org.apache.http.conn.ClientConnectionManager);
    Code:
       0: new           #9                  // class org/apache/solr/common/params/ModifiableSolrParams
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method org/apache/solr/common/params/ModifiableSolrParams."<init>":(Lorg/apache/solr/common/params/SolrParams;)V
       8: astore_2
       9: getstatic     #11                 // Field logger:Lorg/slf4j/Logger;
      12: invokeinterface #12,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      17: ifeq          47
      20: getstatic     #11                 // Field logger:Lorg/slf4j/Logger;
      23: new           #13                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #15                 // String Creating new http client, config:
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      47: aload_1
      48: invokestatic  #25                 // Method org/apache/solr/client/solrj/impl/HttpClientUtil$HttpClientFactory.createHttpClient:(Lorg/apache/http/conn/ClientConnectionManager;)Lorg/apache/http/impl/client/DefaultHttpClient;
      51: astore_3
      52: aload_3
      53: aload_2
      54: invokestatic  #21                 // Method configureClient:(Lorg/apache/http/impl/client/DefaultHttpClient;Lorg/apache/solr/common/params/SolrParams;)V
      57: aload_3
      58: areturn

  public static void configureClient(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams);
    Code:
       0: getstatic     #3                  // Field configurers:Ljava/util/List;
       3: dup
       4: astore_2
       5: monitorenter
       6: getstatic     #3                  // Field configurers:Ljava/util/List;
       9: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_3
      25: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #7                  // class org/apache/solr/client/solrj/impl/HttpClientConfigurer
      33: astore        4
      35: aload         4
      37: aload_0
      38: aload_1
      39: invokevirtual #29                 // Method org/apache/solr/client/solrj/impl/HttpClientConfigurer.configure:(Lorg/apache/http/impl/client/DefaultHttpClient;Lorg/apache/solr/common/params/SolrParams;)V
      42: goto          15
      45: aload_2
      46: monitorexit
      47: goto          57
      50: astore        5
      52: aload_2
      53: monitorexit
      54: aload         5
      56: athrow
      57: getstatic     #30                 // Field interceptors:Ljava/util/List;
      60: dup
      61: astore_2
      62: monitorenter
      63: getstatic     #30                 // Field interceptors:Ljava/util/List;
      66: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      71: astore_3
      72: aload_3
      73: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      78: ifeq          101
      81: aload_3
      82: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #31                 // class org/apache/http/HttpRequestInterceptor
      90: astore        4
      92: aload_0
      93: aload         4
      95: invokevirtual #32                 // Method org/apache/http/impl/client/DefaultHttpClient.addRequestInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V
      98: goto          72
     101: aload_2
     102: monitorexit
     103: goto          113
     106: astore        6
     108: aload_2
     109: monitorexit
     110: aload         6
     112: athrow
     113: return
    Exception table:
       from    to  target type
           6    47    50   any
          50    54    50   any
          63   103   106   any
         106   110   106   any

  public static void close(org.apache.http.client.HttpClient);
    Code:
       0: aload_0
       1: instanceof    #33                 // class org/apache/http/impl/client/CloseableHttpClient
       4: ifeq          17
       7: aload_0
       8: checkcast     #33                 // class org/apache/http/impl/client/CloseableHttpClient
      11: invokestatic  #34                 // Method org/apache/solr/common/util/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
      14: goto          28
      17: aload_0
      18: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
      23: invokeinterface #36,  1           // InterfaceMethod org/apache/http/conn/ClientConnectionManager.shutdown:()V
      28: return

  public static void addRequestInterceptor(org.apache.http.HttpRequestInterceptor);
    Code:
       0: getstatic     #30                 // Field interceptors:Ljava/util/List;
       3: aload_0
       4: invokeinterface #4,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  public static void removeRequestInterceptor(org.apache.http.HttpRequestInterceptor);
    Code:
       0: getstatic     #30                 // Field interceptors:Ljava/util/List;
       3: aload_0
       4: invokeinterface #5,  2            // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
       9: pop
      10: return

  public static void clearRequestInterceptors();
    Code:
       0: getstatic     #30                 // Field interceptors:Ljava/util/List;
       3: invokeinterface #6,  1            // InterfaceMethod java/util/List.clear:()V
       8: return

  public static void setAllowCompression(org.apache.http.impl.client.DefaultHttpClient, boolean);
    Code:
       0: aload_0
       1: ldc           #37                 // class org/apache/solr/client/solrj/impl/HttpClientUtil$UseCompressionRequestInterceptor
       3: invokevirtual #38                 // Method org/apache/http/impl/client/DefaultHttpClient.removeRequestInterceptorByClass:(Ljava/lang/Class;)V
       6: aload_0
       7: ldc           #39                 // class org/apache/solr/client/solrj/impl/HttpClientUtil$UseCompressionResponseInterceptor
       9: invokevirtual #40                 // Method org/apache/http/impl/client/DefaultHttpClient.removeResponseInterceptorByClass:(Ljava/lang/Class;)V
      12: iload_1
      13: ifeq          40
      16: aload_0
      17: new           #37                 // class org/apache/solr/client/solrj/impl/HttpClientUtil$UseCompressionRequestInterceptor
      20: dup
      21: aconst_null
      22: invokespecial #41                 // Method org/apache/solr/client/solrj/impl/HttpClientUtil$UseCompressionRequestInterceptor."<init>":(Lorg/apache/solr/client/solrj/impl/HttpClientUtil$1;)V
      25: invokevirtual #32                 // Method org/apache/http/impl/client/DefaultHttpClient.addRequestInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V
      28: aload_0
      29: new           #39                 // class org/apache/solr/client/solrj/impl/HttpClientUtil$UseCompressionResponseInterceptor
      32: dup
      33: aconst_null
      34: invokespecial #42                 // Method org/apache/solr/client/solrj/impl/HttpClientUtil$UseCompressionResponseInterceptor."<init>":(Lorg/apache/solr/client/solrj/impl/HttpClientUtil$1;)V
      37: invokevirtual #43                 // Method org/apache/http/impl/client/DefaultHttpClient.addResponseInterceptor:(Lorg/apache/http/HttpResponseInterceptor;)V
      40: return

  public static void setBasicAuth(org.apache.http.impl.client.DefaultHttpClient, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        32
       4: aload_2
       5: ifnull        32
       8: aload_0
       9: invokevirtual #44                 // Method org/apache/http/impl/client/DefaultHttpClient.getCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;
      12: getstatic     #45                 // Field org/apache/http/auth/AuthScope.ANY:Lorg/apache/http/auth/AuthScope;
      15: new           #46                 // class org/apache/http/auth/UsernamePasswordCredentials
      18: dup
      19: aload_1
      20: aload_2
      21: invokespecial #47                 // Method org/apache/http/auth/UsernamePasswordCredentials."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      24: invokeinterface #48,  3           // InterfaceMethod org/apache/http/client/CredentialsProvider.setCredentials:(Lorg/apache/http/auth/AuthScope;Lorg/apache/http/auth/Credentials;)V
      29: goto          41
      32: aload_0
      33: invokevirtual #44                 // Method org/apache/http/impl/client/DefaultHttpClient.getCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;
      36: invokeinterface #49,  1           // InterfaceMethod org/apache/http/client/CredentialsProvider.clear:()V
      41: return

  public static void setMaxConnectionsPerHost(org.apache.http.client.HttpClient, int);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
       6: instanceof    #50                 // class org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager
       9: ifeq          30
      12: aload_0
      13: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
      18: checkcast     #50                 // class org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager
      21: astore_2
      22: aload_2
      23: iload_1
      24: invokevirtual #51                 // Method org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager.setDefaultMaxPerRoute:(I)V
      27: goto          57
      30: aload_0
      31: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
      36: instanceof    #22                 // class org/apache/http/impl/conn/PoolingClientConnectionManager
      39: ifeq          57
      42: aload_0
      43: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
      48: checkcast     #22                 // class org/apache/http/impl/conn/PoolingClientConnectionManager
      51: astore_2
      52: aload_2
      53: iload_1
      54: invokevirtual #52                 // Method org/apache/http/impl/conn/PoolingClientConnectionManager.setDefaultMaxPerRoute:(I)V
      57: return

  public static void setMaxConnections(org.apache.http.client.HttpClient, int);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
       6: instanceof    #50                 // class org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager
       9: ifeq          30
      12: aload_0
      13: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
      18: checkcast     #50                 // class org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager
      21: astore_2
      22: aload_2
      23: iload_1
      24: invokevirtual #53                 // Method org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager.setMaxTotal:(I)V
      27: goto          57
      30: aload_0
      31: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
      36: instanceof    #22                 // class org/apache/http/impl/conn/PoolingClientConnectionManager
      39: ifeq          57
      42: aload_0
      43: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/HttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
      48: checkcast     #22                 // class org/apache/http/impl/conn/PoolingClientConnectionManager
      51: astore_2
      52: aload_2
      53: iload_1
      54: invokevirtual #54                 // Method org/apache/http/impl/conn/PoolingClientConnectionManager.setMaxTotal:(I)V
      57: return

  public static void setSoTimeout(org.apache.http.client.HttpClient, int);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
       6: iload_1
       7: invokestatic  #56                 // Method org/apache/http/params/HttpConnectionParams.setSoTimeout:(Lorg/apache/http/params/HttpParams;I)V
      10: return

  public static void setUseRetry(org.apache.http.impl.client.DefaultHttpClient, boolean);
    Code:
       0: iload_1
       1: ifne          14
       4: aload_0
       5: getstatic     #57                 // Field NO_RETRY:Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;
       8: invokevirtual #58                 // Method org/apache/http/impl/client/DefaultHttpClient.setHttpRequestRetryHandler:(Lorg/apache/http/client/HttpRequestRetryHandler;)V
      11: goto          26
      14: aload_0
      15: new           #59                 // class org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler
      18: dup
      19: iconst_3
      20: invokespecial #60                 // Method org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler."<init>":(I)V
      23: invokevirtual #58                 // Method org/apache/http/impl/client/DefaultHttpClient.setHttpRequestRetryHandler:(Lorg/apache/http/client/HttpRequestRetryHandler;)V
      26: return

  public static void setConnectionTimeout(org.apache.http.client.HttpClient, int);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
       6: iload_1
       7: invokestatic  #61                 // Method org/apache/http/params/HttpConnectionParams.setConnectionTimeout:(Lorg/apache/http/params/HttpParams;I)V
      10: return

  public static void setFollowRedirects(org.apache.http.client.HttpClient, boolean);
    Code:
       0: new           #62                 // class org/apache/http/client/params/ClientParamBean
       3: dup
       4: aload_0
       5: invokeinterface #55,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
      10: invokespecial #63                 // Method org/apache/http/client/params/ClientParamBean."<init>":(Lorg/apache/http/params/HttpParams;)V
      13: iload_1
      14: invokevirtual #64                 // Method org/apache/http/client/params/ClientParamBean.setHandleRedirects:(Z)V
      17: return

  public static void setHostNameVerifier(org.apache.http.impl.client.DefaultHttpClient, org.apache.http.conn.ssl.X509HostnameVerifier);
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method org/apache/http/impl/client/DefaultHttpClient.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;
       4: invokeinterface #66,  1           // InterfaceMethod org/apache/http/conn/ClientConnectionManager.getSchemeRegistry:()Lorg/apache/http/conn/scheme/SchemeRegistry;
       9: ldc           #67                 // String https
      11: invokevirtual #68                 // Method org/apache/http/conn/scheme/SchemeRegistry.get:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;
      14: astore_2
      15: aload_2
      16: ifnull        32
      19: aload_2
      20: invokevirtual #69                 // Method org/apache/http/conn/scheme/Scheme.getSchemeSocketFactory:()Lorg/apache/http/conn/scheme/SchemeSocketFactory;
      23: checkcast     #70                 // class org/apache/http/conn/ssl/SSLSocketFactory
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokevirtual #71                 // Method org/apache/http/conn/ssl/SSLSocketFactory.setHostnameVerifier:(Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      32: return

  public static void setStaleCheckingEnabled(org.apache.http.client.HttpClient, boolean);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
       6: iload_1
       7: invokestatic  #72                 // Method org/apache/http/params/HttpConnectionParams.setStaleCheckingEnabled:(Lorg/apache/http/params/HttpParams;Z)V
      10: return

  public static void setTcpNoDelay(org.apache.http.client.HttpClient, boolean);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
       6: iload_1
       7: invokestatic  #73                 // Method org/apache/http/params/HttpConnectionParams.setTcpNoDelay:(Lorg/apache/http/params/HttpParams;Z)V
      10: return

  public static org.apache.http.client.protocol.HttpClientContext createNewHttpClientRequestContext();
    Code:
       0: new           #74                 // class org/apache/http/client/protocol/HttpClientContext
       3: dup
       4: invokespecial #75                 // Method org/apache/http/client/protocol/HttpClientContext."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #76                 // Field org/apache/solr/client/solrj/impl/HttpSolrClient.cacheKey:Ljava/lang/Class;
      12: invokevirtual #77                 // Method org/apache/http/client/protocol/HttpClientContext.setUserToken:(Ljava/lang/Object;)V
      15: aload_0
      16: areturn

  static {};
    Code:
       0: invokestatic  #78                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokevirtual #79                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
       6: invokestatic  #80                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       9: putstatic     #11                 // Field logger:Lorg/slf4j/Logger;
      12: new           #81                 // class org/apache/http/impl/client/DefaultHttpRequestRetryHandler
      15: dup
      16: iconst_0
      17: iconst_0
      18: invokespecial #82                 // Method org/apache/http/impl/client/DefaultHttpRequestRetryHandler."<init>":(IZ)V
      21: putstatic     #57                 // Field NO_RETRY:Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;
      24: new           #83                 // class java/util/ArrayList
      27: dup
      28: new           #7                  // class org/apache/solr/client/solrj/impl/HttpClientConfigurer
      31: dup
      32: invokespecial #8                  // Method org/apache/solr/client/solrj/impl/HttpClientConfigurer."<init>":()V
      35: invokestatic  #84                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      38: invokespecial #85                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      41: invokestatic  #86                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      44: putstatic     #3                  // Field configurers:Ljava/util/List;
      47: new           #83                 // class java/util/ArrayList
      50: dup
      51: invokespecial #87                 // Method java/util/ArrayList."<init>":()V
      54: invokestatic  #86                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      57: putstatic     #30                 // Field interceptors:Ljava/util/List;
      60: ldc           #89                 // String solr.httpclient.builder.factory
      62: invokestatic  #90                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      65: astore_0
      66: aload_0
      67: ifnull        127
      70: getstatic     #11                 // Field logger:Lorg/slf4j/Logger;
      73: new           #13                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #91                 // String Using
      82: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      97: aload_0
      98: invokestatic  #92                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     101: invokevirtual #93                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     104: checkcast     #7                  // class org/apache/solr/client/solrj/impl/HttpClientConfigurer
     107: astore_1
     108: aload_1
     109: invokestatic  #2                  // Method addConfigurer:(Lorg/apache/solr/client/solrj/impl/HttpClientConfigurer;)V
     112: goto          127
     115: astore_1
     116: new           #97                 // class java/lang/RuntimeException
     119: dup
     120: ldc           #98                 // String Unable to instantiate Solr HttpClientBuilderFactory
     122: aload_1
     123: invokespecial #99                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     126: athrow
     127: return
    Exception table:
       from    to  target type
          97   112   115   Class java/lang/InstantiationException
          97   112   115   Class java/lang/IllegalAccessException
          97   112   115   Class java/lang/ClassNotFoundException
}
