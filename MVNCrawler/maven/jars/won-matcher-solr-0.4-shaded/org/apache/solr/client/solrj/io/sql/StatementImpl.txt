Compiled from "StatementImpl.java"
class org.apache.solr.client.solrj.io.sql.StatementImpl implements java.sql.Statement {
  private final org.apache.solr.client.solrj.io.sql.ConnectionImpl connection;

  private boolean closed;

  private java.lang.String currentSQL;

  private org.apache.solr.client.solrj.io.sql.ResultSetImpl currentResultSet;

  private java.sql.SQLWarning currentWarning;

  private int maxRows;

  org.apache.solr.client.solrj.io.sql.StatementImpl(org.apache.solr.client.solrj.io.sql.ConnectionImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Lorg/apache/solr/client/solrj/io/sql/ConnectionImpl;
       9: return

  private void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method isClosed:()Z
       4: ifeq          17
       7: new           #4                  // class java/sql/SQLException
      10: dup
      11: ldc           #5                  // String Statement is closed.
      13: invokespecial #6                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private java.sql.ResultSet executeQueryImpl(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
       4: ifnull        19
       7: aload_0
       8: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      11: invokevirtual #8                  // Method org/apache/solr/client/solrj/io/sql/ResultSetImpl.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      19: aload_0
      20: getfield      #9                  // Field maxRows:I
      23: ifle          64
      26: aload_0
      27: aload_1
      28: invokespecial #10                 // Method containsLimit:(Ljava/lang/String;)Z
      31: ifne          64
      34: new           #11                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      41: aload_1
      42: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #14                 // String  limit
      47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #9                  // Field maxRows:I
      54: invokestatic  #15                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: astore_1
      64: aload_0
      65: iconst_0
      66: putfield      #17                 // Field closed:Z
      69: aload_0
      70: new           #18                 // class org/apache/solr/client/solrj/io/sql/ResultSetImpl
      73: dup
      74: aload_0
      75: aload_0
      76: aload_1
      77: invokevirtual #19                 // Method constructStream:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/SolrStream;
      80: invokespecial #20                 // Method org/apache/solr/client/solrj/io/sql/ResultSetImpl."<init>":(Lorg/apache/solr/client/solrj/io/sql/StatementImpl;Lorg/apache/solr/client/solrj/io/stream/SolrStream;)V
      83: putfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      86: aload_0
      87: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      90: areturn
      91: astore_2
      92: new           #4                  // class java/sql/SQLException
      95: dup
      96: aload_2
      97: invokespecial #22                 // Method java/sql/SQLException."<init>":(Ljava/lang/Throwable;)V
     100: athrow
    Exception table:
       from    to  target type
           0    90    91   Class java/lang/Exception

  protected org.apache.solr.client.solrj.io.stream.SolrStream constructStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/apache/solr/client/solrj/io/sql/ConnectionImpl;
       4: invokevirtual #23                 // Method org/apache/solr/client/solrj/io/sql/ConnectionImpl.getClient:()Lorg/apache/solr/client/solrj/impl/CloudSolrClient;
       7: invokevirtual #24                 // Method org/apache/solr/client/solrj/impl/CloudSolrClient.getZkStateReader:()Lorg/apache/solr/common/cloud/ZkStateReader;
      10: astore_2
      11: aload_0
      12: getfield      #2                  // Field connection:Lorg/apache/solr/client/solrj/io/sql/ConnectionImpl;
      15: invokevirtual #25                 // Method org/apache/solr/client/solrj/io/sql/ConnectionImpl.getCollection:()Ljava/lang/String;
      18: aload_2
      19: iconst_1
      20: invokestatic  #26                 // Method org/apache/solr/client/solrj/io/stream/CloudSolrStream.getSlices:(Ljava/lang/String;Lorg/apache/solr/common/cloud/ZkStateReader;Z)Ljava/util/Collection;
      23: astore_3
      24: new           #27                 // class java/util/ArrayList
      27: dup
      28: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      31: astore        4
      33: aload_3
      34: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      39: astore        5
      41: aload         5
      43: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          117
      51: aload         5
      53: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #32                 // class org/apache/solr/common/cloud/Slice
      61: astore        6
      63: aload         6
      65: invokevirtual #33                 // Method org/apache/solr/common/cloud/Slice.getReplicas:()Ljava/util/Collection;
      68: astore        7
      70: aload         7
      72: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      77: astore        8
      79: aload         8
      81: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          114
      89: aload         8
      91: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #34                 // class org/apache/solr/common/cloud/Replica
      99: astore        9
     101: aload         4
     103: aload         9
     105: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     110: pop
     111: goto          79
     114: goto          41
     117: aload         4
     119: new           #36                 // class java/util/Random
     122: dup
     123: invokespecial #37                 // Method java/util/Random."<init>":()V
     126: invokestatic  #38                 // Method java/util/Collections.shuffle:(Ljava/util/List;Ljava/util/Random;)V
     129: new           #39                 // class org/apache/solr/common/params/ModifiableSolrParams
     132: dup
     133: invokespecial #40                 // Method org/apache/solr/common/params/ModifiableSolrParams."<init>":()V
     136: astore        5
     138: aload         5
     140: ldc           #42                 // String qt
     142: iconst_1
     143: anewarray     #43                 // class java/lang/String
     146: dup
     147: iconst_0
     148: ldc           #44                 // String /sql
     150: aastore
     151: invokevirtual #45                 // Method org/apache/solr/common/params/ModifiableSolrParams.set:(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/solr/common/params/ModifiableSolrParams;
     154: pop
     155: aload         5
     157: ldc           #46                 // String stmt
     159: iconst_1
     160: anewarray     #43                 // class java/lang/String
     163: dup
     164: iconst_0
     165: aload_1
     166: aastore
     167: invokevirtual #45                 // Method org/apache/solr/common/params/ModifiableSolrParams.set:(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/solr/common/params/ModifiableSolrParams;
     170: pop
     171: aload_0
     172: getfield      #2                  // Field connection:Lorg/apache/solr/client/solrj/io/sql/ConnectionImpl;
     175: invokevirtual #47                 // Method org/apache/solr/client/solrj/io/sql/ConnectionImpl.getProperties:()Ljava/util/Properties;
     178: invokevirtual #48                 // Method java/util/Properties.stringPropertyNames:()Ljava/util/Set;
     181: invokeinterface #49,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     186: astore        6
     188: aload         6
     190: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     195: ifeq          240
     198: aload         6
     200: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     205: checkcast     #43                 // class java/lang/String
     208: astore        7
     210: aload         5
     212: aload         7
     214: iconst_1
     215: anewarray     #43                 // class java/lang/String
     218: dup
     219: iconst_0
     220: aload_0
     221: getfield      #2                  // Field connection:Lorg/apache/solr/client/solrj/io/sql/ConnectionImpl;
     224: invokevirtual #47                 // Method org/apache/solr/client/solrj/io/sql/ConnectionImpl.getProperties:()Ljava/util/Properties;
     227: aload         7
     229: invokevirtual #50                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     232: aastore
     233: invokevirtual #45                 // Method org/apache/solr/common/params/ModifiableSolrParams.set:(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/solr/common/params/ModifiableSolrParams;
     236: pop
     237: goto          188
     240: aload         4
     242: iconst_0
     243: invokeinterface #51,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     248: checkcast     #34                 // class org/apache/solr/common/cloud/Replica
     251: astore        6
     253: new           #52                 // class org/apache/solr/common/cloud/ZkCoreNodeProps
     256: dup
     257: aload         6
     259: invokespecial #53                 // Method org/apache/solr/common/cloud/ZkCoreNodeProps."<init>":(Lorg/apache/solr/common/cloud/ZkNodeProps;)V
     262: astore        7
     264: aload         7
     266: invokevirtual #54                 // Method org/apache/solr/common/cloud/ZkCoreNodeProps.getCoreUrl:()Ljava/lang/String;
     269: astore        8
     271: new           #55                 // class org/apache/solr/client/solrj/io/stream/SolrStream
     274: dup
     275: aload         8
     277: aload         5
     279: invokespecial #56                 // Method org/apache/solr/client/solrj/io/stream/SolrStream."<init>":(Ljava/lang/String;Lorg/apache/solr/common/params/SolrParams;)V
     282: areturn
     283: astore_2
     284: new           #57                 // class java/io/IOException
     287: dup
     288: aload_2
     289: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     292: athrow
    Exception table:
       from    to  target type
           0   282   283   Class java/lang/Exception

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #59                 // Method executeQueryImpl:(Ljava/lang/String;)Ljava/sql/ResultSet;
       5: areturn

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #17                 // Field closed:Z
      13: aload_0
      14: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      17: ifnull        27
      20: aload_0
      21: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      24: invokevirtual #8                  // Method org/apache/solr/client/solrj/io/sql/ResultSetImpl.close:()V
      27: return

  public int getMaxFieldSize() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void setMaxFieldSize(int) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int getMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxRows:I
       4: ireturn

  public void setMaxRows(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field maxRows:I
       5: return

  public void setEscapeProcessing(boolean) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int getQueryTimeout() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void setQueryTimeout(int) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void cancel() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #63                 // Field currentWarning:Ljava/sql/SQLWarning;
       8: areturn

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: aload_0
       5: aconst_null
       6: putfield      #63                 // Field currentWarning:Ljava/sql/SQLWarning;
       9: return

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
       4: ifnull        19
       7: aload_0
       8: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      11: invokevirtual #8                  // Method org/apache/solr/client/solrj/io/sql/ResultSetImpl.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
      19: aload_0
      20: aload_1
      21: putfield      #64                 // Field currentSQL:Ljava/lang/String;
      24: iconst_1
      25: ireturn

  public java.sql.ResultSet getResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #64                 // Field currentSQL:Ljava/lang/String;
       5: invokespecial #59                 // Method executeQueryImpl:(Ljava/lang/String;)Ljava/sql/ResultSet;
       8: areturn

  public int getUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: iconst_m1
       5: ireturn

  public boolean getMoreResults() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #7                  // Field currentResultSet:Lorg/apache/solr/client/solrj/io/sql/ResultSetImpl;
       8: invokevirtual #8                  // Method org/apache/solr/client/solrj/io/sql/ResultSetImpl.close:()V
      11: iconst_0
      12: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: iload_1
       5: sipush        1000
       8: if_icmpeq     21
      11: new           #4                  // class java/sql/SQLException
      14: dup
      15: ldc           #66                 // String Direction must be ResultSet.FETCH_FORWARD currently
      17: invokespecial #6                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: return

  public int getFetchDirection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: sipush        1000
       7: ireturn

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: iload_1
       5: ifge          18
       8: new           #4                  // class java/sql/SQLException
      11: dup
      12: ldc           #67                 // String Rows must be >= 0
      14: invokespecial #6                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: return

  public int getFetchSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: iconst_0
       5: ireturn

  public int getResultSetConcurrency() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: sipush        1007
       7: ireturn

  public int getResultSetType() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #62                 // Method checkClosed:()V
       4: sipush        1003
       7: ireturn

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void clearBatch() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/apache/solr/client/solrj/io/sql/ConnectionImpl;
       4: areturn

  public boolean getMoreResults(int) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.sql.ResultSet getGeneratedKeys() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int executeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int executeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int executeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean execute(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean execute(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean execute(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int getResultSetHoldability() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field closed:Z
       4: ireturn

  public void setPoolable(boolean) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isPoolable() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public void closeOnCompletion() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isCloseOnCompletion() throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: new           #60                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #61                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private boolean containsLimit(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #68                 // String \\s+
       3: invokevirtual #69                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: aload_2
       9: arraylength
      10: iconst_2
      11: isub
      12: aaload
      13: astore_3
      14: ldc           #70                 // String limit
      16: aload_3
      17: invokevirtual #71                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ireturn
}
