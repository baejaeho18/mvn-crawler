Compiled from "GatherNodesStream.java"
class org.apache.solr.client.solrj.io.graph.GatherNodesStream$NodeStream extends org.apache.solr.client.solrj.io.stream.TupleStream {
  private java.util.List<java.lang.String> ids;

  private java.util.Iterator<java.lang.String> it;

  final org.apache.solr.client.solrj.io.graph.GatherNodesStream this$0;

  public org.apache.solr.client.solrj.io.graph.GatherNodesStream$NodeStream(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/solr/client/solrj/io/graph/GatherNodesStream;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/solr/client/solrj/io/stream/TupleStream."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field ids:Ljava/util/List;
      14: return

  public void open();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field ids:Ljava/util/List;
       5: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: putfield      #5                  // Field it:Ljava/util/Iterator;
      13: return

  public void close();
    Code:
       0: return

  public org.apache.solr.client.solrj.io.comp.StreamComparator getStreamSort();
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children();
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
       7: areturn

  public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext);
    Code:
       0: return

  public org.apache.solr.client.solrj.io.Tuple read();
    Code:
       0: new           #8                  // class java/util/HashMap
       3: dup
       4: invokespecial #9                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field it:Ljava/util/Iterator;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          45
      20: aload_1
      21: ldc           #11                 // String node
      23: aload_0
      24: getfield      #5                  // Field it:Ljava/util/Iterator;
      27: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: new           #14                 // class org/apache/solr/client/solrj/io/Tuple
      39: dup
      40: aload_1
      41: invokespecial #15                 // Method org/apache/solr/client/solrj/io/Tuple."<init>":(Ljava/util/Map;)V
      44: areturn
      45: aload_1
      46: ldc           #16                 // String EOF
      48: iconst_1
      49: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      52: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: new           #14                 // class org/apache/solr/client/solrj/io/Tuple
      59: dup
      60: aload_1
      61: invokespecial #15                 // Method org/apache/solr/client/solrj/io/Tuple."<init>":(Ljava/util/Map;)V
      64: areturn

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: getfield      #3                  // Field ids:Ljava/util/List;
      14: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          63
      29: aload_3
      30: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #20                 // class java/lang/String
      38: astore        4
      40: iload_2
      41: ifeq          51
      44: aload_1
      45: ldc           #21                 // String ,
      47: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: aload         4
      54: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: iconst_1
      59: istore_2
      60: goto          20
      63: aload_1
      64: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public org.apache.solr.client.solrj.io.stream.expr.Explanation toExplanation(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException;
    Code:
       0: new           #24                 // class org/apache/solr/client/solrj/io/stream/expr/StreamExplanation
       3: dup
       4: aload_0
       5: invokevirtual #25                 // Method getStreamNodeId:()Ljava/util/UUID;
       8: invokevirtual #26                 // Method java/util/UUID.toString:()Ljava/lang/String;
      11: invokespecial #27                 // Method org/apache/solr/client/solrj/io/stream/expr/StreamExplanation."<init>":(Ljava/lang/String;)V
      14: ldc           #28                 // String non-expressible
      16: invokevirtual #29                 // Method org/apache/solr/client/solrj/io/stream/expr/StreamExplanation.withFunctionName:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      19: aload_0
      20: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: invokevirtual #31                 // Method java/lang/Class.getName:()Ljava/lang/String;
      26: invokevirtual #32                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withImplementingClass:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      29: ldc           #34                 // String stream-source
      31: invokevirtual #35                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withExpressionType:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      34: ldc           #28                 // String non-expressible
      36: invokevirtual #36                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withExpression:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      39: areturn
}
