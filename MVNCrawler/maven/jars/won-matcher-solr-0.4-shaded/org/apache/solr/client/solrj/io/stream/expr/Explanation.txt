Compiled from "Explanation.java"
public class org.apache.solr.client.solrj.io.stream.expr.Explanation implements org.apache.solr.common.MapSerializable {
  private java.lang.String expressionNodeId;

  private java.lang.String expressionType;

  private java.lang.String functionName;

  private java.lang.String implementingClass;

  private java.lang.String expression;

  private java.lang.String note;

  private java.util.List<org.apache.solr.client.solrj.io.stream.expr.Explanation> helpers;

  public org.apache.solr.client.solrj.io.stream.expr.Explanation(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field expressionNodeId:Ljava/lang/String;
       9: return

  public java.lang.String getExpressionNodeId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field expressionNodeId:Ljava/lang/String;
       4: areturn

  public java.lang.String getExpressionType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field expressionType:Ljava/lang/String;
       4: areturn

  public void setExpressionType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field expressionType:Ljava/lang/String;
       5: return

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withExpressionType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method setExpressionType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String getFunctionName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field functionName:Ljava/lang/String;
       4: areturn

  public void setFunctionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field functionName:Ljava/lang/String;
       5: return

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withFunctionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method setFunctionName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String getImplementingClass();
    Code:
       0: aload_0
       1: getfield      #7                  // Field implementingClass:Ljava/lang/String;
       4: areturn

  public void setImplementingClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field implementingClass:Ljava/lang/String;
       5: return

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withImplementingClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method setImplementingClass:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String getExpression();
    Code:
       0: aload_0
       1: getfield      #9                  // Field expression:Ljava/lang/String;
       4: areturn

  public void setExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field expression:Ljava/lang/String;
       5: return

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method setExpression:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.lang.String getNote();
    Code:
       0: aload_0
       1: getfield      #11                 // Field note:Ljava/lang/String;
       4: areturn

  public void setNote(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field note:Ljava/lang/String;
       5: return

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withNote(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method setNote:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<org.apache.solr.client.solrj.io.stream.expr.Explanation> getHelpers();
    Code:
       0: aload_0
       1: getfield      #13                 // Field helpers:Ljava/util/List;
       4: areturn

  public void setHelpers(java.util.List<org.apache.solr.client.solrj.io.stream.expr.Explanation>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field helpers:Ljava/util/List;
       5: return

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withHelpers(java.util.List<org.apache.solr.client.solrj.io.stream.expr.Explanation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method setHelpers:(Ljava/util/List;)V
       5: aload_0
       6: areturn

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withHelpers(org.apache.solr.client.solrj.io.stream.expr.Explanation[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokevirtual #15                 // Method addHelper:(Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;)V
      26: iinc          4, 1
      29: goto          8
      32: aload_0
      33: areturn

  public org.apache.solr.client.solrj.io.stream.expr.Explanation withHelper(org.apache.solr.client.solrj.io.stream.expr.Explanation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method addHelper:(Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;)V
       5: aload_0
       6: areturn

  public void addHelper(org.apache.solr.client.solrj.io.stream.expr.Explanation);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #13                 // Field helpers:Ljava/util/List;
       5: if_acmpne     20
       8: aload_0
       9: new           #16                 // class java/util/ArrayList
      12: dup
      13: iconst_1
      14: invokespecial #17                 // Method java/util/ArrayList."<init>":(I)V
      17: putfield      #13                 // Field helpers:Ljava/util/List;
      20: aload_0
      21: getfield      #13                 // Field helpers:Ljava/util/List;
      24: aload_1
      25: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: return

  public java.util.Map toMap(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #2                  // Field expressionNodeId:Ljava/lang/String;
       5: if_acmpeq     21
       8: aload_1
       9: ldc           #19                 // String expressionNodeId
      11: aload_0
      12: getfield      #2                  // Field expressionNodeId:Ljava/lang/String;
      15: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aconst_null
      22: aload_0
      23: getfield      #3                  // Field expressionType:Ljava/lang/String;
      26: if_acmpeq     42
      29: aload_1
      30: ldc           #21                 // String expressionType
      32: aload_0
      33: getfield      #3                  // Field expressionType:Ljava/lang/String;
      36: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aconst_null
      43: aload_0
      44: getfield      #5                  // Field functionName:Ljava/lang/String;
      47: if_acmpeq     63
      50: aload_1
      51: ldc           #22                 // String functionName
      53: aload_0
      54: getfield      #5                  // Field functionName:Ljava/lang/String;
      57: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aconst_null
      64: aload_0
      65: getfield      #7                  // Field implementingClass:Ljava/lang/String;
      68: if_acmpeq     84
      71: aload_1
      72: ldc           #23                 // String implementingClass
      74: aload_0
      75: getfield      #7                  // Field implementingClass:Ljava/lang/String;
      78: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aconst_null
      85: aload_0
      86: getfield      #9                  // Field expression:Ljava/lang/String;
      89: if_acmpeq     105
      92: aload_1
      93: ldc           #24                 // String expression
      95: aload_0
      96: getfield      #9                  // Field expression:Ljava/lang/String;
      99: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     104: pop
     105: aconst_null
     106: aload_0
     107: getfield      #11                 // Field note:Ljava/lang/String;
     110: if_acmpeq     126
     113: aload_1
     114: ldc           #25                 // String note
     116: aload_0
     117: getfield      #11                 // Field note:Ljava/lang/String;
     120: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     125: pop
     126: aconst_null
     127: aload_0
     128: getfield      #13                 // Field helpers:Ljava/util/List;
     131: if_acmpeq     217
     134: iconst_0
     135: aload_0
     136: getfield      #13                 // Field helpers:Ljava/util/List;
     139: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
     144: if_icmpeq     217
     147: new           #16                 // class java/util/ArrayList
     150: dup
     151: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
     154: astore_2
     155: aload_0
     156: getfield      #13                 // Field helpers:Ljava/util/List;
     159: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     164: astore_3
     165: aload_3
     166: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     171: ifeq          207
     174: aload_3
     175: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     180: checkcast     #31                 // class org/apache/solr/client/solrj/io/stream/expr/Explanation
     183: astore        4
     185: aload_2
     186: aload         4
     188: new           #32                 // class java/util/LinkedHashMap
     191: dup
     192: invokespecial #33                 // Method java/util/LinkedHashMap."<init>":()V
     195: invokevirtual #34                 // Method toMap:(Ljava/util/Map;)Ljava/util/Map;
     198: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     203: pop
     204: goto          165
     207: aload_1
     208: ldc           #35                 // String helpers
     210: aload_2
     211: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     216: pop
     217: aload_1
     218: areturn
}
