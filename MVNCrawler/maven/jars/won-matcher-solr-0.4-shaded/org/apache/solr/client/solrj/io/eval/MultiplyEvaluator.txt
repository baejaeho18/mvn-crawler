Compiled from "MultiplyEvaluator.java"
public class org.apache.solr.client.solrj.io.eval.MultiplyEvaluator extends org.apache.solr.client.solrj.io.eval.NumberEvaluator {
  protected static final long serialVersionUID;

  public org.apache.solr.client.solrj.io.eval.MultiplyEvaluator(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/solr/client/solrj/io/eval/NumberEvaluator."<init>":(Lorg/apache/solr/client/solrj/io/stream/expr/StreamExpression;Lorg/apache/solr/client/solrj/io/stream/expr/StreamFactory;)V
       6: aload_0
       7: getfield      #2                  // Field subEvaluators:Ljava/util/List;
      10: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      15: iconst_2
      16: if_icmpge     58
      19: new           #4                  // class java/io/IOException
      22: dup
      23: getstatic     #5                  // Field java/util/Locale.ROOT:Ljava/util/Locale;
      26: ldc           #6                  // String Invalid expression %s - expecting at least two values but found %d
      28: iconst_2
      29: anewarray     #7                  // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_1
      35: aastore
      36: dup
      37: iconst_1
      38: aload_0
      39: getfield      #2                  // Field subEvaluators:Ljava/util/List;
      42: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      47: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: aastore
      51: invokestatic  #9                  // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      54: invokespecial #10                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: return

  public java.lang.Number evaluate(org.apache.solr.client.solrj.io.Tuple) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method evaluateAll:(Lorg/apache/solr/client/solrj/io/Tuple;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: invokeinterface #12,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      12: invokedynamic #13,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      17: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      22: ifeq          27
      25: aconst_null
      26: areturn
      27: aconst_null
      28: astore_3
      29: aload_2
      30: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      35: ifle          88
      38: aload_2
      39: iconst_0
      40: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      45: checkcast     #16                 // class java/math/BigDecimal
      48: astore_3
      49: iconst_1
      50: istore        4
      52: iload         4
      54: aload_2
      55: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      60: if_icmpge     88
      63: aload_3
      64: aload_2
      65: iload         4
      67: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      72: checkcast     #16                 // class java/math/BigDecimal
      75: getstatic     #17                 // Field java/math/MathContext.DECIMAL64:Ljava/math/MathContext;
      78: invokevirtual #18                 // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
      81: astore_3
      82: iinc          4, 1
      85: goto          52
      88: aload_0
      89: aload_3
      90: invokevirtual #19                 // Method normalizeType:(Ljava/math/BigDecimal;)Ljava/lang/Number;
      93: areturn

  public java.lang.Object evaluate(org.apache.solr.client.solrj.io.Tuple) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method evaluate:(Lorg/apache/solr/client/solrj/io/Tuple;)Ljava/lang/Number;
       5: areturn

  private static boolean lambda$evaluate$0(java.math.BigDecimal);
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn
}
