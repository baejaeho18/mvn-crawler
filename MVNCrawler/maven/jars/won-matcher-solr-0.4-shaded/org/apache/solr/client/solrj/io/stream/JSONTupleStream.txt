Compiled from "JSONTupleStream.java"
public class org.apache.solr.client.solrj.io.stream.JSONTupleStream implements org.apache.solr.client.solrj.io.stream.TupleStreamParser {
  private java.util.List<java.lang.String> path;

  private java.io.Reader reader;

  private org.noggit.JSONParser parser;

  private boolean atDocs;

  public org.apache.solr.client.solrj.io.stream.JSONTupleStream(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field reader:Ljava/io/Reader;
       9: aload_0
      10: new           #3                  // class org/noggit/JSONParser
      13: dup
      14: aload_1
      15: invokespecial #4                  // Method org/noggit/JSONParser."<init>":(Ljava/io/Reader;)V
      18: putfield      #5                  // Field parser:Lorg/noggit/JSONParser;
      21: return

  public static org.apache.solr.client.solrj.io.stream.JSONTupleStream create(org.apache.solr.client.solrj.SolrClient, org.apache.solr.common.params.SolrParams) throws java.io.IOException, org.apache.solr.client.solrj.SolrServerException;
    Code:
       0: aload_1
       1: ldc           #6                  // String qt
       3: invokevirtual #7                  // Method org/apache/solr/common/params/SolrParams.get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ifnull        23
      11: aload_1
      12: checkcast     #8                  // class org/apache/solr/common/params/ModifiableSolrParams
      15: astore_3
      16: aload_3
      17: ldc           #6                  // String qt
      19: invokevirtual #9                  // Method org/apache/solr/common/params/ModifiableSolrParams.remove:(Ljava/lang/String;)[Ljava/lang/String;
      22: pop
      23: new           #10                 // class org/apache/solr/client/solrj/request/QueryRequest
      26: dup
      27: aload_1
      28: invokespecial #11                 // Method org/apache/solr/client/solrj/request/QueryRequest."<init>":(Lorg/apache/solr/common/params/SolrParams;)V
      31: astore_3
      32: aload_3
      33: aload_2
      34: invokevirtual #12                 // Method org/apache/solr/client/solrj/request/QueryRequest.setPath:(Ljava/lang/String;)V
      37: aload_3
      38: new           #13                 // class org/apache/solr/client/solrj/impl/InputStreamResponseParser
      41: dup
      42: ldc           #14                 // String json
      44: invokespecial #15                 // Method org/apache/solr/client/solrj/impl/InputStreamResponseParser."<init>":(Ljava/lang/String;)V
      47: invokevirtual #16                 // Method org/apache/solr/client/solrj/request/QueryRequest.setResponseParser:(Lorg/apache/solr/client/solrj/ResponseParser;)V
      50: aload_3
      51: getstatic     #17                 // Field org/apache/solr/client/solrj/SolrRequest$METHOD.POST:Lorg/apache/solr/client/solrj/SolrRequest$METHOD;
      54: invokevirtual #18                 // Method org/apache/solr/client/solrj/request/QueryRequest.setMethod:(Lorg/apache/solr/client/solrj/SolrRequest$METHOD;)V
      57: aload_0
      58: aload_3
      59: invokevirtual #19                 // Method org/apache/solr/client/solrj/SolrClient.request:(Lorg/apache/solr/client/solrj/SolrRequest;)Lorg/apache/solr/common/util/NamedList;
      62: astore        4
      64: aload         4
      66: ldc           #20                 // String stream
      68: invokevirtual #21                 // Method org/apache/solr/common/util/NamedList.get:(Ljava/lang/String;)Ljava/lang/Object;
      71: checkcast     #22                 // class java/io/InputStream
      74: astore        5
      76: new           #23                 // class java/io/InputStreamReader
      79: dup
      80: aload         5
      82: ldc           #24                 // String UTF-8
      84: invokespecial #25                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      87: astore        6
      89: new           #26                 // class org/apache/solr/client/solrj/io/stream/JSONTupleStream
      92: dup
      93: aload         6
      95: invokespecial #27                 // Method "<init>":(Ljava/io/Reader;)V
      98: areturn

  public java.util.Map<java.lang.String, java.lang.Object> next() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field atDocs:Z
       4: ifne          23
       7: aload_0
       8: invokespecial #29                 // Method advanceToDocs:()Z
      11: istore_1
      12: aload_0
      13: iconst_1
      14: putfield      #28                 // Field atDocs:Z
      17: iload_1
      18: ifne          23
      21: aconst_null
      22: areturn
      23: aload_0
      24: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
      27: invokevirtual #30                 // Method org/noggit/JSONParser.nextEvent:()I
      30: istore_1
      31: iload_1
      32: bipush        10
      34: if_icmpne     39
      37: aconst_null
      38: areturn
      39: aload_0
      40: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
      43: invokestatic  #31                 // Method org/noggit/ObjectBuilder.getVal:(Lorg/noggit/JSONParser;)Ljava/lang/Object;
      46: astore_2
      47: aload_2
      48: checkcast     #32                 // class java/util/Map
      51: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field reader:Ljava/io/Reader;
       4: invokevirtual #33                 // Method java/io/Reader.close:()V
       7: return

  private void expect(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
       4: invokevirtual #30                 // Method org/noggit/JSONParser.nextEvent:()I
       7: istore_2
       8: iload_2
       9: iload_1
      10: if_icmpeq     55
      13: new           #34                 // class java/io/IOException
      16: dup
      17: new           #35                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #37                 // String JSONTupleStream: expected
      26: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: iload_1
      30: invokestatic  #39                 // Method org/noggit/JSONParser.getEventString:(I)Ljava/lang/String;
      33: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #40                 // String  but got
      38: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: iload_2
      42: invokestatic  #39                 // Method org/noggit/JSONParser.getEventString:(I)Ljava/lang/String;
      45: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #42                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: return

  private void expect(java.lang.String);
    Code:
       0: return

  private boolean advanceToMapKey(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
       4: invokevirtual #30                 // Method org/noggit/JSONParser.nextEvent:()I
       7: istore_3
       8: iload_3
       9: tableswitch   { // 1 to 9
                     1: 60
                     2: 141
                     3: 141
                     4: 141
                     5: 141
                     6: 141
                     7: 103
                     8: 101
                     9: 135
               default: 141
          }
      60: aload_1
      61: ifnull        141
      64: aload_0
      65: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
      68: invokevirtual #43                 // Method org/noggit/JSONParser.getString:()Ljava/lang/String;
      71: astore        4
      73: aload_1
      74: aload         4
      76: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          84
      82: iconst_1
      83: ireturn
      84: ldc           #45                 // String error
      86: aload         4
      88: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifeq          98
      94: aload_0
      95: invokespecial #46                 // Method handleError:()V
      98: goto          141
     101: iconst_0
     102: ireturn
     103: iload_2
     104: ifeq          125
     107: aload_0
     108: aload_1
     109: iconst_1
     110: invokespecial #47                 // Method advanceToMapKey:(Ljava/lang/String;Z)Z
     113: istore        4
     115: iload         4
     117: ifeq          122
     120: iconst_1
     121: ireturn
     122: goto          141
     125: aload_0
     126: aconst_null
     127: iconst_0
     128: invokespecial #47                 // Method advanceToMapKey:(Ljava/lang/String;Z)Z
     131: pop
     132: goto          141
     135: aload_0
     136: aload_1
     137: iload_2
     138: invokespecial #48                 // Method skipArray:(Ljava/lang/String;Z)V
     141: goto          0

  private void handleError() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
       4: invokevirtual #30                 // Method org/noggit/JSONParser.nextEvent:()I
       7: istore_1
       8: iload_1
       9: iconst_1
      10: if_icmpne     67
      13: aload_0
      14: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
      17: invokevirtual #43                 // Method org/noggit/JSONParser.getString:()Ljava/lang/String;
      20: astore_2
      21: ldc           #49                 // String msg
      23: aload_2
      24: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          64
      30: aload_0
      31: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
      34: invokevirtual #30                 // Method org/noggit/JSONParser.nextEvent:()I
      37: istore_1
      38: iload_1
      39: iconst_1
      40: if_icmpne     64
      43: aload_0
      44: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
      47: invokevirtual #43                 // Method org/noggit/JSONParser.getString:()Ljava/lang/String;
      50: astore_3
      51: aload_3
      52: ifnull        64
      55: new           #50                 // class org/apache/solr/client/solrj/io/stream/SolrStream$HandledException
      58: dup
      59: aload_3
      60: invokespecial #51                 // Method org/apache/solr/client/solrj/io/stream/SolrStream$HandledException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: goto          83
      67: iload_1
      68: bipush        8
      70: if_icmpne     83
      73: new           #34                 // class java/io/IOException
      76: dup
      77: ldc           #52                 // String
      79: invokespecial #42                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: goto          0

  private void skipArray(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Lorg/noggit/JSONParser;
       4: invokevirtual #30                 // Method org/noggit/JSONParser.nextEvent:()I
       7: istore_3
       8: iload_3
       9: tableswitch   { // 7 to 10
                     7: 40
                     8: 60
                     9: 50
                    10: 59
               default: 60
          }
      40: aload_0
      41: aload_1
      42: iload_2
      43: invokespecial #47                 // Method advanceToMapKey:(Ljava/lang/String;Z)Z
      46: pop
      47: goto          60
      50: aload_0
      51: aload_1
      52: iload_2
      53: invokespecial #48                 // Method skipArray:(Ljava/lang/String;Z)V
      56: goto          60
      59: return
      60: goto          0

  private boolean advanceToDocs() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        7
       3: invokespecial #53                 // Method expect:(I)V
       6: aload_0
       7: ldc           #54                 // String docs
       9: iconst_1
      10: invokespecial #47                 // Method advanceToMapKey:(Ljava/lang/String;Z)Z
      13: istore_1
      14: aload_0
      15: bipush        9
      17: invokespecial #53                 // Method expect:(I)V
      20: iload_1
      21: ireturn
}
