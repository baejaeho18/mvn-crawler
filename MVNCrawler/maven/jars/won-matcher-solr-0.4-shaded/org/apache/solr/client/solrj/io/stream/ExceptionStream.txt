Compiled from "ExceptionStream.java"
public class org.apache.solr.client.solrj.io.stream.ExceptionStream extends org.apache.solr.client.solrj.io.stream.TupleStream {
  private org.apache.solr.client.solrj.io.stream.TupleStream stream;

  private java.lang.Exception openException;

  private static final org.slf4j.Logger log;

  public org.apache.solr.client.solrj.io.stream.ExceptionStream(org.apache.solr.client.solrj.io.stream.TupleStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/solr/client/solrj/io/stream/TupleStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       9: return

  public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children();
    Code:
       0: aconst_null
       1: areturn

  public void open();
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: invokevirtual #3                  // Method org/apache/solr/client/solrj/io/stream/TupleStream.open:()V
       7: goto          16
      10: astore_1
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field openException:Ljava/lang/Exception;
      16: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Exception

  public org.apache.solr.client.solrj.io.Tuple read();
    Code:
       0: aload_0
       1: getfield      #5                  // Field openException:Ljava/lang/Exception;
       4: ifnull        63
       7: new           #6                  // class java/util/HashMap
      10: dup
      11: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      14: astore_1
      15: aload_1
      16: ldc           #8                  // String EXCEPTION
      18: aload_0
      19: getfield      #5                  // Field openException:Ljava/lang/Exception;
      22: invokevirtual #9                  // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      25: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_1
      32: ldc           #11                 // String EOF
      34: iconst_1
      35: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      38: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: getstatic     #13                 // Field log:Lorg/slf4j/Logger;
      47: aload_0
      48: getfield      #5                  // Field openException:Ljava/lang/Exception;
      51: invokestatic  #14                 // Method org/apache/solr/common/SolrException.log:(Lorg/slf4j/Logger;Ljava/lang/Throwable;)V
      54: new           #15                 // class org/apache/solr/client/solrj/io/Tuple
      57: dup
      58: aload_1
      59: invokespecial #16                 // Method org/apache/solr/client/solrj/io/Tuple."<init>":(Ljava/util/Map;)V
      62: areturn
      63: aload_0
      64: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
      67: invokevirtual #17                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.read:()Lorg/apache/solr/client/solrj/io/Tuple;
      70: areturn
      71: astore_1
      72: new           #6                  // class java/util/HashMap
      75: dup
      76: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      79: astore_2
      80: aload_2
      81: ldc           #8                  // String EXCEPTION
      83: aload_1
      84: invokevirtual #9                  // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      87: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_2
      94: ldc           #11                 // String EOF
      96: iconst_1
      97: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     100: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: getstatic     #13                 // Field log:Lorg/slf4j/Logger;
     109: aload_1
     110: invokestatic  #14                 // Method org/apache/solr/common/SolrException.log:(Lorg/slf4j/Logger;Ljava/lang/Throwable;)V
     113: new           #15                 // class org/apache/solr/client/solrj/io/Tuple
     116: dup
     117: aload_2
     118: invokespecial #16                 // Method org/apache/solr/client/solrj/io/Tuple."<init>":(Ljava/util/Map;)V
     121: areturn
    Exception table:
       from    to  target type
          63    70    71   Class java/lang/Exception

  public org.apache.solr.client.solrj.io.stream.expr.Explanation toExplanation(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException;
    Code:
       0: new           #18                 // class org/apache/solr/client/solrj/io/stream/expr/StreamExplanation
       3: dup
       4: aload_0
       5: invokevirtual #19                 // Method getStreamNodeId:()Ljava/util/UUID;
       8: invokevirtual #20                 // Method java/util/UUID.toString:()Ljava/lang/String;
      11: invokespecial #21                 // Method org/apache/solr/client/solrj/io/stream/expr/StreamExplanation."<init>":(Ljava/lang/String;)V
      14: ldc           #22                 // String non-expressible
      16: invokevirtual #23                 // Method org/apache/solr/client/solrj/io/stream/expr/StreamExplanation.withFunctionName:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      19: aload_0
      20: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      26: invokevirtual #26                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withImplementingClass:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      29: ldc           #28                 // String stream-source
      31: invokevirtual #29                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withExpressionType:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      34: ldc           #22                 // String non-expressible
      36: invokevirtual #30                 // Method org/apache/solr/client/solrj/io/stream/expr/Explanation.withExpression:(Ljava/lang/String;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
      39: areturn

  public org.apache.solr.client.solrj.io.comp.StreamComparator getStreamSort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: invokevirtual #31                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.getStreamSort:()Lorg/apache/solr/client/solrj/io/comp/StreamComparator;
       7: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: invokevirtual #32                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.close:()V
       7: return

  public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: aload_1
       5: invokevirtual #33                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.setStreamContext:(Lorg/apache/solr/client/solrj/io/stream/StreamContext;)V
       8: return

  static {};
    Code:
       0: invokestatic  #34                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokevirtual #35                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
       6: invokestatic  #36                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       9: putstatic     #13                 // Field log:Lorg/slf4j/Logger;
      12: return
}
