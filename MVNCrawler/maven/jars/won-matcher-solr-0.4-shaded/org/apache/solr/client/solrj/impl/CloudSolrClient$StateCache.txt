Compiled from "CloudSolrClient.java"
class org.apache.solr.client.solrj.impl.CloudSolrClient$StateCache extends java.util.concurrent.ConcurrentHashMap<java.lang.String, org.apache.solr.client.solrj.impl.CloudSolrClient$ExpiringCachedDocCollection> {
  final java.util.concurrent.atomic.AtomicLong puts;

  final java.util.concurrent.atomic.AtomicLong hits;

  final java.util.concurrent.locks.Lock evictLock;

  private volatile long timeToLive;

  org.apache.solr.client.solrj.impl.CloudSolrClient$StateCache();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #5                  // Field puts:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #6                  // Field hits:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/locks/ReentrantLock
      30: dup
      31: iconst_1
      32: invokespecial #8                  // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      35: putfield      #9                  // Field evictLock:Ljava/util/concurrent/locks/Lock;
      38: aload_0
      39: ldc2_w        #10                 // long 60000l
      42: putfield      #1                  // Field timeToLive:J
      45: return

  public org.apache.solr.client.solrj.impl.CloudSolrClient$ExpiringCachedDocCollection get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #13                 // class org/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection
       8: astore_2
       9: aload_2
      10: ifnonnull     19
      13: aload_0
      14: invokevirtual #14                 // Method evictStale:()V
      17: aconst_null
      18: areturn
      19: aload_2
      20: aload_0
      21: getfield      #1                  // Field timeToLive:J
      24: invokevirtual #15                 // Method org/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection.isExpired:(J)Z
      27: ifeq          38
      30: aload_0
      31: aload_1
      32: invokespecial #16                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aconst_null
      37: areturn
      38: aload_0
      39: getfield      #6                  // Field hits:Ljava/util/concurrent/atomic/AtomicLong;
      42: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      45: pop2
      46: aload_2
      47: areturn

  public org.apache.solr.client.solrj.impl.CloudSolrClient$ExpiringCachedDocCollection put(java.lang.String, org.apache.solr.client.solrj.impl.CloudSolrClient$ExpiringCachedDocCollection);
    Code:
       0: aload_0
       1: getfield      #5                  // Field puts:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #18                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #13                 // class org/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection
      17: areturn

  void evictStale();
    Code:
       0: aload_0
       1: getfield      #9                  // Field evictLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:()Z
       9: ifne          13
      12: return
      13: aload_0
      14: invokevirtual #20                 // Method entrySet:()Ljava/util/Set;
      17: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          75
      32: aload_1
      33: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #24                 // class java/util/Map$Entry
      41: astore_2
      42: aload_2
      43: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #13                 // class org/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection
      51: aload_0
      52: getfield      #1                  // Field timeToLive:J
      55: invokevirtual #15                 // Method org/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection.isExpired:(J)Z
      58: ifeq          72
      61: aload_0
      62: aload_2
      63: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      68: invokespecial #16                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: goto          23
      75: aload_0
      76: getfield      #9                  // Field evictLock:Ljava/util/concurrent/locks/Lock;
      79: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      84: goto          99
      87: astore_3
      88: aload_0
      89: getfield      #9                  // Field evictLock:Ljava/util/concurrent/locks/Lock;
      92: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      97: aload_3
      98: athrow
      99: return
    Exception table:
       from    to  target type
          13    75    87   any

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class java/lang/String
       5: aload_2
       6: checkcast     #13                 // class org/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection
       9: invokevirtual #29                 // Method put:(Ljava/lang/String;Lorg/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection;)Lorg/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method get:(Ljava/lang/Object;)Lorg/apache/solr/client/solrj/impl/CloudSolrClient$ExpiringCachedDocCollection;
       5: areturn

  static long access$102(org.apache.solr.client.solrj.impl.CloudSolrClient$StateCache, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #1                  // Field timeToLive:J
       6: lreturn
}
