Compiled from "PreparedStatementImpl.java"
class org.apache.solr.client.solrj.io.sql.PreparedStatementImpl extends org.apache.solr.client.solrj.io.sql.StatementImpl implements java.sql.PreparedStatement {
  private final java.lang.String sql;

  org.apache.solr.client.solrj.io.sql.PreparedStatementImpl(org.apache.solr.client.solrj.io.sql.ConnectionImpl, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/solr/client/solrj/io/sql/StatementImpl."<init>":(Lorg/apache/solr/client/solrj/io/sql/ConnectionImpl;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field sql:Ljava/lang/String;
      10: return

  public java.sql.ResultSet executeQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field sql:Ljava/lang/String;
       5: invokespecial #3                  // Method org/apache/solr/client/solrj/io/sql/StatementImpl.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
       8: areturn

  public int executeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field sql:Ljava/lang/String;
       5: invokespecial #4                  // Method org/apache/solr/client/solrj/io/sql/StatementImpl.executeUpdate:(Ljava/lang/String;)I
       8: ireturn

  public boolean execute() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field sql:Ljava/lang/String;
       5: invokespecial #5                  // Method org/apache/solr/client/solrj/io/sql/StatementImpl.execute:(Ljava/lang/String;)Z
       8: ireturn

  public void clearParameters() throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.sql.ParameterMetaData getParameterMetaData() throws java.sql.SQLException;
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void addBatch() throws java.sql.SQLException;
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void setNull(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: return

  public void setByte(int, byte) throws java.sql.SQLException;
    Code:
       0: return

  public void setShort(int, short) throws java.sql.SQLException;
    Code:
       0: return

  public void setInt(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setLong(int, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setFloat(int, float) throws java.sql.SQLException;
    Code:
       0: return

  public void setDouble(int, double) throws java.sql.SQLException;
    Code:
       0: return

  public void setBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: return

  public void setString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: return

  public void setDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setUnicodeStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: return

  public void setArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: return

  public void setDate(int, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(int, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(int, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setNull(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setURL(int, java.net.URL) throws java.sql.SQLException;
    Code:
       0: return

  public void setRowId(int, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: return

  public void setNString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int executeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int executeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int executeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean execute(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean execute(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean execute(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public long executeLargeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public long executeLargeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public long executeLargeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public long executeLargeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLException
       3: dup
       4: ldc           #9                  // String Cannot be called from PreparedStatement
       6: invokespecial #10                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow
}
