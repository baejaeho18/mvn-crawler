Compiled from "PushBackStream.java"
public class org.apache.solr.client.solrj.io.stream.PushBackStream extends org.apache.solr.client.solrj.io.stream.TupleStream implements org.apache.solr.client.solrj.io.stream.expr.Expressible {
  private static final long serialVersionUID;

  private org.apache.solr.client.solrj.io.stream.TupleStream stream;

  private org.apache.solr.client.solrj.io.Tuple tuple;

  public org.apache.solr.client.solrj.io.stream.PushBackStream(org.apache.solr.client.solrj.io.stream.TupleStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/solr/client/solrj/io/stream/TupleStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       9: return

  public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: instanceof    #3                  // class org/apache/solr/client/solrj/io/stream/expr/Expressible
       7: ifeq          24
      10: aload_0
      11: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
      14: checkcast     #3                  // class org/apache/solr/client/solrj/io/stream/expr/Expressible
      17: aload_1
      18: invokeinterface #4,  2            // InterfaceMethod org/apache/solr/client/solrj/io/stream/expr/Expressible.toExpression:(Lorg/apache/solr/client/solrj/io/stream/expr/StreamFactory;)Lorg/apache/solr/client/solrj/io/stream/expr/StreamExpressionParameter;
      23: areturn
      24: new           #5                  // class java/io/IOException
      27: dup
      28: ldc           #6                  // String This PushBackStream contains a non-expressible TupleStream - it cannot be converted to an expression
      30: invokespecial #7                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow

  public org.apache.solr.client.solrj.io.stream.expr.Explanation toExplanation(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: aload_1
       5: invokevirtual #8                  // Method org/apache/solr/client/solrj/io/stream/TupleStream.toExplanation:(Lorg/apache/solr/client/solrj/io/stream/expr/StreamFactory;)Lorg/apache/solr/client/solrj/io/stream/expr/Explanation;
       8: areturn

  public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: aload_1
       5: invokevirtual #9                  // Method org/apache/solr/client/solrj/io/stream/TupleStream.setStreamContext:(Lorg/apache/solr/client/solrj/io/stream/StreamContext;)V
       8: return

  public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children();
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
      13: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: areturn

  public void open() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: invokevirtual #13                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.open:()V
       7: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: invokevirtual #14                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.close:()V
       7: return

  public void pushBack(org.apache.solr.client.solrj.io.Tuple);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field tuple:Lorg/apache/solr/client/solrj/io/Tuple;
       5: return

  public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field tuple:Lorg/apache/solr/client/solrj/io/Tuple;
       4: ifnull        19
       7: aload_0
       8: getfield      #15                 // Field tuple:Lorg/apache/solr/client/solrj/io/Tuple;
      11: astore_1
      12: aload_0
      13: aconst_null
      14: putfield      #15                 // Field tuple:Lorg/apache/solr/client/solrj/io/Tuple;
      17: aload_1
      18: areturn
      19: aload_0
      20: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
      23: invokevirtual #16                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.read:()Lorg/apache/solr/client/solrj/io/Tuple;
      26: areturn

  public org.apache.solr.client.solrj.io.comp.StreamComparator getStreamSort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Lorg/apache/solr/client/solrj/io/stream/TupleStream;
       4: invokevirtual #17                 // Method org/apache/solr/client/solrj/io/stream/TupleStream.getStreamSort:()Lorg/apache/solr/client/solrj/io/comp/StreamComparator;
       7: areturn

  public int getCost();
    Code:
       0: iconst_0
       1: ireturn
}
