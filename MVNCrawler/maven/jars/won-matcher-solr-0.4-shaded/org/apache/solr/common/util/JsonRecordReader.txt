Compiled from "JsonRecordReader.java"
public class org.apache.solr.common.util.JsonRecordReader {
  public static final java.lang.String DELIM;

  private org.apache.solr.common.util.JsonRecordReader$Node rootNode;

  static final boolean $assertionsDisabled;

  public static org.apache.solr.common.util.JsonRecordReader getInst(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: new           #2                  // class org/apache/solr/common/util/JsonRecordReader
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #4                  // Method addSplit:(Ljava/lang/String;)V
      13: aload_1
      14: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          95
      29: aload_3
      30: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #8                  // class java/lang/String
      38: astore        4
      40: aload         4
      42: astore        5
      44: aload         4
      46: bipush        58
      48: invokevirtual #9                  // Method java/lang/String.indexOf:(I)I
      51: istore        6
      53: aconst_null
      54: astore        7
      56: iload         6
      58: ifle          82
      61: aload         4
      63: iconst_0
      64: iload         6
      66: invokevirtual #10                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      69: astore        7
      71: aload         4
      73: iload         6
      75: iconst_1
      76: iadd
      77: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      80: astore        5
      82: aload_2
      83: aload         5
      85: aload         7
      87: iconst_1
      88: iconst_0
      89: invokespecial #12                 // Method addField:(Ljava/lang/String;Ljava/lang/String;ZZ)V
      92: goto          20
      95: aload_2
      96: areturn

  private org.apache.solr.common.util.JsonRecordReader();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #14                 // class org/apache/solr/common/util/JsonRecordReader$Node
       8: dup
       9: ldc           #15                 // String /
      11: aconst_null
      12: checkcast     #14                 // class org/apache/solr/common/util/JsonRecordReader$Node
      15: invokespecial #16                 // Method org/apache/solr/common/util/JsonRecordReader$Node."<init>":(Ljava/lang/String;Lorg/apache/solr/common/util/JsonRecordReader$Node;)V
      18: putfield      #17                 // Field rootNode:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      21: return

  void addSplit(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #18                 // String \\|
       3: invokevirtual #19                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     101
      23: aload_3
      24: iload         5
      26: aaload
      27: astore        6
      29: aload         6
      31: invokevirtual #20                 // Method java/lang/String.trim:()Ljava/lang/String;
      34: astore        6
      36: aload         6
      38: ldc           #21                 // String //
      40: invokevirtual #22                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      43: ifeq          74
      46: new           #23                 // class java/lang/RuntimeException
      49: dup
      50: new           #24                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #26                 // String split cannot start with \'//\':
      59: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload         6
      64: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #29                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload         6
      76: invokevirtual #30                 // Method java/lang/String.length:()I
      79: ifne          85
      82: goto          95
      85: aload_0
      86: aload         6
      88: aload         6
      90: iconst_0
      91: iconst_1
      92: invokespecial #12                 // Method addField:(Ljava/lang/String;Ljava/lang/String;ZZ)V
      95: iinc          5, 1
      98: goto          16
     101: return

  private void addField(java.lang.String, java.lang.String, boolean, boolean);
    Code:
       0: aload_1
       1: ldc           #15                 // String /
       3: invokevirtual #22                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          36
       9: new           #23                 // class java/lang/RuntimeException
      12: dup
      13: new           #24                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #31                 // String All paths must start with \'/\'
      22: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #29                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_1
      37: invokestatic  #32                 // Method splitEscapeQuote:(Ljava/lang/String;)Ljava/util/List;
      40: astore        5
      42: aload         5
      44: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      49: ifne          65
      52: iload         4
      54: ifeq          64
      57: aload_0
      58: getfield      #17                 // Field rootNode:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      61: invokevirtual #34                 // Method org/apache/solr/common/util/JsonRecordReader$Node.setAsRecord:()V
      64: return
      65: ldc           #35                 // String
      67: aload         5
      69: iconst_0
      70: invokeinterface #36,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      75: checkcast     #8                  // class java/lang/String
      78: invokevirtual #20                 // Method java/lang/String.trim:()Ljava/lang/String;
      81: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifeq          96
      87: aload         5
      89: iconst_0
      90: invokeinterface #38,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      95: pop
      96: aload_0
      97: getfield      #17                 // Field rootNode:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     100: aload         5
     102: aload_2
     103: iload_3
     104: iload         4
     106: aload_1
     107: invokestatic  #39                 // Method org/apache/solr/common/util/JsonRecordReader$Node.access$000:(Lorg/apache/solr/common/util/JsonRecordReader$Node;Ljava/util/List;Ljava/lang/String;ZZLjava/lang/String;)V
     110: aload_0
     111: getfield      #17                 // Field rootNode:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     114: invokestatic  #40                 // Method org/apache/solr/common/util/JsonRecordReader$Node.access$100:(Lorg/apache/solr/common/util/JsonRecordReader$Node;)V
     117: return

  public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getAllRecords(java.io.Reader) throws java.io.IOException;
    Code:
       0: new           #41                 // class java/util/ArrayList
       3: dup
       4: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokedynamic #43,  0             // InvokeDynamic #0:handle:(Ljava/util/List;)Lorg/apache/solr/common/util/JsonRecordReader$Handler;
      16: invokevirtual #44                 // Method streamRecords:(Ljava/io/Reader;Lorg/apache/solr/common/util/JsonRecordReader$Handler;)V
      19: aload_2
      20: areturn

  public void streamRecords(java.io.Reader, org.apache.solr.common.util.JsonRecordReader$Handler) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #1                  // class org/noggit/JSONParser
       4: dup
       5: aload_1
       6: invokespecial #45                 // Method org/noggit/JSONParser."<init>":(Ljava/io/Reader;)V
       9: aload_2
      10: invokevirtual #46                 // Method streamRecords:(Lorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$Handler;)V
      13: return

  public void streamRecords(org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$Handler) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field rootNode:Lorg/apache/solr/common/util/JsonRecordReader$Node;
       4: aload_1
       5: aload_2
       6: new           #47                 // class java/util/LinkedHashMap
       9: dup
      10: invokespecial #48                 // Method java/util/LinkedHashMap."<init>":()V
      13: invokestatic  #49                 // Method org/apache/solr/common/util/JsonRecordReader$Node.access$200:(Lorg/apache/solr/common/util/JsonRecordReader$Node;Lorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$Handler;Ljava/util/Map;)V
      16: return

  private static java.util.List<java.lang.String> splitEscapeQuote(java.lang.String);
    Code:
       0: new           #50                 // class java/util/LinkedList
       3: dup
       4: invokespecial #51                 // Method java/util/LinkedList."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #15                 // String /
      11: invokevirtual #19                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      14: astore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: aload_2
      19: arraylength
      20: if_icmpge     122
      23: new           #24                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      30: astore        4
      32: iconst_0
      33: istore        5
      35: aload         4
      37: aload_2
      38: iload_3
      39: aaload
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: iconst_0
      45: istore        6
      47: iload         6
      49: aload_2
      50: iload_3
      51: aaload
      52: invokevirtual #30                 // Method java/lang/String.length:()I
      55: if_icmpge     80
      58: aload_2
      59: iload_3
      60: aaload
      61: iload         6
      63: invokevirtual #52                 // Method java/lang/String.charAt:(I)C
      66: bipush        39
      68: if_icmpne     74
      71: iinc          5, 1
      74: iinc          6, 1
      77: goto          47
      80: iload         5
      82: iconst_2
      83: irem
      84: ifne          90
      87: goto          104
      90: iinc          3, 1
      93: aload         4
      95: ldc           #15                 // String /
      97: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: pop
     101: goto          35
     104: aload_1
     105: aload         4
     107: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: iinc          3, 1
     119: goto          17
     122: aload_1
     123: areturn

  public static java.lang.Object parseSingleFieldValue(int, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper) throws java.io.IOException;
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 9
                     1: 52
                     2: 57
                     3: 65
                     4: 73
                     5: 81
                     6: 89
                     7: 102
                     8: 122
                     9: 95
               default: 122
          }
      52: aload_1
      53: invokevirtual #54                 // Method org/noggit/JSONParser.getString:()Ljava/lang/String;
      56: areturn
      57: aload_1
      58: invokevirtual #55                 // Method org/noggit/JSONParser.getLong:()J
      61: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      64: areturn
      65: aload_1
      66: invokevirtual #57                 // Method org/noggit/JSONParser.getDouble:()D
      69: invokestatic  #58                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      72: areturn
      73: aload_1
      74: invokevirtual #59                 // Method org/noggit/JSONParser.getNumberChars:()Lorg/noggit/CharArr;
      77: invokevirtual #60                 // Method org/noggit/CharArr.toString:()Ljava/lang/String;
      80: areturn
      81: aload_1
      82: invokevirtual #61                 // Method org/noggit/JSONParser.getBoolean:()Z
      85: invokestatic  #62                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      88: areturn
      89: aload_1
      90: invokevirtual #63                 // Method org/noggit/JSONParser.getNull:()V
      93: aconst_null
      94: areturn
      95: iload_0
      96: aload_1
      97: aload_2
      98: invokestatic  #64                 // Method parseArrayFieldValue:(ILorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;)Ljava/util/List;
     101: areturn
     102: aload_2
     103: ifnull        114
     106: aload_2
     107: bipush        7
     109: invokevirtual #65                 // Method org/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper.walk:(I)V
     112: aconst_null
     113: areturn
     114: aload_1
     115: iconst_1
     116: iconst_0
     117: invokestatic  #66                 // Method consumeTillMatchingEnd:(Lorg/noggit/JSONParser;II)V
     120: aconst_null
     121: areturn
     122: new           #23                 // class java/lang/RuntimeException
     125: dup
     126: new           #24                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #67                 // String Error parsing JSON field value. Unexpected
     135: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: iload_0
     139: invokestatic  #68                 // Method org/noggit/JSONParser.getEventString:(I)Ljava/lang/String;
     142: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #29                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     151: athrow

  public static java.util.List<java.lang.Object> parseArrayFieldValue(int, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper) throws java.io.IOException;
    Code:
       0: getstatic     #69                 // Field $assertionsDisabled:Z
       3: ifne          20
       6: iload_0
       7: bipush        9
       9: if_icmpeq     20
      12: new           #70                 // class java/lang/AssertionError
      15: dup
      16: invokespecial #71                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: new           #41                 // class java/util/ArrayList
      23: dup
      24: iconst_2
      25: invokespecial #72                 // Method java/util/ArrayList."<init>":(I)V
      28: astore_3
      29: aload_1
      30: invokevirtual #73                 // Method org/noggit/JSONParser.nextEvent:()I
      33: istore_0
      34: iload_0
      35: bipush        10
      37: if_icmpne     51
      40: aload_3
      41: invokevirtual #74                 // Method java/util/ArrayList.isEmpty:()Z
      44: ifeq          49
      47: aconst_null
      48: areturn
      49: aload_3
      50: areturn
      51: iload_0
      52: aload_1
      53: aload_2
      54: invokestatic  #75                 // Method parseSingleFieldValue:(ILorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;)Ljava/lang/Object;
      57: astore        4
      59: aload         4
      61: ifnull        71
      64: aload_3
      65: aload         4
      67: invokevirtual #76                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          29

  public static void consumeTillMatchingEnd(org.noggit.JSONParser, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method org/noggit/JSONParser.nextEvent:()I
       4: istore_3
       5: iload_3
       6: bipush        7
       8: if_icmpne     14
      11: iinc          1, 1
      14: iload_3
      15: bipush        8
      17: if_icmpne     23
      20: iinc          1, -1
      23: getstatic     #69                 // Field $assertionsDisabled:Z
      26: ifne          41
      29: iload_1
      30: ifge          41
      33: new           #70                 // class java/lang/AssertionError
      36: dup
      37: invokespecial #71                 // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: iload_3
      42: bipush        9
      44: if_icmpne     50
      47: iinc          2, 1
      50: iload_3
      51: bipush        10
      53: if_icmpne     59
      56: iinc          2, -1
      59: getstatic     #69                 // Field $assertionsDisabled:Z
      62: ifne          77
      65: iload_2
      66: ifge          77
      69: new           #70                 // class java/lang/AssertionError
      72: dup
      73: invokespecial #71                 // Method java/lang/AssertionError."<init>":()V
      76: athrow
      77: iload_1
      78: ifne          88
      81: iload_2
      82: ifne          88
      85: goto          91
      88: goto          0
      91: return

  private static void lambda$getAllRecords$0(java.util.List, java.util.Map, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokestatic  #77                 // Method org/apache/solr/common/util/Utils.getDeepCopy:(Ljava/util/Map;I)Ljava/util/Map;
       6: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/solr/common/util/JsonRecordReader
       2: invokevirtual #78                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #69                 // Field $assertionsDisabled:Z
      16: return
}
