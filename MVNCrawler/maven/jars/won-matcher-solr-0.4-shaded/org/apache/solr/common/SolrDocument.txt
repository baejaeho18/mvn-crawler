Compiled from "SolrDocument.java"
public class org.apache.solr.common.SolrDocument extends org.apache.solr.common.SolrDocumentBase<java.lang.Object, org.apache.solr.common.SolrDocument> implements java.lang.Iterable<java.util.Map$Entry<java.lang.String, java.lang.Object>> {
  private final java.util.Map<java.lang.String, java.lang.Object> _fields;

  private java.util.List<org.apache.solr.common.SolrDocument> _childDocuments;

  public org.apache.solr.common.SolrDocument();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/solr/common/SolrDocumentBase."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #1                  // Field _fields:Ljava/util/Map;
      15: return

  public org.apache.solr.common.SolrDocument(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/solr/common/SolrDocumentBase."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field _fields:Ljava/util/Map;
       9: return

  public java.util.Collection<java.lang.String> getFieldNames();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method keySet:()Ljava/util/Set;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #7                  // Field _childDocuments:Ljava/util/List;
      13: ifnull        25
      16: aload_0
      17: getfield      #7                  // Field _childDocuments:Ljava/util/List;
      20: invokeinterface #8,  1            // InterfaceMethod java/util/List.clear:()V
      25: return

  public boolean removeFields(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method remove:(Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void setField(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #10                 // class "[Ljava/lang/Object;"
       4: ifeq          28
       7: new           #11                 // class java/util/ArrayList
      10: dup
      11: aload_2
      12: checkcast     #10                 // class "[Ljava/lang/Object;"
      15: checkcast     #10                 // class "[Ljava/lang/Object;"
      18: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      24: astore_2
      25: goto          105
      28: aload_2
      29: instanceof    #14                 // class java/util/Collection
      32: ifeq          38
      35: goto          105
      38: aload_2
      39: instanceof    #15                 // class org/apache/solr/common/util/NamedList
      42: ifeq          48
      45: goto          105
      48: aload_2
      49: instanceof    #16                 // class java/lang/Iterable
      52: ifeq          105
      55: new           #11                 // class java/util/ArrayList
      58: dup
      59: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      62: astore_3
      63: aload_2
      64: checkcast     #16                 // class java/lang/Iterable
      67: invokeinterface #18,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      72: astore        4
      74: aload         4
      76: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          103
      84: aload         4
      86: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: astore        5
      93: aload_3
      94: aload         5
      96: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          74
     103: aload_3
     104: astore_2
     105: aload_0
     106: getfield      #1                  // Field _fields:Ljava/util/Map;
     109: aload_1
     110: aload_2
     111: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: return

  public void addField(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnonnull     92
      15: aload_2
      16: instanceof    #14                 // class java/util/Collection
      19: ifeq          85
      22: new           #11                 // class java/util/ArrayList
      25: dup
      26: iconst_3
      27: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      30: astore        4
      32: aload_2
      33: checkcast     #14                 // class java/util/Collection
      36: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      41: astore        5
      43: aload         5
      45: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          75
      53: aload         5
      55: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: astore        6
      62: aload         4
      64: aload         6
      66: invokeinterface #26,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          43
      75: aload_0
      76: aload_1
      77: aload         4
      79: invokevirtual #27                 // Method setField:(Ljava/lang/String;Ljava/lang/Object;)V
      82: goto          91
      85: aload_0
      86: aload_1
      87: aload_2
      88: invokevirtual #27                 // Method setField:(Ljava/lang/String;Ljava/lang/Object;)V
      91: return
      92: aconst_null
      93: astore        4
      95: aload_3
      96: instanceof    #14                 // class java/util/Collection
      99: ifeq          111
     102: aload_3
     103: checkcast     #14                 // class java/util/Collection
     106: astore        4
     108: goto          130
     111: new           #11                 // class java/util/ArrayList
     114: dup
     115: iconst_3
     116: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
     119: astore        4
     121: aload         4
     123: aload_3
     124: invokeinterface #26,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     129: pop
     130: aload_2
     131: instanceof    #16                 // class java/lang/Iterable
     134: ifeq          183
     137: aload_2
     138: checkcast     #16                 // class java/lang/Iterable
     141: invokeinterface #18,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     146: astore        5
     148: aload         5
     150: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     155: ifeq          180
     158: aload         5
     160: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     165: astore        6
     167: aload         4
     169: aload         6
     171: invokeinterface #26,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     176: pop
     177: goto          148
     180: goto          249
     183: aload_2
     184: instanceof    #10                 // class "[Ljava/lang/Object;"
     187: ifeq          240
     190: aload_2
     191: checkcast     #10                 // class "[Ljava/lang/Object;"
     194: checkcast     #10                 // class "[Ljava/lang/Object;"
     197: astore        5
     199: aload         5
     201: arraylength
     202: istore        6
     204: iconst_0
     205: istore        7
     207: iload         7
     209: iload         6
     211: if_icmpge     237
     214: aload         5
     216: iload         7
     218: aaload
     219: astore        8
     221: aload         4
     223: aload         8
     225: invokeinterface #26,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     230: pop
     231: iinc          7, 1
     234: goto          207
     237: goto          249
     240: aload         4
     242: aload_2
     243: invokeinterface #26,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     248: pop
     249: aload_0
     250: getfield      #1                  // Field _fields:Ljava/util/Map;
     253: aload_1
     254: aload         4
     256: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     261: pop
     262: return

  public java.lang.Object getFirstValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        22
      15: aload_2
      16: instanceof    #14                 // class java/util/Collection
      19: ifne          24
      22: aload_2
      23: areturn
      24: aload_2
      25: checkcast     #14                 // class java/util/Collection
      28: astore_3
      29: aload_3
      30: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.size:()I
      35: ifle          50
      38: aload_3
      39: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      44: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: areturn
      50: aconst_null
      51: areturn

  public java.lang.Object getFieldValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Collection<java.lang.Object> getFieldValues(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: instanceof    #14                 // class java/util/Collection
      15: ifeq          23
      18: aload_2
      19: checkcast     #14                 // class java/util/Collection
      22: areturn
      23: aload_2
      24: ifnull        44
      27: new           #11                 // class java/util/ArrayList
      30: dup
      31: iconst_1
      32: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      35: astore_3
      36: aload_3
      37: aload_2
      38: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_3
      43: areturn
      44: aconst_null
      45: areturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #31                 // String SolrDocument
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #1                  // Field _fields:Ljava/util/Map;
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.Object>> iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public java.util.Map<java.lang.String, java.util.Collection<java.lang.Object>> getFieldValuesMap();
    Code:
       0: new           #37                 // class org/apache/solr/common/SolrDocument$1
       3: dup
       4: aload_0
       5: invokespecial #38                 // Method org/apache/solr/common/SolrDocument$1."<init>":(Lorg/apache/solr/common/SolrDocument;)V
       8: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getFieldValueMap();
    Code:
       0: new           #39                 // class org/apache/solr/common/SolrDocument$2
       3: dup
       4: aload_0
       5: invokespecial #40                 // Method org/apache/solr/common/SolrDocument$2."<init>":(Lorg/apache/solr/common/SolrDocument;)V
       8: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>> entrySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection<java.lang.Object> values();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public void addChildDocument(org.apache.solr.common.SolrDocument);
    Code:
       0: aload_0
       1: getfield      #7                  // Field _childDocuments:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class java/util/ArrayList
      11: dup
      12: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #7                  // Field _childDocuments:Ljava/util/List;
      18: aload_0
      19: getfield      #7                  // Field _childDocuments:Ljava/util/List;
      22: aload_1
      23: invokeinterface #49,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public void addChildDocuments(java.util.Collection<org.apache.solr.common.SolrDocument>);
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #50                 // class org/apache/solr/common/SolrDocument
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #51                 // Method addChildDocument:(Lorg/apache/solr/common/SolrDocument;)V
      31: goto          7
      34: return

  public java.util.List<org.apache.solr.common.SolrDocument> getChildDocuments();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _childDocuments:Ljava/util/List;
       4: areturn

  public boolean hasChildDocuments();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _childDocuments:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #7                  // Field _childDocuments:Ljava/util/List;
      11: invokeinterface #52,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: istore_1
      25: iload_1
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public int getChildDocumentCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _childDocuments:Ljava/util/List;
       4: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public void addChildDocument(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #50                 // class org/apache/solr/common/SolrDocument
       5: invokevirtual #51                 // Method addChildDocument:(Lorg/apache/solr/common/SolrDocument;)V
       8: return

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #54                 // class java/lang/String
       5: aload_2
       6: invokevirtual #55                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  static java.util.Map access$000(org.apache.solr.common.SolrDocument);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _fields:Ljava/util/Map;
       4: areturn
}
