Compiled from "ObjectReleaseTracker.java"
public class org.apache.solr.common.util.ObjectReleaseTracker {
  private static final org.slf4j.Logger log;

  public static java.util.Map<java.lang.Object, java.lang.String> OBJECTS;

  public org.apache.solr.common.util.ObjectReleaseTracker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean track(java.lang.Object);
    Code:
       0: new           #2                  // class java/io/StringWriter
       3: dup
       4: invokespecial #3                  // Method java/io/StringWriter."<init>":()V
       7: astore_1
       8: new           #4                  // class java/io/PrintWriter
      11: dup
      12: aload_1
      13: invokespecial #5                  // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      16: astore_2
      17: new           #6                  // class org/apache/solr/common/util/ObjectReleaseTracker$ObjectTrackerException
      20: dup
      21: aload_0
      22: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokespecial #9                  // Method org/apache/solr/common/util/ObjectReleaseTracker$ObjectTrackerException."<init>":(Ljava/lang/String;)V
      31: aload_2
      32: invokevirtual #10                 // Method org/apache/solr/common/util/ObjectReleaseTracker$ObjectTrackerException.printStackTrace:(Ljava/io/PrintWriter;)V
      35: getstatic     #11                 // Field OBJECTS:Ljava/util/Map;
      38: aload_0
      39: aload_1
      40: invokevirtual #12                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      43: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: iconst_1
      50: ireturn

  public static boolean release(java.lang.Object);
    Code:
       0: getstatic     #11                 // Field OBJECTS:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_1
      11: ireturn

  public static void clear();
    Code:
       0: getstatic     #11                 // Field OBJECTS:Ljava/util/Map;
       3: invokeinterface #15,  1           // InterfaceMethod java/util/Map.clear:()V
       8: return

  public static java.lang.String checkEmpty();
    Code:
       0: aconst_null
       1: astore_0
       2: getstatic     #11                 // Field OBJECTS:Ljava/util/Map;
       5: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: astore_1
      11: aload_1
      12: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      17: ifle          180
      20: new           #18                 // class java/util/ArrayList
      23: dup
      24: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      27: astore_2
      28: aload_1
      29: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_3
      35: aload_3
      36: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          78
      44: aload_3
      45: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #23                 // class java/util/Map$Entry
      53: astore        4
      55: aload_2
      56: aload         4
      58: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #25                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      69: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: goto          35
      78: new           #27                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #29                 // String ObjectTracker found
      87: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      96: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      99: ldc           #32                 // String  object(s) that were not released!!!
     101: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_2
     105: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: ldc           #34                 // String \n
     110: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: astore_0
     117: aload_1
     118: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     123: astore_3
     124: aload_3
     125: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     130: ifeq          180
     133: aload_3
     134: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     139: checkcast     #23                 // class java/util/Map$Entry
     142: astore        4
     144: new           #27                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     151: aload_0
     152: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload         4
     157: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     162: checkcast     #37                 // class java/lang/String
     165: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: ldc           #34                 // String \n
     170: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: astore_0
     177: goto          124
     180: aload_0
     181: areturn

  public static void tryClose();
    Code:
       0: getstatic     #11                 // Field OBJECTS:Ljava/util/Map;
       3: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       8: astore_0
       9: aload_0
      10: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      15: ifle          130
      18: aload_0
      19: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_1
      25: aload_1
      26: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          130
      34: aload_1
      35: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #23                 // class java/util/Map$Entry
      43: astore_2
      44: aload_2
      45: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      50: instanceof    #38                 // class java/io/Closeable
      53: ifeq          88
      56: aload_2
      57: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      62: checkcast     #38                 // class java/io/Closeable
      65: invokeinterface #39,  1           // InterfaceMethod java/io/Closeable.close:()V
      70: goto          127
      73: astore_3
      74: getstatic     #41                 // Field log:Lorg/slf4j/Logger;
      77: ldc           #42                 // String
      79: aload_3
      80: invokeinterface #43,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      85: goto          127
      88: aload_2
      89: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      94: instanceof    #44                 // class java/util/concurrent/ExecutorService
      97: ifeq          127
     100: aload_2
     101: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     106: checkcast     #44                 // class java/util/concurrent/ExecutorService
     109: invokestatic  #45                 // Method org/apache/solr/common/util/ExecutorUtil.shutdownAndAwaitTermination:(Ljava/util/concurrent/ExecutorService;)V
     112: goto          127
     115: astore_3
     116: getstatic     #41                 // Field log:Lorg/slf4j/Logger;
     119: ldc           #42                 // String
     121: aload_3
     122: invokeinterface #43,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     127: goto          25
     130: return
    Exception table:
       from    to  target type
          56    70    73   Class java/lang/Throwable
         100   112   115   Class java/lang/Throwable

  static {};
    Code:
       0: invokestatic  #46                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokevirtual #47                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
       6: invokestatic  #48                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       9: putstatic     #41                 // Field log:Lorg/slf4j/Logger;
      12: new           #49                 // class java/util/concurrent/ConcurrentHashMap
      15: dup
      16: invokespecial #50                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      19: putstatic     #11                 // Field OBJECTS:Ljava/util/Map;
      22: return
}
