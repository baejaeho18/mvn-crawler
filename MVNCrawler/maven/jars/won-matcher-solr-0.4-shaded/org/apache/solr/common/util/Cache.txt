Compiled from "Cache.java"
public interface org.apache.solr.common.util.Cache<K, V> {
  public abstract V put(K, V);

  public abstract V get(K);

  public abstract V remove(K);

  public abstract void clear();

  public default V computeIfAbsent(K, java.util.function.Function<? super K, ? extends V>);
    Code:
       0: aload_2
       1: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #2,  2            // InterfaceMethod get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: dup
      13: astore_3
      14: ifnonnull     43
      17: aload_2
      18: aload_1
      19: invokeinterface #3,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: dup
      25: astore        4
      27: ifnull        43
      30: aload_0
      31: aload_1
      32: aload         4
      34: invokeinterface #4,  3            // InterfaceMethod put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload         4
      42: areturn
      43: aload_3
      44: areturn
}
