Compiled from "JsonRecordReader.java"
class org.apache.solr.common.util.JsonRecordReader$Node {
  java.lang.String name;

  java.lang.String fieldName;

  java.lang.String splitPath;

  final java.util.LinkedHashMap<java.lang.String, org.apache.solr.common.util.JsonRecordReader$Node> childNodes;

  org.apache.solr.common.util.JsonRecordReader$Node parent;

  boolean isLeaf;

  boolean isRecord;

  boolean isChildRecord;

  org.apache.solr.common.util.JsonRecordReader$Node wildCardChild;

  org.apache.solr.common.util.JsonRecordReader$Node recursiveWildCardChild;

  private boolean useFqn;

  static final java.lang.String WILDCARD_PATH;

  static final java.lang.String RECURSIVE_WILDCARD_PATH;

  static final boolean $assertionsDisabled;

  public org.apache.solr.common.util.JsonRecordReader$Node(java.lang.String, org.apache.solr.common.util.JsonRecordReader$Node);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #10                 // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #11                 // Field childNodes:Ljava/util/LinkedHashMap;
      15: aload_0
      16: iconst_0
      17: putfield      #12                 // Field isLeaf:Z
      20: aload_0
      21: iconst_0
      22: putfield      #13                 // Field isRecord:Z
      25: aload_0
      26: iconst_0
      27: putfield      #14                 // Field isChildRecord:Z
      30: aload_0
      31: iconst_0
      32: putfield      #15                 // Field useFqn:Z
      35: aload_0
      36: aload_1
      37: putfield      #16                 // Field name:Ljava/lang/String;
      40: aload_0
      41: aload_2
      42: putfield      #17                 // Field parent:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      45: return

  public org.apache.solr.common.util.JsonRecordReader$Node(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #10                 // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #11                 // Field childNodes:Ljava/util/LinkedHashMap;
      15: aload_0
      16: iconst_0
      17: putfield      #12                 // Field isLeaf:Z
      20: aload_0
      21: iconst_0
      22: putfield      #13                 // Field isRecord:Z
      25: aload_0
      26: iconst_0
      27: putfield      #14                 // Field isChildRecord:Z
      30: aload_0
      31: iconst_0
      32: putfield      #15                 // Field useFqn:Z
      35: aload_0
      36: aload_1
      37: putfield      #16                 // Field name:Ljava/lang/String;
      40: aload_0
      41: aload_2
      42: putfield      #18                 // Field fieldName:Ljava/lang/String;
      45: return

  void setAsRecord();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method isMyChildARecord:()Z
       4: ifeq          37
       7: new           #20                 // class java/lang/RuntimeException
      10: dup
      11: new           #21                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: getfield      #16                 // Field name:Ljava/lang/String;
      22: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #24                 // String  has a parent node at my level or lower
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: aload_0
      39: invokespecial #27                 // Method hasParentRecord:()Z
      42: putfield      #14                 // Field isChildRecord:Z
      45: aload_0
      46: iconst_1
      47: putfield      #13                 // Field isRecord:Z
      50: return

  private boolean hasParentRecord();
    Code:
       0: aload_0
       1: getfield      #13                 // Field isRecord:Z
       4: ifne          24
       7: aload_0
       8: getfield      #17                 // Field parent:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      11: ifnull        28
      14: aload_0
      15: getfield      #17                 // Field parent:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      18: invokespecial #27                 // Method hasParentRecord:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private boolean isMyChildARecord();
    Code:
       0: aload_0
       1: getfield      #13                 // Field isRecord:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #11                 // Field childNodes:Ljava/util/LinkedHashMap;
      13: invokevirtual #28                 // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      16: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          53
      31: aload_1
      32: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #32                 // class org/apache/solr/common/util/JsonRecordReader$Node
      40: astore_2
      41: aload_2
      42: invokespecial #19                 // Method isMyChildARecord:()Z
      45: ifeq          50
      48: iconst_1
      49: ireturn
      50: goto          22
      53: iconst_0
      54: ireturn

  private void buildOptimize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parent:Lorg/apache/solr/common/util/JsonRecordReader$Node;
       4: ifnull        35
       7: aload_0
       8: getfield      #17                 // Field parent:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      11: getfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      14: ifnull        35
      17: aload_0
      18: getfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      21: ifnonnull     35
      24: aload_0
      25: aload_0
      26: getfield      #17                 // Field parent:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      29: getfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      32: putfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      35: aload_0
      36: getfield      #11                 // Field childNodes:Ljava/util/LinkedHashMap;
      39: invokevirtual #28                 // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      42: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore_1
      48: aload_1
      49: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          74
      57: aload_1
      58: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #32                 // class org/apache/solr/common/util/JsonRecordReader$Node
      66: astore_2
      67: aload_2
      68: invokespecial #6                  // Method buildOptimize:()V
      71: goto          48
      74: return

  private void build(java.util.List<java.lang.String>, java.lang.String, boolean, boolean, java.lang.String);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #34,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
       7: checkcast     #35                 // class java/lang/String
      10: astore        6
      12: aload         6
      14: invokevirtual #36                 // Method java/lang/String.length:()I
      17: iconst_1
      18: if_icmpge     49
      21: new           #20                 // class java/lang/RuntimeException
      24: dup
      25: new           #21                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #37                 // String all pieces in path must be non empty
      34: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload         5
      39: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload         6
      52: aload_0
      53: getfield      #11                 // Field childNodes:Ljava/util/LinkedHashMap;
      56: invokespecial #38                 // Method getOrAddNode:(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/solr/common/util/JsonRecordReader$Node;
      59: astore        7
      61: aload_1
      62: invokeinterface #39,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      67: ifeq          227
      70: iload         4
      72: ifeq          143
      75: getstatic     #40                 // Field $assertionsDisabled:Z
      78: ifne          102
      81: ldc           #41                 // String *
      83: aload         7
      85: getfield      #16                 // Field name:Ljava/lang/String;
      88: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifeq          102
      94: new           #43                 // class java/lang/AssertionError
      97: dup
      98: invokespecial #44                 // Method java/lang/AssertionError."<init>":()V
     101: athrow
     102: getstatic     #40                 // Field $assertionsDisabled:Z
     105: ifne          129
     108: ldc           #45                 // String **
     110: aload         7
     112: getfield      #16                 // Field name:Ljava/lang/String;
     115: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     118: ifeq          129
     121: new           #43                 // class java/lang/AssertionError
     124: dup
     125: invokespecial #44                 // Method java/lang/AssertionError."<init>":()V
     128: athrow
     129: aload         7
     131: invokevirtual #46                 // Method setAsRecord:()V
     134: aload         7
     136: aload_2
     137: putfield      #47                 // Field splitPath:Ljava/lang/String;
     140: goto          291
     143: aload         7
     145: getfield      #16                 // Field name:Ljava/lang/String;
     148: ldc           #41                 // String *
     150: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     153: ifeq          162
     156: aload_0
     157: aload         7
     159: putfield      #48                 // Field wildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     162: aload         7
     164: getfield      #16                 // Field name:Ljava/lang/String;
     167: ldc           #45                 // String **
     169: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     172: ifeq          187
     175: aload_0
     176: aload         7
     178: aload         7
     180: dup_x1
     181: putfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     184: putfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     187: aload         7
     189: iconst_1
     190: putfield      #12                 // Field isLeaf:Z
     193: aload         7
     195: aload_2
     196: putfield      #18                 // Field fieldName:Ljava/lang/String;
     199: ldc           #49                 // String $FQN
     201: aload         7
     203: getfield      #18                 // Field fieldName:Ljava/lang/String;
     206: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     209: ifeq          291
     212: aload         7
     214: aconst_null
     215: putfield      #18                 // Field fieldName:Ljava/lang/String;
     218: aload         7
     220: iconst_1
     221: putfield      #15                 // Field useFqn:Z
     224: goto          291
     227: ldc           #41                 // String *
     229: aload_0
     230: getfield      #16                 // Field name:Ljava/lang/String;
     233: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     236: ifne          251
     239: ldc           #45                 // String **
     241: aload_0
     242: getfield      #16                 // Field name:Ljava/lang/String;
     245: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     248: ifeq          279
     251: new           #20                 // class java/lang/RuntimeException
     254: dup
     255: new           #21                 // class java/lang/StringBuilder
     258: dup
     259: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     262: ldc           #50                 // String wild cards are allowed only in the end
     264: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     267: aload         5
     269: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     278: athrow
     279: aload         7
     281: aload_1
     282: aload_2
     283: iload_3
     284: iload         4
     286: aload         5
     288: invokespecial #7                  // Method build:(Ljava/util/List;Ljava/lang/String;ZZLjava/lang/String;)V
     291: return

  private org.apache.solr.common.util.JsonRecordReader$Node getOrAddNode(java.lang.String, java.util.Map<java.lang.String, org.apache.solr.common.util.JsonRecordReader$Node>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #32                 // class org/apache/solr/common/util/JsonRecordReader$Node
      10: astore_3
      11: aload_3
      12: ifnull        17
      15: aload_3
      16: areturn
      17: aload_2
      18: aload_1
      19: new           #32                 // class org/apache/solr/common/util/JsonRecordReader$Node
      22: dup
      23: aload_1
      24: aload_0
      25: invokespecial #52                 // Method "<init>":(Ljava/lang/String;Lorg/apache/solr/common/util/JsonRecordReader$Node;)V
      28: dup
      29: astore_3
      30: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_3
      37: areturn

  private void parse(org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$Handler, java.util.Map<java.lang.String, java.lang.Object>) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: istore        4
       3: iconst_0
       4: istore        5
       6: aload_1
       7: invokevirtual #54                 // Method org/noggit/JSONParser.nextEvent:()I
      10: istore        4
      12: iload         4
      14: bipush        11
      16: if_icmpne     22
      19: goto          99
      22: iload         4
      24: bipush        7
      26: if_icmpne     49
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: new           #55                 // class java/util/Stack
      36: dup
      37: invokespecial #56                 // Method java/util/Stack."<init>":()V
      40: iload         5
      42: aconst_null
      43: invokespecial #4                  // Method handleObjectStart:(Lorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$Handler;Ljava/util/Map;Ljava/util/Stack;ZLorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;)V
      46: goto          6
      49: iload         4
      51: bipush        9
      53: if_icmpne     6
      56: aload_1
      57: invokevirtual #54                 // Method org/noggit/JSONParser.nextEvent:()I
      60: istore        4
      62: iload         4
      64: bipush        10
      66: if_icmpne     72
      69: goto          6
      72: iload         4
      74: bipush        7
      76: if_icmpne     56
      79: aload_0
      80: aload_1
      81: aload_2
      82: aload_3
      83: new           #55                 // class java/util/Stack
      86: dup
      87: invokespecial #56                 // Method java/util/Stack."<init>":()V
      90: iload         5
      92: aconst_null
      93: invokespecial #4                  // Method handleObjectStart:(Lorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$Handler;Ljava/util/Map;Ljava/util/Stack;ZLorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;)V
      96: goto          56
      99: return

  private void handleObjectStart(org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$Handler, java.util.Map<java.lang.String, java.lang.Object>, java.util.Stack<java.util.Set<java.lang.String>>, boolean, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper) throws java.io.IOException;
    Code:
       0: iload         5
       2: ifne          12
       5: aload_0
       6: getfield      #13                 // Field isRecord:Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore        7
      19: aconst_null
      20: astore        8
      22: aload_0
      23: getfield      #13                 // Field isRecord:Z
      26: ifne          34
      29: iload         5
      31: ifne          54
      34: new           #57                 // class java/util/HashSet
      37: dup
      38: invokespecial #58                 // Method java/util/HashSet."<init>":()V
      41: astore        8
      43: aload         4
      45: aload         8
      47: invokevirtual #59                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          69
      54: iload         5
      56: ifeq          69
      59: aload         4
      61: invokevirtual #60                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      64: checkcast     #61                 // class java/util/Set
      67: astore        8
      69: aload_1
      70: invokevirtual #54                 // Method org/noggit/JSONParser.nextEvent:()I
      73: istore        9
      75: iload         9
      77: bipush        8
      79: if_icmpne     156
      82: aload_0
      83: invokespecial #62                 // Method isRecord:()Z
      86: ifeq          100
      89: aload_2
      90: aload_3
      91: aload_0
      92: getfield      #47                 // Field splitPath:Ljava/lang/String;
      95: invokeinterface #63,  3           // InterfaceMethod org/apache/solr/common/util/JsonRecordReader$Handler.handle:(Ljava/util/Map;Ljava/lang/String;)V
     100: aload_0
     101: invokespecial #62                 // Method isRecord:()Z
     104: ifne          112
     107: iload         7
     109: ifne          155
     112: aload         8
     114: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     119: astore        10
     121: aload         10
     123: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     128: ifeq          155
     131: aload         10
     133: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #35                 // class java/lang/String
     141: astore        11
     143: aload_3
     144: aload         11
     146: invokeinterface #65,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     151: pop
     152: goto          121
     155: return
     156: getstatic     #40                 // Field $assertionsDisabled:Z
     159: ifne          176
     162: iload         9
     164: iconst_1
     165: if_icmpeq     176
     168: new           #43                 // class java/lang/AssertionError
     171: dup
     172: invokespecial #44                 // Method java/lang/AssertionError."<init>":()V
     175: athrow
     176: getstatic     #40                 // Field $assertionsDisabled:Z
     179: ifne          197
     182: aload_1
     183: invokevirtual #66                 // Method org/noggit/JSONParser.wasKey:()Z
     186: ifne          197
     189: new           #43                 // class java/lang/AssertionError
     192: dup
     193: invokespecial #44                 // Method java/lang/AssertionError."<init>":()V
     196: athrow
     197: aload_1
     198: invokevirtual #67                 // Method org/noggit/JSONParser.getString:()Ljava/lang/String;
     201: astore        10
     203: aload_0
     204: getfield      #11                 // Field childNodes:Ljava/util/LinkedHashMap;
     207: aload         10
     209: invokevirtual #68                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     212: checkcast     #32                 // class org/apache/solr/common/util/JsonRecordReader$Node
     215: astore        11
     217: aload         11
     219: ifnonnull     228
     222: aload_0
     223: getfield      #48                 // Field wildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     226: astore        11
     228: aload         11
     230: ifnonnull     239
     233: aload_0
     234: getfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     237: astore        11
     239: aload         11
     241: ifnull        406
     244: aload         11
     246: getfield      #12                 // Field isLeaf:Z
     249: ifeq          371
     252: aload_1
     253: invokevirtual #54                 // Method org/noggit/JSONParser.nextEvent:()I
     256: istore        9
     258: aload         11
     260: getfield      #18                 // Field fieldName:Ljava/lang/String;
     263: ifnonnull     279
     266: aload_0
     267: aload         10
     269: aload         6
     271: aload         11
     273: invokespecial #69                 // Method getNameInRecord:(Ljava/lang/String;Lorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;Lorg/apache/solr/common/util/JsonRecordReader$Node;)Ljava/lang/String;
     276: goto          284
     279: aload         11
     281: getfield      #18                 // Field fieldName:Ljava/lang/String;
     284: astore        12
     286: aconst_null
     287: astore        13
     289: iload         9
     291: bipush        7
     293: if_icmpeq     303
     296: iload         9
     298: bipush        9
     300: if_icmpne     334
     303: aload         11
     305: getfield      #33                 // Field recursiveWildCardChild:Lorg/apache/solr/common/util/JsonRecordReader$Node;
     308: ifnull        334
     311: new           #70                 // class org/apache/solr/common/util/JsonRecordReader$Node$1Wrapper
     314: dup
     315: aload_0
     316: aload         11
     318: aload         6
     320: aload         10
     322: aload_1
     323: aload_3
     324: aload_2
     325: aload         4
     327: iload         7
     329: invokespecial #71                 // Method org/apache/solr/common/util/JsonRecordReader$Node$1Wrapper."<init>":(Lorg/apache/solr/common/util/JsonRecordReader$Node;Lorg/apache/solr/common/util/JsonRecordReader$Node;Lorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;Ljava/lang/String;Lorg/noggit/JSONParser;Ljava/util/Map;Lorg/apache/solr/common/util/JsonRecordReader$Handler;Ljava/util/Stack;Z)V
     332: astore        13
     334: iload         9
     336: aload_1
     337: aload         13
     339: invokestatic  #72                 // Method org/apache/solr/common/util/JsonRecordReader.parseSingleFieldValue:(ILorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;)Ljava/lang/Object;
     342: astore        14
     344: aload         14
     346: ifnull        368
     349: aload_0
     350: aload_3
     351: aload         12
     353: aload         14
     355: invokespecial #73                 // Method putValue:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
     358: aload         8
     360: aload         12
     362: invokeinterface #74,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     367: pop
     368: goto          512
     371: aload_1
     372: invokevirtual #54                 // Method org/noggit/JSONParser.nextEvent:()I
     375: istore        9
     377: new           #70                 // class org/apache/solr/common/util/JsonRecordReader$Node$1Wrapper
     380: dup
     381: aload_0
     382: aload         11
     384: aload         6
     386: aload         10
     388: aload_1
     389: aload_3
     390: aload_2
     391: aload         4
     393: iload         7
     395: invokespecial #71                 // Method org/apache/solr/common/util/JsonRecordReader$Node$1Wrapper."<init>":(Lorg/apache/solr/common/util/JsonRecordReader$Node;Lorg/apache/solr/common/util/JsonRecordReader$Node;Lorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;Ljava/lang/String;Lorg/noggit/JSONParser;Ljava/util/Map;Lorg/apache/solr/common/util/JsonRecordReader$Handler;Ljava/util/Stack;Z)V
     398: iload         9
     400: invokevirtual #75                 // Method org/apache/solr/common/util/JsonRecordReader$Node$1Wrapper.walk:(I)V
     403: goto          512
     406: aload_1
     407: invokevirtual #54                 // Method org/noggit/JSONParser.nextEvent:()I
     410: istore        9
     412: iload         9
     414: iconst_1
     415: if_icmpeq     69
     418: iload         9
     420: iconst_2
     421: if_icmpeq     69
     424: iload         9
     426: iconst_3
     427: if_icmpeq     69
     430: iload         9
     432: iconst_4
     433: if_icmpeq     69
     436: iload         9
     438: iconst_5
     439: if_icmpeq     69
     442: iload         9
     444: bipush        6
     446: if_icmpne     452
     449: goto          69
     452: iload         9
     454: bipush        9
     456: if_icmpne     468
     459: aload_1
     460: iconst_0
     461: iconst_1
     462: invokestatic  #76                 // Method org/apache/solr/common/util/JsonRecordReader.consumeTillMatchingEnd:(Lorg/noggit/JSONParser;II)V
     465: goto          69
     468: iload         9
     470: bipush        7
     472: if_icmpne     484
     475: aload_1
     476: iconst_1
     477: iconst_0
     478: invokestatic  #76                 // Method org/apache/solr/common/util/JsonRecordReader.consumeTillMatchingEnd:(Lorg/noggit/JSONParser;II)V
     481: goto          69
     484: new           #20                 // class java/lang/RuntimeException
     487: dup
     488: new           #21                 // class java/lang/StringBuilder
     491: dup
     492: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     495: ldc           #77                 // String unexpected token
     497: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     500: iload         9
     502: invokevirtual #78                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     505: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     508: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     511: athrow
     512: goto          69
     515: astore        15
     517: aload_0
     518: invokespecial #62                 // Method isRecord:()Z
     521: ifne          529
     524: iload         7
     526: ifne          572
     529: aload         8
     531: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     536: astore        16
     538: aload         16
     540: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     545: ifeq          572
     548: aload         16
     550: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     555: checkcast     #35                 // class java/lang/String
     558: astore        17
     560: aload_3
     561: aload         17
     563: invokeinterface #65,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     568: pop
     569: goto          538
     572: aload         15
     574: athrow
    Exception table:
       from    to  target type
          69   100   515   any
         156   517   515   any

  private void addChildDoc2ParentDoc(java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: iconst_2
       2: invokestatic  #79                 // Method org/apache/solr/common/util/Utils.getDeepCopy:(Ljava/util/Map;I)Ljava/util/Map;
       5: astore_1
       6: aload_2
       7: aconst_null
       8: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_3
      14: aload_3
      15: ifnonnull     30
      18: aload_2
      19: aconst_null
      20: aload_1
      21: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: goto          84
      30: aload_3
      31: instanceof    #80                 // class java/util/List
      34: ifeq          51
      37: aload_3
      38: checkcast     #80                 // class java/util/List
      41: aload_1
      42: invokeinterface #81,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: goto          84
      51: new           #82                 // class java/util/ArrayList
      54: dup
      55: invokespecial #83                 // Method java/util/ArrayList."<init>":()V
      58: astore        4
      60: aload         4
      62: aload_3
      63: invokevirtual #84                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload         4
      69: aload_1
      70: invokevirtual #84                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      73: pop
      74: aload_2
      75: aconst_null
      76: aload         4
      78: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: return

  private java.lang.String getNameInRecord(java.lang.String, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper, org.apache.solr.common.util.JsonRecordReader$Node);
    Code:
       0: aload_2
       1: ifnull        21
       4: aload_3
       5: getfield      #15                 // Field useFqn:Z
       8: ifeq          21
      11: aload_2
      12: getfield      #85                 // Field org/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper.node:Lorg/apache/solr/common/util/JsonRecordReader$Node;
      15: getfield      #14                 // Field isChildRecord:Z
      18: ifeq          23
      21: aload_1
      22: areturn
      23: new           #21                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      30: astore        4
      32: aload_2
      33: aload         4
      35: invokevirtual #86                 // Method org/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper.addName:(Ljava/lang/StringBuilder;)V
      38: aload         4
      40: ldc           #87                 // String .
      42: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: areturn

  private boolean isRecord();
    Code:
       0: aload_0
       1: getfield      #13                 // Field isRecord:Z
       4: ireturn

  private void putValue(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String, java.lang.Object);
    Code:
       0: aload_3
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_2
       7: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore        4
      14: aload         4
      16: ifnonnull     29
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return
      29: aload         4
      31: instanceof    #80                 // class java/util/List
      34: ifeq          54
      37: aload         4
      39: checkcast     #80                 // class java/util/List
      42: astore        5
      44: aload         5
      46: aload_3
      47: invokeinterface #81,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: return
      54: new           #82                 // class java/util/ArrayList
      57: dup
      58: invokespecial #83                 // Method java/util/ArrayList."<init>":()V
      61: astore        5
      63: aload         5
      65: aload         4
      67: invokevirtual #84                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload         5
      73: aload_3
      74: invokevirtual #84                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      77: pop
      78: aload_1
      79: aload_2
      80: aload         5
      82: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #16                 // Field name:Ljava/lang/String;
       4: areturn

  static void access$000(org.apache.solr.common.util.JsonRecordReader$Node, java.util.List, java.lang.String, boolean, boolean, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokespecial #7                  // Method build:(Ljava/util/List;Ljava/lang/String;ZZLjava/lang/String;)V
      11: return

  static void access$100(org.apache.solr.common.util.JsonRecordReader$Node);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method buildOptimize:()V
       4: return

  static void access$200(org.apache.solr.common.util.JsonRecordReader$Node, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$Handler, java.util.Map) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method parse:(Lorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$Handler;Ljava/util/Map;)V
       7: return

  static void access$300(org.apache.solr.common.util.JsonRecordReader$Node, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$Handler, java.util.Map, java.util.Stack, boolean, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: aload         6
      10: invokespecial #4                  // Method handleObjectStart:(Lorg/noggit/JSONParser;Lorg/apache/solr/common/util/JsonRecordReader$Handler;Ljava/util/Map;Ljava/util/Stack;ZLorg/apache/solr/common/util/JsonRecordReader$MethodFrameWrapper;)V
      13: return

  static void access$400(org.apache.solr.common.util.JsonRecordReader$Node, java.util.Map, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method addChildDoc2ParentDoc:(Ljava/util/Map;Ljava/util/Map;)V
       6: return

  static {};
    Code:
       0: ldc           #1                  // class org/apache/solr/common/util/JsonRecordReader
       2: invokevirtual #88                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #40                 // Field $assertionsDisabled:Z
      16: return
}
