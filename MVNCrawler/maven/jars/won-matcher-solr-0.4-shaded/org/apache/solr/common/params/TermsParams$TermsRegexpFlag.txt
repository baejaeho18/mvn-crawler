Compiled from "TermsParams.java"
public final class org.apache.solr.common.params.TermsParams$TermsRegexpFlag extends java.lang.Enum<org.apache.solr.common.params.TermsParams$TermsRegexpFlag> {
  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNIX_LINES;

  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag CASE_INSENSITIVE;

  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag COMMENTS;

  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag MULTILINE;

  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag LITERAL;

  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag DOTALL;

  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNICODE_CASE;

  public static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag CANON_EQ;

  int value;

  private static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] $VALUES;

  public static org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
       3: invokevirtual #2                  // Method "[Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;"
       9: areturn

  public static org.apache.solr.common.params.TermsParams$TermsRegexpFlag valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
       9: areturn

  private org.apache.solr.common.params.TermsParams$TermsRegexpFlag(int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #7                  // Field value:I
      11: return

  public int getValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:I
       4: ireturn

  static {};
    Code:
       0: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
       3: dup
       4: ldc           #8                  // String UNIX_LINES
       6: iconst_0
       7: iconst_1
       8: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      11: putstatic     #11                 // Field UNIX_LINES:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
      14: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
      17: dup
      18: ldc           #12                 // String CASE_INSENSITIVE
      20: iconst_1
      21: iconst_2
      22: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      25: putstatic     #13                 // Field CASE_INSENSITIVE:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
      28: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
      31: dup
      32: ldc           #14                 // String COMMENTS
      34: iconst_2
      35: iconst_4
      36: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      39: putstatic     #15                 // Field COMMENTS:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
      42: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
      45: dup
      46: ldc           #16                 // String MULTILINE
      48: iconst_3
      49: bipush        8
      51: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      54: putstatic     #17                 // Field MULTILINE:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
      57: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
      60: dup
      61: ldc           #18                 // String LITERAL
      63: iconst_4
      64: bipush        16
      66: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      69: putstatic     #19                 // Field LITERAL:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
      72: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
      75: dup
      76: ldc           #20                 // String DOTALL
      78: iconst_5
      79: bipush        32
      81: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
      84: putstatic     #21                 // Field DOTALL:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
      87: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
      90: dup
      91: ldc           #22                 // String UNICODE_CASE
      93: bipush        6
      95: bipush        64
      97: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
     100: putstatic     #23                 // Field UNICODE_CASE:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     103: new           #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
     106: dup
     107: ldc           #24                 // String CANON_EQ
     109: bipush        7
     111: sipush        128
     114: invokespecial #10                 // Method "<init>":(Ljava/lang/String;II)V
     117: putstatic     #25                 // Field CANON_EQ:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     120: bipush        8
     122: anewarray     #4                  // class org/apache/solr/common/params/TermsParams$TermsRegexpFlag
     125: dup
     126: iconst_0
     127: getstatic     #11                 // Field UNIX_LINES:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     130: aastore
     131: dup
     132: iconst_1
     133: getstatic     #13                 // Field CASE_INSENSITIVE:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     136: aastore
     137: dup
     138: iconst_2
     139: getstatic     #15                 // Field COMMENTS:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     142: aastore
     143: dup
     144: iconst_3
     145: getstatic     #17                 // Field MULTILINE:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     148: aastore
     149: dup
     150: iconst_4
     151: getstatic     #19                 // Field LITERAL:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     154: aastore
     155: dup
     156: iconst_5
     157: getstatic     #21                 // Field DOTALL:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     160: aastore
     161: dup
     162: bipush        6
     164: getstatic     #23                 // Field UNICODE_CASE:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     167: aastore
     168: dup
     169: bipush        7
     171: getstatic     #25                 // Field CANON_EQ:Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     174: aastore
     175: putstatic     #1                  // Field $VALUES:[Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;
     178: return
}
