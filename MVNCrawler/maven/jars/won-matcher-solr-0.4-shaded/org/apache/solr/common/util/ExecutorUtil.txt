Compiled from "ExecutorUtil.java"
public class org.apache.solr.common.util.ExecutorUtil {
  private static final org.slf4j.Logger log;

  private static volatile java.util.List<org.apache.solr.common.util.ExecutorUtil$InheritableThreadLocalProvider> providers;

  private static final java.lang.ThreadLocal<java.lang.Boolean> isServerPool;

  public org.apache.solr.common.util.ExecutorUtil();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public static synchronized void addThreadLocalProvider(org.apache.solr.common.util.ExecutorUtil$InheritableThreadLocalProvider);
    Code:
       0: getstatic     #3                  // Field providers:Ljava/util/List;
       3: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          46
      18: aload_1
      19: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #8                  // class org/apache/solr/common/util/ExecutorUtil$InheritableThreadLocalProvider
      27: astore_2
      28: aload_2
      29: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: aload_0
      33: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: invokevirtual #10                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifeq          43
      42: return
      43: goto          9
      46: new           #11                 // class java/util/ArrayList
      49: dup
      50: getstatic     #3                  // Field providers:Ljava/util/List;
      53: invokespecial #12                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      56: astore_1
      57: aload_1
      58: aload_0
      59: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: aload_1
      66: putstatic     #3                  // Field providers:Ljava/util/List;
      69: return

  public static void shutdownWithInterruptAndAwaitTermination(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       6: pop
       7: iconst_0
       8: istore_1
       9: iload_1
      10: ifne          39
      13: aload_0
      14: ldc2_w        #15                 // long 60l
      17: getstatic     #17                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      20: invokeinterface #18,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      25: istore_1
      26: goto          9
      29: astore_2
      30: invokestatic  #20                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V
      36: goto          9
      39: return
    Exception table:
       from    to  target type
          13    26    29   Class java/lang/InterruptedException

  public static void shutdownAndAwaitTerminationWithInterrupt(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
       6: iconst_0
       7: istore_1
       8: iconst_0
       9: istore_2
      10: iload_1
      11: ifne          57
      14: aload_0
      15: ldc2_w        #15                 // long 60l
      18: getstatic     #17                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      21: invokeinterface #18,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      26: istore_1
      27: goto          37
      30: astore_3
      31: invokestatic  #20                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      34: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V
      37: iload_1
      38: ifne          10
      41: iload_2
      42: ifne          10
      45: aload_0
      46: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
      51: pop
      52: iconst_1
      53: istore_2
      54: goto          10
      57: return
    Exception table:
       from    to  target type
          14    27    30   Class java/lang/InterruptedException

  public static void shutdownAndAwaitTermination(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
       6: iconst_0
       7: istore_1
       8: iload_1
       9: ifne          38
      12: aload_0
      13: ldc2_w        #15                 // long 60l
      16: getstatic     #17                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      19: invokeinterface #18,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      24: istore_1
      25: goto          8
      28: astore_2
      29: invokestatic  #20                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V
      35: goto          8
      38: return
    Exception table:
       from    to  target type
          12    25    28   Class java/lang/InterruptedException

  public static java.util.concurrent.ExecutorService newMDCAwareFixedThreadPool(int, java.util.concurrent.ThreadFactory);
    Code:
       0: new           #23                 // class org/apache/solr/common/util/ExecutorUtil$MDCAwareThreadPoolExecutor
       3: dup
       4: iload_0
       5: iload_0
       6: lconst_0
       7: getstatic     #24                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      10: new           #25                 // class java/util/concurrent/LinkedBlockingQueue
      13: dup
      14: invokespecial #26                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      17: aload_1
      18: invokespecial #27                 // Method org/apache/solr/common/util/ExecutorUtil$MDCAwareThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      21: areturn

  public static java.util.concurrent.ExecutorService newMDCAwareSingleThreadExecutor(java.util.concurrent.ThreadFactory);
    Code:
       0: new           #23                 // class org/apache/solr/common/util/ExecutorUtil$MDCAwareThreadPoolExecutor
       3: dup
       4: iconst_1
       5: iconst_1
       6: lconst_0
       7: getstatic     #24                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      10: new           #25                 // class java/util/concurrent/LinkedBlockingQueue
      13: dup
      14: invokespecial #26                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      17: aload_0
      18: invokespecial #27                 // Method org/apache/solr/common/util/ExecutorUtil$MDCAwareThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      21: areturn

  public static java.util.concurrent.ExecutorService newMDCAwareCachedThreadPool(java.lang.String);
    Code:
       0: new           #28                 // class org/apache/solr/common/util/SolrjNamedThreadFactory
       3: dup
       4: aload_0
       5: invokespecial #29                 // Method org/apache/solr/common/util/SolrjNamedThreadFactory."<init>":(Ljava/lang/String;)V
       8: invokestatic  #30                 // Method newMDCAwareCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      11: areturn

  public static java.util.concurrent.ExecutorService newMDCAwareCachedThreadPool(java.util.concurrent.ThreadFactory);
    Code:
       0: new           #23                 // class org/apache/solr/common/util/ExecutorUtil$MDCAwareThreadPoolExecutor
       3: dup
       4: iconst_0
       5: ldc           #32                 // int 2147483647
       7: ldc2_w        #15                 // long 60l
      10: getstatic     #17                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      13: new           #33                 // class java/util/concurrent/SynchronousQueue
      16: dup
      17: invokespecial #34                 // Method java/util/concurrent/SynchronousQueue."<init>":()V
      20: aload_0
      21: invokespecial #27                 // Method org/apache/solr/common/util/ExecutorUtil$MDCAwareThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      24: areturn

  public static boolean isSolrServerThread();
    Code:
       0: getstatic     #35                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: getstatic     #2                  // Field isServerPool:Ljava/lang/ThreadLocal;
       6: invokevirtual #36                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       9: invokevirtual #37                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      12: ireturn

  public static void setServerThreadFlag(java.lang.Boolean);
    Code:
       0: aload_0
       1: ifnonnull     13
       4: getstatic     #2                  // Field isServerPool:Ljava/lang/ThreadLocal;
       7: invokevirtual #38                 // Method java/lang/ThreadLocal.remove:()V
      10: goto          20
      13: getstatic     #2                  // Field isServerPool:Ljava/lang/ThreadLocal;
      16: aload_0
      17: invokevirtual #39                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      20: return

  static java.util.List access$000();
    Code:
       0: getstatic     #3                  // Field providers:Ljava/util/List;
       3: areturn

  static java.lang.ThreadLocal access$100();
    Code:
       0: getstatic     #2                  // Field isServerPool:Ljava/lang/ThreadLocal;
       3: areturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: invokestatic  #40                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokevirtual #41                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
       6: invokestatic  #42                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       9: putstatic     #1                  // Field log:Lorg/slf4j/Logger;
      12: new           #11                 // class java/util/ArrayList
      15: dup
      16: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
      19: putstatic     #3                  // Field providers:Ljava/util/List;
      22: new           #44                 // class java/lang/ThreadLocal
      25: dup
      26: invokespecial #45                 // Method java/lang/ThreadLocal."<init>":()V
      29: putstatic     #2                  // Field isServerPool:Ljava/lang/ThreadLocal;
      32: return
}
