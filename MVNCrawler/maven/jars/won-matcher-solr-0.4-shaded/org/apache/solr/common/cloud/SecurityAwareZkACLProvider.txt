Compiled from "SecurityAwareZkACLProvider.java"
public abstract class org.apache.solr.common.cloud.SecurityAwareZkACLProvider implements org.apache.solr.common.cloud.ZkACLProvider {
  public static final java.lang.String SECURITY_ZNODE_PATH;

  private java.util.List<org.apache.zookeeper.data.ACL> nonSecurityACLsToAdd;

  private java.util.List<org.apache.zookeeper.data.ACL> securityACLsToAdd;

  public org.apache.solr.common.cloud.SecurityAwareZkACLProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.List<org.apache.zookeeper.data.ACL> getACLsToAdd(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method isSecurityZNodePath:(Ljava/lang/String;)Z
       5: ifeq          13
       8: aload_0
       9: invokespecial #3                  // Method getSecurityACLsToAdd:()Ljava/util/List;
      12: areturn
      13: aload_0
      14: invokespecial #4                  // Method getNonSecurityACLsToAdd:()Ljava/util/List;
      17: areturn

  protected boolean isSecurityZNodePath(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_1
       5: ldc           #6                  // String /security
       7: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifne          22
      13: aload_1
      14: ldc           #8                  // String /security/
      16: invokevirtual #9                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: iconst_0
      25: ireturn

  protected abstract java.util.List<org.apache.zookeeper.data.ACL> createNonSecurityACLsToAdd();

  protected abstract java.util.List<org.apache.zookeeper.data.ACL> createSecurityACLsToAdd();

  private java.util.List<org.apache.zookeeper.data.ACL> getNonSecurityACLsToAdd();
    Code:
       0: aload_0
       1: getfield      #10                 // Field nonSecurityACLsToAdd:Ljava/util/List;
       4: ifnonnull     36
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #10                 // Field nonSecurityACLsToAdd:Ljava/util/List;
      15: ifnonnull     26
      18: aload_0
      19: aload_0
      20: invokevirtual #11                 // Method createNonSecurityACLsToAdd:()Ljava/util/List;
      23: putfield      #10                 // Field nonSecurityACLsToAdd:Ljava/util/List;
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: aload_0
      37: getfield      #10                 // Field nonSecurityACLsToAdd:Ljava/util/List;
      40: areturn
    Exception table:
       from    to  target type
          11    28    31   any
          31    34    31   any

  private java.util.List<org.apache.zookeeper.data.ACL> getSecurityACLsToAdd();
    Code:
       0: aload_0
       1: getfield      #12                 // Field securityACLsToAdd:Ljava/util/List;
       4: ifnonnull     36
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #12                 // Field securityACLsToAdd:Ljava/util/List;
      15: ifnonnull     26
      18: aload_0
      19: aload_0
      20: invokevirtual #13                 // Method createSecurityACLsToAdd:()Ljava/util/List;
      23: putfield      #12                 // Field securityACLsToAdd:Ljava/util/List;
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: aload_0
      37: getfield      #12                 // Field securityACLsToAdd:Ljava/util/List;
      40: areturn
    Exception table:
       from    to  target type
          11    28    31   any
          31    34    31   any
}
