Compiled from "ManagedBacklogDebugger.java"
public class org.apache.camel.management.mbean.ManagedBacklogDebugger implements org.apache.camel.api.management.mbean.ManagedBacklogDebuggerMBean {
  private final org.apache.camel.CamelContext camelContext;

  private final org.apache.camel.processor.interceptor.BacklogDebugger backlogDebugger;

  public org.apache.camel.management.mbean.ManagedBacklogDebugger(org.apache.camel.CamelContext, org.apache.camel.processor.interceptor.BacklogDebugger);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       9: aload_0
      10: aload_2
      11: putfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
      14: return

  public void init(org.apache.camel.spi.ManagementStrategy);
    Code:
       0: return

  public org.apache.camel.CamelContext getContext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: areturn

  public org.apache.camel.processor.interceptor.BacklogDebugger getBacklogDebugger();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: areturn

  public java.lang.String getLoggingLevel();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #39                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.getLoggingLevel:()Ljava/lang/String;
       7: areturn

  public void setLoggingLevel(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #43                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.setLoggingLevel:(Ljava/lang/String;)V
       8: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #49                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.isEnabled:()Z
       7: ireturn

  public void enableDebugger();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #52                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.enableDebugger:()V
       7: return

  public void disableDebugger();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #55                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.disableDebugger:()V
       7: return

  public void addBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #58                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.addBreakpoint:(Ljava/lang/String;)V
       8: return

  public void addConditionalBreakpoint(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #63                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.addConditionalBreakpoint:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void removeBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #68                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.removeBreakpoint:(Ljava/lang/String;)V
       8: return

  public void removeAllBreakpoints();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #71                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.removeAllBreakpoints:()V
       7: return

  public java.util.Set<java.lang.String> getBreakpoints();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #75                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.getBreakpoints:()Ljava/util/Set;
       7: areturn

  public void resumeBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #78                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.resumeBreakpoint:(Ljava/lang/String;)V
       8: return

  public void setMessageBodyOnBreakpoint(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: aload_2
       6: invokevirtual #82                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.setMessageBodyOnBreakpoint:(Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void setMessageHeaderOnBreakpoint(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #86                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.setMessageHeaderOnBreakpoint:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void resumeAll();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #91                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.resumeAll:()V
       7: return

  public void stepBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #94                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.stepBreakpoint:(Ljava/lang/String;)V
       8: return

  public boolean isSingleStepMode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #97                 // Method org/apache/camel/processor/interceptor/BacklogDebugger.isSingleStepMode:()Z
       7: ireturn

  public void step();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #100                // Method org/apache/camel/processor/interceptor/BacklogDebugger.step:()V
       7: return

  public java.util.Set<java.lang.String> getSuspendedBreakpointNodeIds();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #103                // Method org/apache/camel/processor/interceptor/BacklogDebugger.getSuspendedBreakpointNodeIds:()Ljava/util/Set;
       7: areturn

  public void disableBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #106                // Method org/apache/camel/processor/interceptor/BacklogDebugger.disableBreakpoint:(Ljava/lang/String;)V
       8: return

  public void enableBreakpoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #109                // Method org/apache/camel/processor/interceptor/BacklogDebugger.enableBreakpoint:(Ljava/lang/String;)V
       8: return

  public int getBodyMaxChars();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #113                // Method org/apache/camel/processor/interceptor/BacklogDebugger.getBodyMaxChars:()I
       7: ireturn

  public void setBodyMaxChars(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: iload_1
       5: invokevirtual #117                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setBodyMaxChars:(I)V
       8: return

  public boolean isBodyIncludeStreams();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #122                // Method org/apache/camel/processor/interceptor/BacklogDebugger.isBodyIncludeStreams:()Z
       7: ireturn

  public void setBodyIncludeStreams(boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: iload_1
       5: invokevirtual #126                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setBodyIncludeStreams:(Z)V
       8: return

  public boolean isBodyIncludeFiles();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #131                // Method org/apache/camel/processor/interceptor/BacklogDebugger.isBodyIncludeFiles:()Z
       7: ireturn

  public void setBodyIncludeFiles(boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: iload_1
       5: invokevirtual #134                // Method org/apache/camel/processor/interceptor/BacklogDebugger.setBodyIncludeFiles:(Z)V
       8: return

  public java.lang.String dumpTracedMessagesAsXml(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: aload_1
       5: invokevirtual #139                // Method org/apache/camel/processor/interceptor/BacklogDebugger.dumpTracedMessagesAsXml:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public long getDebugCounter();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #143                // Method org/apache/camel/processor/interceptor/BacklogDebugger.getDebugCounter:()J
       7: lreturn

  public void resetDebugCounter();
    Code:
       0: aload_0
       1: getfield      #23                 // Field backlogDebugger:Lorg/apache/camel/processor/interceptor/BacklogDebugger;
       4: invokevirtual #146                // Method org/apache/camel/processor/interceptor/BacklogDebugger.resetDebugCounter:()V
       7: return
}
