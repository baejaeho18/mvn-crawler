Compiled from "ConcurrentHashMapV8.java"
class org.apache.camel.com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node<K, V> implements java.util.Map$Entry<K, V> {
  final int hash;

  final K key;

  volatile V val;

  volatile org.apache.camel.com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node<K, V> next;

  org.apache.camel.com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node(int, K, V, org.apache.camel.com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node<K, V>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #31                 // Field hash:I
       9: aload_0
      10: aload_2
      11: putfield      #33                 // Field key:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #35                 // Field val:Ljava/lang/Object;
      19: aload_0
      20: aload         4
      22: putfield      #37                 // Field next:Lorg/apache/camel/com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8$Node;
      25: return

  public final K getKey();
    Code:
       0: aload_0
       1: getfield      #33                 // Field key:Ljava/lang/Object;
       4: areturn

  public final V getValue();
    Code:
       0: aload_0
       1: getfield      #35                 // Field val:Ljava/lang/Object;
       4: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #33                 // Field key:Ljava/lang/Object;
       4: invokevirtual #45                 // Method java/lang/Object.hashCode:()I
       7: aload_0
       8: getfield      #35                 // Field val:Ljava/lang/Object;
      11: invokevirtual #45                 // Method java/lang/Object.hashCode:()I
      14: ixor
      15: ireturn

  public final java.lang.String toString();
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #33                 // Field key:Ljava/lang/Object;
      11: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #56                 // String =
      16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #35                 // Field val:Ljava/lang/Object;
      23: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public final V setValue(V);
    Code:
       0: new           #65                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/util/Map$Entry
       4: ifeq          80
       7: aload_1
       8: checkcast     #7                  // class java/util/Map$Entry
      11: dup
      12: astore_2
      13: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      18: dup
      19: astore_3
      20: ifnull        80
      23: aload_2
      24: invokeinterface #73,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      29: dup
      30: astore        4
      32: ifnull        80
      35: aload_3
      36: aload_0
      37: getfield      #33                 // Field key:Ljava/lang/Object;
      40: if_acmpeq     54
      43: aload_3
      44: aload_0
      45: getfield      #33                 // Field key:Ljava/lang/Object;
      48: invokevirtual #75                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          80
      54: aload         4
      56: aload_0
      57: getfield      #35                 // Field val:Ljava/lang/Object;
      60: dup
      61: astore        5
      63: if_acmpeq     76
      66: aload         4
      68: aload         5
      70: invokevirtual #75                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  org.apache.camel.com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node<K, V> find(int, java.lang.Object);
    Code:
       0: aload_0
       1: astore_3
       2: aload_2
       3: ifnull        50
       6: aload_3
       7: getfield      #31                 // Field hash:I
      10: iload_1
      11: if_icmpne     41
      14: aload_3
      15: getfield      #33                 // Field key:Ljava/lang/Object;
      18: dup
      19: astore        4
      21: aload_2
      22: if_acmpeq     39
      25: aload         4
      27: ifnull        41
      30: aload_2
      31: aload         4
      33: invokevirtual #75                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: aload_3
      40: areturn
      41: aload_3
      42: getfield      #37                 // Field next:Lorg/apache/camel/com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8$Node;
      45: dup
      46: astore_3
      47: ifnonnull     6
      50: aconst_null
      51: areturn
}
