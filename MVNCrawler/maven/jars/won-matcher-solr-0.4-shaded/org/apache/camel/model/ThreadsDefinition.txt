Compiled from "ThreadsDefinition.java"
public class org.apache.camel.model.ThreadsDefinition extends org.apache.camel.model.OutputDefinition<org.apache.camel.model.ThreadsDefinition> implements org.apache.camel.model.ExecutorServiceAwareDefinition<org.apache.camel.model.ThreadsDefinition> {
  private java.util.concurrent.ExecutorService executorService;

  private java.lang.String executorServiceRef;

  private java.lang.Integer poolSize;

  private java.lang.Integer maxPoolSize;

  private java.lang.Long keepAliveTime;

  private java.util.concurrent.TimeUnit timeUnit;

  private java.lang.Integer maxQueueSize;

  private java.lang.String threadName;

  private org.apache.camel.ThreadPoolRejectedPolicy rejectedPolicy;

  private java.lang.Boolean callerRunsWhenRejected;

  public org.apache.camel.model.ThreadsDefinition();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/apache/camel/model/OutputDefinition."<init>":()V
       4: aload_0
       5: ldc           #44                 // String Threads
       7: putfield      #46                 // Field threadName:Ljava/lang/String;
      10: return

  public org.apache.camel.Processor createProcessor(org.apache.camel.spi.RouteContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getThreadName:()Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: invokevirtual #56                 // Method getThreadName:()Ljava/lang/String;
      11: goto          16
      14: ldc           #44                 // String Threads
      16: astore_2
      17: aload_1
      18: aload_0
      19: iconst_1
      20: invokestatic  #64                 // Method org/apache/camel/model/ProcessorDefinitionHelper.willCreateNewThreadPool:(Lorg/apache/camel/spi/RouteContext;Lorg/apache/camel/model/ExecutorServiceAwareDefinition;Z)Z
      23: istore_3
      24: aload_1
      25: aload_2
      26: aload_0
      27: iconst_0
      28: invokestatic  #68                 // Method org/apache/camel/model/ProcessorDefinitionHelper.getConfiguredExecutorService:(Lorg/apache/camel/spi/RouteContext;Ljava/lang/String;Lorg/apache/camel/model/ExecutorServiceAwareDefinition;Z)Ljava/util/concurrent/ExecutorService;
      31: astore        4
      33: aload         4
      35: ifnonnull     118
      38: aload_1
      39: invokeinterface #74,  1           // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
      44: invokeinterface #80,  1           // InterfaceMethod org/apache/camel/CamelContext.getExecutorServiceManager:()Lorg/apache/camel/spi/ExecutorServiceManager;
      49: astore        5
      51: new           #82                 // class org/apache/camel/builder/ThreadPoolProfileBuilder
      54: dup
      55: aload_2
      56: invokespecial #85                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder."<init>":(Ljava/lang/String;)V
      59: aload_0
      60: invokevirtual #89                 // Method getPoolSize:()Ljava/lang/Integer;
      63: invokevirtual #92                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.poolSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
      66: aload_0
      67: invokevirtual #95                 // Method getMaxPoolSize:()Ljava/lang/Integer;
      70: invokevirtual #97                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.maxPoolSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
      73: aload_0
      74: invokevirtual #101                // Method getKeepAliveTime:()Ljava/lang/Long;
      77: aload_0
      78: invokevirtual #105                // Method getTimeUnit:()Ljava/util/concurrent/TimeUnit;
      81: invokevirtual #108                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.keepAliveTime:(Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
      84: aload_0
      85: invokevirtual #111                // Method getMaxQueueSize:()Ljava/lang/Integer;
      88: invokevirtual #113                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.maxQueueSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
      91: aload_0
      92: invokevirtual #117                // Method getRejectedPolicy:()Lorg/apache/camel/ThreadPoolRejectedPolicy;
      95: invokevirtual #120                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.rejectedPolicy:(Lorg/apache/camel/ThreadPoolRejectedPolicy;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
      98: invokevirtual #124                // Method org/apache/camel/builder/ThreadPoolProfileBuilder.build:()Lorg/apache/camel/spi/ThreadPoolProfile;
     101: astore        6
     103: aload         5
     105: aload_0
     106: aload_2
     107: aload         6
     109: invokeinterface #130,  4          // InterfaceMethod org/apache/camel/spi/ExecutorServiceManager.newThreadPool:(Ljava/lang/Object;Ljava/lang/String;Lorg/apache/camel/spi/ThreadPoolProfile;)Ljava/util/concurrent/ExecutorService;
     114: astore        4
     116: iconst_1
     117: istore_3
     118: new           #134                // class org/apache/camel/processor/ThreadsProcessor
     121: dup
     122: aload_1
     123: invokeinterface #74,  1           // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
     128: aload         4
     130: iload_3
     131: invokespecial #137                // Method org/apache/camel/processor/ThreadsProcessor."<init>":(Lorg/apache/camel/CamelContext;Ljava/util/concurrent/ExecutorService;Z)V
     134: astore        5
     136: aload_0
     137: invokevirtual #141                // Method getCallerRunsWhenRejected:()Ljava/lang/Boolean;
     140: ifnonnull     152
     143: aload         5
     145: iconst_1
     146: invokevirtual #145                // Method org/apache/camel/processor/ThreadsProcessor.setCallerRunsWhenRejected:(Z)V
     149: goto          164
     152: aload         5
     154: aload_0
     155: invokevirtual #141                // Method getCallerRunsWhenRejected:()Ljava/lang/Boolean;
     158: invokevirtual #151                // Method java/lang/Boolean.booleanValue:()Z
     161: invokevirtual #145                // Method org/apache/camel/processor/ThreadsProcessor.setCallerRunsWhenRejected:(Z)V
     164: aload         5
     166: aload_0
     167: invokevirtual #117                // Method getRejectedPolicy:()Lorg/apache/camel/ThreadPoolRejectedPolicy;
     170: invokevirtual #155                // Method org/apache/camel/processor/ThreadsProcessor.setRejectedPolicy:(Lorg/apache/camel/ThreadPoolRejectedPolicy;)V
     173: new           #157                // class java/util/ArrayList
     176: dup
     177: iconst_2
     178: invokespecial #160                // Method java/util/ArrayList."<init>":(I)V
     181: astore        6
     183: aload         6
     185: aload         5
     187: invokeinterface #166,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     192: pop
     193: aload         6
     195: aload_0
     196: aload_1
     197: iconst_1
     198: invokevirtual #170                // Method createChildProcessor:(Lorg/apache/camel/spi/RouteContext;Z)Lorg/apache/camel/Processor;
     201: invokeinterface #166,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     206: pop
     207: new           #17                 // class org/apache/camel/model/ThreadsDefinition$1
     210: dup
     211: aload_0
     212: aload_1
     213: invokeinterface #74,  1           // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
     218: aload         6
     220: invokespecial #173                // Method org/apache/camel/model/ThreadsDefinition$1."<init>":(Lorg/apache/camel/model/ThreadsDefinition;Lorg/apache/camel/CamelContext;Ljava/util/Collection;)V
     223: areturn

  public java.lang.String getLabel();
    Code:
       0: ldc           #189                // String threads
       2: areturn

  public java.lang.String getShortName();
    Code:
       0: ldc           #189                // String threads
       2: areturn

  public java.lang.String toString();
    Code:
       0: new           #193                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #194                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #196                // String Threads[
       9: invokevirtual #200                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #204                // Method getOutputs:()Ljava/util/List;
      16: invokevirtual #207                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #209                // String ]
      21: invokevirtual #200                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #211                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.apache.camel.model.ThreadsDefinition executorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #216                // Method setExecutorService:(Ljava/util/concurrent/ExecutorService;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition executorServiceRef(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #220                // Method setExecutorServiceRef:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition poolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #227                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #231                // Method setPoolSize:(Ljava/lang/Integer;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition maxPoolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #227                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #235                // Method setMaxPoolSize:(Ljava/lang/Integer;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition keepAliveTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #241                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: invokevirtual #245                // Method setKeepAliveTime:(Ljava/lang/Long;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition timeUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #251                // Method setTimeUnit:(Ljava/util/concurrent/TimeUnit;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition maxQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #227                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #255                // Method setMaxQueueSize:(Ljava/lang/Integer;)V
       8: aload_0
       9: areturn

  public org.apache.camel.model.ThreadsDefinition rejectedPolicy(org.apache.camel.ThreadPoolRejectedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #257                // Method setRejectedPolicy:(Lorg/apache/camel/ThreadPoolRejectedPolicy;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition threadName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #260                // Method setThreadName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public org.apache.camel.model.ThreadsDefinition callerRunsWhenRejected(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #264                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokevirtual #267                // Method setCallerRunsWhenRejected:(Ljava/lang/Boolean;)V
       8: aload_0
       9: areturn

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #271                // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public void setExecutorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #271                // Field executorService:Ljava/util/concurrent/ExecutorService;
       5: return

  public java.lang.String getExecutorServiceRef();
    Code:
       0: aload_0
       1: getfield      #274                // Field executorServiceRef:Ljava/lang/String;
       4: areturn

  public void setExecutorServiceRef(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #274                // Field executorServiceRef:Ljava/lang/String;
       5: return

  public java.lang.Integer getPoolSize();
    Code:
       0: aload_0
       1: getfield      #276                // Field poolSize:Ljava/lang/Integer;
       4: areturn

  public void setPoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #276                // Field poolSize:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #278                // Field maxPoolSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxPoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #278                // Field maxPoolSize:Ljava/lang/Integer;
       5: return

  public java.lang.Long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #280                // Field keepAliveTime:Ljava/lang/Long;
       4: areturn

  public void setKeepAliveTime(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #280                // Field keepAliveTime:Ljava/lang/Long;
       5: return

  public java.util.concurrent.TimeUnit getTimeUnit();
    Code:
       0: aload_0
       1: getfield      #282                // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public void setTimeUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #282                // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       5: return

  public java.lang.Integer getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #284                // Field maxQueueSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #284                // Field maxQueueSize:Ljava/lang/Integer;
       5: return

  public java.lang.String getThreadName();
    Code:
       0: aload_0
       1: getfield      #46                 // Field threadName:Ljava/lang/String;
       4: areturn

  public void setThreadName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field threadName:Ljava/lang/String;
       5: return

  public org.apache.camel.ThreadPoolRejectedPolicy getRejectedPolicy();
    Code:
       0: aload_0
       1: getfield      #286                // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       4: areturn

  public void setRejectedPolicy(org.apache.camel.ThreadPoolRejectedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #286                // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       5: return

  public java.lang.Boolean getCallerRunsWhenRejected();
    Code:
       0: aload_0
       1: getfield      #288                // Field callerRunsWhenRejected:Ljava/lang/Boolean;
       4: areturn

  public void setCallerRunsWhenRejected(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #288                // Field callerRunsWhenRejected:Ljava/lang/Boolean;
       5: return

  public org.apache.camel.model.ProcessorDefinition executorServiceRef(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #291                // Method executorServiceRef:(Ljava/lang/String;)Lorg/apache/camel/model/ThreadsDefinition;
       5: areturn

  public org.apache.camel.model.ProcessorDefinition executorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #295                // Method executorService:(Ljava/util/concurrent/ExecutorService;)Lorg/apache/camel/model/ThreadsDefinition;
       5: areturn
}
