Compiled from "XmlJsonDataFormat.java"
public class org.apache.camel.model.dataformat.XmlJsonDataFormat extends org.apache.camel.model.DataFormatDefinition {
  public static final java.lang.String TYPE_HINTS;

  public static final java.lang.String REMOVE_NAMESPACE_PREFIXES;

  public static final java.lang.String SKIP_NAMESPACES;

  public static final java.lang.String TRIM_SPACES;

  public static final java.lang.String SKIP_WHITESPACE;

  public static final java.lang.String EXPANDABLE_PROPERTIES;

  public static final java.lang.String ARRAY_NAME;

  public static final java.lang.String ELEMENT_NAME;

  public static final java.lang.String ROOT_NAME;

  public static final java.lang.String NAMESPACE_LENIENT;

  public static final java.lang.String FORCE_TOP_LEVEL_OBJECT;

  public static final java.lang.String ENCODING;

  private java.lang.String encoding;

  private java.lang.String elementName;

  private java.lang.String arrayName;

  private java.lang.Boolean forceTopLevelObject;

  private java.lang.Boolean namespaceLenient;

  private java.lang.String rootName;

  private java.lang.Boolean skipWhitespace;

  private java.lang.Boolean trimSpaces;

  private java.lang.Boolean skipNamespaces;

  private java.lang.Boolean removeNamespacePrefixes;

  private java.util.List<java.lang.String> expandableProperties;

  private java.lang.String typeHints;

  public org.apache.camel.model.dataformat.XmlJsonDataFormat();
    Code:
       0: aload_0
       1: ldc           #57                 // String xmljson
       3: invokespecial #60                 // Method org/apache/camel/model/DataFormatDefinition."<init>":(Ljava/lang/String;)V
       6: return

  public org.apache.camel.model.dataformat.XmlJsonDataFormat(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #57                 // String xmljson
       3: invokespecial #60                 // Method org/apache/camel/model/DataFormatDefinition."<init>":(Ljava/lang/String;)V
       6: aload_1
       7: ldc           #49                 // String encoding
       9: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ifeq          32
      17: aload_0
      18: aload_1
      19: ldc           #49                 // String encoding
      21: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #75                 // class java/lang/String
      29: putfield      #77                 // Field encoding:Ljava/lang/String;
      32: aload_1
      33: ldc           #46                 // String forceTopLevelObject
      35: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      40: ifeq          64
      43: aload_0
      44: aload_1
      45: ldc           #46                 // String forceTopLevelObject
      47: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #75                 // class java/lang/String
      55: invokestatic  #83                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      58: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      61: putfield      #89                 // Field forceTopLevelObject:Ljava/lang/Boolean;
      64: aload_1
      65: ldc           #43                 // String namespaceLenient
      67: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      72: ifeq          96
      75: aload_0
      76: aload_1
      77: ldc           #43                 // String namespaceLenient
      79: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #75                 // class java/lang/String
      87: invokestatic  #83                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      90: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      93: putfield      #91                 // Field namespaceLenient:Ljava/lang/Boolean;
      96: aload_1
      97: ldc           #40                 // String rootName
      99: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     104: ifeq          122
     107: aload_0
     108: aload_1
     109: ldc           #40                 // String rootName
     111: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     116: checkcast     #75                 // class java/lang/String
     119: putfield      #93                 // Field rootName:Ljava/lang/String;
     122: aload_1
     123: ldc           #37                 // String elementName
     125: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     130: ifeq          148
     133: aload_0
     134: aload_1
     135: ldc           #37                 // String elementName
     137: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     142: checkcast     #75                 // class java/lang/String
     145: putfield      #77                 // Field encoding:Ljava/lang/String;
     148: aload_1
     149: ldc           #34                 // String arrayName
     151: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     156: ifeq          174
     159: aload_0
     160: aload_1
     161: ldc           #34                 // String arrayName
     163: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     168: checkcast     #75                 // class java/lang/String
     171: putfield      #95                 // Field elementName:Ljava/lang/String;
     174: aload_1
     175: ldc           #31                 // String expandableProperties
     177: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     182: ifeq          208
     185: aload_0
     186: aload_1
     187: ldc           #31                 // String expandableProperties
     189: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     194: checkcast     #75                 // class java/lang/String
     197: ldc           #97                 // String
     199: invokevirtual #101                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     202: invokestatic  #107                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     205: putfield      #109                // Field expandableProperties:Ljava/util/List;
     208: aload_1
     209: ldc           #28                 // String skipWhitespace
     211: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     216: ifeq          240
     219: aload_0
     220: aload_1
     221: ldc           #28                 // String skipWhitespace
     223: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     228: checkcast     #75                 // class java/lang/String
     231: invokestatic  #83                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     234: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     237: putfield      #111                // Field skipWhitespace:Ljava/lang/Boolean;
     240: aload_1
     241: ldc           #25                 // String trimSpaces
     243: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     248: ifeq          272
     251: aload_0
     252: aload_1
     253: ldc           #25                 // String trimSpaces
     255: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     260: checkcast     #75                 // class java/lang/String
     263: invokestatic  #83                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     266: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     269: putfield      #113                // Field trimSpaces:Ljava/lang/Boolean;
     272: aload_1
     273: ldc           #22                 // String skipNamespaces
     275: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     280: ifeq          304
     283: aload_0
     284: aload_1
     285: ldc           #22                 // String skipNamespaces
     287: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     292: checkcast     #75                 // class java/lang/String
     295: invokestatic  #83                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     298: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     301: putfield      #115                // Field skipNamespaces:Ljava/lang/Boolean;
     304: aload_1
     305: ldc           #19                 // String removeNamespacePrefixes
     307: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     312: ifeq          336
     315: aload_0
     316: aload_1
     317: ldc           #19                 // String removeNamespacePrefixes
     319: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     324: checkcast     #75                 // class java/lang/String
     327: invokestatic  #83                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     330: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     333: putfield      #117                // Field removeNamespacePrefixes:Ljava/lang/Boolean;
     336: aload_1
     337: ldc           #16                 // String typeHints
     339: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     344: ifeq          362
     347: aload_0
     348: aload_1
     349: ldc           #16                 // String typeHints
     351: invokeinterface #73,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     356: checkcast     #75                 // class java/lang/String
     359: putfield      #119                // Field typeHints:Ljava/lang/String;
     362: return

  protected void configureDataFormat(org.apache.camel.spi.DataFormat, org.apache.camel.CamelContext);
    Code:
       0: aload_0
       1: getfield      #77                 // Field encoding:Ljava/lang/String;
       4: ifnull        19
       7: aload_0
       8: aload_2
       9: aload_1
      10: ldc           #49                 // String encoding
      12: aload_0
      13: getfield      #77                 // Field encoding:Ljava/lang/String;
      16: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      19: aload_0
      20: getfield      #89                 // Field forceTopLevelObject:Ljava/lang/Boolean;
      23: ifnull        38
      26: aload_0
      27: aload_2
      28: aload_1
      29: ldc           #46                 // String forceTopLevelObject
      31: aload_0
      32: getfield      #89                 // Field forceTopLevelObject:Ljava/lang/Boolean;
      35: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      38: aload_0
      39: getfield      #91                 // Field namespaceLenient:Ljava/lang/Boolean;
      42: ifnull        57
      45: aload_0
      46: aload_2
      47: aload_1
      48: ldc           #43                 // String namespaceLenient
      50: aload_0
      51: getfield      #91                 // Field namespaceLenient:Ljava/lang/Boolean;
      54: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      57: aload_0
      58: getfield      #93                 // Field rootName:Ljava/lang/String;
      61: ifnull        76
      64: aload_0
      65: aload_2
      66: aload_1
      67: ldc           #40                 // String rootName
      69: aload_0
      70: getfield      #93                 // Field rootName:Ljava/lang/String;
      73: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      76: aload_0
      77: getfield      #95                 // Field elementName:Ljava/lang/String;
      80: ifnull        95
      83: aload_0
      84: aload_2
      85: aload_1
      86: ldc           #37                 // String elementName
      88: aload_0
      89: getfield      #95                 // Field elementName:Ljava/lang/String;
      92: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      95: aload_0
      96: getfield      #130                // Field arrayName:Ljava/lang/String;
      99: ifnull        114
     102: aload_0
     103: aload_2
     104: aload_1
     105: ldc           #34                 // String arrayName
     107: aload_0
     108: getfield      #130                // Field arrayName:Ljava/lang/String;
     111: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     114: aload_0
     115: getfield      #109                // Field expandableProperties:Ljava/util/List;
     118: ifnull        145
     121: aload_0
     122: getfield      #109                // Field expandableProperties:Ljava/util/List;
     125: invokeinterface #136,  1          // InterfaceMethod java/util/List.size:()I
     130: ifeq          145
     133: aload_0
     134: aload_2
     135: aload_1
     136: ldc           #31                 // String expandableProperties
     138: aload_0
     139: getfield      #109                // Field expandableProperties:Ljava/util/List;
     142: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     145: aload_0
     146: getfield      #111                // Field skipWhitespace:Ljava/lang/Boolean;
     149: ifnull        164
     152: aload_0
     153: aload_2
     154: aload_1
     155: ldc           #28                 // String skipWhitespace
     157: aload_0
     158: getfield      #111                // Field skipWhitespace:Ljava/lang/Boolean;
     161: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     164: aload_0
     165: getfield      #113                // Field trimSpaces:Ljava/lang/Boolean;
     168: ifnull        183
     171: aload_0
     172: aload_2
     173: aload_1
     174: ldc           #25                 // String trimSpaces
     176: aload_0
     177: getfield      #113                // Field trimSpaces:Ljava/lang/Boolean;
     180: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     183: aload_0
     184: getfield      #115                // Field skipNamespaces:Ljava/lang/Boolean;
     187: ifnull        202
     190: aload_0
     191: aload_2
     192: aload_1
     193: ldc           #22                 // String skipNamespaces
     195: aload_0
     196: getfield      #115                // Field skipNamespaces:Ljava/lang/Boolean;
     199: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     202: aload_0
     203: getfield      #117                // Field removeNamespacePrefixes:Ljava/lang/Boolean;
     206: ifnull        221
     209: aload_0
     210: aload_2
     211: aload_1
     212: ldc           #19                 // String removeNamespacePrefixes
     214: aload_0
     215: getfield      #117                // Field removeNamespacePrefixes:Ljava/lang/Boolean;
     218: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     221: aload_0
     222: getfield      #119                // Field typeHints:Ljava/lang/String;
     225: ifnull        243
     228: aload_0
     229: aload_2
     230: aload_0
     231: getfield      #119                // Field typeHints:Ljava/lang/String;
     234: ldc           #16                 // String typeHints
     236: aload_0
     237: getfield      #119                // Field typeHints:Ljava/lang/String;
     240: invokevirtual #128                // Method setProperty:(Lorg/apache/camel/CamelContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     243: return

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #77                 // Field encoding:Ljava/lang/String;
       4: areturn

  public void setEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field encoding:Ljava/lang/String;
       5: return

  public java.lang.String getElementName();
    Code:
       0: aload_0
       1: getfield      #95                 // Field elementName:Ljava/lang/String;
       4: areturn

  public void setElementName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field elementName:Ljava/lang/String;
       5: return

  public java.lang.String getArrayName();
    Code:
       0: aload_0
       1: getfield      #130                // Field arrayName:Ljava/lang/String;
       4: areturn

  public void setArrayName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #130                // Field arrayName:Ljava/lang/String;
       5: return

  public java.lang.Boolean getForceTopLevelObject();
    Code:
       0: aload_0
       1: getfield      #89                 // Field forceTopLevelObject:Ljava/lang/Boolean;
       4: areturn

  public void setForceTopLevelObject(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field forceTopLevelObject:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getNamespaceLenient();
    Code:
       0: aload_0
       1: getfield      #91                 // Field namespaceLenient:Ljava/lang/Boolean;
       4: areturn

  public void setNamespaceLenient(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field namespaceLenient:Ljava/lang/Boolean;
       5: return

  public java.lang.String getRootName();
    Code:
       0: aload_0
       1: getfield      #93                 // Field rootName:Ljava/lang/String;
       4: areturn

  public void setRootName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #93                 // Field rootName:Ljava/lang/String;
       5: return

  public java.lang.Boolean getSkipWhitespace();
    Code:
       0: aload_0
       1: getfield      #111                // Field skipWhitespace:Ljava/lang/Boolean;
       4: areturn

  public void setSkipWhitespace(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field skipWhitespace:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getTrimSpaces();
    Code:
       0: aload_0
       1: getfield      #113                // Field trimSpaces:Ljava/lang/Boolean;
       4: areturn

  public void setTrimSpaces(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field trimSpaces:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getSkipNamespaces();
    Code:
       0: aload_0
       1: getfield      #115                // Field skipNamespaces:Ljava/lang/Boolean;
       4: areturn

  public void setSkipNamespaces(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field skipNamespaces:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getRemoveNamespacePrefixes();
    Code:
       0: aload_0
       1: getfield      #117                // Field removeNamespacePrefixes:Ljava/lang/Boolean;
       4: areturn

  public void setRemoveNamespacePrefixes(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field removeNamespacePrefixes:Ljava/lang/Boolean;
       5: return

  public java.util.List<java.lang.String> getExpandableProperties();
    Code:
       0: aload_0
       1: getfield      #109                // Field expandableProperties:Ljava/util/List;
       4: areturn

  public void setExpandableProperties(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field expandableProperties:Ljava/util/List;
       5: return

  public java.lang.String getTypeHints();
    Code:
       0: aload_0
       1: getfield      #119                // Field typeHints:Ljava/lang/String;
       4: areturn

  public void setTypeHints(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #119                // Field typeHints:Ljava/lang/String;
       5: return
}
