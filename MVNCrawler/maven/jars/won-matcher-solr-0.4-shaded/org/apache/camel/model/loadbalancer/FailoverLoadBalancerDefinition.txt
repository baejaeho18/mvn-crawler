Compiled from "FailoverLoadBalancerDefinition.java"
public class org.apache.camel.model.loadbalancer.FailoverLoadBalancerDefinition extends org.apache.camel.model.LoadBalancerDefinition {
  private java.util.List<java.lang.String> exceptions;

  private java.lang.Boolean roundRobin;

  private java.lang.Integer maximumFailoverAttempts;

  public org.apache.camel.model.loadbalancer.FailoverLoadBalancerDefinition();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/apache/camel/model/LoadBalancerDefinition."<init>":()V
       4: aload_0
       5: new           #28                 // class java/util/ArrayList
       8: dup
       9: invokespecial #29                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #31                 // Field exceptions:Ljava/util/List;
      15: return

  protected org.apache.camel.processor.loadbalancer.LoadBalancer createLoadBalancer(org.apache.camel.spi.RouteContext);
    Code:
       0: aload_0
       1: getfield      #31                 // Field exceptions:Ljava/util/List;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          133
      12: new           #28                 // class java/util/ArrayList
      15: dup
      16: invokespecial #29                 // Method java/util/ArrayList."<init>":()V
      19: astore_2
      20: aload_0
      21: getfield      #31                 // Field exceptions:Ljava/util/List;
      24: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          120
      39: aload_3
      40: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #56                 // class java/lang/String
      48: astore        4
      50: aload_1
      51: invokeinterface #62,  1           // InterfaceMethod org/apache/camel/spi/RouteContext.getCamelContext:()Lorg/apache/camel/CamelContext;
      56: invokeinterface #68,  1           // InterfaceMethod org/apache/camel/CamelContext.getClassResolver:()Lorg/apache/camel/spi/ClassResolver;
      61: aload         4
      63: invokeinterface #74,  2           // InterfaceMethod org/apache/camel/spi/ClassResolver.resolveClass:(Ljava/lang/String;)Ljava/lang/Class;
      68: astore        5
      70: aload         5
      72: ifnonnull     108
      75: new           #76                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #78                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #81                 // String Cannot find class:
      88: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload         4
      93: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #87                 // String  in the classpath
      98: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_2
     109: aload         5
     111: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          30
     120: new           #102                // class org/apache/camel/processor/loadbalancer/FailOverLoadBalancer
     123: dup
     124: aload_2
     125: invokespecial #105                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer."<init>":(Ljava/util/List;)V
     128: astore        6
     130: goto          142
     133: new           #102                // class org/apache/camel/processor/loadbalancer/FailOverLoadBalancer
     136: dup
     137: invokespecial #106                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer."<init>":()V
     140: astore        6
     142: aload_0
     143: invokevirtual #110                // Method getMaximumFailoverAttempts:()Ljava/lang/Integer;
     146: ifnull        161
     149: aload         6
     151: aload_0
     152: invokevirtual #110                // Method getMaximumFailoverAttempts:()Ljava/lang/Integer;
     155: invokevirtual #116                // Method java/lang/Integer.intValue:()I
     158: invokevirtual #120                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.setMaximumFailoverAttempts:(I)V
     161: aload_0
     162: getfield      #122                // Field roundRobin:Ljava/lang/Boolean;
     165: ifnull        180
     168: aload         6
     170: aload_0
     171: getfield      #122                // Field roundRobin:Ljava/lang/Boolean;
     174: invokevirtual #127                // Method java/lang/Boolean.booleanValue:()Z
     177: invokevirtual #131                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.setRoundRobin:(Z)V
     180: aload         6
     182: areturn

  public java.util.List<java.lang.String> getExceptions();
    Code:
       0: aload_0
       1: getfield      #31                 // Field exceptions:Ljava/util/List;
       4: areturn

  public void setExceptions(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field exceptions:Ljava/util/List;
       5: return

  public boolean isRoundRobin();
    Code:
       0: aload_0
       1: getfield      #122                // Field roundRobin:Ljava/lang/Boolean;
       4: ifnull        21
       7: aload_0
       8: getfield      #122                // Field roundRobin:Ljava/lang/Boolean;
      11: invokevirtual #127                // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.lang.Boolean getRoundRobin();
    Code:
       0: aload_0
       1: getfield      #122                // Field roundRobin:Ljava/lang/Boolean;
       4: areturn

  public void setRoundRobin(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #122                // Field roundRobin:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getMaximumFailoverAttempts();
    Code:
       0: aload_0
       1: getfield      #152                // Field maximumFailoverAttempts:Ljava/lang/Integer;
       4: areturn

  public void setMaximumFailoverAttempts(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #152                // Field maximumFailoverAttempts:Ljava/lang/Integer;
       5: return

  public java.lang.String toString();
    Code:
       0: ldc           #155                // String FailoverLoadBalancer
       2: areturn
}
