Compiled from "DefaultInflightRepository.java"
public class org.apache.camel.impl.DefaultInflightRepository extends org.apache.camel.support.ServiceSupport implements org.apache.camel.spi.InflightRepository {
  private static final org.slf4j.Logger LOG;

  private final java.util.concurrent.atomic.AtomicInteger totalCount;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.atomic.AtomicInteger> routeCount;

  public org.apache.camel.impl.DefaultInflightRepository();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #23                 // Field totalCount:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #25                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #26                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #28                 // Field routeCount:Ljava/util/concurrent/ConcurrentMap;
      26: return

  public void add(org.apache.camel.Exchange);
    Code:
       0: aload_0
       1: getfield      #23                 // Field totalCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void remove(org.apache.camel.Exchange);
    Code:
       0: aload_0
       1: getfield      #23                 // Field totalCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: return

  public void add(org.apache.camel.Exchange, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field routeCount:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_1
      10: invokespecial #46                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: invokeinterface #52,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #20                 // class java/util/concurrent/atomic/AtomicInteger
      21: astore_3
      22: aload_3
      23: ifnull        31
      26: aload_3
      27: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      30: pop
      31: return

  public void remove(org.apache.camel.Exchange, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field routeCount:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #59,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class java/util/concurrent/atomic/AtomicInteger
      13: astore_3
      14: aload_3
      15: ifnull        23
      18: aload_3
      19: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      22: pop
      23: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #23                 // Field totalCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int size(org.apache.camel.Endpoint);
    Code:
       0: iconst_0
       1: ireturn

  public void removeRoute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field routeCount:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public int size(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field routeCount:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #59,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class java/util/concurrent/atomic/AtomicInteger
      13: astore_2
      14: aload_2
      15: ifnull        25
      18: aload_2
      19: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      22: goto          26
      25: iconst_0
      26: ireturn

  protected void doStart() throws java.lang.Exception;
    Code:
       0: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method size:()I
       4: istore_1
       5: iload_1
       6: ifle          44
       9: getstatic     #79                 // Field LOG:Lorg/slf4j/Logger;
      12: new           #81                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #84                 // String Shutting down while there are still
      21: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #91                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #93                 // String  in flight exchanges.
      30: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #102,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      41: goto          54
      44: getstatic     #79                 // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #104                // String Shutting down with no inflight exchanges.
      49: invokeinterface #107,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      54: aload_0
      55: getfield      #28                 // Field routeCount:Ljava/util/concurrent/ConcurrentMap;
      58: invokeinterface #110,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      63: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/impl/DefaultInflightRepository
       2: invokestatic  #119                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #79                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
