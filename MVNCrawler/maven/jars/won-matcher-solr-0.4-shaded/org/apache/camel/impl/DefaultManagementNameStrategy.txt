Compiled from "DefaultManagementNameStrategy.java"
public class org.apache.camel.impl.DefaultManagementNameStrategy implements org.apache.camel.spi.ManagementNameStrategy {
  private static final java.util.regex.Pattern INVALID_PATTERN;

  private static final java.util.concurrent.atomic.AtomicLong NAME_COUNTER;

  private final org.apache.camel.CamelContext camelContext;

  private final java.lang.String defaultPattern;

  private final java.lang.String nextPattern;

  private java.lang.String name;

  private java.lang.String namePattern;

  public org.apache.camel.impl.DefaultManagementNameStrategy(org.apache.camel.CamelContext);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #22                 // String #name#
       4: ldc           #24                 // String #name#-#counter#
       6: invokespecial #27                 // Method "<init>":(Lorg/apache/camel/CamelContext;Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public org.apache.camel.impl.DefaultManagementNameStrategy(org.apache.camel.CamelContext, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #34                 // Field camelContext:Lorg/apache/camel/CamelContext;
       9: aload_0
      10: aload_2
      11: putfield      #36                 // Field defaultPattern:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #38                 // Field nextPattern:Ljava/lang/String;
      19: return

  public java.lang.String getNamePattern();
    Code:
       0: aload_0
       1: getfield      #42                 // Field namePattern:Ljava/lang/String;
       4: areturn

  public void setNamePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field namePattern:Ljava/lang/String;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #47                 // Field name:Ljava/lang/String;
       4: ifnonnull     40
       7: aload_0
       8: invokevirtual #49                 // Method getNamePattern:()Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: ifnonnull     21
      16: aload_0
      17: getfield      #36                 // Field defaultPattern:Ljava/lang/String;
      20: astore_1
      21: aload_0
      22: aload_0
      23: aload_1
      24: aload_0
      25: getfield      #34                 // Field camelContext:Lorg/apache/camel/CamelContext;
      28: invokeinterface #55,  1           // InterfaceMethod org/apache/camel/CamelContext.getName:()Ljava/lang/String;
      33: iconst_1
      34: invokevirtual #59                 // Method resolveManagementName:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
      37: putfield      #47                 // Field name:Ljava/lang/String;
      40: aload_0
      41: getfield      #47                 // Field name:Ljava/lang/String;
      44: areturn

  public java.lang.String getNextName();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method isFixedName:()Z
       4: ifeq          12
       7: aload_0
       8: invokevirtual #66                 // Method getName:()Ljava/lang/String;
      11: areturn
      12: aload_0
      13: invokevirtual #49                 // Method getNamePattern:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: ifnonnull     26
      21: aload_0
      22: getfield      #38                 // Field nextPattern:Ljava/lang/String;
      25: astore_1
      26: aload_0
      27: aload_1
      28: aload_0
      29: getfield      #34                 // Field camelContext:Lorg/apache/camel/CamelContext;
      32: invokeinterface #55,  1           // InterfaceMethod org/apache/camel/CamelContext.getName:()Ljava/lang/String;
      37: iconst_1
      38: invokevirtual #59                 // Method resolveManagementName:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
      41: areturn

  public boolean isFixedName();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getNamePattern:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: ldc           #68                 // String #counter#
      14: invokevirtual #72                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.String resolveManagementName(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_1
       1: ldc           #73                 // String pattern
       3: invokestatic  #79                 // Method org/apache/camel/util/ObjectHelper.notEmpty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: pop
       7: aload_2
       8: ldc           #80                 // String name
      10: invokestatic  #79                 // Method org/apache/camel/util/ObjectHelper.notEmpty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: pop
      14: aload_2
      15: invokestatic  #86                 // Method java/util/regex/Matcher.quoteReplacement:(Ljava/lang/String;)Ljava/lang/String;
      18: astore_2
      19: aload_1
      20: astore        4
      22: aload_1
      23: ldc           #68                 // String #counter#
      25: invokevirtual #72                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      28: ifeq          60
      31: aload_1
      32: ldc           #68                 // String #counter#
      34: new           #88                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #91                 // String
      43: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokestatic  #99                 // Method nextNameCounter:()J
      49: invokevirtual #102                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      52: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #108                // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      58: astore        4
      60: aload         4
      62: ldc           #110                // String #camelId#
      64: aload_2
      65: invokevirtual #108                // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      68: astore        4
      70: aload         4
      72: ldc           #22                 // String #name#
      74: aload_2
      75: invokevirtual #108                // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      78: astore        4
      80: aload_0
      81: aload_1
      82: aload         4
      84: invokevirtual #113                // Method customResolveManagementName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      87: astore        4
      89: iload_3
      90: ifeq          134
      93: getstatic     #115                // Field INVALID_PATTERN:Ljava/util/regex/Pattern;
      96: aload         4
      98: invokevirtual #121                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     101: invokevirtual #124                // Method java/util/regex/Matcher.matches:()Z
     104: ifeq          134
     107: new           #126                // class java/lang/IllegalArgumentException
     110: dup
     111: new           #88                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #128                // String Pattern is invalid:
     120: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_1
     124: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #130                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: aload         4
     136: areturn

  protected java.lang.String customResolveManagementName(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: areturn

  private static long nextNameCounter();
    Code:
       0: getstatic     #135                // Field NAME_COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
       3: invokevirtual #140                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       6: lreturn

  public static void setCounter(int);
    Code:
       0: getstatic     #135                // Field NAME_COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
       3: iload_0
       4: i2l
       5: invokevirtual #146                // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  static {};
    Code:
       0: ldc           #151                // String .*#\\w+#.*
       2: invokestatic  #155                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #115                // Field INVALID_PATTERN:Ljava/util/regex/Pattern;
       8: new           #137                // class java/util/concurrent/atomic/AtomicLong
      11: dup
      12: invokespecial #156                // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      15: putstatic     #135                // Field NAME_COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
      18: return
}
