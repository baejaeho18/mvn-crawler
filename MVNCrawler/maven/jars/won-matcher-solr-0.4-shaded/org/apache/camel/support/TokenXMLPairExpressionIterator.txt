Compiled from "TokenXMLPairExpressionIterator.java"
public class org.apache.camel.support.TokenXMLPairExpressionIterator extends org.apache.camel.support.TokenPairExpressionIterator {
  private static final java.util.regex.Pattern NAMESPACE_PATTERN;

  private static final java.lang.String SCAN_TOKEN_REGEX;

  private static final java.lang.String SCAN_TOKEN_NS_PREFIX_REGEX;

  protected final java.lang.String inheritNamespaceToken;

  public org.apache.camel.support.TokenXMLPairExpressionIterator(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #24                 // Method org/apache/camel/support/TokenPairExpressionIterator."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
       7: aload_0
       8: aload_3
       9: putfield      #26                 // Field inheritNamespaceToken:Ljava/lang/String;
      12: aload_1
      13: ldc           #28                 // String <
      15: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      18: ifeq          30
      21: aload_1
      22: ldc           #36                 // String >
      24: invokevirtual #39                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      27: ifne          57
      30: new           #41                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #43                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #48                 // String Start token must be a valid XML token, was:
      43: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_2
      58: ldc           #28                 // String <
      60: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      63: ifeq          75
      66: aload_2
      67: ldc           #36                 // String >
      69: invokevirtual #39                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      72: ifne          102
      75: new           #41                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #43                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #61                 // String End token must be a valid XML token, was:
      88: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_3
     103: ifnull        151
     106: aload_3
     107: ldc           #28                 // String <
     109: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     112: ifeq          124
     115: aload_3
     116: ldc           #36                 // String >
     118: invokevirtual #39                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     121: ifne          151
     124: new           #41                 // class java/lang/IllegalArgumentException
     127: dup
     128: new           #43                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #63                 // String Namespace token must be a valid XML token, was:
     137: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_3
     141: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: return

  protected java.util.Iterator<?> createIterator(java.io.InputStream, java.lang.String);
    Code:
       0: new           #8                  // class org/apache/camel/support/TokenXMLPairExpressionIterator$XMLTokenPairIterator
       3: dup
       4: aload_0
       5: getfield      #71                 // Field startToken:Ljava/lang/String;
       8: aload_0
       9: getfield      #73                 // Field endToken:Ljava/lang/String;
      12: aload_0
      13: getfield      #26                 // Field inheritNamespaceToken:Ljava/lang/String;
      16: aload_1
      17: aload_2
      18: invokespecial #76                 // Method org/apache/camel/support/TokenXMLPairExpressionIterator$XMLTokenPairIterator."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)V
      21: astore_3
      22: aload_3
      23: invokevirtual #79                 // Method org/apache/camel/support/TokenXMLPairExpressionIterator$XMLTokenPairIterator.init:()V
      26: aload_3
      27: areturn

  static java.util.regex.Pattern access$000();
    Code:
       0: getstatic     #88                 // Field NAMESPACE_PATTERN:Ljava/util/regex/Pattern;
       3: areturn

  static {};
    Code:
       0: ldc           #91                 // String xmlns(:\\w+|)=\\\"(.*?)\\\"
       2: invokestatic  #97                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #88                 // Field NAMESPACE_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
