Compiled from "BatchProcessor.java"
public class org.apache.camel.processor.BatchProcessor extends org.apache.camel.support.ServiceSupport implements org.apache.camel.AsyncProcessor, org.apache.camel.Navigate<org.apache.camel.Processor> {
  public static final long DEFAULT_BATCH_TIMEOUT;

  public static final int DEFAULT_BATCH_SIZE;

  private static final org.slf4j.Logger LOG;

  private long batchTimeout;

  private int batchSize;

  private int outBatchSize;

  private boolean groupExchanges;

  private boolean batchConsumer;

  private boolean ignoreInvalidExchanges;

  private org.apache.camel.Predicate completionPredicate;

  private org.apache.camel.Expression expression;

  private final org.apache.camel.CamelContext camelContext;

  private final org.apache.camel.Processor processor;

  private final java.util.Collection<org.apache.camel.Exchange> collection;

  private org.apache.camel.spi.ExceptionHandler exceptionHandler;

  private final org.apache.camel.processor.BatchProcessor$BatchSender sender;

  public org.apache.camel.processor.BatchProcessor(org.apache.camel.CamelContext, org.apache.camel.Processor, java.util.Collection<org.apache.camel.Exchange>, org.apache.camel.Expression);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: ldc2_w        #17                 // long 1000l
       8: putfield      #52                 // Field batchTimeout:J
      11: aload_0
      12: bipush        100
      14: putfield      #54                 // Field batchSize:I
      17: aload_1
      18: ldc           #55                 // String camelContext
      20: invokestatic  #61                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: pop
      24: aload_2
      25: ldc           #62                 // String processor
      27: invokestatic  #61                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      30: pop
      31: aload_3
      32: ldc           #63                 // String collection
      34: invokestatic  #61                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: pop
      38: aload         4
      40: ldc           #64                 // String expression
      42: invokestatic  #61                 // Method org/apache/camel/util/ObjectHelper.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: pop
      46: aload_0
      47: aload_1
      48: putfield      #66                 // Field camelContext:Lorg/apache/camel/CamelContext;
      51: aload_0
      52: aload_2
      53: putfield      #68                 // Field processor:Lorg/apache/camel/Processor;
      56: aload_0
      57: aload_3
      58: putfield      #70                 // Field collection:Ljava/util/Collection;
      61: aload_0
      62: aload         4
      64: putfield      #72                 // Field expression:Lorg/apache/camel/Expression;
      67: aload_0
      68: new           #13                 // class org/apache/camel/processor/BatchProcessor$BatchSender
      71: dup
      72: aload_0
      73: invokespecial #75                 // Method org/apache/camel/processor/BatchProcessor$BatchSender."<init>":(Lorg/apache/camel/processor/BatchProcessor;)V
      76: putfield      #77                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
      79: aload_0
      80: new           #79                 // class org/apache/camel/impl/LoggingExceptionHandler
      83: dup
      84: aload_1
      85: aload_0
      86: invokevirtual #85                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      89: invokespecial #88                 // Method org/apache/camel/impl/LoggingExceptionHandler."<init>":(Lorg/apache/camel/CamelContext;Ljava/lang/Class;)V
      92: putfield      #90                 // Field exceptionHandler:Lorg/apache/camel/spi/ExceptionHandler;
      95: return

  public java.lang.String toString();
    Code:
       0: new           #96                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #99                 // String BatchProcessor[to:
       9: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #68                 // Field processor:Lorg/apache/camel/Processor;
      16: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #108                // String ]
      21: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.apache.camel.spi.ExceptionHandler getExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #90                 // Field exceptionHandler:Lorg/apache/camel/spi/ExceptionHandler;
       4: areturn

  public void setExceptionHandler(org.apache.camel.spi.ExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field exceptionHandler:Lorg/apache/camel/spi/ExceptionHandler;
       5: return

  public int getBatchSize();
    Code:
       0: aload_0
       1: getfield      #54                 // Field batchSize:I
       4: ireturn

  public void setBatchSize(int);
    Code:
       0: iload_1
       1: ifgt          23
       4: getstatic     #120                // Field LOG:Lorg/slf4j/Logger;
       7: ldc           #122                // String Disabling batch size, will only be triggered by timeout
       9: invokeinterface #128,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      14: aload_0
      15: ldc           #129                // int 2147483647
      17: putfield      #54                 // Field batchSize:I
      20: goto          28
      23: aload_0
      24: iload_1
      25: putfield      #54                 // Field batchSize:I
      28: return

  public int getOutBatchSize();
    Code:
       0: aload_0
       1: getfield      #132                // Field outBatchSize:I
       4: ireturn

  public void setOutBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #132                // Field outBatchSize:I
       5: return

  public long getBatchTimeout();
    Code:
       0: aload_0
       1: getfield      #52                 // Field batchTimeout:J
       4: lreturn

  public void setBatchTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #52                 // Field batchTimeout:J
       5: return

  public boolean isGroupExchanges();
    Code:
       0: aload_0
       1: getfield      #141                // Field groupExchanges:Z
       4: ireturn

  public void setGroupExchanges(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #141                // Field groupExchanges:Z
       5: return

  public boolean isBatchConsumer();
    Code:
       0: aload_0
       1: getfield      #146                // Field batchConsumer:Z
       4: ireturn

  public void setBatchConsumer(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #146                // Field batchConsumer:Z
       5: return

  public boolean isIgnoreInvalidExchanges();
    Code:
       0: aload_0
       1: getfield      #150                // Field ignoreInvalidExchanges:Z
       4: ireturn

  public void setIgnoreInvalidExchanges(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #150                // Field ignoreInvalidExchanges:Z
       5: return

  public org.apache.camel.Predicate getCompletionPredicate();
    Code:
       0: aload_0
       1: getfield      #155                // Field completionPredicate:Lorg/apache/camel/Predicate;
       4: areturn

  public void setCompletionPredicate(org.apache.camel.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field completionPredicate:Lorg/apache/camel/Predicate;
       5: return

  public org.apache.camel.Processor getProcessor();
    Code:
       0: aload_0
       1: getfield      #68                 // Field processor:Lorg/apache/camel/Processor;
       4: areturn

  public java.util.List<org.apache.camel.Processor> next();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method hasNext:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: new           #166                // class java/util/ArrayList
      12: dup
      13: iconst_1
      14: invokespecial #168                // Method java/util/ArrayList."<init>":(I)V
      17: astore_1
      18: aload_1
      19: aload_0
      20: getfield      #68                 // Field processor:Lorg/apache/camel/Processor;
      23: invokeinterface #174,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_1
      30: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #68                 // Field processor:Lorg/apache/camel/Processor;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private boolean isInBatchCompleted(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #54                 // Field batchSize:I
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private boolean isOutBatchCompleted();
    Code:
       0: aload_0
       1: getfield      #132                // Field outBatchSize:I
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #70                 // Field collection:Ljava/util/Collection;
      13: invokeinterface #186,  1          // InterfaceMethod java/util/Collection.size:()I
      18: ifle          41
      21: aload_0
      22: getfield      #70                 // Field collection:Ljava/util/Collection;
      25: invokeinterface #186,  1          // InterfaceMethod java/util/Collection.size:()I
      30: aload_0
      31: getfield      #132                // Field outBatchSize:I
      34: if_icmplt     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  protected void processExchange(org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #68                 // Field processor:Lorg/apache/camel/Processor;
       4: aload_1
       5: invokeinterface #195,  2          // InterfaceMethod org/apache/camel/Processor.process:(Lorg/apache/camel/Exchange;)V
      10: aload_1
      11: invokeinterface #201,  1          // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      16: ifnull        53
      19: aload_0
      20: invokevirtual #203                // Method getExceptionHandler:()Lorg/apache/camel/spi/ExceptionHandler;
      23: new           #96                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #205                // String Error processing aggregated exchange:
      32: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: aload_1
      43: invokeinterface #201,  1          // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      48: invokeinterface #211,  3          // InterfaceMethod org/apache/camel/spi/ExceptionHandler.handleException:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: iconst_1
       1: anewarray     #81                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #68                 // Field processor:Lorg/apache/camel/Processor;
      10: aastore
      11: invokestatic  #220                // Method org/apache/camel/util/ServiceHelper.startServices:([Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #77                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
      18: invokevirtual #223                // Method org/apache/camel/processor/BatchProcessor$BatchSender.start:()V
      21: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #77                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
       4: invokevirtual #227                // Method org/apache/camel/processor/BatchProcessor$BatchSender.cancel:()V
       7: iconst_1
       8: anewarray     #81                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #68                 // Field processor:Lorg/apache/camel/Processor;
      17: aastore
      18: invokestatic  #230                // Method org/apache/camel/util/ServiceHelper.stopServices:([Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #70                 // Field collection:Ljava/util/Collection;
      25: invokeinterface #233,  1          // InterfaceMethod java/util/Collection.clear:()V
      30: return

  public void process(org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // Method org/apache/camel/util/AsyncProcessorHelper.process:(Lorg/apache/camel/AsyncProcessor;Lorg/apache/camel/Exchange;)V
       5: return

  public boolean process(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: invokevirtual #243                // Method isBatchConsumer:()Z
       4: ifeq          55
       7: aload_1
       8: ldc           #245                // String CamelBatchSize
      10: ldc           #247                // class java/lang/Integer
      12: invokeinterface #251,  3          // InterfaceMethod org/apache/camel/Exchange.getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      17: checkcast     #247                // class java/lang/Integer
      20: invokevirtual #254                // Method java/lang/Integer.intValue:()I
      23: istore_3
      24: aload_0
      25: getfield      #54                 // Field batchSize:I
      28: iload_3
      29: if_icmpeq     55
      32: aload_0
      33: iload_3
      34: putfield      #54                 // Field batchSize:I
      37: getstatic     #120                // Field LOG:Lorg/slf4j/Logger;
      40: ldc_w         #256                // String Using batch consumer completion, so setting batch size to: {}
      43: aload_0
      44: getfield      #54                 // Field batchSize:I
      47: invokestatic  #260                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokeinterface #264,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      55: aload_0
      56: aload_1
      57: invokespecial #268                // Method isValid:(Lorg/apache/camel/Exchange;)Z
      60: ifne          97
      63: aload_0
      64: invokevirtual #270                // Method isIgnoreInvalidExchanges:()Z
      67: ifeq          85
      70: getstatic     #120                // Field LOG:Lorg/slf4j/Logger;
      73: ldc_w         #272                // String Invalid Exchange. This Exchange will be ignored: {}
      76: aload_1
      77: invokeinterface #274,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      82: goto          105
      85: new           #276                // class org/apache/camel/CamelExchangeException
      88: dup
      89: ldc_w         #278                // String Exchange is not valid to be used by the BatchProcessor
      92: aload_1
      93: invokespecial #281                // Method org/apache/camel/CamelExchangeException."<init>":(Ljava/lang/String;Lorg/apache/camel/Exchange;)V
      96: athrow
      97: aload_0
      98: getfield      #77                 // Field sender:Lorg/apache/camel/processor/BatchProcessor$BatchSender;
     101: aload_1
     102: invokevirtual #284                // Method org/apache/camel/processor/BatchProcessor$BatchSender.enqueueExchange:(Lorg/apache/camel/Exchange;)V
     105: goto          116
     108: astore_3
     109: aload_1
     110: aload_3
     111: invokeinterface #288,  2          // InterfaceMethod org/apache/camel/Exchange.setException:(Ljava/lang/Throwable;)V
     116: aload_2
     117: iconst_1
     118: invokeinterface #293,  2          // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
     123: iconst_1
     124: ireturn
    Exception table:
       from    to  target type
           0   105   108   Class java/lang/Throwable

  private boolean isValid(org.apache.camel.Exchange);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #72                 // Field expression:Lorg/apache/camel/Expression;
       6: aload_1
       7: ldc           #81                 // class java/lang/Object
       9: invokeinterface #303,  3          // InterfaceMethod org/apache/camel/Expression.evaluate:(Lorg/apache/camel/Exchange;Ljava/lang/Class;)Ljava/lang/Object;
      14: astore_2
      15: goto          19
      18: astore_3
      19: aload_2
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
    Exception table:
       from    to  target type
           2    15    18   Class java/lang/Exception

  static org.apache.camel.CamelContext access$000(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #66                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: areturn

  static long access$100(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #52                 // Field batchTimeout:J
       4: lreturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #120                // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.Collection access$300(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #70                 // Field collection:Ljava/util/Collection;
       4: areturn

  static int access$400(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #54                 // Field batchSize:I
       4: ireturn

  static boolean access$500(org.apache.camel.processor.BatchProcessor, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #321                // Method isInBatchCompleted:(I)Z
       5: ireturn

  static boolean access$600(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: invokespecial #326                // Method isOutBatchCompleted:()Z
       4: ireturn

  static org.apache.camel.Predicate access$700(org.apache.camel.processor.BatchProcessor);
    Code:
       0: aload_0
       1: getfield      #155                // Field completionPredicate:Lorg/apache/camel/Predicate;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/processor/BatchProcessor
       2: invokestatic  #335                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #120                // Field LOG:Lorg/slf4j/Logger;
       8: return
}
