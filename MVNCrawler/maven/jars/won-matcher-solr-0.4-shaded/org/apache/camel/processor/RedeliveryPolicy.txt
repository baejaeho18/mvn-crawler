Compiled from "RedeliveryPolicy.java"
public class org.apache.camel.processor.RedeliveryPolicy implements java.lang.Cloneable,java.io.Serializable {
  protected static java.util.Random randomNumberGenerator;

  private static final long serialVersionUID;

  private static final org.slf4j.Logger LOG;

  protected long redeliveryDelay;

  protected int maximumRedeliveries;

  protected long maximumRedeliveryDelay;

  protected double backOffMultiplier;

  protected boolean useExponentialBackOff;

  protected double collisionAvoidanceFactor;

  protected boolean useCollisionAvoidance;

  protected org.apache.camel.LoggingLevel retriesExhaustedLogLevel;

  protected org.apache.camel.LoggingLevel retryAttemptedLogLevel;

  protected boolean logStackTrace;

  protected boolean logRetryStackTrace;

  protected boolean logHandled;

  protected boolean logContinued;

  protected boolean logExhausted;

  protected boolean logExhaustedMessageHistory;

  protected boolean logRetryAttempted;

  protected java.lang.String delayPattern;

  protected boolean asyncDelayedRedelivery;

  protected boolean allowRedeliveryWhileStopping;

  public org.apache.camel.processor.RedeliveryPolicy();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #46                 // long 1000l
       8: putfield      #49                 // Field redeliveryDelay:J
      11: aload_0
      12: ldc2_w        #50                 // long 60000l
      15: putfield      #53                 // Field maximumRedeliveryDelay:J
      18: aload_0
      19: ldc2_w        #54                 // double 2.0d
      22: putfield      #57                 // Field backOffMultiplier:D
      25: aload_0
      26: ldc2_w        #58                 // double 0.15d
      29: putfield      #61                 // Field collisionAvoidanceFactor:D
      32: aload_0
      33: getstatic     #66                 // Field org/apache/camel/LoggingLevel.ERROR:Lorg/apache/camel/LoggingLevel;
      36: putfield      #68                 // Field retriesExhaustedLogLevel:Lorg/apache/camel/LoggingLevel;
      39: aload_0
      40: getstatic     #71                 // Field org/apache/camel/LoggingLevel.DEBUG:Lorg/apache/camel/LoggingLevel;
      43: putfield      #73                 // Field retryAttemptedLogLevel:Lorg/apache/camel/LoggingLevel;
      46: aload_0
      47: iconst_1
      48: putfield      #75                 // Field logStackTrace:Z
      51: aload_0
      52: iconst_1
      53: putfield      #77                 // Field logExhausted:Z
      56: aload_0
      57: iconst_1
      58: putfield      #79                 // Field logExhaustedMessageHistory:Z
      61: aload_0
      62: iconst_1
      63: putfield      #81                 // Field logRetryAttempted:Z
      66: aload_0
      67: iconst_1
      68: putfield      #83                 // Field allowRedeliveryWhileStopping:Z
      71: return

  public java.lang.String toString();
    Code:
       0: new           #89                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #92                 // String RedeliveryPolicy[maximumRedeliveries=
       9: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #98                 // Field maximumRedeliveries:I
      16: invokevirtual #101                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #103                // String , redeliveryDelay=
      21: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #49                 // Field redeliveryDelay:J
      28: invokevirtual #106                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #108                // String , maximumRedeliveryDelay=
      33: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #53                 // Field maximumRedeliveryDelay:J
      40: invokevirtual #106                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #110                // String , asyncDelayedRedelivery=
      45: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #112                // Field asyncDelayedRedelivery:Z
      52: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      55: ldc           #117                // String , allowRedeliveryWhileStopping=
      57: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #83                 // Field allowRedeliveryWhileStopping:Z
      64: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      67: ldc           #119                // String , retriesExhaustedLogLevel=
      69: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #68                 // Field retriesExhaustedLogLevel:Lorg/apache/camel/LoggingLevel;
      76: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #124                // String , retryAttemptedLogLevel=
      81: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #73                 // Field retryAttemptedLogLevel:Lorg/apache/camel/LoggingLevel;
      88: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #126                // String , logRetryAttempted=
      93: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #81                 // Field logRetryAttempted:Z
     100: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: ldc           #128                // String , logStackTrace=
     105: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: getfield      #75                 // Field logStackTrace:Z
     112: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     115: ldc           #130                // String , logRetryStackTrace=
     117: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: getfield      #132                // Field logRetryStackTrace:Z
     124: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     127: ldc           #134                // String , logHandled=
     129: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: getfield      #136                // Field logHandled:Z
     136: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     139: ldc           #138                // String , logContinued=
     141: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: getfield      #140                // Field logContinued:Z
     148: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     151: ldc           #142                // String , logExhausted=
     153: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #77                 // Field logExhausted:Z
     160: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     163: ldc           #144                // String , logExhaustedMessageHistory=
     165: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: getfield      #79                 // Field logExhaustedMessageHistory:Z
     172: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     175: ldc           #146                // String , useExponentialBackOff=
     177: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: getfield      #148                // Field useExponentialBackOff:Z
     184: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     187: ldc           #150                // String , backOffMultiplier=
     189: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload_0
     193: getfield      #57                 // Field backOffMultiplier:D
     196: invokevirtual #153                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     199: ldc           #155                // String , useCollisionAvoidance=
     201: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: aload_0
     205: getfield      #157                // Field useCollisionAvoidance:Z
     208: invokevirtual #115                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     211: ldc           #159                // String , collisionAvoidanceFactor=
     213: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_0
     217: getfield      #61                 // Field collisionAvoidanceFactor:D
     220: invokevirtual #153                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     223: ldc           #161                // String , delayPattern=
     225: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: aload_0
     229: getfield      #163                // Field delayPattern:Ljava/lang/String;
     232: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     235: ldc           #165                // String ]
     237: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: invokevirtual #167                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     243: areturn

  public org.apache.camel.processor.RedeliveryPolicy copy();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #2                  // class org/apache/camel/processor/RedeliveryPolicy
       7: areturn
       8: astore_1
       9: new           #177                // class java/lang/RuntimeException
      12: dup
      13: new           #89                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #179                // String Could not clone:
      22: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #167                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: aload_1
      33: invokespecial #182                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public boolean shouldRedeliver(org.apache.camel.Exchange, int, org.apache.camel.Predicate);
    Code:
       0: aload_3
       1: ifnull        12
       4: aload_3
       5: aload_1
       6: invokeinterface #192,  2          // InterfaceMethod org/apache/camel/Predicate.matches:(Lorg/apache/camel/Exchange;)Z
      11: ireturn
      12: aload_0
      13: invokevirtual #196                // Method getMaximumRedeliveries:()I
      16: ifge          21
      19: iconst_1
      20: ireturn
      21: iload_2
      22: aload_0
      23: invokevirtual #196                // Method getMaximumRedeliveries:()I
      26: if_icmpgt     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public long sleep(long, int) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #208                // Method calculateRedeliveryDelay:(JI)J
       6: lstore_1
       7: lload_1
       8: lconst_0
       9: lcmp
      10: ifle          18
      13: aload_0
      14: lload_1
      15: invokevirtual #211                // Method sleep:(J)V
      18: lload_1
      19: lreturn

  public void sleep(long) throws java.lang.InterruptedException;
    Code:
       0: getstatic     #213                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #215                // String Sleeping for: {} millis until attempting redelivery
       5: lload_1
       6: invokestatic  #221                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokeinterface #227,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      14: lload_1
      15: invokestatic  #230                // Method java/lang/Thread.sleep:(J)V
      18: return

  public long calculateRedeliveryDelay(long, int);
    Code:
       0: aload_0
       1: getfield      #163                // Field delayPattern:Ljava/lang/String;
       4: invokestatic  #236                // Method org/apache/camel/util/ObjectHelper.isNotEmpty:(Ljava/lang/Object;)Z
       7: ifeq          19
      10: aload_0
      11: getfield      #163                // Field delayPattern:Ljava/lang/String;
      14: iload_3
      15: invokestatic  #240                // Method calculateRedeliverDelayUsingPattern:(Ljava/lang/String;I)J
      18: lreturn
      19: lload_1
      20: lconst_0
      21: lcmp
      22: ifne          34
      25: aload_0
      26: getfield      #49                 // Field redeliveryDelay:J
      29: lstore        4
      31: goto          68
      34: aload_0
      35: getfield      #148                // Field useExponentialBackOff:Z
      38: ifeq          65
      41: aload_0
      42: getfield      #57                 // Field backOffMultiplier:D
      45: dconst_1
      46: dcmpl
      47: ifle          65
      50: aload_0
      51: getfield      #57                 // Field backOffMultiplier:D
      54: lload_1
      55: l2d
      56: dmul
      57: invokestatic  #246                // Method java/lang/Math.round:(D)J
      60: lstore        4
      62: goto          68
      65: lload_1
      66: lstore        4
      68: aload_0
      69: getfield      #157                // Field useCollisionAvoidance:Z
      72: ifeq          121
      75: invokestatic  #250                // Method getRandomNumberGenerator:()Ljava/util/Random;
      78: astore        6
      80: aload         6
      82: invokevirtual #256                // Method java/util/Random.nextBoolean:()Z
      85: ifeq          95
      88: aload_0
      89: getfield      #61                 // Field collisionAvoidanceFactor:D
      92: goto          100
      95: aload_0
      96: getfield      #61                 // Field collisionAvoidanceFactor:D
      99: dneg
     100: aload         6
     102: invokevirtual #260                // Method java/util/Random.nextDouble:()D
     105: dmul
     106: dstore        7
     108: lload         4
     110: l2d
     111: lload         4
     113: l2d
     114: dload         7
     116: dmul
     117: dadd
     118: d2l
     119: lstore        4
     121: aload_0
     122: getfield      #53                 // Field maximumRedeliveryDelay:J
     125: lconst_0
     126: lcmp
     127: ifle          146
     130: lload         4
     132: aload_0
     133: getfield      #53                 // Field maximumRedeliveryDelay:J
     136: lcmp
     137: ifle          146
     140: aload_0
     141: getfield      #53                 // Field maximumRedeliveryDelay:J
     144: lstore        4
     146: lload         4
     148: lreturn

  protected static long calculateRedeliverDelayUsingPattern(java.lang.String, int);
    Code:
       0: aload_0
       1: ldc_w         #266                // String ;
       4: invokevirtual #272                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       7: astore_2
       8: lconst_0
       9: lstore_3
      10: aload_2
      11: astore        5
      13: aload         5
      15: arraylength
      16: istore        6
      18: iconst_0
      19: istore        7
      21: iload         7
      23: iload         6
      25: if_icmpge     85
      28: aload         5
      30: iload         7
      32: aaload
      33: astore        8
      35: aload         8
      37: ldc_w         #276                // String :
      40: invokestatic  #280                // Method org/apache/camel/util/ObjectHelper.after:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      43: invokestatic  #283                // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      46: invokevirtual #287                // Method java/lang/Long.longValue:()J
      49: lstore        9
      51: aload         8
      53: ldc_w         #276                // String :
      56: invokestatic  #290                // Method org/apache/camel/util/ObjectHelper.before:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      59: invokestatic  #295                // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      62: invokevirtual #298                // Method java/lang/Integer.intValue:()I
      65: istore        11
      67: iload         11
      69: iload_1
      70: if_icmple     76
      73: goto          85
      76: lload         9
      78: lstore_3
      79: iinc          7, 1
      82: goto          21
      85: lload_3
      86: lreturn

  public org.apache.camel.processor.RedeliveryPolicy redeliverDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #311                // Method redeliveryDelay:(J)Lorg/apache/camel/processor/RedeliveryPolicy;
       5: areturn

  public org.apache.camel.processor.RedeliveryPolicy redeliveryDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #314                // Method setRedeliveryDelay:(J)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy maximumRedeliveries(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #319                // Method setMaximumRedeliveries:(I)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy useCollisionAvoidance();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #323                // Method setUseCollisionAvoidance:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy useExponentialBackOff();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #326                // Method setUseExponentialBackOff:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy backOffMultiplier(double);
    Code:
       0: aload_0
       1: invokevirtual #329                // Method useExponentialBackOff:()Lorg/apache/camel/processor/RedeliveryPolicy;
       4: pop
       5: aload_0
       6: dload_1
       7: invokevirtual #333                // Method setBackOffMultiplier:(D)V
      10: aload_0
      11: areturn

  public org.apache.camel.processor.RedeliveryPolicy collisionAvoidancePercent(double);
    Code:
       0: aload_0
       1: invokevirtual #337                // Method useCollisionAvoidance:()Lorg/apache/camel/processor/RedeliveryPolicy;
       4: pop
       5: aload_0
       6: dload_1
       7: invokevirtual #340                // Method setCollisionAvoidancePercent:(D)V
      10: aload_0
      11: areturn

  public org.apache.camel.processor.RedeliveryPolicy maximumRedeliveryDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #343                // Method setMaximumRedeliveryDelay:(J)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy retriesExhaustedLogLevel(org.apache.camel.LoggingLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #348                // Method setRetriesExhaustedLogLevel:(Lorg/apache/camel/LoggingLevel;)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy retryAttemptedLogLevel(org.apache.camel.LoggingLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #351                // Method setRetryAttemptedLogLevel:(Lorg/apache/camel/LoggingLevel;)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy logRetryAttempted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #355                // Method setLogRetryAttempted:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy logStackTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #358                // Method setLogStackTrace:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy logRetryStackTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #361                // Method setLogRetryStackTrace:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy logHandled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #364                // Method setLogHandled:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy logExhausted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #367                // Method setLogExhausted:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy logExhaustedMessageHistory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #370                // Method setLogExhaustedMessageHistory:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy delayPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #375                // Method setDelayPattern:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy disableRedelivery();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #319                // Method setMaximumRedeliveries:(I)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy asyncDelayedRedelivery();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #379                // Method setAsyncDelayedRedelivery:(Z)V
       5: aload_0
       6: areturn

  public org.apache.camel.processor.RedeliveryPolicy allowRedeliveryWhileStopping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #382                // Method setAllowRedeliveryWhileStopping:(Z)V
       5: aload_0
       6: areturn

  public long getRedeliverDelay();
    Code:
       0: aload_0
       1: invokevirtual #387                // Method getRedeliveryDelay:()J
       4: lreturn

  public void setRedeliverDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #314                // Method setRedeliveryDelay:(J)V
       5: return

  public long getRedeliveryDelay();
    Code:
       0: aload_0
       1: getfield      #49                 // Field redeliveryDelay:J
       4: lreturn

  public void setRedeliveryDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #49                 // Field redeliveryDelay:J
       5: aload_0
       6: getfield      #53                 // Field maximumRedeliveryDelay:J
       9: lconst_0
      10: lcmp
      11: ifle          28
      14: lload_1
      15: aload_0
      16: getfield      #53                 // Field maximumRedeliveryDelay:J
      19: lcmp
      20: ifle          28
      23: aload_0
      24: lload_1
      25: putfield      #53                 // Field maximumRedeliveryDelay:J
      28: return

  public double getBackOffMultiplier();
    Code:
       0: aload_0
       1: getfield      #57                 // Field backOffMultiplier:D
       4: dreturn

  public void setBackOffMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #57                 // Field backOffMultiplier:D
       5: return

  public long getCollisionAvoidancePercent();
    Code:
       0: aload_0
       1: getfield      #61                 // Field collisionAvoidanceFactor:D
       4: ldc2_w        #391                // double 100.0d
       7: dmul
       8: invokestatic  #246                // Method java/lang/Math.round:(D)J
      11: lreturn

  public void setCollisionAvoidancePercent(double);
    Code:
       0: aload_0
       1: dload_1
       2: ldc2_w        #393                // double 0.01d
       5: dmul
       6: putfield      #61                 // Field collisionAvoidanceFactor:D
       9: return

  public double getCollisionAvoidanceFactor();
    Code:
       0: aload_0
       1: getfield      #61                 // Field collisionAvoidanceFactor:D
       4: dreturn

  public void setCollisionAvoidanceFactor(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #61                 // Field collisionAvoidanceFactor:D
       5: return

  public int getMaximumRedeliveries();
    Code:
       0: aload_0
       1: getfield      #98                 // Field maximumRedeliveries:I
       4: ireturn

  public void setMaximumRedeliveries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #98                 // Field maximumRedeliveries:I
       5: return

  public long getMaximumRedeliveryDelay();
    Code:
       0: aload_0
       1: getfield      #53                 // Field maximumRedeliveryDelay:J
       4: lreturn

  public void setMaximumRedeliveryDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #53                 // Field maximumRedeliveryDelay:J
       5: return

  public boolean isUseCollisionAvoidance();
    Code:
       0: aload_0
       1: getfield      #157                // Field useCollisionAvoidance:Z
       4: ireturn

  public void setUseCollisionAvoidance(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #157                // Field useCollisionAvoidance:Z
       5: return

  public boolean isUseExponentialBackOff();
    Code:
       0: aload_0
       1: getfield      #148                // Field useExponentialBackOff:Z
       4: ireturn

  public void setUseExponentialBackOff(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #148                // Field useExponentialBackOff:Z
       5: return

  protected static synchronized java.util.Random getRandomNumberGenerator();
    Code:
       0: getstatic     #401                // Field randomNumberGenerator:Ljava/util/Random;
       3: ifnonnull     16
       6: new           #252                // class java/util/Random
       9: dup
      10: invokespecial #402                // Method java/util/Random."<init>":()V
      13: putstatic     #401                // Field randomNumberGenerator:Ljava/util/Random;
      16: getstatic     #401                // Field randomNumberGenerator:Ljava/util/Random;
      19: areturn

  public void setRetriesExhaustedLogLevel(org.apache.camel.LoggingLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field retriesExhaustedLogLevel:Lorg/apache/camel/LoggingLevel;
       5: return

  public org.apache.camel.LoggingLevel getRetriesExhaustedLogLevel();
    Code:
       0: aload_0
       1: getfield      #68                 // Field retriesExhaustedLogLevel:Lorg/apache/camel/LoggingLevel;
       4: areturn

  public void setRetryAttemptedLogLevel(org.apache.camel.LoggingLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field retryAttemptedLogLevel:Lorg/apache/camel/LoggingLevel;
       5: return

  public org.apache.camel.LoggingLevel getRetryAttemptedLogLevel();
    Code:
       0: aload_0
       1: getfield      #73                 // Field retryAttemptedLogLevel:Lorg/apache/camel/LoggingLevel;
       4: areturn

  public java.lang.String getDelayPattern();
    Code:
       0: aload_0
       1: getfield      #163                // Field delayPattern:Ljava/lang/String;
       4: areturn

  public void setDelayPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #163                // Field delayPattern:Ljava/lang/String;
       5: return

  public boolean isLogStackTrace();
    Code:
       0: aload_0
       1: getfield      #75                 // Field logStackTrace:Z
       4: ireturn

  public void setLogStackTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #75                 // Field logStackTrace:Z
       5: return

  public boolean isLogRetryStackTrace();
    Code:
       0: aload_0
       1: getfield      #132                // Field logRetryStackTrace:Z
       4: ireturn

  public void setLogRetryStackTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #132                // Field logRetryStackTrace:Z
       5: return

  public boolean isLogHandled();
    Code:
       0: aload_0
       1: getfield      #136                // Field logHandled:Z
       4: ireturn

  public void setLogHandled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #136                // Field logHandled:Z
       5: return

  public boolean isLogContinued();
    Code:
       0: aload_0
       1: getfield      #140                // Field logContinued:Z
       4: ireturn

  public void setLogContinued(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #140                // Field logContinued:Z
       5: return

  public boolean isLogRetryAttempted();
    Code:
       0: aload_0
       1: getfield      #81                 // Field logRetryAttempted:Z
       4: ireturn

  public void setLogRetryAttempted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field logRetryAttempted:Z
       5: return

  public boolean isLogExhausted();
    Code:
       0: aload_0
       1: getfield      #77                 // Field logExhausted:Z
       4: ireturn

  public void setLogExhausted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field logExhausted:Z
       5: return

  public boolean isLogExhaustedMessageHistory();
    Code:
       0: aload_0
       1: getfield      #79                 // Field logExhaustedMessageHistory:Z
       4: ireturn

  public void setLogExhaustedMessageHistory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #79                 // Field logExhaustedMessageHistory:Z
       5: return

  public boolean isAsyncDelayedRedelivery();
    Code:
       0: aload_0
       1: getfield      #112                // Field asyncDelayedRedelivery:Z
       4: ireturn

  public void setAsyncDelayedRedelivery(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #112                // Field asyncDelayedRedelivery:Z
       5: return

  public boolean isAllowRedeliveryWhileStopping();
    Code:
       0: aload_0
       1: getfield      #83                 // Field allowRedeliveryWhileStopping:Z
       4: ireturn

  public void setAllowRedeliveryWhileStopping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #83                 // Field allowRedeliveryWhileStopping:Z
       5: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/processor/RedeliveryPolicy
       2: invokestatic  #423                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #213                // Field LOG:Lorg/slf4j/Logger;
       8: return
}
