Compiled from "FailOverLoadBalancer.java"
final class org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback implements org.apache.camel.AsyncCallback {
  private final org.apache.camel.Exchange exchange;

  private org.apache.camel.Exchange copy;

  private final java.util.concurrent.atomic.AtomicInteger attempts;

  private final java.util.concurrent.atomic.AtomicInteger index;

  private final org.apache.camel.AsyncCallback callback;

  private final java.util.List<org.apache.camel.Processor> processors;

  final org.apache.camel.processor.loadbalancer.FailOverLoadBalancer this$0;

  private org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback(org.apache.camel.Exchange, org.apache.camel.Exchange, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger, org.apache.camel.AsyncCallback, java.util.List<org.apache.camel.Processor>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
       5: aload_0
       6: invokespecial #32                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
      14: aload_0
      15: aload_3
      16: putfield      #36                 // Field copy:Lorg/apache/camel/Exchange;
      19: aload_0
      20: aload         4
      22: putfield      #38                 // Field attempts:Ljava/util/concurrent/atomic/AtomicInteger;
      25: aload_0
      26: aload         5
      28: putfield      #40                 // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
      31: aload_0
      32: aload         6
      34: putfield      #42                 // Field callback:Lorg/apache/camel/AsyncCallback;
      37: aload_0
      38: aload         7
      40: putfield      #44                 // Field processors:Ljava/util/List;
      43: return

  public void done(boolean);
    Code:
       0: iload_1
       1: ifeq          5
       4: return
       5: aload_0
       6: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
       9: aload_0
      10: getfield      #36                 // Field copy:Lorg/apache/camel/Exchange;
      13: invokevirtual #52                 // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.shouldFailOver:(Lorg/apache/camel/Exchange;)Z
      16: ifeq          342
      19: aload_0
      20: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
      23: invokevirtual #56                 // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.isRunAllowed:()Z
      26: ifne          85
      29: aload_0
      30: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
      33: getfield      #60                 // Field org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.log:Lorg/slf4j/Logger;
      36: ldc           #62                 // String Run not allowed, will reject executing exchange: {}
      38: aload_0
      39: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
      42: invokeinterface #68,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      47: aload_0
      48: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
      51: invokeinterface #74,  1           // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      56: ifnonnull     75
      59: aload_0
      60: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
      63: new           #76                 // class java/util/concurrent/RejectedExecutionException
      66: dup
      67: invokespecial #77                 // Method java/util/concurrent/RejectedExecutionException."<init>":()V
      70: invokeinterface #81,  2           // InterfaceMethod org/apache/camel/Exchange.setException:(Ljava/lang/Throwable;)V
      75: aload_0
      76: getfield      #42                 // Field callback:Lorg/apache/camel/AsyncCallback;
      79: iconst_0
      80: invokeinterface #83,  2           // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
      85: aload_0
      86: getfield      #38                 // Field attempts:Ljava/util/concurrent/atomic/AtomicInteger;
      89: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      92: pop
      93: aload_0
      94: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
      97: invokestatic  #93                 // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.access$100:(Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;)I
     100: iconst_m1
     101: if_icmple     142
     104: aload_0
     105: getfield      #38                 // Field attempts:Ljava/util/concurrent/atomic/AtomicInteger;
     108: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     111: aload_0
     112: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     115: invokestatic  #93                 // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.access$100:(Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;)I
     118: if_icmple     142
     121: aload_0
     122: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     125: getfield      #60                 // Field org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.log:Lorg/slf4j/Logger;
     128: ldc           #98                 // String Breaking out of failover after {} failover attempts
     130: aload_0
     131: getfield      #38                 // Field attempts:Ljava/util/concurrent/atomic/AtomicInteger;
     134: invokeinterface #68,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     139: goto          342
     142: aload_0
     143: getfield      #40                 // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
     146: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     149: pop
     150: aload_0
     151: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     154: invokestatic  #102                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.access$200:(Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;)Ljava/util/concurrent/atomic/AtomicInteger;
     157: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     160: pop
     161: aload_0
     162: getfield      #40                 // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
     165: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     168: aload_0
     169: getfield      #44                 // Field processors:Ljava/util/List;
     172: invokeinterface #107,  1          // InterfaceMethod java/util/List.size:()I
     177: if_icmplt     243
     180: aload_0
     181: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     184: invokevirtual #110                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.isRoundRobin:()Z
     187: ifeq          226
     190: aload_0
     191: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     194: getfield      #60                 // Field org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.log:Lorg/slf4j/Logger;
     197: ldc           #112                // String Failover is round robin enabled and therefore starting from the first endpoint
     199: invokeinterface #115,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     204: aload_0
     205: getfield      #40                 // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
     208: iconst_0
     209: invokevirtual #119                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     212: aload_0
     213: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     216: invokestatic  #102                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.access$200:(Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;)Ljava/util/concurrent/atomic/AtomicInteger;
     219: iconst_0
     220: invokevirtual #119                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     223: goto          243
     226: aload_0
     227: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     230: getfield      #60                 // Field org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.log:Lorg/slf4j/Logger;
     233: ldc           #121                // String Breaking out of failover as we reached the end of endpoints to use for failover
     235: invokeinterface #115,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     240: goto          342
     243: aload_0
     244: aload_0
     245: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     248: aload_0
     249: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
     252: invokevirtual #125                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.prepareExchangeForFailover:(Lorg/apache/camel/Exchange;)Lorg/apache/camel/Exchange;
     255: putfield      #36                 // Field copy:Lorg/apache/camel/Exchange;
     258: aload_0
     259: getfield      #44                 // Field processors:Ljava/util/List;
     262: aload_0
     263: getfield      #40                 // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
     266: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     269: invokeinterface #128,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     274: checkcast     #130                // class org/apache/camel/Processor
     277: astore_2
     278: aload_0
     279: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     282: aload_2
     283: aload_0
     284: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
     287: aload_0
     288: getfield      #36                 // Field copy:Lorg/apache/camel/Exchange;
     291: aload_0
     292: getfield      #38                 // Field attempts:Ljava/util/concurrent/atomic/AtomicInteger;
     295: aload_0
     296: getfield      #40                 // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
     299: aload_0
     300: getfield      #42                 // Field callback:Lorg/apache/camel/AsyncCallback;
     303: aload_0
     304: getfield      #44                 // Field processors:Ljava/util/List;
     307: invokestatic  #134                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.access$300:(Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;Lorg/apache/camel/Processor;Lorg/apache/camel/Exchange;Lorg/apache/camel/Exchange;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/camel/AsyncCallback;Ljava/util/List;)Z
     310: istore_1
     311: iload_1
     312: ifne          339
     315: aload_0
     316: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     319: getfield      #60                 // Field org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.log:Lorg/slf4j/Logger;
     322: ldc           #136                // String Processing exchangeId: {} is continued being processed asynchronously
     324: aload_0
     325: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
     328: invokeinterface #140,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     333: invokeinterface #68,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     338: return
     339: goto          5
     342: aload_0
     343: getfield      #36                 // Field copy:Lorg/apache/camel/Exchange;
     346: ifnull        360
     349: aload_0
     350: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
     353: aload_0
     354: getfield      #36                 // Field copy:Lorg/apache/camel/Exchange;
     357: invokestatic  #146                // Method org/apache/camel/util/ExchangeHelper.copyResults:(Lorg/apache/camel/Exchange;Lorg/apache/camel/Exchange;)V
     360: aload_0
     361: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;
     364: getfield      #60                 // Field org/apache/camel/processor/loadbalancer/FailOverLoadBalancer.log:Lorg/slf4j/Logger;
     367: ldc           #148                // String Failover complete for exchangeId: {} >>> {}
     369: aload_0
     370: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
     373: invokeinterface #140,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     378: aload_0
     379: getfield      #34                 // Field exchange:Lorg/apache/camel/Exchange;
     382: invokeinterface #152,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     387: aload_0
     388: getfield      #42                 // Field callback:Lorg/apache/camel/AsyncCallback;
     391: iconst_0
     392: invokeinterface #83,  2           // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
     397: return

  org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$FailOverAsyncCallback(org.apache.camel.processor.loadbalancer.FailOverLoadBalancer, org.apache.camel.Exchange, org.apache.camel.Exchange, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger, org.apache.camel.AsyncCallback, java.util.List, org.apache.camel.processor.loadbalancer.FailOverLoadBalancer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #159                // Method "<init>":(Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;Lorg/apache/camel/Exchange;Lorg/apache/camel/Exchange;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/camel/AsyncCallback;Ljava/util/List;)V
      15: return
}
