Compiled from "FailOverLoadBalancer.java"
public class org.apache.camel.processor.loadbalancer.FailOverLoadBalancer extends org.apache.camel.processor.loadbalancer.LoadBalancerSupport implements org.apache.camel.Traceable,org.apache.camel.CamelContextAware {
  private final java.util.List<java.lang.Class<?>> exceptions;

  private org.apache.camel.CamelContext camelContext;

  private boolean roundRobin;

  private int maximumFailoverAttempts;

  private final java.util.concurrent.atomic.AtomicInteger counter;

  public org.apache.camel.processor.loadbalancer.FailOverLoadBalancer();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/apache/camel/processor/loadbalancer/LoadBalancerSupport."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #31                 // Field maximumFailoverAttempts:I
       9: aload_0
      10: new           #33                 // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_m1
      15: invokespecial #36                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: aconst_null
      23: putfield      #40                 // Field exceptions:Ljava/util/List;
      26: return

  public org.apache.camel.processor.loadbalancer.FailOverLoadBalancer(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/apache/camel/processor/loadbalancer/LoadBalancerSupport."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #31                 // Field maximumFailoverAttempts:I
       9: aload_0
      10: new           #33                 // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_m1
      15: invokespecial #36                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: aload_1
      23: putfield      #40                 // Field exceptions:Ljava/util/List;
      26: aload_1
      27: invokeinterface #49,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          91
      42: aload_2
      43: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #61                 // class java/lang/Class
      51: astore_3
      52: ldc           #63                 // class java/lang/Throwable
      54: aload_3
      55: invokestatic  #69                 // Method org/apache/camel/util/ObjectHelper.isAssignableFrom:(Ljava/lang/Class;Ljava/lang/Class;)Z
      58: ifne          88
      61: new           #71                 // class java/lang/IllegalArgumentException
      64: dup
      65: new           #73                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #76                 // String Class is not an instance of Throwable:
      74: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_3
      78: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #90                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: goto          33
      91: return

  public org.apache.camel.CamelContext getCamelContext();
    Code:
       0: aload_0
       1: getfield      #99                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: areturn

  public void setCamelContext(org.apache.camel.CamelContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #99                 // Field camelContext:Lorg/apache/camel/CamelContext;
       5: return

  public java.util.List<java.lang.Class<?>> getExceptions();
    Code:
       0: aload_0
       1: getfield      #40                 // Field exceptions:Ljava/util/List;
       4: areturn

  public boolean isRoundRobin();
    Code:
       0: aload_0
       1: getfield      #106                // Field roundRobin:Z
       4: ireturn

  public void setRoundRobin(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #106                // Field roundRobin:Z
       5: return

  public int getMaximumFailoverAttempts();
    Code:
       0: aload_0
       1: getfield      #31                 // Field maximumFailoverAttempts:I
       4: ireturn

  public void setMaximumFailoverAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field maximumFailoverAttempts:I
       5: return

  protected boolean shouldFailOver(org.apache.camel.Exchange);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_2
       8: aload_1
       9: invokeinterface #119,  1          // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
      14: ifnull        90
      17: aload_0
      18: getfield      #40                 // Field exceptions:Ljava/util/List;
      21: ifnull        36
      24: aload_0
      25: getfield      #40                 // Field exceptions:Ljava/util/List;
      28: invokeinterface #122,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifeq          41
      36: iconst_1
      37: istore_2
      38: goto          90
      41: aload_0
      42: getfield      #40                 // Field exceptions:Ljava/util/List;
      45: invokeinterface #49,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore_3
      51: aload_3
      52: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          90
      60: aload_3
      61: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #61                 // class java/lang/Class
      69: astore        4
      71: aload_1
      72: aload         4
      74: invokeinterface #125,  2          // InterfaceMethod org/apache/camel/Exchange.getException:(Ljava/lang/Class;)Ljava/lang/Object;
      79: ifnull        87
      82: iconst_1
      83: istore_2
      84: goto          90
      87: goto          51
      90: aload_0
      91: getfield      #129                // Field log:Lorg/slf4j/Logger;
      94: ldc           #131                // String Should failover: {} for exchangeId: {}
      96: iload_2
      97: invokestatic  #137                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     100: aload_1
     101: invokeinterface #140,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     106: invokeinterface #146,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     111: iload_2
     112: ireturn

  public boolean isRunAllowed();
    Code:
       0: aload_0
       1: getfield      #99                 // Field camelContext:Lorg/apache/camel/CamelContext;
       4: invokeinterface #157,  1          // InterfaceMethod org/apache/camel/CamelContext.getShutdownStrategy:()Lorg/apache/camel/spi/ShutdownStrategy;
       9: aload_0
      10: invokeinterface #163,  2          // InterfaceMethod org/apache/camel/spi/ShutdownStrategy.forceShutdown:(Lorg/apache/camel/Service;)Z
      15: istore_1
      16: iload_1
      17: ifeq          31
      20: aload_0
      21: getfield      #129                // Field log:Lorg/slf4j/Logger;
      24: ldc           #165                // String Run not allowed as ShutdownStrategy is forcing shutting down
      26: invokeinterface #167,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      31: iload_1
      32: ifne          46
      35: aload_0
      36: invokespecial #169                // Method org/apache/camel/processor/loadbalancer/LoadBalancerSupport.isRunAllowed:()Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public boolean process(org.apache.camel.Exchange, org.apache.camel.AsyncCallback);
    Code:
       0: aload_0
       1: invokevirtual #174                // Method getProcessors:()Ljava/util/List;
       4: astore_3
       5: new           #33                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #175                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: astore        4
      14: new           #33                 // class java/util/concurrent/atomic/AtomicInteger
      17: dup
      18: invokespecial #175                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      21: astore        5
      23: iconst_1
      24: istore        6
      26: aconst_null
      27: astore        7
      29: aload_0
      30: invokevirtual #177                // Method isRoundRobin:()Z
      33: ifeq          72
      36: aload_0
      37: getfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      40: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      43: aload_3
      44: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      49: if_icmplt     60
      52: aload_0
      53: getfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      56: iconst_0
      57: invokevirtual #186                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      60: aload         4
      62: aload_0
      63: getfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      66: invokevirtual #191                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      69: invokevirtual #186                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      72: aload_0
      73: getfield      #129                // Field log:Lorg/slf4j/Logger;
      76: ldc           #193                // String Failover starting with endpoint index {}
      78: aload         4
      80: invokeinterface #196,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      85: iload         6
      87: ifne          99
      90: aload_0
      91: aload         7
      93: invokevirtual #198                // Method shouldFailOver:(Lorg/apache/camel/Exchange;)Z
      96: ifeq          363
      99: aload_0
     100: invokevirtual #199                // Method isRunAllowed:()Z
     103: ifne          149
     106: aload_0
     107: getfield      #129                // Field log:Lorg/slf4j/Logger;
     110: ldc           #201                // String Run not allowed, will reject executing exchange: {}
     112: aload_1
     113: invokeinterface #196,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     118: aload_1
     119: invokeinterface #119,  1          // InterfaceMethod org/apache/camel/Exchange.getException:()Ljava/lang/Exception;
     124: ifnonnull     140
     127: aload_1
     128: new           #203                // class java/util/concurrent/RejectedExecutionException
     131: dup
     132: invokespecial #204                // Method java/util/concurrent/RejectedExecutionException."<init>":()V
     135: invokeinterface #208,  2          // InterfaceMethod org/apache/camel/Exchange.setException:(Ljava/lang/Throwable;)V
     140: aload_2
     141: iconst_1
     142: invokeinterface #211,  2          // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
     147: iconst_1
     148: ireturn
     149: iload         6
     151: ifne          213
     154: aload         5
     156: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     159: pop
     160: aload_0
     161: getfield      #31                 // Field maximumFailoverAttempts:I
     164: iconst_m1
     165: if_icmple     196
     168: aload         5
     170: invokevirtual #191                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     173: aload_0
     174: getfield      #31                 // Field maximumFailoverAttempts:I
     177: if_icmple     196
     180: aload_0
     181: getfield      #129                // Field log:Lorg/slf4j/Logger;
     184: ldc           #213                // String Breaking out of failover after {} failover attempts
     186: aload         5
     188: invokeinterface #216,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     193: goto          363
     196: aload         4
     198: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     201: pop
     202: aload_0
     203: getfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
     206: invokevirtual #180                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     209: pop
     210: goto          216
     213: iconst_0
     214: istore        6
     216: aload         4
     218: invokevirtual #191                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     221: aload_3
     222: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
     227: if_icmplt     279
     230: aload_0
     231: invokevirtual #177                // Method isRoundRobin:()Z
     234: ifeq          265
     237: aload_0
     238: getfield      #129                // Field log:Lorg/slf4j/Logger;
     241: ldc           #218                // String Failover is round robin enabled and therefore starting from the first endpoint
     243: invokeinterface #167,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     248: aload         4
     250: iconst_0
     251: invokevirtual #186                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     254: aload_0
     255: getfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
     258: iconst_0
     259: invokevirtual #186                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     262: goto          279
     265: aload_0
     266: getfield      #129                // Field log:Lorg/slf4j/Logger;
     269: ldc           #220                // String Breaking out of failover as we reached the end of endpoints to use for failover
     271: invokeinterface #167,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     276: goto          363
     279: aload_0
     280: aload_1
     281: invokevirtual #224                // Method prepareExchangeForFailover:(Lorg/apache/camel/Exchange;)Lorg/apache/camel/Exchange;
     284: astore        7
     286: aload_3
     287: aload         4
     289: invokevirtual #191                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     292: invokeinterface #227,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     297: checkcast     #229                // class org/apache/camel/Processor
     300: astore        8
     302: aload_0
     303: aload         8
     305: aload_1
     306: aload         7
     308: aload         5
     310: aload         4
     312: aload_2
     313: aload_3
     314: invokespecial #233                // Method processExchange:(Lorg/apache/camel/Processor;Lorg/apache/camel/Exchange;Lorg/apache/camel/Exchange;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/camel/AsyncCallback;Ljava/util/List;)Z
     317: istore        9
     319: iload         9
     321: ifne          343
     324: aload_0
     325: getfield      #129                // Field log:Lorg/slf4j/Logger;
     328: ldc           #235                // String Processing exchangeId: {} is continued being processed asynchronously
     330: aload_1
     331: invokeinterface #140,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     336: invokeinterface #196,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     341: iconst_0
     342: ireturn
     343: aload_0
     344: getfield      #129                // Field log:Lorg/slf4j/Logger;
     347: ldc           #237                // String Processing exchangeId: {} is continued being processed synchronously
     349: aload_1
     350: invokeinterface #140,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     355: invokeinterface #196,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     360: goto          85
     363: aload         7
     365: ifnull        374
     368: aload_1
     369: aload         7
     371: invokestatic  #243                // Method org/apache/camel/util/ExchangeHelper.copyResults:(Lorg/apache/camel/Exchange;Lorg/apache/camel/Exchange;)V
     374: aload_0
     375: getfield      #129                // Field log:Lorg/slf4j/Logger;
     378: ldc           #245                // String Failover complete for exchangeId: {} >>> {}
     380: aload_1
     381: invokeinterface #140,  1          // InterfaceMethod org/apache/camel/Exchange.getExchangeId:()Ljava/lang/String;
     386: aload_1
     387: invokeinterface #247,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     392: aload_2
     393: iconst_1
     394: invokeinterface #211,  2          // InterfaceMethod org/apache/camel/AsyncCallback.done:(Z)V
     399: iconst_1
     400: ireturn

  protected org.apache.camel.Exchange prepareExchangeForFailover(org.apache.camel.Exchange);
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #262                // Method org/apache/camel/util/ExchangeHelper.createCopy:(Lorg/apache/camel/Exchange;Z)Lorg/apache/camel/Exchange;
       5: areturn

  private boolean processExchange(org.apache.camel.Processor, org.apache.camel.Exchange, org.apache.camel.Exchange, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger, org.apache.camel.AsyncCallback, java.util.List<org.apache.camel.Processor>);
    Code:
       0: aload_1
       1: ifnonnull     32
       4: new           #264                // class java/lang/IllegalStateException
       7: dup
       8: new           #73                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc_w         #266                // String No processors could be chosen to process
      18: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_3
      22: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #267                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: getfield      #129                // Field log:Lorg/slf4j/Logger;
      36: ldc_w         #269                // String Processing failover at attempt {} for {}
      39: aload         4
      41: aload_3
      42: invokeinterface #247,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      47: aload_1
      48: invokestatic  #275                // Method org/apache/camel/util/AsyncProcessorConverterHelper.convert:(Lorg/apache/camel/Processor;)Lorg/apache/camel/AsyncProcessor;
      51: astore        8
      53: aload         8
      55: aload_3
      56: new           #13                 // class org/apache/camel/processor/loadbalancer/FailOverLoadBalancer$FailOverAsyncCallback
      59: dup
      60: aload_0
      61: aload_2
      62: aload_3
      63: aload         4
      65: aload         5
      67: aload         6
      69: aload         7
      71: aconst_null
      72: invokespecial #278                // Method org/apache/camel/processor/loadbalancer/FailOverLoadBalancer$FailOverAsyncCallback."<init>":(Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer;Lorg/apache/camel/Exchange;Lorg/apache/camel/Exchange;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/camel/AsyncCallback;Ljava/util/List;Lorg/apache/camel/processor/loadbalancer/FailOverLoadBalancer$1;)V
      75: invokeinterface #282,  3          // InterfaceMethod org/apache/camel/AsyncProcessor.process:(Lorg/apache/camel/Exchange;Lorg/apache/camel/AsyncCallback;)Z
      80: ireturn

  public java.lang.String toString();
    Code:
       0: new           #73                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #286                // String FailoverLoadBalancer[
      10: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: invokevirtual #174                // Method getProcessors:()Ljava/util/List;
      17: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc_w         #288                // String ]
      23: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.String getTraceLabel();
    Code:
       0: ldc_w         #291                // String failover
       3: areturn

  static int access$100(org.apache.camel.processor.loadbalancer.FailOverLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #31                 // Field maximumFailoverAttempts:I
       4: ireturn

  static java.util.concurrent.atomic.AtomicInteger access$200(org.apache.camel.processor.loadbalancer.FailOverLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #38                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static boolean access$300(org.apache.camel.processor.loadbalancer.FailOverLoadBalancer, org.apache.camel.Processor, org.apache.camel.Exchange, org.apache.camel.Exchange, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger, org.apache.camel.AsyncCallback, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #233                // Method processExchange:(Lorg/apache/camel/Processor;Lorg/apache/camel/Exchange;Lorg/apache/camel/Exchange;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/camel/AsyncCallback;Ljava/util/List;)Z
      15: ireturn
}
