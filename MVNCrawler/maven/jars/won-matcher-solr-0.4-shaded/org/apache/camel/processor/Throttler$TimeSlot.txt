Compiled from "Throttler.java"
public class org.apache.camel.processor.Throttler$TimeSlot {
  private volatile long capacity;

  private final long duration;

  private final long startTime;

  final org.apache.camel.processor.Throttler this$0;

  protected org.apache.camel.processor.Throttler$TimeSlot(org.apache.camel.processor.Throttler);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
       5: invokespecial #25                 // Method "<init>":(Lorg/apache/camel/processor/Throttler;J)V
       8: return

  protected org.apache.camel.processor.Throttler$TimeSlot(org.apache.camel.processor.Throttler, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field this$0:Lorg/apache/camel/processor/Throttler;
       5: aload_0
       6: invokespecial #32                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/Throttler;
      14: invokestatic  #36                 // Method org/apache/camel/processor/Throttler.access$100:(Lorg/apache/camel/processor/Throttler;)J
      17: putfield      #38                 // Field capacity:J
      20: aload_0
      21: aload_0
      22: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/Throttler;
      25: invokestatic  #41                 // Method org/apache/camel/processor/Throttler.access$200:(Lorg/apache/camel/processor/Throttler;)J
      28: putfield      #43                 // Field duration:J
      31: aload_0
      32: lload_2
      33: putfield      #45                 // Field startTime:J
      36: return

  protected void assign();
    Code:
       0: aload_0
       1: dup
       2: getfield      #38                 // Field capacity:J
       5: lconst_1
       6: lsub
       7: putfield      #38                 // Field capacity:J
      10: return

  protected org.apache.camel.processor.Throttler$TimeSlot next();
    Code:
       0: new           #2                  // class org/apache/camel/processor/Throttler$TimeSlot
       3: dup
       4: aload_0
       5: getfield      #29                 // Field this$0:Lorg/apache/camel/processor/Throttler;
       8: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
      11: aload_0
      12: getfield      #45                 // Field startTime:J
      15: aload_0
      16: getfield      #43                 // Field duration:J
      19: ladd
      20: invokestatic  #54                 // Method java/lang/Math.max:(JJ)J
      23: invokespecial #25                 // Method "<init>":(Lorg/apache/camel/processor/Throttler;J)V
      26: areturn

  protected boolean isActive();
    Code:
       0: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: getfield      #45                 // Field startTime:J
       8: lload_1
       9: lcmp
      10: ifgt          31
      13: lload_1
      14: aload_0
      15: getfield      #45                 // Field startTime:J
      18: aload_0
      19: getfield      #43                 // Field duration:J
      22: ladd
      23: lcmp
      24: ifge          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  protected boolean isFull();
    Code:
       0: aload_0
       1: getfield      #38                 // Field capacity:J
       4: lconst_0
       5: lcmp
       6: ifgt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static long access$000(org.apache.camel.processor.Throttler$TimeSlot);
    Code:
       0: aload_0
       1: getfield      #45                 // Field startTime:J
       4: lreturn
}
