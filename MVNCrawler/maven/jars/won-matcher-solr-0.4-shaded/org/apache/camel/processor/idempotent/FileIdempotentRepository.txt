Compiled from "FileIdempotentRepository.java"
public class org.apache.camel.processor.idempotent.FileIdempotentRepository extends org.apache.camel.support.ServiceSupport implements org.apache.camel.spi.IdempotentRepository<java.lang.String> {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String STORE_DELIMITER;

  private java.util.Map<java.lang.String, java.lang.Object> cache;

  private java.io.File fileStore;

  private long maxFileStoreSize;

  private java.util.concurrent.atomic.AtomicBoolean init;

  public org.apache.camel.processor.idempotent.FileIdempotentRepository();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: ldc2_w        #31                 // long 1024000l
       8: putfield      #34                 // Field maxFileStoreSize:J
      11: aload_0
      12: new           #36                 // class java/util/concurrent/atomic/AtomicBoolean
      15: dup
      16: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      19: putfield      #39                 // Field init:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: aload_0
      23: new           #41                 // class org/apache/camel/util/LRUCache
      26: dup
      27: sipush        1000
      30: invokespecial #44                 // Method org/apache/camel/util/LRUCache."<init>":(I)V
      33: putfield      #46                 // Field cache:Ljava/util/Map;
      36: return

  public org.apache.camel.processor.idempotent.FileIdempotentRepository(java.io.File, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/apache/camel/support/ServiceSupport."<init>":()V
       4: aload_0
       5: ldc2_w        #31                 // long 1024000l
       8: putfield      #34                 // Field maxFileStoreSize:J
      11: aload_0
      12: new           #36                 // class java/util/concurrent/atomic/AtomicBoolean
      15: dup
      16: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      19: putfield      #39                 // Field init:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: aload_0
      23: aload_1
      24: putfield      #51                 // Field fileStore:Ljava/io/File;
      27: aload_0
      28: aload_2
      29: putfield      #46                 // Field cache:Ljava/util/Map;
      32: return

  public static org.apache.camel.spi.IdempotentRepository<java.lang.String> fileIdempotentRepository(java.io.File);
    Code:
       0: aload_0
       1: sipush        1000
       4: invokestatic  #57                 // Method fileIdempotentRepository:(Ljava/io/File;I)Lorg/apache/camel/spi/IdempotentRepository;
       7: areturn

  public static org.apache.camel.spi.IdempotentRepository<java.lang.String> fileIdempotentRepository(java.io.File, int);
    Code:
       0: aload_0
       1: new           #41                 // class org/apache/camel/util/LRUCache
       4: dup
       5: iload_1
       6: invokespecial #44                 // Method org/apache/camel/util/LRUCache."<init>":(I)V
       9: invokestatic  #60                 // Method fileIdempotentRepository:(Ljava/io/File;Ljava/util/Map;)Lorg/apache/camel/spi/IdempotentRepository;
      12: areturn

  public static org.apache.camel.spi.IdempotentRepository<java.lang.String> fileIdempotentRepository(java.io.File, int, long);
    Code:
       0: new           #2                  // class org/apache/camel/processor/idempotent/FileIdempotentRepository
       3: dup
       4: aload_0
       5: new           #41                 // class org/apache/camel/util/LRUCache
       8: dup
       9: iload_1
      10: invokespecial #44                 // Method org/apache/camel/util/LRUCache."<init>":(I)V
      13: invokespecial #65                 // Method "<init>":(Ljava/io/File;Ljava/util/Map;)V
      16: astore        4
      18: aload         4
      20: lload_2
      21: invokevirtual #69                 // Method setMaxFileStoreSize:(J)V
      24: aload         4
      26: areturn

  public static org.apache.camel.spi.IdempotentRepository<java.lang.String> fileIdempotentRepository(java.io.File, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #2                  // class org/apache/camel/processor/idempotent/FileIdempotentRepository
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #65                 // Method "<init>":(Ljava/io/File;Ljava/util/Map;)V
       9: areturn

  public boolean add(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #46                 // Field cache:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #46                 // Field cache:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #81,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_0
      21: aload_2
      22: monitorexit
      23: ireturn
      24: aload_0
      25: getfield      #46                 // Field cache:Ljava/util/Map;
      28: aload_1
      29: aload_1
      30: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_0
      37: getfield      #51                 // Field fileStore:Ljava/io/File;
      40: invokevirtual #93                 // Method java/io/File.length:()J
      43: aload_0
      44: getfield      #34                 // Field maxFileStoreSize:J
      47: lcmp
      48: ifge          59
      51: aload_0
      52: aload_1
      53: invokevirtual #97                 // Method appendToStore:(Ljava/lang/String;)V
      56: goto          63
      59: aload_0
      60: invokevirtual #100                // Method trunkStore:()V
      63: iconst_1
      64: aload_2
      65: monitorexit
      66: ireturn
      67: astore_3
      68: aload_2
      69: monitorexit
      70: aload_3
      71: athrow
    Exception table:
       from    to  target type
           7    23    67   any
          24    66    67   any
          67    70    67   any

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #46                 // Field cache:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #46                 // Field cache:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #81,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: aload_2
      18: monitorexit
      19: ireturn
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
    Exception table:
       from    to  target type
           7    19    20   any
          20    23    20   any

  public boolean remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #46                 // Field cache:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #46                 // Field cache:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #112,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore_3
      26: aload_0
      27: invokevirtual #100                // Method trunkStore:()V
      30: aload_2
      31: monitorexit
      32: goto          42
      35: astore        4
      37: aload_2
      38: monitorexit
      39: aload         4
      41: athrow
      42: iload_3
      43: ireturn
    Exception table:
       from    to  target type
           7    32    35   any
          35    39    35   any

  public boolean confirm(java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  public java.io.File getFileStore();
    Code:
       0: aload_0
       1: getfield      #51                 // Field fileStore:Ljava/io/File;
       4: areturn

  public void setFileStore(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field fileStore:Ljava/io/File;
       5: return

  public java.lang.String getFilePath();
    Code:
       0: aload_0
       1: getfield      #51                 // Field fileStore:Ljava/io/File;
       4: invokevirtual #126                // Method java/io/File.getPath:()Ljava/lang/String;
       7: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getCache();
    Code:
       0: aload_0
       1: getfield      #46                 // Field cache:Ljava/util/Map;
       4: areturn

  public void setCache(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field cache:Ljava/util/Map;
       5: return

  public long getMaxFileStoreSize();
    Code:
       0: aload_0
       1: getfield      #34                 // Field maxFileStoreSize:J
       4: lreturn

  public void setMaxFileStoreSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #34                 // Field maxFileStoreSize:J
       5: return

  public void setCacheSize(int);
    Code:
       0: aload_0
       1: getfield      #46                 // Field cache:Ljava/util/Map;
       4: ifnull        16
       7: aload_0
       8: getfield      #46                 // Field cache:Ljava/util/Map;
      11: invokeinterface #136,  1          // InterfaceMethod java/util/Map.clear:()V
      16: aload_0
      17: new           #41                 // class org/apache/camel/util/LRUCache
      20: dup
      21: iload_1
      22: invokespecial #44                 // Method org/apache/camel/util/LRUCache."<init>":(I)V
      25: putfield      #46                 // Field cache:Ljava/util/Map;
      28: return

  public int getCacheSize();
    Code:
       0: aload_0
       1: getfield      #46                 // Field cache:Ljava/util/Map;
       4: ifnull        17
       7: aload_0
       8: getfield      #46                 // Field cache:Ljava/util/Map;
      11: invokeinterface #142,  1          // InterfaceMethod java/util/Map.size:()I
      16: ireturn
      17: iconst_0
      18: ireturn

  public synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #46                 // Field cache:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokevirtual #100                // Method trunkStore:()V
      11: aload_0
      12: getfield      #46                 // Field cache:Ljava/util/Map;
      15: invokeinterface #136,  1          // InterfaceMethod java/util/Map.clear:()V
      20: aload_0
      21: invokevirtual #147                // Method loadStore:()V
      24: aload_1
      25: monitorexit
      26: goto          34
      29: astore_2
      30: aload_1
      31: monitorexit
      32: aload_2
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    26    29   any
          29    32    29   any

  protected void appendToStore(java.lang.String);
    Code:
       0: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #153                // String Appending {} to idempotent filestore: {}
       5: aload_1
       6: aload_0
       7: getfield      #51                 // Field fileStore:Ljava/io/File;
      10: invokeinterface #159,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aconst_null
      16: astore_2
      17: aload_0
      18: getfield      #51                 // Field fileStore:Ljava/io/File;
      21: invokevirtual #163                // Method java/io/File.exists:()Z
      24: ifne          35
      27: aload_0
      28: getfield      #51                 // Field fileStore:Ljava/io/File;
      31: invokestatic  #169                // Method org/apache/camel/util/FileUtil.createNewFile:(Ljava/io/File;)Z
      34: pop
      35: new           #171                // class java/io/FileOutputStream
      38: dup
      39: aload_0
      40: getfield      #51                 // Field fileStore:Ljava/io/File;
      43: iconst_1
      44: invokespecial #174                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
      47: astore_2
      48: aload_2
      49: aload_1
      50: invokevirtual #178                // Method java/lang/String.getBytes:()[B
      53: invokevirtual #182                // Method java/io/FileOutputStream.write:([B)V
      56: aload_2
      57: ldc           #17                 // String \n
      59: invokevirtual #178                // Method java/lang/String.getBytes:()[B
      62: invokevirtual #182                // Method java/io/FileOutputStream.write:([B)V
      65: aload_2
      66: ldc           #184                // String Appending to file idempotent repository
      68: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
      71: invokestatic  #190                // Method org/apache/camel/util/IOHelper.close:(Ljava/io/Closeable;Ljava/lang/String;Lorg/slf4j/Logger;)V
      74: goto          97
      77: astore_3
      78: aload_3
      79: invokestatic  #196                // Method org/apache/camel/util/ObjectHelper.wrapRuntimeCamelException:(Ljava/lang/Throwable;)Lorg/apache/camel/RuntimeCamelException;
      82: athrow
      83: astore        4
      85: aload_2
      86: ldc           #184                // String Appending to file idempotent repository
      88: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
      91: invokestatic  #190                // Method org/apache/camel/util/IOHelper.close:(Ljava/io/Closeable;Ljava/lang/String;Lorg/slf4j/Logger;)V
      94: aload         4
      96: athrow
      97: return
    Exception table:
       from    to  target type
          17    65    77   Class java/io/IOException
          17    65    83   any
          77    85    83   any

  protected void trunkStore();
    Code:
       0: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #203                // String Trunking idempotent filestore: {}
       5: aload_0
       6: getfield      #51                 // Field fileStore:Ljava/io/File;
       9: invokeinterface #207,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aconst_null
      15: astore_1
      16: new           #171                // class java/io/FileOutputStream
      19: dup
      20: aload_0
      21: getfield      #51                 // Field fileStore:Ljava/io/File;
      24: invokespecial #209                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      27: astore_1
      28: aload_0
      29: getfield      #46                 // Field cache:Ljava/util/Map;
      32: invokeinterface #213,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      37: invokeinterface #219,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #224,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          82
      52: aload_2
      53: invokeinterface #228,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #107                // class java/lang/String
      61: astore_3
      62: aload_1
      63: aload_3
      64: invokevirtual #178                // Method java/lang/String.getBytes:()[B
      67: invokevirtual #182                // Method java/io/FileOutputStream.write:([B)V
      70: aload_1
      71: ldc           #17                 // String \n
      73: invokevirtual #178                // Method java/lang/String.getBytes:()[B
      76: invokevirtual #182                // Method java/io/FileOutputStream.write:([B)V
      79: goto          43
      82: aload_1
      83: ldc           #230                // String Trunking file idempotent repository
      85: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
      88: invokestatic  #190                // Method org/apache/camel/util/IOHelper.close:(Ljava/io/Closeable;Ljava/lang/String;Lorg/slf4j/Logger;)V
      91: goto          114
      94: astore_2
      95: aload_2
      96: invokestatic  #196                // Method org/apache/camel/util/ObjectHelper.wrapRuntimeCamelException:(Ljava/lang/Throwable;)Lorg/apache/camel/RuntimeCamelException;
      99: athrow
     100: astore        4
     102: aload_1
     103: ldc           #230                // String Trunking file idempotent repository
     105: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
     108: invokestatic  #190                // Method org/apache/camel/util/IOHelper.close:(Ljava/io/Closeable;Ljava/lang/String;Lorg/slf4j/Logger;)V
     111: aload         4
     113: athrow
     114: return
    Exception table:
       from    to  target type
          16    82    94   Class java/io/IOException
          16    82   100   any
          94   102   100   any

  protected void loadStore();
    Code:
       0: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #234                // String Loading to 1st level cache from idempotent filestore: {}
       5: aload_0
       6: getfield      #51                 // Field fileStore:Ljava/io/File;
       9: invokeinterface #237,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #51                 // Field fileStore:Ljava/io/File;
      18: invokevirtual #163                // Method java/io/File.exists:()Z
      21: ifne          25
      24: return
      25: aload_0
      26: getfield      #46                 // Field cache:Ljava/util/Map;
      29: invokeinterface #136,  1          // InterfaceMethod java/util/Map.clear:()V
      34: aconst_null
      35: astore_1
      36: new           #239                // class java/util/Scanner
      39: dup
      40: aload_0
      41: getfield      #51                 // Field fileStore:Ljava/io/File;
      44: invokespecial #240                // Method java/util/Scanner."<init>":(Ljava/io/File;)V
      47: astore_1
      48: aload_1
      49: ldc           #17                 // String \n
      51: invokevirtual #244                // Method java/util/Scanner.useDelimiter:(Ljava/lang/String;)Ljava/util/Scanner;
      54: pop
      55: aload_1
      56: invokevirtual #247                // Method java/util/Scanner.hasNextLine:()Z
      59: ifeq          82
      62: aload_1
      63: invokevirtual #250                // Method java/util/Scanner.nextLine:()Ljava/lang/String;
      66: astore_2
      67: aload_0
      68: getfield      #46                 // Field cache:Ljava/util/Map;
      71: aload_2
      72: aload_2
      73: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: goto          55
      82: aload_1
      83: ifnull        110
      86: aload_1
      87: invokevirtual #252                // Method java/util/Scanner.close:()V
      90: goto          110
      93: astore_2
      94: aload_2
      95: invokestatic  #196                // Method org/apache/camel/util/ObjectHelper.wrapRuntimeCamelException:(Ljava/lang/Throwable;)Lorg/apache/camel/RuntimeCamelException;
      98: athrow
      99: astore_3
     100: aload_1
     101: ifnull        108
     104: aload_1
     105: invokevirtual #252                // Method java/util/Scanner.close:()V
     108: aload_3
     109: athrow
     110: getstatic     #151                // Field LOG:Lorg/slf4j/Logger;
     113: ldc           #254                // String Loaded {} to the 1st level cache from idempotent filestore: {}
     115: aload_0
     116: getfield      #46                 // Field cache:Ljava/util/Map;
     119: invokeinterface #142,  1          // InterfaceMethod java/util/Map.size:()I
     124: invokestatic  #260                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: aload_0
     128: getfield      #51                 // Field fileStore:Ljava/io/File;
     131: invokeinterface #159,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     136: return
    Exception table:
       from    to  target type
          36    82    93   Class java/io/IOException
          36    82    99   any
          93   100    99   any

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #39                 // Field init:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #270                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #147                // Method loadStore:()V
      16: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #100                // Method trunkStore:()V
       4: aload_0
       5: getfield      #46                 // Field cache:Ljava/util/Map;
       8: invokeinterface #136,  1          // InterfaceMethod java/util/Map.clear:()V
      13: aload_0
      14: getfield      #39                 // Field init:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: iconst_0
      18: invokevirtual #274                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      21: return

  public boolean confirm(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #107                // class java/lang/String
       5: invokevirtual #276                // Method confirm:(Ljava/lang/String;)Z
       8: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #107                // class java/lang/String
       5: invokevirtual #280                // Method remove:(Ljava/lang/String;)Z
       8: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #107                // class java/lang/String
       5: invokevirtual #282                // Method contains:(Ljava/lang/String;)Z
       8: ireturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #107                // class java/lang/String
       5: invokevirtual #284                // Method add:(Ljava/lang/String;)Z
       8: ireturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/processor/idempotent/FileIdempotentRepository
       2: invokestatic  #291                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #151                // Field LOG:Lorg/slf4j/Logger;
       8: return
}
