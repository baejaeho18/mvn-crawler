Compiled from "StreamResequencer.java"
class org.apache.camel.processor.StreamResequencer$Delivery extends java.lang.Thread {
  private java.util.concurrent.locks.Lock deliveryRequestLock;

  private java.util.concurrent.locks.Condition deliveryRequestCondition;

  final org.apache.camel.processor.StreamResequencer this$0;

  public org.apache.camel.processor.StreamResequencer$Delivery(org.apache.camel.processor.StreamResequencer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field this$0:Lorg/apache/camel/processor/StreamResequencer;
       5: aload_0
       6: aload_1
       7: invokestatic  #22                 // Method org/apache/camel/processor/StreamResequencer.access$000:(Lorg/apache/camel/processor/StreamResequencer;)Lorg/apache/camel/CamelContext;
      10: invokeinterface #28,  1           // InterfaceMethod org/apache/camel/CamelContext.getExecutorServiceManager:()Lorg/apache/camel/spi/ExecutorServiceManager;
      15: ldc           #30                 // String Resequencer Delivery
      17: invokeinterface #36,  2           // InterfaceMethod org/apache/camel/spi/ExecutorServiceManager.resolveThreadName:(Ljava/lang/String;)Ljava/lang/String;
      22: invokespecial #39                 // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
      25: aload_0
      26: new           #41                 // class java/util/concurrent/locks/ReentrantLock
      29: dup
      30: invokespecial #44                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      33: putfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
      36: aload_0
      37: aload_0
      38: getfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
      41: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      46: putfield      #54                 // Field deliveryRequestCondition:Ljava/util/concurrent/locks/Condition;
      49: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #18                 // Field this$0:Lorg/apache/camel/processor/StreamResequencer;
       4: invokevirtual #65                 // Method org/apache/camel/processor/StreamResequencer.isRunAllowed:()Z
       7: ifeq          96
      10: aload_0
      11: getfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
      14: invokeinterface #68,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      19: aload_0
      20: getfield      #54                 // Field deliveryRequestCondition:Ljava/util/concurrent/locks/Condition;
      23: ldc2_w        #69                 // long 1000l
      26: getstatic     #76                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      29: invokeinterface #82,  4           // InterfaceMethod java/util/concurrent/locks/Condition.await:(JLjava/util/concurrent/TimeUnit;)Z
      34: pop
      35: aload_0
      36: getfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #85,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: goto          59
      47: astore_1
      48: aload_0
      49: getfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
      52: invokeinterface #85,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: aload_1
      58: athrow
      59: goto          66
      62: astore_1
      63: goto          96
      66: aload_0
      67: getfield      #18                 // Field this$0:Lorg/apache/camel/processor/StreamResequencer;
      70: invokestatic  #89                 // Method org/apache/camel/processor/StreamResequencer.access$100:(Lorg/apache/camel/processor/StreamResequencer;)Lorg/apache/camel/processor/resequencer/ResequencerEngine;
      73: invokevirtual #94                 // Method org/apache/camel/processor/resequencer/ResequencerEngine.deliver:()V
      76: goto          0
      79: astore_1
      80: aload_0
      81: getfield      #18                 // Field this$0:Lorg/apache/camel/processor/StreamResequencer;
      84: invokevirtual #98                 // Method org/apache/camel/processor/StreamResequencer.getExceptionHandler:()Lorg/apache/camel/spi/ExceptionHandler;
      87: aload_1
      88: invokeinterface #104,  2          // InterfaceMethod org/apache/camel/spi/ExceptionHandler.handleException:(Ljava/lang/Throwable;)V
      93: goto          0
      96: return
    Exception table:
       from    to  target type
          19    35    47   any
          47    48    47   any
          10    59    62   Class java/lang/InterruptedException
          66    76    79   Class java/lang/Throwable

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method interrupt:()V
       4: return

  public void request();
    Code:
       0: aload_0
       1: getfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #68,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #54                 // Field deliveryRequestCondition:Ljava/util/concurrent/locks/Condition;
      13: invokeinterface #116,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      18: aload_0
      19: getfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
      22: invokeinterface #85,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      27: goto          42
      30: astore_1
      31: aload_0
      32: getfield      #46                 // Field deliveryRequestLock:Ljava/util/concurrent/locks/Lock;
      35: invokeinterface #85,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      40: aload_1
      41: athrow
      42: return
    Exception table:
       from    to  target type
           9    18    30   any
          30    31    30   any
}
