Compiled from "FileLockExclusiveReadLockStrategy.java"
public class org.apache.camel.component.file.strategy.FileLockExclusiveReadLockStrategy extends org.apache.camel.component.file.strategy.MarkerFileExclusiveReadLockStrategy {
  private static final org.slf4j.Logger LOG;

  private long timeout;

  private long checkInterval;

  private java.nio.channels.FileLock lock;

  private java.lang.String lockFileName;

  private org.apache.camel.LoggingLevel readLockLoggingLevel;

  public org.apache.camel.component.file.strategy.FileLockExclusiveReadLockStrategy();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/apache/camel/component/file/strategy/MarkerFileExclusiveReadLockStrategy."<init>":()V
       4: aload_0
       5: ldc2_w        #21                 // long 1000l
       8: putfield      #24                 // Field checkInterval:J
      11: aload_0
      12: getstatic     #29                 // Field org/apache/camel/LoggingLevel.WARN:Lorg/apache/camel/LoggingLevel;
      15: putfield      #31                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
      18: return

  public void prepareOnStartup(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFileEndpoint<java.io.File>);
    Code:
       0: return

  public boolean acquireExclusiveReadLock(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #51                 // Method org/apache/camel/component/file/strategy/MarkerFileExclusiveReadLockStrategy.acquireExclusiveReadLock:(Lorg/apache/camel/component/file/GenericFileOperations;Lorg/apache/camel/component/file/GenericFile;Lorg/apache/camel/Exchange;)Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: new           #53                 // class java/io/File
      15: dup
      16: aload_2
      17: invokevirtual #59                 // Method org/apache/camel/component/file/GenericFile.getAbsoluteFilePath:()Ljava/lang/String;
      20: invokespecial #62                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      23: astore        4
      25: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
      28: ldc           #66                 // String Waiting for exclusive read lock to file: {}
      30: aload         4
      32: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      37: new           #74                 // class java/io/RandomAccessFile
      40: dup
      41: aload         4
      43: ldc           #76                 // String rw
      45: invokespecial #79                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      48: invokevirtual #83                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      51: astore        5
      53: iconst_0
      54: istore        6
      56: new           #85                 // class org/apache/camel/util/StopWatch
      59: dup
      60: invokespecial #86                 // Method org/apache/camel/util/StopWatch."<init>":()V
      63: astore        7
      65: iload         6
      67: ifne          225
      70: aload_0
      71: getfield      #94                 // Field timeout:J
      74: lconst_0
      75: lcmp
      76: ifle          140
      79: aload         7
      81: invokevirtual #98                 // Method org/apache/camel/util/StopWatch.taken:()J
      84: lstore        8
      86: lload         8
      88: aload_0
      89: getfield      #94                 // Field timeout:J
      92: lcmp
      93: ifle          140
      96: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
      99: aload_0
     100: getfield      #31                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
     103: new           #100                // class java/lang/StringBuilder
     106: dup
     107: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #103                // String Cannot acquire read lock within
     112: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: getfield      #94                 // Field timeout:J
     119: invokevirtual #110                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     122: ldc           #112                // String  millis. Will skip the file:
     124: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload         4
     129: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokestatic  #124                // Method org/apache/camel/util/CamelLogger.log:(Lorg/slf4j/Logger;Lorg/apache/camel/LoggingLevel;Ljava/lang/String;)V
     138: iconst_0
     139: ireturn
     140: aload_0
     141: aload_0
     142: getfield      #94                 // Field timeout:J
     145: lconst_0
     146: lcmp
     147: ifle          158
     150: aload         5
     152: invokevirtual #128                // Method java/nio/channels/FileChannel.tryLock:()Ljava/nio/channels/FileLock;
     155: goto          163
     158: aload         5
     160: invokevirtual #130                // Method java/nio/channels/FileChannel.lock:()Ljava/nio/channels/FileLock;
     163: putfield      #134                // Field lock:Ljava/nio/channels/FileLock;
     166: goto          171
     169: astore        10
     171: aload_0
     172: getfield      #134                // Field lock:Ljava/nio/channels/FileLock;
     175: ifnull        209
     178: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
     181: ldc           #136                // String Acquired exclusive read lock: {} to file: {}
     183: aload_0
     184: getfield      #134                // Field lock:Ljava/nio/channels/FileLock;
     187: aload         4
     189: invokeinterface #139,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     194: aload_0
     195: aload         4
     197: invokevirtual #142                // Method java/io/File.getName:()Ljava/lang/String;
     200: putfield      #144                // Field lockFileName:Ljava/lang/String;
     203: iconst_1
     204: istore        6
     206: goto          65
     209: aload_0
     210: invokespecial #148                // Method sleep:()Z
     213: istore        10
     215: iload         10
     217: ifeq          222
     220: iconst_0
     221: ireturn
     222: goto          65
     225: goto          267
     228: astore        5
     230: aload_0
     231: getfield      #94                 // Field timeout:J
     234: lconst_0
     235: lcmp
     236: ifne          242
     239: aload         5
     241: athrow
     242: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
     245: ldc           #150                // String Cannot acquire read lock. Will try again.
     247: aload         5
     249: invokeinterface #154,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     254: aload_0
     255: invokespecial #148                // Method sleep:()Z
     258: istore        6
     260: iload         6
     262: ifeq          267
     265: iconst_0
     266: ireturn
     267: iconst_1
     268: ireturn
    Exception table:
       from    to  target type
         140   166   169   Class java/lang/IllegalStateException
          37   139   228   Class java/io/IOException
         140   221   228   Class java/io/IOException
         222   225   228   Class java/io/IOException

  public void releaseExclusiveReadLock(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #177                // Method org/apache/camel/component/file/strategy/MarkerFileExclusiveReadLockStrategy.releaseExclusiveReadLock:(Lorg/apache/camel/component/file/GenericFileOperations;Lorg/apache/camel/component/file/GenericFile;Lorg/apache/camel/Exchange;)V
       7: aload_0
       8: getfield      #134                // Field lock:Ljava/nio/channels/FileLock;
      11: ifnull        98
      14: aload_0
      15: getfield      #134                // Field lock:Ljava/nio/channels/FileLock;
      18: invokevirtual #179                // Method java/nio/channels/FileLock.channel:()Ljava/nio/channels/FileChannel;
      21: astore        4
      23: aload_0
      24: getfield      #134                // Field lock:Ljava/nio/channels/FileLock;
      27: invokevirtual #182                // Method java/nio/channels/FileLock.release:()V
      30: aload         4
      32: new           #100                // class java/lang/StringBuilder
      35: dup
      36: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #184                // String while acquiring exclusive read lock for file:
      41: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #144                // Field lockFileName:Ljava/lang/String;
      48: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
      57: invokestatic  #190                // Method org/apache/camel/util/IOHelper.close:(Ljava/io/Closeable;Ljava/lang/String;Lorg/slf4j/Logger;)V
      60: goto          98
      63: astore        5
      65: aload         4
      67: new           #100                // class java/lang/StringBuilder
      70: dup
      71: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #184                // String while acquiring exclusive read lock for file:
      76: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #144                // Field lockFileName:Ljava/lang/String;
      83: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
      92: invokestatic  #190                // Method org/apache/camel/util/IOHelper.close:(Ljava/io/Closeable;Ljava/lang/String;Lorg/slf4j/Logger;)V
      95: aload         5
      97: athrow
      98: return
    Exception table:
       from    to  target type
          23    30    63   any
          63    65    63   any

  private boolean sleep();
    Code:
       0: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #199                // String Exclusive read lock not granted. Sleeping for {} millis.
       5: aload_0
       6: getfield      #24                 // Field checkInterval:J
       9: invokestatic  #205                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #24                 // Field checkInterval:J
      21: invokestatic  #210                // Method java/lang/Thread.sleep:(J)V
      24: iconst_0
      25: ireturn
      26: astore_1
      27: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #212                // String Sleep interrupted while waiting for exclusive read lock, so breaking out
      32: invokeinterface #214,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      37: iconst_1
      38: ireturn
    Exception table:
       from    to  target type
          17    25    26   Class java/lang/InterruptedException

  public long getTimeout();
    Code:
       0: aload_0
       1: getfield      #94                 // Field timeout:J
       4: lreturn

  public void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #94                 // Field timeout:J
       5: return

  public void setCheckInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #24                 // Field checkInterval:J
       5: return

  public void setReadLockLoggingLevel(org.apache.camel.LoggingLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field readLockLoggingLevel:Lorg/apache/camel/LoggingLevel;
       5: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/component/file/strategy/FileLockExclusiveReadLockStrategy
       2: invokestatic  #227                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
