Compiled from "MarkerFileExclusiveReadLockStrategy.java"
public class org.apache.camel.component.file.strategy.MarkerFileExclusiveReadLockStrategy implements org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy<java.io.File> {
  private static final org.slf4j.Logger LOG;

  public org.apache.camel.component.file.strategy.MarkerFileExclusiveReadLockStrategy();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: return

  public void prepareOnStartup(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFileEndpoint<java.io.File>);
    Code:
       0: aload_2
       1: invokevirtual #24                 // Method org/apache/camel/component/file/GenericFileEndpoint.getConfiguration:()Lorg/apache/camel/component/file/GenericFileConfiguration;
       4: invokevirtual #30                 // Method org/apache/camel/component/file/GenericFileConfiguration.getDirectory:()Ljava/lang/String;
       7: astore_3
       8: new           #32                 // class java/io/File
      11: dup
      12: aload_3
      13: invokespecial #35                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      16: astore        4
      18: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      21: ldc           #39                 // String Prepare on startup by deleting orphaned lock files from: {}
      23: aload_3
      24: invokeinterface #45,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      29: new           #47                 // class org/apache/camel/util/StopWatch
      32: dup
      33: invokespecial #48                 // Method org/apache/camel/util/StopWatch."<init>":()V
      36: astore        5
      38: aload         4
      40: aload_2
      41: invokevirtual #52                 // Method org/apache/camel/component/file/GenericFileEndpoint.isRecursive:()Z
      44: invokestatic  #56                 // Method deleteLockFiles:(Ljava/io/File;Z)V
      47: aload         5
      49: invokevirtual #60                 // Method org/apache/camel/util/StopWatch.taken:()J
      52: ldc2_w        #61                 // long 1000l
      55: lcmp
      56: ifle          78
      59: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      62: ldc           #64                 // String Prepared on startup by deleting orphaned lock files from: {} took {} millis to complete.
      64: aload_3
      65: aload         5
      67: invokevirtual #60                 // Method org/apache/camel/util/StopWatch.taken:()J
      70: invokestatic  #70                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      73: invokeinterface #74,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      78: return

  public boolean acquireExclusiveReadLock(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokestatic  #96                 // Method getLockFileName:(Lorg/apache/camel/component/file/GenericFile;)Ljava/lang/String;
       4: astore        4
       6: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
       9: ldc           #98                 // String Locking the file: {} using the lock file name: {}
      11: aload_2
      12: aload         4
      14: invokeinterface #101,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      19: new           #32                 // class java/io/File
      22: dup
      23: aload         4
      25: invokespecial #35                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      28: invokestatic  #107                // Method org/apache/camel/util/FileUtil.createNewFile:(Ljava/io/File;)Z
      31: istore        5
      33: aload_3
      34: ldc           #109                // String CamelFileLockFileAcquired
      36: iload         5
      38: invokestatic  #114                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: invokeinterface #119,  3          // InterfaceMethod org/apache/camel/Exchange.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_3
      47: ldc           #121                // String CamelFileLockFileName
      49: aload         4
      51: invokeinterface #119,  3          // InterfaceMethod org/apache/camel/Exchange.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      56: iload         5
      58: ireturn

  public void releaseExclusiveReadLock(org.apache.camel.component.file.GenericFileOperations<java.io.File>, org.apache.camel.component.file.GenericFile<java.io.File>, org.apache.camel.Exchange) throws java.lang.Exception;
    Code:
       0: aload_3
       1: ldc           #121                // String CamelFileLockFileName
       3: aload_2
       4: invokestatic  #96                 // Method getLockFileName:(Lorg/apache/camel/component/file/GenericFile;)Ljava/lang/String;
       7: ldc           #76                 // class java/lang/String
       9: invokeinterface #134,  4          // InterfaceMethod org/apache/camel/Exchange.getProperty:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      14: checkcast     #76                 // class java/lang/String
      17: astore        4
      19: new           #32                 // class java/io/File
      22: dup
      23: aload         4
      25: invokespecial #35                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      28: astore        5
      30: aload_3
      31: ldc           #109                // String CamelFileLockFileAcquired
      33: iconst_0
      34: invokestatic  #114                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: ldc           #111                // class java/lang/Boolean
      39: invokeinterface #134,  4          // InterfaceMethod org/apache/camel/Exchange.getProperty:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      44: checkcast     #111                // class java/lang/Boolean
      47: invokevirtual #137                // Method java/lang/Boolean.booleanValue:()Z
      50: ifeq          92
      53: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      56: ldc           #139                // String Unlocking file: {}
      58: aload         4
      60: invokeinterface #141,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      65: aload         5
      67: invokestatic  #144                // Method org/apache/camel/util/FileUtil.deleteFile:(Ljava/io/File;)Z
      70: istore        6
      72: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      75: ldc           #146                // String Lock file: {} was deleted: {}
      77: aload         4
      79: iload         6
      81: invokestatic  #114                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      84: invokeinterface #101,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      89: goto          104
      92: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      95: ldc           #148                // String Don\'t try to delete the Lock file: {} as camel doesn\'t get to lock before.
      97: aload         4
      99: invokeinterface #141,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     104: return

  public void setTimeout(long);
    Code:
       0: return

  public void setCheckInterval(long);
    Code:
       0: return

  public void setReadLockLoggingLevel(org.apache.camel.LoggingLevel);
    Code:
       0: return

  private static void deleteLockFiles(java.io.File, boolean);
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/io/File.listFiles:()[Ljava/io/File;
       4: astore_2
       5: aload_2
       6: ifnull        14
       9: aload_2
      10: arraylength
      11: ifne          15
      14: return
      15: aload_2
      16: astore_3
      17: aload_3
      18: arraylength
      19: istore        4
      21: iconst_0
      22: istore        5
      24: iload         5
      26: iload         4
      28: if_icmpge     127
      31: aload_3
      32: iload         5
      34: aaload
      35: astore        6
      37: aload         6
      39: invokevirtual #169                // Method java/io/File.getName:()Ljava/lang/String;
      42: ldc           #171                // String .
      44: invokevirtual #175                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      47: ifeq          53
      50: goto          121
      53: aload         6
      55: invokevirtual #169                // Method java/io/File.getName:()Ljava/lang/String;
      58: ldc           #177                // String .camelLock
      60: invokevirtual #180                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      63: ifeq          103
      66: getstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
      69: new           #182                // class java/lang/StringBuilder
      72: dup
      73: invokespecial #183                // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #185                // String Deleting orphaned lock file:
      78: invokevirtual #189                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload         6
      83: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokeinterface #198,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      94: aload         6
      96: invokestatic  #144                // Method org/apache/camel/util/FileUtil.deleteFile:(Ljava/io/File;)Z
      99: pop
     100: goto          121
     103: iload_1
     104: ifeq          121
     107: aload         6
     109: invokevirtual #201                // Method java/io/File.isDirectory:()Z
     112: ifeq          121
     115: aload         6
     117: iconst_1
     118: invokestatic  #56                 // Method deleteLockFiles:(Ljava/io/File;Z)V
     121: iinc          5, 1
     124: goto          24
     127: return

  private static java.lang.String getLockFileName(org.apache.camel.component.file.GenericFile<java.io.File>);
    Code:
       0: new           #182                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #183                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #212                // Method org/apache/camel/component/file/GenericFile.getAbsoluteFilePath:()Ljava/lang/String;
      11: invokevirtual #189                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #177                // String .camelLock
      16: invokevirtual #189                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/camel/component/file/strategy/MarkerFileExclusiveReadLockStrategy
       2: invokestatic  #219                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
