Compiled from "CamelContext.java"
public interface org.apache.camel.CamelContext extends org.apache.camel.SuspendableService,org.apache.camel.RuntimeConfiguration {
  public abstract void start() throws java.lang.Exception;

  public abstract void stop() throws java.lang.Exception;

  public abstract java.lang.String getName();

  public abstract org.apache.camel.spi.CamelContextNameStrategy getNameStrategy();

  public abstract void setNameStrategy(org.apache.camel.spi.CamelContextNameStrategy);

  public abstract org.apache.camel.spi.ManagementNameStrategy getManagementNameStrategy();

  public abstract void setManagementNameStrategy(org.apache.camel.spi.ManagementNameStrategy);

  public abstract java.lang.String getManagementName();

  public abstract java.lang.String getVersion();

  public abstract org.apache.camel.ServiceStatus getStatus();

  public abstract java.lang.String getUptime();

  public abstract void addService(java.lang.Object) throws java.lang.Exception;

  public abstract boolean removeService(java.lang.Object) throws java.lang.Exception;

  public abstract boolean hasService(java.lang.Object);

  public abstract void addStartupListener(org.apache.camel.StartupListener) throws java.lang.Exception;

  public abstract void addComponent(java.lang.String, org.apache.camel.Component);

  public abstract org.apache.camel.Component hasComponent(java.lang.String);

  public abstract org.apache.camel.Component getComponent(java.lang.String);

  public abstract org.apache.camel.Component getComponent(java.lang.String, boolean);

  public abstract <T extends org.apache.camel.Component> T getComponent(java.lang.String, java.lang.Class<T>);

  public abstract java.util.List<java.lang.String> getComponentNames();

  public abstract org.apache.camel.Component removeComponent(java.lang.String);

  public abstract org.apache.camel.Endpoint getEndpoint(java.lang.String);

  public abstract <T extends org.apache.camel.Endpoint> T getEndpoint(java.lang.String, java.lang.Class<T>);

  public abstract java.util.Collection<org.apache.camel.Endpoint> getEndpoints();

  public abstract java.util.Map<java.lang.String, org.apache.camel.Endpoint> getEndpointMap();

  public abstract org.apache.camel.Endpoint hasEndpoint(java.lang.String);

  public abstract org.apache.camel.Endpoint addEndpoint(java.lang.String, org.apache.camel.Endpoint) throws java.lang.Exception;

  public abstract java.util.Collection<org.apache.camel.Endpoint> removeEndpoints(java.lang.String) throws java.lang.Exception;

  public abstract void addRegisterEndpointCallback(org.apache.camel.spi.EndpointStrategy);

  public abstract java.util.List<org.apache.camel.model.RouteDefinition> getRouteDefinitions();

  public abstract org.apache.camel.model.RouteDefinition getRouteDefinition(java.lang.String);

  public abstract java.util.List<org.apache.camel.spi.RouteStartupOrder> getRouteStartupOrder();

  public abstract java.util.List<org.apache.camel.Route> getRoutes();

  public abstract org.apache.camel.Route getRoute(java.lang.String);

  public abstract void addRoutes(org.apache.camel.RoutesBuilder) throws java.lang.Exception;

  public abstract org.apache.camel.model.RoutesDefinition loadRoutesDefinition(java.io.InputStream) throws java.lang.Exception;

  public abstract void addRouteDefinitions(java.util.Collection<org.apache.camel.model.RouteDefinition>) throws java.lang.Exception;

  public abstract void addRouteDefinition(org.apache.camel.model.RouteDefinition) throws java.lang.Exception;

  public abstract void removeRouteDefinitions(java.util.Collection<org.apache.camel.model.RouteDefinition>) throws java.lang.Exception;

  public abstract void removeRouteDefinition(org.apache.camel.model.RouteDefinition) throws java.lang.Exception;

  public abstract void startRoute(org.apache.camel.model.RouteDefinition) throws java.lang.Exception;

  public abstract void startRoute(java.lang.String) throws java.lang.Exception;

  public abstract void stopRoute(org.apache.camel.model.RouteDefinition) throws java.lang.Exception;

  public abstract void stopRoute(java.lang.String) throws java.lang.Exception;

  public abstract void stopRoute(java.lang.String, long, java.util.concurrent.TimeUnit) throws java.lang.Exception;

  public abstract boolean stopRoute(java.lang.String, long, java.util.concurrent.TimeUnit, boolean) throws java.lang.Exception;

  public abstract void shutdownRoute(java.lang.String) throws java.lang.Exception;

  public abstract void shutdownRoute(java.lang.String, long, java.util.concurrent.TimeUnit) throws java.lang.Exception;

  public abstract boolean removeRoute(java.lang.String) throws java.lang.Exception;

  public abstract void resumeRoute(java.lang.String) throws java.lang.Exception;

  public abstract void suspendRoute(java.lang.String) throws java.lang.Exception;

  public abstract void suspendRoute(java.lang.String, long, java.util.concurrent.TimeUnit) throws java.lang.Exception;

  public abstract org.apache.camel.ServiceStatus getRouteStatus(java.lang.String);

  public abstract boolean isStartingRoutes();

  public abstract org.apache.camel.TypeConverter getTypeConverter();

  public abstract org.apache.camel.spi.TypeConverterRegistry getTypeConverterRegistry();

  public abstract org.apache.camel.spi.Registry getRegistry();

  public abstract org.apache.camel.spi.Injector getInjector();

  public abstract org.apache.camel.spi.ManagementMBeanAssembler getManagementMBeanAssembler();

  public abstract java.util.List<org.apache.camel.spi.LifecycleStrategy> getLifecycleStrategies();

  public abstract void addLifecycleStrategy(org.apache.camel.spi.LifecycleStrategy);

  public abstract org.apache.camel.spi.Language resolveLanguage(java.lang.String);

  public abstract java.lang.String resolvePropertyPlaceholders(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String getPropertyPrefixToken();

  public abstract java.lang.String getPropertySuffixToken();

  public abstract java.util.List<java.lang.String> getLanguageNames();

  public abstract org.apache.camel.ProducerTemplate createProducerTemplate();

  public abstract org.apache.camel.ProducerTemplate createProducerTemplate(int);

  public abstract org.apache.camel.ConsumerTemplate createConsumerTemplate();

  public abstract org.apache.camel.ConsumerTemplate createConsumerTemplate(int);

  public abstract void addInterceptStrategy(org.apache.camel.spi.InterceptStrategy);

  public abstract java.util.List<org.apache.camel.spi.InterceptStrategy> getInterceptStrategies();

  public abstract org.apache.camel.builder.ErrorHandlerBuilder getErrorHandlerBuilder();

  public abstract void setErrorHandlerBuilder(org.apache.camel.ErrorHandlerFactory);

  public abstract java.util.concurrent.ScheduledExecutorService getErrorHandlerExecutorService();

  public abstract void setDataFormats(java.util.Map<java.lang.String, org.apache.camel.model.DataFormatDefinition>);

  public abstract java.util.Map<java.lang.String, org.apache.camel.model.DataFormatDefinition> getDataFormats();

  public abstract org.apache.camel.spi.DataFormat resolveDataFormat(java.lang.String);

  public abstract org.apache.camel.model.DataFormatDefinition resolveDataFormatDefinition(java.lang.String);

  public abstract org.apache.camel.spi.DataFormatResolver getDataFormatResolver();

  public abstract void setDataFormatResolver(org.apache.camel.spi.DataFormatResolver);

  public abstract void setProperties(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getProperties();

  public abstract java.lang.String getProperty(java.lang.String);

  public abstract org.apache.camel.spi.FactoryFinder getDefaultFactoryFinder();

  public abstract void setFactoryFinderResolver(org.apache.camel.spi.FactoryFinderResolver);

  public abstract org.apache.camel.spi.FactoryFinder getFactoryFinder(java.lang.String) throws org.apache.camel.NoFactoryAvailableException;

  public abstract org.apache.camel.spi.ClassResolver getClassResolver();

  public abstract org.apache.camel.spi.PackageScanClassResolver getPackageScanClassResolver();

  public abstract void setClassResolver(org.apache.camel.spi.ClassResolver);

  public abstract void setPackageScanClassResolver(org.apache.camel.spi.PackageScanClassResolver);

  public abstract void setProducerServicePool(org.apache.camel.spi.ServicePool<org.apache.camel.Endpoint, org.apache.camel.Producer>);

  public abstract org.apache.camel.spi.ServicePool<org.apache.camel.Endpoint, org.apache.camel.Producer> getProducerServicePool();

  public abstract void setNodeIdFactory(org.apache.camel.spi.NodeIdFactory);

  public abstract org.apache.camel.spi.NodeIdFactory getNodeIdFactory();

  public abstract org.apache.camel.spi.ManagementStrategy getManagementStrategy();

  public abstract void setManagementStrategy(org.apache.camel.spi.ManagementStrategy);

  public abstract org.apache.camel.spi.InterceptStrategy getDefaultTracer();

  public abstract void setDefaultTracer(org.apache.camel.spi.InterceptStrategy);

  public abstract org.apache.camel.spi.InterceptStrategy getDefaultBacklogTracer();

  public abstract void setDefaultBacklogTracer(org.apache.camel.spi.InterceptStrategy);

  public abstract org.apache.camel.spi.InterceptStrategy getDefaultBacklogDebugger();

  public abstract void setDefaultBacklogDebugger(org.apache.camel.spi.InterceptStrategy);

  public abstract void disableJMX() throws java.lang.IllegalStateException;

  public abstract org.apache.camel.spi.InflightRepository getInflightRepository();

  public abstract void setInflightRepository(org.apache.camel.spi.InflightRepository);

  public abstract java.lang.ClassLoader getApplicationContextClassLoader();

  public abstract void setApplicationContextClassLoader(java.lang.ClassLoader);

  public abstract org.apache.camel.spi.ShutdownStrategy getShutdownStrategy();

  public abstract void setShutdownStrategy(org.apache.camel.spi.ShutdownStrategy);

  public abstract org.apache.camel.spi.ExecutorServiceManager getExecutorServiceManager();

  public abstract org.apache.camel.spi.ExecutorServiceStrategy getExecutorServiceStrategy();

  public abstract void setExecutorServiceManager(org.apache.camel.spi.ExecutorServiceManager);

  public abstract org.apache.camel.spi.ProcessorFactory getProcessorFactory();

  public abstract void setProcessorFactory(org.apache.camel.spi.ProcessorFactory);

  public abstract org.apache.camel.spi.Debugger getDebugger();

  public abstract void setDebugger(org.apache.camel.spi.Debugger);

  public abstract org.apache.camel.spi.UuidGenerator getUuidGenerator();

  public abstract void setUuidGenerator(org.apache.camel.spi.UuidGenerator);

  public abstract java.lang.Boolean isLazyLoadTypeConverters();

  public abstract void setLazyLoadTypeConverters(java.lang.Boolean);

  public abstract java.lang.Boolean isTypeConverterStatisticsEnabled();

  public abstract void setTypeConverterStatisticsEnabled(java.lang.Boolean);

  public abstract java.lang.Boolean isUseMDCLogging();

  public abstract void setUseMDCLogging(java.lang.Boolean);

  public abstract java.lang.Boolean isUseBreadcrumb();

  public abstract void setUseBreadcrumb(java.lang.Boolean);

  public abstract java.util.Map<java.lang.String, java.util.Properties> findComponents() throws org.apache.camel.util.LoadPropertiesException, java.io.IOException;

  public abstract java.lang.String getComponentDocumentation(java.lang.String) throws java.io.IOException;

  public abstract org.apache.camel.spi.StreamCachingStrategy getStreamCachingStrategy();

  public abstract void setStreamCachingStrategy(org.apache.camel.spi.StreamCachingStrategy);
}
