Compiled from "ThreadPoolProfile.java"
public class org.apache.camel.spi.ThreadPoolProfile implements java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  private java.lang.String id;

  private java.lang.Boolean defaultProfile;

  private java.lang.Integer poolSize;

  private java.lang.Integer maxPoolSize;

  private java.lang.Long keepAliveTime;

  private java.util.concurrent.TimeUnit timeUnit;

  private java.lang.Integer maxQueueSize;

  private org.apache.camel.ThreadPoolRejectedPolicy rejectedPolicy;

  public org.apache.camel.spi.ThreadPoolProfile();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.camel.spi.ThreadPoolProfile(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #36                 // Field id:Ljava/lang/String;
       9: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #36                 // Field id:Ljava/lang/String;
       4: areturn

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field id:Ljava/lang/String;
       5: return

  public java.lang.Boolean isDefaultProfile();
    Code:
       0: aload_0
       1: getfield      #43                 // Field defaultProfile:Ljava/lang/Boolean;
       4: ifnull        21
       7: aload_0
       8: getfield      #43                 // Field defaultProfile:Ljava/lang/Boolean;
      11: invokevirtual #49                 // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #53                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: areturn

  public void setDefaultProfile(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field defaultProfile:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getPoolSize();
    Code:
       0: aload_0
       1: getfield      #59                 // Field poolSize:Ljava/lang/Integer;
       4: areturn

  public void setPoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field poolSize:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #64                 // Field maxPoolSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxPoolSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field maxPoolSize:Ljava/lang/Integer;
       5: return

  public java.lang.Long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #69                 // Field keepAliveTime:Ljava/lang/Long;
       4: areturn

  public void setKeepAliveTime(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field keepAliveTime:Ljava/lang/Long;
       5: return

  public java.util.concurrent.TimeUnit getTimeUnit();
    Code:
       0: aload_0
       1: getfield      #75                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public void setTimeUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       5: return

  public java.lang.Integer getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #80                 // Field maxQueueSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field maxQueueSize:Ljava/lang/Integer;
       5: return

  public org.apache.camel.ThreadPoolRejectedPolicy getRejectedPolicy();
    Code:
       0: aload_0
       1: getfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       4: areturn

  public java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler();
    Code:
       0: aload_0
       1: getfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       4: ifnull        15
       7: aload_0
       8: getfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      11: invokevirtual #92                 // Method org/apache/camel/ThreadPoolRejectedPolicy.asRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
      14: areturn
      15: aconst_null
      16: areturn

  public void setRejectedPolicy(org.apache.camel.ThreadPoolRejectedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       5: return

  public void addDefaults(org.apache.camel.spi.ThreadPoolProfile);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #59                 // Field poolSize:Ljava/lang/Integer;
       9: ifnonnull     20
      12: aload_0
      13: aload_1
      14: invokevirtual #98                 // Method getPoolSize:()Ljava/lang/Integer;
      17: putfield      #59                 // Field poolSize:Ljava/lang/Integer;
      20: aload_0
      21: getfield      #64                 // Field maxPoolSize:Ljava/lang/Integer;
      24: ifnonnull     35
      27: aload_0
      28: aload_1
      29: invokevirtual #100                // Method getMaxPoolSize:()Ljava/lang/Integer;
      32: putfield      #64                 // Field maxPoolSize:Ljava/lang/Integer;
      35: aload_0
      36: getfield      #69                 // Field keepAliveTime:Ljava/lang/Long;
      39: ifnonnull     50
      42: aload_0
      43: aload_1
      44: invokevirtual #102                // Method getKeepAliveTime:()Ljava/lang/Long;
      47: putfield      #69                 // Field keepAliveTime:Ljava/lang/Long;
      50: aload_0
      51: getfield      #75                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      54: ifnonnull     65
      57: aload_0
      58: aload_1
      59: invokevirtual #104                // Method getTimeUnit:()Ljava/util/concurrent/TimeUnit;
      62: putfield      #75                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      65: aload_0
      66: getfield      #80                 // Field maxQueueSize:Ljava/lang/Integer;
      69: ifnonnull     80
      72: aload_0
      73: aload_1
      74: invokevirtual #106                // Method getMaxQueueSize:()Ljava/lang/Integer;
      77: putfield      #80                 // Field maxQueueSize:Ljava/lang/Integer;
      80: aload_0
      81: getfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      84: ifnonnull     95
      87: aload_0
      88: aload_1
      89: invokevirtual #108                // Method getRejectedPolicy:()Lorg/apache/camel/ThreadPoolRejectedPolicy;
      92: putfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      95: return

  public org.apache.camel.spi.ThreadPoolProfile clone();
    Code:
       0: new           #2                  // class org/apache/camel/spi/ThreadPoolProfile
       3: dup
       4: invokespecial #111                // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #43                 // Field defaultProfile:Ljava/lang/Boolean;
      13: invokevirtual #113                // Method setDefaultProfile:(Ljava/lang/Boolean;)V
      16: aload_1
      17: aload_0
      18: getfield      #36                 // Field id:Ljava/lang/String;
      21: invokevirtual #115                // Method setId:(Ljava/lang/String;)V
      24: aload_1
      25: aload_0
      26: getfield      #69                 // Field keepAliveTime:Ljava/lang/Long;
      29: invokevirtual #117                // Method setKeepAliveTime:(Ljava/lang/Long;)V
      32: aload_1
      33: aload_0
      34: getfield      #64                 // Field maxPoolSize:Ljava/lang/Integer;
      37: invokevirtual #119                // Method setMaxPoolSize:(Ljava/lang/Integer;)V
      40: aload_1
      41: aload_0
      42: getfield      #80                 // Field maxQueueSize:Ljava/lang/Integer;
      45: invokevirtual #121                // Method setMaxQueueSize:(Ljava/lang/Integer;)V
      48: aload_1
      49: aload_0
      50: getfield      #64                 // Field maxPoolSize:Ljava/lang/Integer;
      53: invokevirtual #123                // Method setPoolSize:(Ljava/lang/Integer;)V
      56: aload_1
      57: aload_0
      58: getfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      61: invokevirtual #125                // Method setRejectedPolicy:(Lorg/apache/camel/ThreadPoolRejectedPolicy;)V
      64: aload_1
      65: aload_0
      66: getfield      #75                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      69: invokevirtual #127                // Method setTimeUnit:(Ljava/util/concurrent/TimeUnit;)V
      72: aload_1
      73: areturn

  public java.lang.String toString();
    Code:
       0: new           #131                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #134                // String ThreadPoolProfile[
       9: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #36                 // Field id:Ljava/lang/String;
      16: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #140                // String  (
      21: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #43                 // Field defaultProfile:Ljava/lang/Boolean;
      28: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #145                // String ) size:
      33: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #59                 // Field poolSize:Ljava/lang/Integer;
      40: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #147                // String -
      45: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #64                 // Field maxPoolSize:Ljava/lang/Integer;
      52: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #149                // String , keepAlive:
      57: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #69                 // Field keepAliveTime:Ljava/lang/Long;
      64: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #151                // String
      69: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #75                 // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      76: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #153                // String , maxQueue:
      81: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #80                 // Field maxQueueSize:Ljava/lang/Integer;
      88: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #155                // String , rejectedPolicy:
      93: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #85                 // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
     100: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #157                // String ]
     105: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #159                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method clone:()Lorg/apache/camel/spi/ThreadPoolProfile;
       4: areturn
}
