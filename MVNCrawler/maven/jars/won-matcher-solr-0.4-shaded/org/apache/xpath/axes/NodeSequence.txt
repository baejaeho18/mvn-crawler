Compiled from "NodeSequence.java"
public class org.apache.xpath.axes.NodeSequence extends org.apache.xpath.objects.XObject implements org.apache.xml.dtm.DTMIterator,java.lang.Cloneable,org.apache.xpath.axes.PathComponent {
  static final long serialVersionUID;

  protected int m_last;

  protected int m_next;

  private org.apache.xpath.axes.NodeSequence$IteratorCache m_cache;

  protected org.apache.xml.dtm.DTMIterator m_iter;

  protected org.apache.xml.dtm.DTMManager m_dtmMgr;

  protected org.apache.xml.utils.NodeVector getVector();
    Code:
       0: aload_0
       1: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
       4: ifnull        17
       7: aload_0
       8: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      11: invokestatic  #2                  // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$000:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)Lorg/apache/xml/utils/NodeVector;
      14: goto          18
      17: aconst_null
      18: astore_1
      19: aload_1
      20: areturn

  private org.apache.xpath.axes.NodeSequence$IteratorCache getCache();
    Code:
       0: aload_0
       1: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
       4: areturn

  protected void SetVector(org.apache.xml.utils.NodeVector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setObject:(Ljava/lang/Object;)V
       5: return

  public boolean hasCache();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private boolean cacheComplete();
    Code:
       0: aload_0
       1: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
       4: ifnull        18
       7: aload_0
       8: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      11: invokestatic  #5                  // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$100:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)Z
      14: istore_1
      15: goto          20
      18: iconst_0
      19: istore_1
      20: iload_1
      21: ireturn

  private void markCacheComplete();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_0
      10: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      13: iconst_1
      14: invokestatic  #6                  // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$200:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;Z)V
      17: return

  public final void setIter(org.apache.xml.dtm.DTMIterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: return

  public final org.apache.xml.dtm.DTMIterator getContainedIter();
    Code:
       0: aload_0
       1: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       4: areturn

  private org.apache.xpath.axes.NodeSequence(org.apache.xml.dtm.DTMIterator, int, org.apache.xpath.XPathContext, boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/apache/xpath/objects/XObject."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #9                  // Field m_last:I
       9: aload_0
      10: iconst_0
      11: putfield      #10                 // Field m_next:I
      14: aload_0
      15: aload_1
      16: invokevirtual #11                 // Method setIter:(Lorg/apache/xml/dtm/DTMIterator;)V
      19: aload_0
      20: iload_2
      21: aload_3
      22: invokevirtual #12                 // Method setRoot:(ILjava/lang/Object;)V
      25: aload_0
      26: iload         4
      28: invokevirtual #13                 // Method setShouldCacheNodes:(Z)V
      31: return

  public org.apache.xpath.axes.NodeSequence(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/apache/xpath/objects/XObject."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #9                  // Field m_last:I
      10: aload_0
      11: iconst_0
      12: putfield      #10                 // Field m_next:I
      15: aload_1
      16: instanceof    #15                 // class org/apache/xml/utils/NodeVector
      19: ifeq          30
      22: aload_0
      23: aload_1
      24: checkcast     #15                 // class org/apache/xml/utils/NodeVector
      27: invokevirtual #16                 // Method SetVector:(Lorg/apache/xml/utils/NodeVector;)V
      30: aconst_null
      31: aload_1
      32: if_acmpeq     73
      35: aload_0
      36: aload_1
      37: instanceof    #15                 // class org/apache/xml/utils/NodeVector
      40: ldc           #17                 // String Must have a NodeVector as the object for NodeSequence!
      42: invokevirtual #18                 // Method org/apache/xpath/Expression.assertion:(ZLjava/lang/String;)V
      45: aload_1
      46: instanceof    #19                 // class org/apache/xml/dtm/DTMIterator
      49: ifeq          73
      52: aload_0
      53: aload_1
      54: checkcast     #19                 // class org/apache/xml/dtm/DTMIterator
      57: invokevirtual #11                 // Method setIter:(Lorg/apache/xml/dtm/DTMIterator;)V
      60: aload_0
      61: aload_1
      62: checkcast     #19                 // class org/apache/xml/dtm/DTMIterator
      65: invokeinterface #20,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getLength:()I
      70: putfield      #9                  // Field m_last:I
      73: return

  private org.apache.xpath.axes.NodeSequence(org.apache.xml.dtm.DTMManager);
    Code:
       0: aload_0
       1: new           #15                 // class org/apache/xml/utils/NodeVector
       4: dup
       5: invokespecial #21                 // Method org/apache/xml/utils/NodeVector."<init>":()V
       8: invokespecial #14                 // Method org/apache/xpath/objects/XObject."<init>":(Ljava/lang/Object;)V
      11: aload_0
      12: iconst_m1
      13: putfield      #9                  // Field m_last:I
      16: aload_0
      17: iconst_0
      18: putfield      #10                 // Field m_next:I
      21: aload_0
      22: iconst_0
      23: putfield      #9                  // Field m_last:I
      26: aload_0
      27: aload_1
      28: putfield      #22                 // Field m_dtmMgr:Lorg/apache/xml/dtm/DTMManager;
      31: return

  public org.apache.xpath.axes.NodeSequence();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/apache/xpath/objects/XObject."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #9                  // Field m_last:I
       9: aload_0
      10: iconst_0
      11: putfield      #10                 // Field m_next:I
      14: return

  public org.apache.xml.dtm.DTM getDTM(int);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getDTMManager:()Lorg/apache/xml/dtm/DTMManager;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpeq     19
      10: aload_0
      11: invokevirtual #23                 // Method getDTMManager:()Lorg/apache/xml/dtm/DTMManager;
      14: iload_1
      15: invokevirtual #24                 // Method org/apache/xml/dtm/DTMManager.getDTM:(I)Lorg/apache/xml/dtm/DTM;
      18: areturn
      19: aload_0
      20: iconst_0
      21: ldc           #25                 // String Can not get a DTM Unless a DTMManager has been set!
      23: invokevirtual #18                 // Method org/apache/xpath/Expression.assertion:(ZLjava/lang/String;)V
      26: aconst_null
      27: areturn

  public org.apache.xml.dtm.DTMManager getDTMManager();
    Code:
       0: aload_0
       1: getfield      #22                 // Field m_dtmMgr:Lorg/apache/xml/dtm/DTMManager;
       4: areturn

  public int getRoot();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: if_acmpeq     18
       8: aload_0
       9: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      12: invokeinterface #26,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getRoot:()I
      17: ireturn
      18: iconst_m1
      19: ireturn

  public void setRoot(int, java.lang.Object);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: if_acmpeq     69
       8: aload_2
       9: checkcast     #27                 // class org/apache/xpath/XPathContext
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokevirtual #28                 // Method org/apache/xpath/XPathContext.getDTMManager:()Lorg/apache/xml/dtm/DTMManager;
      18: putfield      #22                 // Field m_dtmMgr:Lorg/apache/xml/dtm/DTMManager;
      21: aload_0
      22: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      25: iload_1
      26: aload_2
      27: invokeinterface #29,  3           // InterfaceMethod org/apache/xml/dtm/DTMIterator.setRoot:(ILjava/lang/Object;)V
      32: aload_0
      33: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      36: invokeinterface #30,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.isDocOrdered:()Z
      41: ifne          66
      44: aload_0
      45: invokevirtual #31                 // Method hasCache:()Z
      48: ifne          56
      51: aload_0
      52: iconst_1
      53: invokevirtual #13                 // Method setShouldCacheNodes:(Z)V
      56: aload_0
      57: iconst_m1
      58: invokevirtual #32                 // Method runTo:(I)V
      61: aload_0
      62: iconst_0
      63: putfield      #10                 // Field m_next:I
      66: goto          76
      69: aload_0
      70: iconst_0
      71: ldc           #33                 // String Can not setRoot on a non-iterated NodeSequence!
      73: invokevirtual #18                 // Method org/apache/xpath/Expression.assertion:(ZLjava/lang/String;)V
      76: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #10                 // Field m_next:I
       5: return

  public int getWhatToShow();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method hasCache:()Z
       4: ifeq          12
       7: bipush        -17
       9: goto          21
      12: aload_0
      13: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      16: invokeinterface #34,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getWhatToShow:()I
      21: ireturn

  public boolean getExpandEntityReferences();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: if_acmpeq     18
       8: aload_0
       9: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      12: invokeinterface #35,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getExpandEntityReferences:()Z
      17: ireturn
      18: iconst_1
      19: ireturn

  public int nextNode();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
       4: astore_1
       5: aconst_null
       6: aload_1
       7: if_acmpeq     77
      10: aload_0
      11: getfield      #10                 // Field m_next:I
      14: aload_1
      15: invokevirtual #36                 // Method org/apache/xml/utils/NodeVector.size:()I
      18: if_icmpge     42
      21: aload_1
      22: aload_0
      23: getfield      #10                 // Field m_next:I
      26: invokevirtual #37                 // Method org/apache/xml/utils/NodeVector.elementAt:(I)I
      29: istore_2
      30: aload_0
      31: dup
      32: getfield      #10                 // Field m_next:I
      35: iconst_1
      36: iadd
      37: putfield      #10                 // Field m_next:I
      40: iload_2
      41: ireturn
      42: aload_0
      43: invokespecial #38                 // Method cacheComplete:()Z
      46: ifne          65
      49: iconst_m1
      50: aload_0
      51: getfield      #9                  // Field m_last:I
      54: if_icmpne     65
      57: aconst_null
      58: aload_0
      59: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      62: if_acmpne     77
      65: aload_0
      66: dup
      67: getfield      #10                 // Field m_next:I
      70: iconst_1
      71: iadd
      72: putfield      #10                 // Field m_next:I
      75: iconst_m1
      76: ireturn
      77: aconst_null
      78: aload_0
      79: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      82: if_acmpne     87
      85: iconst_m1
      86: ireturn
      87: aload_0
      88: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      91: invokeinterface #39,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.nextNode:()I
      96: istore_2
      97: iconst_m1
      98: iload_2
      99: if_icmpeq     178
     102: aload_0
     103: invokevirtual #31                 // Method hasCache:()Z
     106: ifeq          165
     109: aload_0
     110: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
     113: invokeinterface #30,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.isDocOrdered:()Z
     118: ifeq          142
     121: aload_0
     122: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
     125: iload_2
     126: invokevirtual #40                 // Method org/apache/xml/utils/NodeVector.addElement:(I)V
     129: aload_0
     130: dup
     131: getfield      #10                 // Field m_next:I
     134: iconst_1
     135: iadd
     136: putfield      #10                 // Field m_next:I
     139: goto          200
     142: aload_0
     143: iload_2
     144: invokevirtual #41                 // Method addNodeInDocOrder:(I)I
     147: istore_3
     148: iload_3
     149: iflt          162
     152: aload_0
     153: dup
     154: getfield      #10                 // Field m_next:I
     157: iconst_1
     158: iadd
     159: putfield      #10                 // Field m_next:I
     162: goto          200
     165: aload_0
     166: dup
     167: getfield      #10                 // Field m_next:I
     170: iconst_1
     171: iadd
     172: putfield      #10                 // Field m_next:I
     175: goto          200
     178: aload_0
     179: invokespecial #42                 // Method markCacheComplete:()V
     182: aload_0
     183: aload_0
     184: getfield      #10                 // Field m_next:I
     187: putfield      #9                  // Field m_last:I
     190: aload_0
     191: dup
     192: getfield      #10                 // Field m_next:I
     195: iconst_1
     196: iadd
     197: putfield      #10                 // Field m_next:I
     200: iload_2
     201: ireturn

  public int previousNode();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method hasCache:()Z
       4: ifeq          35
       7: aload_0
       8: getfield      #10                 // Field m_next:I
      11: ifgt          16
      14: iconst_m1
      15: ireturn
      16: aload_0
      17: dup
      18: getfield      #10                 // Field m_next:I
      21: iconst_1
      22: isub
      23: putfield      #10                 // Field m_next:I
      26: aload_0
      27: aload_0
      28: getfield      #10                 // Field m_next:I
      31: invokevirtual #43                 // Method item:(I)I
      34: ireturn
      35: aload_0
      36: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      39: invokeinterface #44,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.previousNode:()I
      44: istore_1
      45: aload_0
      46: aload_0
      47: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      50: invokeinterface #45,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getCurrentPos:()I
      55: putfield      #10                 // Field m_next:I
      58: aload_0
      59: getfield      #10                 // Field m_next:I
      62: ireturn

  public void detach();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: if_acmpeq     17
       8: aload_0
       9: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      12: invokeinterface #46,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.detach:()V
      17: aload_0
      18: invokespecial #47                 // Method org/apache/xpath/objects/XObject.detach:()V
      21: return

  public void allowDetachToRelease(boolean);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpne     17
       5: aload_0
       6: invokevirtual #31                 // Method hasCache:()Z
       9: ifne          17
      12: aload_0
      13: iconst_1
      14: invokevirtual #13                 // Method setShouldCacheNodes:(Z)V
      17: aconst_null
      18: aload_0
      19: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      22: if_acmpeq     35
      25: aload_0
      26: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      29: iload_1
      30: invokeinterface #48,  2           // InterfaceMethod org/apache/xml/dtm/DTMIterator.allowDetachToRelease:(Z)V
      35: aload_0
      36: iload_1
      37: invokespecial #49                 // Method org/apache/xpath/objects/XObject.allowDetachToRelease:(Z)V
      40: return

  public int getCurrentNode();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method hasCache:()Z
       4: ifeq          39
       7: aload_0
       8: getfield      #10                 // Field m_next:I
      11: iconst_1
      12: isub
      13: istore_1
      14: aload_0
      15: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
      18: astore_2
      19: iload_1
      20: iflt          37
      23: iload_1
      24: aload_2
      25: invokevirtual #36                 // Method org/apache/xml/utils/NodeVector.size:()I
      28: if_icmpge     37
      31: aload_2
      32: iload_1
      33: invokevirtual #37                 // Method org/apache/xml/utils/NodeVector.elementAt:(I)I
      36: ireturn
      37: iconst_m1
      38: ireturn
      39: aconst_null
      40: aload_0
      41: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      44: if_acmpeq     57
      47: aload_0
      48: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      51: invokeinterface #50,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getCurrentNode:()I
      56: ireturn
      57: iconst_m1
      58: ireturn

  public boolean isFresh();
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #10                 // Field m_next:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void setShouldCacheNodes(boolean);
    Code:
       0: iload_1
       1: ifeq          25
       4: aload_0
       5: invokevirtual #31                 // Method hasCache:()Z
       8: ifne          30
      11: aload_0
      12: new           #15                 // class org/apache/xml/utils/NodeVector
      15: dup
      16: invokespecial #21                 // Method org/apache/xml/utils/NodeVector."<init>":()V
      19: invokevirtual #16                 // Method SetVector:(Lorg/apache/xml/utils/NodeVector;)V
      22: goto          30
      25: aload_0
      26: aconst_null
      27: invokevirtual #16                 // Method SetVector:(Lorg/apache/xml/utils/NodeVector;)V
      30: return

  public boolean isMutable();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method hasCache:()Z
       4: ireturn

  public int getCurrentPos();
    Code:
       0: aload_0
       1: getfield      #10                 // Field m_next:I
       4: ireturn

  public void runTo(int);
    Code:
       0: iconst_m1
       1: iload_1
       2: if_icmpne     31
       5: aload_0
       6: getfield      #10                 // Field m_next:I
       9: istore_3
      10: goto          13
      13: iconst_m1
      14: aload_0
      15: invokevirtual #51                 // Method nextNode:()I
      18: dup
      19: istore_2
      20: if_icmpne     13
      23: aload_0
      24: iload_3
      25: putfield      #10                 // Field m_next:I
      28: goto          127
      31: aload_0
      32: getfield      #10                 // Field m_next:I
      35: iload_1
      36: if_icmpne     40
      39: return
      40: aload_0
      41: invokevirtual #31                 // Method hasCache:()Z
      44: ifeq          69
      47: aload_0
      48: getfield      #10                 // Field m_next:I
      51: aload_0
      52: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
      55: invokevirtual #36                 // Method org/apache/xml/utils/NodeVector.size:()I
      58: if_icmpge     69
      61: aload_0
      62: iload_1
      63: putfield      #10                 // Field m_next:I
      66: goto          127
      69: aconst_null
      70: aload_0
      71: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
      74: if_acmpne     109
      77: iload_1
      78: aload_0
      79: getfield      #10                 // Field m_next:I
      82: if_icmpge     109
      85: goto          88
      88: aload_0
      89: getfield      #10                 // Field m_next:I
      92: iload_1
      93: if_icmplt     127
      96: iconst_m1
      97: aload_0
      98: invokevirtual #52                 // Method previousNode:()I
     101: dup
     102: istore_2
     103: if_icmpne     88
     106: goto          127
     109: aload_0
     110: getfield      #10                 // Field m_next:I
     113: iload_1
     114: if_icmpge     127
     117: iconst_m1
     118: aload_0
     119: invokevirtual #51                 // Method nextNode:()I
     122: dup
     123: istore_2
     124: if_icmpne     109
     127: return

  public void setCurrentPos(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #32                 // Method runTo:(I)V
       5: return

  public int item(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setCurrentPos:(I)V
       5: aload_0
       6: invokevirtual #51                 // Method nextNode:()I
       9: istore_2
      10: aload_0
      11: iload_1
      12: putfield      #10                 // Field m_next:I
      15: iload_2
      16: ireturn

  public void setItem(int, int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
       4: astore_3
       5: aconst_null
       6: aload_3
       7: if_acmpeq     124
      10: aload_3
      11: iload_2
      12: invokevirtual #37                 // Method org/apache/xml/utils/NodeVector.elementAt:(I)I
      15: istore        4
      17: iload         4
      19: iload_1
      20: if_icmpeq     107
      23: aload_0
      24: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      27: invokestatic  #54                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$300:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)I
      30: iconst_1
      31: if_icmple     107
      34: new           #55                 // class org/apache/xpath/axes/NodeSequence$IteratorCache
      37: dup
      38: invokespecial #56                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache."<init>":()V
      41: astore        5
      43: aload_3
      44: invokevirtual #57                 // Method org/apache/xml/utils/NodeVector.clone:()Ljava/lang/Object;
      47: checkcast     #15                 // class org/apache/xml/utils/NodeVector
      50: astore        6
      52: goto          79
      55: astore        7
      57: aload         7
      59: invokevirtual #59                 // Method java/lang/Throwable.printStackTrace:()V
      62: new           #60                 // class java/lang/RuntimeException
      65: dup
      66: aload         7
      68: invokevirtual #61                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      71: invokespecial #62                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      74: astore        8
      76: aload         8
      78: athrow
      79: aload         5
      81: aload         6
      83: invokestatic  #63                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$400:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;Lorg/apache/xml/utils/NodeVector;)V
      86: aload         5
      88: iconst_1
      89: invokestatic  #6                  // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$200:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;Z)V
      92: aload_0
      93: aload         5
      95: putfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      98: aload         6
     100: astore_3
     101: aload_0
     102: aload         6
     104: invokespecial #64                 // Method org/apache/xpath/objects/XObject.setObject:(Ljava/lang/Object;)V
     107: aload_3
     108: iload_1
     109: iload_2
     110: invokevirtual #65                 // Method org/apache/xml/utils/NodeVector.setElementAt:(II)V
     113: aload_0
     114: aload_3
     115: invokevirtual #36                 // Method org/apache/xml/utils/NodeVector.size:()I
     118: putfield      #9                  // Field m_last:I
     121: goto          135
     124: aload_0
     125: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
     128: iload_1
     129: iload_2
     130: invokeinterface #66,  3           // InterfaceMethod org/apache/xml/dtm/DTMIterator.setItem:(II)V
     135: return
    Exception table:
       from    to  target type
          43    52    55   Class java/lang/CloneNotSupportedException

  public int getLength();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method getCache:()Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
       4: astore_1
       5: aload_1
       6: ifnull        74
       9: aload_1
      10: invokestatic  #5                  // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$100:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)Z
      13: ifeq          26
      16: aload_1
      17: invokestatic  #2                  // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$000:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)Lorg/apache/xml/utils/NodeVector;
      20: astore_2
      21: aload_2
      22: invokevirtual #36                 // Method org/apache/xml/utils/NodeVector.size:()I
      25: ireturn
      26: aload_0
      27: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      30: instanceof    #68                 // class org/apache/xpath/NodeSetDTM
      33: ifeq          46
      36: aload_0
      37: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      40: invokeinterface #20,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getLength:()I
      45: ireturn
      46: iconst_m1
      47: aload_0
      48: getfield      #9                  // Field m_last:I
      51: if_icmpne     69
      54: aload_0
      55: getfield      #10                 // Field m_next:I
      58: istore_2
      59: aload_0
      60: iconst_m1
      61: invokevirtual #32                 // Method runTo:(I)V
      64: aload_0
      65: iload_2
      66: putfield      #10                 // Field m_next:I
      69: aload_0
      70: getfield      #9                  // Field m_last:I
      73: ireturn
      74: iconst_m1
      75: aload_0
      76: getfield      #9                  // Field m_last:I
      79: if_icmpne     99
      82: aload_0
      83: aload_0
      84: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      87: invokeinterface #20,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getLength:()I
      92: dup_x1
      93: putfield      #9                  // Field m_last:I
      96: goto          103
      99: aload_0
     100: getfield      #9                  // Field m_last:I
     103: ireturn

  public org.apache.xml.dtm.DTMIterator cloneWithReset() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #69                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #70                 // class org/apache/xpath/axes/NodeSequence
       7: astore_1
       8: aload_1
       9: iconst_0
      10: putfield      #10                 // Field m_next:I
      13: aload_0
      14: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      17: ifnull        27
      20: aload_0
      21: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      24: invokestatic  #71                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$500:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)V
      27: aload_1
      28: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #69                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #70                 // class org/apache/xpath/axes/NodeSequence
       7: astore_1
       8: aconst_null
       9: aload_0
      10: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      13: if_acmpeq     32
      16: aload_1
      17: aload_0
      18: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      21: invokeinterface #72,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.clone:()Ljava/lang/Object;
      26: checkcast     #19                 // class org/apache/xml/dtm/DTMIterator
      29: putfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      32: aload_0
      33: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      36: ifnull        46
      39: aload_0
      40: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      43: invokestatic  #71                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$500:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)V
      46: aload_1
      47: areturn

  public boolean isDocOrdered();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: if_acmpeq     18
       8: aload_0
       9: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      12: invokeinterface #30,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.isDocOrdered:()Z
      17: ireturn
      18: iconst_1
      19: ireturn

  public int getAxis();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: if_acmpeq     18
       8: aload_0
       9: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      12: invokeinterface #73,  1           // InterfaceMethod org/apache/xml/dtm/DTMIterator.getAxis:()I
      17: ireturn
      18: aload_0
      19: iconst_0
      20: ldc           #74                 // String Can not getAxis from a non-iterated node sequence!
      22: invokevirtual #18                 // Method org/apache/xpath/Expression.assertion:(ZLjava/lang/String;)V
      25: iconst_0
      26: ireturn

  public int getAnalysisBits();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
       5: if_acmpeq     31
       8: aload_0
       9: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      12: instanceof    #75                 // class org/apache/xpath/axes/PathComponent
      15: ifeq          31
      18: aload_0
      19: getfield      #7                  // Field m_iter:Lorg/apache/xml/dtm/DTMIterator;
      22: checkcast     #75                 // class org/apache/xpath/axes/PathComponent
      25: invokeinterface #76,  1           // InterfaceMethod org/apache/xpath/axes/PathComponent.getAnalysisBits:()I
      30: ireturn
      31: iconst_0
      32: ireturn

  public void fixupVariables(java.util.Vector, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #77                 // Method org/apache/xpath/objects/XObject.fixupVariables:(Ljava/util/Vector;I)V
       6: return

  protected int addNodeInDocOrder(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #31                 // Method hasCache:()Z
       5: ldc           #78                 // String addNodeInDocOrder must be done on a mutable sequence!
       7: invokevirtual #18                 // Method org/apache/xpath/Expression.assertion:(ZLjava/lang/String;)V
      10: iconst_m1
      11: istore_2
      12: aload_0
      13: invokevirtual #4                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
      16: astore_3
      17: aload_3
      18: invokevirtual #36                 // Method org/apache/xml/utils/NodeVector.size:()I
      21: istore        4
      23: iload         4
      25: iconst_1
      26: isub
      27: istore        5
      29: goto          82
      32: aload_3
      33: iload         5
      35: invokevirtual #37                 // Method org/apache/xml/utils/NodeVector.elementAt:(I)I
      38: istore        6
      40: iload         6
      42: iload_1
      43: if_icmpne     53
      46: bipush        -2
      48: istore        5
      50: goto          87
      53: aload_0
      54: getfield      #22                 // Field m_dtmMgr:Lorg/apache/xml/dtm/DTMManager;
      57: iload_1
      58: invokevirtual #24                 // Method org/apache/xml/dtm/DTMManager.getDTM:(I)Lorg/apache/xml/dtm/DTM;
      61: astore        7
      63: aload         7
      65: iload_1
      66: iload         6
      68: invokeinterface #79,  3           // InterfaceMethod org/apache/xml/dtm/DTM.isNodeAfter:(II)Z
      73: ifne          79
      76: goto          87
      79: iinc          5, -1
      82: iload         5
      84: ifge          32
      87: iload         5
      89: bipush        -2
      91: if_icmpeq     105
      94: iload         5
      96: iconst_1
      97: iadd
      98: istore_2
      99: aload_3
     100: iload_1
     101: iload_2
     102: invokevirtual #80                 // Method org/apache/xml/utils/NodeVector.insertElementAt:(II)V
     105: iload_2
     106: ireturn

  protected void setObject(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #15                 // class org/apache/xml/utils/NodeVector
       4: ifeq          61
       7: aload_0
       8: aload_1
       9: invokespecial #64                 // Method org/apache/xpath/objects/XObject.setObject:(Ljava/lang/Object;)V
      12: aload_1
      13: checkcast     #15                 // class org/apache/xml/utils/NodeVector
      16: astore_2
      17: aload_0
      18: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      21: ifnull        35
      24: aload_0
      25: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      28: aload_2
      29: invokestatic  #63                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$400:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;Lorg/apache/xml/utils/NodeVector;)V
      32: goto          58
      35: aload_2
      36: ifnull        58
      39: aload_0
      40: new           #55                 // class org/apache/xpath/axes/NodeSequence$IteratorCache
      43: dup
      44: invokespecial #56                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache."<init>":()V
      47: putfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      50: aload_0
      51: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      54: aload_2
      55: invokestatic  #63                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$400:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;Lorg/apache/xml/utils/NodeVector;)V
      58: goto          101
      61: aload_1
      62: instanceof    #55                 // class org/apache/xpath/axes/NodeSequence$IteratorCache
      65: ifeq          96
      68: aload_1
      69: checkcast     #55                 // class org/apache/xpath/axes/NodeSequence$IteratorCache
      72: astore_2
      73: aload_0
      74: aload_2
      75: putfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      78: aload_0
      79: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
      82: invokestatic  #71                 // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$500:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)V
      85: aload_0
      86: aload_2
      87: invokestatic  #2                  // Method org/apache/xpath/axes/NodeSequence$IteratorCache.access$000:(Lorg/apache/xpath/axes/NodeSequence$IteratorCache;)Lorg/apache/xml/utils/NodeVector;
      90: invokespecial #64                 // Method org/apache/xpath/objects/XObject.setObject:(Ljava/lang/Object;)V
      93: goto          101
      96: aload_0
      97: aload_1
      98: invokespecial #64                 // Method org/apache/xpath/objects/XObject.setObject:(Ljava/lang/Object;)V
     101: return

  protected org.apache.xpath.axes.NodeSequence$IteratorCache getIteratorCache();
    Code:
       0: aload_0
       1: getfield      #1                  // Field m_cache:Lorg/apache/xpath/axes/NodeSequence$IteratorCache;
       4: areturn
}
