Compiled from "LogKitLogger.java"
public class org.apache.commons.logging.impl.LogKitLogger implements org.apache.commons.logging.Log,java.io.Serializable {
  private static final long serialVersionUID;

  protected volatile transient org.apache.log.Logger logger;

  protected java.lang.String name;

  public org.apache.commons.logging.impl.LogKitLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field logger:Lorg/apache/log/Logger;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_1
      16: putfield      #3                  // Field name:Ljava/lang/String;
      19: aload_0
      20: aload_0
      21: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
      24: putfield      #2                  // Field logger:Lorg/apache/log/Logger;
      27: return

  public org.apache.log.Logger getLogger();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Lorg/apache/log/Logger;
       4: astore_1
       5: aload_1
       6: ifnonnull     48
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #2                  // Field logger:Lorg/apache/log/Logger;
      17: astore_1
      18: aload_1
      19: ifnonnull     38
      22: aload_0
      23: invokestatic  #5                  // Method org/apache/log/Hierarchy.getDefaultHierarchy:()Lorg/apache/log/Hierarchy;
      26: aload_0
      27: getfield      #3                  // Field name:Ljava/lang/String;
      30: invokevirtual #6                  // Method org/apache/log/Hierarchy.getLoggerFor:(Ljava/lang/String;)Lorg/apache/log/Logger;
      33: dup
      34: astore_1
      35: putfield      #2                  // Field logger:Lorg/apache/log/Logger;
      38: aload_2
      39: monitorexit
      40: goto          48
      43: astore_3
      44: aload_2
      45: monitorexit
      46: aload_3
      47: athrow
      48: aload_1
      49: areturn
    Exception table:
       from    to  target type
          13    40    43   any
          43    46    43   any

  public void trace(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method debug:(Ljava/lang/Object;)V
       5: return

  public void trace(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #8                  // Method debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
       6: return

  public void debug(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #10                 // Method org/apache/log/Logger.debug:(Ljava/lang/String;)V
      15: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #11                 // Method org/apache/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void info(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #12                 // Method org/apache/log/Logger.info:(Ljava/lang/String;)V
      15: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #13                 // Method org/apache/log/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void warn(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #14                 // Method org/apache/log/Logger.warn:(Ljava/lang/String;)V
      15: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #15                 // Method org/apache/log/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void error(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #16                 // Method org/apache/log/Logger.error:(Ljava/lang/String;)V
      15: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #17                 // Method org/apache/log/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void fatal(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #18                 // Method org/apache/log/Logger.fatalError:(Ljava/lang/String;)V
      15: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #19                 // Method org/apache/log/Logger.fatalError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #20                 // Method org/apache/log/Logger.isDebugEnabled:()Z
       7: ireturn

  public boolean isErrorEnabled();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #21                 // Method org/apache/log/Logger.isErrorEnabled:()Z
       7: ireturn

  public boolean isFatalEnabled();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #22                 // Method org/apache/log/Logger.isFatalErrorEnabled:()Z
       7: ireturn

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #23                 // Method org/apache/log/Logger.isInfoEnabled:()Z
       7: ireturn

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #20                 // Method org/apache/log/Logger.isDebugEnabled:()Z
       7: ireturn

  public boolean isWarnEnabled();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #24                 // Method org/apache/log/Logger.isWarnEnabled:()Z
       7: ireturn
}
