Compiled from "SoftReferenceObjectPool.java"
public class org.apache.commons.pool.impl.SoftReferenceObjectPool<T> extends org.apache.commons.pool.BaseObjectPool<T> implements org.apache.commons.pool.ObjectPool<T> {
  private final java.util.List<java.lang.ref.SoftReference<T>> _pool;

  private org.apache.commons.pool.PoolableObjectFactory<T> _factory;

  private final java.lang.ref.ReferenceQueue<T> refQueue;

  private int _numActive;

  public org.apache.commons.pool.impl.SoftReferenceObjectPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/pool/BaseObjectPool."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       9: aload_0
      10: new           #3                  // class java/lang/ref/ReferenceQueue
      13: dup
      14: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      17: putfield      #5                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field _numActive:I
      25: aload_0
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #9                  // Field _pool:Ljava/util/List;
      36: aload_0
      37: aconst_null
      38: putfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      41: return

  public org.apache.commons.pool.impl.SoftReferenceObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/pool/BaseObjectPool."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       9: aload_0
      10: new           #3                  // class java/lang/ref/ReferenceQueue
      13: dup
      14: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      17: putfield      #5                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field _numActive:I
      25: aload_0
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #9                  // Field _pool:Ljava/util/List;
      36: aload_0
      37: aload_1
      38: putfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      41: return

  public org.apache.commons.pool.impl.SoftReferenceObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int) throws java.lang.Exception, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/pool/BaseObjectPool."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       9: aload_0
      10: new           #3                  // class java/lang/ref/ReferenceQueue
      13: dup
      14: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      17: putfield      #5                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field _numActive:I
      25: aload_1
      26: ifnonnull     39
      29: new           #10                 // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #11                 // String factory required to prefill the pool.
      35: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: new           #7                  // class java/util/ArrayList
      43: dup
      44: iload_2
      45: invokespecial #13                 // Method java/util/ArrayList."<init>":(I)V
      48: putfield      #9                  // Field _pool:Ljava/util/List;
      51: aload_0
      52: aload_1
      53: putfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      56: aload_0
      57: iload_2
      58: invokestatic  #14                 // Method org/apache/commons/pool/PoolUtils.prefill:(Lorg/apache/commons/pool/ObjectPool;I)V
      61: return

  public synchronized T borrowObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method assertOpen:()V
       4: aconst_null
       5: astore_1
       6: iconst_0
       7: istore_2
       8: aconst_null
       9: aload_1
      10: if_acmpne     214
      13: aload_0
      14: getfield      #9                  // Field _pool:Ljava/util/List;
      17: invokeinterface #16,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      22: ifeq          56
      25: aconst_null
      26: aload_0
      27: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      30: if_acmpne     41
      33: new           #17                 // class java/util/NoSuchElementException
      36: dup
      37: invokespecial #18                 // Method java/util/NoSuchElementException."<init>":()V
      40: athrow
      41: iconst_1
      42: istore_2
      43: aload_0
      44: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      47: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.makeObject:()Ljava/lang/Object;
      52: astore_1
      53: goto          89
      56: aload_0
      57: getfield      #9                  // Field _pool:Ljava/util/List;
      60: aload_0
      61: getfield      #9                  // Field _pool:Ljava/util/List;
      64: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      69: iconst_1
      70: isub
      71: invokeinterface #21,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      76: checkcast     #22                 // class java/lang/ref/SoftReference
      79: astore_3
      80: aload_3
      81: invokevirtual #23                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      84: astore_1
      85: aload_3
      86: invokevirtual #24                 // Method java/lang/ref/SoftReference.clear:()V
      89: aconst_null
      90: aload_0
      91: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      94: if_acmpeq     8
      97: aconst_null
      98: aload_1
      99: if_acmpeq     8
     102: aload_0
     103: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     106: aload_1
     107: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.activateObject:(Ljava/lang/Object;)V
     112: aload_0
     113: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     116: aload_1
     117: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.validateObject:(Ljava/lang/Object;)Z
     122: ifne          135
     125: new           #27                 // class java/lang/Exception
     128: dup
     129: ldc           #28                 // String ValidateObject failed
     131: invokespecial #29                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     134: athrow
     135: goto          8
     138: astore_3
     139: aload_3
     140: invokestatic  #31                 // Method org/apache/commons/pool/PoolUtils.checkRethrow:(Ljava/lang/Throwable;)V
     143: aload_0
     144: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     147: aload_1
     148: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
     153: aconst_null
     154: astore_1
     155: goto          177
     158: astore        4
     160: aload         4
     162: invokestatic  #31                 // Method org/apache/commons/pool/PoolUtils.checkRethrow:(Ljava/lang/Throwable;)V
     165: aconst_null
     166: astore_1
     167: goto          177
     170: astore        5
     172: aconst_null
     173: astore_1
     174: aload         5
     176: athrow
     177: iload_2
     178: ifeq          211
     181: new           #17                 // class java/util/NoSuchElementException
     184: dup
     185: new           #33                 // class java/lang/StringBuilder
     188: dup
     189: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     192: ldc           #35                 // String Could not create a validated object, cause:
     194: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_3
     198: invokevirtual #37                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     201: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: invokespecial #39                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
     210: athrow
     211: goto          8
     214: aload_0
     215: dup
     216: getfield      #6                  // Field _numActive:I
     219: iconst_1
     220: iadd
     221: putfield      #6                  // Field _numActive:I
     224: aload_1
     225: areturn
    Exception table:
       from    to  target type
         102   135   138   Class java/lang/Throwable
         143   153   158   Class java/lang/Throwable
         143   153   170   any
         158   165   170   any
         170   172   170   any

  public synchronized void returnObject(T) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isClosed:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_2
      13: aload_0
      14: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      17: ifnull        54
      20: aload_0
      21: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      24: aload_1
      25: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.validateObject:(Ljava/lang/Object;)Z
      30: ifne          38
      33: iconst_0
      34: istore_2
      35: goto          54
      38: aload_0
      39: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      42: aload_1
      43: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.passivateObject:(Ljava/lang/Object;)V
      48: goto          54
      51: astore_3
      52: iconst_0
      53: istore_2
      54: iload_2
      55: ifne          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: istore_3
      64: aload_0
      65: dup
      66: getfield      #6                  // Field _numActive:I
      69: iconst_1
      70: isub
      71: putfield      #6                  // Field _numActive:I
      74: iload_2
      75: ifeq          100
      78: aload_0
      79: getfield      #9                  // Field _pool:Ljava/util/List;
      82: new           #22                 // class java/lang/ref/SoftReference
      85: dup
      86: aload_1
      87: aload_0
      88: getfield      #5                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      91: invokespecial #42                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      94: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      99: pop
     100: aload_0
     101: invokevirtual #44                 // Method java/lang/Object.notifyAll:()V
     104: iload_3
     105: ifeq          130
     108: aload_0
     109: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     112: ifnull        130
     115: aload_0
     116: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     119: aload_1
     120: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
     125: goto          130
     128: astore        4
     130: return
    Exception table:
       from    to  target type
          38    48    51   Class java/lang/Exception
         115   125   128   Class java/lang/Exception

  public synchronized void invalidateObject(T) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field _numActive:I
       5: iconst_1
       6: isub
       7: putfield      #6                  // Field _numActive:I
      10: aload_0
      11: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      14: ifnull        27
      17: aload_0
      18: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      21: aload_1
      22: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
      27: aload_0
      28: invokevirtual #44                 // Method java/lang/Object.notifyAll:()V
      31: return

  public synchronized void addObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method assertOpen:()V
       4: aload_0
       5: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       8: ifnonnull     21
      11: new           #45                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #46                 // String Cannot add objects without a factory.
      17: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      25: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.makeObject:()Ljava/lang/Object;
      30: astore_1
      31: iconst_1
      32: istore_2
      33: aload_0
      34: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      37: aload_1
      38: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.validateObject:(Ljava/lang/Object;)Z
      43: ifne          51
      46: iconst_0
      47: istore_2
      48: goto          61
      51: aload_0
      52: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      55: aload_1
      56: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.passivateObject:(Ljava/lang/Object;)V
      61: iload_2
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: istore_3
      71: iload_2
      72: ifeq          101
      75: aload_0
      76: getfield      #9                  // Field _pool:Ljava/util/List;
      79: new           #22                 // class java/lang/ref/SoftReference
      82: dup
      83: aload_1
      84: aload_0
      85: getfield      #5                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      88: invokespecial #42                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      91: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: aload_0
      98: invokevirtual #44                 // Method java/lang/Object.notifyAll:()V
     101: iload_3
     102: ifeq          120
     105: aload_0
     106: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     109: aload_1
     110: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
     115: goto          120
     118: astore        4
     120: return
    Exception table:
       from    to  target type
         105   115   118   Class java/lang/Exception

  public synchronized int getNumIdle();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method pruneClearedReferences:()V
       4: aload_0
       5: getfield      #9                  // Field _pool:Ljava/util/List;
       8: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      13: ireturn

  public synchronized int getNumActive();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _numActive:I
       4: ireturn

  public synchronized void clear();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       5: if_acmpeq     62
       8: aload_0
       9: getfield      #9                  // Field _pool:Ljava/util/List;
      12: invokeinterface #49,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_1
      18: aload_1
      19: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          62
      27: aload_1
      28: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #22                 // class java/lang/ref/SoftReference
      36: invokevirtual #23                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      39: astore_2
      40: aconst_null
      41: aload_2
      42: if_acmpeq     55
      45: aload_0
      46: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      49: aload_2
      50: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
      55: goto          18
      58: astore_2
      59: goto          18
      62: aload_0
      63: getfield      #9                  // Field _pool:Ljava/util/List;
      66: invokeinterface #52,  1           // InterfaceMethod java/util/List.clear:()V
      71: aload_0
      72: invokespecial #48                 // Method pruneClearedReferences:()V
      75: return
    Exception table:
       from    to  target type
          27    55    58   Class java/lang/Exception

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #53                 // Method org/apache/commons/pool/BaseObjectPool.close:()V
       4: aload_0
       5: invokevirtual #54                 // Method clear:()V
       8: return

  public synchronized void setFactory(org.apache.commons.pool.PoolableObjectFactory<T>) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method assertOpen:()V
       4: iconst_0
       5: aload_0
       6: invokevirtual #55                 // Method getNumActive:()I
       9: if_icmpge     22
      12: new           #45                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #56                 // String Objects are already active
      18: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: invokevirtual #54                 // Method clear:()V
      26: aload_0
      27: aload_1
      28: putfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      31: return

  private void pruneClearedReferences();
    Code:
       0: aload_0
       1: getfield      #5                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #57                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: dup
       8: astore_1
       9: ifnull        30
      12: aload_0
      13: getfield      #9                  // Field _pool:Ljava/util/List;
      16: aload_1
      17: invokeinterface #58,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      22: pop
      23: goto          0
      26: astore_2
      27: goto          0
      30: return
    Exception table:
       from    to  target type
          12    23    26   Class java/lang/UnsupportedOperationException

  public synchronized org.apache.commons.pool.PoolableObjectFactory<T> getFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       4: areturn
}
