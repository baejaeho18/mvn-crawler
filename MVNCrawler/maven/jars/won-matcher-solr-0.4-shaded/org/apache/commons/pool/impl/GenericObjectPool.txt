Compiled from "GenericObjectPool.java"
public class org.apache.commons.pool.impl.GenericObjectPool<T> extends org.apache.commons.pool.BaseObjectPool<T> implements org.apache.commons.pool.ObjectPool<T> {
  public static final byte WHEN_EXHAUSTED_FAIL;

  public static final byte WHEN_EXHAUSTED_BLOCK;

  public static final byte WHEN_EXHAUSTED_GROW;

  public static final int DEFAULT_MAX_IDLE;

  public static final int DEFAULT_MIN_IDLE;

  public static final int DEFAULT_MAX_ACTIVE;

  public static final byte DEFAULT_WHEN_EXHAUSTED_ACTION;

  public static final boolean DEFAULT_LIFO;

  public static final long DEFAULT_MAX_WAIT;

  public static final boolean DEFAULT_TEST_ON_BORROW;

  public static final boolean DEFAULT_TEST_ON_RETURN;

  public static final boolean DEFAULT_TEST_WHILE_IDLE;

  public static final long DEFAULT_TIME_BETWEEN_EVICTION_RUNS_MILLIS;

  public static final int DEFAULT_NUM_TESTS_PER_EVICTION_RUN;

  public static final long DEFAULT_MIN_EVICTABLE_IDLE_TIME_MILLIS;

  public static final long DEFAULT_SOFT_MIN_EVICTABLE_IDLE_TIME_MILLIS;

  private int _maxIdle;

  private int _minIdle;

  private int _maxActive;

  private long _maxWait;

  private byte _whenExhaustedAction;

  private volatile boolean _testOnBorrow;

  private volatile boolean _testOnReturn;

  private boolean _testWhileIdle;

  private long _timeBetweenEvictionRunsMillis;

  private int _numTestsPerEvictionRun;

  private long _minEvictableIdleTimeMillis;

  private long _softMinEvictableIdleTimeMillis;

  private boolean _lifo;

  private org.apache.commons.pool.impl.CursorableLinkedList<org.apache.commons.pool.impl.GenericKeyedObjectPool$ObjectTimestampPair<T>> _pool;

  private org.apache.commons.pool.impl.CursorableLinkedList<org.apache.commons.pool.impl.GenericKeyedObjectPool$ObjectTimestampPair<T>>.Cursor _evictionCursor;

  private org.apache.commons.pool.PoolableObjectFactory<T> _factory;

  private int _numActive;

  private org.apache.commons.pool.impl.GenericObjectPool<T>.Evictor _evictor;

  private int _numInternalProcessing;

  private final java.util.LinkedList<org.apache.commons.pool.impl.GenericObjectPool$Latch<T>> _allocationQueue;

  public org.apache.commons.pool.impl.GenericObjectPool();
    Code:
       0: aload_0
       1: aconst_null
       2: bipush        8
       4: iconst_1
       5: ldc2_w        #2                  // long -1l
       8: bipush        8
      10: iconst_0
      11: iconst_0
      12: iconst_0
      13: ldc2_w        #2                  // long -1l
      16: iconst_3
      17: ldc2_w        #4                  // long 1800000l
      20: iconst_0
      21: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      24: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        8
       4: iconst_1
       5: ldc2_w        #2                  // long -1l
       8: bipush        8
      10: iconst_0
      11: iconst_0
      12: iconst_0
      13: ldc2_w        #2                  // long -1l
      16: iconst_3
      17: ldc2_w        #4                  // long 1800000l
      20: iconst_0
      21: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      24: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, org.apache.commons.pool.impl.GenericObjectPool$Config);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getfield      #7                  // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxActive:I
       6: aload_2
       7: getfield      #8                  // Field org/apache/commons/pool/impl/GenericObjectPool$Config.whenExhaustedAction:B
      10: aload_2
      11: getfield      #9                  // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxWait:J
      14: aload_2
      15: getfield      #10                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxIdle:I
      18: aload_2
      19: getfield      #11                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.minIdle:I
      22: aload_2
      23: getfield      #12                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testOnBorrow:Z
      26: aload_2
      27: getfield      #13                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testOnReturn:Z
      30: aload_2
      31: getfield      #14                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.timeBetweenEvictionRunsMillis:J
      34: aload_2
      35: getfield      #15                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.numTestsPerEvictionRun:I
      38: aload_2
      39: getfield      #16                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.minEvictableIdleTimeMillis:J
      42: aload_2
      43: getfield      #17                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testWhileIdle:Z
      46: aload_2
      47: getfield      #18                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.softMinEvictableIdleTimeMillis:J
      50: aload_2
      51: getfield      #19                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.lifo:Z
      54: invokespecial #20                 // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZJZ)V
      57: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: ldc2_w        #2                  // long -1l
       7: bipush        8
       9: iconst_0
      10: iconst_0
      11: iconst_0
      12: ldc2_w        #2                  // long -1l
      15: iconst_3
      16: ldc2_w        #4                  // long 1800000l
      19: iconst_0
      20: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      23: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: bipush        8
       8: iconst_0
       9: iconst_0
      10: iconst_0
      11: ldc2_w        #2                  // long -1l
      14: iconst_3
      15: ldc2_w        #4                  // long 1800000l
      18: iconst_0
      19: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      22: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: bipush        8
       8: iconst_0
       9: iload         6
      11: iload         7
      13: ldc2_w        #2                  // long -1l
      16: iconst_3
      17: ldc2_w        #4                  // long 1800000l
      20: iconst_0
      21: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      24: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: iload         6
       8: iconst_0
       9: iconst_0
      10: iconst_0
      11: ldc2_w        #2                  // long -1l
      14: iconst_3
      15: ldc2_w        #4                  // long 1800000l
      18: iconst_0
      19: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      22: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long, int, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: iload         6
       8: iconst_0
       9: iload         7
      11: iload         8
      13: ldc2_w        #2                  // long -1l
      16: iconst_3
      17: ldc2_w        #4                  // long 1800000l
      20: iconst_0
      21: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      24: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long, int, boolean, boolean, long, int, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: iload         6
       8: iconst_0
       9: iload         7
      11: iload         8
      13: lload         9
      15: iload         11
      17: lload         12
      19: iload         14
      21: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZ)V
      24: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long, int, int, boolean, boolean, long, int, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: iload         6
       8: iload         7
      10: iload         8
      12: iload         9
      14: lload         10
      16: iload         12
      18: lload         13
      20: iload         15
      22: ldc2_w        #2                  // long -1l
      25: invokespecial #21                 // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZJ)V
      28: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long, int, int, boolean, boolean, long, int, long, boolean, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: iload         6
       8: iload         7
      10: iload         8
      12: iload         9
      14: lload         10
      16: iload         12
      18: lload         13
      20: iload         15
      22: lload         16
      24: iconst_1
      25: invokespecial #20                 // Method "<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;IBJIIZZJIJZJZ)V
      28: return

  public org.apache.commons.pool.impl.GenericObjectPool(org.apache.commons.pool.PoolableObjectFactory<T>, int, byte, long, int, int, boolean, boolean, long, int, long, boolean, long, boolean);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/apache/commons/pool/BaseObjectPool."<init>":()V
       4: aload_0
       5: bipush        8
       7: putfield      #23                 // Field _maxIdle:I
      10: aload_0
      11: iconst_0
      12: putfield      #24                 // Field _minIdle:I
      15: aload_0
      16: bipush        8
      18: putfield      #25                 // Field _maxActive:I
      21: aload_0
      22: ldc2_w        #2                  // long -1l
      25: putfield      #26                 // Field _maxWait:J
      28: aload_0
      29: iconst_1
      30: putfield      #27                 // Field _whenExhaustedAction:B
      33: aload_0
      34: iconst_0
      35: putfield      #28                 // Field _testOnBorrow:Z
      38: aload_0
      39: iconst_0
      40: putfield      #29                 // Field _testOnReturn:Z
      43: aload_0
      44: iconst_0
      45: putfield      #30                 // Field _testWhileIdle:Z
      48: aload_0
      49: ldc2_w        #2                  // long -1l
      52: putfield      #31                 // Field _timeBetweenEvictionRunsMillis:J
      55: aload_0
      56: iconst_3
      57: putfield      #32                 // Field _numTestsPerEvictionRun:I
      60: aload_0
      61: ldc2_w        #4                  // long 1800000l
      64: putfield      #33                 // Field _minEvictableIdleTimeMillis:J
      67: aload_0
      68: ldc2_w        #2                  // long -1l
      71: putfield      #34                 // Field _softMinEvictableIdleTimeMillis:J
      74: aload_0
      75: iconst_1
      76: putfield      #35                 // Field _lifo:Z
      79: aload_0
      80: aconst_null
      81: putfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      84: aload_0
      85: aconst_null
      86: putfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
      89: aload_0
      90: aconst_null
      91: putfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      94: aload_0
      95: iconst_0
      96: putfield      #39                 // Field _numActive:I
      99: aload_0
     100: aconst_null
     101: putfield      #40                 // Field _evictor:Lorg/apache/commons/pool/impl/GenericObjectPool$Evictor;
     104: aload_0
     105: iconst_0
     106: putfield      #41                 // Field _numInternalProcessing:I
     109: aload_0
     110: new           #42                 // class java/util/LinkedList
     113: dup
     114: invokespecial #43                 // Method java/util/LinkedList."<init>":()V
     117: putfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
     120: aload_0
     121: aload_1
     122: putfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     125: aload_0
     126: iload_2
     127: putfield      #25                 // Field _maxActive:I
     130: aload_0
     131: iload         18
     133: putfield      #35                 // Field _lifo:Z
     136: iload_3
     137: tableswitch   { // 0 to 2
                     0: 164
                     1: 164
                     2: 164
               default: 172
          }
     164: aload_0
     165: iload_3
     166: putfield      #27                 // Field _whenExhaustedAction:B
     169: goto          204
     172: new           #45                 // class java/lang/IllegalArgumentException
     175: dup
     176: new           #46                 // class java/lang/StringBuilder
     179: dup
     180: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     183: ldc           #48                 // String whenExhaustedAction
     185: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: iload_3
     189: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     192: ldc           #51                 // String  not recognized.
     194: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     203: athrow
     204: aload_0
     205: lload         4
     207: putfield      #26                 // Field _maxWait:J
     210: aload_0
     211: iload         6
     213: putfield      #23                 // Field _maxIdle:I
     216: aload_0
     217: iload         7
     219: putfield      #24                 // Field _minIdle:I
     222: aload_0
     223: iload         8
     225: putfield      #28                 // Field _testOnBorrow:Z
     228: aload_0
     229: iload         9
     231: putfield      #29                 // Field _testOnReturn:Z
     234: aload_0
     235: lload         10
     237: putfield      #31                 // Field _timeBetweenEvictionRunsMillis:J
     240: aload_0
     241: iload         12
     243: putfield      #32                 // Field _numTestsPerEvictionRun:I
     246: aload_0
     247: lload         13
     249: putfield      #33                 // Field _minEvictableIdleTimeMillis:J
     252: aload_0
     253: lload         16
     255: putfield      #34                 // Field _softMinEvictableIdleTimeMillis:J
     258: aload_0
     259: iload         15
     261: putfield      #30                 // Field _testWhileIdle:Z
     264: aload_0
     265: new           #54                 // class org/apache/commons/pool/impl/CursorableLinkedList
     268: dup
     269: invokespecial #55                 // Method org/apache/commons/pool/impl/CursorableLinkedList."<init>":()V
     272: putfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
     275: aload_0
     276: aload_0
     277: getfield      #31                 // Field _timeBetweenEvictionRunsMillis:J
     280: invokevirtual #56                 // Method startEvictor:(J)V
     283: return

  public synchronized int getMaxActive();
    Code:
       0: aload_0
       1: getfield      #25                 // Field _maxActive:I
       4: ireturn

  public void setMaxActive(int);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: iload_1
       6: putfield      #25                 // Field _maxActive:I
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: aload_0
      20: invokespecial #57                 // Method allocate:()V
      23: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public synchronized byte getWhenExhaustedAction();
    Code:
       0: aload_0
       1: getfield      #27                 // Field _whenExhaustedAction:B
       4: ireturn

  public void setWhenExhaustedAction(byte);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: iload_1
       5: tableswitch   { // 0 to 2
                     0: 32
                     1: 32
                     2: 32
               default: 40
          }
      32: aload_0
      33: iload_1
      34: putfield      #27                 // Field _whenExhaustedAction:B
      37: goto          72
      40: new           #45                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #46                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #48                 // String whenExhaustedAction
      53: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_1
      57: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: ldc           #51                 // String  not recognized.
      62: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_2
      73: monitorexit
      74: goto          82
      77: astore_3
      78: aload_2
      79: monitorexit
      80: aload_3
      81: athrow
      82: aload_0
      83: invokespecial #57                 // Method allocate:()V
      86: return
    Exception table:
       from    to  target type
           4    74    77   any
          77    80    77   any

  public synchronized long getMaxWait();
    Code:
       0: aload_0
       1: getfield      #26                 // Field _maxWait:J
       4: lreturn

  public void setMaxWait(long);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: lload_1
       6: putfield      #26                 // Field _maxWait:J
       9: aload_3
      10: monitorexit
      11: goto          21
      14: astore        4
      16: aload_3
      17: monitorexit
      18: aload         4
      20: athrow
      21: aload_0
      22: invokespecial #57                 // Method allocate:()V
      25: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    18    14   any

  public synchronized int getMaxIdle();
    Code:
       0: aload_0
       1: getfield      #23                 // Field _maxIdle:I
       4: ireturn

  public void setMaxIdle(int);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: iload_1
       6: putfield      #23                 // Field _maxIdle:I
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: aload_0
      20: invokespecial #57                 // Method allocate:()V
      23: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public void setMinIdle(int);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: iload_1
       6: putfield      #24                 // Field _minIdle:I
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: aload_0
      20: invokespecial #57                 // Method allocate:()V
      23: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public synchronized int getMinIdle();
    Code:
       0: aload_0
       1: getfield      #24                 // Field _minIdle:I
       4: ireturn

  public boolean getTestOnBorrow();
    Code:
       0: aload_0
       1: getfield      #28                 // Field _testOnBorrow:Z
       4: ireturn

  public void setTestOnBorrow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field _testOnBorrow:Z
       5: return

  public boolean getTestOnReturn();
    Code:
       0: aload_0
       1: getfield      #29                 // Field _testOnReturn:Z
       4: ireturn

  public void setTestOnReturn(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field _testOnReturn:Z
       5: return

  public synchronized long getTimeBetweenEvictionRunsMillis();
    Code:
       0: aload_0
       1: getfield      #31                 // Field _timeBetweenEvictionRunsMillis:J
       4: lreturn

  public synchronized void setTimeBetweenEvictionRunsMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #31                 // Field _timeBetweenEvictionRunsMillis:J
       5: aload_0
       6: aload_0
       7: getfield      #31                 // Field _timeBetweenEvictionRunsMillis:J
      10: invokevirtual #56                 // Method startEvictor:(J)V
      13: return

  public synchronized int getNumTestsPerEvictionRun();
    Code:
       0: aload_0
       1: getfield      #32                 // Field _numTestsPerEvictionRun:I
       4: ireturn

  public synchronized void setNumTestsPerEvictionRun(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field _numTestsPerEvictionRun:I
       5: return

  public synchronized long getMinEvictableIdleTimeMillis();
    Code:
       0: aload_0
       1: getfield      #33                 // Field _minEvictableIdleTimeMillis:J
       4: lreturn

  public synchronized void setMinEvictableIdleTimeMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #33                 // Field _minEvictableIdleTimeMillis:J
       5: return

  public synchronized long getSoftMinEvictableIdleTimeMillis();
    Code:
       0: aload_0
       1: getfield      #34                 // Field _softMinEvictableIdleTimeMillis:J
       4: lreturn

  public synchronized void setSoftMinEvictableIdleTimeMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #34                 // Field _softMinEvictableIdleTimeMillis:J
       5: return

  public synchronized boolean getTestWhileIdle();
    Code:
       0: aload_0
       1: getfield      #30                 // Field _testWhileIdle:Z
       4: ireturn

  public synchronized void setTestWhileIdle(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field _testWhileIdle:Z
       5: return

  public synchronized boolean getLifo();
    Code:
       0: aload_0
       1: getfield      #35                 // Field _lifo:Z
       4: ireturn

  public synchronized void setLifo(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field _lifo:Z
       5: return

  public void setConfig(org.apache.commons.pool.impl.GenericObjectPool$Config);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aload_1
       6: getfield      #10                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxIdle:I
       9: invokevirtual #58                 // Method setMaxIdle:(I)V
      12: aload_0
      13: aload_1
      14: getfield      #11                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.minIdle:I
      17: invokevirtual #59                 // Method setMinIdle:(I)V
      20: aload_0
      21: aload_1
      22: getfield      #7                  // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxActive:I
      25: invokevirtual #60                 // Method setMaxActive:(I)V
      28: aload_0
      29: aload_1
      30: getfield      #9                  // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxWait:J
      33: invokevirtual #61                 // Method setMaxWait:(J)V
      36: aload_0
      37: aload_1
      38: getfield      #8                  // Field org/apache/commons/pool/impl/GenericObjectPool$Config.whenExhaustedAction:B
      41: invokevirtual #62                 // Method setWhenExhaustedAction:(B)V
      44: aload_0
      45: aload_1
      46: getfield      #12                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testOnBorrow:Z
      49: invokevirtual #63                 // Method setTestOnBorrow:(Z)V
      52: aload_0
      53: aload_1
      54: getfield      #13                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testOnReturn:Z
      57: invokevirtual #64                 // Method setTestOnReturn:(Z)V
      60: aload_0
      61: aload_1
      62: getfield      #17                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testWhileIdle:Z
      65: invokevirtual #65                 // Method setTestWhileIdle:(Z)V
      68: aload_0
      69: aload_1
      70: getfield      #15                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.numTestsPerEvictionRun:I
      73: invokevirtual #66                 // Method setNumTestsPerEvictionRun:(I)V
      76: aload_0
      77: aload_1
      78: getfield      #16                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.minEvictableIdleTimeMillis:J
      81: invokevirtual #67                 // Method setMinEvictableIdleTimeMillis:(J)V
      84: aload_0
      85: aload_1
      86: getfield      #14                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.timeBetweenEvictionRunsMillis:J
      89: invokevirtual #68                 // Method setTimeBetweenEvictionRunsMillis:(J)V
      92: aload_0
      93: aload_1
      94: getfield      #18                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.softMinEvictableIdleTimeMillis:J
      97: invokevirtual #69                 // Method setSoftMinEvictableIdleTimeMillis:(J)V
     100: aload_0
     101: aload_1
     102: getfield      #19                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.lifo:Z
     105: invokevirtual #70                 // Method setLifo:(Z)V
     108: aload_2
     109: monitorexit
     110: goto          118
     113: astore_3
     114: aload_2
     115: monitorexit
     116: aload_3
     117: athrow
     118: aload_0
     119: invokespecial #57                 // Method allocate:()V
     122: return
    Exception table:
       from    to  target type
           4   110   113   any
         113   116   113   any

  public T borrowObject() throws java.lang.Exception;
    Code:
       0: invokestatic  #71                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: new           #72                 // class org/apache/commons/pool/impl/GenericObjectPool$Latch
       7: dup
       8: aconst_null
       9: invokespecial #73                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch."<init>":(Lorg/apache/commons/pool/impl/GenericObjectPool$1;)V
      12: astore_3
      13: aload_0
      14: dup
      15: astore        7
      17: monitorenter
      18: aload_0
      19: getfield      #27                 // Field _whenExhaustedAction:B
      22: istore        4
      24: aload_0
      25: getfield      #26                 // Field _maxWait:J
      28: lstore        5
      30: aload_0
      31: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
      34: aload_3
      35: invokevirtual #74                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload         7
      41: monitorexit
      42: goto          53
      45: astore        8
      47: aload         7
      49: monitorexit
      50: aload         8
      52: athrow
      53: aload_0
      54: invokespecial #57                 // Method allocate:()V
      57: aload_0
      58: dup
      59: astore        7
      61: monitorenter
      62: aload_0
      63: invokevirtual #75                 // Method assertOpen:()V
      66: aload         7
      68: monitorexit
      69: goto          80
      72: astore        9
      74: aload         7
      76: monitorexit
      77: aload         9
      79: athrow
      80: aload_3
      81: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
      84: ifnonnull     582
      87: aload_3
      88: invokestatic  #77                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$200:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Z
      91: ifeq          97
      94: goto          582
      97: iload         4
      99: tableswitch   { // 0 to 2
                     0: 179
                     1: 237
                     2: 124
               default: 549
          }
     124: aload_0
     125: dup
     126: astore        7
     128: monitorenter
     129: aload_3
     130: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     133: ifnonnull     162
     136: aload_3
     137: invokestatic  #77                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$200:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Z
     140: ifne          162
     143: aload_0
     144: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
     147: aload_3
     148: invokevirtual #78                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     151: pop
     152: aload_0
     153: dup
     154: getfield      #41                 // Field _numInternalProcessing:I
     157: iconst_1
     158: iadd
     159: putfield      #41                 // Field _numInternalProcessing:I
     162: aload         7
     164: monitorexit
     165: goto          176
     168: astore        10
     170: aload         7
     172: monitorexit
     173: aload         10
     175: athrow
     176: goto          582
     179: aload_0
     180: dup
     181: astore        7
     183: monitorenter
     184: aload_3
     185: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     188: ifnonnull     198
     191: aload_3
     192: invokestatic  #77                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$200:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Z
     195: ifeq          204
     198: aload         7
     200: monitorexit
     201: goto          582
     204: aload_0
     205: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
     208: aload_3
     209: invokevirtual #78                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     212: pop
     213: aload         7
     215: monitorexit
     216: goto          227
     219: astore        11
     221: aload         7
     223: monitorexit
     224: aload         11
     226: athrow
     227: new           #79                 // class java/util/NoSuchElementException
     230: dup
     231: ldc           #80                 // String Pool exhausted
     233: invokespecial #81                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
     236: athrow
     237: aload_3
     238: dup
     239: astore        7
     241: monitorenter
     242: aload_3
     243: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     246: ifnonnull     300
     249: aload_3
     250: invokestatic  #77                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$200:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Z
     253: ifne          300
     256: lload         5
     258: lconst_0
     259: lcmp
     260: ifgt          270
     263: aload_3
     264: invokevirtual #82                 // Method java/lang/Object.wait:()V
     267: goto          306
     270: invokestatic  #71                 // Method java/lang/System.currentTimeMillis:()J
     273: lload_1
     274: lsub
     275: lstore        8
     277: lload         5
     279: lload         8
     281: lsub
     282: lstore        10
     284: lload         10
     286: lconst_0
     287: lcmp
     288: ifle          297
     291: aload_3
     292: lload         10
     294: invokevirtual #83                 // Method java/lang/Object.wait:(J)V
     297: goto          306
     300: aload         7
     302: monitorexit
     303: goto          582
     306: aload         7
     308: monitorexit
     309: goto          320
     312: astore        12
     314: aload         7
     316: monitorexit
     317: aload         12
     319: athrow
     320: aload_0
     321: invokevirtual #84                 // Method isClosed:()Z
     324: iconst_1
     325: if_icmpne     338
     328: new           #85                 // class java/lang/IllegalStateException
     331: dup
     332: ldc           #86                 // String Pool closed
     334: invokespecial #87                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     337: athrow
     338: goto          470
     341: astore        7
     343: iconst_0
     344: istore        8
     346: aload_0
     347: dup
     348: astore        9
     350: monitorenter
     351: aload_3
     352: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     355: ifnonnull     377
     358: aload_3
     359: invokestatic  #77                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$200:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Z
     362: ifne          377
     365: aload_0
     366: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
     369: aload_3
     370: invokevirtual #78                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     373: pop
     374: goto          438
     377: aload_3
     378: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     381: ifnonnull     407
     384: aload_3
     385: invokestatic  #77                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$200:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Z
     388: ifeq          407
     391: aload_0
     392: dup
     393: getfield      #41                 // Field _numInternalProcessing:I
     396: iconst_1
     397: isub
     398: putfield      #41                 // Field _numInternalProcessing:I
     401: iconst_1
     402: istore        8
     404: goto          438
     407: aload_0
     408: dup
     409: getfield      #41                 // Field _numInternalProcessing:I
     412: iconst_1
     413: isub
     414: putfield      #41                 // Field _numInternalProcessing:I
     417: aload_0
     418: dup
     419: getfield      #39                 // Field _numActive:I
     422: iconst_1
     423: iadd
     424: putfield      #39                 // Field _numActive:I
     427: aload_0
     428: aload_3
     429: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     432: invokevirtual #89                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.getValue:()Ljava/lang/Object;
     435: invokevirtual #90                 // Method returnObject:(Ljava/lang/Object;)V
     438: aload         9
     440: monitorexit
     441: goto          452
     444: astore        13
     446: aload         9
     448: monitorexit
     449: aload         13
     451: athrow
     452: iload         8
     454: ifeq          461
     457: aload_0
     458: invokespecial #57                 // Method allocate:()V
     461: invokestatic  #91                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     464: invokevirtual #92                 // Method java/lang/Thread.interrupt:()V
     467: aload         7
     469: athrow
     470: lload         5
     472: lconst_0
     473: lcmp
     474: ifle          57
     477: invokestatic  #71                 // Method java/lang/System.currentTimeMillis:()J
     480: lload_1
     481: lsub
     482: lload         5
     484: lcmp
     485: iflt          57
     488: aload_0
     489: dup
     490: astore        7
     492: monitorenter
     493: aload_3
     494: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     497: ifnonnull     519
     500: aload_3
     501: invokestatic  #77                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$200:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Z
     504: ifne          519
     507: aload_0
     508: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
     511: aload_3
     512: invokevirtual #78                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     515: pop
     516: goto          525
     519: aload         7
     521: monitorexit
     522: goto          582
     525: aload         7
     527: monitorexit
     528: goto          539
     531: astore        14
     533: aload         7
     535: monitorexit
     536: aload         14
     538: athrow
     539: new           #79                 // class java/util/NoSuchElementException
     542: dup
     543: ldc           #93                 // String Timeout waiting for idle object
     545: invokespecial #81                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
     548: athrow
     549: new           #45                 // class java/lang/IllegalArgumentException
     552: dup
     553: new           #46                 // class java/lang/StringBuilder
     556: dup
     557: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     560: ldc           #94                 // String WhenExhaustedAction property
     562: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     565: iload         4
     567: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     570: ldc           #51                 // String  not recognized.
     572: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     575: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     578: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     581: athrow
     582: iconst_0
     583: istore        7
     585: aconst_null
     586: aload_3
     587: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     590: if_acmpne     704
     593: aload_0
     594: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     597: invokeinterface #95,  1           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.makeObject:()Ljava/lang/Object;
     602: astore        8
     604: aload_3
     605: new           #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
     608: dup
     609: aload         8
     611: invokespecial #97                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair."<init>":(Ljava/lang/Object;)V
     614: invokestatic  #98                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$300:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;)V
     617: iconst_1
     618: istore        7
     620: iload         7
     622: ifne          704
     625: aload_0
     626: dup
     627: astore        8
     629: monitorenter
     630: aload_0
     631: dup
     632: getfield      #41                 // Field _numInternalProcessing:I
     635: iconst_1
     636: isub
     637: putfield      #41                 // Field _numInternalProcessing:I
     640: aload         8
     642: monitorexit
     643: goto          654
     646: astore        15
     648: aload         8
     650: monitorexit
     651: aload         15
     653: athrow
     654: aload_0
     655: invokespecial #57                 // Method allocate:()V
     658: goto          704
     661: astore        16
     663: iload         7
     665: ifne          701
     668: aload_0
     669: dup
     670: astore        17
     672: monitorenter
     673: aload_0
     674: dup
     675: getfield      #41                 // Field _numInternalProcessing:I
     678: iconst_1
     679: isub
     680: putfield      #41                 // Field _numInternalProcessing:I
     683: aload         17
     685: monitorexit
     686: goto          697
     689: astore        18
     691: aload         17
     693: monitorexit
     694: aload         18
     696: athrow
     697: aload_0
     698: invokespecial #57                 // Method allocate:()V
     701: aload         16
     703: athrow
     704: aload_0
     705: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     708: aload_3
     709: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     712: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     715: invokeinterface #100,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.activateObject:(Ljava/lang/Object;)V
     720: aload_0
     721: getfield      #28                 // Field _testOnBorrow:Z
     724: ifeq          756
     727: aload_0
     728: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     731: aload_3
     732: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     735: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     738: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.validateObject:(Ljava/lang/Object;)Z
     743: ifne          756
     746: new           #102                // class java/lang/Exception
     749: dup
     750: ldc           #103                // String ValidateObject failed
     752: invokespecial #104                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     755: athrow
     756: aload_0
     757: dup
     758: astore        8
     760: monitorenter
     761: aload_0
     762: dup
     763: getfield      #41                 // Field _numInternalProcessing:I
     766: iconst_1
     767: isub
     768: putfield      #41                 // Field _numInternalProcessing:I
     771: aload_0
     772: dup
     773: getfield      #39                 // Field _numActive:I
     776: iconst_1
     777: iadd
     778: putfield      #39                 // Field _numActive:I
     781: aload         8
     783: monitorexit
     784: goto          795
     787: astore        19
     789: aload         8
     791: monitorexit
     792: aload         19
     794: athrow
     795: aload_3
     796: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     799: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     802: areturn
     803: astore        8
     805: aload         8
     807: invokestatic  #106                // Method org/apache/commons/pool/PoolUtils.checkRethrow:(Ljava/lang/Throwable;)V
     810: aload_0
     811: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     814: aload_3
     815: invokestatic  #76                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$100:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;
     818: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     821: invokeinterface #107,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
     826: goto          836
     829: astore        9
     831: aload         9
     833: invokestatic  #106                // Method org/apache/commons/pool/PoolUtils.checkRethrow:(Ljava/lang/Throwable;)V
     836: aload_0
     837: dup
     838: astore        9
     840: monitorenter
     841: aload_0
     842: dup
     843: getfield      #41                 // Field _numInternalProcessing:I
     846: iconst_1
     847: isub
     848: putfield      #41                 // Field _numInternalProcessing:I
     851: iload         7
     853: ifne          869
     856: aload_3
     857: invokestatic  #108                // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$400:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;)V
     860: aload_0
     861: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
     864: iconst_0
     865: aload_3
     866: invokevirtual #109                // Method java/util/LinkedList.add:(ILjava/lang/Object;)V
     869: aload         9
     871: monitorexit
     872: goto          883
     875: astore        20
     877: aload         9
     879: monitorexit
     880: aload         20
     882: athrow
     883: aload_0
     884: invokespecial #57                 // Method allocate:()V
     887: iload         7
     889: ifeq          923
     892: new           #79                 // class java/util/NoSuchElementException
     895: dup
     896: new           #46                 // class java/lang/StringBuilder
     899: dup
     900: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     903: ldc           #110                // String Could not create a validated object, cause:
     905: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     908: aload         8
     910: invokevirtual #111                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     913: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     916: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     919: invokespecial #81                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
     922: athrow
     923: goto          57
    Exception table:
       from    to  target type
          18    42    45   any
          45    50    45   any
          62    69    72   any
          72    77    72   any
         129   165   168   any
         168   173   168   any
         184   201   219   any
         204   216   219   any
         219   224   219   any
         242   303   312   any
         306   309   312   any
         312   317   312   any
         237   303   341   Class java/lang/InterruptedException
         306   338   341   Class java/lang/InterruptedException
         351   441   444   any
         444   449   444   any
         493   522   531   any
         525   528   531   any
         531   536   531   any
         630   643   646   any
         646   651   646   any
         593   620   661   any
         673   686   689   any
         689   694   689   any
         661   663   661   any
         761   784   787   any
         787   792   787   any
         704   802   803   Class java/lang/Throwable
         810   826   829   Class java/lang/Throwable
         841   872   875   any
         875   880   875   any

  private synchronized void allocate();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method isClosed:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      12: invokevirtual #112                // Method org/apache/commons/pool/impl/CursorableLinkedList.isEmpty:()Z
      15: ifne          84
      18: aload_0
      19: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
      22: invokevirtual #113                // Method java/util/LinkedList.isEmpty:()Z
      25: ifne          84
      28: aload_0
      29: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
      32: invokevirtual #114                // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
      35: checkcast     #72                 // class org/apache/commons/pool/impl/GenericObjectPool$Latch
      38: astore_1
      39: aload_1
      40: aload_0
      41: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      44: invokevirtual #115                // Method org/apache/commons/pool/impl/CursorableLinkedList.removeFirst:()Ljava/lang/Object;
      47: checkcast     #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
      50: invokestatic  #98                 // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$300:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;Lorg/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair;)V
      53: aload_0
      54: dup
      55: getfield      #41                 // Field _numInternalProcessing:I
      58: iconst_1
      59: iadd
      60: putfield      #41                 // Field _numInternalProcessing:I
      63: aload_1
      64: dup
      65: astore_2
      66: monitorenter
      67: aload_1
      68: invokevirtual #116                // Method java/lang/Object.notify:()V
      71: aload_2
      72: monitorexit
      73: goto          81
      76: astore_3
      77: aload_2
      78: monitorexit
      79: aload_3
      80: athrow
      81: goto          8
      84: aload_0
      85: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
      88: invokevirtual #113                // Method java/util/LinkedList.isEmpty:()Z
      91: ifne          166
      94: aload_0
      95: getfield      #25                 // Field _maxActive:I
      98: iflt          117
     101: aload_0
     102: getfield      #39                 // Field _numActive:I
     105: aload_0
     106: getfield      #41                 // Field _numInternalProcessing:I
     109: iadd
     110: aload_0
     111: getfield      #25                 // Field _maxActive:I
     114: if_icmpge     166
     117: aload_0
     118: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
     121: invokevirtual #114                // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
     124: checkcast     #72                 // class org/apache/commons/pool/impl/GenericObjectPool$Latch
     127: astore_1
     128: aload_1
     129: iconst_1
     130: invokestatic  #117                // Method org/apache/commons/pool/impl/GenericObjectPool$Latch.access$500:(Lorg/apache/commons/pool/impl/GenericObjectPool$Latch;Z)V
     133: aload_0
     134: dup
     135: getfield      #41                 // Field _numInternalProcessing:I
     138: iconst_1
     139: iadd
     140: putfield      #41                 // Field _numInternalProcessing:I
     143: aload_1
     144: dup
     145: astore_2
     146: monitorenter
     147: aload_1
     148: invokevirtual #116                // Method java/lang/Object.notify:()V
     151: aload_2
     152: monitorexit
     153: goto          163
     156: astore        4
     158: aload_2
     159: monitorexit
     160: aload         4
     162: athrow
     163: goto          84
     166: return
    Exception table:
       from    to  target type
          67    73    76   any
          76    79    76   any
         147   153   156   any
         156   160   156   any

  public void invalidateObject(T) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       4: ifnull        17
       7: aload_0
       8: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      11: aload_1
      12: invokeinterface #107,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
      17: aload_0
      18: dup
      19: astore_2
      20: monitorenter
      21: aload_0
      22: dup
      23: getfield      #39                 // Field _numActive:I
      26: iconst_1
      27: isub
      28: putfield      #39                 // Field _numActive:I
      31: aload_2
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_2
      38: monitorexit
      39: aload_3
      40: athrow
      41: aload_0
      42: invokespecial #57                 // Method allocate:()V
      45: goto          86
      48: astore        4
      50: aload_0
      51: dup
      52: astore        5
      54: monitorenter
      55: aload_0
      56: dup
      57: getfield      #39                 // Field _numActive:I
      60: iconst_1
      61: isub
      62: putfield      #39                 // Field _numActive:I
      65: aload         5
      67: monitorexit
      68: goto          79
      71: astore        6
      73: aload         5
      75: monitorexit
      76: aload         6
      78: athrow
      79: aload_0
      80: invokespecial #57                 // Method allocate:()V
      83: aload         4
      85: athrow
      86: return
    Exception table:
       from    to  target type
          21    33    36   any
          36    39    36   any
           0    17    48   any
          55    68    71   any
          71    76    71   any
          48    50    48   any

  public void clear();
    Code:
       0: new           #118                // class java/util/ArrayList
       3: dup
       4: invokespecial #119                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_1
      13: aload_0
      14: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      17: invokeinterface #120,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      22: pop
      23: aload_0
      24: aload_0
      25: getfield      #41                 // Field _numInternalProcessing:I
      28: aload_0
      29: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      32: getfield      #121                // Field org/apache/commons/pool/impl/CursorableLinkedList._size:I
      35: iadd
      36: putfield      #41                 // Field _numInternalProcessing:I
      39: aload_0
      40: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      43: invokevirtual #122                // Method org/apache/commons/pool/impl/CursorableLinkedList.clear:()V
      46: aload_2
      47: monitorexit
      48: goto          56
      51: astore_3
      52: aload_2
      53: monitorexit
      54: aload_3
      55: athrow
      56: aload_0
      57: aload_1
      58: aload_0
      59: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      62: invokespecial #123                // Method destroy:(Ljava/util/Collection;Lorg/apache/commons/pool/PoolableObjectFactory;)V
      65: return
    Exception table:
       from    to  target type
          12    48    51   any
          51    54    51   any

  private void destroy(java.util.Collection<org.apache.commons.pool.impl.GenericKeyedObjectPool$ObjectTimestampPair<T>>, org.apache.commons.pool.PoolableObjectFactory<T>);
    Code:
       0: aload_1
       1: invokeinterface #124,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          149
      16: aload_2
      17: aload_3
      18: invokeinterface #126,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
      26: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
      29: invokeinterface #107,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
      34: aload_0
      35: dup
      36: astore        4
      38: monitorenter
      39: aload_0
      40: dup
      41: getfield      #41                 // Field _numInternalProcessing:I
      44: iconst_1
      45: isub
      46: putfield      #41                 // Field _numInternalProcessing:I
      49: aload         4
      51: monitorexit
      52: goto          63
      55: astore        5
      57: aload         4
      59: monitorexit
      60: aload         5
      62: athrow
      63: aload_0
      64: invokespecial #57                 // Method allocate:()V
      67: goto          146
      70: astore        4
      72: aload_0
      73: dup
      74: astore        4
      76: monitorenter
      77: aload_0
      78: dup
      79: getfield      #41                 // Field _numInternalProcessing:I
      82: iconst_1
      83: isub
      84: putfield      #41                 // Field _numInternalProcessing:I
      87: aload         4
      89: monitorexit
      90: goto          101
      93: astore        6
      95: aload         4
      97: monitorexit
      98: aload         6
     100: athrow
     101: aload_0
     102: invokespecial #57                 // Method allocate:()V
     105: goto          146
     108: astore        7
     110: aload_0
     111: dup
     112: astore        8
     114: monitorenter
     115: aload_0
     116: dup
     117: getfield      #41                 // Field _numInternalProcessing:I
     120: iconst_1
     121: isub
     122: putfield      #41                 // Field _numInternalProcessing:I
     125: aload         8
     127: monitorexit
     128: goto          139
     131: astore        9
     133: aload         8
     135: monitorexit
     136: aload         9
     138: athrow
     139: aload_0
     140: invokespecial #57                 // Method allocate:()V
     143: aload         7
     145: athrow
     146: goto          7
     149: return
    Exception table:
       from    to  target type
          39    52    55   any
          55    60    55   any
          16    34    70   Class java/lang/Exception
          77    90    93   any
          93    98    93   any
          16    34   108   any
          70    72   108   any
         115   128   131   any
         131   136   131   any
         108   110   108   any

  public synchronized int getNumActive();
    Code:
       0: aload_0
       1: getfield      #39                 // Field _numActive:I
       4: ireturn

  public synchronized int getNumIdle();
    Code:
       0: aload_0
       1: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
       4: invokevirtual #127                // Method org/apache/commons/pool/impl/CursorableLinkedList.size:()I
       7: ireturn

  public void returnObject(T) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #128                // Method addObjectToPool:(Ljava/lang/Object;Z)V
       6: goto          61
       9: astore_2
      10: aload_0
      11: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      14: ifnull        61
      17: aload_0
      18: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      21: aload_1
      22: invokeinterface #107,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
      27: goto          31
      30: astore_3
      31: aload_0
      32: dup
      33: astore_3
      34: monitorenter
      35: aload_0
      36: dup
      37: getfield      #39                 // Field _numActive:I
      40: iconst_1
      41: isub
      42: putfield      #39                 // Field _numActive:I
      45: aload_3
      46: monitorexit
      47: goto          57
      50: astore        4
      52: aload_3
      53: monitorexit
      54: aload         4
      56: athrow
      57: aload_0
      58: invokespecial #57                 // Method allocate:()V
      61: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception
          17    27    30   Class java/lang/Exception
          35    47    50   any
          50    54    50   any

  private void addObjectToPool(T, boolean) throws java.lang.Exception;
    Code:
       0: iconst_1
       1: istore_3
       2: aload_0
       3: getfield      #29                 // Field _testOnReturn:Z
       6: ifeq          27
       9: aload_0
      10: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      13: aload_1
      14: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.validateObject:(Ljava/lang/Object;)Z
      19: ifne          27
      22: iconst_0
      23: istore_3
      24: goto          37
      27: aload_0
      28: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      31: aload_1
      32: invokeinterface #129,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.passivateObject:(Ljava/lang/Object;)V
      37: iload_3
      38: ifne          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: istore        4
      48: iconst_0
      49: istore        5
      51: aload_0
      52: dup
      53: astore        6
      55: monitorenter
      56: aload_0
      57: invokevirtual #84                 // Method isClosed:()Z
      60: ifeq          69
      63: iconst_1
      64: istore        4
      66: goto          159
      69: aload_0
      70: getfield      #23                 // Field _maxIdle:I
      73: iflt          96
      76: aload_0
      77: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      80: invokevirtual #127                // Method org/apache/commons/pool/impl/CursorableLinkedList.size:()I
      83: aload_0
      84: getfield      #23                 // Field _maxIdle:I
      87: if_icmplt     96
      90: iconst_1
      91: istore        4
      93: goto          159
      96: iload_3
      97: ifeq          159
     100: aload_0
     101: getfield      #35                 // Field _lifo:Z
     104: ifeq          126
     107: aload_0
     108: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
     111: new           #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
     114: dup
     115: aload_1
     116: invokespecial #97                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair."<init>":(Ljava/lang/Object;)V
     119: invokevirtual #130                // Method org/apache/commons/pool/impl/CursorableLinkedList.addFirst:(Ljava/lang/Object;)Z
     122: pop
     123: goto          142
     126: aload_0
     127: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
     130: new           #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
     133: dup
     134: aload_1
     135: invokespecial #97                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair."<init>":(Ljava/lang/Object;)V
     138: invokevirtual #131                // Method org/apache/commons/pool/impl/CursorableLinkedList.addLast:(Ljava/lang/Object;)Z
     141: pop
     142: iload_2
     143: ifeq          156
     146: aload_0
     147: dup
     148: getfield      #39                 // Field _numActive:I
     151: iconst_1
     152: isub
     153: putfield      #39                 // Field _numActive:I
     156: iconst_1
     157: istore        5
     159: aload         6
     161: monitorexit
     162: goto          173
     165: astore        7
     167: aload         6
     169: monitorexit
     170: aload         7
     172: athrow
     173: iload         5
     175: ifeq          182
     178: aload_0
     179: invokespecial #57                 // Method allocate:()V
     182: iload         4
     184: ifeq          239
     187: aload_0
     188: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     191: aload_1
     192: invokeinterface #107,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
     197: goto          202
     200: astore        6
     202: iload_2
     203: ifeq          239
     206: aload_0
     207: dup
     208: astore        6
     210: monitorenter
     211: aload_0
     212: dup
     213: getfield      #39                 // Field _numActive:I
     216: iconst_1
     217: isub
     218: putfield      #39                 // Field _numActive:I
     221: aload         6
     223: monitorexit
     224: goto          235
     227: astore        8
     229: aload         6
     231: monitorexit
     232: aload         8
     234: athrow
     235: aload_0
     236: invokespecial #57                 // Method allocate:()V
     239: return
    Exception table:
       from    to  target type
          56   162   165   any
         165   170   165   any
         187   197   200   Class java/lang/Exception
         211   224   227   any
         227   232   227   any

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #132                // Method org/apache/commons/pool/BaseObjectPool.close:()V
       4: aload_0
       5: dup
       6: astore_1
       7: monitorenter
       8: aload_0
       9: invokevirtual #133                // Method clear:()V
      12: aload_0
      13: ldc2_w        #2                  // long -1l
      16: invokevirtual #56                 // Method startEvictor:(J)V
      19: aload_0
      20: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
      23: invokevirtual #134                // Method java/util/LinkedList.size:()I
      26: ifle          63
      29: aload_0
      30: getfield      #44                 // Field _allocationQueue:Ljava/util/LinkedList;
      33: invokevirtual #114                // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
      36: checkcast     #72                 // class org/apache/commons/pool/impl/GenericObjectPool$Latch
      39: astore_2
      40: aload_2
      41: dup
      42: astore_3
      43: monitorenter
      44: aload_2
      45: invokevirtual #116                // Method java/lang/Object.notify:()V
      48: aload_3
      49: monitorexit
      50: goto          60
      53: astore        4
      55: aload_3
      56: monitorexit
      57: aload         4
      59: athrow
      60: goto          19
      63: aload_1
      64: monitorexit
      65: goto          75
      68: astore        5
      70: aload_1
      71: monitorexit
      72: aload         5
      74: athrow
      75: return
    Exception table:
       from    to  target type
          44    50    53   any
          53    57    53   any
           8    65    68   any
          68    72    68   any

  public void setFactory(org.apache.commons.pool.PoolableObjectFactory<T>) throws java.lang.IllegalStateException;
    Code:
       0: new           #118                // class java/util/ArrayList
       3: dup
       4: invokespecial #119                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      12: astore_3
      13: aload_0
      14: dup
      15: astore        4
      17: monitorenter
      18: aload_0
      19: invokevirtual #75                 // Method assertOpen:()V
      22: iconst_0
      23: aload_0
      24: invokevirtual #135                // Method getNumActive:()I
      27: if_icmpge     40
      30: new           #85                 // class java/lang/IllegalStateException
      33: dup
      34: ldc           #136                // String Objects are already active
      36: invokespecial #87                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: aload_0
      42: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      45: invokeinterface #120,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      50: pop
      51: aload_0
      52: aload_0
      53: getfield      #41                 // Field _numInternalProcessing:I
      56: aload_0
      57: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      60: getfield      #121                // Field org/apache/commons/pool/impl/CursorableLinkedList._size:I
      63: iadd
      64: putfield      #41                 // Field _numInternalProcessing:I
      67: aload_0
      68: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      71: invokevirtual #122                // Method org/apache/commons/pool/impl/CursorableLinkedList.clear:()V
      74: aload_0
      75: aload_1
      76: putfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      79: aload         4
      81: monitorexit
      82: goto          93
      85: astore        5
      87: aload         4
      89: monitorexit
      90: aload         5
      92: athrow
      93: aload_0
      94: aload_2
      95: aload_3
      96: invokespecial #123                // Method destroy:(Ljava/util/Collection;Lorg/apache/commons/pool/PoolableObjectFactory;)V
      99: return
    Exception table:
       from    to  target type
          18    82    85   any
          85    90    85   any

  public void evict() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method assertOpen:()V
       4: aload_0
       5: dup
       6: astore_1
       7: monitorenter
       8: aload_0
       9: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      12: invokevirtual #112                // Method org/apache/commons/pool/impl/CursorableLinkedList.isEmpty:()Z
      15: ifeq          21
      18: aload_1
      19: monitorexit
      20: return
      21: aconst_null
      22: aload_0
      23: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
      26: if_acmpne     58
      29: aload_0
      30: aload_0
      31: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      34: aload_0
      35: getfield      #35                 // Field _lifo:Z
      38: ifeq          51
      41: aload_0
      42: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      45: invokevirtual #127                // Method org/apache/commons/pool/impl/CursorableLinkedList.size:()I
      48: goto          52
      51: iconst_0
      52: invokevirtual #137                // Method org/apache/commons/pool/impl/CursorableLinkedList.cursor:(I)Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
      55: putfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
      58: aload_1
      59: monitorexit
      60: goto          68
      63: astore_2
      64: aload_1
      65: monitorexit
      66: aload_2
      67: athrow
      68: iconst_0
      69: istore_1
      70: aload_0
      71: invokespecial #138                // Method getNumTests:()I
      74: istore_2
      75: iload_1
      76: iload_2
      77: if_icmpge     463
      80: aload_0
      81: dup
      82: astore        4
      84: monitorenter
      85: aload_0
      86: getfield      #35                 // Field _lifo:Z
      89: ifeq          102
      92: aload_0
      93: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
      96: invokevirtual #139                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.hasPrevious:()Z
      99: ifeq          119
     102: aload_0
     103: getfield      #35                 // Field _lifo:Z
     106: ifne          155
     109: aload_0
     110: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     113: invokevirtual #140                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.hasNext:()Z
     116: ifne          155
     119: aload_0
     120: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     123: invokevirtual #141                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.close:()V
     126: aload_0
     127: aload_0
     128: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
     131: aload_0
     132: getfield      #35                 // Field _lifo:Z
     135: ifeq          148
     138: aload_0
     139: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
     142: invokevirtual #127                // Method org/apache/commons/pool/impl/CursorableLinkedList.size:()I
     145: goto          149
     148: iconst_0
     149: invokevirtual #137                // Method org/apache/commons/pool/impl/CursorableLinkedList.cursor:(I)Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     152: putfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     155: aload_0
     156: getfield      #35                 // Field _lifo:Z
     159: ifeq          175
     162: aload_0
     163: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     166: invokevirtual #142                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.previous:()Ljava/lang/Object;
     169: checkcast     #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
     172: goto          185
     175: aload_0
     176: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     179: invokevirtual #143                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.next:()Ljava/lang/Object;
     182: checkcast     #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
     185: astore_3
     186: aload_0
     187: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     190: invokevirtual #144                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.remove:()V
     193: aload_0
     194: dup
     195: getfield      #41                 // Field _numInternalProcessing:I
     198: iconst_1
     199: iadd
     200: putfield      #41                 // Field _numInternalProcessing:I
     203: aload         4
     205: monitorexit
     206: goto          217
     209: astore        5
     211: aload         4
     213: monitorexit
     214: aload         5
     216: athrow
     217: iconst_0
     218: istore        4
     220: invokestatic  #71                 // Method java/lang/System.currentTimeMillis:()J
     223: aload_3
     224: getfield      #145                // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.tstamp:J
     227: lsub
     228: lstore        5
     230: aload_0
     231: invokevirtual #146                // Method getMinEvictableIdleTimeMillis:()J
     234: lconst_0
     235: lcmp
     236: ifle          255
     239: lload         5
     241: aload_0
     242: invokevirtual #146                // Method getMinEvictableIdleTimeMillis:()J
     245: lcmp
     246: ifle          255
     249: iconst_1
     250: istore        4
     252: goto          290
     255: aload_0
     256: invokevirtual #147                // Method getSoftMinEvictableIdleTimeMillis:()J
     259: lconst_0
     260: lcmp
     261: ifle          290
     264: lload         5
     266: aload_0
     267: invokevirtual #147                // Method getSoftMinEvictableIdleTimeMillis:()J
     270: lcmp
     271: ifle          290
     274: aload_0
     275: invokevirtual #148                // Method getNumIdle:()I
     278: iconst_1
     279: iadd
     280: aload_0
     281: invokevirtual #149                // Method getMinIdle:()I
     284: if_icmple     290
     287: iconst_1
     288: istore        4
     290: aload_0
     291: invokevirtual #150                // Method getTestWhileIdle:()Z
     294: ifeq          377
     297: iload         4
     299: ifne          377
     302: iconst_0
     303: istore        7
     305: aload_0
     306: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     309: aload_3
     310: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     313: invokeinterface #100,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.activateObject:(Ljava/lang/Object;)V
     318: iconst_1
     319: istore        7
     321: goto          329
     324: astore        8
     326: iconst_1
     327: istore        4
     329: iload         7
     331: ifeq          377
     334: aload_0
     335: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     338: aload_3
     339: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     342: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.validateObject:(Ljava/lang/Object;)Z
     347: ifne          356
     350: iconst_1
     351: istore        4
     353: goto          377
     356: aload_0
     357: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     360: aload_3
     361: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     364: invokeinterface #129,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.passivateObject:(Ljava/lang/Object;)V
     369: goto          377
     372: astore        8
     374: iconst_1
     375: istore        4
     377: iload         4
     379: ifeq          400
     382: aload_0
     383: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
     386: aload_3
     387: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
     390: invokeinterface #107,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
     395: goto          400
     398: astore        7
     400: aload_0
     401: dup
     402: astore        7
     404: monitorenter
     405: iload         4
     407: ifne          433
     410: aload_0
     411: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     414: aload_3
     415: invokevirtual #151                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.add:(Ljava/lang/Object;)V
     418: aload_0
     419: getfield      #35                 // Field _lifo:Z
     422: ifeq          433
     425: aload_0
     426: getfield      #37                 // Field _evictionCursor:Lorg/apache/commons/pool/impl/CursorableLinkedList$Cursor;
     429: invokevirtual #142                // Method org/apache/commons/pool/impl/CursorableLinkedList$Cursor.previous:()Ljava/lang/Object;
     432: pop
     433: aload_0
     434: dup
     435: getfield      #41                 // Field _numInternalProcessing:I
     438: iconst_1
     439: isub
     440: putfield      #41                 // Field _numInternalProcessing:I
     443: aload         7
     445: monitorexit
     446: goto          457
     449: astore        9
     451: aload         7
     453: monitorexit
     454: aload         9
     456: athrow
     457: iinc          1, 1
     460: goto          75
     463: aload_0
     464: invokespecial #57                 // Method allocate:()V
     467: return
    Exception table:
       from    to  target type
           8    20    63   any
          21    60    63   any
          63    66    63   any
          85   206   209   any
         209   214   209   any
         305   321   324   Class java/lang/Exception
         356   369   372   Class java/lang/Exception
         382   395   398   Class java/lang/Exception
         405   446   449   any
         449   454   449   any

  private void ensureMinIdle() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #152                // Method calculateDeficit:(Z)I
       5: istore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: iload_1
      10: if_icmpge     102
      13: aload_0
      14: iconst_1
      15: invokespecial #152                // Method calculateDeficit:(Z)I
      18: ifle          102
      21: aload_0
      22: invokevirtual #153                // Method addObject:()V
      25: aload_0
      26: dup
      27: astore_3
      28: monitorenter
      29: aload_0
      30: dup
      31: getfield      #41                 // Field _numInternalProcessing:I
      34: iconst_1
      35: isub
      36: putfield      #41                 // Field _numInternalProcessing:I
      39: aload_3
      40: monitorexit
      41: goto          51
      44: astore        4
      46: aload_3
      47: monitorexit
      48: aload         4
      50: athrow
      51: aload_0
      52: invokespecial #57                 // Method allocate:()V
      55: goto          96
      58: astore        5
      60: aload_0
      61: dup
      62: astore        6
      64: monitorenter
      65: aload_0
      66: dup
      67: getfield      #41                 // Field _numInternalProcessing:I
      70: iconst_1
      71: isub
      72: putfield      #41                 // Field _numInternalProcessing:I
      75: aload         6
      77: monitorexit
      78: goto          89
      81: astore        7
      83: aload         6
      85: monitorexit
      86: aload         7
      88: athrow
      89: aload_0
      90: invokespecial #57                 // Method allocate:()V
      93: aload         5
      95: athrow
      96: iinc          2, 1
      99: goto          8
     102: return
    Exception table:
       from    to  target type
          29    41    44   any
          44    48    44   any
          21    25    58   any
          65    78    81   any
          81    86    81   any
          58    60    58   any

  private synchronized int calculateDeficit(boolean);
    Code:
       0: aload_0
       1: invokevirtual #149                // Method getMinIdle:()I
       4: aload_0
       5: invokevirtual #148                // Method getNumIdle:()I
       8: isub
       9: istore_2
      10: aload_0
      11: getfield      #25                 // Field _maxActive:I
      14: ifle          47
      17: iconst_0
      18: aload_0
      19: invokevirtual #154                // Method getMaxActive:()I
      22: aload_0
      23: invokevirtual #135                // Method getNumActive:()I
      26: isub
      27: aload_0
      28: invokevirtual #148                // Method getNumIdle:()I
      31: isub
      32: aload_0
      33: getfield      #41                 // Field _numInternalProcessing:I
      36: isub
      37: invokestatic  #155                // Method java/lang/Math.max:(II)I
      40: istore_3
      41: iload_2
      42: iload_3
      43: invokestatic  #156                // Method java/lang/Math.min:(II)I
      46: istore_2
      47: iload_1
      48: ifeq          65
      51: iload_2
      52: ifle          65
      55: aload_0
      56: dup
      57: getfield      #41                 // Field _numInternalProcessing:I
      60: iconst_1
      61: iadd
      62: putfield      #41                 // Field _numInternalProcessing:I
      65: iload_2
      66: ireturn

  public void addObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method assertOpen:()V
       4: aload_0
       5: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
       8: ifnonnull     21
      11: new           #85                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #157                // String Cannot add objects without a factory.
      17: invokespecial #87                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      25: invokeinterface #95,  1           // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.makeObject:()Ljava/lang/Object;
      30: astore_1
      31: aload_0
      32: invokevirtual #75                 // Method assertOpen:()V
      35: aload_0
      36: aload_1
      37: iconst_0
      38: invokespecial #128                // Method addObjectToPool:(Ljava/lang/Object;Z)V
      41: goto          61
      44: astore_2
      45: aload_0
      46: getfield      #38                 // Field _factory:Lorg/apache/commons/pool/PoolableObjectFactory;
      49: aload_1
      50: invokeinterface #107,  2          // InterfaceMethod org/apache/commons/pool/PoolableObjectFactory.destroyObject:(Ljava/lang/Object;)V
      55: goto          59
      58: astore_3
      59: aload_2
      60: athrow
      61: return
    Exception table:
       from    to  target type
          31    41    44   Class java/lang/IllegalStateException
          45    55    58   Class java/lang/Exception

  protected synchronized void startEvictor(long);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #40                 // Field _evictor:Lorg/apache/commons/pool/impl/GenericObjectPool$Evictor;
       5: if_acmpeq     20
       8: aload_0
       9: getfield      #40                 // Field _evictor:Lorg/apache/commons/pool/impl/GenericObjectPool$Evictor;
      12: invokestatic  #158                // Method org/apache/commons/pool/impl/EvictionTimer.cancel:(Ljava/util/TimerTask;)V
      15: aload_0
      16: aconst_null
      17: putfield      #40                 // Field _evictor:Lorg/apache/commons/pool/impl/GenericObjectPool$Evictor;
      20: lload_1
      21: lconst_0
      22: lcmp
      23: ifle          48
      26: aload_0
      27: new           #159                // class org/apache/commons/pool/impl/GenericObjectPool$Evictor
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #160                // Method org/apache/commons/pool/impl/GenericObjectPool$Evictor."<init>":(Lorg/apache/commons/pool/impl/GenericObjectPool;Lorg/apache/commons/pool/impl/GenericObjectPool$1;)V
      36: putfield      #40                 // Field _evictor:Lorg/apache/commons/pool/impl/GenericObjectPool$Evictor;
      39: aload_0
      40: getfield      #40                 // Field _evictor:Lorg/apache/commons/pool/impl/GenericObjectPool$Evictor;
      43: lload_1
      44: lload_1
      45: invokestatic  #161                // Method org/apache/commons/pool/impl/EvictionTimer.schedule:(Ljava/util/TimerTask;JJ)V
      48: return

  synchronized java.lang.String debugInfo();
    Code:
       0: new           #162                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #163                // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #164                // String Active:
      11: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: aload_0
      15: invokevirtual #135                // Method getNumActive:()I
      18: invokevirtual #166                // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      21: ldc           #167                // String \n
      23: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: pop
      27: aload_1
      28: ldc           #168                // String Idle:
      30: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: aload_0
      34: invokevirtual #148                // Method getNumIdle:()I
      37: invokevirtual #166                // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      40: ldc           #167                // String \n
      42: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: pop
      46: aload_1
      47: ldc           #169                // String Idle Objects:\n
      49: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: pop
      53: aload_0
      54: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      57: invokevirtual #170                // Method org/apache/commons/pool/impl/CursorableLinkedList.iterator:()Ljava/util/Iterator;
      60: astore_2
      61: invokestatic  #71                 // Method java/lang/System.currentTimeMillis:()J
      64: lstore_3
      65: aload_2
      66: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          123
      74: aload_2
      75: invokeinterface #126,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #96                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair
      83: astore        5
      85: aload_1
      86: ldc           #171                // String \t
      88: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      91: aload         5
      93: getfield      #99                 // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.value:Ljava/lang/Object;
      96: invokevirtual #172                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      99: ldc           #171                // String \t
     101: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: lload_3
     105: aload         5
     107: getfield      #145                // Field org/apache/commons/pool/impl/GenericKeyedObjectPool$ObjectTimestampPair.tstamp:J
     110: lsub
     111: invokevirtual #173                // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     114: ldc           #167                // String \n
     116: invokevirtual #165                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     119: pop
     120: goto          65
     123: aload_1
     124: invokevirtual #174                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     127: areturn

  private int getNumTests();
    Code:
       0: aload_0
       1: getfield      #32                 // Field _numTestsPerEvictionRun:I
       4: iflt          22
       7: aload_0
       8: getfield      #32                 // Field _numTestsPerEvictionRun:I
      11: aload_0
      12: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      15: invokevirtual #127                // Method org/apache/commons/pool/impl/CursorableLinkedList.size:()I
      18: invokestatic  #156                // Method java/lang/Math.min:(II)I
      21: ireturn
      22: aload_0
      23: getfield      #36                 // Field _pool:Lorg/apache/commons/pool/impl/CursorableLinkedList;
      26: invokevirtual #127                // Method org/apache/commons/pool/impl/CursorableLinkedList.size:()I
      29: i2d
      30: aload_0
      31: getfield      #32                 // Field _numTestsPerEvictionRun:I
      34: i2d
      35: invokestatic  #175                // Method java/lang/Math.abs:(D)D
      38: ddiv
      39: invokestatic  #176                // Method java/lang/Math.ceil:(D)D
      42: d2i
      43: ireturn

  static void access$700(org.apache.commons.pool.impl.GenericObjectPool) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ensureMinIdle:()V
       4: return
}
