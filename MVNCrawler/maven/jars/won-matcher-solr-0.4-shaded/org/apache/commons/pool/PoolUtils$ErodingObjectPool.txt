Compiled from "PoolUtils.java"
class org.apache.commons.pool.PoolUtils$ErodingObjectPool<T> implements org.apache.commons.pool.ObjectPool<T> {
  private final org.apache.commons.pool.ObjectPool<T> pool;

  private final org.apache.commons.pool.PoolUtils$ErodingFactor factor;

  public org.apache.commons.pool.PoolUtils$ErodingObjectPool(org.apache.commons.pool.ObjectPool<T>, float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       9: aload_0
      10: new           #3                  // class org/apache/commons/pool/PoolUtils$ErodingFactor
      13: dup
      14: fload_2
      15: invokespecial #4                  // Method org/apache/commons/pool/PoolUtils$ErodingFactor."<init>":(F)V
      18: putfield      #5                  // Field factor:Lorg/apache/commons/pool/PoolUtils$ErodingFactor;
      21: return

  public T borrowObject() throws java.lang.Exception, java.util.NoSuchElementException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/pool/ObjectPool.borrowObject:()Ljava/lang/Object;
       9: areturn

  public void returnObject(T);
    Code:
       0: iconst_0
       1: istore_2
       2: invokestatic  #7                  // Method java/lang/System.currentTimeMillis:()J
       5: lstore_3
       6: aload_0
       7: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
      10: dup
      11: astore        5
      13: monitorenter
      14: aload_0
      15: getfield      #5                  // Field factor:Lorg/apache/commons/pool/PoolUtils$ErodingFactor;
      18: invokevirtual #8                  // Method org/apache/commons/pool/PoolUtils$ErodingFactor.getNextShrink:()J
      21: lload_3
      22: lcmp
      23: ifge          54
      26: aload_0
      27: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
      30: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/pool/ObjectPool.getNumIdle:()I
      35: istore        6
      37: iload         6
      39: ifle          44
      42: iconst_1
      43: istore_2
      44: aload_0
      45: getfield      #5                  // Field factor:Lorg/apache/commons/pool/PoolUtils$ErodingFactor;
      48: lload_3
      49: iload         6
      51: invokevirtual #10                 // Method org/apache/commons/pool/PoolUtils$ErodingFactor.update:(JI)V
      54: aload         5
      56: monitorexit
      57: goto          68
      60: astore        7
      62: aload         5
      64: monitorexit
      65: aload         7
      67: athrow
      68: iload_2
      69: ifeq          85
      72: aload_0
      73: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
      76: aload_1
      77: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/pool/ObjectPool.invalidateObject:(Ljava/lang/Object;)V
      82: goto          95
      85: aload_0
      86: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
      89: aload_1
      90: invokeinterface #12,  2           // InterfaceMethod org/apache/commons/pool/ObjectPool.returnObject:(Ljava/lang/Object;)V
      95: goto          100
      98: astore        5
     100: return
    Exception table:
       from    to  target type
          14    57    60   any
          60    65    60   any
          68    95    98   Class java/lang/Exception

  public void invalidateObject(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/pool/ObjectPool.invalidateObject:(Ljava/lang/Object;)V
      10: goto          14
      13: astore_2
      14: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Exception

  public void addObject() throws java.lang.Exception, java.lang.IllegalStateException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/pool/ObjectPool.addObject:()V
       9: return

  public int getNumIdle() throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/pool/ObjectPool.getNumIdle:()I
       9: ireturn

  public int getNumActive() throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/commons/pool/ObjectPool.getNumActive:()I
       9: ireturn

  public void clear() throws java.lang.Exception, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/commons/pool/ObjectPool.clear:()V
       9: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/pool/ObjectPool.close:()V
       9: goto          13
      12: astore_1
      13: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Exception

  public void setFactory(org.apache.commons.pool.PoolableObjectFactory<T>) throws java.lang.IllegalStateException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/pool/ObjectPool.setFactory:(Lorg/apache/commons/pool/PoolableObjectFactory;)V
      10: return

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String ErodingObjectPool{factor=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field factor:Lorg/apache/commons/pool/PoolUtils$ErodingFactor;
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #24                 // String , pool=
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field pool:Lorg/apache/commons/pool/ObjectPool;
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
