Compiled from "StatUtils.java"
public final class org.apache.commons.math3.stat.StatUtils {
  private static final org.apache.commons.math3.stat.descriptive.UnivariateStatistic SUM;

  private static final org.apache.commons.math3.stat.descriptive.UnivariateStatistic SUM_OF_SQUARES;

  private static final org.apache.commons.math3.stat.descriptive.UnivariateStatistic PRODUCT;

  private static final org.apache.commons.math3.stat.descriptive.UnivariateStatistic SUM_OF_LOGS;

  private static final org.apache.commons.math3.stat.descriptive.UnivariateStatistic MIN;

  private static final org.apache.commons.math3.stat.descriptive.UnivariateStatistic MAX;

  private static final org.apache.commons.math3.stat.descriptive.UnivariateStatistic MEAN;

  private static final org.apache.commons.math3.stat.descriptive.moment.Variance VARIANCE;

  private static final org.apache.commons.math3.stat.descriptive.rank.Percentile PERCENTILE;

  private static final org.apache.commons.math3.stat.descriptive.moment.GeometricMean GEOMETRIC_MEAN;

  private org.apache.commons.math3.stat.StatUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static double sum(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #2                  // Field SUM:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([D)D
       9: dreturn

  public static double sum(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #2                  // Field SUM:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokeinterface #4,  4            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([DII)D
      11: dreturn

  public static double sumSq(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #5                  // Field SUM_OF_SQUARES:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([D)D
       9: dreturn

  public static double sumSq(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #5                  // Field SUM_OF_SQUARES:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokeinterface #4,  4            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([DII)D
      11: dreturn

  public static double product(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #6                  // Field PRODUCT:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([D)D
       9: dreturn

  public static double product(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #6                  // Field PRODUCT:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokeinterface #4,  4            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([DII)D
      11: dreturn

  public static double sumLog(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #7                  // Field SUM_OF_LOGS:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([D)D
       9: dreturn

  public static double sumLog(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #7                  // Field SUM_OF_LOGS:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokeinterface #4,  4            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([DII)D
      11: dreturn

  public static double mean(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #8                  // Field MEAN:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([D)D
       9: dreturn

  public static double mean(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #8                  // Field MEAN:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokeinterface #4,  4            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([DII)D
      11: dreturn

  public static double geometricMean(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #9                  // Field GEOMETRIC_MEAN:Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;
       3: aload_0
       4: invokevirtual #10                 // Method org/apache/commons/math3/stat/descriptive/moment/GeometricMean.evaluate:([D)D
       7: dreturn

  public static double geometricMean(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #9                  // Field GEOMETRIC_MEAN:Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #11                 // Method org/apache/commons/math3/stat/descriptive/moment/GeometricMean.evaluate:([DII)D
       9: dreturn

  public static double variance(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #12                 // Field VARIANCE:Lorg/apache/commons/math3/stat/descriptive/moment/Variance;
       3: aload_0
       4: invokevirtual #13                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([D)D
       7: dreturn

  public static double variance(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #12                 // Field VARIANCE:Lorg/apache/commons/math3/stat/descriptive/moment/Variance;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #14                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([DII)D
       9: dreturn

  public static double variance(double[], double, int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #12                 // Field VARIANCE:Lorg/apache/commons/math3/stat/descriptive/moment/Variance;
       3: aload_0
       4: dload_1
       5: iload_3
       6: iload         4
       8: invokevirtual #15                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([DDII)D
      11: dreturn

  public static double variance(double[], double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #12                 // Field VARIANCE:Lorg/apache/commons/math3/stat/descriptive/moment/Variance;
       3: aload_0
       4: dload_1
       5: invokevirtual #16                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([DD)D
       8: dreturn

  public static double populationVariance(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: new           #17                 // class org/apache/commons/math3/stat/descriptive/moment/Variance
       3: dup
       4: iconst_0
       5: invokespecial #18                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance."<init>":(Z)V
       8: aload_0
       9: invokevirtual #13                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([D)D
      12: dreturn

  public static double populationVariance(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: new           #17                 // class org/apache/commons/math3/stat/descriptive/moment/Variance
       3: dup
       4: iconst_0
       5: invokespecial #18                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance."<init>":(Z)V
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokevirtual #14                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([DII)D
      14: dreturn

  public static double populationVariance(double[], double, int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: new           #17                 // class org/apache/commons/math3/stat/descriptive/moment/Variance
       3: dup
       4: iconst_0
       5: invokespecial #18                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance."<init>":(Z)V
       8: aload_0
       9: dload_1
      10: iload_3
      11: iload         4
      13: invokevirtual #15                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([DDII)D
      16: dreturn

  public static double populationVariance(double[], double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: new           #17                 // class org/apache/commons/math3/stat/descriptive/moment/Variance
       3: dup
       4: iconst_0
       5: invokespecial #18                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance."<init>":(Z)V
       8: aload_0
       9: dload_1
      10: invokevirtual #16                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance.evaluate:([DD)D
      13: dreturn

  public static double max(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #19                 // Field MAX:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([D)D
       9: dreturn

  public static double max(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #19                 // Field MAX:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokeinterface #4,  4            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([DII)D
      11: dreturn

  public static double min(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #20                 // Field MIN:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([D)D
       9: dreturn

  public static double min(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #20                 // Field MIN:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokeinterface #4,  4            // InterfaceMethod org/apache/commons/math3/stat/descriptive/UnivariateStatistic.evaluate:([DII)D
      11: dreturn

  public static double percentile(double[], double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #21                 // Field PERCENTILE:Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
       3: aload_0
       4: dload_1
       5: invokevirtual #22                 // Method org/apache/commons/math3/stat/descriptive/rank/Percentile.evaluate:([DD)D
       8: dreturn

  public static double percentile(double[], int, int, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: getstatic     #21                 // Field PERCENTILE:Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
       3: aload_0
       4: iload_1
       5: iload_2
       6: dload_3
       7: invokevirtual #23                 // Method org/apache/commons/math3/stat/descriptive/rank/Percentile.evaluate:([DIID)D
      10: dreturn

  public static double sumDifference(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: iload_2
       4: aload_1
       5: arraylength
       6: if_icmpeq     20
       9: new           #24                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: iload_2
      14: aload_1
      15: arraylength
      16: invokespecial #25                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      19: athrow
      20: iload_2
      21: ifgt          35
      24: new           #26                 // class org/apache/commons/math3/exception/NoDataException
      27: dup
      28: getstatic     #27                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INSUFFICIENT_DIMENSION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      31: invokespecial #28                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      34: athrow
      35: dconst_0
      36: dstore_3
      37: iconst_0
      38: istore        5
      40: iload         5
      42: iload_2
      43: if_icmpge     64
      46: dload_3
      47: aload_0
      48: iload         5
      50: daload
      51: aload_1
      52: iload         5
      54: daload
      55: dsub
      56: dadd
      57: dstore_3
      58: iinc          5, 1
      61: goto          40
      64: dload_3
      65: dreturn

  public static double meanDifference(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method sumDifference:([D[D)D
       5: aload_0
       6: arraylength
       7: i2d
       8: ddiv
       9: dreturn

  public static double varianceDifference(double[], double[], double) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: dconst_0
       1: dstore        4
       3: dconst_0
       4: dstore        6
       6: dconst_0
       7: dstore        8
       9: aload_0
      10: arraylength
      11: istore        10
      13: iload         10
      15: aload_1
      16: arraylength
      17: if_icmpeq     32
      20: new           #24                 // class org/apache/commons/math3/exception/DimensionMismatchException
      23: dup
      24: iload         10
      26: aload_1
      27: arraylength
      28: invokespecial #25                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      31: athrow
      32: iload         10
      34: iconst_2
      35: if_icmpge     56
      38: new           #30                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      41: dup
      42: iload         10
      44: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: iconst_2
      48: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: iconst_1
      52: invokespecial #32                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      55: athrow
      56: iconst_0
      57: istore        11
      59: iload         11
      61: iload         10
      63: if_icmpge     106
      66: aload_0
      67: iload         11
      69: daload
      70: aload_1
      71: iload         11
      73: daload
      74: dsub
      75: dstore        8
      77: dload         4
      79: dload         8
      81: dload_2
      82: dsub
      83: dload         8
      85: dload_2
      86: dsub
      87: dmul
      88: dadd
      89: dstore        4
      91: dload         6
      93: dload         8
      95: dload_2
      96: dsub
      97: dadd
      98: dstore        6
     100: iinc          11, 1
     103: goto          59
     106: dload         4
     108: dload         6
     110: dload         6
     112: dmul
     113: iload         10
     115: i2d
     116: ddiv
     117: dsub
     118: iload         10
     120: iconst_1
     121: isub
     122: i2d
     123: ddiv
     124: dreturn

  public static double[] normalize(double[]);
    Code:
       0: new           #33                 // class org/apache/commons/math3/stat/descriptive/DescriptiveStatistics
       3: dup
       4: invokespecial #34                 // Method org/apache/commons/math3/stat/descriptive/DescriptiveStatistics."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: arraylength
      13: if_icmpge     29
      16: aload_1
      17: aload_0
      18: iload_2
      19: daload
      20: invokevirtual #35                 // Method org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.addValue:(D)V
      23: iinc          2, 1
      26: goto          10
      29: aload_1
      30: invokevirtual #36                 // Method org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.getMean:()D
      33: dstore_2
      34: aload_1
      35: invokevirtual #37                 // Method org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.getStandardDeviation:()D
      38: dstore        4
      40: aload_0
      41: arraylength
      42: newarray       double
      44: astore        6
      46: iconst_0
      47: istore        7
      49: iload         7
      51: aload_0
      52: arraylength
      53: if_icmpge     76
      56: aload         6
      58: iload         7
      60: aload_0
      61: iload         7
      63: daload
      64: dload_2
      65: dsub
      66: dload         4
      68: ddiv
      69: dastore
      70: iinc          7, 1
      73: goto          49
      76: aload         6
      78: areturn

  public static double[] mode(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: ifnonnull     19
       4: new           #38                 // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: getstatic     #39                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INPUT_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iconst_0
      12: anewarray     #40                 // class java/lang/Object
      15: invokespecial #41                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      18: athrow
      19: aload_0
      20: iconst_0
      21: aload_0
      22: arraylength
      23: invokestatic  #42                 // Method getMode:([DII)[D
      26: areturn

  public static double[] mode(double[], int, int);
    Code:
       0: aload_0
       1: ifnonnull     19
       4: new           #38                 // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: getstatic     #39                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INPUT_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iconst_0
      12: anewarray     #40                 // class java/lang/Object
      15: invokespecial #41                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      18: athrow
      19: iload_1
      20: ifge          38
      23: new           #43                 // class org/apache/commons/math3/exception/NotPositiveException
      26: dup
      27: getstatic     #44                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.START_POSITION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      30: iload_1
      31: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokespecial #45                 // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      37: athrow
      38: iload_2
      39: ifge          57
      42: new           #43                 // class org/apache/commons/math3/exception/NotPositiveException
      45: dup
      46: getstatic     #46                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LENGTH:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      49: iload_2
      50: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: invokespecial #45                 // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      56: athrow
      57: aload_0
      58: iload_1
      59: iload_2
      60: invokestatic  #42                 // Method getMode:([DII)[D
      63: areturn

  private static double[] getMode(double[], int, int);
    Code:
       0: new           #47                 // class org/apache/commons/math3/stat/Frequency
       3: dup
       4: invokespecial #48                 // Method org/apache/commons/math3/stat/Frequency."<init>":()V
       7: astore_3
       8: iload_1
       9: istore        4
      11: iload         4
      13: iload_1
      14: iload_2
      15: iadd
      16: if_icmpge     48
      19: aload_0
      20: iload         4
      22: daload
      23: dstore        5
      25: dload         5
      27: invokestatic  #49                 // Method java/lang/Double.isNaN:(D)Z
      30: ifne          42
      33: aload_3
      34: dload         5
      36: invokestatic  #50                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      39: invokevirtual #51                 // Method org/apache/commons/math3/stat/Frequency.addValue:(Ljava/lang/Comparable;)V
      42: iinc          4, 1
      45: goto          11
      48: aload_3
      49: invokevirtual #52                 // Method org/apache/commons/math3/stat/Frequency.getMode:()Ljava/util/List;
      52: astore        4
      54: aload         4
      56: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      61: newarray       double
      63: astore        5
      65: iconst_0
      66: istore        6
      68: aload         4
      70: invokeinterface #54,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore        7
      77: aload         7
      79: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      84: ifeq          118
      87: aload         7
      89: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #57                 // class java/lang/Comparable
      97: astore        8
      99: aload         5
     101: iload         6
     103: iinc          6, 1
     106: aload         8
     108: checkcast     #58                 // class java/lang/Double
     111: invokevirtual #59                 // Method java/lang/Double.doubleValue:()D
     114: dastore
     115: goto          77
     118: aload         5
     120: areturn

  static {};
    Code:
       0: new           #60                 // class org/apache/commons/math3/stat/descriptive/summary/Sum
       3: dup
       4: invokespecial #61                 // Method org/apache/commons/math3/stat/descriptive/summary/Sum."<init>":()V
       7: putstatic     #2                  // Field SUM:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
      10: new           #62                 // class org/apache/commons/math3/stat/descriptive/summary/SumOfSquares
      13: dup
      14: invokespecial #63                 // Method org/apache/commons/math3/stat/descriptive/summary/SumOfSquares."<init>":()V
      17: putstatic     #5                  // Field SUM_OF_SQUARES:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
      20: new           #64                 // class org/apache/commons/math3/stat/descriptive/summary/Product
      23: dup
      24: invokespecial #65                 // Method org/apache/commons/math3/stat/descriptive/summary/Product."<init>":()V
      27: putstatic     #6                  // Field PRODUCT:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
      30: new           #66                 // class org/apache/commons/math3/stat/descriptive/summary/SumOfLogs
      33: dup
      34: invokespecial #67                 // Method org/apache/commons/math3/stat/descriptive/summary/SumOfLogs."<init>":()V
      37: putstatic     #7                  // Field SUM_OF_LOGS:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
      40: new           #68                 // class org/apache/commons/math3/stat/descriptive/rank/Min
      43: dup
      44: invokespecial #69                 // Method org/apache/commons/math3/stat/descriptive/rank/Min."<init>":()V
      47: putstatic     #20                 // Field MIN:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
      50: new           #70                 // class org/apache/commons/math3/stat/descriptive/rank/Max
      53: dup
      54: invokespecial #71                 // Method org/apache/commons/math3/stat/descriptive/rank/Max."<init>":()V
      57: putstatic     #19                 // Field MAX:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
      60: new           #72                 // class org/apache/commons/math3/stat/descriptive/moment/Mean
      63: dup
      64: invokespecial #73                 // Method org/apache/commons/math3/stat/descriptive/moment/Mean."<init>":()V
      67: putstatic     #8                  // Field MEAN:Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
      70: new           #17                 // class org/apache/commons/math3/stat/descriptive/moment/Variance
      73: dup
      74: invokespecial #74                 // Method org/apache/commons/math3/stat/descriptive/moment/Variance."<init>":()V
      77: putstatic     #12                 // Field VARIANCE:Lorg/apache/commons/math3/stat/descriptive/moment/Variance;
      80: new           #75                 // class org/apache/commons/math3/stat/descriptive/rank/Percentile
      83: dup
      84: invokespecial #76                 // Method org/apache/commons/math3/stat/descriptive/rank/Percentile."<init>":()V
      87: putstatic     #21                 // Field PERCENTILE:Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
      90: new           #77                 // class org/apache/commons/math3/stat/descriptive/moment/GeometricMean
      93: dup
      94: invokespecial #78                 // Method org/apache/commons/math3/stat/descriptive/moment/GeometricMean."<init>":()V
      97: putstatic     #9                  // Field GEOMETRIC_MEAN:Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;
     100: return
}
