Compiled from "IntervalUtils.java"
public final class org.apache.commons.math3.stat.interval.IntervalUtils {
  private static final org.apache.commons.math3.stat.interval.BinomialConfidenceInterval AGRESTI_COULL;

  private static final org.apache.commons.math3.stat.interval.BinomialConfidenceInterval CLOPPER_PEARSON;

  private static final org.apache.commons.math3.stat.interval.BinomialConfidenceInterval NORMAL_APPROXIMATION;

  private static final org.apache.commons.math3.stat.interval.BinomialConfidenceInterval WILSON_SCORE;

  private org.apache.commons.math3.stat.interval.IntervalUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.commons.math3.stat.interval.ConfidenceInterval getAgrestiCoullInterval(int, int, double);
    Code:
       0: getstatic     #2                  // Field AGRESTI_COULL:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
       3: iload_0
       4: iload_1
       5: dload_2
       6: invokeinterface #3,  5            // InterfaceMethod org/apache/commons/math3/stat/interval/BinomialConfidenceInterval.createInterval:(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
      11: areturn

  public static org.apache.commons.math3.stat.interval.ConfidenceInterval getClopperPearsonInterval(int, int, double);
    Code:
       0: getstatic     #4                  // Field CLOPPER_PEARSON:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
       3: iload_0
       4: iload_1
       5: dload_2
       6: invokeinterface #3,  5            // InterfaceMethod org/apache/commons/math3/stat/interval/BinomialConfidenceInterval.createInterval:(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
      11: areturn

  public static org.apache.commons.math3.stat.interval.ConfidenceInterval getNormalApproximationInterval(int, int, double);
    Code:
       0: getstatic     #5                  // Field NORMAL_APPROXIMATION:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
       3: iload_0
       4: iload_1
       5: dload_2
       6: invokeinterface #3,  5            // InterfaceMethod org/apache/commons/math3/stat/interval/BinomialConfidenceInterval.createInterval:(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
      11: areturn

  public static org.apache.commons.math3.stat.interval.ConfidenceInterval getWilsonScoreInterval(int, int, double);
    Code:
       0: getstatic     #6                  // Field WILSON_SCORE:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
       3: iload_0
       4: iload_1
       5: dload_2
       6: invokeinterface #3,  5            // InterfaceMethod org/apache/commons/math3/stat/interval/BinomialConfidenceInterval.createInterval:(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
      11: areturn

  static void checkParameters(int, int, double);
    Code:
       0: iload_0
       1: ifgt          19
       4: new           #7                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
       7: dup
       8: getstatic     #8                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_TRIALS:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_0
      12: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #10                 // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: iload_1
      20: ifge          38
      23: new           #11                 // class org/apache/commons/math3/exception/NotPositiveException
      26: dup
      27: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      30: iload_1
      31: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokespecial #13                 // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      37: athrow
      38: iload_1
      39: iload_0
      40: if_icmple     63
      43: new           #14                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      46: dup
      47: getstatic     #15                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      50: iload_1
      51: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: iload_0
      55: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: iconst_1
      59: invokespecial #16                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      62: athrow
      63: dload_2
      64: dconst_0
      65: dcmpg
      66: ifle          75
      69: dload_2
      70: dconst_1
      71: dcmpl
      72: iflt          98
      75: new           #17                 // class org/apache/commons/math3/exception/OutOfRangeException
      78: dup
      79: getstatic     #18                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.OUT_OF_BOUNDS_CONFIDENCE_LEVEL:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      82: dload_2
      83: invokestatic  #19                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      86: iconst_0
      87: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      90: iconst_1
      91: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      94: invokespecial #20                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      97: athrow
      98: return

  static {};
    Code:
       0: new           #21                 // class org/apache/commons/math3/stat/interval/AgrestiCoullInterval
       3: dup
       4: invokespecial #22                 // Method org/apache/commons/math3/stat/interval/AgrestiCoullInterval."<init>":()V
       7: putstatic     #2                  // Field AGRESTI_COULL:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
      10: new           #23                 // class org/apache/commons/math3/stat/interval/ClopperPearsonInterval
      13: dup
      14: invokespecial #24                 // Method org/apache/commons/math3/stat/interval/ClopperPearsonInterval."<init>":()V
      17: putstatic     #4                  // Field CLOPPER_PEARSON:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
      20: new           #25                 // class org/apache/commons/math3/stat/interval/NormalApproximationInterval
      23: dup
      24: invokespecial #26                 // Method org/apache/commons/math3/stat/interval/NormalApproximationInterval."<init>":()V
      27: putstatic     #5                  // Field NORMAL_APPROXIMATION:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
      30: new           #27                 // class org/apache/commons/math3/stat/interval/WilsonScoreInterval
      33: dup
      34: invokespecial #28                 // Method org/apache/commons/math3/stat/interval/WilsonScoreInterval."<init>":()V
      37: putstatic     #6                  // Field WILSON_SCORE:Lorg/apache/commons/math3/stat/interval/BinomialConfidenceInterval;
      40: return
}
