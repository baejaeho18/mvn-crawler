Compiled from "ResizableDoubleArray.java"
public class org.apache.commons.math3.util.ResizableDoubleArray implements org.apache.commons.math3.util.DoubleArray,java.io.Serializable {
  public static final int ADDITIVE_MODE;

  public static final int MULTIPLICATIVE_MODE;

  private static final long serialVersionUID;

  private static final int DEFAULT_INITIAL_CAPACITY;

  private static final double DEFAULT_EXPANSION_FACTOR;

  private static final double DEFAULT_CONTRACTION_DELTA;

  private double contractionCriterion;

  private double expansionFactor;

  private org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode expansionMode;

  private double[] internalArray;

  private int numElements;

  private int startIndex;

  public org.apache.commons.math3.util.ResizableDoubleArray();
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  public org.apache.commons.math3.util.ResizableDoubleArray(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: ldc2_w        #2                  // double 2.0d
       5: invokespecial #4                  // Method "<init>":(ID)V
       8: return

  public org.apache.commons.math3.util.ResizableDoubleArray(double[]);
    Code:
       0: aload_0
       1: bipush        16
       3: ldc2_w        #2                  // double 2.0d
       6: ldc2_w        #5                  // double 2.5d
       9: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      12: aload_1
      13: invokespecial #8                  // Method "<init>":(IDDLorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;[D)V
      16: return

  public org.apache.commons.math3.util.ResizableDoubleArray(int, float) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: f2d
       4: invokespecial #4                  // Method "<init>":(ID)V
       7: return

  public org.apache.commons.math3.util.ResizableDoubleArray(int, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: ldc2_w        #9                  // double 0.5d
       6: dload_2
       7: dadd
       8: invokespecial #11                 // Method "<init>":(IDD)V
      11: return

  public org.apache.commons.math3.util.ResizableDoubleArray(int, float, float) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: f2d
       4: fload_3
       5: f2d
       6: invokespecial #11                 // Method "<init>":(IDD)V
       9: return

  public org.apache.commons.math3.util.ResizableDoubleArray(int, double, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
       8: aconst_null
       9: invokespecial #8                  // Method "<init>":(IDDLorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;[D)V
      12: return

  public org.apache.commons.math3.util.ResizableDoubleArray(int, float, float, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: f2d
       4: fload_3
       5: f2d
       6: iload         4
       8: iconst_1
       9: if_icmpne     18
      12: getstatic     #12                 // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.ADDITIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      15: goto          21
      18: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      21: aconst_null
      22: invokespecial #8                  // Method "<init>":(IDDLorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;[D)V
      25: aload_0
      26: iload         4
      28: invokevirtual #13                 // Method setExpansionMode:(I)V
      31: return

  public org.apache.commons.math3.util.ResizableDoubleArray(int, double, double, org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode, double...) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // double 2.5d
       8: putfield      #15                 // Field contractionCriterion:D
      11: aload_0
      12: ldc2_w        #2                  // double 2.0d
      15: putfield      #16                 // Field expansionFactor:D
      18: aload_0
      19: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      22: putfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      25: aload_0
      26: iconst_0
      27: putfield      #18                 // Field numElements:I
      30: aload_0
      31: iconst_0
      32: putfield      #19                 // Field startIndex:I
      35: iload_1
      36: ifgt          54
      39: new           #20                 // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      42: dup
      43: getstatic     #21                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      46: iload_1
      47: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokespecial #23                 // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      53: athrow
      54: aload_0
      55: dload         4
      57: dload_2
      58: invokevirtual #24                 // Method checkContractExpand:(DD)V
      61: aload_0
      62: dload_2
      63: putfield      #16                 // Field expansionFactor:D
      66: aload_0
      67: dload         4
      69: putfield      #15                 // Field contractionCriterion:D
      72: aload_0
      73: aload         6
      75: putfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      78: aload_0
      79: iload_1
      80: newarray       double
      82: putfield      #25                 // Field internalArray:[D
      85: aload_0
      86: iconst_0
      87: putfield      #18                 // Field numElements:I
      90: aload_0
      91: iconst_0
      92: putfield      #19                 // Field startIndex:I
      95: aload         7
      97: ifnull        112
     100: aload         7
     102: arraylength
     103: ifle          112
     106: aload_0
     107: aload         7
     109: invokevirtual #26                 // Method addElements:([D)V
     112: return

  public org.apache.commons.math3.util.ResizableDoubleArray(org.apache.commons.math3.util.ResizableDoubleArray) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // double 2.5d
       8: putfield      #15                 // Field contractionCriterion:D
      11: aload_0
      12: ldc2_w        #2                  // double 2.0d
      15: putfield      #16                 // Field expansionFactor:D
      18: aload_0
      19: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      22: putfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      25: aload_0
      26: iconst_0
      27: putfield      #18                 // Field numElements:I
      30: aload_0
      31: iconst_0
      32: putfield      #19                 // Field startIndex:I
      35: aload_1
      36: invokestatic  #27                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      39: aload_1
      40: aload_0
      41: invokestatic  #28                 // Method copy:(Lorg/apache/commons/math3/util/ResizableDoubleArray;Lorg/apache/commons/math3/util/ResizableDoubleArray;)V
      44: return

  public synchronized void addElement(double);
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalArray:[D
       4: arraylength
       5: aload_0
       6: getfield      #19                 // Field startIndex:I
       9: aload_0
      10: getfield      #18                 // Field numElements:I
      13: iadd
      14: if_icmpgt     21
      17: aload_0
      18: invokevirtual #29                 // Method expand:()V
      21: aload_0
      22: getfield      #25                 // Field internalArray:[D
      25: aload_0
      26: getfield      #19                 // Field startIndex:I
      29: aload_0
      30: dup
      31: getfield      #18                 // Field numElements:I
      34: dup_x1
      35: iconst_1
      36: iadd
      37: putfield      #18                 // Field numElements:I
      40: iadd
      41: dload_1
      42: dastore
      43: return

  public synchronized void addElements(double[]);
    Code:
       0: aload_0
       1: getfield      #18                 // Field numElements:I
       4: aload_1
       5: arraylength
       6: iadd
       7: iconst_1
       8: iadd
       9: newarray       double
      11: astore_2
      12: aload_0
      13: getfield      #25                 // Field internalArray:[D
      16: aload_0
      17: getfield      #19                 // Field startIndex:I
      20: aload_2
      21: iconst_0
      22: aload_0
      23: getfield      #18                 // Field numElements:I
      26: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_1
      30: iconst_0
      31: aload_2
      32: aload_0
      33: getfield      #18                 // Field numElements:I
      36: aload_1
      37: arraylength
      38: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_0
      42: aload_2
      43: putfield      #25                 // Field internalArray:[D
      46: aload_0
      47: iconst_0
      48: putfield      #19                 // Field startIndex:I
      51: aload_0
      52: dup
      53: getfield      #18                 // Field numElements:I
      56: aload_1
      57: arraylength
      58: iadd
      59: putfield      #18                 // Field numElements:I
      62: return

  public synchronized double addElementRolling(double);
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalArray:[D
       4: aload_0
       5: getfield      #19                 // Field startIndex:I
       8: daload
       9: dstore_3
      10: aload_0
      11: getfield      #19                 // Field startIndex:I
      14: aload_0
      15: getfield      #18                 // Field numElements:I
      18: iconst_1
      19: iadd
      20: iadd
      21: aload_0
      22: getfield      #25                 // Field internalArray:[D
      25: arraylength
      26: if_icmple     33
      29: aload_0
      30: invokevirtual #29                 // Method expand:()V
      33: aload_0
      34: dup
      35: getfield      #19                 // Field startIndex:I
      38: iconst_1
      39: iadd
      40: putfield      #19                 // Field startIndex:I
      43: aload_0
      44: getfield      #25                 // Field internalArray:[D
      47: aload_0
      48: getfield      #19                 // Field startIndex:I
      51: aload_0
      52: getfield      #18                 // Field numElements:I
      55: iconst_1
      56: isub
      57: iadd
      58: dload_1
      59: dastore
      60: aload_0
      61: invokespecial #31                 // Method shouldContract:()Z
      64: ifeq          71
      67: aload_0
      68: invokevirtual #32                 // Method contract:()V
      71: dload_3
      72: dreturn

  public synchronized double substituteMostRecentElement(double) throws org.apache.commons.math3.exception.MathIllegalStateException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field numElements:I
       4: iconst_1
       5: if_icmpge     23
       8: new           #33                 // class org/apache/commons/math3/exception/MathIllegalStateException
      11: dup
      12: getstatic     #34                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      15: iconst_0
      16: anewarray     #35                 // class java/lang/Object
      19: invokespecial #36                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      22: athrow
      23: aload_0
      24: getfield      #19                 // Field startIndex:I
      27: aload_0
      28: getfield      #18                 // Field numElements:I
      31: iconst_1
      32: isub
      33: iadd
      34: istore_3
      35: aload_0
      36: getfield      #25                 // Field internalArray:[D
      39: iload_3
      40: daload
      41: dstore        4
      43: aload_0
      44: getfield      #25                 // Field internalArray:[D
      47: iload_3
      48: dload_1
      49: dastore
      50: dload         4
      52: dreturn

  protected void checkContractExpand(float, float) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: fload_1
       2: f2d
       3: fload_2
       4: f2d
       5: invokevirtual #24                 // Method checkContractExpand:(DD)V
       8: return

  protected void checkContractExpand(double, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: dload_1
       1: dload_3
       2: dcmpg
       3: ifge          56
       6: new           #37                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
       9: dup
      10: dload_1
      11: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      14: iconst_1
      15: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: iconst_1
      19: invokespecial #39                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      22: astore        5
      24: aload         5
      26: invokevirtual #40                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException.getContext:()Lorg/apache/commons/math3/exception/util/ExceptionContext;
      29: getstatic     #41                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      32: iconst_2
      33: anewarray     #35                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: dload_1
      39: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      42: aastore
      43: dup
      44: iconst_1
      45: dload_3
      46: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      49: aastore
      50: invokevirtual #42                 // Method org/apache/commons/math3/exception/util/ExceptionContext.addMessage:(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      53: aload         5
      55: athrow
      56: dload_1
      57: dconst_1
      58: dcmpg
      59: ifgt          105
      62: new           #37                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      65: dup
      66: dload_1
      67: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      70: iconst_1
      71: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      74: iconst_0
      75: invokespecial #39                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      78: astore        5
      80: aload         5
      82: invokevirtual #40                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException.getContext:()Lorg/apache/commons/math3/exception/util/ExceptionContext;
      85: getstatic     #43                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_ONE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      88: iconst_1
      89: anewarray     #35                 // class java/lang/Object
      92: dup
      93: iconst_0
      94: dload_1
      95: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      98: aastore
      99: invokevirtual #42                 // Method org/apache/commons/math3/exception/util/ExceptionContext.addMessage:(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     102: aload         5
     104: athrow
     105: dload_3
     106: dconst_1
     107: dcmpg
     108: ifgt          154
     111: new           #37                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
     114: dup
     115: dload_1
     116: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     119: iconst_1
     120: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     123: iconst_0
     124: invokespecial #39                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
     127: astore        5
     129: aload         5
     131: invokevirtual #40                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException.getContext:()Lorg/apache/commons/math3/exception/util/ExceptionContext;
     134: getstatic     #44                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
     137: iconst_1
     138: anewarray     #35                 // class java/lang/Object
     141: dup
     142: iconst_0
     143: dload_3
     144: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     147: aastore
     148: invokevirtual #42                 // Method org/apache/commons/math3/exception/util/ExceptionContext.addMessage:(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     151: aload         5
     153: athrow
     154: return

  public synchronized void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #18                 // Field numElements:I
       5: aload_0
       6: iconst_0
       7: putfield      #19                 // Field startIndex:I
      10: return

  public synchronized void contract();
    Code:
       0: aload_0
       1: getfield      #18                 // Field numElements:I
       4: iconst_1
       5: iadd
       6: newarray       double
       8: astore_1
       9: aload_0
      10: getfield      #25                 // Field internalArray:[D
      13: aload_0
      14: getfield      #19                 // Field startIndex:I
      17: aload_1
      18: iconst_0
      19: aload_0
      20: getfield      #18                 // Field numElements:I
      23: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: aload_0
      27: aload_1
      28: putfield      #25                 // Field internalArray:[D
      31: aload_0
      32: iconst_0
      33: putfield      #19                 // Field startIndex:I
      36: return

  public synchronized void discardFrontElements(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokespecial #45                 // Method discardExtremeElements:(IZ)V
       6: return

  public synchronized void discardMostRecentElements(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #45                 // Method discardExtremeElements:(IZ)V
       6: return

  private synchronized void discardExtremeElements(int, boolean) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #18                 // Field numElements:I
       5: if_icmple     40
       8: new           #46                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
      11: dup
      12: getstatic     #47                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      15: iconst_2
      16: anewarray     #35                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: iload_1
      22: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: getfield      #18                 // Field numElements:I
      32: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aastore
      36: invokespecial #48                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      39: athrow
      40: iload_1
      41: ifge          66
      44: new           #46                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
      47: dup
      48: getstatic     #49                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      51: iconst_1
      52: anewarray     #35                 // class java/lang/Object
      55: dup
      56: iconst_0
      57: iload_1
      58: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokespecial #48                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      65: athrow
      66: aload_0
      67: dup
      68: getfield      #18                 // Field numElements:I
      71: iload_1
      72: isub
      73: putfield      #18                 // Field numElements:I
      76: iload_2
      77: ifeq          90
      80: aload_0
      81: dup
      82: getfield      #19                 // Field startIndex:I
      85: iload_1
      86: iadd
      87: putfield      #19                 // Field startIndex:I
      90: aload_0
      91: invokespecial #31                 // Method shouldContract:()Z
      94: ifeq          101
      97: aload_0
      98: invokevirtual #32                 // Method contract:()V
     101: return

  protected synchronized void expand();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
       6: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
       9: if_acmpne     31
      12: aload_0
      13: getfield      #25                 // Field internalArray:[D
      16: arraylength
      17: i2d
      18: aload_0
      19: getfield      #16                 // Field expansionFactor:D
      22: dmul
      23: invokestatic  #50                 // Method org/apache/commons/math3/util/FastMath.ceil:(D)D
      26: d2i
      27: istore_1
      28: goto          47
      31: aload_0
      32: getfield      #25                 // Field internalArray:[D
      35: arraylength
      36: i2l
      37: aload_0
      38: getfield      #16                 // Field expansionFactor:D
      41: invokestatic  #51                 // Method org/apache/commons/math3/util/FastMath.round:(D)J
      44: ladd
      45: l2i
      46: istore_1
      47: iload_1
      48: newarray       double
      50: astore_2
      51: aload_0
      52: getfield      #25                 // Field internalArray:[D
      55: iconst_0
      56: aload_2
      57: iconst_0
      58: aload_0
      59: getfield      #25                 // Field internalArray:[D
      62: arraylength
      63: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      66: aload_0
      67: aload_2
      68: putfield      #25                 // Field internalArray:[D
      71: return

  private synchronized void expandTo(int);
    Code:
       0: iload_1
       1: newarray       double
       3: astore_2
       4: aload_0
       5: getfield      #25                 // Field internalArray:[D
       8: iconst_0
       9: aload_2
      10: iconst_0
      11: aload_0
      12: getfield      #25                 // Field internalArray:[D
      15: arraylength
      16: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_0
      20: aload_2
      21: putfield      #25                 // Field internalArray:[D
      24: return

  public float getContractionCriteria();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getContractionCriterion:()D
       4: d2f
       5: freturn

  public double getContractionCriterion();
    Code:
       0: aload_0
       1: getfield      #15                 // Field contractionCriterion:D
       4: dreturn

  public synchronized double getElement(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #18                 // Field numElements:I
       5: if_icmplt     17
       8: new           #53                 // class java/lang/ArrayIndexOutOfBoundsException
      11: dup
      12: iload_1
      13: invokespecial #54                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      16: athrow
      17: iload_1
      18: iflt          33
      21: aload_0
      22: getfield      #25                 // Field internalArray:[D
      25: aload_0
      26: getfield      #19                 // Field startIndex:I
      29: iload_1
      30: iadd
      31: daload
      32: dreturn
      33: new           #53                 // class java/lang/ArrayIndexOutOfBoundsException
      36: dup
      37: iload_1
      38: invokespecial #54                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      41: athrow

  public synchronized double[] getElements();
    Code:
       0: aload_0
       1: getfield      #18                 // Field numElements:I
       4: newarray       double
       6: astore_1
       7: aload_0
       8: getfield      #25                 // Field internalArray:[D
      11: aload_0
      12: getfield      #19                 // Field startIndex:I
      15: aload_1
      16: iconst_0
      17: aload_0
      18: getfield      #18                 // Field numElements:I
      21: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_1
      25: areturn

  public float getExpansionFactor();
    Code:
       0: aload_0
       1: getfield      #16                 // Field expansionFactor:D
       4: d2f
       5: freturn

  public int getExpansionMode();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #55                 // Field org/apache/commons/math3/util/ResizableDoubleArray$1.$SwitchMap$org$apache$commons$math3$util$ResizableDoubleArray$ExpansionMode:[I
       7: aload_0
       8: getfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      11: invokevirtual #56                 // Method org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.ordinal:()I
      14: iaload
      15: lookupswitch  { // 2
                     1: 40
                     2: 44
               default: 48
          }
      40: iconst_0
      41: aload_1
      42: monitorexit
      43: ireturn
      44: iconst_1
      45: aload_1
      46: monitorexit
      47: ireturn
      48: new           #57                 // class org/apache/commons/math3/exception/MathInternalError
      51: dup
      52: invokespecial #58                 // Method org/apache/commons/math3/exception/MathInternalError."<init>":()V
      55: athrow
      56: astore_2
      57: aload_1
      58: monitorexit
      59: aload_2
      60: athrow
    Exception table:
       from    to  target type
           4    43    56   any
          44    47    56   any
          48    59    56   any

  synchronized int getInternalLength();
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalArray:[D
       4: arraylength
       5: ireturn

  public int getCapacity();
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalArray:[D
       4: arraylength
       5: ireturn

  public synchronized int getNumElements();
    Code:
       0: aload_0
       1: getfield      #18                 // Field numElements:I
       4: ireturn

  public synchronized double[] getInternalValues();
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalArray:[D
       4: areturn

  protected double[] getArrayRef();
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalArray:[D
       4: areturn

  protected int getStartIndex();
    Code:
       0: aload_0
       1: getfield      #19                 // Field startIndex:I
       4: ireturn

  public void setContractionCriteria(float) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: fload_1
       2: aload_0
       3: invokevirtual #59                 // Method getExpansionFactor:()F
       6: invokevirtual #60                 // Method checkContractExpand:(FF)V
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: fload_1
      15: f2d
      16: putfield      #15                 // Field contractionCriterion:D
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: return
    Exception table:
       from    to  target type
          13    21    24   any
          24    27    24   any

  public double compute(org.apache.commons.math3.util.MathArrays$Function);
    Code:
       0: aload_0
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_0
       6: getfield      #25                 // Field internalArray:[D
       9: astore_2
      10: aload_0
      11: getfield      #19                 // Field startIndex:I
      14: istore_3
      15: aload_0
      16: getfield      #18                 // Field numElements:I
      19: istore        4
      21: aload         5
      23: monitorexit
      24: goto          35
      27: astore        6
      29: aload         5
      31: monitorexit
      32: aload         6
      34: athrow
      35: aload_1
      36: aload_2
      37: iload_3
      38: iload         4
      40: invokeinterface #61,  4           // InterfaceMethod org/apache/commons/math3/util/MathArrays$Function.evaluate:([DII)D
      45: dreturn
    Exception table:
       from    to  target type
           5    24    27   any
          27    32    27   any

  public synchronized void setElement(int, double);
    Code:
       0: iload_1
       1: ifge          13
       4: new           #53                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: iload_1
       9: invokespecial #54                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      12: athrow
      13: iload_1
      14: iconst_1
      15: iadd
      16: aload_0
      17: getfield      #18                 // Field numElements:I
      20: if_icmple     30
      23: aload_0
      24: iload_1
      25: iconst_1
      26: iadd
      27: putfield      #18                 // Field numElements:I
      30: aload_0
      31: getfield      #19                 // Field startIndex:I
      34: iload_1
      35: iadd
      36: aload_0
      37: getfield      #25                 // Field internalArray:[D
      40: arraylength
      41: if_icmplt     56
      44: aload_0
      45: aload_0
      46: getfield      #19                 // Field startIndex:I
      49: iload_1
      50: iconst_1
      51: iadd
      52: iadd
      53: invokespecial #62                 // Method expandTo:(I)V
      56: aload_0
      57: getfield      #25                 // Field internalArray:[D
      60: aload_0
      61: getfield      #19                 // Field startIndex:I
      64: iload_1
      65: iadd
      66: dload_2
      67: dastore
      68: return

  public void setExpansionFactor(float) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #52                 // Method getContractionCriterion:()D
       5: fload_1
       6: f2d
       7: invokevirtual #24                 // Method checkContractExpand:(DD)V
      10: aload_0
      11: dup
      12: astore_2
      13: monitorenter
      14: aload_0
      15: fload_1
      16: f2d
      17: putfield      #16                 // Field expansionFactor:D
      20: aload_2
      21: monitorexit
      22: goto          30
      25: astore_3
      26: aload_2
      27: monitorexit
      28: aload_3
      29: athrow
      30: return
    Exception table:
       from    to  target type
          14    22    25   any
          25    28    25   any

  public void setExpansionMode(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: iload_1
       1: ifeq          55
       4: iload_1
       5: iconst_1
       6: if_icmpeq     55
       9: new           #46                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
      12: dup
      13: getstatic     #63                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.UNSUPPORTED_EXPANSION_MODE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      16: iconst_5
      17: anewarray     #35                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: iload_1
      23: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: dup
      28: iconst_1
      29: iconst_0
      30: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_2
      36: ldc           #64                 // String MULTIPLICATIVE_MODE
      38: aastore
      39: dup
      40: iconst_3
      41: iconst_1
      42: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: aastore
      46: dup
      47: iconst_4
      48: ldc           #65                 // String ADDITIVE_MODE
      50: aastore
      51: invokespecial #48                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      54: athrow
      55: aload_0
      56: dup
      57: astore_2
      58: monitorenter
      59: iload_1
      60: ifne          73
      63: aload_0
      64: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      67: invokevirtual #66                 // Method setExpansionMode:(Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;)V
      70: goto          85
      73: iload_1
      74: iconst_1
      75: if_icmpne     85
      78: aload_0
      79: getstatic     #12                 // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.ADDITIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      82: invokevirtual #66                 // Method setExpansionMode:(Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;)V
      85: aload_2
      86: monitorexit
      87: goto          95
      90: astore_3
      91: aload_2
      92: monitorexit
      93: aload_3
      94: athrow
      95: return
    Exception table:
       from    to  target type
          59    87    90   any
          90    93    90   any

  public void setExpansionMode(org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aload_1
       6: putfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  protected void setInitialCapacity(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: return

  public synchronized void setNumElements(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: iload_1
       1: ifge          26
       4: new           #46                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
       7: dup
       8: getstatic     #67                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX_NOT_POSITIVE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iconst_1
      12: anewarray     #35                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: iload_1
      18: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aastore
      22: invokespecial #48                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      25: athrow
      26: aload_0
      27: getfield      #19                 // Field startIndex:I
      30: iload_1
      31: iadd
      32: istore_2
      33: iload_2
      34: aload_0
      35: getfield      #25                 // Field internalArray:[D
      38: arraylength
      39: if_icmple     47
      42: aload_0
      43: iload_2
      44: invokespecial #62                 // Method expandTo:(I)V
      47: aload_0
      48: iload_1
      49: putfield      #18                 // Field numElements:I
      52: return

  private synchronized boolean shouldContract();
    Code:
       0: aload_0
       1: getfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
       4: getstatic     #7                  // Field org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.MULTIPLICATIVE:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
       7: if_acmpne     37
      10: aload_0
      11: getfield      #25                 // Field internalArray:[D
      14: arraylength
      15: i2f
      16: aload_0
      17: getfield      #18                 // Field numElements:I
      20: i2f
      21: fdiv
      22: f2d
      23: aload_0
      24: getfield      #15                 // Field contractionCriterion:D
      27: dcmpl
      28: ifle          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #25                 // Field internalArray:[D
      41: arraylength
      42: aload_0
      43: getfield      #18                 // Field numElements:I
      46: isub
      47: i2d
      48: aload_0
      49: getfield      #15                 // Field contractionCriterion:D
      52: dcmpl
      53: ifle          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public synchronized int start();
    Code:
       0: aload_0
       1: getfield      #19                 // Field startIndex:I
       4: ireturn

  public static void copy(org.apache.commons.math3.util.ResizableDoubleArray, org.apache.commons.math3.util.ResizableDoubleArray) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: invokestatic  #27                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_1
      13: dup
      14: astore_3
      15: monitorenter
      16: aload_1
      17: aload_0
      18: getfield      #15                 // Field contractionCriterion:D
      21: putfield      #15                 // Field contractionCriterion:D
      24: aload_1
      25: aload_0
      26: getfield      #16                 // Field expansionFactor:D
      29: putfield      #16                 // Field expansionFactor:D
      32: aload_1
      33: aload_0
      34: getfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      37: putfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      40: aload_1
      41: aload_0
      42: getfield      #25                 // Field internalArray:[D
      45: arraylength
      46: newarray       double
      48: putfield      #25                 // Field internalArray:[D
      51: aload_0
      52: getfield      #25                 // Field internalArray:[D
      55: iconst_0
      56: aload_1
      57: getfield      #25                 // Field internalArray:[D
      60: iconst_0
      61: aload_1
      62: getfield      #25                 // Field internalArray:[D
      65: arraylength
      66: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload_1
      70: aload_0
      71: getfield      #18                 // Field numElements:I
      74: putfield      #18                 // Field numElements:I
      77: aload_1
      78: aload_0
      79: getfield      #19                 // Field startIndex:I
      82: putfield      #19                 // Field startIndex:I
      85: aload_3
      86: monitorexit
      87: goto          97
      90: astore        4
      92: aload_3
      93: monitorexit
      94: aload         4
      96: athrow
      97: aload_2
      98: monitorexit
      99: goto          109
     102: astore        5
     104: aload_2
     105: monitorexit
     106: aload         5
     108: athrow
     109: return
    Exception table:
       from    to  target type
          16    87    90   any
          90    94    90   any
          12    99   102   any
         102   106   102   any

  public synchronized org.apache.commons.math3.util.ResizableDoubleArray copy();
    Code:
       0: new           #68                 // class org/apache/commons/math3/util/ResizableDoubleArray
       3: dup
       4: invokespecial #69                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #28                 // Method copy:(Lorg/apache/commons/math3/util/ResizableDoubleArray;Lorg/apache/commons/math3/util/ResizableDoubleArray;)V
      13: aload_1
      14: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #68                 // class org/apache/commons/math3/util/ResizableDoubleArray
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: dup
      18: astore_2
      19: monitorenter
      20: aload_1
      21: dup
      22: astore_3
      23: monitorenter
      24: iconst_1
      25: istore        4
      27: aload_1
      28: checkcast     #68                 // class org/apache/commons/math3/util/ResizableDoubleArray
      31: astore        5
      33: iload         4
      35: ifeq          55
      38: aload         5
      40: getfield      #15                 // Field contractionCriterion:D
      43: aload_0
      44: getfield      #15                 // Field contractionCriterion:D
      47: dcmpl
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: istore        4
      58: iload         4
      60: ifeq          80
      63: aload         5
      65: getfield      #16                 // Field expansionFactor:D
      68: aload_0
      69: getfield      #16                 // Field expansionFactor:D
      72: dcmpl
      73: ifne          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: istore        4
      83: iload         4
      85: ifeq          104
      88: aload         5
      90: getfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      93: aload_0
      94: getfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      97: if_acmpne     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: istore        4
     107: iload         4
     109: ifeq          128
     112: aload         5
     114: getfield      #18                 // Field numElements:I
     117: aload_0
     118: getfield      #18                 // Field numElements:I
     121: if_icmpne     128
     124: iconst_1
     125: goto          129
     128: iconst_0
     129: istore        4
     131: iload         4
     133: ifeq          152
     136: aload         5
     138: getfield      #19                 // Field startIndex:I
     141: aload_0
     142: getfield      #19                 // Field startIndex:I
     145: if_icmpne     152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: istore        4
     155: iload         4
     157: ifne          166
     160: iconst_0
     161: aload_3
     162: monitorexit
     163: aload_2
     164: monitorexit
     165: ireturn
     166: aload_0
     167: getfield      #25                 // Field internalArray:[D
     170: aload         5
     172: getfield      #25                 // Field internalArray:[D
     175: invokestatic  #70                 // Method java/util/Arrays.equals:([D[D)Z
     178: aload_3
     179: monitorexit
     180: aload_2
     181: monitorexit
     182: ireturn
     183: astore        6
     185: aload_3
     186: monitorexit
     187: aload         6
     189: athrow
     190: astore        7
     192: aload_2
     193: monitorexit
     194: aload         7
     196: athrow
    Exception table:
       from    to  target type
          24   163   183   any
         166   180   183   any
         183   187   183   any
          20   165   190   any
         166   182   190   any
         183   194   190   any

  public synchronized int hashCode();
    Code:
       0: bipush        6
       2: newarray       int
       4: astore_1
       5: aload_1
       6: iconst_0
       7: aload_0
       8: getfield      #16                 // Field expansionFactor:D
      11: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      14: invokevirtual #71                 // Method java/lang/Double.hashCode:()I
      17: iastore
      18: aload_1
      19: iconst_1
      20: aload_0
      21: getfield      #15                 // Field contractionCriterion:D
      24: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      27: invokevirtual #71                 // Method java/lang/Double.hashCode:()I
      30: iastore
      31: aload_1
      32: iconst_2
      33: aload_0
      34: getfield      #17                 // Field expansionMode:Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
      37: invokevirtual #72                 // Method org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode.hashCode:()I
      40: iastore
      41: aload_1
      42: iconst_3
      43: aload_0
      44: getfield      #25                 // Field internalArray:[D
      47: invokestatic  #73                 // Method java/util/Arrays.hashCode:([D)I
      50: iastore
      51: aload_1
      52: iconst_4
      53: aload_0
      54: getfield      #18                 // Field numElements:I
      57: iastore
      58: aload_1
      59: iconst_5
      60: aload_0
      61: getfield      #19                 // Field startIndex:I
      64: iastore
      65: aload_1
      66: invokestatic  #74                 // Method java/util/Arrays.hashCode:([I)I
      69: ireturn
}
