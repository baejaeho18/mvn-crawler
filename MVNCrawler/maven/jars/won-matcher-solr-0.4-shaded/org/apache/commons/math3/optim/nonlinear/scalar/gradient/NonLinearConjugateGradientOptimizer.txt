Compiled from "NonLinearConjugateGradientOptimizer.java"
public class org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer extends org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer {
  private final org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula updateFormula;

  private final org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner preconditioner;

  private final org.apache.commons.math3.optim.nonlinear.scalar.LineSearch line;

  public org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula, org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #1                  // double 1.0E-8d
       6: ldc2_w        #1                  // double 1.0E-8d
       9: ldc2_w        #1                  // double 1.0E-8d
      12: new           #3                  // class org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$IdentityPreconditioner
      15: dup
      16: invokespecial #4                  // Method org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$IdentityPreconditioner."<init>":()V
      19: invokespecial #5                  // Method "<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDDLorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V
      22: return

  public org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula, org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointValuePair>, org.apache.commons.math3.analysis.solvers.UnivariateSolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #3                  // class org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$IdentityPreconditioner
       7: dup
       8: invokespecial #4                  // Method org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$IdentityPreconditioner."<init>":()V
      11: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V
      14: return

  public org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula, org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointValuePair>, double, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: dload_3
       4: dload         5
       6: dload         7
       8: new           #3                  // class org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$IdentityPreconditioner
      11: dup
      12: invokespecial #4                  // Method org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$IdentityPreconditioner."<init>":()V
      15: invokespecial #5                  // Method "<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDDLorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V
      18: return

  public org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula, org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointValuePair>, org.apache.commons.math3.analysis.solvers.UnivariateSolver, org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/analysis/solvers/UnivariateSolver.getRelativeAccuracy:()D
       9: aload_3
      10: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/math3/analysis/solvers/UnivariateSolver.getAbsoluteAccuracy:()D
      15: aload_3
      16: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/math3/analysis/solvers/UnivariateSolver.getAbsoluteAccuracy:()D
      21: aload         4
      23: invokespecial #5                  // Method "<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDDLorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V
      26: return

  public org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula, org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointValuePair>, double, double, double, org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #9                  // Method org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: aload_0
       6: aload_1
       7: putfield      #10                 // Field updateFormula:Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;
      10: aload_0
      11: aload         9
      13: putfield      #11                 // Field preconditioner:Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;
      16: aload_0
      17: new           #12                 // class org/apache/commons/math3/optim/nonlinear/scalar/LineSearch
      20: dup
      21: aload_0
      22: dload_3
      23: dload         5
      25: dload         7
      27: invokespecial #13                 // Method org/apache/commons/math3/optim/nonlinear/scalar/LineSearch."<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;DDD)V
      30: putfield      #14                 // Field line:Lorg/apache/commons/math3/optim/nonlinear/scalar/LineSearch;
      33: return

  public org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData...) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
       5: areturn

  protected org.apache.commons.math3.optim.PointValuePair doOptimize();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getConvergenceChecker:()Lorg/apache/commons/math3/optim/ConvergenceChecker;
       4: astore_1
       5: aload_0
       6: invokevirtual #17                 // Method getStartPoint:()[D
       9: astore_2
      10: aload_0
      11: invokevirtual #18                 // Method getGoalType:()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
      14: astore_3
      15: aload_2
      16: arraylength
      17: istore        4
      19: aload_0
      20: aload_2
      21: invokevirtual #19                 // Method computeObjectiveGradient:([D)[D
      24: astore        5
      26: aload_3
      27: getstatic     #20                 // Field org/apache/commons/math3/optim/nonlinear/scalar/GoalType.MINIMIZE:Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
      30: if_acmpne     60
      33: iconst_0
      34: istore        6
      36: iload         6
      38: iload         4
      40: if_icmpge     60
      43: aload         5
      45: iload         6
      47: aload         5
      49: iload         6
      51: daload
      52: dneg
      53: dastore
      54: iinc          6, 1
      57: goto          36
      60: aload_0
      61: getfield      #11                 // Field preconditioner:Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;
      64: aload_2
      65: aload         5
      67: invokeinterface #21,  3           // InterfaceMethod org/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner.precondition:([D[D)[D
      72: astore        6
      74: aload         6
      76: invokevirtual #22                 // Method "[D".clone:()Ljava/lang/Object;
      79: checkcast     #23                 // class "[D"
      82: astore        7
      84: dconst_0
      85: dstore        8
      87: iconst_0
      88: istore        10
      90: iload         10
      92: iload         4
      94: if_icmpge     119
      97: dload         8
      99: aload         5
     101: iload         10
     103: daload
     104: aload         7
     106: iload         10
     108: daload
     109: dmul
     110: dadd
     111: dstore        8
     113: iinc          10, 1
     116: goto          90
     119: aconst_null
     120: astore        10
     122: aload_0
     123: invokevirtual #24                 // Method incrementIterationCount:()V
     126: aload_0
     127: aload_2
     128: invokevirtual #25                 // Method computeObjectiveValue:([D)D
     131: dstore        11
     133: aload         10
     135: astore        13
     137: new           #26                 // class org/apache/commons/math3/optim/PointValuePair
     140: dup
     141: aload_2
     142: dload         11
     144: invokespecial #27                 // Method org/apache/commons/math3/optim/PointValuePair."<init>":([DD)V
     147: astore        10
     149: aload         13
     151: ifnull        174
     154: aload_1
     155: aload_0
     156: invokevirtual #28                 // Method getIterations:()I
     159: aload         13
     161: aload         10
     163: invokeinterface #29,  4           // InterfaceMethod org/apache/commons/math3/optim/ConvergenceChecker.converged:(ILjava/lang/Object;Ljava/lang/Object;)Z
     168: ifeq          174
     171: aload         10
     173: areturn
     174: aload_0
     175: getfield      #14                 // Field line:Lorg/apache/commons/math3/optim/nonlinear/scalar/LineSearch;
     178: aload_2
     179: aload         7
     181: invokevirtual #30                 // Method org/apache/commons/math3/optim/nonlinear/scalar/LineSearch.search:([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
     184: invokevirtual #31                 // Method org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.getPoint:()D
     187: dstore        14
     189: iconst_0
     190: istore        16
     192: iload         16
     194: aload_2
     195: arraylength
     196: if_icmpge     220
     199: aload_2
     200: iload         16
     202: dup2
     203: daload
     204: dload         14
     206: aload         7
     208: iload         16
     210: daload
     211: dmul
     212: dadd
     213: dastore
     214: iinc          16, 1
     217: goto          192
     220: aload_0
     221: aload_2
     222: invokevirtual #19                 // Method computeObjectiveGradient:([D)[D
     225: astore        5
     227: aload_3
     228: getstatic     #20                 // Field org/apache/commons/math3/optim/nonlinear/scalar/GoalType.MINIMIZE:Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
     231: if_acmpne     261
     234: iconst_0
     235: istore        16
     237: iload         16
     239: iload         4
     241: if_icmpge     261
     244: aload         5
     246: iload         16
     248: aload         5
     250: iload         16
     252: daload
     253: dneg
     254: dastore
     255: iinc          16, 1
     258: goto          237
     261: dload         8
     263: dstore        16
     265: aload_0
     266: getfield      #11                 // Field preconditioner:Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;
     269: aload_2
     270: aload         5
     272: invokeinterface #21,  3           // InterfaceMethod org/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner.precondition:([D[D)[D
     277: astore        18
     279: dconst_0
     280: dstore        8
     282: iconst_0
     283: istore        19
     285: iload         19
     287: iload         4
     289: if_icmpge     314
     292: dload         8
     294: aload         5
     296: iload         19
     298: daload
     299: aload         18
     301: iload         19
     303: daload
     304: dmul
     305: dadd
     306: dstore        8
     308: iinc          19, 1
     311: goto          285
     314: getstatic     #32                 // Field org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$1.$SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula:[I
     317: aload_0
     318: getfield      #10                 // Field updateFormula:Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;
     321: invokevirtual #33                 // Method org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula.ordinal:()I
     324: iaload
     325: lookupswitch  { // 2
                     1: 352
                     2: 362
               default: 411
          }
     352: dload         8
     354: dload         16
     356: ddiv
     357: dstore        19
     359: goto          419
     362: dconst_0
     363: dstore        21
     365: iconst_0
     366: istore        23
     368: iload         23
     370: aload         5
     372: arraylength
     373: if_icmpge     398
     376: dload         21
     378: aload         5
     380: iload         23
     382: daload
     383: aload         6
     385: iload         23
     387: daload
     388: dmul
     389: dadd
     390: dstore        21
     392: iinc          23, 1
     395: goto          368
     398: dload         8
     400: dload         21
     402: dsub
     403: dload         16
     405: ddiv
     406: dstore        19
     408: goto          419
     411: new           #34                 // class org/apache/commons/math3/exception/MathInternalError
     414: dup
     415: invokespecial #35                 // Method org/apache/commons/math3/exception/MathInternalError."<init>":()V
     418: athrow
     419: aload         18
     421: astore        6
     423: aload_0
     424: invokevirtual #28                 // Method getIterations:()I
     427: iload         4
     429: irem
     430: ifeq          440
     433: dload         19
     435: dconst_0
     436: dcmpg
     437: ifge          453
     440: aload         6
     442: invokevirtual #36                 // Method "[D".clone:()Ljava/lang/Object;
     445: checkcast     #23                 // class "[D"
     448: astore        7
     450: goto          488
     453: iconst_0
     454: istore        21
     456: iload         21
     458: iload         4
     460: if_icmpge     488
     463: aload         7
     465: iload         21
     467: aload         6
     469: iload         21
     471: daload
     472: dload         19
     474: aload         7
     476: iload         21
     478: daload
     479: dmul
     480: dadd
     481: dastore
     482: iinc          21, 1
     485: goto          456
     488: goto          122

  protected void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_0
       6: invokespecial #38                 // Method checkParameters:()V
       9: return

  private void checkParameters();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getLowerBound:()[D
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #40                 // Method getUpperBound:()[D
      11: ifnull        29
      14: new           #41                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
      17: dup
      18: getstatic     #42                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.CONSTRAINT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      21: iconst_0
      22: anewarray     #43                 // class java/lang/Object
      25: invokespecial #44                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      28: athrow
      29: return

  public java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
       5: areturn

  protected java.lang.Object doOptimize();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method doOptimize:()Lorg/apache/commons/math3/optim/PointValuePair;
       4: areturn
}
