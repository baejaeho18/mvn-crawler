Compiled from "OLSMultipleLinearRegression.java"
public class org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression extends org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression {
  private org.apache.commons.math3.linear.QRDecomposition qr;

  private final double threshold;

  public org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression();
    Code:
       0: aload_0
       1: dconst_0
       2: invokespecial #1                  // Method "<init>":(D)V
       5: return

  public org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression(double);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field qr:Lorg/apache/commons/math3/linear/QRDecomposition;
       9: aload_0
      10: dload_1
      11: putfield      #4                  // Field threshold:D
      14: return

  public void newSampleData(double[], double[][]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #5                  // Method validateSampleData:([[D[D)V
       6: aload_0
       7: aload_1
       8: invokevirtual #6                  // Method newYSampleData:([D)V
      11: aload_0
      12: aload_2
      13: invokevirtual #7                  // Method newXSampleData:([[D)V
      16: return

  public void newSampleData(double[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #8                  // Method org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.newSampleData:([DII)V
       7: aload_0
       8: new           #9                  // class org/apache/commons/math3/linear/QRDecomposition
      11: dup
      12: aload_0
      13: invokevirtual #10                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      16: aload_0
      17: getfield      #4                  // Field threshold:D
      20: invokespecial #11                 // Method org/apache/commons/math3/linear/QRDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;D)V
      23: putfield      #3                  // Field qr:Lorg/apache/commons/math3/linear/QRDecomposition;
      26: return

  public org.apache.commons.math3.linear.RealMatrix calculateHat();
    Code:
       0: aload_0
       1: getfield      #3                  // Field qr:Lorg/apache/commons/math3/linear/QRDecomposition;
       4: invokevirtual #12                 // Method org/apache/commons/math3/linear/QRDecomposition.getQ:()Lorg/apache/commons/math3/linear/RealMatrix;
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field qr:Lorg/apache/commons/math3/linear/QRDecomposition;
      12: invokevirtual #13                 // Method org/apache/commons/math3/linear/QRDecomposition.getR:()Lorg/apache/commons/math3/linear/RealMatrix;
      15: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      20: istore_2
      21: aload_1
      22: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      27: istore_3
      28: new           #15                 // class org/apache/commons/math3/linear/Array2DRowRealMatrix
      31: dup
      32: iload_3
      33: iload_3
      34: invokespecial #16                 // Method org/apache/commons/math3/linear/Array2DRowRealMatrix."<init>":(II)V
      37: astore        4
      39: aload         4
      41: invokevirtual #17                 // Method org/apache/commons/math3/linear/Array2DRowRealMatrix.getDataRef:()[[D
      44: astore        5
      46: iconst_0
      47: istore        6
      49: iload         6
      51: iload_3
      52: if_icmpge     110
      55: iconst_0
      56: istore        7
      58: iload         7
      60: iload_3
      61: if_icmpge     104
      64: iload         6
      66: iload         7
      68: if_icmpne     89
      71: iload         6
      73: iload_2
      74: if_icmpge     89
      77: aload         5
      79: iload         6
      81: aaload
      82: iload         7
      84: dconst_1
      85: dastore
      86: goto          98
      89: aload         5
      91: iload         6
      93: aaload
      94: iload         7
      96: dconst_0
      97: dastore
      98: iinc          7, 1
     101: goto          58
     104: iinc          6, 1
     107: goto          49
     110: aload_1
     111: aload         4
     113: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
     118: aload_1
     119: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.transpose:()Lorg/apache/commons/math3/linear/RealMatrix;
     124: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
     129: areturn

  public double calculateTotalSumOfSquares();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isNoIntercept:()Z
       4: ifeq          18
       7: aload_0
       8: invokevirtual #21                 // Method getY:()Lorg/apache/commons/math3/linear/RealVector;
      11: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector.toArray:()[D
      14: invokestatic  #23                 // Method org/apache/commons/math3/stat/StatUtils.sumSq:([D)D
      17: dreturn
      18: new           #24                 // class org/apache/commons/math3/stat/descriptive/moment/SecondMoment
      21: dup
      22: invokespecial #25                 // Method org/apache/commons/math3/stat/descriptive/moment/SecondMoment."<init>":()V
      25: aload_0
      26: invokevirtual #21                 // Method getY:()Lorg/apache/commons/math3/linear/RealVector;
      29: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector.toArray:()[D
      32: invokevirtual #26                 // Method org/apache/commons/math3/stat/descriptive/moment/SecondMoment.evaluate:([D)D
      35: dreturn

  public double calculateResidualSumOfSquares();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method calculateResiduals:()Lorg/apache/commons/math3/linear/RealVector;
       4: astore_1
       5: aload_1
       6: aload_1
       7: invokevirtual #28                 // Method org/apache/commons/math3/linear/RealVector.dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      10: dreturn

  public double calculateRSquared();
    Code:
       0: dconst_1
       1: aload_0
       2: invokevirtual #29                 // Method calculateResidualSumOfSquares:()D
       5: aload_0
       6: invokevirtual #30                 // Method calculateTotalSumOfSquares:()D
       9: ddiv
      10: dsub
      11: dreturn

  public double calculateAdjustedRSquared();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
       4: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
       9: i2d
      10: dstore_1
      11: aload_0
      12: invokevirtual #20                 // Method isNoIntercept:()Z
      15: ifeq          42
      18: dconst_1
      19: dconst_1
      20: aload_0
      21: invokevirtual #32                 // Method calculateRSquared:()D
      24: dsub
      25: dload_1
      26: dload_1
      27: aload_0
      28: invokevirtual #10                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      31: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      36: i2d
      37: dsub
      38: ddiv
      39: dmul
      40: dsub
      41: dreturn
      42: dconst_1
      43: aload_0
      44: invokevirtual #29                 // Method calculateResidualSumOfSquares:()D
      47: dload_1
      48: dconst_1
      49: dsub
      50: dmul
      51: aload_0
      52: invokevirtual #30                 // Method calculateTotalSumOfSquares:()D
      55: dload_1
      56: aload_0
      57: invokevirtual #10                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      60: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      65: i2d
      66: dsub
      67: dmul
      68: ddiv
      69: dsub
      70: dreturn

  protected void newXSampleData(double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.newXSampleData:([[D)V
       5: aload_0
       6: new           #9                  // class org/apache/commons/math3/linear/QRDecomposition
       9: dup
      10: aload_0
      11: invokevirtual #10                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      14: aload_0
      15: getfield      #4                  // Field threshold:D
      18: invokespecial #11                 // Method org/apache/commons/math3/linear/QRDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;D)V
      21: putfield      #3                  // Field qr:Lorg/apache/commons/math3/linear/QRDecomposition;
      24: return

  protected org.apache.commons.math3.linear.RealVector calculateBeta();
    Code:
       0: aload_0
       1: getfield      #3                  // Field qr:Lorg/apache/commons/math3/linear/QRDecomposition;
       4: invokevirtual #34                 // Method org/apache/commons/math3/linear/QRDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
       7: aload_0
       8: invokevirtual #21                 // Method getY:()Lorg/apache/commons/math3/linear/RealVector;
      11: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.solve:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      16: areturn

  protected org.apache.commons.math3.linear.RealMatrix calculateBetaVariance();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
       9: istore_1
      10: aload_0
      11: getfield      #3                  // Field qr:Lorg/apache/commons/math3/linear/QRDecomposition;
      14: invokevirtual #13                 // Method org/apache/commons/math3/linear/QRDecomposition.getR:()Lorg/apache/commons/math3/linear/RealMatrix;
      17: iconst_0
      18: iload_1
      19: iconst_1
      20: isub
      21: iconst_0
      22: iload_1
      23: iconst_1
      24: isub
      25: invokeinterface #36,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getSubMatrix:(IIII)Lorg/apache/commons/math3/linear/RealMatrix;
      30: astore_2
      31: new           #37                 // class org/apache/commons/math3/linear/LUDecomposition
      34: dup
      35: aload_2
      36: invokespecial #38                 // Method org/apache/commons/math3/linear/LUDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;)V
      39: invokevirtual #39                 // Method org/apache/commons/math3/linear/LUDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
      42: invokeinterface #40,  1           // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.getInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
      47: astore_3
      48: aload_3
      49: aload_3
      50: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.transpose:()Lorg/apache/commons/math3/linear/RealMatrix;
      55: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      60: areturn
}
