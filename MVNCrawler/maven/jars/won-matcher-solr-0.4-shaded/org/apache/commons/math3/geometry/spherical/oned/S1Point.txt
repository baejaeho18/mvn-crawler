Compiled from "S1Point.java"
public class org.apache.commons.math3.geometry.spherical.oned.S1Point implements org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.oned.Sphere1D> {
  public static final org.apache.commons.math3.geometry.spherical.oned.S1Point NaN;

  private static final long serialVersionUID;

  private final double alpha;

  private final org.apache.commons.math3.geometry.euclidean.twod.Vector2D vector;

  public org.apache.commons.math3.geometry.spherical.oned.S1Point(double);
    Code:
       0: aload_0
       1: dload_1
       2: ldc2_w        #1                  // double 3.141592653589793d
       5: invokestatic  #3                  // Method org/apache/commons/math3/util/MathUtils.normalizeAngle:(DD)D
       8: new           #4                  // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
      11: dup
      12: dload_1
      13: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.cos:(D)D
      16: dload_1
      17: invokestatic  #6                  // Method org/apache/commons/math3/util/FastMath.sin:(D)D
      20: invokespecial #7                  // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D."<init>":(DD)V
      23: invokespecial #8                  // Method "<init>":(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
      26: return

  private org.apache.commons.math3.geometry.spherical.oned.S1Point(double, org.apache.commons.math3.geometry.euclidean.twod.Vector2D);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #10                 // Field alpha:D
       9: aload_0
      10: aload_3
      11: putfield      #11                 // Field vector:Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      14: return

  public double getAlpha();
    Code:
       0: aload_0
       1: getfield      #10                 // Field alpha:D
       4: dreturn

  public org.apache.commons.math3.geometry.euclidean.twod.Vector2D getVector();
    Code:
       0: aload_0
       1: getfield      #11                 // Field vector:Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       4: areturn

  public org.apache.commons.math3.geometry.Space getSpace();
    Code:
       0: invokestatic  #12                 // Method org/apache/commons/math3/geometry/spherical/oned/Sphere1D.getInstance:()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;
       3: areturn

  public boolean isNaN();
    Code:
       0: aload_0
       1: getfield      #10                 // Field alpha:D
       4: invokestatic  #13                 // Method java/lang/Double.isNaN:(D)Z
       7: ireturn

  public double distance(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.oned.Sphere1D>);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class org/apache/commons/math3/geometry/spherical/oned/S1Point
       5: invokestatic  #15                 // Method distance:(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;)D
       8: dreturn

  public static double distance(org.apache.commons.math3.geometry.spherical.oned.S1Point, org.apache.commons.math3.geometry.spherical.oned.S1Point);
    Code:
       0: aload_0
       1: getfield      #11                 // Field vector:Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       4: aload_1
       5: getfield      #11                 // Field vector:Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       8: invokestatic  #16                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.angle:(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
      11: dreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class org/apache/commons/math3/geometry/spherical/oned/S1Point
      11: ifeq          49
      14: aload_1
      15: checkcast     #14                 // class org/apache/commons/math3/geometry/spherical/oned/S1Point
      18: astore_2
      19: aload_2
      20: invokevirtual #17                 // Method isNaN:()Z
      23: ifeq          31
      26: aload_0
      27: invokevirtual #17                 // Method isNaN:()Z
      30: ireturn
      31: aload_0
      32: getfield      #10                 // Field alpha:D
      35: aload_2
      36: getfield      #10                 // Field alpha:D
      39: dcmpl
      40: ifne          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn
      49: iconst_0
      50: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method isNaN:()Z
       4: ifeq          11
       7: sipush        542
      10: ireturn
      11: sipush        1759
      14: aload_0
      15: getfield      #10                 // Field alpha:D
      18: invokestatic  #18                 // Method org/apache/commons/math3/util/MathUtils.hash:(D)I
      21: imul
      22: ireturn

  static {};
    Code:
       0: new           #14                 // class org/apache/commons/math3/geometry/spherical/oned/S1Point
       3: dup
       4: ldc2_w        #19                 // double NaNd
       7: getstatic     #21                 // Field org/apache/commons/math3/geometry/euclidean/twod/Vector2D.NaN:Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      10: invokespecial #8                  // Method "<init>":(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
      13: putstatic     #22                 // Field NaN:Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
      16: return
}
