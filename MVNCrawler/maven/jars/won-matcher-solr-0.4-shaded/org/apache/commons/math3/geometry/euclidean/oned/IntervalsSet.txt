Compiled from "IntervalsSet.java"
public class org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet extends org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> implements java.lang.Iterable<double[]> {
  private static final double DEFAULT_TOLERANCE;

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #7                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":(D)V
       5: return

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(double, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: invokestatic  #8                  // Method buildTree:(DDD)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       8: dload         5
      10: invokespecial #9                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
      13: return

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>, double);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: invokespecial #9                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
       6: return

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>>, double);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: invokespecial #10                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":(Ljava/util/Collection;D)V
       6: return

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet();
    Code:
       0: aload_0
       1: ldc2_w        #11                 // double 1.0E-10d
       4: invokespecial #13                 // Method "<init>":(D)V
       7: return

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: ldc2_w        #11                 // double 1.0E-10d
       6: invokespecial #14                 // Method "<init>":(DDD)V
       9: return

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #11                 // double 1.0E-10d
       5: invokespecial #15                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
       8: return

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #11                 // double 1.0E-10d
       5: invokespecial #16                 // Method "<init>":(Ljava/util/Collection;D)V
       8: return

  private static org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> buildTree(double, double, double);
    Code:
       0: dload_0
       1: invokestatic  #17                 // Method java/lang/Double.isInfinite:(D)Z
       4: ifeq          91
       7: dload_0
       8: dconst_0
       9: dcmpg
      10: ifge          91
      13: dload_2
      14: invokestatic  #17                 // Method java/lang/Double.isInfinite:(D)Z
      17: ifeq          37
      20: dload_2
      21: dconst_0
      22: dcmpl
      23: ifle          37
      26: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      29: dup
      30: getstatic     #19                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      33: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      36: areturn
      37: new           #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      40: dup
      41: new           #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
      44: dup
      45: dload_2
      46: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
      49: iconst_1
      50: dload         4
      52: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
      55: invokevirtual #25                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.wholeHyperplane:()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
      58: astore        6
      60: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      63: dup
      64: aload         6
      66: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      69: dup
      70: getstatic     #26                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      73: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      76: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      79: dup
      80: getstatic     #19                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      83: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      86: aconst_null
      87: invokespecial #27                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
      90: areturn
      91: new           #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      94: dup
      95: new           #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
      98: dup
      99: dload_0
     100: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
     103: iconst_0
     104: dload         4
     106: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
     109: invokevirtual #25                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.wholeHyperplane:()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
     112: astore        6
     114: dload_2
     115: invokestatic  #17                 // Method java/lang/Double.isInfinite:(D)Z
     118: ifeq          158
     121: dload_2
     122: dconst_0
     123: dcmpl
     124: ifle          158
     127: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     130: dup
     131: aload         6
     133: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     136: dup
     137: getstatic     #26                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     140: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     143: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     146: dup
     147: getstatic     #19                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     150: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     153: aconst_null
     154: invokespecial #27                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     157: areturn
     158: new           #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
     161: dup
     162: new           #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
     165: dup
     166: dload_2
     167: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
     170: iconst_1
     171: dload         4
     173: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
     176: invokevirtual #25                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.wholeHyperplane:()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
     179: astore        7
     181: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     184: dup
     185: aload         6
     187: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     190: dup
     191: getstatic     #26                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     194: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     197: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     200: dup
     201: aload         7
     203: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     206: dup
     207: getstatic     #26                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     210: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     213: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     216: dup
     217: getstatic     #19                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     220: invokespecial #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     223: aconst_null
     224: invokespecial #27                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     227: aconst_null
     228: invokespecial #27                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     231: areturn

  public org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: new           #28                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #29                 // Method getTolerance:()D
       9: invokespecial #15                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
      12: areturn

  protected void computeGeometricalProperties();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #30                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       8: ifnonnull     49
      11: aload_0
      12: getstatic     #32                 // Field org/apache/commons/math3/geometry/euclidean/oned/Vector1D.NaN:Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      15: invokevirtual #33                 // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Point;)V
      18: aload_0
      19: aload_0
      20: iconst_0
      21: invokevirtual #30                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      24: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      27: checkcast     #35                 // class java/lang/Boolean
      30: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      33: ifeq          42
      36: ldc2_w        #37                 // double Infinityd
      39: goto          43
      42: dconst_0
      43: invokevirtual #39                 // Method setSize:(D)V
      46: goto          181
      49: dconst_0
      50: dstore_1
      51: dconst_0
      52: dstore_3
      53: aload_0
      54: invokevirtual #40                 // Method asList:()Ljava/util/List;
      57: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore        5
      64: aload         5
      66: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          111
      74: aload         5
      76: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #44                 // class org/apache/commons/math3/geometry/euclidean/oned/Interval
      84: astore        6
      86: dload_1
      87: aload         6
      89: invokevirtual #45                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getSize:()D
      92: dadd
      93: dstore_1
      94: dload_3
      95: aload         6
      97: invokevirtual #45                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getSize:()D
     100: aload         6
     102: invokevirtual #46                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getBarycenter:()D
     105: dmul
     106: dadd
     107: dstore_3
     108: goto          64
     111: aload_0
     112: dload_1
     113: invokevirtual #39                 // Method setSize:(D)V
     116: dload_1
     117: invokestatic  #17                 // Method java/lang/Double.isInfinite:(D)Z
     120: ifeq          133
     123: aload_0
     124: getstatic     #32                 // Field org/apache/commons/math3/geometry/euclidean/oned/Vector1D.NaN:Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
     127: invokevirtual #33                 // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Point;)V
     130: goto          181
     133: dload_1
     134: getstatic     #47                 // Field org/apache/commons/math3/util/Precision.SAFE_MIN:D
     137: dcmpl
     138: iflt          158
     141: aload_0
     142: new           #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
     145: dup
     146: dload_3
     147: dload_1
     148: ddiv
     149: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
     152: invokevirtual #33                 // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Point;)V
     155: goto          181
     158: aload_0
     159: aload_0
     160: iconst_0
     161: invokevirtual #30                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     164: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     167: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     172: checkcast     #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
     175: invokevirtual #49                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.getLocation:()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
     178: invokevirtual #33                 // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Point;)V
     181: return

  public double getInf();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #30                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: astore_1
       6: ldc2_w        #37                 // double Infinityd
       9: dstore_2
      10: aload_1
      11: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      14: ifnull        63
      17: aload_1
      18: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      21: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      26: checkcast     #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      29: astore        4
      31: aload         4
      33: invokevirtual #49                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.getLocation:()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      36: invokevirtual #50                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D.getX:()D
      39: dstore_2
      40: aload         4
      42: invokevirtual #51                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.isDirect:()Z
      45: ifeq          55
      48: aload_1
      49: invokevirtual #52                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      52: goto          59
      55: aload_1
      56: invokevirtual #53                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      59: astore_1
      60: goto          10
      63: aload_1
      64: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      67: checkcast     #35                 // class java/lang/Boolean
      70: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      73: ifeq          82
      76: ldc2_w        #54                 // double -Infinityd
      79: goto          83
      82: dload_2
      83: dreturn

  public double getSup();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #30                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: astore_1
       6: ldc2_w        #54                 // double -Infinityd
       9: dstore_2
      10: aload_1
      11: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      14: ifnull        63
      17: aload_1
      18: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      21: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      26: checkcast     #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      29: astore        4
      31: aload         4
      33: invokevirtual #49                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.getLocation:()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      36: invokevirtual #50                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D.getX:()D
      39: dstore_2
      40: aload         4
      42: invokevirtual #51                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.isDirect:()Z
      45: ifeq          55
      48: aload_1
      49: invokevirtual #53                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      52: goto          59
      55: aload_1
      56: invokevirtual #52                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      59: astore_1
      60: goto          10
      63: aload_1
      64: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      67: checkcast     #35                 // class java/lang/Boolean
      70: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      73: ifeq          82
      76: ldc2_w        #37                 // double Infinityd
      79: goto          83
      82: dload_2
      83: dreturn

  public org.apache.commons.math3.geometry.partitioning.BoundaryProjection<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> projectToBoundary(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_1
       1: checkcast     #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
       4: invokevirtual #50                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D.getX:()D
       7: dstore_2
       8: ldc2_w        #54                 // double -Infinityd
      11: dstore        4
      13: aload_0
      14: invokevirtual #56                 // Method iterator:()Ljava/util/Iterator;
      17: astore        6
      19: aload         6
      21: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          188
      29: aload         6
      31: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #57                 // class "[D"
      39: astore        7
      41: dload_2
      42: aload         7
      44: iconst_0
      45: daload
      46: dcmpg
      47: ifge          108
      50: dload_2
      51: dload         4
      53: dsub
      54: dstore        8
      56: aload         7
      58: iconst_0
      59: daload
      60: dload_2
      61: dsub
      62: dstore        10
      64: dload         8
      66: dload         10
      68: dcmpg
      69: ifge          89
      72: new           #58                 // class org/apache/commons/math3/geometry/partitioning/BoundaryProjection
      75: dup
      76: aload_1
      77: aload_0
      78: dload         4
      80: invokespecial #59                 // Method finiteOrNullPoint:(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      83: dload         8
      85: invokespecial #60                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection."<init>":(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
      88: areturn
      89: new           #58                 // class org/apache/commons/math3/geometry/partitioning/BoundaryProjection
      92: dup
      93: aload_1
      94: aload_0
      95: aload         7
      97: iconst_0
      98: daload
      99: invokespecial #59                 // Method finiteOrNullPoint:(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
     102: dload         10
     104: invokespecial #60                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection."<init>":(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
     107: areturn
     108: dload_2
     109: aload         7
     111: iconst_1
     112: daload
     113: dcmpg
     114: ifgt          179
     117: aload         7
     119: iconst_0
     120: daload
     121: dload_2
     122: dsub
     123: dstore        8
     125: dload_2
     126: aload         7
     128: iconst_1
     129: daload
     130: dsub
     131: dstore        10
     133: dload         8
     135: dload         10
     137: dcmpg
     138: ifge          160
     141: new           #58                 // class org/apache/commons/math3/geometry/partitioning/BoundaryProjection
     144: dup
     145: aload_1
     146: aload_0
     147: aload         7
     149: iconst_1
     150: daload
     151: invokespecial #59                 // Method finiteOrNullPoint:(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
     154: dload         10
     156: invokespecial #60                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection."<init>":(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
     159: areturn
     160: new           #58                 // class org/apache/commons/math3/geometry/partitioning/BoundaryProjection
     163: dup
     164: aload_1
     165: aload_0
     166: aload         7
     168: iconst_0
     169: daload
     170: invokespecial #59                 // Method finiteOrNullPoint:(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
     173: dload         8
     175: invokespecial #60                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection."<init>":(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
     178: areturn
     179: aload         7
     181: iconst_1
     182: daload
     183: dstore        4
     185: goto          19
     188: new           #58                 // class org/apache/commons/math3/geometry/partitioning/BoundaryProjection
     191: dup
     192: aload_1
     193: aload_0
     194: dload         4
     196: invokespecial #59                 // Method finiteOrNullPoint:(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
     199: dload_2
     200: dload         4
     202: dsub
     203: invokespecial #60                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection."<init>":(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
     206: areturn

  private org.apache.commons.math3.geometry.euclidean.oned.Vector1D finiteOrNullPoint(double);
    Code:
       0: dload_1
       1: invokestatic  #17                 // Method java/lang/Double.isInfinite:(D)Z
       4: ifeq          11
       7: aconst_null
       8: goto          19
      11: new           #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
      14: dup
      15: dload_1
      16: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
      19: areturn

  public java.util.List<org.apache.commons.math3.geometry.euclidean.oned.Interval> asList();
    Code:
       0: new           #61                 // class java/util/ArrayList
       3: dup
       4: invokespecial #62                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #56                 // Method iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          55
      22: aload_2
      23: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #57                 // class "[D"
      31: astore_3
      32: aload_1
      33: new           #44                 // class org/apache/commons/math3/geometry/euclidean/oned/Interval
      36: dup
      37: aload_3
      38: iconst_0
      39: daload
      40: aload_3
      41: iconst_1
      42: daload
      43: invokespecial #63                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval."<init>":(DD)V
      46: invokeinterface #64,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          13
      55: aload_1
      56: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> getFirstLeaf(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aconst_null
      10: astore_2
      11: aload_1
      12: astore_3
      13: aload_3
      14: ifnull        28
      17: aload_3
      18: astore_2
      19: aload_0
      20: aload_3
      21: invokespecial #65                 // Method previousInternalNode:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      24: astore_3
      25: goto          13
      28: aload_0
      29: aload_2
      30: invokespecial #66                 // Method leafBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      33: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> getFirstIntervalBoundary();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #30                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: astore_1
       6: aload_1
       7: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_0
      16: aload_1
      17: invokespecial #5                  // Method getFirstLeaf:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      20: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      23: astore_1
      24: aload_1
      25: ifnull        53
      28: aload_0
      29: aload_1
      30: invokespecial #2                  // Method isIntervalStart:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      33: ifne          53
      36: aload_0
      37: aload_1
      38: invokespecial #4                  // Method isIntervalEnd:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      41: ifne          53
      44: aload_0
      45: aload_1
      46: invokespecial #1                  // Method nextInternalNode:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      49: astore_1
      50: goto          24
      53: aload_1
      54: areturn

  private boolean isIntervalStart(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // Method leafBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
       8: checkcast     #35                 // class java/lang/Boolean
      11: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: aload_1
      21: invokespecial #68                 // Method leafAfter:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      24: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      27: checkcast     #35                 // class java/lang/Boolean
      30: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: iconst_1
      39: ireturn

  private boolean isIntervalEnd(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // Method leafBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
       8: checkcast     #35                 // class java/lang/Boolean
      11: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: aload_1
      21: invokespecial #68                 // Method leafAfter:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      24: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      27: checkcast     #35                 // class java/lang/Boolean
      30: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      33: ifeq          38
      36: iconst_0
      37: ireturn
      38: iconst_1
      39: ireturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> nextInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #69                 // Method childAfter:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       8: ifnull        20
      11: aload_0
      12: aload_1
      13: invokespecial #68                 // Method leafAfter:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      16: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      19: areturn
      20: aload_0
      21: aload_1
      22: invokespecial #70                 // Method isAfterParent:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      25: ifeq          36
      28: aload_1
      29: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      32: astore_1
      33: goto          20
      36: aload_1
      37: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      40: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> previousInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #71                 // Method childBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       8: ifnull        20
      11: aload_0
      12: aload_1
      13: invokespecial #66                 // Method leafBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      16: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      19: areturn
      20: aload_0
      21: aload_1
      22: invokespecial #72                 // Method isBeforeParent:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      25: ifeq          36
      28: aload_1
      29: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      32: astore_1
      33: goto          20
      36: aload_1
      37: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      40: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> leafBefore(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #71                 // Method childBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: astore_1
       6: aload_1
       7: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      10: ifnull        22
      13: aload_0
      14: aload_1
      15: invokespecial #69                 // Method childAfter:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      18: astore_1
      19: goto          6
      22: aload_1
      23: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> leafAfter(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #69                 // Method childAfter:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: astore_1
       6: aload_1
       7: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      10: ifnull        22
      13: aload_0
      14: aload_1
      15: invokespecial #71                 // Method childBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      18: astore_1
      19: goto          6
      22: aload_1
      23: areturn

  private boolean isBeforeParent(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: aload_0
      13: aload_2
      14: invokespecial #71                 // Method childBefore:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean isAfterParent(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getParent:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: aload_0
      13: aload_2
      14: invokespecial #69                 // Method childAfter:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> childBefore(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #73                 // Method isDirect:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
       5: ifeq          13
       8: aload_1
       9: invokevirtual #52                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      12: areturn
      13: aload_1
      14: invokevirtual #53                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      17: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> childAfter(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #73                 // Method isDirect:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
       5: ifeq          13
       8: aload_1
       9: invokevirtual #53                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      12: areturn
      13: aload_1
      14: invokevirtual #52                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      17: areturn

  private boolean isDirect(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       9: checkcast     #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      12: invokevirtual #51                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.isDirect:()Z
      15: ireturn

  private double getAngle(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       9: checkcast     #21                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      12: invokevirtual #49                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.getLocation:()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      15: invokevirtual #50                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D.getX:()D
      18: dreturn

  public java.util.Iterator<double[]> iterator();
    Code:
       0: new           #74                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet$SubIntervalsIterator
       3: dup
       4: aload_0
       5: invokespecial #75                 // Method org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet$SubIntervalsIterator."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;)V
       8: areturn

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
       5: areturn

  public org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
       5: areturn

  static org.apache.commons.math3.geometry.partitioning.BSPTree access$000(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getFirstIntervalBoundary:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       4: areturn

  static org.apache.commons.math3.geometry.partitioning.BSPTree access$100(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet, org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method getFirstLeaf:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: areturn

  static boolean access$200(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet, org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method isIntervalEnd:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
       5: ireturn

  static double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet, org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method getAngle:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)D
       5: dreturn

  static boolean access$400(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet, org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method isIntervalStart:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
       5: ireturn

  static org.apache.commons.math3.geometry.partitioning.BSPTree access$500(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet, org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method nextInternalNode:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: areturn
}
