Compiled from "AbstractRegion.java"
public abstract class org.apache.commons.math3.geometry.partitioning.AbstractRegion<S extends org.apache.commons.math3.geometry.Space, T extends org.apache.commons.math3.geometry.Space> implements org.apache.commons.math3.geometry.partitioning.Region<S> {
  private org.apache.commons.math3.geometry.partitioning.BSPTree<S> tree;

  private final double tolerance;

  private double size;

  private org.apache.commons.math3.geometry.Point<S> barycenter;

  protected org.apache.commons.math3.geometry.partitioning.AbstractRegion(double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
       8: dup
       9: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      12: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      15: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      18: aload_0
      19: dload_1
      20: putfield      #6                  // Field tolerance:D
      23: return

  protected org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       9: aload_0
      10: dload_2
      11: putfield      #6                  // Field tolerance:D
      14: return

  protected org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>>, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_2
       6: putfield      #6                  // Field tolerance:D
       9: aload_1
      10: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.size:()I
      15: ifne          35
      18: aload_0
      19: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      22: dup
      23: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      26: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      29: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      32: goto          95
      35: new           #8                  // class java/util/TreeSet
      38: dup
      39: new           #9                  // class org/apache/commons/math3/geometry/partitioning/AbstractRegion$1
      42: dup
      43: aload_0
      44: invokespecial #10                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$1."<init>":(Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;)V
      47: invokespecial #11                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      50: astore        4
      52: aload         4
      54: aload_1
      55: invokevirtual #12                 // Method java/util/TreeSet.addAll:(Ljava/util/Collection;)Z
      58: pop
      59: aload_0
      60: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      63: dup
      64: invokespecial #13                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":()V
      67: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      70: aload_0
      71: aload_0
      72: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      75: aload         4
      77: invokespecial #14                 // Method insertCuts:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V
      80: aload_0
      81: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      84: new           #15                 // class org/apache/commons/math3/geometry/partitioning/AbstractRegion$2
      87: dup
      88: aload_0
      89: invokespecial #16                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$2."<init>":(Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;)V
      92: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      95: return

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>[], double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_2
       6: putfield      #6                  // Field tolerance:D
       9: aload_1
      10: ifnull        18
      13: aload_1
      14: arraylength
      15: ifne          35
      18: aload_0
      19: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      22: dup
      23: getstatic     #18                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      26: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      29: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      32: goto          140
      35: aload_0
      36: aload_1
      37: iconst_0
      38: aaload
      39: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.wholeSpace:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      44: iconst_0
      45: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      50: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      53: aload_0
      54: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      57: astore        4
      59: aload         4
      61: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      64: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
      67: aload_1
      68: astore        5
      70: aload         5
      72: arraylength
      73: istore        6
      75: iconst_0
      76: istore        7
      78: iload         7
      80: iload         6
      82: if_icmpge     140
      85: aload         5
      87: iload         7
      89: aaload
      90: astore        8
      92: aload         4
      94: aload         8
      96: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.insertCut:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
      99: ifeq          134
     102: aload         4
     104: aconst_null
     105: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
     108: aload         4
     110: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     113: getstatic     #18                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     116: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
     119: aload         4
     121: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     124: astore        4
     126: aload         4
     128: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     131: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
     134: iinc          7, 1
     137: goto          78
     140: return

  public abstract org.apache.commons.math3.geometry.partitioning.AbstractRegion<S, T> buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);

  public double getTolerance();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tolerance:D
       4: dreturn

  private void insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>>);
    Code:
       0: aload_2
       1: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aconst_null
       8: astore        4
      10: aload         4
      12: ifnonnull     60
      15: aload_3
      16: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_3
      25: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #28                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane
      33: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      38: astore        4
      40: aload_1
      41: aload         4
      43: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.copySelf:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      48: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.insertCut:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
      51: ifne          10
      54: aconst_null
      55: astore        4
      57: goto          10
      60: aload_3
      61: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifne          70
      69: return
      70: new           #31                 // class java/util/ArrayList
      73: dup
      74: invokespecial #32                 // Method java/util/ArrayList."<init>":()V
      77: astore        5
      79: new           #31                 // class java/util/ArrayList
      82: dup
      83: invokespecial #32                 // Method java/util/ArrayList."<init>":()V
      86: astore        6
      88: aload_3
      89: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          206
      97: aload_3
      98: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #28                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane
     106: astore        7
     108: aload         7
     110: aload         4
     112: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
     117: astore        8
     119: getstatic     #34                 // Field org/apache/commons/math3/geometry/partitioning/AbstractRegion$3.$SwitchMap$org$apache$commons$math3$geometry$partitioning$Side:[I
     122: aload         8
     124: invokevirtual #35                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getSide:()Lorg/apache/commons/math3/geometry/partitioning/Side;
     127: invokevirtual #36                 // Method org/apache/commons/math3/geometry/partitioning/Side.ordinal:()I
     130: iaload
     131: tableswitch   { // 1 to 3
                     1: 156
                     2: 167
                     3: 178
               default: 203
          }
     156: aload         5
     158: aload         7
     160: invokevirtual #37                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     163: pop
     164: goto          203
     167: aload         6
     169: aload         7
     171: invokevirtual #37                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     174: pop
     175: goto          203
     178: aload         5
     180: aload         8
     182: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     185: invokevirtual #37                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     188: pop
     189: aload         6
     191: aload         8
     193: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     196: invokevirtual #37                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     199: pop
     200: goto          203
     203: goto          88
     206: aload_0
     207: aload_1
     208: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     211: aload         5
     213: invokespecial #14                 // Method insertCuts:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V
     216: aload_0
     217: aload_1
     218: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     221: aload         6
     223: invokespecial #14                 // Method insertCuts:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V
     226: return

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion<S, T> copySelf();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #40                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.copySelf:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       8: invokevirtual #41                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
      11: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #42                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
       8: ireturn

  public boolean isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     26
       7: aload_1
       8: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      11: checkcast     #45                 // class java/lang/Boolean
      14: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
      26: aload_0
      27: aload_1
      28: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      31: invokevirtual #42                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      34: ifeq          52
      37: aload_0
      38: aload_1
      39: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      42: invokevirtual #42                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  public boolean isFull();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #47                 // Method isFull:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
       8: ireturn

  public boolean isFull(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     18
       7: aload_1
       8: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      11: checkcast     #45                 // class java/lang/Boolean
      14: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      17: ireturn
      18: aload_0
      19: aload_1
      20: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      23: invokevirtual #47                 // Method isFull:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      26: ifeq          44
      29: aload_0
      30: aload_1
      31: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      34: invokevirtual #47                 // Method isFull:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public boolean contains(org.apache.commons.math3.geometry.partitioning.Region<S>);
    Code:
       0: new           #48                 // class org/apache/commons/math3/geometry/partitioning/RegionFactory
       3: dup
       4: invokespecial #49                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory."<init>":()V
       7: aload_1
       8: aload_0
       9: invokevirtual #50                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory.difference:(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
      12: invokeinterface #51,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:()Z
      17: ireturn

  public org.apache.commons.math3.geometry.partitioning.BoundaryProjection<S> projectToBoundary(org.apache.commons.math3.geometry.Point<S>);
    Code:
       0: new           #52                 // class org/apache/commons/math3/geometry/partitioning/BoundaryProjector
       3: dup
       4: aload_1
       5: invokespecial #53                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjector."<init>":(Lorg/apache/commons/math3/geometry/Point;)V
       8: astore_2
       9: aload_0
      10: iconst_1
      11: invokevirtual #54                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      14: aload_2
      15: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      18: aload_2
      19: invokevirtual #55                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjector.getProjection:()Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
      22: areturn

  public org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.Vector<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
       5: areturn

  public org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.Point<S>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: aload_1
       6: invokevirtual #57                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
       9: areturn

  protected org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.Vector<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #57                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
       6: areturn

  protected org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.Point<S>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #6                  // Field tolerance:D
       6: invokevirtual #58                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCell:(Lorg/apache/commons/math3/geometry/Point;D)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       9: astore_3
      10: aload_3
      11: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      14: ifnonnull     40
      17: aload_3
      18: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      21: checkcast     #45                 // class java/lang/Boolean
      24: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      27: ifeq          36
      30: getstatic     #59                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.INSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      33: goto          39
      36: getstatic     #60                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.OUTSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      39: areturn
      40: aload_0
      41: aload_3
      42: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      45: aload_2
      46: invokevirtual #57                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      49: astore        4
      51: aload_0
      52: aload_3
      53: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      56: aload_2
      57: invokevirtual #57                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      60: astore        5
      62: aload         4
      64: aload         5
      66: if_acmpne     74
      69: aload         4
      71: goto          77
      74: getstatic     #61                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.BOUNDARY:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      77: areturn

  public org.apache.commons.math3.geometry.partitioning.BSPTree<S> getTree(boolean);
    Code:
       0: iload_1
       1: ifeq          38
       4: aload_0
       5: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       8: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      11: ifnull        38
      14: aload_0
      15: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      18: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      21: ifnonnull     38
      24: aload_0
      25: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      28: new           #62                 // class org/apache/commons/math3/geometry/partitioning/BoundaryBuilder
      31: dup
      32: invokespecial #63                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryBuilder."<init>":()V
      35: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      38: aload_0
      39: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      42: areturn

  public double getBoundarySize();
    Code:
       0: new           #64                 // class org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor
       3: dup
       4: invokespecial #65                 // Method org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor."<init>":()V
       7: astore_1
       8: aload_0
       9: iconst_1
      10: invokevirtual #54                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      13: aload_1
      14: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      17: aload_1
      18: invokevirtual #66                 // Method org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor.getSize:()D
      21: dreturn

  public double getSize();
    Code:
       0: aload_0
       1: getfield      #67                 // Field barycenter:Lorg/apache/commons/math3/geometry/Point;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #68                 // Method computeGeometricalProperties:()V
      11: aload_0
      12: getfield      #69                 // Field size:D
      15: dreturn

  protected void setSize(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #69                 // Field size:D
       5: return

  public org.apache.commons.math3.geometry.Point<S> getBarycenter();
    Code:
       0: aload_0
       1: getfield      #67                 // Field barycenter:Lorg/apache/commons/math3/geometry/Point;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #68                 // Method computeGeometricalProperties:()V
      11: aload_0
      12: getfield      #67                 // Field barycenter:Lorg/apache/commons/math3/geometry/Point;
      15: areturn

  protected void setBarycenter(org.apache.commons.math3.geometry.Vector<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Point;)V
       5: return

  protected void setBarycenter(org.apache.commons.math3.geometry.Point<S>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field barycenter:Lorg/apache/commons/math3/geometry/Point;
       5: return

  protected abstract void computeGeometricalProperties();

  public org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>);
    Code:
       0: new           #71                 // class org/apache/commons/math3/geometry/partitioning/InsideFinder
       3: dup
       4: aload_0
       5: invokespecial #72                 // Method org/apache/commons/math3/geometry/partitioning/InsideFinder."<init>":(Lorg/apache/commons/math3/geometry/partitioning/Region;)V
       8: astore_2
       9: aload_2
      10: aload_0
      11: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      14: aload_1
      15: invokeinterface #73,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.wholeHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      20: invokevirtual #74                 // Method org/apache/commons/math3/geometry/partitioning/InsideFinder.recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
      23: aload_2
      24: invokevirtual #75                 // Method org/apache/commons/math3/geometry/partitioning/InsideFinder.plusFound:()Z
      27: ifeq          49
      30: aload_2
      31: invokevirtual #76                 // Method org/apache/commons/math3/geometry/partitioning/InsideFinder.minusFound:()Z
      34: ifeq          43
      37: getstatic     #77                 // Field org/apache/commons/math3/geometry/partitioning/Side.BOTH:Lorg/apache/commons/math3/geometry/partitioning/Side;
      40: goto          65
      43: getstatic     #78                 // Field org/apache/commons/math3/geometry/partitioning/Side.PLUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
      46: goto          65
      49: aload_2
      50: invokevirtual #76                 // Method org/apache/commons/math3/geometry/partitioning/InsideFinder.minusFound:()Z
      53: ifeq          62
      56: getstatic     #79                 // Field org/apache/commons/math3/geometry/partitioning/Side.MINUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
      59: goto          65
      62: getstatic     #80                 // Field org/apache/commons/math3/geometry/partitioning/Side.HYPER:Lorg/apache/commons/math3/geometry/partitioning/Side;
      65: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<S> intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: aload_1
       6: invokespecial #81                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       9: areturn

  private org.apache.commons.math3.geometry.partitioning.SubHyperplane<S> recurseIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     31
       7: aload_1
       8: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      11: checkcast     #45                 // class java/lang/Boolean
      14: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      17: ifeq          29
      20: aload_2
      21: invokeinterface #82,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.copySelf:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      26: goto          30
      29: aconst_null
      30: areturn
      31: aload_1
      32: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      35: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      40: astore_3
      41: aload_2
      42: aload_3
      43: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
      48: astore        4
      50: aload         4
      52: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      55: ifnull        132
      58: aload         4
      60: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      63: ifnull        122
      66: aload_0
      67: aload_1
      68: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      71: aload         4
      73: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      76: invokespecial #81                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      79: astore        5
      81: aload_0
      82: aload_1
      83: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      86: aload         4
      88: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      91: invokespecial #81                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      94: astore        6
      96: aload         5
      98: ifnonnull     104
     101: aload         6
     103: areturn
     104: aload         6
     106: ifnonnull     112
     109: aload         5
     111: areturn
     112: aload         5
     114: aload         6
     116: invokeinterface #83,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.reunite:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     121: areturn
     122: aload_0
     123: aload_1
     124: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     127: aload_2
     128: invokespecial #81                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     131: areturn
     132: aload         4
     134: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     137: ifnull        150
     140: aload_0
     141: aload_1
     142: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     145: aload_2
     146: invokespecial #81                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     149: areturn
     150: aload_0
     151: aload_1
     152: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     155: aload_0
     156: aload_1
     157: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     160: aload_2
     161: invokespecial #81                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     164: invokespecial #81                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     167: areturn

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion<S, T> applyTransform(org.apache.commons.math3.geometry.partitioning.Transform<S, T>);
    Code:
       0: new           #84                 // class java/util/HashMap
       3: dup
       4: invokespecial #85                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_0
      10: iconst_0
      11: invokevirtual #54                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      14: aload_1
      15: aload_2
      16: invokespecial #86                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      19: astore_3
      20: aload_2
      21: invokeinterface #87,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          169
      43: aload         4
      45: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #89                 // class java/util/Map$Entry
      53: astore        5
      55: aload         5
      57: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      62: checkcast     #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      65: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      68: ifnull        166
      71: aload         5
      73: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      78: checkcast     #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      81: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      84: checkcast     #91                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      87: astore        6
      89: aload         6
      91: ifnull        166
      94: aload         5
      96: invokeinterface #92,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     101: checkcast     #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
     104: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     107: checkcast     #91                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
     110: astore        7
     112: aload         6
     114: invokevirtual #93                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getSplitters:()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
     117: invokevirtual #94                 // Method org/apache/commons/math3/geometry/partitioning/NodesSet.iterator:()Ljava/util/Iterator;
     120: astore        8
     122: aload         8
     124: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     129: ifeq          166
     132: aload         8
     134: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     139: checkcast     #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
     142: astore        9
     144: aload         7
     146: invokevirtual #93                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getSplitters:()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
     149: aload_2
     150: aload         9
     152: invokeinterface #95,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     157: checkcast     #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
     160: invokevirtual #96                 // Method org/apache/commons/math3/geometry/partitioning/NodesSet.add:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
     163: goto          122
     166: goto          33
     169: aload_0
     170: aload_3
     171: invokevirtual #41                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
     174: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<S> recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.partitioning.Transform<S, T>, java.util.Map<org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.partitioning.BSPTree<S>>);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     23
       7: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      10: dup
      11: aload_1
      12: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      15: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      18: astore        4
      20: goto          159
      23: aload_1
      24: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      27: astore        5
      29: aload         5
      31: checkcast     #97                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
      34: aload_2
      35: invokevirtual #98                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      38: astore        6
      40: aload_1
      41: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      44: checkcast     #91                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      47: astore        7
      49: aload         7
      51: ifnull        126
      54: aload         7
      56: invokevirtual #99                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      59: ifnonnull     66
      62: aconst_null
      63: goto          78
      66: aload         7
      68: invokevirtual #99                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      71: checkcast     #97                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
      74: aload_2
      75: invokevirtual #98                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      78: astore        8
      80: aload         7
      82: invokevirtual #100                // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      85: ifnonnull     92
      88: aconst_null
      89: goto          104
      92: aload         7
      94: invokevirtual #100                // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      97: checkcast     #97                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
     100: aload_2
     101: invokevirtual #98                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
     104: astore        9
     106: new           #91                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
     109: dup
     110: aload         8
     112: aload         9
     114: new           #101                // class org/apache/commons/math3/geometry/partitioning/NodesSet
     117: dup
     118: invokespecial #102                // Method org/apache/commons/math3/geometry/partitioning/NodesSet."<init>":()V
     121: invokespecial #103                // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/NodesSet;)V
     124: astore        7
     126: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
     129: dup
     130: aload         6
     132: aload_0
     133: aload_1
     134: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     137: aload_2
     138: aload_3
     139: invokespecial #86                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     142: aload_0
     143: aload_1
     144: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     147: aload_2
     148: aload_3
     149: invokespecial #86                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     152: aload         7
     154: invokespecial #104                // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     157: astore        4
     159: aload_3
     160: aload_1
     161: aload         4
     163: invokeinterface #105,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     168: pop
     169: aload         4
     171: areturn

  public org.apache.commons.math3.geometry.partitioning.Region copySelf();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method copySelf:()Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
       4: areturn

  public org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
       5: areturn
}
