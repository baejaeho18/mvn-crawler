Compiled from "Line.java"
class org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform implements org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> {
  private double cXX;

  private double cYX;

  private double cXY;

  private double cYY;

  private double cX1;

  private double cY1;

  private double c1Y;

  private double c1X;

  private double c11;

  org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform(double, double, double, double, double, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #2                  // Field cXX:D
       9: aload_0
      10: dload_3
      11: putfield      #3                  // Field cYX:D
      14: aload_0
      15: dload         5
      17: putfield      #4                  // Field cXY:D
      20: aload_0
      21: dload         7
      23: putfield      #5                  // Field cYY:D
      26: aload_0
      27: dload         9
      29: putfield      #6                  // Field cX1:D
      32: aload_0
      33: dload         11
      35: putfield      #7                  // Field cY1:D
      38: aload_0
      39: dload         5
      41: dload         11
      43: dload         7
      45: dneg
      46: dload         9
      48: invokestatic  #8                  // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
      51: putfield      #9                  // Field c1Y:D
      54: aload_0
      55: dload_1
      56: dload         11
      58: dload_3
      59: dneg
      60: dload         9
      62: invokestatic  #8                  // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
      65: putfield      #10                 // Field c1X:D
      68: aload_0
      69: dload_1
      70: dload         7
      72: dload_3
      73: dneg
      74: dload         5
      76: invokestatic  #8                  // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
      79: putfield      #11                 // Field c11:D
      82: aload_0
      83: getfield      #11                 // Field c11:D
      86: invokestatic  #12                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      89: ldc2_w        #13                 // double 1.0E-20d
      92: dcmpg
      93: ifge          111
      96: new           #15                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
      99: dup
     100: getstatic     #16                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NON_INVERTIBLE_TRANSFORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
     103: iconst_0
     104: anewarray     #17                 // class java/lang/Object
     107: invokespecial #18                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     110: athrow
     111: return

  public org.apache.commons.math3.geometry.euclidean.twod.Vector2D apply(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: checkcast     #19                 // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
       4: astore_2
       5: aload_2
       6: invokevirtual #20                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
       9: dstore_3
      10: aload_2
      11: invokevirtual #21                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      14: dstore        5
      16: new           #19                 // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
      19: dup
      20: aload_0
      21: getfield      #2                  // Field cXX:D
      24: dload_3
      25: aload_0
      26: getfield      #4                  // Field cXY:D
      29: dload         5
      31: aload_0
      32: getfield      #6                  // Field cX1:D
      35: dconst_1
      36: invokestatic  #22                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDDDD)D
      39: aload_0
      40: getfield      #3                  // Field cYX:D
      43: dload_3
      44: aload_0
      45: getfield      #5                  // Field cYY:D
      48: dload         5
      50: aload_0
      51: getfield      #7                  // Field cY1:D
      54: dconst_1
      55: invokestatic  #22                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDDDD)D
      58: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D."<init>":(DD)V
      61: areturn

  public org.apache.commons.math3.geometry.euclidean.twod.Line apply(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: checkcast     #24                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
       4: astore_2
       5: aload_0
       6: getfield      #10                 // Field c1X:D
       9: aload_2
      10: invokestatic  #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$000:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      13: aload_0
      14: getfield      #9                  // Field c1Y:D
      17: aload_2
      18: invokestatic  #26                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$100:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      21: aload_0
      22: getfield      #11                 // Field c11:D
      25: aload_2
      26: invokestatic  #27                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$200:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      29: invokestatic  #22                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDDDD)D
      32: dstore_3
      33: aload_0
      34: getfield      #2                  // Field cXX:D
      37: aload_2
      38: invokestatic  #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$000:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      41: aload_0
      42: getfield      #4                  // Field cXY:D
      45: aload_2
      46: invokestatic  #26                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$100:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      49: invokestatic  #8                  // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
      52: dstore        5
      54: aload_0
      55: getfield      #3                  // Field cYX:D
      58: aload_2
      59: invokestatic  #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$000:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      62: aload_0
      63: getfield      #5                  // Field cYY:D
      66: aload_2
      67: invokestatic  #26                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$100:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      70: invokestatic  #8                  // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
      73: dstore        7
      75: dconst_1
      76: dload         7
      78: dload         7
      80: dmul
      81: dload         5
      83: dload         5
      85: dmul
      86: dadd
      87: invokestatic  #28                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      90: ddiv
      91: dstore        9
      93: new           #24                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      96: dup
      97: ldc2_w        #29                 // double 3.141592653589793d
     100: dload         7
     102: dneg
     103: dload         5
     105: dneg
     106: invokestatic  #31                 // Method org/apache/commons/math3/util/FastMath.atan2:(DD)D
     109: dadd
     110: dload         9
     112: dload         5
     114: dmul
     115: dload         9
     117: dload         7
     119: dmul
     120: dload         9
     122: dload_3
     123: dmul
     124: aload_2
     125: invokestatic  #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$300:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
     128: aconst_null
     129: invokespecial #33                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line."<init>":(DDDDDLorg/apache/commons/math3/geometry/euclidean/twod/Line$1;)V
     132: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       6: checkcast     #35                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
       9: astore        4
      11: aload_2
      12: checkcast     #24                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      15: astore        5
      17: aload_3
      18: checkcast     #24                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      21: astore        6
      23: aload         6
      25: aload_0
      26: aload         5
      28: aload         4
      30: invokevirtual #36                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.getLocation:()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      33: invokevirtual #37                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      36: invokevirtual #38                 // Method apply:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      39: invokevirtual #39                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSubSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      42: astore        7
      44: new           #35                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      47: dup
      48: aload         7
      50: aload         4
      52: invokevirtual #40                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.isDirect:()Z
      55: aload         5
      57: invokestatic  #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$300:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      60: invokespecial #41                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
      63: invokevirtual #42                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.wholeHyperplane:()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
      66: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method apply:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
       5: areturn

  public org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method apply:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       5: areturn
}
