Compiled from "BaseRuleFactory.java"
public abstract class org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory<T extends java.lang.Number> {
  private final java.util.Map<java.lang.Integer, org.apache.commons.math3.util.Pair<T[], T[]>> pointsAndWeights;

  private final java.util.Map<java.lang.Integer, org.apache.commons.math3.util.Pair<double[], double[]>> pointsAndWeightsDouble;

  public org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #4                  // Field pointsAndWeights:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/TreeMap
      19: dup
      20: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      23: putfield      #5                  // Field pointsAndWeightsDouble:Ljava/util/Map;
      26: return

  public org.apache.commons.math3.util.Pair<double[], double[]> getRule(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: iload_1
       1: ifgt          19
       4: new           #6                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
       7: dup
       8: getstatic     #7                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_POINTS:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_1
      12: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #9                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: aload_0
      20: getfield      #5                  // Field pointsAndWeightsDouble:Ljava/util/Map;
      23: iload_1
      24: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #11                 // class org/apache/commons/math3/util/Pair
      35: astore_2
      36: aload_2
      37: ifnonnull     66
      40: aload_0
      41: iload_1
      42: invokevirtual #12                 // Method getRuleInternal:(I)Lorg/apache/commons/math3/util/Pair;
      45: astore_3
      46: aload_3
      47: invokestatic  #13                 // Method convertToDouble:(Lorg/apache/commons/math3/util/Pair;)Lorg/apache/commons/math3/util/Pair;
      50: astore_2
      51: aload_0
      52: getfield      #5                  // Field pointsAndWeightsDouble:Ljava/util/Map;
      55: iload_1
      56: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aload_2
      60: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: new           #11                 // class org/apache/commons/math3/util/Pair
      69: dup
      70: aload_2
      71: invokevirtual #15                 // Method org/apache/commons/math3/util/Pair.getFirst:()Ljava/lang/Object;
      74: checkcast     #16                 // class "[D"
      77: invokevirtual #17                 // Method "[D".clone:()Ljava/lang/Object;
      80: aload_2
      81: invokevirtual #18                 // Method org/apache/commons/math3/util/Pair.getSecond:()Ljava/lang/Object;
      84: checkcast     #16                 // class "[D"
      87: invokevirtual #19                 // Method "[D".clone:()Ljava/lang/Object;
      90: invokespecial #20                 // Method org/apache/commons/math3/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      93: areturn

  protected synchronized org.apache.commons.math3.util.Pair<T[], T[]> getRuleInternal(int) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field pointsAndWeights:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #11                 // class org/apache/commons/math3/util/Pair
      16: astore_2
      17: aload_2
      18: ifnonnull     36
      21: aload_0
      22: aload_0
      23: iload_1
      24: invokevirtual #21                 // Method computeRule:(I)Lorg/apache/commons/math3/util/Pair;
      27: invokevirtual #22                 // Method addRule:(Lorg/apache/commons/math3/util/Pair;)V
      30: aload_0
      31: iload_1
      32: invokevirtual #12                 // Method getRuleInternal:(I)Lorg/apache/commons/math3/util/Pair;
      35: areturn
      36: aload_2
      37: areturn

  protected void addRule(org.apache.commons.math3.util.Pair<T[], T[]>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method org/apache/commons/math3/util/Pair.getFirst:()Ljava/lang/Object;
       4: checkcast     #23                 // class "[Ljava/lang/Number;"
       7: arraylength
       8: aload_1
       9: invokevirtual #18                 // Method org/apache/commons/math3/util/Pair.getSecond:()Ljava/lang/Object;
      12: checkcast     #23                 // class "[Ljava/lang/Number;"
      15: arraylength
      16: if_icmpeq     43
      19: new           #24                 // class org/apache/commons/math3/exception/DimensionMismatchException
      22: dup
      23: aload_1
      24: invokevirtual #15                 // Method org/apache/commons/math3/util/Pair.getFirst:()Ljava/lang/Object;
      27: checkcast     #23                 // class "[Ljava/lang/Number;"
      30: arraylength
      31: aload_1
      32: invokevirtual #18                 // Method org/apache/commons/math3/util/Pair.getSecond:()Ljava/lang/Object;
      35: checkcast     #23                 // class "[Ljava/lang/Number;"
      38: arraylength
      39: invokespecial #25                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      42: athrow
      43: aload_0
      44: getfield      #4                  // Field pointsAndWeights:Ljava/util/Map;
      47: aload_1
      48: invokevirtual #15                 // Method org/apache/commons/math3/util/Pair.getFirst:()Ljava/lang/Object;
      51: checkcast     #23                 // class "[Ljava/lang/Number;"
      54: arraylength
      55: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: aload_1
      59: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: return

  protected abstract org.apache.commons.math3.util.Pair<T[], T[]> computeRule(int) throws org.apache.commons.math3.exception.DimensionMismatchException;

  private static <T extends java.lang.Number> org.apache.commons.math3.util.Pair<double[], double[]> convertToDouble(org.apache.commons.math3.util.Pair<T[], T[]>);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method org/apache/commons/math3/util/Pair.getFirst:()Ljava/lang/Object;
       4: checkcast     #23                 // class "[Ljava/lang/Number;"
       7: astore_1
       8: aload_0
       9: invokevirtual #18                 // Method org/apache/commons/math3/util/Pair.getSecond:()Ljava/lang/Object;
      12: checkcast     #23                 // class "[Ljava/lang/Number;"
      15: astore_2
      16: aload_1
      17: arraylength
      18: istore_3
      19: iload_3
      20: newarray       double
      22: astore        4
      24: iload_3
      25: newarray       double
      27: astore        5
      29: iconst_0
      30: istore        6
      32: iload         6
      34: iload_3
      35: if_icmpge     68
      38: aload         4
      40: iload         6
      42: aload_1
      43: iload         6
      45: aaload
      46: invokevirtual #26                 // Method java/lang/Number.doubleValue:()D
      49: dastore
      50: aload         5
      52: iload         6
      54: aload_2
      55: iload         6
      57: aaload
      58: invokevirtual #26                 // Method java/lang/Number.doubleValue:()D
      61: dastore
      62: iinc          6, 1
      65: goto          32
      68: new           #11                 // class org/apache/commons/math3/util/Pair
      71: dup
      72: aload         4
      74: aload         5
      76: invokespecial #20                 // Method org/apache/commons/math3/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      79: areturn
}
