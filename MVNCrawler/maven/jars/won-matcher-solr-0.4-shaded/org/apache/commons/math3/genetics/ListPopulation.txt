Compiled from "ListPopulation.java"
public abstract class org.apache.commons.math3.genetics.ListPopulation implements org.apache.commons.math3.genetics.Population {
  private java.util.List<org.apache.commons.math3.genetics.Chromosome> chromosomes;

  private int populationLimit;

  public org.apache.commons.math3.genetics.ListPopulation(int) throws org.apache.commons.math3.exception.NotPositiveException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       4: iload_1
       5: invokespecial #2                  // Method "<init>":(Ljava/util/List;I)V
       8: return

  public org.apache.commons.math3.genetics.ListPopulation(java.util.List<org.apache.commons.math3.genetics.Chromosome>, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #4                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #5                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: iload_2
      17: ifgt          35
      20: new           #6                  // class org/apache/commons/math3/exception/NotPositiveException
      23: dup
      24: getstatic     #7                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      27: iload_2
      28: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: invokespecial #9                  // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      34: athrow
      35: aload_1
      36: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      41: iload_2
      42: if_icmple     70
      45: new           #11                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      48: dup
      49: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      52: aload_1
      53: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      58: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: iload_2
      62: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: iconst_0
      66: invokespecial #13                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      69: athrow
      70: aload_0
      71: iload_2
      72: putfield      #14                 // Field populationLimit:I
      75: aload_0
      76: new           #15                 // class java/util/ArrayList
      79: dup
      80: iload_2
      81: invokespecial #16                 // Method java/util/ArrayList."<init>":(I)V
      84: putfield      #17                 // Field chromosomes:Ljava/util/List;
      87: aload_0
      88: getfield      #17                 // Field chromosomes:Ljava/util/List;
      91: aload_1
      92: invokeinterface #18,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      97: pop
      98: return

  public void setChromosomes(java.util.List<org.apache.commons.math3.genetics.Chromosome>) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #4                  // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: invokespecial #5                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      11: athrow
      12: aload_1
      13: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      18: aload_0
      19: getfield      #14                 // Field populationLimit:I
      22: if_icmple     53
      25: new           #11                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      28: dup
      29: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      32: aload_1
      33: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      38: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aload_0
      42: getfield      #14                 // Field populationLimit:I
      45: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: iconst_0
      49: invokespecial #13                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      52: athrow
      53: aload_0
      54: getfield      #17                 // Field chromosomes:Ljava/util/List;
      57: invokeinterface #19,  1           // InterfaceMethod java/util/List.clear:()V
      62: aload_0
      63: getfield      #17                 // Field chromosomes:Ljava/util/List;
      66: aload_1
      67: invokeinterface #18,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      72: pop
      73: return

  public void addChromosomes(java.util.Collection<org.apache.commons.math3.genetics.Chromosome>) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field chromosomes:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.size:()I
      15: iadd
      16: aload_0
      17: getfield      #14                 // Field populationLimit:I
      20: if_icmple     54
      23: new           #11                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      26: dup
      27: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      30: aload_0
      31: getfield      #17                 // Field chromosomes:Ljava/util/List;
      34: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      39: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aload_0
      43: getfield      #14                 // Field populationLimit:I
      46: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: iconst_0
      50: invokespecial #13                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      53: athrow
      54: aload_0
      55: getfield      #17                 // Field chromosomes:Ljava/util/List;
      58: aload_1
      59: invokeinterface #18,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      64: pop
      65: return

  public java.util.List<org.apache.commons.math3.genetics.Chromosome> getChromosomes();
    Code:
       0: aload_0
       1: getfield      #17                 // Field chromosomes:Ljava/util/List;
       4: invokestatic  #21                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  protected java.util.List<org.apache.commons.math3.genetics.Chromosome> getChromosomeList();
    Code:
       0: aload_0
       1: getfield      #17                 // Field chromosomes:Ljava/util/List;
       4: areturn

  public void addChromosome(org.apache.commons.math3.genetics.Chromosome) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field chromosomes:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
       9: aload_0
      10: getfield      #14                 // Field populationLimit:I
      13: if_icmplt     47
      16: new           #11                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      19: dup
      20: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      23: aload_0
      24: getfield      #17                 // Field chromosomes:Ljava/util/List;
      27: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      32: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aload_0
      36: getfield      #14                 // Field populationLimit:I
      39: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: iconst_0
      43: invokespecial #13                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      46: athrow
      47: aload_0
      48: getfield      #17                 // Field chromosomes:Ljava/util/List;
      51: aload_1
      52: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: return

  public org.apache.commons.math3.genetics.Chromosome getFittestChromosome();
    Code:
       0: aload_0
       1: getfield      #17                 // Field chromosomes:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #24                 // class org/apache/commons/math3/genetics/Chromosome
      13: astore_1
      14: aload_0
      15: getfield      #17                 // Field chromosomes:Ljava/util/List;
      18: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          56
      33: aload_2
      34: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #24                 // class org/apache/commons/math3/genetics/Chromosome
      42: astore_3
      43: aload_3
      44: aload_1
      45: invokevirtual #28                 // Method org/apache/commons/math3/genetics/Chromosome.compareTo:(Lorg/apache/commons/math3/genetics/Chromosome;)I
      48: ifle          53
      51: aload_3
      52: astore_1
      53: goto          24
      56: aload_1
      57: areturn

  public int getPopulationLimit();
    Code:
       0: aload_0
       1: getfield      #14                 // Field populationLimit:I
       4: ireturn

  public void setPopulationLimit(int) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: iload_1
       1: ifgt          19
       4: new           #6                  // class org/apache/commons/math3/exception/NotPositiveException
       7: dup
       8: getstatic     #7                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_1
      12: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #9                  // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: iload_1
      20: aload_0
      21: getfield      #17                 // Field chromosomes:Ljava/util/List;
      24: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      29: if_icmpge     57
      32: new           #29                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      35: dup
      36: iload_1
      37: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aload_0
      41: getfield      #17                 // Field chromosomes:Ljava/util/List;
      44: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      49: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: iconst_1
      53: invokespecial #30                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      56: athrow
      57: aload_0
      58: iload_1
      59: putfield      #14                 // Field populationLimit:I
      62: return

  public int getPopulationSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field chromosomes:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #17                 // Field chromosomes:Ljava/util/List;
       4: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public java.util.Iterator<org.apache.commons.math3.genetics.Chromosome> iterator();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getChromosomes:()Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn
}
