Compiled from "CurveFitter.java"
class org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2 implements org.apache.commons.math3.analysis.MultivariateMatrixFunction {
  final org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction this$1;

  org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2(org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public double[][] value(double[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
       4: getfield      #3                  // Field org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.this$0:Lorg/apache/commons/math3/fitting/CurveFitter;
       7: invokestatic  #4                  // Method org/apache/commons/math3/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/fitting/CurveFitter;)Ljava/util/List;
      10: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      15: anewarray     #6                  // class "[D"
      18: astore_2
      19: iconst_0
      20: istore_3
      21: aload_0
      22: getfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
      25: getfield      #3                  // Field org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.this$0:Lorg/apache/commons/math3/fitting/CurveFitter;
      28: invokestatic  #4                  // Method org/apache/commons/math3/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/fitting/CurveFitter;)Ljava/util/List;
      31: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          87
      48: aload         4
      50: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #10                 // class org/apache/commons/math3/fitting/WeightedObservedPoint
      58: astore        5
      60: aload_2
      61: iload_3
      62: iinc          3, 1
      65: aload_0
      66: getfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
      69: invokestatic  #11                 // Method org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.access$100:(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
      72: aload         5
      74: invokevirtual #12                 // Method org/apache/commons/math3/fitting/WeightedObservedPoint.getX:()D
      77: aload_1
      78: invokeinterface #13,  4           // InterfaceMethod org/apache/commons/math3/analysis/ParametricUnivariateFunction.gradient:(D[D)[D
      83: aastore
      84: goto          38
      87: aload_2
      88: areturn
}
