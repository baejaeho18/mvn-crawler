Compiled from "BaseMultivariateOptimizer.java"
public abstract class org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR> extends org.apache.commons.math3.optim.BaseOptimizer<PAIR> {
  private double[] start;

  private double[] lowerBound;

  private double[] upperBound;

  protected org.apache.commons.math3.optim.BaseMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<PAIR>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/optim/BaseOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: return

  public PAIR optimize(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/apache/commons/math3/optim/BaseOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
       5: areturn

  protected void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/apache/commons/math3/optim/BaseOptimizer.parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_1
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     90
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: instanceof    #4                  // class org/apache/commons/math3/optim/InitialGuess
      30: ifeq          48
      33: aload_0
      34: aload         5
      36: checkcast     #4                  // class org/apache/commons/math3/optim/InitialGuess
      39: invokevirtual #5                  // Method org/apache/commons/math3/optim/InitialGuess.getInitialGuess:()[D
      42: putfield      #6                  // Field start:[D
      45: goto          84
      48: aload         5
      50: instanceof    #7                  // class org/apache/commons/math3/optim/SimpleBounds
      53: ifeq          84
      56: aload         5
      58: checkcast     #7                  // class org/apache/commons/math3/optim/SimpleBounds
      61: astore        6
      63: aload_0
      64: aload         6
      66: invokevirtual #8                  // Method org/apache/commons/math3/optim/SimpleBounds.getLower:()[D
      69: putfield      #9                  // Field lowerBound:[D
      72: aload_0
      73: aload         6
      75: invokevirtual #10                 // Method org/apache/commons/math3/optim/SimpleBounds.getUpper:()[D
      78: putfield      #11                 // Field upperBound:[D
      81: goto          84
      84: iinc          4, 1
      87: goto          13
      90: aload_0
      91: invokespecial #12                 // Method checkParameters:()V
      94: return

  public double[] getStartPoint();
    Code:
       0: aload_0
       1: getfield      #6                  // Field start:[D
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #6                  // Field start:[D
      15: invokevirtual #13                 // Method "[D".clone:()Ljava/lang/Object;
      18: checkcast     #14                 // class "[D"
      21: areturn

  public double[] getLowerBound();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lowerBound:[D
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #9                  // Field lowerBound:[D
      15: invokevirtual #15                 // Method "[D".clone:()Ljava/lang/Object;
      18: checkcast     #14                 // class "[D"
      21: areturn

  public double[] getUpperBound();
    Code:
       0: aload_0
       1: getfield      #11                 // Field upperBound:[D
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #11                 // Field upperBound:[D
      15: invokevirtual #16                 // Method "[D".clone:()Ljava/lang/Object;
      18: checkcast     #14                 // class "[D"
      21: areturn

  private void checkParameters();
    Code:
       0: aload_0
       1: getfield      #6                  // Field start:[D
       4: ifnull        179
       7: aload_0
       8: getfield      #6                  // Field start:[D
      11: arraylength
      12: istore_1
      13: aload_0
      14: getfield      #9                  // Field lowerBound:[D
      17: ifnull        96
      20: aload_0
      21: getfield      #9                  // Field lowerBound:[D
      24: arraylength
      25: iload_1
      26: if_icmpeq     43
      29: new           #17                 // class org/apache/commons/math3/exception/DimensionMismatchException
      32: dup
      33: aload_0
      34: getfield      #9                  // Field lowerBound:[D
      37: arraylength
      38: iload_1
      39: invokespecial #18                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      42: athrow
      43: iconst_0
      44: istore_2
      45: iload_2
      46: iload_1
      47: if_icmpge     96
      50: aload_0
      51: getfield      #6                  // Field start:[D
      54: iload_2
      55: daload
      56: dstore_3
      57: aload_0
      58: getfield      #9                  // Field lowerBound:[D
      61: iload_2
      62: daload
      63: dstore        5
      65: dload_3
      66: dload         5
      68: dcmpg
      69: ifge          90
      72: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      75: dup
      76: dload_3
      77: invokestatic  #20                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      80: dload         5
      82: invokestatic  #20                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      85: iconst_1
      86: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      89: athrow
      90: iinc          2, 1
      93: goto          45
      96: aload_0
      97: getfield      #11                 // Field upperBound:[D
     100: ifnull        179
     103: aload_0
     104: getfield      #11                 // Field upperBound:[D
     107: arraylength
     108: iload_1
     109: if_icmpeq     126
     112: new           #17                 // class org/apache/commons/math3/exception/DimensionMismatchException
     115: dup
     116: aload_0
     117: getfield      #11                 // Field upperBound:[D
     120: arraylength
     121: iload_1
     122: invokespecial #18                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
     125: athrow
     126: iconst_0
     127: istore_2
     128: iload_2
     129: iload_1
     130: if_icmpge     179
     133: aload_0
     134: getfield      #6                  // Field start:[D
     137: iload_2
     138: daload
     139: dstore_3
     140: aload_0
     141: getfield      #11                 // Field upperBound:[D
     144: iload_2
     145: daload
     146: dstore        5
     148: dload_3
     149: dload         5
     151: dcmpl
     152: ifle          173
     155: new           #22                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
     158: dup
     159: dload_3
     160: invokestatic  #20                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     163: dload         5
     165: invokestatic  #20                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     168: iconst_1
     169: invokespecial #23                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
     172: athrow
     173: iinc          2, 1
     176: goto          128
     179: return
}
