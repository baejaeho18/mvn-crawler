Compiled from "RealFieldElement.java"
public interface org.apache.commons.math3.RealFieldElement<T> extends org.apache.commons.math3.FieldElement<T> {
  public abstract double getReal();

  public abstract T add(double);

  public abstract T subtract(double);

  public abstract T multiply(double);

  public abstract T divide(double);

  public abstract T remainder(double);

  public abstract T remainder(T) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract T abs();

  public abstract T ceil();

  public abstract T floor();

  public abstract T rint();

  public abstract long round();

  public abstract T signum();

  public abstract T copySign(T);

  public abstract T copySign(double);

  public abstract T scalb(int);

  public abstract T hypot(T) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract T reciprocal();

  public abstract T sqrt();

  public abstract T cbrt();

  public abstract T rootN(int);

  public abstract T pow(double);

  public abstract T pow(int);

  public abstract T pow(T) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract T exp();

  public abstract T expm1();

  public abstract T log();

  public abstract T log1p();

  public abstract T cos();

  public abstract T sin();

  public abstract T tan();

  public abstract T acos();

  public abstract T asin();

  public abstract T atan();

  public abstract T atan2(T) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract T cosh();

  public abstract T sinh();

  public abstract T tanh();

  public abstract T acosh();

  public abstract T asinh();

  public abstract T atanh();

  public abstract T linearCombination(T[], T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract T linearCombination(double[], T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract T linearCombination(T, T, T, T);

  public abstract T linearCombination(double, T, double, T);

  public abstract T linearCombination(T, T, T, T, T, T);

  public abstract T linearCombination(double, T, double, T, double, T);

  public abstract T linearCombination(T, T, T, T, T, T, T, T);

  public abstract T linearCombination(double, T, double, T, double, T, double, T);
}
