Compiled from "BoundaryProjector.java"
class org.apache.commons.math3.geometry.partitioning.BoundaryProjector<S extends org.apache.commons.math3.geometry.Space, T extends org.apache.commons.math3.geometry.Space> implements org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor<S> {
  private final org.apache.commons.math3.geometry.Point<S> original;

  private org.apache.commons.math3.geometry.Point<S> projected;

  private org.apache.commons.math3.geometry.partitioning.BSPTree<S> leaf;

  private double offset;

  org.apache.commons.math3.geometry.partitioning.BoundaryProjector(org.apache.commons.math3.geometry.Point<S>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field projected:Lorg/apache/commons/math3/geometry/Point;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field leaf:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      19: aload_0
      20: ldc2_w        #5                  // double Infinityd
      23: putfield      #7                  // Field offset:D
      26: return

  public org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       9: aload_0
      10: getfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
      13: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.getOffset:(Lorg/apache/commons/math3/geometry/Point;)D
      18: dconst_0
      19: dcmpg
      20: ifgt          27
      23: getstatic     #11                 // Field org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order.MINUS_SUB_PLUS:Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
      26: areturn
      27: getstatic     #12                 // Field org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order.PLUS_SUB_MINUS:Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
      30: areturn

  public void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       9: astore_2
      10: aload_2
      11: aload_0
      12: getfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
      15: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.getOffset:(Lorg/apache/commons/math3/geometry/Point;)D
      20: dstore_3
      21: dload_3
      22: invokestatic  #13                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      25: aload_0
      26: getfield      #7                  // Field offset:D
      29: dcmpg
      30: ifge          213
      33: aload_2
      34: aload_0
      35: getfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
      38: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.project:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
      43: astore        5
      45: aload_0
      46: aload_1
      47: invokespecial #15                 // Method boundaryRegions:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Ljava/util/List;
      50: astore        6
      52: iconst_0
      53: istore        7
      55: aload         6
      57: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore        8
      64: aload         8
      66: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          123
      74: aload         8
      76: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #19                 // class org/apache/commons/math3/geometry/partitioning/Region
      84: astore        9
      86: iload         7
      88: ifne          120
      91: aload_0
      92: aload         5
      94: aload_2
      95: aload         9
      97: invokespecial #20                 // Method belongsToPart:(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Z
     100: ifeq          120
     103: aload_0
     104: aload         5
     106: putfield      #3                  // Field projected:Lorg/apache/commons/math3/geometry/Point;
     109: aload_0
     110: dload_3
     111: invokestatic  #13                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     114: putfield      #7                  // Field offset:D
     117: iconst_1
     118: istore        7
     120: goto          64
     123: iload         7
     125: ifne          213
     128: aload         6
     130: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     135: astore        8
     137: aload         8
     139: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     144: ifeq          213
     147: aload         8
     149: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     154: checkcast     #19                 // class org/apache/commons/math3/geometry/partitioning/Region
     157: astore        9
     159: aload_0
     160: aload         5
     162: aload_2
     163: aload         9
     165: invokespecial #21                 // Method singularProjection:(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/Point;
     168: astore        10
     170: aload         10
     172: ifnull        210
     175: aload_0
     176: getfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
     179: aload         10
     181: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/math3/geometry/Point.distance:(Lorg/apache/commons/math3/geometry/Point;)D
     186: dstore        11
     188: dload         11
     190: aload_0
     191: getfield      #7                  // Field offset:D
     194: dcmpg
     195: ifge          210
     198: aload_0
     199: aload         10
     201: putfield      #3                  // Field projected:Lorg/apache/commons/math3/geometry/Point;
     204: aload_0
     205: dload         11
     207: putfield      #7                  // Field offset:D
     210: goto          137
     213: return

  public void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field leaf:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       4: ifnonnull     12
       7: aload_0
       8: aload_1
       9: putfield      #4                  // Field leaf:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      12: return

  public org.apache.commons.math3.geometry.partitioning.BoundaryProjection<S> getProjection();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field offset:D
       5: aload_0
       6: getfield      #4                  // Field leaf:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       9: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      12: checkcast     #24                 // class java/lang/Boolean
      15: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
      18: ifeq          27
      21: ldc2_w        #26                 // double -1.0d
      24: goto          28
      27: dconst_1
      28: invokestatic  #28                 // Method org/apache/commons/math3/util/FastMath.copySign:(DD)D
      31: putfield      #7                  // Field offset:D
      34: new           #29                 // class org/apache/commons/math3/geometry/partitioning/BoundaryProjection
      37: dup
      38: aload_0
      39: getfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
      42: aload_0
      43: getfield      #3                  // Field projected:Lorg/apache/commons/math3/geometry/Point;
      46: aload_0
      47: getfield      #7                  // Field offset:D
      50: invokespecial #30                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection."<init>":(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
      53: areturn

  private java.util.List<org.apache.commons.math3.geometry.partitioning.Region<T>> boundaryRegions(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: new           #31                 // class java/util/ArrayList
       3: dup
       4: iconst_2
       5: invokespecial #32                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_2
       9: aload_1
      10: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      13: checkcast     #33                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      16: astore_3
      17: aload_0
      18: aload_3
      19: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      22: aload_2
      23: invokespecial #35                 // Method addRegion:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V
      26: aload_0
      27: aload_3
      28: invokevirtual #36                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      31: aload_2
      32: invokespecial #35                 // Method addRegion:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V
      35: aload_2
      36: areturn

  private void addRegion(org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>, java.util.List<org.apache.commons.math3.geometry.partitioning.Region<T>>);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_1
       5: checkcast     #37                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
       8: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      11: astore_3
      12: aload_3
      13: ifnull        24
      16: aload_2
      17: aload_3
      18: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  private boolean belongsToPart(org.apache.commons.math3.geometry.Point<S>, org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Region<T>);
    Code:
       0: aload_2
       1: checkcast     #40                 // class org/apache/commons/math3/geometry/partitioning/Embedding
       4: astore        4
       6: aload_3
       7: aload         4
       9: aload_1
      10: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Embedding.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
      15: invokeinterface #42,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.checkPoint:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      20: getstatic     #43                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.OUTSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      23: if_acmpeq     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private org.apache.commons.math3.geometry.Point<S> singularProjection(org.apache.commons.math3.geometry.Point<S>, org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Region<T>);
    Code:
       0: aload_2
       1: checkcast     #40                 // class org/apache/commons/math3/geometry/partitioning/Embedding
       4: astore        4
       6: aload_3
       7: aload         4
       9: aload_1
      10: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Embedding.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
      15: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.projectToBoundary:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
      20: astore        5
      22: aload         5
      24: invokevirtual #45                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection.getProjected:()Lorg/apache/commons/math3/geometry/Point;
      27: ifnonnull     34
      30: aconst_null
      31: goto          46
      34: aload         4
      36: aload         5
      38: invokevirtual #45                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryProjection.getProjected:()Lorg/apache/commons/math3/geometry/Point;
      41: invokeinterface #46,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Embedding.toSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
      46: areturn
}
