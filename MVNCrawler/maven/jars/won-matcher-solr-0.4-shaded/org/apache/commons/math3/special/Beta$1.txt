Compiled from "Beta.java"
final class org.apache.commons.math3.special.Beta$1 extends org.apache.commons.math3.util.ContinuedFraction {
  final double val$b;

  final double val$a;

  org.apache.commons.math3.special.Beta$1(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #1                  // Field val$b:D
       5: aload_0
       6: dload_3
       7: putfield      #2                  // Field val$a:D
      10: aload_0
      11: invokespecial #3                  // Method org/apache/commons/math3/util/ContinuedFraction."<init>":()V
      14: return

  protected double getB(int, double);
    Code:
       0: iload_1
       1: iconst_2
       2: irem
       3: ifne          57
       6: iload_1
       7: i2d
       8: ldc2_w        #4                  // double 2.0d
      11: ddiv
      12: dstore        6
      14: dload         6
      16: aload_0
      17: getfield      #1                  // Field val$b:D
      20: dload         6
      22: dsub
      23: dmul
      24: dload_2
      25: dmul
      26: aload_0
      27: getfield      #2                  // Field val$a:D
      30: ldc2_w        #4                  // double 2.0d
      33: dload         6
      35: dmul
      36: dadd
      37: dconst_1
      38: dsub
      39: aload_0
      40: getfield      #2                  // Field val$a:D
      43: ldc2_w        #4                  // double 2.0d
      46: dload         6
      48: dmul
      49: dadd
      50: dmul
      51: ddiv
      52: dstore        4
      54: goto          118
      57: iload_1
      58: i2d
      59: dconst_1
      60: dsub
      61: ldc2_w        #4                  // double 2.0d
      64: ddiv
      65: dstore        6
      67: aload_0
      68: getfield      #2                  // Field val$a:D
      71: dload         6
      73: dadd
      74: aload_0
      75: getfield      #2                  // Field val$a:D
      78: aload_0
      79: getfield      #1                  // Field val$b:D
      82: dadd
      83: dload         6
      85: dadd
      86: dmul
      87: dload_2
      88: dmul
      89: dneg
      90: aload_0
      91: getfield      #2                  // Field val$a:D
      94: ldc2_w        #4                  // double 2.0d
      97: dload         6
      99: dmul
     100: dadd
     101: aload_0
     102: getfield      #2                  // Field val$a:D
     105: ldc2_w        #4                  // double 2.0d
     108: dload         6
     110: dmul
     111: dadd
     112: dconst_1
     113: dadd
     114: dmul
     115: ddiv
     116: dstore        4
     118: dload         4
     120: dreturn

  protected double getA(int, double);
    Code:
       0: dconst_1
       1: dreturn
}
