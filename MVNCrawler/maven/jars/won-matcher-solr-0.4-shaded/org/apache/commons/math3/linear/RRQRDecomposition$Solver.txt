Compiled from "RRQRDecomposition.java"
class org.apache.commons.math3.linear.RRQRDecomposition$Solver implements org.apache.commons.math3.linear.DecompositionSolver {
  private final org.apache.commons.math3.linear.DecompositionSolver upper;

  private org.apache.commons.math3.linear.RealMatrix p;

  private org.apache.commons.math3.linear.RRQRDecomposition$Solver(org.apache.commons.math3.linear.DecompositionSolver, org.apache.commons.math3.linear.RealMatrix);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field upper:Lorg/apache/commons/math3/linear/DecompositionSolver;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field p:Lorg/apache/commons/math3/linear/RealMatrix;
      14: return

  public boolean isNonSingular();
    Code:
       0: aload_0
       1: getfield      #3                  // Field upper:Lorg/apache/commons/math3/linear/DecompositionSolver;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.isNonSingular:()Z
       9: ireturn

  public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: getfield      #4                  // Field p:Lorg/apache/commons/math3/linear/RealMatrix;
       4: aload_0
       5: getfield      #3                  // Field upper:Lorg/apache/commons/math3/linear/DecompositionSolver;
       8: aload_1
       9: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.solve:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      14: invokeinterface #7,  2            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.operate:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      19: areturn

  public org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix);
    Code:
       0: aload_0
       1: getfield      #4                  // Field p:Lorg/apache/commons/math3/linear/RealMatrix;
       4: aload_0
       5: getfield      #3                  // Field upper:Lorg/apache/commons/math3/linear/DecompositionSolver;
       8: aload_1
       9: invokeinterface #8,  2            // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.solve:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      14: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      19: areturn

  public org.apache.commons.math3.linear.RealMatrix getInverse();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field p:Lorg/apache/commons/math3/linear/RealMatrix;
       5: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      10: invokestatic  #11                 // Method org/apache/commons/math3/linear/MatrixUtils.createRealIdentityMatrix:(I)Lorg/apache/commons/math3/linear/RealMatrix;
      13: invokevirtual #12                 // Method solve:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      16: areturn

  org.apache.commons.math3.linear.RRQRDecomposition$Solver(org.apache.commons.math3.linear.DecompositionSolver, org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.linear.RRQRDecomposition$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/linear/DecompositionSolver;Lorg/apache/commons/math3/linear/RealMatrix;)V
       6: return
}
