Compiled from "Median.java"
public class org.apache.commons.math3.stat.descriptive.rank.Median extends org.apache.commons.math3.stat.descriptive.rank.Percentile implements java.io.Serializable {
  private static final long serialVersionUID;

  private static final double FIXED_QUANTILE_50;

  public org.apache.commons.math3.stat.descriptive.rank.Median();
    Code:
       0: aload_0
       1: ldc2_w        #1                  // double 50.0d
       4: invokespecial #3                  // Method org/apache/commons/math3/stat/descriptive/rank/Percentile."<init>":(D)V
       7: return

  public org.apache.commons.math3.stat.descriptive.rank.Median(org.apache.commons.math3.stat.descriptive.rank.Median) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/commons/math3/stat/descriptive/rank/Percentile."<init>":(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V
       5: return

  private org.apache.commons.math3.stat.descriptive.rank.Median(org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType, org.apache.commons.math3.stat.ranking.NaNStrategy, org.apache.commons.math3.util.KthSelector) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: ldc2_w        #1                  // double 50.0d
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #5                  // Method org/apache/commons/math3/stat/descriptive/rank/Percentile."<init>":(DLorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V
      10: return

  public org.apache.commons.math3.stat.descriptive.rank.Median withEstimationType(org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType);
    Code:
       0: new           #6                  // class org/apache/commons/math3/stat/descriptive/rank/Median
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #7                  // Method getNaNStrategy:()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
       9: aload_0
      10: invokevirtual #8                  // Method getKthSelector:()Lorg/apache/commons/math3/util/KthSelector;
      13: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V
      16: areturn

  public org.apache.commons.math3.stat.descriptive.rank.Median withNaNStrategy(org.apache.commons.math3.stat.ranking.NaNStrategy);
    Code:
       0: new           #6                  // class org/apache/commons/math3/stat/descriptive/rank/Median
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method getEstimationType:()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
       8: aload_1
       9: aload_0
      10: invokevirtual #8                  // Method getKthSelector:()Lorg/apache/commons/math3/util/KthSelector;
      13: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V
      16: areturn

  public org.apache.commons.math3.stat.descriptive.rank.Median withKthSelector(org.apache.commons.math3.util.KthSelector);
    Code:
       0: new           #6                  // class org/apache/commons/math3/stat/descriptive/rank/Median
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method getEstimationType:()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
       8: aload_0
       9: invokevirtual #7                  // Method getNaNStrategy:()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
      12: aload_1
      13: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V
      16: areturn

  public org.apache.commons.math3.stat.descriptive.rank.Percentile withKthSelector(org.apache.commons.math3.util.KthSelector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method withKthSelector:(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
       5: areturn

  public org.apache.commons.math3.stat.descriptive.rank.Percentile withNaNStrategy(org.apache.commons.math3.stat.ranking.NaNStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method withNaNStrategy:(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
       5: areturn

  public org.apache.commons.math3.stat.descriptive.rank.Percentile withEstimationType(org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method withEstimationType:(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
       5: areturn
}
