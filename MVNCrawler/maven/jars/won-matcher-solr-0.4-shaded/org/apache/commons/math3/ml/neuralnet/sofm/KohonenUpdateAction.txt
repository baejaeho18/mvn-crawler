Compiled from "KohonenUpdateAction.java"
public class org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction implements org.apache.commons.math3.ml.neuralnet.UpdateAction {
  private final org.apache.commons.math3.ml.distance.DistanceMeasure distance;

  private final org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction learningFactor;

  private final org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction neighbourhoodSize;

  private final java.util.concurrent.atomic.AtomicLong numberOfCalls;

  public org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction(org.apache.commons.math3.ml.distance.DistanceMeasure, org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction, org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field numberOfCalls:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field distance:Lorg/apache/commons/math3/ml/distance/DistanceMeasure;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field learningFactor:Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field neighbourhoodSize:Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;
      31: return

  public void update(org.apache.commons.math3.ml.neuralnet.Network, double[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field numberOfCalls:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: lconst_1
       8: lsub
       9: lstore_3
      10: aload_0
      11: getfield      #6                  // Field learningFactor:Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;
      14: lload_3
      15: invokeinterface #9,  3            // InterfaceMethod org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction.value:(J)D
      20: dstore        5
      22: aload_0
      23: aload_1
      24: aload_2
      25: dload         5
      27: invokespecial #10                 // Method findAndUpdateBestNeuron:(Lorg/apache/commons/math3/ml/neuralnet/Network;[DD)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
      30: astore        7
      32: aload_0
      33: getfield      #7                  // Field neighbourhoodSize:Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;
      36: lload_3
      37: invokeinterface #11,  3           // InterfaceMethod org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction.value:(J)I
      42: istore        8
      44: new           #12                 // class org/apache/commons/math3/analysis/function/Gaussian
      47: dup
      48: dload         5
      50: dconst_0
      51: iload         8
      53: i2d
      54: invokespecial #13                 // Method org/apache/commons/math3/analysis/function/Gaussian."<init>":(DDD)V
      57: astore        9
      59: iload         8
      61: ifle          180
      64: new           #14                 // class java/util/HashSet
      67: dup
      68: invokespecial #15                 // Method java/util/HashSet."<init>":()V
      71: astore        10
      73: aload         10
      75: aload         7
      77: invokeinterface #16,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      82: pop
      83: new           #14                 // class java/util/HashSet
      86: dup
      87: invokespecial #15                 // Method java/util/HashSet."<init>":()V
      90: astore        11
      92: aload         11
      94: aload         7
      96: invokevirtual #17                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      99: pop
     100: iconst_1
     101: istore        12
     103: aload_1
     104: aload         10
     106: aload         11
     108: invokevirtual #18                 // Method org/apache/commons/math3/ml/neuralnet/Network.getNeighbours:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;
     111: astore        10
     113: aload         10
     115: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     120: astore        13
     122: aload         13
     124: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     129: ifeq          162
     132: aload         13
     134: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     139: checkcast     #22                 // class org/apache/commons/math3/ml/neuralnet/Neuron
     142: astore        14
     144: aload_0
     145: aload         14
     147: aload_2
     148: aload         9
     150: iload         12
     152: i2d
     153: invokevirtual #23                 // Method org/apache/commons/math3/analysis/function/Gaussian.value:(D)D
     156: invokespecial #24                 // Method updateNeighbouringNeuron:(Lorg/apache/commons/math3/ml/neuralnet/Neuron;[DD)V
     159: goto          122
     162: aload         11
     164: aload         10
     166: invokevirtual #25                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
     169: pop
     170: iinc          12, 1
     173: iload         12
     175: iload         8
     177: if_icmple     103
     180: return

  public long getNumberOfCalls();
    Code:
       0: aload_0
       1: getfield      #4                  // Field numberOfCalls:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private boolean attemptNeuronUpdate(org.apache.commons.math3.ml.neuralnet.Neuron, double[], double);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method org/apache/commons/math3/ml/neuralnet/Neuron.getFeatures:()[D
       4: astore        5
       6: aload_0
       7: aload         5
       9: aload_2
      10: dload_3
      11: invokespecial #28                 // Method computeFeatures:([D[DD)[D
      14: astore        6
      16: aload_1
      17: aload         5
      19: aload         6
      21: invokevirtual #29                 // Method org/apache/commons/math3/ml/neuralnet/Neuron.compareAndSetFeatures:([D[D)Z
      24: ireturn

  private void updateNeighbouringNeuron(org.apache.commons.math3.ml.neuralnet.Neuron, double[], double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: dload_3
       4: invokespecial #30                 // Method attemptNeuronUpdate:(Lorg/apache/commons/math3/ml/neuralnet/Neuron;[DD)Z
       7: ifeq          0
      10: goto          13
      13: return

  private org.apache.commons.math3.ml.neuralnet.Neuron findAndUpdateBestNeuron(org.apache.commons.math3.ml.neuralnet.Network, double[], double);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #5                  // Field distance:Lorg/apache/commons/math3/ml/distance/DistanceMeasure;
       6: invokestatic  #31                 // Method org/apache/commons/math3/ml/neuralnet/MapUtils.findBest:([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
       9: astore        5
      11: aload_0
      12: aload         5
      14: aload_2
      15: dload_3
      16: invokespecial #30                 // Method attemptNeuronUpdate:(Lorg/apache/commons/math3/ml/neuralnet/Neuron;[DD)Z
      19: ifeq          25
      22: aload         5
      24: areturn
      25: goto          0

  private double[] computeFeatures(double[], double[], double);
    Code:
       0: new           #32                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_1
       5: iconst_0
       6: invokespecial #33                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
       9: astore        5
      11: new           #32                 // class org/apache/commons/math3/linear/ArrayRealVector
      14: dup
      15: aload_2
      16: iconst_0
      17: invokespecial #33                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      20: astore        6
      22: aload         6
      24: aload         5
      26: invokevirtual #34                 // Method org/apache/commons/math3/linear/ArrayRealVector.subtract:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
      29: dload_3
      30: invokevirtual #35                 // Method org/apache/commons/math3/linear/ArrayRealVector.mapMultiplyToSelf:(D)Lorg/apache/commons/math3/linear/RealVector;
      33: aload         5
      35: invokevirtual #36                 // Method org/apache/commons/math3/linear/RealVector.add:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      38: invokevirtual #37                 // Method org/apache/commons/math3/linear/RealVector.toArray:()[D
      41: areturn
}
