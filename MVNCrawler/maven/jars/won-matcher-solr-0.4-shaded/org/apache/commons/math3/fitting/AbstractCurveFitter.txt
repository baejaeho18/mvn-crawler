Compiled from "AbstractCurveFitter.java"
public abstract class org.apache.commons.math3.fitting.AbstractCurveFitter {
  public org.apache.commons.math3.fitting.AbstractCurveFitter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public double[] fit(java.util.Collection<org.apache.commons.math3.fitting.WeightedObservedPoint>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getOptimizer:()Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer;
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method getProblem:(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
       9: invokeinterface #4,  2            // InterfaceMethod org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.optimize:(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;
      14: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum.getPoint:()Lorg/apache/commons/math3/linear/RealVector;
      19: invokevirtual #6                  // Method org/apache/commons/math3/linear/RealVector.toArray:()[D
      22: areturn

  protected org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer getOptimizer();
    Code:
       0: new           #7                  // class org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer
       3: dup
       4: invokespecial #8                  // Method org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer."<init>":()V
       7: areturn

  protected abstract org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem getProblem(java.util.Collection<org.apache.commons.math3.fitting.WeightedObservedPoint>);
}
