Compiled from "ConstantRealDistribution.java"
public class org.apache.commons.math3.distribution.ConstantRealDistribution extends org.apache.commons.math3.distribution.AbstractRealDistribution {
  private static final long serialVersionUID;

  private final double value;

  public org.apache.commons.math3.distribution.ConstantRealDistribution(double);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method org/apache/commons/math3/distribution/AbstractRealDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;)V
       5: aload_0
       6: dload_1
       7: putfield      #2                  // Field value:D
      10: return

  public double density(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #2                  // Field value:D
       5: dcmpl
       6: ifne          13
       9: dconst_1
      10: goto          14
      13: dconst_0
      14: dreturn

  public double cumulativeProbability(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #2                  // Field value:D
       5: dcmpg
       6: ifge          13
       9: dconst_0
      10: goto          14
      13: dconst_1
      14: dreturn

  public double inverseCumulativeProbability(double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          12
       6: dload_1
       7: dconst_1
       8: dcmpl
       9: ifle          32
      12: new           #3                  // class org/apache/commons/math3/exception/OutOfRangeException
      15: dup
      16: dload_1
      17: invokestatic  #4                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      20: iconst_0
      21: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: iconst_1
      25: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokespecial #6                  // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      31: athrow
      32: aload_0
      33: getfield      #2                  // Field value:D
      36: dreturn

  public double getNumericalMean();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dreturn

  public double getNumericalVariance();
    Code:
       0: dconst_0
       1: dreturn

  public double getSupportLowerBound();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dreturn

  public double getSupportUpperBound();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dreturn

  public boolean isSupportLowerBoundInclusive();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSupportUpperBoundInclusive();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSupportConnected();
    Code:
       0: iconst_1
       1: ireturn

  public double sample();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dreturn

  public void reseedRandomGenerator(long);
    Code:
       0: return
}
