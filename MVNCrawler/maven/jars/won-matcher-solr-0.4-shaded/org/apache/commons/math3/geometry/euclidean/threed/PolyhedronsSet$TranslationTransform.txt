Compiled from "PolyhedronsSet.java"
class org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform implements org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D, org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> {
  private org.apache.commons.math3.geometry.euclidean.threed.Vector3D translation;

  private org.apache.commons.math3.geometry.euclidean.threed.Plane cachedOriginal;

  private org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> cachedTransform;

  org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform(org.apache.commons.math3.geometry.euclidean.threed.Vector3D);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field translation:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       9: return

  public org.apache.commons.math3.geometry.euclidean.threed.Vector3D apply(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: new           #3                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
       3: dup
       4: dconst_1
       5: aload_1
       6: checkcast     #3                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
       9: dconst_1
      10: aload_0
      11: getfield      #2                  // Field translation:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      14: invokespecial #4                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      17: areturn

  public org.apache.commons.math3.geometry.euclidean.threed.Plane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_1
       1: checkcast     #5                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
       4: aload_0
       5: getfield      #2                  // Field translation:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       8: invokevirtual #6                  // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.translate:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
      11: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #7                  // Field cachedOriginal:Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
       5: if_acmpeq     65
       8: aload_2
       9: checkcast     #5                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      12: astore        4
      14: aload_3
      15: checkcast     #5                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      18: astore        5
      20: aload         5
      22: aload_0
      23: aload         4
      25: invokevirtual #8                  // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.getOrigin:()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      28: invokevirtual #9                  // Method apply:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      31: invokevirtual #10                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      34: astore        6
      36: aload_0
      37: aload_2
      38: checkcast     #5                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      41: putfield      #7                  // Field cachedOriginal:Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
      44: aload_0
      45: dconst_1
      46: dconst_0
      47: dconst_0
      48: dconst_1
      49: aload         6
      51: invokevirtual #11                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
      54: aload         6
      56: invokevirtual #12                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      59: invokestatic  #13                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getTransform:(DDDDDD)Lorg/apache/commons/math3/geometry/partitioning/Transform;
      62: putfield      #14                 // Field cachedTransform:Lorg/apache/commons/math3/geometry/partitioning/Transform;
      65: aload_1
      66: checkcast     #15                 // class org/apache/commons/math3/geometry/euclidean/twod/SubLine
      69: aload_0
      70: getfield      #14                 // Field cachedTransform:Lorg/apache/commons/math3/geometry/partitioning/Transform;
      73: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/twod/SubLine.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      76: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method apply:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
       5: areturn

  public org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method apply:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       5: areturn
}
