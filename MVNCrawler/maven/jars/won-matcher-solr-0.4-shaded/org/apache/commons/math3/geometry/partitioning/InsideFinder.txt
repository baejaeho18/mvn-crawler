Compiled from "InsideFinder.java"
class org.apache.commons.math3.geometry.partitioning.InsideFinder<S extends org.apache.commons.math3.geometry.Space> {
  private final org.apache.commons.math3.geometry.partitioning.Region<S> region;

  private boolean plusFound;

  private boolean minusFound;

  org.apache.commons.math3.geometry.partitioning.InsideFinder(org.apache.commons.math3.geometry.partitioning.Region<S>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field region:Lorg/apache/commons/math3/geometry/partitioning/Region;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field plusFound:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field minusFound:Z
      19: return

  public void recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     31
       7: aload_1
       8: invokevirtual #6                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      11: checkcast     #7                  // class java/lang/Boolean
      14: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
      17: ifeq          30
      20: aload_0
      21: iconst_1
      22: putfield      #3                  // Field plusFound:Z
      25: aload_0
      26: iconst_1
      27: putfield      #4                  // Field minusFound:Z
      30: return
      31: aload_1
      32: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      35: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      40: astore_3
      41: aload_2
      42: aload_3
      43: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
      48: astore        4
      50: getstatic     #11                 // Field org/apache/commons/math3/geometry/partitioning/InsideFinder$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$Side:[I
      53: aload         4
      55: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getSide:()Lorg/apache/commons/math3/geometry/partitioning/Side;
      58: invokevirtual #13                 // Method org/apache/commons/math3/geometry/partitioning/Side.ordinal:()I
      61: iaload
      62: tableswitch   { // 1 to 3
                     1: 88
                     2: 183
                     3: 278
               default: 321
          }
      88: aload_1
      89: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      92: aload_2
      93: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      98: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
     103: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getSide:()Lorg/apache/commons/math3/geometry/partitioning/Side;
     106: getstatic     #14                 // Field org/apache/commons/math3/geometry/partitioning/Side.PLUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
     109: if_acmpne     136
     112: aload_0
     113: getfield      #2                  // Field region:Lorg/apache/commons/math3/geometry/partitioning/Region;
     116: aload_1
     117: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     120: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     125: ifne          157
     128: aload_0
     129: iconst_1
     130: putfield      #3                  // Field plusFound:Z
     133: goto          157
     136: aload_0
     137: getfield      #2                  // Field region:Lorg/apache/commons/math3/geometry/partitioning/Region;
     140: aload_1
     141: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     144: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     149: ifne          157
     152: aload_0
     153: iconst_1
     154: putfield      #4                  // Field minusFound:Z
     157: aload_0
     158: getfield      #3                  // Field plusFound:Z
     161: ifeq          171
     164: aload_0
     165: getfield      #4                  // Field minusFound:Z
     168: ifne          471
     171: aload_0
     172: aload_1
     173: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     176: aload_2
     177: invokevirtual #18                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
     180: goto          471
     183: aload_1
     184: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     187: aload_2
     188: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     193: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
     198: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getSide:()Lorg/apache/commons/math3/geometry/partitioning/Side;
     201: getstatic     #14                 // Field org/apache/commons/math3/geometry/partitioning/Side.PLUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
     204: if_acmpne     231
     207: aload_0
     208: getfield      #2                  // Field region:Lorg/apache/commons/math3/geometry/partitioning/Region;
     211: aload_1
     212: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     215: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     220: ifne          252
     223: aload_0
     224: iconst_1
     225: putfield      #3                  // Field plusFound:Z
     228: goto          252
     231: aload_0
     232: getfield      #2                  // Field region:Lorg/apache/commons/math3/geometry/partitioning/Region;
     235: aload_1
     236: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     239: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     244: ifne          252
     247: aload_0
     248: iconst_1
     249: putfield      #4                  // Field minusFound:Z
     252: aload_0
     253: getfield      #3                  // Field plusFound:Z
     256: ifeq          266
     259: aload_0
     260: getfield      #4                  // Field minusFound:Z
     263: ifne          471
     266: aload_0
     267: aload_1
     268: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     271: aload_2
     272: invokevirtual #18                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
     275: goto          471
     278: aload_0
     279: aload_1
     280: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     283: aload         4
     285: invokevirtual #19                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     288: invokevirtual #18                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
     291: aload_0
     292: getfield      #3                  // Field plusFound:Z
     295: ifeq          305
     298: aload_0
     299: getfield      #4                  // Field minusFound:Z
     302: ifne          471
     305: aload_0
     306: aload_1
     307: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     310: aload         4
     312: invokevirtual #20                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     315: invokevirtual #18                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
     318: goto          471
     321: aload_1
     322: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     325: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     330: aload_2
     331: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     336: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.sameOrientationAs:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
     341: ifeq          409
     344: aload_1
     345: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     348: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     351: ifnonnull     370
     354: aload_1
     355: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     358: invokevirtual #6                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     361: checkcast     #7                  // class java/lang/Boolean
     364: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
     367: ifeq          375
     370: aload_0
     371: iconst_1
     372: putfield      #3                  // Field plusFound:Z
     375: aload_1
     376: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     379: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     382: ifnonnull     401
     385: aload_1
     386: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     389: invokevirtual #6                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     392: checkcast     #7                  // class java/lang/Boolean
     395: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
     398: ifeq          471
     401: aload_0
     402: iconst_1
     403: putfield      #4                  // Field minusFound:Z
     406: goto          471
     409: aload_1
     410: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     413: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     416: ifnonnull     435
     419: aload_1
     420: invokevirtual #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     423: invokevirtual #6                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     426: checkcast     #7                  // class java/lang/Boolean
     429: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
     432: ifeq          440
     435: aload_0
     436: iconst_1
     437: putfield      #4                  // Field minusFound:Z
     440: aload_1
     441: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     444: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     447: ifnonnull     466
     450: aload_1
     451: invokevirtual #15                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     454: invokevirtual #6                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     457: checkcast     #7                  // class java/lang/Boolean
     460: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
     463: ifeq          471
     466: aload_0
     467: iconst_1
     468: putfield      #3                  // Field plusFound:Z
     471: return

  public boolean plusFound();
    Code:
       0: aload_0
       1: getfield      #3                  // Field plusFound:Z
       4: ireturn

  public boolean minusFound();
    Code:
       0: aload_0
       1: getfield      #4                  // Field minusFound:Z
       4: ireturn
}
