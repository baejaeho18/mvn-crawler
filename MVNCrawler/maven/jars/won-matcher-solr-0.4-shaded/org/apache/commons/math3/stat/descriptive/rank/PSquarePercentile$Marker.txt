Compiled from "PSquarePercentile.java"
class org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker implements java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  private int index;

  private double intMarkerPosition;

  private double desiredMarkerPosition;

  private double markerHeight;

  private double desiredMarkerIncrement;

  private transient org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker next;

  private transient org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker previous;

  private final org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator nonLinear;

  private transient org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator linear;

  private org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #11                 // class org/apache/commons/math3/analysis/interpolation/NevilleInterpolator
       8: dup
       9: invokespecial #12                 // Method org/apache/commons/math3/analysis/interpolation/NevilleInterpolator."<init>":()V
      12: putfield      #13                 // Field nonLinear:Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;
      15: aload_0
      16: new           #14                 // class org/apache/commons/math3/analysis/interpolation/LinearInterpolator
      19: dup
      20: invokespecial #15                 // Method org/apache/commons/math3/analysis/interpolation/LinearInterpolator."<init>":()V
      23: putfield      #16                 // Field linear:Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;
      26: aload_0
      27: aload_0
      28: aload_0
      29: dup_x1
      30: putfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      33: putfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      36: return

  private org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker(double, double, double, double);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #4                  // Field markerHeight:D
       9: aload_0
      10: dload_3
      11: putfield      #19                 // Field desiredMarkerPosition:D
      14: aload_0
      15: dload         5
      17: putfield      #20                 // Field desiredMarkerIncrement:D
      20: aload_0
      21: dload         7
      23: putfield      #21                 // Field intMarkerPosition:D
      26: return

  private org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker previous(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker);
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: aload_1
       6: putfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
       9: aload_0
      10: areturn

  private org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker next(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker);
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: aload_1
       6: putfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
       9: aload_0
      10: areturn

  private org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker index(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field index:I
       5: aload_0
       6: areturn

  private void updateDesiredPosition();
    Code:
       0: aload_0
       1: dup
       2: getfield      #19                 // Field desiredMarkerPosition:D
       5: aload_0
       6: getfield      #20                 // Field desiredMarkerIncrement:D
       9: dadd
      10: putfield      #19                 // Field desiredMarkerPosition:D
      13: return

  private void incrementPosition(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #21                 // Field intMarkerPosition:D
       5: iload_1
       6: i2d
       7: dadd
       8: putfield      #21                 // Field intMarkerPosition:D
      11: return

  private double difference();
    Code:
       0: aload_0
       1: getfield      #19                 // Field desiredMarkerPosition:D
       4: aload_0
       5: getfield      #21                 // Field intMarkerPosition:D
       8: dsub
       9: dreturn

  private double estimate();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method difference:()D
       4: dstore_1
       5: aload_0
       6: getfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
       9: getfield      #21                 // Field intMarkerPosition:D
      12: aload_0
      13: getfield      #21                 // Field intMarkerPosition:D
      16: dsub
      17: dconst_1
      18: dcmpl
      19: ifle          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore_3
      28: aload_0
      29: getfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      32: getfield      #21                 // Field intMarkerPosition:D
      35: aload_0
      36: getfield      #21                 // Field intMarkerPosition:D
      39: dsub
      40: ldc2_w        #25                 // double -1.0d
      43: dcmpg
      44: ifge          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        4
      54: dload_1
      55: dconst_1
      56: dcmpl
      57: iflt          64
      60: iload_3
      61: ifne          77
      64: dload_1
      65: ldc2_w        #25                 // double -1.0d
      68: dcmpg
      69: ifgt          316
      72: iload         4
      74: ifeq          316
      77: dload_1
      78: dconst_0
      79: dcmpl
      80: iflt          87
      83: iconst_1
      84: goto          88
      87: iconst_m1
      88: istore        5
      90: iconst_3
      91: newarray       double
      93: dup
      94: iconst_0
      95: aload_0
      96: getfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      99: getfield      #21                 // Field intMarkerPosition:D
     102: dastore
     103: dup
     104: iconst_1
     105: aload_0
     106: getfield      #21                 // Field intMarkerPosition:D
     109: dastore
     110: dup
     111: iconst_2
     112: aload_0
     113: getfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
     116: getfield      #21                 // Field intMarkerPosition:D
     119: dastore
     120: astore        6
     122: iconst_3
     123: newarray       double
     125: dup
     126: iconst_0
     127: aload_0
     128: getfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
     131: getfield      #4                  // Field markerHeight:D
     134: dastore
     135: dup
     136: iconst_1
     137: aload_0
     138: getfield      #4                  // Field markerHeight:D
     141: dastore
     142: dup
     143: iconst_2
     144: aload_0
     145: getfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
     148: getfield      #4                  // Field markerHeight:D
     151: dastore
     152: astore        7
     154: aload_0
     155: getfield      #21                 // Field intMarkerPosition:D
     158: iload         5
     160: i2d
     161: dadd
     162: dstore        8
     164: aload_0
     165: getfield      #13                 // Field nonLinear:Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;
     168: aload         6
     170: aload         7
     172: invokeinterface #27,  3           // InterfaceMethod org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.interpolate:([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
     177: astore        10
     179: aload_0
     180: aload         10
     182: dload         8
     184: invokeinterface #28,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
     189: putfield      #4                  // Field markerHeight:D
     192: aload_0
     193: aload         7
     195: aload_0
     196: getfield      #4                  // Field markerHeight:D
     199: invokespecial #29                 // Method isEstimateBad:([DD)Z
     202: ifeq          310
     205: dload         8
     207: aload         6
     209: iconst_1
     210: daload
     211: dsub
     212: dconst_0
     213: dcmpl
     214: ifle          221
     217: iconst_1
     218: goto          222
     221: iconst_m1
     222: istore        11
     224: iconst_2
     225: newarray       double
     227: dup
     228: iconst_0
     229: aload         6
     231: iconst_1
     232: daload
     233: dastore
     234: dup
     235: iconst_1
     236: aload         6
     238: iconst_1
     239: iload         11
     241: iadd
     242: daload
     243: dastore
     244: astore        12
     246: iconst_2
     247: newarray       double
     249: dup
     250: iconst_0
     251: aload         7
     253: iconst_1
     254: daload
     255: dastore
     256: dup
     257: iconst_1
     258: aload         7
     260: iconst_1
     261: iload         11
     263: iadd
     264: daload
     265: dastore
     266: astore        13
     268: aload         12
     270: iconst_1
     271: anewarray     #30                 // class "[D"
     274: dup
     275: iconst_0
     276: aload         13
     278: aastore
     279: invokestatic  #31                 // Method org/apache/commons/math3/util/MathArrays.sortInPlace:([D[[D)V
     282: aload_0
     283: getfield      #16                 // Field linear:Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;
     286: aload         12
     288: aload         13
     290: invokeinterface #27,  3           // InterfaceMethod org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.interpolate:([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
     295: astore        10
     297: aload_0
     298: aload         10
     300: dload         8
     302: invokeinterface #28,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
     307: putfield      #4                  // Field markerHeight:D
     310: aload_0
     311: iload         5
     313: invokespecial #2                  // Method incrementPosition:(I)V
     316: aload_0
     317: getfield      #4                  // Field markerHeight:D
     320: dreturn

  private boolean isEstimateBad(double[], double);
    Code:
       0: dload_2
       1: aload_1
       2: iconst_0
       3: daload
       4: dcmpg
       5: ifle          16
       8: dload_2
       9: aload_1
      10: iconst_2
      11: daload
      12: dcmpl
      13: iflt          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: if_acmpne     12
       7: iconst_1
       8: istore_2
       9: goto          174
      12: aload_1
      13: ifnull        174
      16: aload_1
      17: instanceof    #32                 // class org/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker
      20: ifeq          174
      23: aload_1
      24: checkcast     #32                 // class org/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker
      27: astore_3
      28: aload_0
      29: getfield      #4                  // Field markerHeight:D
      32: aload_3
      33: getfield      #4                  // Field markerHeight:D
      36: invokestatic  #33                 // Method java/lang/Double.compare:(DD)I
      39: ifne          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore_2
      48: iload_2
      49: ifeq          70
      52: aload_0
      53: getfield      #21                 // Field intMarkerPosition:D
      56: aload_3
      57: getfield      #21                 // Field intMarkerPosition:D
      60: invokestatic  #33                 // Method java/lang/Double.compare:(DD)I
      63: ifne          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: istore_2
      72: iload_2
      73: ifeq          94
      76: aload_0
      77: getfield      #19                 // Field desiredMarkerPosition:D
      80: aload_3
      81: getfield      #19                 // Field desiredMarkerPosition:D
      84: invokestatic  #33                 // Method java/lang/Double.compare:(DD)I
      87: ifne          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore_2
      96: iload_2
      97: ifeq          118
     100: aload_0
     101: getfield      #20                 // Field desiredMarkerIncrement:D
     104: aload_3
     105: getfield      #20                 // Field desiredMarkerIncrement:D
     108: invokestatic  #33                 // Method java/lang/Double.compare:(DD)I
     111: ifne          118
     114: iconst_1
     115: goto          119
     118: iconst_0
     119: istore_2
     120: iload_2
     121: ifeq          145
     124: aload_0
     125: getfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
     128: getfield      #23                 // Field index:I
     131: aload_3
     132: getfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
     135: getfield      #23                 // Field index:I
     138: if_icmpne     145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: istore_2
     147: iload_2
     148: ifeq          172
     151: aload_0
     152: getfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
     155: getfield      #23                 // Field index:I
     158: aload_3
     159: getfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
     162: getfield      #23                 // Field index:I
     165: if_icmpne     172
     168: iconst_1
     169: goto          173
     172: iconst_0
     173: istore_2
     174: iload_2
     175: ireturn

  public int hashCode();
    Code:
       0: bipush        6
       2: newarray       double
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field markerHeight:D
      10: dastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #21                 // Field intMarkerPosition:D
      17: dastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #20                 // Field desiredMarkerIncrement:D
      24: dastore
      25: dup
      26: iconst_3
      27: aload_0
      28: getfield      #19                 // Field desiredMarkerPosition:D
      31: dastore
      32: dup
      33: iconst_4
      34: aload_0
      35: getfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      38: getfield      #23                 // Field index:I
      41: i2d
      42: dastore
      43: dup
      44: iconst_5
      45: aload_0
      46: getfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      49: getfield      #23                 // Field index:I
      52: i2d
      53: dastore
      54: invokestatic  #34                 // Method java/util/Arrays.hashCode:([D)I
      57: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_0
       6: aload_0
       7: dup_x1
       8: putfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      11: putfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      14: aload_0
      15: new           #14                 // class org/apache/commons/math3/analysis/interpolation/LinearInterpolator
      18: dup
      19: invokespecial #15                 // Method org/apache/commons/math3/analysis/interpolation/LinearInterpolator."<init>":()V
      22: putfield      #16                 // Field linear:Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;
      25: return

  public java.lang.Object clone();
    Code:
       0: new           #32                 // class org/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker
       3: dup
       4: aload_0
       5: getfield      #4                  // Field markerHeight:D
       8: aload_0
       9: getfield      #19                 // Field desiredMarkerPosition:D
      12: aload_0
      13: getfield      #20                 // Field desiredMarkerIncrement:D
      16: aload_0
      17: getfield      #21                 // Field intMarkerPosition:D
      20: invokespecial #5                  // Method "<init>":(DDDD)V
      23: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #36                 // String index=%.0f,n=%.0f,np=%.2f,q=%.2f,dn=%.2f,prev=%d,next=%d
       2: bipush        7
       4: anewarray     #37                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: getfield      #23                 // Field index:I
      13: i2d
      14: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: getfield      #21                 // Field intMarkerPosition:D
      24: iconst_0
      25: invokestatic  #39                 // Method org/apache/commons/math3/util/Precision.round:(DI)D
      28: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      31: aastore
      32: dup
      33: iconst_2
      34: aload_0
      35: getfield      #19                 // Field desiredMarkerPosition:D
      38: iconst_2
      39: invokestatic  #39                 // Method org/apache/commons/math3/util/Precision.round:(DI)D
      42: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      45: aastore
      46: dup
      47: iconst_3
      48: aload_0
      49: getfield      #4                  // Field markerHeight:D
      52: iconst_2
      53: invokestatic  #39                 // Method org/apache/commons/math3/util/Precision.round:(DI)D
      56: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      59: aastore
      60: dup
      61: iconst_4
      62: aload_0
      63: getfield      #20                 // Field desiredMarkerIncrement:D
      66: iconst_2
      67: invokestatic  #39                 // Method org/apache/commons/math3/util/Precision.round:(DI)D
      70: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      73: aastore
      74: dup
      75: iconst_5
      76: aload_0
      77: getfield      #17                 // Field previous:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      80: getfield      #23                 // Field index:I
      83: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      86: aastore
      87: dup
      88: bipush        6
      90: aload_0
      91: getfield      #18                 // Field next:Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
      94: getfield      #23                 // Field index:I
      97: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     100: aastore
     101: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     104: areturn

  static org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker access$000(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker, org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method previous:(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
       5: areturn

  static org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker access$100(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker, org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method next:(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
       5: areturn

  static org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker access$200(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method index:(I)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
       5: areturn

  org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$1);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: return

  org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker(double, double, double, double, org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$1);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: dload         7
       7: invokespecial #5                  // Method "<init>":(DDDD)V
      10: return

  static double access$502(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker, double);
    Code:
       0: aload_0
       1: dload_1
       2: dup2_x1
       3: putfield      #4                  // Field markerHeight:D
       6: dreturn

  static double access$600(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method estimate:()D
       4: dreturn

  static void access$700(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method incrementPosition:(I)V
       5: return

  static void access$800(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method updateDesiredPosition:()V
       4: return

  static double access$500(org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker);
    Code:
       0: aload_0
       1: getfield      #4                  // Field markerHeight:D
       4: dreturn
}
