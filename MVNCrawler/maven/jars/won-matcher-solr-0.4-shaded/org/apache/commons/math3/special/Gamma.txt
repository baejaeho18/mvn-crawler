Compiled from "Gamma.java"
public class org.apache.commons.math3.special.Gamma {
  public static final double GAMMA;

  public static final double LANCZOS_G;

  private static final double DEFAULT_EPSILON;

  private static final double[] LANCZOS;

  private static final double HALF_LOG_2_PI;

  private static final double SQRT_TWO_PI;

  private static final double C_LIMIT;

  private static final double S_LIMIT;

  private static final double INV_GAMMA1P_M1_A0;

  private static final double INV_GAMMA1P_M1_A1;

  private static final double INV_GAMMA1P_M1_B1;

  private static final double INV_GAMMA1P_M1_B2;

  private static final double INV_GAMMA1P_M1_B3;

  private static final double INV_GAMMA1P_M1_B4;

  private static final double INV_GAMMA1P_M1_B5;

  private static final double INV_GAMMA1P_M1_B6;

  private static final double INV_GAMMA1P_M1_B7;

  private static final double INV_GAMMA1P_M1_B8;

  private static final double INV_GAMMA1P_M1_P0;

  private static final double INV_GAMMA1P_M1_P1;

  private static final double INV_GAMMA1P_M1_P2;

  private static final double INV_GAMMA1P_M1_P3;

  private static final double INV_GAMMA1P_M1_P4;

  private static final double INV_GAMMA1P_M1_P5;

  private static final double INV_GAMMA1P_M1_P6;

  private static final double INV_GAMMA1P_M1_Q1;

  private static final double INV_GAMMA1P_M1_Q2;

  private static final double INV_GAMMA1P_M1_Q3;

  private static final double INV_GAMMA1P_M1_Q4;

  private static final double INV_GAMMA1P_M1_C;

  private static final double INV_GAMMA1P_M1_C0;

  private static final double INV_GAMMA1P_M1_C1;

  private static final double INV_GAMMA1P_M1_C2;

  private static final double INV_GAMMA1P_M1_C3;

  private static final double INV_GAMMA1P_M1_C4;

  private static final double INV_GAMMA1P_M1_C5;

  private static final double INV_GAMMA1P_M1_C6;

  private static final double INV_GAMMA1P_M1_C7;

  private static final double INV_GAMMA1P_M1_C8;

  private static final double INV_GAMMA1P_M1_C9;

  private static final double INV_GAMMA1P_M1_C10;

  private static final double INV_GAMMA1P_M1_C11;

  private static final double INV_GAMMA1P_M1_C12;

  private static final double INV_GAMMA1P_M1_C13;

  private org.apache.commons.math3.special.Gamma();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static double logGamma(double);
    Code:
       0: dload_0
       1: invokestatic  #2                  // Method java/lang/Double.isNaN:(D)Z
       4: ifne          13
       7: dload_0
       8: dconst_0
       9: dcmpg
      10: ifgt          20
      13: ldc2_w        #3                  // double NaNd
      16: dstore_2
      17: goto          168
      20: dload_0
      21: ldc2_w        #5                  // double 0.5d
      24: dcmpg
      25: ifge          38
      28: dload_0
      29: invokestatic  #7                  // Method logGamma1p:(D)D
      32: dload_0
      33: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
      36: dsub
      37: dreturn
      38: dload_0
      39: ldc2_w        #9                  // double 2.5d
      42: dcmpg
      43: ifgt          59
      46: dload_0
      47: ldc2_w        #5                  // double 0.5d
      50: dsub
      51: ldc2_w        #5                  // double 0.5d
      54: dsub
      55: invokestatic  #7                  // Method logGamma1p:(D)D
      58: dreturn
      59: dload_0
      60: ldc2_w        #11                 // double 8.0d
      63: dcmpg
      64: ifgt          124
      67: dload_0
      68: ldc2_w        #13                 // double 1.5d
      71: dsub
      72: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      75: d2i
      76: istore        4
      78: dconst_1
      79: dstore        5
      81: iconst_1
      82: istore        7
      84: iload         7
      86: iload         4
      88: if_icmpgt     107
      91: dload         5
      93: dload_0
      94: iload         7
      96: i2d
      97: dsub
      98: dmul
      99: dstore        5
     101: iinc          7, 1
     104: goto          84
     107: dload_0
     108: iload         4
     110: iconst_1
     111: iadd
     112: i2d
     113: dsub
     114: invokestatic  #7                  // Method logGamma1p:(D)D
     117: dload         5
     119: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
     122: dadd
     123: dreturn
     124: dload_0
     125: invokestatic  #16                 // Method lanczos:(D)D
     128: dstore        4
     130: dload_0
     131: ldc2_w        #17                 // double 4.7421875d
     134: dadd
     135: ldc2_w        #5                  // double 0.5d
     138: dadd
     139: dstore        6
     141: dload_0
     142: ldc2_w        #5                  // double 0.5d
     145: dadd
     146: dload         6
     148: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
     151: dmul
     152: dload         6
     154: dsub
     155: getstatic     #19                 // Field HALF_LOG_2_PI:D
     158: dadd
     159: dload         4
     161: dload_0
     162: ddiv
     163: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
     166: dadd
     167: dstore_2
     168: dload_2
     169: dreturn

  public static double regularizedGammaP(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: ldc2_w        #20                 // double 1.0E-14d
       5: ldc           #22                 // int 2147483647
       7: invokestatic  #23                 // Method regularizedGammaP:(DDDI)D
      10: dreturn

  public static double regularizedGammaP(double, double, double, int);
    Code:
       0: dload_0
       1: invokestatic  #2                  // Method java/lang/Double.isNaN:(D)Z
       4: ifne          26
       7: dload_2
       8: invokestatic  #2                  // Method java/lang/Double.isNaN:(D)Z
      11: ifne          26
      14: dload_0
      15: dconst_0
      16: dcmpg
      17: ifle          26
      20: dload_2
      21: dconst_0
      22: dcmpg
      23: ifge          34
      26: ldc2_w        #3                  // double NaNd
      29: dstore        7
      31: goto          199
      34: dload_2
      35: dconst_0
      36: dcmpl
      37: ifne          46
      40: dconst_0
      41: dstore        7
      43: goto          199
      46: dload_2
      47: dload_0
      48: dconst_1
      49: dadd
      50: dcmpl
      51: iflt          70
      54: dconst_1
      55: dload_0
      56: dload_2
      57: dload         4
      59: iload         6
      61: invokestatic  #24                 // Method regularizedGammaQ:(DDDI)D
      64: dsub
      65: dstore        7
      67: goto          199
      70: dconst_0
      71: dstore        9
      73: dconst_1
      74: dload_0
      75: ddiv
      76: dstore        11
      78: dload         11
      80: dstore        13
      82: dload         11
      84: dload         13
      86: ddiv
      87: invokestatic  #25                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      90: dload         4
      92: dcmpl
      93: ifle          141
      96: dload         9
      98: iload         6
     100: i2d
     101: dcmpg
     102: ifge          141
     105: dload         13
     107: ldc2_w        #26                 // double Infinityd
     110: dcmpg
     111: ifge          141
     114: dload         9
     116: dconst_1
     117: dadd
     118: dstore        9
     120: dload         11
     122: dload_2
     123: dload_0
     124: dload         9
     126: dadd
     127: ddiv
     128: dmul
     129: dstore        11
     131: dload         13
     133: dload         11
     135: dadd
     136: dstore        13
     138: goto          82
     141: dload         9
     143: iload         6
     145: i2d
     146: dcmpl
     147: iflt          163
     150: new           #28                 // class org/apache/commons/math3/exception/MaxCountExceededException
     153: dup
     154: iload         6
     156: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     159: invokespecial #30                 // Method org/apache/commons/math3/exception/MaxCountExceededException."<init>":(Ljava/lang/Number;)V
     162: athrow
     163: dload         13
     165: invokestatic  #31                 // Method java/lang/Double.isInfinite:(D)Z
     168: ifeq          177
     171: dconst_1
     172: dstore        7
     174: goto          199
     177: dload_2
     178: dneg
     179: dload_0
     180: dload_2
     181: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
     184: dmul
     185: dadd
     186: dload_0
     187: invokestatic  #32                 // Method logGamma:(D)D
     190: dsub
     191: invokestatic  #33                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
     194: dload         13
     196: dmul
     197: dstore        7
     199: dload         7
     201: dreturn

  public static double regularizedGammaQ(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: ldc2_w        #20                 // double 1.0E-14d
       5: ldc           #22                 // int 2147483647
       7: invokestatic  #24                 // Method regularizedGammaQ:(DDDI)D
      10: dreturn

  public static double regularizedGammaQ(double, double, double, int);
    Code:
       0: dload_0
       1: invokestatic  #2                  // Method java/lang/Double.isNaN:(D)Z
       4: ifne          26
       7: dload_2
       8: invokestatic  #2                  // Method java/lang/Double.isNaN:(D)Z
      11: ifne          26
      14: dload_0
      15: dconst_0
      16: dcmpg
      17: ifle          26
      20: dload_2
      21: dconst_0
      22: dcmpg
      23: ifge          34
      26: ldc2_w        #3                  // double NaNd
      29: dstore        7
      31: goto          116
      34: dload_2
      35: dconst_0
      36: dcmpl
      37: ifne          46
      40: dconst_1
      41: dstore        7
      43: goto          116
      46: dload_2
      47: dload_0
      48: dconst_1
      49: dadd
      50: dcmpg
      51: ifge          70
      54: dconst_1
      55: dload_0
      56: dload_2
      57: dload         4
      59: iload         6
      61: invokestatic  #23                 // Method regularizedGammaP:(DDDI)D
      64: dsub
      65: dstore        7
      67: goto          116
      70: new           #34                 // class org/apache/commons/math3/special/Gamma$1
      73: dup
      74: dload_0
      75: invokespecial #35                 // Method org/apache/commons/math3/special/Gamma$1."<init>":(D)V
      78: astore        9
      80: dconst_1
      81: aload         9
      83: dload_2
      84: dload         4
      86: iload         6
      88: invokevirtual #36                 // Method org/apache/commons/math3/util/ContinuedFraction.evaluate:(DDI)D
      91: ddiv
      92: dstore        7
      94: dload_2
      95: dneg
      96: dload_0
      97: dload_2
      98: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
     101: dmul
     102: dadd
     103: dload_0
     104: invokestatic  #32                 // Method logGamma:(D)D
     107: dsub
     108: invokestatic  #33                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
     111: dload         7
     113: dmul
     114: dstore        7
     116: dload         7
     118: dreturn

  public static double digamma(double);
    Code:
       0: dload_0
       1: invokestatic  #2                  // Method java/lang/Double.isNaN:(D)Z
       4: ifne          14
       7: dload_0
       8: invokestatic  #31                 // Method java/lang/Double.isInfinite:(D)Z
      11: ifeq          16
      14: dload_0
      15: dreturn
      16: dload_0
      17: dconst_0
      18: dcmpl
      19: ifle          38
      22: dload_0
      23: ldc2_w        #37                 // double 1.0E-5d
      26: dcmpg
      27: ifgt          38
      30: ldc2_w        #39                 // double -0.5772156649015329d
      33: dconst_1
      34: dload_0
      35: ddiv
      36: dsub
      37: dreturn
      38: dload_0
      39: ldc2_w        #41                 // double 49.0d
      42: dcmpl
      43: iflt          81
      46: dconst_1
      47: dload_0
      48: dload_0
      49: dmul
      50: ddiv
      51: dstore_2
      52: dload_0
      53: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
      56: ldc2_w        #5                  // double 0.5d
      59: dload_0
      60: ddiv
      61: dsub
      62: dload_2
      63: ldc2_w        #43                 // double 0.08333333333333333d
      66: dload_2
      67: ldc2_w        #45                 // double 0.008333333333333333d
      70: dload_2
      71: ldc2_w        #47                 // double 252.0d
      74: ddiv
      75: dsub
      76: dmul
      77: dadd
      78: dmul
      79: dsub
      80: dreturn
      81: dload_0
      82: dconst_1
      83: dadd
      84: invokestatic  #49                 // Method digamma:(D)D
      87: dconst_1
      88: dload_0
      89: ddiv
      90: dsub
      91: dreturn

  public static double trigamma(double);
    Code:
       0: dload_0
       1: invokestatic  #2                  // Method java/lang/Double.isNaN:(D)Z
       4: ifne          14
       7: dload_0
       8: invokestatic  #31                 // Method java/lang/Double.isInfinite:(D)Z
      11: ifeq          16
      14: dload_0
      15: dreturn
      16: dload_0
      17: dconst_0
      18: dcmpl
      19: ifle          36
      22: dload_0
      23: ldc2_w        #37                 // double 1.0E-5d
      26: dcmpg
      27: ifgt          36
      30: dconst_1
      31: dload_0
      32: dload_0
      33: dmul
      34: ddiv
      35: dreturn
      36: dload_0
      37: ldc2_w        #41                 // double 49.0d
      40: dcmpl
      41: iflt          80
      44: dconst_1
      45: dload_0
      46: dload_0
      47: dmul
      48: ddiv
      49: dstore_2
      50: dconst_1
      51: dload_0
      52: ddiv
      53: dload_2
      54: ldc2_w        #50                 // double 2.0d
      57: ddiv
      58: dadd
      59: dload_2
      60: dload_0
      61: ddiv
      62: ldc2_w        #52                 // double 0.16666666666666666d
      65: dload_2
      66: ldc2_w        #54                 // double 0.03333333333333333d
      69: dload_2
      70: ldc2_w        #56                 // double 42.0d
      73: ddiv
      74: dadd
      75: dmul
      76: dsub
      77: dmul
      78: dadd
      79: dreturn
      80: dload_0
      81: dconst_1
      82: dadd
      83: invokestatic  #58                 // Method trigamma:(D)D
      86: dconst_1
      87: dload_0
      88: dload_0
      89: dmul
      90: ddiv
      91: dadd
      92: dreturn

  public static double lanczos(double);
    Code:
       0: dconst_0
       1: dstore_2
       2: getstatic     #59                 // Field LANCZOS:[D
       5: arraylength
       6: iconst_1
       7: isub
       8: istore        4
      10: iload         4
      12: ifle          36
      15: dload_2
      16: getstatic     #59                 // Field LANCZOS:[D
      19: iload         4
      21: daload
      22: dload_0
      23: iload         4
      25: i2d
      26: dadd
      27: ddiv
      28: dadd
      29: dstore_2
      30: iinc          4, -1
      33: goto          10
      36: dload_2
      37: getstatic     #59                 // Field LANCZOS:[D
      40: iconst_0
      41: daload
      42: dadd
      43: dreturn

  public static double invGamma1pm1(double);
    Code:
       0: dload_0
       1: ldc2_w        #60                 // double -0.5d
       4: dcmpg
       5: ifge          27
       8: new           #62                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      11: dup
      12: dload_0
      13: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      16: ldc2_w        #60                 // double -0.5d
      19: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      22: iconst_1
      23: invokespecial #64                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      26: athrow
      27: dload_0
      28: ldc2_w        #13                 // double 1.5d
      31: dcmpl
      32: ifle          54
      35: new           #65                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      38: dup
      39: dload_0
      40: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      43: ldc2_w        #13                 // double 1.5d
      46: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      49: iconst_1
      50: invokespecial #66                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      53: athrow
      54: dload_0
      55: ldc2_w        #5                  // double 0.5d
      58: dcmpg
      59: ifgt          66
      62: dload_0
      63: goto          75
      66: dload_0
      67: ldc2_w        #5                  // double 0.5d
      70: dsub
      71: ldc2_w        #5                  // double 0.5d
      74: dsub
      75: dstore        4
      77: dload         4
      79: dconst_0
      80: dcmpg
      81: ifge          379
      84: ldc2_w        #67                 // double 6.116095104481416E-9d
      87: dload         4
      89: ldc2_w        #69                 // double 6.247308301164655E-9d
      92: dmul
      93: dadd
      94: dstore        6
      96: ldc2_w        #71                 // double 1.9575583661463974E-10d
      99: dstore        8
     101: ldc2_w        #73                 // double -6.077618957228252E-8d
     104: dload         4
     106: dload         8
     108: dmul
     109: dadd
     110: dstore        8
     112: ldc2_w        #75                 // double 9.926418406727737E-7d
     115: dload         4
     117: dload         8
     119: dmul
     120: dadd
     121: dstore        8
     123: ldc2_w        #77                 // double -6.4304548177935305E-6d
     126: dload         4
     128: dload         8
     130: dmul
     131: dadd
     132: dstore        8
     134: ldc2_w        #79                 // double -8.514194324403149E-6d
     137: dload         4
     139: dload         8
     141: dmul
     142: dadd
     143: dstore        8
     145: ldc2_w        #81                 // double 4.939449793824468E-4d
     148: dload         4
     150: dload         8
     152: dmul
     153: dadd
     154: dstore        8
     156: ldc2_w        #83                 // double 0.026620534842894922d
     159: dload         4
     161: dload         8
     163: dmul
     164: dadd
     165: dstore        8
     167: ldc2_w        #85                 // double 0.203610414066807d
     170: dload         4
     172: dload         8
     174: dmul
     175: dadd
     176: dstore        8
     178: dconst_1
     179: dload         4
     181: dload         8
     183: dmul
     184: dadd
     185: dstore        8
     187: ldc2_w        #87                 // double -2.056338416977607E-7d
     190: dload         4
     192: dload         6
     194: dload         8
     196: ddiv
     197: dmul
     198: dadd
     199: dstore        10
     201: ldc2_w        #89                 // double 1.133027231981696E-6d
     204: dload         4
     206: dload         10
     208: dmul
     209: dadd
     210: dstore        10
     212: ldc2_w        #91                 // double -1.2504934821426706E-6d
     215: dload         4
     217: dload         10
     219: dmul
     220: dadd
     221: dstore        10
     223: ldc2_w        #93                 // double -2.013485478078824E-5d
     226: dload         4
     228: dload         10
     230: dmul
     231: dadd
     232: dstore        10
     234: ldc2_w        #95                 // double 1.280502823881162E-4d
     237: dload         4
     239: dload         10
     241: dmul
     242: dadd
     243: dstore        10
     245: ldc2_w        #97                 // double -2.1524167411495098E-4d
     248: dload         4
     250: dload         10
     252: dmul
     253: dadd
     254: dstore        10
     256: ldc2_w        #99                 // double -0.0011651675918590652d
     259: dload         4
     261: dload         10
     263: dmul
     264: dadd
     265: dstore        10
     267: ldc2_w        #101                // double 0.0072189432466631d
     270: dload         4
     272: dload         10
     274: dmul
     275: dadd
     276: dstore        10
     278: ldc2_w        #103                // double -0.009621971527876973d
     281: dload         4
     283: dload         10
     285: dmul
     286: dadd
     287: dstore        10
     289: ldc2_w        #105                // double -0.04219773455554433d
     292: dload         4
     294: dload         10
     296: dmul
     297: dadd
     298: dstore        10
     300: ldc2_w        #107                // double 0.16653861138229148d
     303: dload         4
     305: dload         10
     307: dmul
     308: dadd
     309: dstore        10
     311: ldc2_w        #109                // double -0.04200263503409524d
     314: dload         4
     316: dload         10
     318: dmul
     319: dadd
     320: dstore        10
     322: ldc2_w        #111                // double -0.6558780715202539d
     325: dload         4
     327: dload         10
     329: dmul
     330: dadd
     331: dstore        10
     333: ldc2_w        #113                // double -0.42278433509846713d
     336: dload         4
     338: dload         10
     340: dmul
     341: dadd
     342: dstore        10
     344: dload_0
     345: ldc2_w        #5                  // double 0.5d
     348: dcmpl
     349: ifle          363
     352: dload         4
     354: dload         10
     356: dmul
     357: dload_0
     358: ddiv
     359: dstore_2
     360: goto          376
     363: dload_0
     364: dload         10
     366: ldc2_w        #5                  // double 0.5d
     369: dadd
     370: ldc2_w        #5                  // double 0.5d
     373: dadd
     374: dmul
     375: dstore_2
     376: goto          686
     379: ldc2_w        #115                // double 4.343529937408594E-15d
     382: dstore        6
     384: ldc2_w        #117                // double -1.2494415722763663E-13d
     387: dload         4
     389: dload         6
     391: dmul
     392: dadd
     393: dstore        6
     395: ldc2_w        #119                // double 1.5728330277104463E-12d
     398: dload         4
     400: dload         6
     402: dmul
     403: dadd
     404: dstore        6
     406: ldc2_w        #121                // double 4.686843322948848E-11d
     409: dload         4
     411: dload         6
     413: dmul
     414: dadd
     415: dstore        6
     417: ldc2_w        #123                // double 6.820161668496171E-10d
     420: dload         4
     422: dload         6
     424: dmul
     425: dadd
     426: dstore        6
     428: ldc2_w        #125                // double 6.8716741130671986E-9d
     431: dload         4
     433: dload         6
     435: dmul
     436: dadd
     437: dstore        6
     439: ldc2_w        #67                 // double 6.116095104481416E-9d
     442: dload         4
     444: dload         6
     446: dmul
     447: dadd
     448: dstore        6
     450: ldc2_w        #127                // double 2.6923694661863613E-4d
     453: dstore        8
     455: ldc2_w        #129                // double 0.004956830093825887d
     458: dload         4
     460: dload         8
     462: dmul
     463: dadd
     464: dstore        8
     466: ldc2_w        #131                // double 0.054642130860422966d
     469: dload         4
     471: dload         8
     473: dmul
     474: dadd
     475: dstore        8
     477: ldc2_w        #133                // double 0.3056961078365221d
     480: dload         4
     482: dload         8
     484: dmul
     485: dadd
     486: dstore        8
     488: dconst_1
     489: dload         4
     491: dload         8
     493: dmul
     494: dadd
     495: dstore        8
     497: ldc2_w        #87                 // double -2.056338416977607E-7d
     500: dload         6
     502: dload         8
     504: ddiv
     505: dload         4
     507: dmul
     508: dadd
     509: dstore        10
     511: ldc2_w        #89                 // double 1.133027231981696E-6d
     514: dload         4
     516: dload         10
     518: dmul
     519: dadd
     520: dstore        10
     522: ldc2_w        #91                 // double -1.2504934821426706E-6d
     525: dload         4
     527: dload         10
     529: dmul
     530: dadd
     531: dstore        10
     533: ldc2_w        #93                 // double -2.013485478078824E-5d
     536: dload         4
     538: dload         10
     540: dmul
     541: dadd
     542: dstore        10
     544: ldc2_w        #95                 // double 1.280502823881162E-4d
     547: dload         4
     549: dload         10
     551: dmul
     552: dadd
     553: dstore        10
     555: ldc2_w        #97                 // double -2.1524167411495098E-4d
     558: dload         4
     560: dload         10
     562: dmul
     563: dadd
     564: dstore        10
     566: ldc2_w        #99                 // double -0.0011651675918590652d
     569: dload         4
     571: dload         10
     573: dmul
     574: dadd
     575: dstore        10
     577: ldc2_w        #101                // double 0.0072189432466631d
     580: dload         4
     582: dload         10
     584: dmul
     585: dadd
     586: dstore        10
     588: ldc2_w        #103                // double -0.009621971527876973d
     591: dload         4
     593: dload         10
     595: dmul
     596: dadd
     597: dstore        10
     599: ldc2_w        #105                // double -0.04219773455554433d
     602: dload         4
     604: dload         10
     606: dmul
     607: dadd
     608: dstore        10
     610: ldc2_w        #107                // double 0.16653861138229148d
     613: dload         4
     615: dload         10
     617: dmul
     618: dadd
     619: dstore        10
     621: ldc2_w        #109                // double -0.04200263503409524d
     624: dload         4
     626: dload         10
     628: dmul
     629: dadd
     630: dstore        10
     632: ldc2_w        #111                // double -0.6558780715202539d
     635: dload         4
     637: dload         10
     639: dmul
     640: dadd
     641: dstore        10
     643: ldc2_w        #135                // double 0.5772156649015329d
     646: dload         4
     648: dload         10
     650: dmul
     651: dadd
     652: dstore        10
     654: dload_0
     655: ldc2_w        #5                  // double 0.5d
     658: dcmpl
     659: ifle          681
     662: dload         4
     664: dload_0
     665: ddiv
     666: dload         10
     668: ldc2_w        #5                  // double 0.5d
     671: dsub
     672: ldc2_w        #5                  // double 0.5d
     675: dsub
     676: dmul
     677: dstore_2
     678: goto          686
     681: dload_0
     682: dload         10
     684: dmul
     685: dstore_2
     686: dload_2
     687: dreturn

  public static double logGamma1p(double) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: dload_0
       1: ldc2_w        #60                 // double -0.5d
       4: dcmpg
       5: ifge          27
       8: new           #62                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      11: dup
      12: dload_0
      13: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      16: ldc2_w        #60                 // double -0.5d
      19: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      22: iconst_1
      23: invokespecial #64                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      26: athrow
      27: dload_0
      28: ldc2_w        #13                 // double 1.5d
      31: dcmpl
      32: ifle          54
      35: new           #65                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      38: dup
      39: dload_0
      40: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      43: ldc2_w        #13                 // double 1.5d
      46: invokestatic  #63                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      49: iconst_1
      50: invokespecial #66                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      53: athrow
      54: dload_0
      55: invokestatic  #137                // Method invGamma1pm1:(D)D
      58: invokestatic  #138                // Method org/apache/commons/math3/util/FastMath.log1p:(D)D
      61: dneg
      62: dreturn

  public static double gamma(double);
    Code:
       0: dload_0
       1: dload_0
       2: invokestatic  #139                // Method org/apache/commons/math3/util/FastMath.rint:(D)D
       5: dcmpl
       6: ifne          19
       9: dload_0
      10: dconst_0
      11: dcmpg
      12: ifgt          19
      15: ldc2_w        #3                  // double NaNd
      18: dreturn
      19: dload_0
      20: invokestatic  #25                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      23: dstore        4
      25: dload         4
      27: ldc2_w        #140                // double 20.0d
      30: dcmpg
      31: ifgt          134
      34: dload_0
      35: dconst_1
      36: dcmpl
      37: iflt          87
      40: dconst_1
      41: dstore        6
      43: dload_0
      44: dstore        8
      46: dload         8
      48: ldc2_w        #9                  // double 2.5d
      51: dcmpl
      52: ifle          71
      55: dload         8
      57: dconst_1
      58: dsub
      59: dstore        8
      61: dload         6
      63: dload         8
      65: dmul
      66: dstore        6
      68: goto          46
      71: dload         6
      73: dconst_1
      74: dload         8
      76: dconst_1
      77: dsub
      78: invokestatic  #137                // Method invGamma1pm1:(D)D
      81: dadd
      82: ddiv
      83: dstore_2
      84: goto          209
      87: dload_0
      88: dstore        6
      90: dload_0
      91: dstore        8
      93: dload         8
      95: ldc2_w        #60                 // double -0.5d
      98: dcmpg
      99: ifge          118
     102: dload         8
     104: dconst_1
     105: dadd
     106: dstore        8
     108: dload         6
     110: dload         8
     112: dmul
     113: dstore        6
     115: goto          93
     118: dconst_1
     119: dload         6
     121: dconst_1
     122: dload         8
     124: invokestatic  #137                // Method invGamma1pm1:(D)D
     127: dadd
     128: dmul
     129: ddiv
     130: dstore_2
     131: goto          209
     134: dload         4
     136: ldc2_w        #17                 // double 4.7421875d
     139: dadd
     140: ldc2_w        #5                  // double 0.5d
     143: dadd
     144: dstore        6
     146: ldc2_w        #142                // double 2.5066282746310007d
     149: dload         4
     151: ddiv
     152: dload         6
     154: dload         4
     156: ldc2_w        #5                  // double 0.5d
     159: dadd
     160: invokestatic  #144                // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
     163: dmul
     164: dload         6
     166: dneg
     167: invokestatic  #33                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
     170: dmul
     171: dload         4
     173: invokestatic  #16                 // Method lanczos:(D)D
     176: dmul
     177: dstore        8
     179: dload_0
     180: dconst_0
     181: dcmpl
     182: ifle          191
     185: dload         8
     187: dstore_2
     188: goto          209
     191: ldc2_w        #145                // double -3.141592653589793d
     194: dload_0
     195: ldc2_w        #147                // double 3.141592653589793d
     198: dload_0
     199: dmul
     200: invokestatic  #149                // Method org/apache/commons/math3/util/FastMath.sin:(D)D
     203: dmul
     204: dload         8
     206: dmul
     207: ddiv
     208: dstore_2
     209: dload_2
     210: dreturn

  static {};
    Code:
       0: bipush        15
       2: newarray       double
       4: dup
       5: iconst_0
       6: ldc2_w        #150                // double 0.9999999999999971d
       9: dastore
      10: dup
      11: iconst_1
      12: ldc2_w        #152                // double 57.15623566586292d
      15: dastore
      16: dup
      17: iconst_2
      18: ldc2_w        #154                // double -59.59796035547549d
      21: dastore
      22: dup
      23: iconst_3
      24: ldc2_w        #156                // double 14.136097974741746d
      27: dastore
      28: dup
      29: iconst_4
      30: ldc2_w        #158                // double -0.4919138160976202d
      33: dastore
      34: dup
      35: iconst_5
      36: ldc2_w        #160                // double 3.399464998481189E-5d
      39: dastore
      40: dup
      41: bipush        6
      43: ldc2_w        #162                // double 4.652362892704858E-5d
      46: dastore
      47: dup
      48: bipush        7
      50: ldc2_w        #164                // double -9.837447530487956E-5d
      53: dastore
      54: dup
      55: bipush        8
      57: ldc2_w        #166                // double 1.580887032249125E-4d
      60: dastore
      61: dup
      62: bipush        9
      64: ldc2_w        #168                // double -2.1026444172410488E-4d
      67: dastore
      68: dup
      69: bipush        10
      71: ldc2_w        #170                // double 2.1743961811521265E-4d
      74: dastore
      75: dup
      76: bipush        11
      78: ldc2_w        #172                // double -1.643181065367639E-4d
      81: dastore
      82: dup
      83: bipush        12
      85: ldc2_w        #174                // double 8.441822398385275E-5d
      88: dastore
      89: dup
      90: bipush        13
      92: ldc2_w        #176                // double -2.6190838401581408E-5d
      95: dastore
      96: dup
      97: bipush        14
      99: ldc2_w        #178                // double 3.6899182659531625E-6d
     102: dastore
     103: putstatic     #59                 // Field LANCZOS:[D
     106: ldc2_w        #5                  // double 0.5d
     109: ldc2_w        #180                // double 6.283185307179586d
     112: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.log:(D)D
     115: dmul
     116: putstatic     #19                 // Field HALF_LOG_2_PI:D
     119: return
}
