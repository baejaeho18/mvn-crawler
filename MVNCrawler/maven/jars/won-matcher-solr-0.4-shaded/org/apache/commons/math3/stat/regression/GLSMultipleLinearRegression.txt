Compiled from "GLSMultipleLinearRegression.java"
public class org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression extends org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression {
  private org.apache.commons.math3.linear.RealMatrix Omega;

  private org.apache.commons.math3.linear.RealMatrix OmegaInverse;

  public org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression."<init>":()V
       4: return

  public void newSampleData(double[], double[][], double[][]);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #2                  // Method validateSampleData:([[D[D)V
       6: aload_0
       7: aload_1
       8: invokevirtual #3                  // Method newYSampleData:([D)V
      11: aload_0
      12: aload_2
      13: invokevirtual #4                  // Method newXSampleData:([[D)V
      16: aload_0
      17: aload_2
      18: aload_3
      19: invokevirtual #5                  // Method validateCovarianceData:([[D[[D)V
      22: aload_0
      23: aload_3
      24: invokevirtual #6                  // Method newCovarianceData:([[D)V
      27: return

  protected void newCovarianceData(double[][]);
    Code:
       0: aload_0
       1: new           #7                  // class org/apache/commons/math3/linear/Array2DRowRealMatrix
       4: dup
       5: aload_1
       6: invokespecial #8                  // Method org/apache/commons/math3/linear/Array2DRowRealMatrix."<init>":([[D)V
       9: putfield      #9                  // Field Omega:Lorg/apache/commons/math3/linear/RealMatrix;
      12: aload_0
      13: aconst_null
      14: putfield      #10                 // Field OmegaInverse:Lorg/apache/commons/math3/linear/RealMatrix;
      17: return

  protected org.apache.commons.math3.linear.RealMatrix getOmegaInverse();
    Code:
       0: aload_0
       1: getfield      #10                 // Field OmegaInverse:Lorg/apache/commons/math3/linear/RealMatrix;
       4: ifnonnull     30
       7: aload_0
       8: new           #11                 // class org/apache/commons/math3/linear/LUDecomposition
      11: dup
      12: aload_0
      13: getfield      #9                  // Field Omega:Lorg/apache/commons/math3/linear/RealMatrix;
      16: invokespecial #12                 // Method org/apache/commons/math3/linear/LUDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;)V
      19: invokevirtual #13                 // Method org/apache/commons/math3/linear/LUDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
      22: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.getInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
      27: putfield      #10                 // Field OmegaInverse:Lorg/apache/commons/math3/linear/RealMatrix;
      30: aload_0
      31: getfield      #10                 // Field OmegaInverse:Lorg/apache/commons/math3/linear/RealMatrix;
      34: areturn

  protected org.apache.commons.math3.linear.RealVector calculateBeta();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOmegaInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
       4: astore_1
       5: aload_0
       6: invokevirtual #16                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
       9: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.transpose:()Lorg/apache/commons/math3/linear/RealMatrix;
      14: astore_2
      15: aload_2
      16: aload_1
      17: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      22: aload_0
      23: invokevirtual #16                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      26: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      31: astore_3
      32: new           #11                 // class org/apache/commons/math3/linear/LUDecomposition
      35: dup
      36: aload_3
      37: invokespecial #12                 // Method org/apache/commons/math3/linear/LUDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;)V
      40: invokevirtual #13                 // Method org/apache/commons/math3/linear/LUDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
      43: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.getInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
      48: astore        4
      50: aload         4
      52: aload_2
      53: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      58: aload_1
      59: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      64: aload_0
      65: invokevirtual #19                 // Method getY:()Lorg/apache/commons/math3/linear/RealVector;
      68: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.operate:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      73: areturn

  protected org.apache.commons.math3.linear.RealMatrix calculateBetaVariance();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOmegaInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
       4: astore_1
       5: aload_0
       6: invokevirtual #16                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
       9: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.transpose:()Lorg/apache/commons/math3/linear/RealMatrix;
      14: aload_1
      15: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      20: aload_0
      21: invokevirtual #16                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      24: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      29: astore_2
      30: new           #11                 // class org/apache/commons/math3/linear/LUDecomposition
      33: dup
      34: aload_2
      35: invokespecial #12                 // Method org/apache/commons/math3/linear/LUDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;)V
      38: invokevirtual #13                 // Method org/apache/commons/math3/linear/LUDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
      41: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.getInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
      46: areturn

  protected double calculateErrorVariance();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method calculateResiduals:()Lorg/apache/commons/math3/linear/RealVector;
       4: astore_1
       5: aload_1
       6: aload_0
       7: invokevirtual #15                 // Method getOmegaInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
      10: aload_1
      11: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.operate:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      16: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector.dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      19: dstore_2
      20: dload_2
      21: aload_0
      22: invokevirtual #16                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      25: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      30: aload_0
      31: invokevirtual #16                 // Method getX:()Lorg/apache/commons/math3/linear/RealMatrix;
      34: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      39: isub
      40: i2d
      41: ddiv
      42: dreturn
}
