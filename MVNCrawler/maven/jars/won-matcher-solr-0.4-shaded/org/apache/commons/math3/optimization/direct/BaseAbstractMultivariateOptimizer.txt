Compiled from "BaseAbstractMultivariateOptimizer.java"
public abstract class org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer<FUNC extends org.apache.commons.math3.analysis.MultivariateFunction> implements org.apache.commons.math3.optimization.BaseMultivariateOptimizer<FUNC> {
  protected final org.apache.commons.math3.util.Incrementor evaluations;

  private org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> checker;

  private org.apache.commons.math3.optimization.GoalType goal;

  private double[] start;

  private double[] lowerBound;

  private double[] upperBound;

  private org.apache.commons.math3.analysis.MultivariateFunction function;

  protected org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/math3/optimization/SimpleValueChecker
       4: dup
       5: invokespecial #2                  // Method org/apache/commons/math3/optimization/SimpleValueChecker."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
      11: return

  protected org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class org/apache/commons/math3/util/Incrementor
       8: dup
       9: invokespecial #6                  // Method org/apache/commons/math3/util/Incrementor."<init>":()V
      12: putfield      #7                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field checker:Lorg/apache/commons/math3/optimization/ConvergenceChecker;
      20: return

  public int getMaxEvaluations();
    Code:
       0: aload_0
       1: getfield      #7                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
       4: invokevirtual #9                  // Method org/apache/commons/math3/util/Incrementor.getMaximalCount:()I
       7: ireturn

  public int getEvaluations();
    Code:
       0: aload_0
       1: getfield      #7                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
       4: invokevirtual #10                 // Method org/apache/commons/math3/util/Incrementor.getCount:()I
       7: ireturn

  public org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> getConvergenceChecker();
    Code:
       0: aload_0
       1: getfield      #8                  // Field checker:Lorg/apache/commons/math3/optimization/ConvergenceChecker;
       4: areturn

  protected double computeObjectiveValue(double[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
       4: invokevirtual #11                 // Method org/apache/commons/math3/util/Incrementor.incrementCount:()V
       7: goto          23
      10: astore_2
      11: new           #13                 // class org/apache/commons/math3/exception/TooManyEvaluationsException
      14: dup
      15: aload_2
      16: invokevirtual #14                 // Method org/apache/commons/math3/exception/MaxCountExceededException.getMax:()Ljava/lang/Number;
      19: invokespecial #15                 // Method org/apache/commons/math3/exception/TooManyEvaluationsException."<init>":(Ljava/lang/Number;)V
      22: athrow
      23: aload_0
      24: getfield      #16                 // Field function:Lorg/apache/commons/math3/analysis/MultivariateFunction;
      27: aload_1
      28: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/math3/analysis/MultivariateFunction.value:([D)D
      33: dreturn
    Exception table:
       from    to  target type
           0     7    10   Class org/apache/commons/math3/exception/MaxCountExceededException

  public org.apache.commons.math3.optimization.PointValuePair optimize(int, FUNC, org.apache.commons.math3.optimization.GoalType, double[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: anewarray     #18                 // class org/apache/commons/math3/optimization/OptimizationData
       8: dup
       9: iconst_0
      10: new           #19                 // class org/apache/commons/math3/optimization/InitialGuess
      13: dup
      14: aload         4
      16: invokespecial #20                 // Method org/apache/commons/math3/optimization/InitialGuess."<init>":([D)V
      19: aastore
      20: invokevirtual #21                 // Method optimizeInternal:(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;
      23: areturn

  public org.apache.commons.math3.optimization.PointValuePair optimize(int, FUNC, org.apache.commons.math3.optimization.GoalType, org.apache.commons.math3.optimization.OptimizationData...);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #21                 // Method optimizeInternal:(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;
       9: areturn

  protected org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int, FUNC, org.apache.commons.math3.optimization.GoalType, double[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: anewarray     #18                 // class org/apache/commons/math3/optimization/OptimizationData
       8: dup
       9: iconst_0
      10: new           #19                 // class org/apache/commons/math3/optimization/InitialGuess
      13: dup
      14: aload         4
      16: invokespecial #20                 // Method org/apache/commons/math3/optimization/InitialGuess."<init>":([D)V
      19: aastore
      20: invokevirtual #21                 // Method optimizeInternal:(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;
      23: areturn

  protected org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int, FUNC, org.apache.commons.math3.optimization.GoalType, org.apache.commons.math3.optimization.OptimizationData...) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
       4: iload_1
       5: invokevirtual #22                 // Method org/apache/commons/math3/util/Incrementor.setMaximalCount:(I)V
       8: aload_0
       9: getfield      #7                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
      12: invokevirtual #23                 // Method org/apache/commons/math3/util/Incrementor.resetCount:()V
      15: aload_0
      16: aload_2
      17: putfield      #16                 // Field function:Lorg/apache/commons/math3/analysis/MultivariateFunction;
      20: aload_0
      21: aload_3
      22: putfield      #24                 // Field goal:Lorg/apache/commons/math3/optimization/GoalType;
      25: aload_0
      26: aload         4
      28: invokespecial #25                 // Method parseOptimizationData:([Lorg/apache/commons/math3/optimization/OptimizationData;)V
      31: aload_0
      32: invokespecial #26                 // Method checkParameters:()V
      35: aload_0
      36: invokevirtual #27                 // Method doOptimize:()Lorg/apache/commons/math3/optimization/PointValuePair;
      39: areturn

  private void parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     85
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: instanceof    #19                 // class org/apache/commons/math3/optimization/InitialGuess
      25: ifeq          43
      28: aload_0
      29: aload         5
      31: checkcast     #19                 // class org/apache/commons/math3/optimization/InitialGuess
      34: invokevirtual #28                 // Method org/apache/commons/math3/optimization/InitialGuess.getInitialGuess:()[D
      37: putfield      #29                 // Field start:[D
      40: goto          79
      43: aload         5
      45: instanceof    #30                 // class org/apache/commons/math3/optimization/SimpleBounds
      48: ifeq          79
      51: aload         5
      53: checkcast     #30                 // class org/apache/commons/math3/optimization/SimpleBounds
      56: astore        6
      58: aload_0
      59: aload         6
      61: invokevirtual #31                 // Method org/apache/commons/math3/optimization/SimpleBounds.getLower:()[D
      64: putfield      #32                 // Field lowerBound:[D
      67: aload_0
      68: aload         6
      70: invokevirtual #33                 // Method org/apache/commons/math3/optimization/SimpleBounds.getUpper:()[D
      73: putfield      #34                 // Field upperBound:[D
      76: goto          79
      79: iinc          4, 1
      82: goto          8
      85: return

  public org.apache.commons.math3.optimization.GoalType getGoalType();
    Code:
       0: aload_0
       1: getfield      #24                 // Field goal:Lorg/apache/commons/math3/optimization/GoalType;
       4: areturn

  public double[] getStartPoint();
    Code:
       0: aload_0
       1: getfield      #29                 // Field start:[D
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #29                 // Field start:[D
      15: invokevirtual #35                 // Method "[D".clone:()Ljava/lang/Object;
      18: checkcast     #36                 // class "[D"
      21: areturn

  public double[] getLowerBound();
    Code:
       0: aload_0
       1: getfield      #32                 // Field lowerBound:[D
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #32                 // Field lowerBound:[D
      15: invokevirtual #37                 // Method "[D".clone:()Ljava/lang/Object;
      18: checkcast     #36                 // class "[D"
      21: areturn

  public double[] getUpperBound();
    Code:
       0: aload_0
       1: getfield      #34                 // Field upperBound:[D
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #34                 // Field upperBound:[D
      15: invokevirtual #38                 // Method "[D".clone:()Ljava/lang/Object;
      18: checkcast     #36                 // class "[D"
      21: areturn

  protected abstract org.apache.commons.math3.optimization.PointValuePair doOptimize();

  private void checkParameters();
    Code:
       0: aload_0
       1: getfield      #29                 // Field start:[D
       4: ifnull        251
       7: aload_0
       8: getfield      #29                 // Field start:[D
      11: arraylength
      12: istore_1
      13: aload_0
      14: getfield      #32                 // Field lowerBound:[D
      17: ifnull        96
      20: aload_0
      21: getfield      #32                 // Field lowerBound:[D
      24: arraylength
      25: iload_1
      26: if_icmpeq     43
      29: new           #39                 // class org/apache/commons/math3/exception/DimensionMismatchException
      32: dup
      33: aload_0
      34: getfield      #32                 // Field lowerBound:[D
      37: arraylength
      38: iload_1
      39: invokespecial #40                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      42: athrow
      43: iconst_0
      44: istore_2
      45: iload_2
      46: iload_1
      47: if_icmpge     96
      50: aload_0
      51: getfield      #29                 // Field start:[D
      54: iload_2
      55: daload
      56: dstore_3
      57: aload_0
      58: getfield      #32                 // Field lowerBound:[D
      61: iload_2
      62: daload
      63: dstore        5
      65: dload_3
      66: dload         5
      68: dcmpg
      69: ifge          90
      72: new           #41                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      75: dup
      76: dload_3
      77: invokestatic  #42                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      80: dload         5
      82: invokestatic  #42                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      85: iconst_1
      86: invokespecial #43                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      89: athrow
      90: iinc          2, 1
      93: goto          45
      96: aload_0
      97: getfield      #34                 // Field upperBound:[D
     100: ifnull        179
     103: aload_0
     104: getfield      #34                 // Field upperBound:[D
     107: arraylength
     108: iload_1
     109: if_icmpeq     126
     112: new           #39                 // class org/apache/commons/math3/exception/DimensionMismatchException
     115: dup
     116: aload_0
     117: getfield      #34                 // Field upperBound:[D
     120: arraylength
     121: iload_1
     122: invokespecial #40                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
     125: athrow
     126: iconst_0
     127: istore_2
     128: iload_2
     129: iload_1
     130: if_icmpge     179
     133: aload_0
     134: getfield      #29                 // Field start:[D
     137: iload_2
     138: daload
     139: dstore_3
     140: aload_0
     141: getfield      #34                 // Field upperBound:[D
     144: iload_2
     145: daload
     146: dstore        5
     148: dload_3
     149: dload         5
     151: dcmpl
     152: ifle          173
     155: new           #44                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
     158: dup
     159: dload_3
     160: invokestatic  #42                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     163: dload         5
     165: invokestatic  #42                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     168: iconst_1
     169: invokespecial #45                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
     172: athrow
     173: iinc          2, 1
     176: goto          128
     179: aload_0
     180: getfield      #32                 // Field lowerBound:[D
     183: ifnonnull     215
     186: aload_0
     187: iload_1
     188: newarray       double
     190: putfield      #32                 // Field lowerBound:[D
     193: iconst_0
     194: istore_2
     195: iload_2
     196: iload_1
     197: if_icmpge     215
     200: aload_0
     201: getfield      #32                 // Field lowerBound:[D
     204: iload_2
     205: ldc2_w        #46                 // double -Infinityd
     208: dastore
     209: iinc          2, 1
     212: goto          195
     215: aload_0
     216: getfield      #34                 // Field upperBound:[D
     219: ifnonnull     251
     222: aload_0
     223: iload_1
     224: newarray       double
     226: putfield      #34                 // Field upperBound:[D
     229: iconst_0
     230: istore_2
     231: iload_2
     232: iload_1
     233: if_icmpge     251
     236: aload_0
     237: getfield      #34                 // Field upperBound:[D
     240: iload_2
     241: ldc2_w        #48                 // double Infinityd
     244: dastore
     245: iinc          2, 1
     248: goto          231
     251: return
}
