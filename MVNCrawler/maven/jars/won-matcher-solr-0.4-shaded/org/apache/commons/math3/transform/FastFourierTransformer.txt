Compiled from "FastFourierTransformer.java"
public class org.apache.commons.math3.transform.FastFourierTransformer implements java.io.Serializable {
  static final long serialVersionUID;

  private static final double[] W_SUB_N_R;

  private static final double[] W_SUB_N_I;

  private final org.apache.commons.math3.transform.DftNormalization normalization;

  static final boolean $assertionsDisabled;

  public org.apache.commons.math3.transform.FastFourierTransformer(org.apache.commons.math3.transform.DftNormalization);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field normalization:Lorg/apache/commons/math3/transform/DftNormalization;
       9: return

  private static void bitReversalShuffle2(double[], double[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: getstatic     #3                  // Field $assertionsDisabled:Z
       6: ifne          23
       9: aload_1
      10: arraylength
      11: iload_2
      12: if_icmpeq     23
      15: new           #4                  // class java/lang/AssertionError
      18: dup
      19: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: iload_2
      24: iconst_1
      25: ishr
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iconst_0
      31: istore        5
      33: iload         5
      35: iload_2
      36: if_icmpge     130
      39: iload         5
      41: iload         4
      43: if_icmpge     86
      46: aload_0
      47: iload         5
      49: daload
      50: dstore        6
      52: aload_0
      53: iload         5
      55: aload_0
      56: iload         4
      58: daload
      59: dastore
      60: aload_0
      61: iload         4
      63: dload         6
      65: dastore
      66: aload_1
      67: iload         5
      69: daload
      70: dstore        6
      72: aload_1
      73: iload         5
      75: aload_1
      76: iload         4
      78: daload
      79: dastore
      80: aload_1
      81: iload         4
      83: dload         6
      85: dastore
      86: iload_3
      87: istore        6
      89: iload         6
      91: iload         4
      93: if_icmpgt     117
      96: iload         6
      98: ifle          117
     101: iload         4
     103: iload         6
     105: isub
     106: istore        4
     108: iload         6
     110: iconst_1
     111: ishr
     112: istore        6
     114: goto          89
     117: iload         4
     119: iload         6
     121: iadd
     122: istore        4
     124: iinc          5, 1
     127: goto          33
     130: return

  private static void normalizeTransformedData(double[][], org.apache.commons.math3.transform.DftNormalization, org.apache.commons.math3.transform.TransformType);
    Code:
       0: aload_0
       1: iconst_0
       2: aaload
       3: astore_3
       4: aload_0
       5: iconst_1
       6: aaload
       7: astore        4
       9: aload_3
      10: arraylength
      11: istore        5
      13: getstatic     #3                  // Field $assertionsDisabled:Z
      16: ifne          35
      19: aload         4
      21: arraylength
      22: iload         5
      24: if_icmpeq     35
      27: new           #4                  // class java/lang/AssertionError
      30: dup
      31: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: getstatic     #6                  // Field org/apache/commons/math3/transform/FastFourierTransformer$1.$SwitchMap$org$apache$commons$math3$transform$DftNormalization:[I
      38: aload_1
      39: invokevirtual #7                  // Method org/apache/commons/math3/transform/DftNormalization.ordinal:()I
      42: iaload
      43: lookupswitch  { // 2
                     1: 68
                     2: 120
               default: 168
          }
      68: aload_2
      69: getstatic     #8                  // Field org/apache/commons/math3/transform/TransformType.INVERSE:Lorg/apache/commons/math3/transform/TransformType;
      72: if_acmpne     176
      75: dconst_1
      76: iload         5
      78: i2d
      79: ddiv
      80: dstore        6
      82: iconst_0
      83: istore        8
      85: iload         8
      87: iload         5
      89: if_icmpge     117
      92: aload_3
      93: iload         8
      95: dup2
      96: daload
      97: dload         6
      99: dmul
     100: dastore
     101: aload         4
     103: iload         8
     105: dup2
     106: daload
     107: dload         6
     109: dmul
     110: dastore
     111: iinc          8, 1
     114: goto          85
     117: goto          176
     120: dconst_1
     121: iload         5
     123: i2d
     124: invokestatic  #9                  // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     127: ddiv
     128: dstore        6
     130: iconst_0
     131: istore        8
     133: iload         8
     135: iload         5
     137: if_icmpge     165
     140: aload_3
     141: iload         8
     143: dup2
     144: daload
     145: dload         6
     147: dmul
     148: dastore
     149: aload         4
     151: iload         8
     153: dup2
     154: daload
     155: dload         6
     157: dmul
     158: dastore
     159: iinc          8, 1
     162: goto          133
     165: goto          176
     168: new           #10                 // class org/apache/commons/math3/exception/MathIllegalStateException
     171: dup
     172: invokespecial #11                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":()V
     175: athrow
     176: return

  public static void transformInPlace(double[][], org.apache.commons.math3.transform.DftNormalization, org.apache.commons.math3.transform.TransformType);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_2
       3: if_icmpeq     17
       6: new           #12                 // class org/apache/commons/math3/exception/DimensionMismatchException
       9: dup
      10: aload_0
      11: arraylength
      12: iconst_2
      13: invokespecial #13                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      16: athrow
      17: aload_0
      18: iconst_0
      19: aaload
      20: astore_3
      21: aload_0
      22: iconst_1
      23: aaload
      24: astore        4
      26: aload_3
      27: arraylength
      28: aload         4
      30: arraylength
      31: if_icmpeq     47
      34: new           #12                 // class org/apache/commons/math3/exception/DimensionMismatchException
      37: dup
      38: aload         4
      40: arraylength
      41: aload_3
      42: arraylength
      43: invokespecial #13                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      46: athrow
      47: aload_3
      48: arraylength
      49: istore        5
      51: iload         5
      53: i2l
      54: invokestatic  #14                 // Method org/apache/commons/math3/util/ArithmeticUtils.isPowerOfTwo:(J)Z
      57: ifne          83
      60: new           #15                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
      63: dup
      64: getstatic     #16                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      67: iconst_1
      68: anewarray     #17                 // class java/lang/Object
      71: dup
      72: iconst_0
      73: iload         5
      75: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: aastore
      79: invokespecial #19                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      82: athrow
      83: iload         5
      85: iconst_1
      86: if_icmpne     90
      89: return
      90: iload         5
      92: iconst_2
      93: if_icmpne     159
      96: aload_3
      97: iconst_0
      98: daload
      99: dstore        6
     101: aload         4
     103: iconst_0
     104: daload
     105: dstore        8
     107: aload_3
     108: iconst_1
     109: daload
     110: dstore        10
     112: aload         4
     114: iconst_1
     115: daload
     116: dstore        12
     118: aload_3
     119: iconst_0
     120: dload         6
     122: dload         10
     124: dadd
     125: dastore
     126: aload         4
     128: iconst_0
     129: dload         8
     131: dload         12
     133: dadd
     134: dastore
     135: aload_3
     136: iconst_1
     137: dload         6
     139: dload         10
     141: dsub
     142: dastore
     143: aload         4
     145: iconst_1
     146: dload         8
     148: dload         12
     150: dsub
     151: dastore
     152: aload_0
     153: aload_1
     154: aload_2
     155: invokestatic  #20                 // Method normalizeTransformedData:([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V
     158: return
     159: aload_3
     160: aload         4
     162: invokestatic  #21                 // Method bitReversalShuffle2:([D[D)V
     165: aload_2
     166: getstatic     #8                  // Field org/apache/commons/math3/transform/TransformType.INVERSE:Lorg/apache/commons/math3/transform/TransformType;
     169: if_acmpne     385
     172: iconst_0
     173: istore        6
     175: iload         6
     177: iload         5
     179: if_icmpge     382
     182: iload         6
     184: iconst_1
     185: iadd
     186: istore        7
     188: iload         6
     190: iconst_2
     191: iadd
     192: istore        8
     194: iload         6
     196: iconst_3
     197: iadd
     198: istore        9
     200: aload_3
     201: iload         6
     203: daload
     204: dstore        10
     206: aload         4
     208: iload         6
     210: daload
     211: dstore        12
     213: aload_3
     214: iload         8
     216: daload
     217: dstore        14
     219: aload         4
     221: iload         8
     223: daload
     224: dstore        16
     226: aload_3
     227: iload         7
     229: daload
     230: dstore        18
     232: aload         4
     234: iload         7
     236: daload
     237: dstore        20
     239: aload_3
     240: iload         9
     242: daload
     243: dstore        22
     245: aload         4
     247: iload         9
     249: daload
     250: dstore        24
     252: aload_3
     253: iload         6
     255: dload         10
     257: dload         14
     259: dadd
     260: dload         18
     262: dadd
     263: dload         22
     265: dadd
     266: dastore
     267: aload         4
     269: iload         6
     271: dload         12
     273: dload         16
     275: dadd
     276: dload         20
     278: dadd
     279: dload         24
     281: dadd
     282: dastore
     283: aload_3
     284: iload         7
     286: dload         10
     288: dload         18
     290: dsub
     291: dload         24
     293: dload         16
     295: dsub
     296: dadd
     297: dastore
     298: aload         4
     300: iload         7
     302: dload         12
     304: dload         20
     306: dsub
     307: dload         14
     309: dload         22
     311: dsub
     312: dadd
     313: dastore
     314: aload_3
     315: iload         8
     317: dload         10
     319: dload         14
     321: dsub
     322: dload         18
     324: dadd
     325: dload         22
     327: dsub
     328: dastore
     329: aload         4
     331: iload         8
     333: dload         12
     335: dload         16
     337: dsub
     338: dload         20
     340: dadd
     341: dload         24
     343: dsub
     344: dastore
     345: aload_3
     346: iload         9
     348: dload         10
     350: dload         18
     352: dsub
     353: dload         16
     355: dload         24
     357: dsub
     358: dadd
     359: dastore
     360: aload         4
     362: iload         9
     364: dload         12
     366: dload         20
     368: dsub
     369: dload         22
     371: dload         14
     373: dsub
     374: dadd
     375: dastore
     376: iinc          6, 4
     379: goto          175
     382: goto          595
     385: iconst_0
     386: istore        6
     388: iload         6
     390: iload         5
     392: if_icmpge     595
     395: iload         6
     397: iconst_1
     398: iadd
     399: istore        7
     401: iload         6
     403: iconst_2
     404: iadd
     405: istore        8
     407: iload         6
     409: iconst_3
     410: iadd
     411: istore        9
     413: aload_3
     414: iload         6
     416: daload
     417: dstore        10
     419: aload         4
     421: iload         6
     423: daload
     424: dstore        12
     426: aload_3
     427: iload         8
     429: daload
     430: dstore        14
     432: aload         4
     434: iload         8
     436: daload
     437: dstore        16
     439: aload_3
     440: iload         7
     442: daload
     443: dstore        18
     445: aload         4
     447: iload         7
     449: daload
     450: dstore        20
     452: aload_3
     453: iload         9
     455: daload
     456: dstore        22
     458: aload         4
     460: iload         9
     462: daload
     463: dstore        24
     465: aload_3
     466: iload         6
     468: dload         10
     470: dload         14
     472: dadd
     473: dload         18
     475: dadd
     476: dload         22
     478: dadd
     479: dastore
     480: aload         4
     482: iload         6
     484: dload         12
     486: dload         16
     488: dadd
     489: dload         20
     491: dadd
     492: dload         24
     494: dadd
     495: dastore
     496: aload_3
     497: iload         7
     499: dload         10
     501: dload         18
     503: dsub
     504: dload         16
     506: dload         24
     508: dsub
     509: dadd
     510: dastore
     511: aload         4
     513: iload         7
     515: dload         12
     517: dload         20
     519: dsub
     520: dload         22
     522: dload         14
     524: dsub
     525: dadd
     526: dastore
     527: aload_3
     528: iload         8
     530: dload         10
     532: dload         14
     534: dsub
     535: dload         18
     537: dadd
     538: dload         22
     540: dsub
     541: dastore
     542: aload         4
     544: iload         8
     546: dload         12
     548: dload         16
     550: dsub
     551: dload         20
     553: dadd
     554: dload         24
     556: dsub
     557: dastore
     558: aload_3
     559: iload         9
     561: dload         10
     563: dload         18
     565: dsub
     566: dload         24
     568: dload         16
     570: dsub
     571: dadd
     572: dastore
     573: aload         4
     575: iload         9
     577: dload         12
     579: dload         20
     581: dsub
     582: dload         14
     584: dload         22
     586: dsub
     587: dadd
     588: dastore
     589: iinc          6, 4
     592: goto          388
     595: iconst_4
     596: istore        6
     598: iconst_2
     599: istore        7
     601: iload         6
     603: iload         5
     605: if_icmpge     866
     608: iload         6
     610: iconst_1
     611: ishl
     612: istore        8
     614: iload         7
     616: iconst_1
     617: iadd
     618: istore        9
     620: getstatic     #22                 // Field W_SUB_N_R:[D
     623: iload         9
     625: daload
     626: dstore        10
     628: getstatic     #23                 // Field W_SUB_N_I:[D
     631: iload         9
     633: daload
     634: dstore        12
     636: aload_2
     637: getstatic     #8                  // Field org/apache/commons/math3/transform/TransformType.INVERSE:Lorg/apache/commons/math3/transform/TransformType;
     640: if_acmpne     648
     643: dload         12
     645: dneg
     646: dstore        12
     648: iconst_0
     649: istore        14
     651: iload         14
     653: iload         5
     655: if_icmpge     855
     658: iload         14
     660: iload         6
     662: iadd
     663: istore        15
     665: dconst_1
     666: dstore        16
     668: dconst_0
     669: dstore        18
     671: iconst_0
     672: istore        20
     674: iload         20
     676: iload         6
     678: if_icmpge     845
     681: aload_3
     682: iload         14
     684: iload         20
     686: iadd
     687: daload
     688: dstore        21
     690: aload         4
     692: iload         14
     694: iload         20
     696: iadd
     697: daload
     698: dstore        23
     700: aload_3
     701: iload         15
     703: iload         20
     705: iadd
     706: daload
     707: dstore        25
     709: aload         4
     711: iload         15
     713: iload         20
     715: iadd
     716: daload
     717: dstore        27
     719: aload_3
     720: iload         14
     722: iload         20
     724: iadd
     725: dload         21
     727: dload         16
     729: dload         25
     731: dmul
     732: dadd
     733: dload         18
     735: dload         27
     737: dmul
     738: dsub
     739: dastore
     740: aload         4
     742: iload         14
     744: iload         20
     746: iadd
     747: dload         23
     749: dload         16
     751: dload         27
     753: dmul
     754: dadd
     755: dload         18
     757: dload         25
     759: dmul
     760: dadd
     761: dastore
     762: aload_3
     763: iload         15
     765: iload         20
     767: iadd
     768: dload         21
     770: dload         16
     772: dload         25
     774: dmul
     775: dload         18
     777: dload         27
     779: dmul
     780: dsub
     781: dsub
     782: dastore
     783: aload         4
     785: iload         15
     787: iload         20
     789: iadd
     790: dload         23
     792: dload         16
     794: dload         27
     796: dmul
     797: dload         18
     799: dload         25
     801: dmul
     802: dadd
     803: dsub
     804: dastore
     805: dload         16
     807: dload         10
     809: dmul
     810: dload         18
     812: dload         12
     814: dmul
     815: dsub
     816: dstore        29
     818: dload         16
     820: dload         12
     822: dmul
     823: dload         18
     825: dload         10
     827: dmul
     828: dadd
     829: dstore        31
     831: dload         29
     833: dstore        16
     835: dload         31
     837: dstore        18
     839: iinc          20, 1
     842: goto          674
     845: iload         14
     847: iload         8
     849: iadd
     850: istore        14
     852: goto          651
     855: iload         8
     857: istore        6
     859: iload         9
     861: istore        7
     863: goto          601
     866: aload_0
     867: aload_1
     868: aload_2
     869: invokestatic  #20                 // Method normalizeTransformedData:([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V
     872: return

  public org.apache.commons.math3.complex.Complex[] transform(double[], org.apache.commons.math3.transform.TransformType);
    Code:
       0: iconst_2
       1: anewarray     #24                 // class "[D"
       4: dup
       5: iconst_0
       6: aload_1
       7: aload_1
       8: arraylength
       9: invokestatic  #25                 // Method org/apache/commons/math3/util/MathArrays.copyOf:([DI)[D
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: arraylength
      17: newarray       double
      19: aastore
      20: astore_3
      21: aload_3
      22: aload_0
      23: getfield      #2                  // Field normalization:Lorg/apache/commons/math3/transform/DftNormalization;
      26: aload_2
      27: invokestatic  #26                 // Method transformInPlace:([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V
      30: aload_3
      31: invokestatic  #27                 // Method org/apache/commons/math3/transform/TransformUtils.createComplexArray:([[D)[Lorg/apache/commons/math3/complex/Complex;
      34: areturn

  public org.apache.commons.math3.complex.Complex[] transform(org.apache.commons.math3.analysis.UnivariateFunction, double, double, int, org.apache.commons.math3.transform.TransformType);
    Code:
       0: aload_1
       1: dload_2
       2: dload         4
       4: iload         6
       6: invokestatic  #28                 // Method org/apache/commons/math3/analysis/FunctionUtils.sample:(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDI)[D
       9: astore        8
      11: aload_0
      12: aload         8
      14: aload         7
      16: invokevirtual #29                 // Method transform:([DLorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
      19: areturn

  public org.apache.commons.math3.complex.Complex[] transform(org.apache.commons.math3.complex.Complex[], org.apache.commons.math3.transform.TransformType);
    Code:
       0: aload_1
       1: invokestatic  #30                 // Method org/apache/commons/math3/transform/TransformUtils.createRealImaginaryArray:([Lorg/apache/commons/math3/complex/Complex;)[[D
       4: astore_3
       5: aload_3
       6: aload_0
       7: getfield      #2                  // Field normalization:Lorg/apache/commons/math3/transform/DftNormalization;
      10: aload_2
      11: invokestatic  #26                 // Method transformInPlace:([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V
      14: aload_3
      15: invokestatic  #27                 // Method org/apache/commons/math3/transform/TransformUtils.createComplexArray:([[D)[Lorg/apache/commons/math3/complex/Complex;
      18: areturn

  public java.lang.Object mdfft(java.lang.Object, org.apache.commons.math3.transform.TransformType);
    Code:
       0: new           #31                 // class org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix
       3: dup
       4: aload_1
       5: invokespecial #32                 // Method org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix."<init>":(Ljava/lang/Object;)V
       8: invokevirtual #33                 // Method org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix.clone:()Ljava/lang/Object;
      11: checkcast     #31                 // class org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix
      14: astore_3
      15: aload_3
      16: invokevirtual #34                 // Method org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix.getDimensionSizes:()[I
      19: astore        4
      21: iconst_0
      22: istore        5
      24: iload         5
      26: aload         4
      28: arraylength
      29: if_icmpge     49
      32: aload_0
      33: aload_3
      34: aload_2
      35: iload         5
      37: iconst_0
      38: newarray       int
      40: invokespecial #35                 // Method mdfft:(Lorg/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix;Lorg/apache/commons/math3/transform/TransformType;I[I)V
      43: iinc          5, 1
      46: goto          24
      49: aload_3
      50: invokevirtual #36                 // Method org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix.getArray:()Ljava/lang/Object;
      53: areturn

  private void mdfft(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix, org.apache.commons.math3.transform.TransformType, int, int[]);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix.getDimensionSizes:()[I
       4: astore        5
       6: aload         4
       8: arraylength
       9: aload         5
      11: arraylength
      12: if_icmpne     107
      15: aload         5
      17: iload_3
      18: iaload
      19: anewarray     #37                 // class org/apache/commons/math3/complex/Complex
      22: astore        6
      24: iconst_0
      25: istore        7
      27: iload         7
      29: aload         5
      31: iload_3
      32: iaload
      33: if_icmpge     59
      36: aload         4
      38: iload_3
      39: iload         7
      41: iastore
      42: aload         6
      44: iload         7
      46: aload_1
      47: aload         4
      49: invokevirtual #38                 // Method org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix.get:([I)Lorg/apache/commons/math3/complex/Complex;
      52: aastore
      53: iinc          7, 1
      56: goto          27
      59: aload_0
      60: aload         6
      62: aload_2
      63: invokevirtual #39                 // Method transform:([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
      66: astore        6
      68: iconst_0
      69: istore        7
      71: iload         7
      73: aload         5
      75: iload_3
      76: iaload
      77: if_icmpge     104
      80: aload         4
      82: iload_3
      83: iload         7
      85: iastore
      86: aload_1
      87: aload         6
      89: iload         7
      91: aaload
      92: aload         4
      94: invokevirtual #40                 // Method org/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix.set:(Lorg/apache/commons/math3/complex/Complex;[I)Lorg/apache/commons/math3/complex/Complex;
      97: pop
      98: iinc          7, 1
     101: goto          71
     104: goto          189
     107: aload         4
     109: arraylength
     110: iconst_1
     111: iadd
     112: newarray       int
     114: astore        6
     116: aload         4
     118: iconst_0
     119: aload         6
     121: iconst_0
     122: aload         4
     124: arraylength
     125: invokestatic  #41                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     128: aload         4
     130: arraylength
     131: iload_3
     132: if_icmpne     152
     135: aload         6
     137: iload_3
     138: iconst_0
     139: iastore
     140: aload_0
     141: aload_1
     142: aload_2
     143: iload_3
     144: aload         6
     146: invokespecial #35                 // Method mdfft:(Lorg/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix;Lorg/apache/commons/math3/transform/TransformType;I[I)V
     149: goto          189
     152: iconst_0
     153: istore        7
     155: iload         7
     157: aload         5
     159: aload         4
     161: arraylength
     162: iaload
     163: if_icmpge     189
     166: aload         6
     168: aload         4
     170: arraylength
     171: iload         7
     173: iastore
     174: aload_0
     175: aload_1
     176: aload_2
     177: iload_3
     178: aload         6
     180: invokespecial #35                 // Method mdfft:(Lorg/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix;Lorg/apache/commons/math3/transform/TransformType;I[I)V
     183: iinc          7, 1
     186: goto          155
     189: return

  static {};
    Code:
       0: ldc_w         #42                 // class org/apache/commons/math3/transform/FastFourierTransformer
       3: invokevirtual #43                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #3                  // Field $assertionsDisabled:Z
      17: bipush        63
      19: newarray       double
      21: dup
      22: iconst_0
      23: dconst_1
      24: dastore
      25: dup
      26: iconst_1
      27: ldc2_w        #44                 // double -1.0d
      30: dastore
      31: dup
      32: iconst_2
      33: ldc2_w        #46                 // double 6.123233995736766E-17d
      36: dastore
      37: dup
      38: iconst_3
      39: ldc2_w        #48                 // double 0.7071067811865476d
      42: dastore
      43: dup
      44: iconst_4
      45: ldc2_w        #50                 // double 0.9238795325112867d
      48: dastore
      49: dup
      50: iconst_5
      51: ldc2_w        #52                 // double 0.9807852804032304d
      54: dastore
      55: dup
      56: bipush        6
      58: ldc2_w        #54                 // double 0.9951847266721969d
      61: dastore
      62: dup
      63: bipush        7
      65: ldc2_w        #56                 // double 0.9987954562051724d
      68: dastore
      69: dup
      70: bipush        8
      72: ldc2_w        #58                 // double 0.9996988186962042d
      75: dastore
      76: dup
      77: bipush        9
      79: ldc2_w        #60                 // double 0.9999247018391445d
      82: dastore
      83: dup
      84: bipush        10
      86: ldc2_w        #62                 // double 0.9999811752826011d
      89: dastore
      90: dup
      91: bipush        11
      93: ldc2_w        #64                 // double 0.9999952938095762d
      96: dastore
      97: dup
      98: bipush        12
     100: ldc2_w        #66                 // double 0.9999988234517019d
     103: dastore
     104: dup
     105: bipush        13
     107: ldc2_w        #68                 // double 0.9999997058628822d
     110: dastore
     111: dup
     112: bipush        14
     114: ldc2_w        #70                 // double 0.9999999264657179d
     117: dastore
     118: dup
     119: bipush        15
     121: ldc2_w        #72                 // double 0.9999999816164293d
     124: dastore
     125: dup
     126: bipush        16
     128: ldc2_w        #74                 // double 0.9999999954041073d
     131: dastore
     132: dup
     133: bipush        17
     135: ldc2_w        #76                 // double 0.9999999988510269d
     138: dastore
     139: dup
     140: bipush        18
     142: ldc2_w        #78                 // double 0.9999999997127567d
     145: dastore
     146: dup
     147: bipush        19
     149: ldc2_w        #80                 // double 0.9999999999281892d
     152: dastore
     153: dup
     154: bipush        20
     156: ldc2_w        #82                 // double 0.9999999999820472d
     159: dastore
     160: dup
     161: bipush        21
     163: ldc2_w        #84                 // double 0.9999999999955118d
     166: dastore
     167: dup
     168: bipush        22
     170: ldc2_w        #86                 // double 0.999999999998878d
     173: dastore
     174: dup
     175: bipush        23
     177: ldc2_w        #88                 // double 0.9999999999997194d
     180: dastore
     181: dup
     182: bipush        24
     184: ldc2_w        #90                 // double 0.9999999999999298d
     187: dastore
     188: dup
     189: bipush        25
     191: ldc2_w        #92                 // double 0.9999999999999825d
     194: dastore
     195: dup
     196: bipush        26
     198: ldc2_w        #94                 // double 0.9999999999999957d
     201: dastore
     202: dup
     203: bipush        27
     205: ldc2_w        #96                 // double 0.9999999999999989d
     208: dastore
     209: dup
     210: bipush        28
     212: ldc2_w        #98                 // double 0.9999999999999998d
     215: dastore
     216: dup
     217: bipush        29
     219: ldc2_w        #100                // double 0.9999999999999999d
     222: dastore
     223: dup
     224: bipush        30
     226: dconst_1
     227: dastore
     228: dup
     229: bipush        31
     231: dconst_1
     232: dastore
     233: dup
     234: bipush        32
     236: dconst_1
     237: dastore
     238: dup
     239: bipush        33
     241: dconst_1
     242: dastore
     243: dup
     244: bipush        34
     246: dconst_1
     247: dastore
     248: dup
     249: bipush        35
     251: dconst_1
     252: dastore
     253: dup
     254: bipush        36
     256: dconst_1
     257: dastore
     258: dup
     259: bipush        37
     261: dconst_1
     262: dastore
     263: dup
     264: bipush        38
     266: dconst_1
     267: dastore
     268: dup
     269: bipush        39
     271: dconst_1
     272: dastore
     273: dup
     274: bipush        40
     276: dconst_1
     277: dastore
     278: dup
     279: bipush        41
     281: dconst_1
     282: dastore
     283: dup
     284: bipush        42
     286: dconst_1
     287: dastore
     288: dup
     289: bipush        43
     291: dconst_1
     292: dastore
     293: dup
     294: bipush        44
     296: dconst_1
     297: dastore
     298: dup
     299: bipush        45
     301: dconst_1
     302: dastore
     303: dup
     304: bipush        46
     306: dconst_1
     307: dastore
     308: dup
     309: bipush        47
     311: dconst_1
     312: dastore
     313: dup
     314: bipush        48
     316: dconst_1
     317: dastore
     318: dup
     319: bipush        49
     321: dconst_1
     322: dastore
     323: dup
     324: bipush        50
     326: dconst_1
     327: dastore
     328: dup
     329: bipush        51
     331: dconst_1
     332: dastore
     333: dup
     334: bipush        52
     336: dconst_1
     337: dastore
     338: dup
     339: bipush        53
     341: dconst_1
     342: dastore
     343: dup
     344: bipush        54
     346: dconst_1
     347: dastore
     348: dup
     349: bipush        55
     351: dconst_1
     352: dastore
     353: dup
     354: bipush        56
     356: dconst_1
     357: dastore
     358: dup
     359: bipush        57
     361: dconst_1
     362: dastore
     363: dup
     364: bipush        58
     366: dconst_1
     367: dastore
     368: dup
     369: bipush        59
     371: dconst_1
     372: dastore
     373: dup
     374: bipush        60
     376: dconst_1
     377: dastore
     378: dup
     379: bipush        61
     381: dconst_1
     382: dastore
     383: dup
     384: bipush        62
     386: dconst_1
     387: dastore
     388: putstatic     #22                 // Field W_SUB_N_R:[D
     391: bipush        63
     393: newarray       double
     395: dup
     396: iconst_0
     397: ldc2_w        #102                // double 2.4492935982947064E-16d
     400: dastore
     401: dup
     402: iconst_1
     403: ldc2_w        #104                // double -1.2246467991473532E-16d
     406: dastore
     407: dup
     408: iconst_2
     409: ldc2_w        #44                 // double -1.0d
     412: dastore
     413: dup
     414: iconst_3
     415: ldc2_w        #106                // double -0.7071067811865475d
     418: dastore
     419: dup
     420: iconst_4
     421: ldc2_w        #108                // double -0.3826834323650898d
     424: dastore
     425: dup
     426: iconst_5
     427: ldc2_w        #110                // double -0.19509032201612825d
     430: dastore
     431: dup
     432: bipush        6
     434: ldc2_w        #112                // double -0.0980171403295606d
     437: dastore
     438: dup
     439: bipush        7
     441: ldc2_w        #114                // double -0.049067674327418015d
     444: dastore
     445: dup
     446: bipush        8
     448: ldc2_w        #116                // double -0.024541228522912288d
     451: dastore
     452: dup
     453: bipush        9
     455: ldc2_w        #118                // double -0.012271538285719925d
     458: dastore
     459: dup
     460: bipush        10
     462: ldc2_w        #120                // double -0.006135884649154475d
     465: dastore
     466: dup
     467: bipush        11
     469: ldc2_w        #122                // double -0.003067956762965976d
     472: dastore
     473: dup
     474: bipush        12
     476: ldc2_w        #124                // double -0.0015339801862847655d
     479: dastore
     480: dup
     481: bipush        13
     483: ldc2_w        #126                // double -7.669903187427045E-4d
     486: dastore
     487: dup
     488: bipush        14
     490: ldc2_w        #128                // double -3.8349518757139556E-4d
     493: dastore
     494: dup
     495: bipush        15
     497: ldc2_w        #130                // double -1.917475973107033E-4d
     500: dastore
     501: dup
     502: bipush        16
     504: ldc2_w        #132                // double -9.587379909597734E-5d
     507: dastore
     508: dup
     509: bipush        17
     511: ldc2_w        #134                // double -4.793689960306688E-5d
     514: dastore
     515: dup
     516: bipush        18
     518: ldc2_w        #136                // double -2.396844980841822E-5d
     521: dastore
     522: dup
     523: bipush        19
     525: ldc2_w        #138                // double -1.1984224905069705E-5d
     528: dastore
     529: dup
     530: bipush        20
     532: ldc2_w        #140                // double -5.9921124526424275E-6d
     535: dastore
     536: dup
     537: bipush        21
     539: ldc2_w        #142                // double -2.996056226334661E-6d
     542: dastore
     543: dup
     544: bipush        22
     546: ldc2_w        #144                // double -1.4980281131690111E-6d
     549: dastore
     550: dup
     551: bipush        23
     553: ldc2_w        #146                // double -7.490140565847157E-7d
     556: dastore
     557: dup
     558: bipush        24
     560: ldc2_w        #148                // double -3.7450702829238413E-7d
     563: dastore
     564: dup
     565: bipush        25
     567: ldc2_w        #150                // double -1.8725351414619535E-7d
     570: dastore
     571: dup
     572: bipush        26
     574: ldc2_w        #152                // double -9.362675707309808E-8d
     577: dastore
     578: dup
     579: bipush        27
     581: ldc2_w        #154                // double -4.681337853654909E-8d
     584: dastore
     585: dup
     586: bipush        28
     588: ldc2_w        #156                // double -2.340668926827455E-8d
     591: dastore
     592: dup
     593: bipush        29
     595: ldc2_w        #158                // double -1.1703344634137277E-8d
     598: dastore
     599: dup
     600: bipush        30
     602: ldc2_w        #160                // double -5.8516723170686385E-9d
     605: dastore
     606: dup
     607: bipush        31
     609: ldc2_w        #162                // double -2.9258361585343192E-9d
     612: dastore
     613: dup
     614: bipush        32
     616: ldc2_w        #164                // double -1.4629180792671596E-9d
     619: dastore
     620: dup
     621: bipush        33
     623: ldc2_w        #166                // double -7.314590396335798E-10d
     626: dastore
     627: dup
     628: bipush        34
     630: ldc2_w        #168                // double -3.657295198167899E-10d
     633: dastore
     634: dup
     635: bipush        35
     637: ldc2_w        #170                // double -1.8286475990839495E-10d
     640: dastore
     641: dup
     642: bipush        36
     644: ldc2_w        #172                // double -9.143237995419748E-11d
     647: dastore
     648: dup
     649: bipush        37
     651: ldc2_w        #174                // double -4.571618997709874E-11d
     654: dastore
     655: dup
     656: bipush        38
     658: ldc2_w        #176                // double -2.285809498854937E-11d
     661: dastore
     662: dup
     663: bipush        39
     665: ldc2_w        #178                // double -1.1429047494274685E-11d
     668: dastore
     669: dup
     670: bipush        40
     672: ldc2_w        #180                // double -5.714523747137342E-12d
     675: dastore
     676: dup
     677: bipush        41
     679: ldc2_w        #182                // double -2.857261873568671E-12d
     682: dastore
     683: dup
     684: bipush        42
     686: ldc2_w        #184                // double -1.4286309367843356E-12d
     689: dastore
     690: dup
     691: bipush        43
     693: ldc2_w        #186                // double -7.143154683921678E-13d
     696: dastore
     697: dup
     698: bipush        44
     700: ldc2_w        #188                // double -3.571577341960839E-13d
     703: dastore
     704: dup
     705: bipush        45
     707: ldc2_w        #190                // double -1.7857886709804195E-13d
     710: dastore
     711: dup
     712: bipush        46
     714: ldc2_w        #192                // double -8.928943354902097E-14d
     717: dastore
     718: dup
     719: bipush        47
     721: ldc2_w        #194                // double -4.4644716774510487E-14d
     724: dastore
     725: dup
     726: bipush        48
     728: ldc2_w        #196                // double -2.2322358387255243E-14d
     731: dastore
     732: dup
     733: bipush        49
     735: ldc2_w        #198                // double -1.1161179193627622E-14d
     738: dastore
     739: dup
     740: bipush        50
     742: ldc2_w        #200                // double -5.580589596813811E-15d
     745: dastore
     746: dup
     747: bipush        51
     749: ldc2_w        #202                // double -2.7902947984069054E-15d
     752: dastore
     753: dup
     754: bipush        52
     756: ldc2_w        #204                // double -1.3951473992034527E-15d
     759: dastore
     760: dup
     761: bipush        53
     763: ldc2_w        #206                // double -6.975736996017264E-16d
     766: dastore
     767: dup
     768: bipush        54
     770: ldc2_w        #208                // double -3.487868498008632E-16d
     773: dastore
     774: dup
     775: bipush        55
     777: ldc2_w        #210                // double -1.743934249004316E-16d
     780: dastore
     781: dup
     782: bipush        56
     784: ldc2_w        #212                // double -8.71967124502158E-17d
     787: dastore
     788: dup
     789: bipush        57
     791: ldc2_w        #214                // double -4.35983562251079E-17d
     794: dastore
     795: dup
     796: bipush        58
     798: ldc2_w        #216                // double -2.179917811255395E-17d
     801: dastore
     802: dup
     803: bipush        59
     805: ldc2_w        #218                // double -1.0899589056276974E-17d
     808: dastore
     809: dup
     810: bipush        60
     812: ldc2_w        #220                // double -5.449794528138487E-18d
     815: dastore
     816: dup
     817: bipush        61
     819: ldc2_w        #222                // double -2.7248972640692436E-18d
     822: dastore
     823: dup
     824: bipush        62
     826: ldc2_w        #224                // double -1.3624486320346218E-18d
     829: dastore
     830: putstatic     #23                 // Field W_SUB_N_I:[D
     833: return
}
