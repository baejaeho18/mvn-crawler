Compiled from "HarmonicCurveFitter.java"
public class org.apache.commons.math3.fitting.HarmonicCurveFitter extends org.apache.commons.math3.fitting.AbstractCurveFitter {
  private static final org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric FUNCTION;

  private final double[] initialGuess;

  private final int maxIter;

  private org.apache.commons.math3.fitting.HarmonicCurveFitter(double[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/fitting/AbstractCurveFitter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field initialGuess:[D
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field maxIter:I
      14: return

  public static org.apache.commons.math3.fitting.HarmonicCurveFitter create();
    Code:
       0: new           #4                  // class org/apache/commons/math3/fitting/HarmonicCurveFitter
       3: dup
       4: aconst_null
       5: ldc           #5                  // int 2147483647
       7: invokespecial #6                  // Method "<init>":([DI)V
      10: areturn

  public org.apache.commons.math3.fitting.HarmonicCurveFitter withStartPoint(double[]);
    Code:
       0: new           #4                  // class org/apache/commons/math3/fitting/HarmonicCurveFitter
       3: dup
       4: aload_1
       5: invokevirtual #7                  // Method "[D".clone:()Ljava/lang/Object;
       8: checkcast     #8                  // class "[D"
      11: aload_0
      12: getfield      #3                  // Field maxIter:I
      15: invokespecial #6                  // Method "<init>":([DI)V
      18: areturn

  public org.apache.commons.math3.fitting.HarmonicCurveFitter withMaxIterations(int);
    Code:
       0: new           #4                  // class org/apache/commons/math3/fitting/HarmonicCurveFitter
       3: dup
       4: aload_0
       5: getfield      #2                  // Field initialGuess:[D
       8: iload_1
       9: invokespecial #6                  // Method "<init>":([DI)V
      12: areturn

  protected org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem getProblem(java.util.Collection<org.apache.commons.math3.fitting.WeightedObservedPoint>);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.size:()I
       6: istore_2
       7: iload_2
       8: newarray       double
      10: astore_3
      11: iload_2
      12: newarray       double
      14: astore        4
      16: iconst_0
      17: istore        5
      19: aload_1
      20: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore        6
      27: aload         6
      29: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          74
      37: aload         6
      39: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #13                 // class org/apache/commons/math3/fitting/WeightedObservedPoint
      47: astore        7
      49: aload_3
      50: iload         5
      52: aload         7
      54: invokevirtual #14                 // Method org/apache/commons/math3/fitting/WeightedObservedPoint.getY:()D
      57: dastore
      58: aload         4
      60: iload         5
      62: aload         7
      64: invokevirtual #15                 // Method org/apache/commons/math3/fitting/WeightedObservedPoint.getWeight:()D
      67: dastore
      68: iinc          5, 1
      71: goto          27
      74: new           #16                 // class org/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction
      77: dup
      78: getstatic     #17                 // Field FUNCTION:Lorg/apache/commons/math3/analysis/function/HarmonicOscillator$Parametric;
      81: aload_1
      82: invokespecial #18                 // Method org/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction."<init>":(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;Ljava/util/Collection;)V
      85: astore        6
      87: aload_0
      88: getfield      #2                  // Field initialGuess:[D
      91: ifnull        101
      94: aload_0
      95: getfield      #2                  // Field initialGuess:[D
      98: goto          112
     101: new           #19                 // class org/apache/commons/math3/fitting/HarmonicCurveFitter$ParameterGuesser
     104: dup
     105: aload_1
     106: invokespecial #20                 // Method org/apache/commons/math3/fitting/HarmonicCurveFitter$ParameterGuesser."<init>":(Ljava/util/Collection;)V
     109: invokevirtual #21                 // Method org/apache/commons/math3/fitting/HarmonicCurveFitter$ParameterGuesser.guess:()[D
     112: astore        7
     114: new           #22                 // class org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder
     117: dup
     118: invokespecial #23                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder."<init>":()V
     121: ldc           #5                  // int 2147483647
     123: invokevirtual #24                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.maxEvaluations:(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
     126: aload_0
     127: getfield      #3                  // Field maxIter:I
     130: invokevirtual #25                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.maxIterations:(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
     133: aload         7
     135: invokevirtual #26                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.start:([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
     138: aload_3
     139: invokevirtual #27                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.target:([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
     142: new           #28                 // class org/apache/commons/math3/linear/DiagonalMatrix
     145: dup
     146: aload         4
     148: invokespecial #29                 // Method org/apache/commons/math3/linear/DiagonalMatrix."<init>":([D)V
     151: invokevirtual #30                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.weight:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
     154: aload         6
     156: invokevirtual #31                 // Method org/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction.getModelFunction:()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
     159: aload         6
     161: invokevirtual #32                 // Method org/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian:()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;
     164: invokevirtual #33                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.model:(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
     167: invokevirtual #34                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.build:()Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
     170: areturn

  static {};
    Code:
       0: new           #35                 // class org/apache/commons/math3/analysis/function/HarmonicOscillator$Parametric
       3: dup
       4: invokespecial #36                 // Method org/apache/commons/math3/analysis/function/HarmonicOscillator$Parametric."<init>":()V
       7: putstatic     #17                 // Field FUNCTION:Lorg/apache/commons/math3/analysis/function/HarmonicOscillator$Parametric;
      10: return
}
