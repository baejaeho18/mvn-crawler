Compiled from "FastMathCalc.java"
class org.apache.commons.math3.util.FastMathCalc {
  private static final long HEX_40000000;

  private static final double[] FACT;

  private static final double[][] LN_SPLIT_COEF;

  private static final java.lang.String TABLE_START_DECL;

  private static final java.lang.String TABLE_END_DECL;

  private org.apache.commons.math3.util.FastMathCalc();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static void buildSinCosTables(double[], double[], double[], double[], int, double[], double[]);
    Code:
       0: iconst_2
       1: newarray       double
       3: astore        7
       5: iconst_0
       6: istore        8
       8: iload         8
      10: bipush        7
      12: if_icmpge     78
      15: iload         8
      17: i2d
      18: ldc2_w        #2                  // double 8.0d
      21: ddiv
      22: dstore        9
      24: dload         9
      26: aload         7
      28: invokestatic  #4                  // Method slowSin:(D[D)D
      31: pop2
      32: aload_0
      33: iload         8
      35: aload         7
      37: iconst_0
      38: daload
      39: dastore
      40: aload_1
      41: iload         8
      43: aload         7
      45: iconst_1
      46: daload
      47: dastore
      48: dload         9
      50: aload         7
      52: invokestatic  #5                  // Method slowCos:(D[D)D
      55: pop2
      56: aload_2
      57: iload         8
      59: aload         7
      61: iconst_0
      62: daload
      63: dastore
      64: aload_3
      65: iload         8
      67: aload         7
      69: iconst_1
      70: daload
      71: dastore
      72: iinc          8, 1
      75: goto          8
      78: bipush        7
      80: istore        8
      82: iload         8
      84: iload         4
      86: if_icmpge     456
      89: iconst_2
      90: newarray       double
      92: astore        9
      94: iconst_2
      95: newarray       double
      97: astore        10
      99: iconst_2
     100: newarray       double
     102: astore        11
     104: iconst_2
     105: newarray       double
     107: astore        12
     109: iconst_2
     110: newarray       double
     112: astore        13
     114: iload         8
     116: iconst_1
     117: iand
     118: ifne          258
     121: aload         9
     123: iconst_0
     124: aload_0
     125: iload         8
     127: iconst_2
     128: idiv
     129: daload
     130: dastore
     131: aload         9
     133: iconst_1
     134: aload_1
     135: iload         8
     137: iconst_2
     138: idiv
     139: daload
     140: dastore
     141: aload         10
     143: iconst_0
     144: aload_2
     145: iload         8
     147: iconst_2
     148: idiv
     149: daload
     150: dastore
     151: aload         10
     153: iconst_1
     154: aload_3
     155: iload         8
     157: iconst_2
     158: idiv
     159: daload
     160: dastore
     161: aload         9
     163: aload         10
     165: aload         7
     167: invokestatic  #6                  // Method splitMult:([D[D[D)V
     170: aload_0
     171: iload         8
     173: aload         7
     175: iconst_0
     176: daload
     177: ldc2_w        #7                  // double 2.0d
     180: dmul
     181: dastore
     182: aload_1
     183: iload         8
     185: aload         7
     187: iconst_1
     188: daload
     189: ldc2_w        #7                  // double 2.0d
     192: dmul
     193: dastore
     194: aload         10
     196: aload         10
     198: aload         11
     200: invokestatic  #6                  // Method splitMult:([D[D[D)V
     203: aload         9
     205: aload         9
     207: aload         13
     209: invokestatic  #6                  // Method splitMult:([D[D[D)V
     212: aload         13
     214: iconst_0
     215: aload         13
     217: iconst_0
     218: daload
     219: dneg
     220: dastore
     221: aload         13
     223: iconst_1
     224: aload         13
     226: iconst_1
     227: daload
     228: dneg
     229: dastore
     230: aload         11
     232: aload         13
     234: aload         7
     236: invokestatic  #9                  // Method splitAdd:([D[D[D)V
     239: aload_2
     240: iload         8
     242: aload         7
     244: iconst_0
     245: daload
     246: dastore
     247: aload_3
     248: iload         8
     250: aload         7
     252: iconst_1
     253: daload
     254: dastore
     255: goto          450
     258: aload         9
     260: iconst_0
     261: aload_0
     262: iload         8
     264: iconst_2
     265: idiv
     266: daload
     267: dastore
     268: aload         9
     270: iconst_1
     271: aload_1
     272: iload         8
     274: iconst_2
     275: idiv
     276: daload
     277: dastore
     278: aload         10
     280: iconst_0
     281: aload_2
     282: iload         8
     284: iconst_2
     285: idiv
     286: daload
     287: dastore
     288: aload         10
     290: iconst_1
     291: aload_3
     292: iload         8
     294: iconst_2
     295: idiv
     296: daload
     297: dastore
     298: aload         11
     300: iconst_0
     301: aload_0
     302: iload         8
     304: iconst_2
     305: idiv
     306: iconst_1
     307: iadd
     308: daload
     309: dastore
     310: aload         11
     312: iconst_1
     313: aload_1
     314: iload         8
     316: iconst_2
     317: idiv
     318: iconst_1
     319: iadd
     320: daload
     321: dastore
     322: aload         12
     324: iconst_0
     325: aload_2
     326: iload         8
     328: iconst_2
     329: idiv
     330: iconst_1
     331: iadd
     332: daload
     333: dastore
     334: aload         12
     336: iconst_1
     337: aload_3
     338: iload         8
     340: iconst_2
     341: idiv
     342: iconst_1
     343: iadd
     344: daload
     345: dastore
     346: aload         9
     348: aload         12
     350: aload         13
     352: invokestatic  #6                  // Method splitMult:([D[D[D)V
     355: aload         10
     357: aload         11
     359: aload         7
     361: invokestatic  #6                  // Method splitMult:([D[D[D)V
     364: aload         7
     366: aload         13
     368: aload         7
     370: invokestatic  #9                  // Method splitAdd:([D[D[D)V
     373: aload_0
     374: iload         8
     376: aload         7
     378: iconst_0
     379: daload
     380: dastore
     381: aload_1
     382: iload         8
     384: aload         7
     386: iconst_1
     387: daload
     388: dastore
     389: aload         10
     391: aload         12
     393: aload         7
     395: invokestatic  #6                  // Method splitMult:([D[D[D)V
     398: aload         9
     400: aload         11
     402: aload         13
     404: invokestatic  #6                  // Method splitMult:([D[D[D)V
     407: aload         13
     409: iconst_0
     410: aload         13
     412: iconst_0
     413: daload
     414: dneg
     415: dastore
     416: aload         13
     418: iconst_1
     419: aload         13
     421: iconst_1
     422: daload
     423: dneg
     424: dastore
     425: aload         7
     427: aload         13
     429: aload         7
     431: invokestatic  #9                  // Method splitAdd:([D[D[D)V
     434: aload_2
     435: iload         8
     437: aload         7
     439: iconst_0
     440: daload
     441: dastore
     442: aload_3
     443: iload         8
     445: aload         7
     447: iconst_1
     448: daload
     449: dastore
     450: iinc          8, 1
     453: goto          82
     456: iconst_0
     457: istore        8
     459: iload         8
     461: iload         4
     463: if_icmpge     553
     466: iconst_2
     467: newarray       double
     469: astore        9
     471: iconst_2
     472: newarray       double
     474: astore        10
     476: iconst_2
     477: newarray       double
     479: astore        11
     481: aload         11
     483: iconst_0
     484: aload_2
     485: iload         8
     487: daload
     488: dastore
     489: aload         11
     491: iconst_1
     492: aload_3
     493: iload         8
     495: daload
     496: dastore
     497: aload         11
     499: aload         10
     501: invokestatic  #10                 // Method splitReciprocal:([D[D)V
     504: aload         9
     506: iconst_0
     507: aload_0
     508: iload         8
     510: daload
     511: dastore
     512: aload         9
     514: iconst_1
     515: aload_1
     516: iload         8
     518: daload
     519: dastore
     520: aload         9
     522: aload         10
     524: aload         11
     526: invokestatic  #6                  // Method splitMult:([D[D[D)V
     529: aload         5
     531: iload         8
     533: aload         11
     535: iconst_0
     536: daload
     537: dastore
     538: aload         6
     540: iload         8
     542: aload         11
     544: iconst_1
     545: daload
     546: dastore
     547: iinc          8, 1
     550: goto          459
     553: return

  static double slowCos(double, double[]);
    Code:
       0: iconst_2
       1: newarray       double
       3: astore_3
       4: iconst_2
       5: newarray       double
       7: astore        4
       9: iconst_2
      10: newarray       double
      12: astore        5
      14: iconst_2
      15: newarray       double
      17: astore        6
      19: dload_0
      20: aload_3
      21: invokestatic  #11                 // Method split:(D[D)V
      24: aload         4
      26: iconst_0
      27: aload         4
      29: iconst_1
      30: dconst_0
      31: dup2_x2
      32: dastore
      33: dastore
      34: getstatic     #12                 // Field FACT:[D
      37: arraylength
      38: iconst_1
      39: isub
      40: istore        7
      42: iload         7
      44: iflt          155
      47: aload_3
      48: aload         4
      50: aload         6
      52: invokestatic  #6                  // Method splitMult:([D[D[D)V
      55: aload         4
      57: iconst_0
      58: aload         6
      60: iconst_0
      61: daload
      62: dastore
      63: aload         4
      65: iconst_1
      66: aload         6
      68: iconst_1
      69: daload
      70: dastore
      71: iload         7
      73: iconst_1
      74: iand
      75: ifeq          81
      78: goto          149
      81: getstatic     #12                 // Field FACT:[D
      84: iload         7
      86: daload
      87: aload         6
      89: invokestatic  #11                 // Method split:(D[D)V
      92: aload         6
      94: aload         5
      96: invokestatic  #10                 // Method splitReciprocal:([D[D)V
      99: iload         7
     101: iconst_2
     102: iand
     103: ifeq          124
     106: aload         5
     108: iconst_0
     109: aload         5
     111: iconst_0
     112: daload
     113: dneg
     114: dastore
     115: aload         5
     117: iconst_1
     118: aload         5
     120: iconst_1
     121: daload
     122: dneg
     123: dastore
     124: aload         4
     126: aload         5
     128: aload         6
     130: invokestatic  #9                  // Method splitAdd:([D[D[D)V
     133: aload         4
     135: iconst_0
     136: aload         6
     138: iconst_0
     139: daload
     140: dastore
     141: aload         4
     143: iconst_1
     144: aload         6
     146: iconst_1
     147: daload
     148: dastore
     149: iinc          7, -1
     152: goto          42
     155: aload_2
     156: ifnull        173
     159: aload_2
     160: iconst_0
     161: aload         4
     163: iconst_0
     164: daload
     165: dastore
     166: aload_2
     167: iconst_1
     168: aload         4
     170: iconst_1
     171: daload
     172: dastore
     173: aload         4
     175: iconst_0
     176: daload
     177: aload         4
     179: iconst_1
     180: daload
     181: dadd
     182: dreturn

  static double slowSin(double, double[]);
    Code:
       0: iconst_2
       1: newarray       double
       3: astore_3
       4: iconst_2
       5: newarray       double
       7: astore        4
       9: iconst_2
      10: newarray       double
      12: astore        5
      14: iconst_2
      15: newarray       double
      17: astore        6
      19: dload_0
      20: aload_3
      21: invokestatic  #11                 // Method split:(D[D)V
      24: aload         4
      26: iconst_0
      27: aload         4
      29: iconst_1
      30: dconst_0
      31: dup2_x2
      32: dastore
      33: dastore
      34: getstatic     #12                 // Field FACT:[D
      37: arraylength
      38: iconst_1
      39: isub
      40: istore        7
      42: iload         7
      44: iflt          155
      47: aload_3
      48: aload         4
      50: aload         6
      52: invokestatic  #6                  // Method splitMult:([D[D[D)V
      55: aload         4
      57: iconst_0
      58: aload         6
      60: iconst_0
      61: daload
      62: dastore
      63: aload         4
      65: iconst_1
      66: aload         6
      68: iconst_1
      69: daload
      70: dastore
      71: iload         7
      73: iconst_1
      74: iand
      75: ifne          81
      78: goto          149
      81: getstatic     #12                 // Field FACT:[D
      84: iload         7
      86: daload
      87: aload         6
      89: invokestatic  #11                 // Method split:(D[D)V
      92: aload         6
      94: aload         5
      96: invokestatic  #10                 // Method splitReciprocal:([D[D)V
      99: iload         7
     101: iconst_2
     102: iand
     103: ifeq          124
     106: aload         5
     108: iconst_0
     109: aload         5
     111: iconst_0
     112: daload
     113: dneg
     114: dastore
     115: aload         5
     117: iconst_1
     118: aload         5
     120: iconst_1
     121: daload
     122: dneg
     123: dastore
     124: aload         4
     126: aload         5
     128: aload         6
     130: invokestatic  #9                  // Method splitAdd:([D[D[D)V
     133: aload         4
     135: iconst_0
     136: aload         6
     138: iconst_0
     139: daload
     140: dastore
     141: aload         4
     143: iconst_1
     144: aload         6
     146: iconst_1
     147: daload
     148: dastore
     149: iinc          7, -1
     152: goto          42
     155: aload_2
     156: ifnull        173
     159: aload_2
     160: iconst_0
     161: aload         4
     163: iconst_0
     164: daload
     165: dastore
     166: aload_2
     167: iconst_1
     168: aload         4
     170: iconst_1
     171: daload
     172: dastore
     173: aload         4
     175: iconst_0
     176: daload
     177: aload         4
     179: iconst_1
     180: daload
     181: dadd
     182: dreturn

  static double slowexp(double, double[]);
    Code:
       0: iconst_2
       1: newarray       double
       3: astore_3
       4: iconst_2
       5: newarray       double
       7: astore        4
       9: iconst_2
      10: newarray       double
      12: astore        5
      14: iconst_2
      15: newarray       double
      17: astore        6
      19: dload_0
      20: aload_3
      21: invokestatic  #11                 // Method split:(D[D)V
      24: aload         4
      26: iconst_0
      27: aload         4
      29: iconst_1
      30: dconst_0
      31: dup2_x2
      32: dastore
      33: dastore
      34: getstatic     #12                 // Field FACT:[D
      37: arraylength
      38: iconst_1
      39: isub
      40: istore        7
      42: iload         7
      44: iflt          120
      47: aload_3
      48: aload         4
      50: aload         6
      52: invokestatic  #6                  // Method splitMult:([D[D[D)V
      55: aload         4
      57: iconst_0
      58: aload         6
      60: iconst_0
      61: daload
      62: dastore
      63: aload         4
      65: iconst_1
      66: aload         6
      68: iconst_1
      69: daload
      70: dastore
      71: getstatic     #12                 // Field FACT:[D
      74: iload         7
      76: daload
      77: aload         6
      79: invokestatic  #11                 // Method split:(D[D)V
      82: aload         6
      84: aload         5
      86: invokestatic  #10                 // Method splitReciprocal:([D[D)V
      89: aload         4
      91: aload         5
      93: aload         6
      95: invokestatic  #9                  // Method splitAdd:([D[D[D)V
      98: aload         4
     100: iconst_0
     101: aload         6
     103: iconst_0
     104: daload
     105: dastore
     106: aload         4
     108: iconst_1
     109: aload         6
     111: iconst_1
     112: daload
     113: dastore
     114: iinc          7, -1
     117: goto          42
     120: aload_2
     121: ifnull        138
     124: aload_2
     125: iconst_0
     126: aload         4
     128: iconst_0
     129: daload
     130: dastore
     131: aload_2
     132: iconst_1
     133: aload         4
     135: iconst_1
     136: daload
     137: dastore
     138: aload         4
     140: iconst_0
     141: daload
     142: aload         4
     144: iconst_1
     145: daload
     146: dadd
     147: dreturn

  private static void split(double, double[]);
    Code:
       0: dload_0
       1: ldc2_w        #13                 // double 8.0E298d
       4: dcmpg
       5: ifge          41
       8: dload_0
       9: ldc2_w        #15                 // double -8.0E298d
      12: dcmpl
      13: ifle          41
      16: dload_0
      17: ldc2_w        #17                 // double 1.073741824E9d
      20: dmul
      21: dstore_3
      22: aload_2
      23: iconst_0
      24: dload_0
      25: dload_3
      26: dadd
      27: dload_3
      28: dsub
      29: dastore
      30: aload_2
      31: iconst_1
      32: dload_0
      33: aload_2
      34: iconst_0
      35: daload
      36: dsub
      37: dastore
      38: goto          67
      41: dload_0
      42: ldc2_w        #19                 // double 9.313225746154785E-10d
      45: dmul
      46: dstore_3
      47: aload_2
      48: iconst_0
      49: dload_0
      50: dload_3
      51: dadd
      52: dload_0
      53: dsub
      54: ldc2_w        #17                 // double 1.073741824E9d
      57: dmul
      58: dastore
      59: aload_2
      60: iconst_1
      61: dload_0
      62: aload_2
      63: iconst_0
      64: daload
      65: dsub
      66: dastore
      67: return

  private static void resplit(double[]);
    Code:
       0: aload_0
       1: iconst_0
       2: daload
       3: aload_0
       4: iconst_1
       5: daload
       6: dadd
       7: dstore_1
       8: dload_1
       9: aload_0
      10: iconst_0
      11: daload
      12: dsub
      13: aload_0
      14: iconst_1
      15: daload
      16: dsub
      17: dneg
      18: dstore_3
      19: dload_1
      20: ldc2_w        #13                 // double 8.0E298d
      23: dcmpg
      24: ifge          65
      27: dload_1
      28: ldc2_w        #15                 // double -8.0E298d
      31: dcmpl
      32: ifle          65
      35: dload_1
      36: ldc2_w        #17                 // double 1.073741824E9d
      39: dmul
      40: dstore        5
      42: aload_0
      43: iconst_0
      44: dload_1
      45: dload         5
      47: dadd
      48: dload         5
      50: dsub
      51: dastore
      52: aload_0
      53: iconst_1
      54: dload_1
      55: aload_0
      56: iconst_0
      57: daload
      58: dsub
      59: dload_3
      60: dadd
      61: dastore
      62: goto          95
      65: dload_1
      66: ldc2_w        #19                 // double 9.313225746154785E-10d
      69: dmul
      70: dstore        5
      72: aload_0
      73: iconst_0
      74: dload_1
      75: dload         5
      77: dadd
      78: dload_1
      79: dsub
      80: ldc2_w        #17                 // double 1.073741824E9d
      83: dmul
      84: dastore
      85: aload_0
      86: iconst_1
      87: dload_1
      88: aload_0
      89: iconst_0
      90: daload
      91: dsub
      92: dload_3
      93: dadd
      94: dastore
      95: return

  private static void splitMult(double[], double[], double[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: daload
       5: aload_1
       6: iconst_0
       7: daload
       8: dmul
       9: dastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_0
      14: daload
      15: aload_1
      16: iconst_1
      17: daload
      18: dmul
      19: aload_0
      20: iconst_1
      21: daload
      22: aload_1
      23: iconst_0
      24: daload
      25: dmul
      26: dadd
      27: aload_0
      28: iconst_1
      29: daload
      30: aload_1
      31: iconst_1
      32: daload
      33: dmul
      34: dadd
      35: dastore
      36: aload_2
      37: invokestatic  #21                 // Method resplit:([D)V
      40: return

  private static void splitAdd(double[], double[], double[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: daload
       5: aload_1
       6: iconst_0
       7: daload
       8: dadd
       9: dastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_1
      14: daload
      15: aload_1
      16: iconst_1
      17: daload
      18: dadd
      19: dastore
      20: aload_2
      21: invokestatic  #21                 // Method resplit:([D)V
      24: return

  static void splitReciprocal(double[], double[]);
    Code:
       0: ldc2_w        #22                 // double 2.384185791015625E-7d
       3: dstore_2
       4: ldc2_w        #24                 // double 0.9999997615814209d
       7: dstore        4
       9: aload_0
      10: iconst_0
      11: daload
      12: dconst_0
      13: dcmpl
      14: ifne          27
      17: aload_0
      18: iconst_0
      19: aload_0
      20: iconst_1
      21: daload
      22: dastore
      23: aload_0
      24: iconst_1
      25: dconst_0
      26: dastore
      27: aload_1
      28: iconst_0
      29: ldc2_w        #24                 // double 0.9999997615814209d
      32: aload_0
      33: iconst_0
      34: daload
      35: ddiv
      36: dastore
      37: aload_1
      38: iconst_1
      39: ldc2_w        #22                 // double 2.384185791015625E-7d
      42: aload_0
      43: iconst_0
      44: daload
      45: dmul
      46: ldc2_w        #24                 // double 0.9999997615814209d
      49: aload_0
      50: iconst_1
      51: daload
      52: dmul
      53: dsub
      54: aload_0
      55: iconst_0
      56: daload
      57: aload_0
      58: iconst_0
      59: daload
      60: dmul
      61: aload_0
      62: iconst_0
      63: daload
      64: aload_0
      65: iconst_1
      66: daload
      67: dmul
      68: dadd
      69: ddiv
      70: dastore
      71: aload_1
      72: iconst_1
      73: daload
      74: aload_1
      75: iconst_1
      76: daload
      77: dcmpl
      78: ifeq          85
      81: aload_1
      82: iconst_1
      83: dconst_0
      84: dastore
      85: aload_1
      86: invokestatic  #21                 // Method resplit:([D)V
      89: iconst_0
      90: istore        6
      92: iload         6
      94: iconst_2
      95: if_icmpge     159
      98: dconst_1
      99: aload_1
     100: iconst_0
     101: daload
     102: aload_0
     103: iconst_0
     104: daload
     105: dmul
     106: dsub
     107: aload_1
     108: iconst_0
     109: daload
     110: aload_0
     111: iconst_1
     112: daload
     113: dmul
     114: dsub
     115: aload_1
     116: iconst_1
     117: daload
     118: aload_0
     119: iconst_0
     120: daload
     121: dmul
     122: dsub
     123: aload_1
     124: iconst_1
     125: daload
     126: aload_0
     127: iconst_1
     128: daload
     129: dmul
     130: dsub
     131: dstore        7
     133: dload         7
     135: aload_1
     136: iconst_0
     137: daload
     138: aload_1
     139: iconst_1
     140: daload
     141: dadd
     142: dmul
     143: dstore        7
     145: aload_1
     146: iconst_1
     147: dup2
     148: daload
     149: dload         7
     151: dadd
     152: dastore
     153: iinc          6, 1
     156: goto          92
     159: return

  private static void quadMult(double[], double[], double[]);
    Code:
       0: iconst_2
       1: newarray       double
       3: astore_3
       4: iconst_2
       5: newarray       double
       7: astore        4
       9: iconst_2
      10: newarray       double
      12: astore        5
      14: aload_0
      15: iconst_0
      16: daload
      17: aload_3
      18: invokestatic  #11                 // Method split:(D[D)V
      21: aload_1
      22: iconst_0
      23: daload
      24: aload         4
      26: invokestatic  #11                 // Method split:(D[D)V
      29: aload_3
      30: aload         4
      32: aload         5
      34: invokestatic  #6                  // Method splitMult:([D[D[D)V
      37: aload_2
      38: iconst_0
      39: aload         5
      41: iconst_0
      42: daload
      43: dastore
      44: aload_2
      45: iconst_1
      46: aload         5
      48: iconst_1
      49: daload
      50: dastore
      51: aload_1
      52: iconst_1
      53: daload
      54: aload         4
      56: invokestatic  #11                 // Method split:(D[D)V
      59: aload_3
      60: aload         4
      62: aload         5
      64: invokestatic  #6                  // Method splitMult:([D[D[D)V
      67: aload_2
      68: iconst_0
      69: daload
      70: aload         5
      72: iconst_0
      73: daload
      74: dadd
      75: dstore        6
      77: aload_2
      78: iconst_1
      79: dup2
      80: daload
      81: dload         6
      83: aload_2
      84: iconst_0
      85: daload
      86: dsub
      87: aload         5
      89: iconst_0
      90: daload
      91: dsub
      92: dsub
      93: dastore
      94: aload_2
      95: iconst_0
      96: dload         6
      98: dastore
      99: aload_2
     100: iconst_0
     101: daload
     102: aload         5
     104: iconst_1
     105: daload
     106: dadd
     107: dstore        6
     109: aload_2
     110: iconst_1
     111: dup2
     112: daload
     113: dload         6
     115: aload_2
     116: iconst_0
     117: daload
     118: dsub
     119: aload         5
     121: iconst_1
     122: daload
     123: dsub
     124: dsub
     125: dastore
     126: aload_2
     127: iconst_0
     128: dload         6
     130: dastore
     131: aload_0
     132: iconst_1
     133: daload
     134: aload_3
     135: invokestatic  #11                 // Method split:(D[D)V
     138: aload_1
     139: iconst_0
     140: daload
     141: aload         4
     143: invokestatic  #11                 // Method split:(D[D)V
     146: aload_3
     147: aload         4
     149: aload         5
     151: invokestatic  #6                  // Method splitMult:([D[D[D)V
     154: aload_2
     155: iconst_0
     156: daload
     157: aload         5
     159: iconst_0
     160: daload
     161: dadd
     162: dstore        6
     164: aload_2
     165: iconst_1
     166: dup2
     167: daload
     168: dload         6
     170: aload_2
     171: iconst_0
     172: daload
     173: dsub
     174: aload         5
     176: iconst_0
     177: daload
     178: dsub
     179: dsub
     180: dastore
     181: aload_2
     182: iconst_0
     183: dload         6
     185: dastore
     186: aload_2
     187: iconst_0
     188: daload
     189: aload         5
     191: iconst_1
     192: daload
     193: dadd
     194: dstore        6
     196: aload_2
     197: iconst_1
     198: dup2
     199: daload
     200: dload         6
     202: aload_2
     203: iconst_0
     204: daload
     205: dsub
     206: aload         5
     208: iconst_1
     209: daload
     210: dsub
     211: dsub
     212: dastore
     213: aload_2
     214: iconst_0
     215: dload         6
     217: dastore
     218: aload_0
     219: iconst_1
     220: daload
     221: aload_3
     222: invokestatic  #11                 // Method split:(D[D)V
     225: aload_1
     226: iconst_1
     227: daload
     228: aload         4
     230: invokestatic  #11                 // Method split:(D[D)V
     233: aload_3
     234: aload         4
     236: aload         5
     238: invokestatic  #6                  // Method splitMult:([D[D[D)V
     241: aload_2
     242: iconst_0
     243: daload
     244: aload         5
     246: iconst_0
     247: daload
     248: dadd
     249: dstore        6
     251: aload_2
     252: iconst_1
     253: dup2
     254: daload
     255: dload         6
     257: aload_2
     258: iconst_0
     259: daload
     260: dsub
     261: aload         5
     263: iconst_0
     264: daload
     265: dsub
     266: dsub
     267: dastore
     268: aload_2
     269: iconst_0
     270: dload         6
     272: dastore
     273: aload_2
     274: iconst_0
     275: daload
     276: aload         5
     278: iconst_1
     279: daload
     280: dadd
     281: dstore        6
     283: aload_2
     284: iconst_1
     285: dup2
     286: daload
     287: dload         6
     289: aload_2
     290: iconst_0
     291: daload
     292: dsub
     293: aload         5
     295: iconst_1
     296: daload
     297: dsub
     298: dsub
     299: dastore
     300: aload_2
     301: iconst_0
     302: dload         6
     304: dastore
     305: return

  static double expint(int, double[]);
    Code:
       0: iconst_2
       1: newarray       double
       3: astore_2
       4: iconst_2
       5: newarray       double
       7: astore_3
       8: iconst_2
       9: newarray       double
      11: astore        4
      13: aload_2
      14: iconst_0
      15: ldc2_w        #26                 // double 2.718281828459045d
      18: dastore
      19: aload_2
      20: iconst_1
      21: ldc2_w        #28                 // double 1.4456468917292502E-16d
      24: dastore
      25: dconst_1
      26: aload         4
      28: invokestatic  #11                 // Method split:(D[D)V
      31: iload_0
      32: ifle          87
      35: iload_0
      36: iconst_1
      37: iand
      38: ifeq          62
      41: aload         4
      43: aload_2
      44: aload_3
      45: invokestatic  #30                 // Method quadMult:([D[D[D)V
      48: aload         4
      50: iconst_0
      51: aload_3
      52: iconst_0
      53: daload
      54: dastore
      55: aload         4
      57: iconst_1
      58: aload_3
      59: iconst_1
      60: daload
      61: dastore
      62: aload_2
      63: aload_2
      64: aload_3
      65: invokestatic  #30                 // Method quadMult:([D[D[D)V
      68: aload_2
      69: iconst_0
      70: aload_3
      71: iconst_0
      72: daload
      73: dastore
      74: aload_2
      75: iconst_1
      76: aload_3
      77: iconst_1
      78: daload
      79: dastore
      80: iload_0
      81: iconst_1
      82: ishr
      83: istore_0
      84: goto          31
      87: aload_1
      88: ifnull        109
      91: aload_1
      92: iconst_0
      93: aload         4
      95: iconst_0
      96: daload
      97: dastore
      98: aload_1
      99: iconst_1
     100: aload         4
     102: iconst_1
     103: daload
     104: dastore
     105: aload_1
     106: invokestatic  #21                 // Method resplit:([D)V
     109: aload         4
     111: iconst_0
     112: daload
     113: aload         4
     115: iconst_1
     116: daload
     117: dadd
     118: dreturn

  static double[] slowLog(double);
    Code:
       0: iconst_2
       1: newarray       double
       3: astore_2
       4: iconst_2
       5: newarray       double
       7: astore_3
       8: iconst_2
       9: newarray       double
      11: astore        4
      13: iconst_2
      14: newarray       double
      16: astore        5
      18: dload_0
      19: aload_2
      20: invokestatic  #11                 // Method split:(D[D)V
      23: aload_2
      24: iconst_0
      25: dup2
      26: daload
      27: dconst_1
      28: dadd
      29: dastore
      30: aload_2
      31: invokestatic  #21                 // Method resplit:([D)V
      34: aload_2
      35: aload         5
      37: invokestatic  #10                 // Method splitReciprocal:([D[D)V
      40: aload_2
      41: iconst_0
      42: dup2
      43: daload
      44: ldc2_w        #7                  // double 2.0d
      47: dsub
      48: dastore
      49: aload_2
      50: invokestatic  #21                 // Method resplit:([D)V
      53: aload_2
      54: aload         5
      56: aload         4
      58: invokestatic  #6                  // Method splitMult:([D[D[D)V
      61: aload_2
      62: iconst_0
      63: aload         4
      65: iconst_0
      66: daload
      67: dastore
      68: aload_2
      69: iconst_1
      70: aload         4
      72: iconst_1
      73: daload
      74: dastore
      75: aload_2
      76: aload_2
      77: aload_3
      78: invokestatic  #6                  // Method splitMult:([D[D[D)V
      81: aload         4
      83: iconst_0
      84: getstatic     #31                 // Field LN_SPLIT_COEF:[[D
      87: getstatic     #31                 // Field LN_SPLIT_COEF:[[D
      90: arraylength
      91: iconst_1
      92: isub
      93: aaload
      94: iconst_0
      95: daload
      96: dastore
      97: aload         4
      99: iconst_1
     100: getstatic     #31                 // Field LN_SPLIT_COEF:[[D
     103: getstatic     #31                 // Field LN_SPLIT_COEF:[[D
     106: arraylength
     107: iconst_1
     108: isub
     109: aaload
     110: iconst_1
     111: daload
     112: dastore
     113: getstatic     #31                 // Field LN_SPLIT_COEF:[[D
     116: arraylength
     117: iconst_2
     118: isub
     119: istore        6
     121: iload         6
     123: iflt          185
     126: aload         4
     128: aload_3
     129: aload         5
     131: invokestatic  #6                  // Method splitMult:([D[D[D)V
     134: aload         4
     136: iconst_0
     137: aload         5
     139: iconst_0
     140: daload
     141: dastore
     142: aload         4
     144: iconst_1
     145: aload         5
     147: iconst_1
     148: daload
     149: dastore
     150: aload         4
     152: getstatic     #31                 // Field LN_SPLIT_COEF:[[D
     155: iload         6
     157: aaload
     158: aload         5
     160: invokestatic  #9                  // Method splitAdd:([D[D[D)V
     163: aload         4
     165: iconst_0
     166: aload         5
     168: iconst_0
     169: daload
     170: dastore
     171: aload         4
     173: iconst_1
     174: aload         5
     176: iconst_1
     177: daload
     178: dastore
     179: iinc          6, -1
     182: goto          121
     185: aload         4
     187: aload_2
     188: aload         5
     190: invokestatic  #6                  // Method splitMult:([D[D[D)V
     193: aload         4
     195: iconst_0
     196: aload         5
     198: iconst_0
     199: daload
     200: dastore
     201: aload         4
     203: iconst_1
     204: aload         5
     206: iconst_1
     207: daload
     208: dastore
     209: aload         4
     211: areturn

  static void printarray(java.io.PrintStream, java.lang.String, int, double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       5: iload_2
       6: aload_3
       7: arraylength
       8: invokestatic  #33                 // Method checkLen:(II)V
      11: aload_0
      12: ldc           #34                 // String     {
      14: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      17: iconst_0
      18: istore        4
      20: aload_3
      21: astore        5
      23: aload         5
      25: arraylength
      26: istore        6
      28: iconst_0
      29: istore        7
      31: iload         7
      33: iload         6
      35: if_icmpge     135
      38: aload         5
      40: iload         7
      42: aaload
      43: astore        8
      45: aload_0
      46: ldc           #35                 // String         {
      48: invokevirtual #36                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      51: aload         8
      53: astore        9
      55: aload         9
      57: arraylength
      58: istore        10
      60: iconst_0
      61: istore        11
      63: iload         11
      65: iload         10
      67: if_icmpge     102
      70: aload         9
      72: iload         11
      74: daload
      75: dstore        12
      77: aload_0
      78: ldc           #37                 // String %-25.25s
      80: iconst_1
      81: anewarray     #38                 // class java/lang/Object
      84: dup
      85: iconst_0
      86: dload         12
      88: invokestatic  #39                 // Method format:(D)Ljava/lang/String;
      91: aastore
      92: invokevirtual #40                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      95: pop
      96: iinc          11, 1
      99: goto          63
     102: aload_0
     103: new           #41                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #43                 // String }, //
     112: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: iload         4
     117: iinc          4, 1
     120: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     123: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     129: iinc          7, 1
     132: goto          31
     135: aload_0
     136: ldc           #47                 // String     };
     138: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     141: return

  static void printarray(java.io.PrintStream, java.lang.String, int, double[]);
    Code:
       0: aload_0
       1: new           #41                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_1
       9: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #48                 // String =
      14: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      23: iload_2
      24: aload_3
      25: arraylength
      26: invokestatic  #33                 // Method checkLen:(II)V
      29: aload_0
      30: ldc           #49                 // String     {
      32: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      35: aload_3
      36: astore        4
      38: aload         4
      40: arraylength
      41: istore        5
      43: iconst_0
      44: istore        6
      46: iload         6
      48: iload         5
      50: if_icmpge     85
      53: aload         4
      55: iload         6
      57: daload
      58: dstore        7
      60: aload_0
      61: ldc           #50                 // String         %s%n
      63: iconst_1
      64: anewarray     #38                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: dload         7
      71: invokestatic  #39                 // Method format:(D)Ljava/lang/String;
      74: aastore
      75: invokevirtual #40                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      78: pop
      79: iinc          6, 1
      82: goto          46
      85: aload_0
      86: ldc           #47                 // String     };
      88: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      91: return

  static java.lang.String format(double);
    Code:
       0: dload_0
       1: dload_0
       2: dcmpl
       3: ifeq          9
       6: ldc           #51                 // String Double.NaN,
       8: areturn
       9: new           #41                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      16: dload_0
      17: dconst_0
      18: dcmpl
      19: iflt          27
      22: ldc           #52                 // String +
      24: goto          29
      27: ldc           #53                 // String
      29: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: dload_0
      33: invokestatic  #54                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      36: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #55                 // String d,
      41: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn

  private static void checkLen(int, int) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: iload_0
       1: iload_1
       2: if_icmpeq     15
       5: new           #56                 // class org/apache/commons/math3/exception/DimensionMismatchException
       8: dup
       9: iload_1
      10: iload_0
      11: invokespecial #57                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      14: athrow
      15: return

  static {};
    Code:
       0: bipush        20
       2: newarray       double
       4: dup
       5: iconst_0
       6: dconst_1
       7: dastore
       8: dup
       9: iconst_1
      10: dconst_1
      11: dastore
      12: dup
      13: iconst_2
      14: ldc2_w        #7                  // double 2.0d
      17: dastore
      18: dup
      19: iconst_3
      20: ldc2_w        #58                 // double 6.0d
      23: dastore
      24: dup
      25: iconst_4
      26: ldc2_w        #60                 // double 24.0d
      29: dastore
      30: dup
      31: iconst_5
      32: ldc2_w        #62                 // double 120.0d
      35: dastore
      36: dup
      37: bipush        6
      39: ldc2_w        #64                 // double 720.0d
      42: dastore
      43: dup
      44: bipush        7
      46: ldc2_w        #66                 // double 5040.0d
      49: dastore
      50: dup
      51: bipush        8
      53: ldc2_w        #68                 // double 40320.0d
      56: dastore
      57: dup
      58: bipush        9
      60: ldc2_w        #70                 // double 362880.0d
      63: dastore
      64: dup
      65: bipush        10
      67: ldc2_w        #72                 // double 3628800.0d
      70: dastore
      71: dup
      72: bipush        11
      74: ldc2_w        #74                 // double 3.99168E7d
      77: dastore
      78: dup
      79: bipush        12
      81: ldc2_w        #76                 // double 4.790016E8d
      84: dastore
      85: dup
      86: bipush        13
      88: ldc2_w        #78                 // double 6.2270208E9d
      91: dastore
      92: dup
      93: bipush        14
      95: ldc2_w        #80                 // double 8.71782912E10d
      98: dastore
      99: dup
     100: bipush        15
     102: ldc2_w        #82                 // double 1.307674368E12d
     105: dastore
     106: dup
     107: bipush        16
     109: ldc2_w        #84                 // double 2.0922789888E13d
     112: dastore
     113: dup
     114: bipush        17
     116: ldc2_w        #86                 // double 3.55687428096E14d
     119: dastore
     120: dup
     121: bipush        18
     123: ldc2_w        #88                 // double 6.402373705728E15d
     126: dastore
     127: dup
     128: bipush        19
     130: ldc2_w        #90                 // double 1.21645100408832E17d
     133: dastore
     134: putstatic     #12                 // Field FACT:[D
     137: bipush        16
     139: anewarray     #92                 // class "[D"
     142: dup
     143: iconst_0
     144: iconst_2
     145: newarray       double
     147: dup
     148: iconst_0
     149: ldc2_w        #7                  // double 2.0d
     152: dastore
     153: dup
     154: iconst_1
     155: dconst_0
     156: dastore
     157: aastore
     158: dup
     159: iconst_1
     160: iconst_2
     161: newarray       double
     163: dup
     164: iconst_0
     165: ldc2_w        #93                 // double 0.6666666269302368d
     168: dastore
     169: dup
     170: iconst_1
     171: ldc2_w        #95                 // double 3.9736429850260626E-8d
     174: dastore
     175: aastore
     176: dup
     177: iconst_2
     178: iconst_2
     179: newarray       double
     181: dup
     182: iconst_0
     183: ldc2_w        #97                 // double 0.3999999761581421d
     186: dastore
     187: dup
     188: iconst_1
     189: ldc2_w        #99                 // double 2.3841857910019882E-8d
     192: dastore
     193: aastore
     194: dup
     195: iconst_3
     196: iconst_2
     197: newarray       double
     199: dup
     200: iconst_0
     201: ldc2_w        #101                // double 0.2857142686843872d
     204: dastore
     205: dup
     206: iconst_1
     207: ldc2_w        #103                // double 1.7029898543501842E-8d
     210: dastore
     211: aastore
     212: dup
     213: iconst_4
     214: iconst_2
     215: newarray       double
     217: dup
     218: iconst_0
     219: ldc2_w        #105                // double 0.2222222089767456d
     222: dastore
     223: dup
     224: iconst_1
     225: ldc2_w        #107                // double 1.3245471311735498E-8d
     228: dastore
     229: aastore
     230: dup
     231: iconst_5
     232: iconst_2
     233: newarray       double
     235: dup
     236: iconst_0
     237: ldc2_w        #109                // double 0.1818181574344635d
     240: dastore
     241: dup
     242: iconst_1
     243: ldc2_w        #111                // double 2.4384203044354907E-8d
     246: dastore
     247: aastore
     248: dup
     249: bipush        6
     251: iconst_2
     252: newarray       double
     254: dup
     255: iconst_0
     256: ldc2_w        #113                // double 0.1538461446762085d
     259: dastore
     260: dup
     261: iconst_1
     262: ldc2_w        #115                // double 9.140260083262505E-9d
     265: dastore
     266: aastore
     267: dup
     268: bipush        7
     270: iconst_2
     271: newarray       double
     273: dup
     274: iconst_0
     275: ldc2_w        #117                // double 0.13333332538604736d
     278: dastore
     279: dup
     280: iconst_1
     281: ldc2_w        #119                // double 9.220590270857665E-9d
     284: dastore
     285: aastore
     286: dup
     287: bipush        8
     289: iconst_2
     290: newarray       double
     292: dup
     293: iconst_0
     294: ldc2_w        #121                // double 0.11764700710773468d
     297: dastore
     298: dup
     299: iconst_1
     300: ldc2_w        #123                // double 1.2393345855018391E-8d
     303: dastore
     304: aastore
     305: dup
     306: bipush        9
     308: iconst_2
     309: newarray       double
     311: dup
     312: iconst_0
     313: ldc2_w        #125                // double 0.10526403784751892d
     316: dastore
     317: dup
     318: iconst_1
     319: ldc2_w        #127                // double 8.251545029714408E-9d
     322: dastore
     323: aastore
     324: dup
     325: bipush        10
     327: iconst_2
     328: newarray       double
     330: dup
     331: iconst_0
     332: ldc2_w        #129                // double 0.0952233225107193d
     335: dastore
     336: dup
     337: iconst_1
     338: ldc2_w        #131                // double 1.2675934823758863E-8d
     341: dastore
     342: aastore
     343: dup
     344: bipush        11
     346: iconst_2
     347: newarray       double
     349: dup
     350: iconst_0
     351: ldc2_w        #133                // double 0.08713622391223907d
     354: dastore
     355: dup
     356: iconst_1
     357: ldc2_w        #135                // double 1.1430250008909141E-8d
     360: dastore
     361: aastore
     362: dup
     363: bipush        12
     365: iconst_2
     366: newarray       double
     368: dup
     369: iconst_0
     370: ldc2_w        #137                // double 0.07842259109020233d
     373: dastore
     374: dup
     375: iconst_1
     376: ldc2_w        #139                // double 2.404307984052299E-9d
     379: dastore
     380: aastore
     381: dup
     382: bipush        13
     384: iconst_2
     385: newarray       double
     387: dup
     388: iconst_0
     389: ldc2_w        #141                // double 0.08371849358081818d
     392: dastore
     393: dup
     394: iconst_1
     395: ldc2_w        #143                // double 1.176342548272881E-8d
     398: dastore
     399: aastore
     400: dup
     401: bipush        14
     403: iconst_2
     404: newarray       double
     406: dup
     407: iconst_0
     408: ldc2_w        #145                // double 0.030589580535888672d
     411: dastore
     412: dup
     413: iconst_1
     414: ldc2_w        #147                // double 1.2958646899018938E-9d
     417: dastore
     418: aastore
     419: dup
     420: bipush        15
     422: iconst_2
     423: newarray       double
     425: dup
     426: iconst_0
     427: ldc2_w        #149                // double 0.14982303977012634d
     430: dastore
     431: dup
     432: iconst_1
     433: ldc2_w        #151                // double 1.225743062930824E-8d
     436: dastore
     437: aastore
     438: putstatic     #31                 // Field LN_SPLIT_COEF:[[D
     441: return
}
