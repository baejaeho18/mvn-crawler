Compiled from "AbstractSubHyperplane.java"
public abstract class org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S extends org.apache.commons.math3.geometry.Space, T extends org.apache.commons.math3.geometry.Space> implements org.apache.commons.math3.geometry.partitioning.SubHyperplane<S> {
  private final org.apache.commons.math3.geometry.partitioning.Hyperplane<S> hyperplane;

  private final org.apache.commons.math3.geometry.partitioning.Region<T> remainingRegion;

  protected org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Region<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      14: return

  protected abstract org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Region<T>);

  public org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> copySelf();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       5: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.copySelf:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      10: aload_0
      11: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      14: invokevirtual #5                  // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      17: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane<S> getHyperplane();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       4: areturn

  public org.apache.commons.math3.geometry.partitioning.Region<T> getRemainingRegion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
       4: areturn

  public double getSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getSize:()D
       9: dreturn

  public org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
       4: astore_2
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      10: new           #8                  // class org/apache/commons/math3/geometry/partitioning/RegionFactory
      13: dup
      14: invokespecial #9                  // Method org/apache/commons/math3/geometry/partitioning/RegionFactory."<init>":()V
      17: aload_0
      18: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      21: aload_2
      22: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      25: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory.union:(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
      28: invokevirtual #5                  // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      31: areturn

  public org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> applyTransform(org.apache.commons.math3.geometry.partitioning.Transform<S, T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       5: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      10: astore_2
      11: new           #12                 // class java/util/HashMap
      14: dup
      15: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      18: astore_3
      19: aload_0
      20: aload_0
      21: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      24: iconst_0
      25: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      30: aload_2
      31: aload_1
      32: aload_3
      33: invokespecial #15                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      36: astore        4
      38: aload_3
      39: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      44: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      49: astore        5
      51: aload         5
      53: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          187
      61: aload         5
      63: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #20                 // class java/util/Map$Entry
      71: astore        6
      73: aload         6
      75: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      80: checkcast     #22                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      83: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      86: ifnull        184
      89: aload         6
      91: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      96: checkcast     #22                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      99: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     102: checkcast     #25                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
     105: astore        7
     107: aload         7
     109: ifnull        184
     112: aload         6
     114: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     119: checkcast     #22                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     122: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     125: checkcast     #25                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
     128: astore        8
     130: aload         7
     132: invokevirtual #27                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getSplitters:()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
     135: invokevirtual #28                 // Method org/apache/commons/math3/geometry/partitioning/NodesSet.iterator:()Ljava/util/Iterator;
     138: astore        9
     140: aload         9
     142: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     147: ifeq          184
     150: aload         9
     152: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     157: checkcast     #22                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     160: astore        10
     162: aload         8
     164: invokevirtual #27                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getSplitters:()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
     167: aload_3
     168: aload         10
     170: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     175: checkcast     #22                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     178: invokevirtual #30                 // Method org/apache/commons/math3/geometry/partitioning/NodesSet.add:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
     181: goto          140
     184: goto          51
     187: aload_0
     188: aload_2
     189: aload_0
     190: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
     193: aload         4
     195: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
     200: invokevirtual #5                  // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
     203: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<T> recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree<T>, org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Transform<S, T>, java.util.Map<org.apache.commons.math3.geometry.partitioning.BSPTree<T>, org.apache.commons.math3.geometry.partitioning.BSPTree<T>>);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     23
       7: new           #22                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      10: dup
      11: aload_1
      12: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      15: invokespecial #32                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      18: astore        5
      20: goto          167
      23: aload_1
      24: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      27: checkcast     #25                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      30: astore        6
      32: aload         6
      34: ifnull        117
      37: aload         6
      39: invokevirtual #33                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      42: ifnonnull     49
      45: aconst_null
      46: goto          65
      49: aload_3
      50: aload         6
      52: invokevirtual #33                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      55: aload_0
      56: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      59: aload_2
      60: invokeinterface #34,  4           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      65: astore        7
      67: aload         6
      69: invokevirtual #35                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      72: ifnonnull     79
      75: aconst_null
      76: goto          95
      79: aload_3
      80: aload         6
      82: invokevirtual #35                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      85: aload_0
      86: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      89: aload_2
      90: invokeinterface #34,  4           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      95: astore        8
      97: new           #25                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
     100: dup
     101: aload         7
     103: aload         8
     105: new           #36                 // class org/apache/commons/math3/geometry/partitioning/NodesSet
     108: dup
     109: invokespecial #37                 // Method org/apache/commons/math3/geometry/partitioning/NodesSet."<init>":()V
     112: invokespecial #38                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/NodesSet;)V
     115: astore        6
     117: new           #22                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     120: dup
     121: aload_3
     122: aload_1
     123: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     126: aload_0
     127: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     130: aload_2
     131: invokeinterface #34,  4           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     136: aload_0
     137: aload_1
     138: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     141: aload_2
     142: aload_3
     143: aload         4
     145: invokespecial #15                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     148: aload_0
     149: aload_1
     150: invokevirtual #40                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     153: aload_2
     154: aload_3
     155: aload         4
     157: invokespecial #15                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     160: aload         6
     162: invokespecial #41                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     165: astore        5
     167: aload         4
     169: aload_1
     170: aload         5
     172: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     177: pop
     178: aload         5
     180: areturn

  public org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
       5: invokevirtual #44                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getSide:()Lorg/apache/commons/math3/geometry/partitioning/Side;
       8: areturn

  public abstract org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane<S> split(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>);

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
       4: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:()Z
       9: ireturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method reunite:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
       5: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method copySelf:()Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
       4: areturn
}
