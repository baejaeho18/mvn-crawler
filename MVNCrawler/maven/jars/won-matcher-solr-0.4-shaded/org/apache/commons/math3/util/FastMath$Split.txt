Compiled from "FastMath.java"
class org.apache.commons.math3.util.FastMath$Split {
  public static final org.apache.commons.math3.util.FastMath$Split NAN;

  public static final org.apache.commons.math3.util.FastMath$Split POSITIVE_INFINITY;

  public static final org.apache.commons.math3.util.FastMath$Split NEGATIVE_INFINITY;

  private final double full;

  private final double high;

  private final double low;

  org.apache.commons.math3.util.FastMath$Split(double);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #1                  // Field full:D
       9: aload_0
      10: dload_1
      11: invokestatic  #4                  // Method java/lang/Double.doubleToRawLongBits:(D)J
      14: ldc2_w        #5                  // long -134217728l
      17: land
      18: invokestatic  #7                  // Method java/lang/Double.longBitsToDouble:(J)D
      21: putfield      #8                  // Field high:D
      24: aload_0
      25: dload_1
      26: aload_0
      27: getfield      #8                  // Field high:D
      30: dsub
      31: putfield      #9                  // Field low:D
      34: return

  org.apache.commons.math3.util.FastMath$Split(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dconst_0
       3: dcmpl
       4: ifne          34
       7: dload_3
       8: dconst_0
       9: dcmpl
      10: ifne          30
      13: dload_1
      14: invokestatic  #4                  // Method java/lang/Double.doubleToRawLongBits:(D)J
      17: ldc2_w        #10                 // long -9223372036854775808l
      20: lcmp
      21: ifne          30
      24: ldc2_w        #12                 // double -0.0d
      27: goto          37
      30: dload_3
      31: goto          37
      34: dload_1
      35: dload_3
      36: dadd
      37: dload_1
      38: dload_3
      39: invokespecial #14                 // Method "<init>":(DDD)V
      42: return

  org.apache.commons.math3.util.FastMath$Split(double, double, double);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #1                  // Field full:D
       9: aload_0
      10: dload_3
      11: putfield      #8                  // Field high:D
      14: aload_0
      15: dload         5
      17: putfield      #9                  // Field low:D
      20: return

  public org.apache.commons.math3.util.FastMath$Split multiply(org.apache.commons.math3.util.FastMath$Split);
    Code:
       0: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
       3: dup
       4: aload_0
       5: getfield      #1                  // Field full:D
       8: aload_1
       9: getfield      #1                  // Field full:D
      12: dmul
      13: invokespecial #16                 // Method "<init>":(D)V
      16: astore_2
      17: aload_0
      18: getfield      #9                  // Field low:D
      21: aload_1
      22: getfield      #9                  // Field low:D
      25: dmul
      26: aload_2
      27: getfield      #1                  // Field full:D
      30: aload_0
      31: getfield      #8                  // Field high:D
      34: aload_1
      35: getfield      #8                  // Field high:D
      38: dmul
      39: dsub
      40: aload_0
      41: getfield      #9                  // Field low:D
      44: aload_1
      45: getfield      #8                  // Field high:D
      48: dmul
      49: dsub
      50: aload_0
      51: getfield      #8                  // Field high:D
      54: aload_1
      55: getfield      #9                  // Field low:D
      58: dmul
      59: dsub
      60: dsub
      61: dstore_3
      62: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
      65: dup
      66: aload_2
      67: getfield      #8                  // Field high:D
      70: aload_2
      71: getfield      #9                  // Field low:D
      74: dload_3
      75: dadd
      76: invokespecial #17                 // Method "<init>":(DD)V
      79: areturn

  public org.apache.commons.math3.util.FastMath$Split reciprocal();
    Code:
       0: dconst_1
       1: aload_0
       2: getfield      #1                  // Field full:D
       5: ddiv
       6: dstore_1
       7: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
      10: dup
      11: dload_1
      12: invokespecial #16                 // Method "<init>":(D)V
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #18                 // Method multiply:(Lorg/apache/commons/math3/util/FastMath$Split;)Lorg/apache/commons/math3/util/FastMath$Split;
      21: astore        4
      23: aload         4
      25: getfield      #8                  // Field high:D
      28: dconst_1
      29: dsub
      30: aload         4
      32: getfield      #9                  // Field low:D
      35: dadd
      36: dstore        5
      38: dload         5
      40: invokestatic  #19                 // Method java/lang/Double.isNaN:(D)Z
      43: ifeq          50
      46: aload_3
      47: goto          73
      50: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
      53: dup
      54: aload_3
      55: getfield      #8                  // Field high:D
      58: aload_3
      59: getfield      #9                  // Field low:D
      62: dload         5
      64: aload_0
      65: getfield      #1                  // Field full:D
      68: ddiv
      69: dsub
      70: invokespecial #17                 // Method "<init>":(DD)V
      73: areturn

  private org.apache.commons.math3.util.FastMath$Split pow(long);
    Code:
       0: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
       3: dup
       4: dconst_1
       5: invokespecial #16                 // Method "<init>":(D)V
       8: astore_3
       9: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
      12: dup
      13: aload_0
      14: getfield      #1                  // Field full:D
      17: aload_0
      18: getfield      #8                  // Field high:D
      21: aload_0
      22: getfield      #9                  // Field low:D
      25: invokespecial #14                 // Method "<init>":(DDD)V
      28: astore        4
      30: lload_1
      31: lstore        5
      33: lload         5
      35: lconst_0
      36: lcmp
      37: ifeq          74
      40: lload         5
      42: lconst_1
      43: land
      44: lconst_0
      45: lcmp
      46: ifeq          56
      49: aload_3
      50: aload         4
      52: invokevirtual #18                 // Method multiply:(Lorg/apache/commons/math3/util/FastMath$Split;)Lorg/apache/commons/math3/util/FastMath$Split;
      55: astore_3
      56: aload         4
      58: aload         4
      60: invokevirtual #18                 // Method multiply:(Lorg/apache/commons/math3/util/FastMath$Split;)Lorg/apache/commons/math3/util/FastMath$Split;
      63: astore        4
      65: lload         5
      67: iconst_1
      68: lushr
      69: lstore        5
      71: goto          33
      74: aload_3
      75: getfield      #1                  // Field full:D
      78: invokestatic  #19                 // Method java/lang/Double.isNaN:(D)Z
      81: ifeq          152
      84: aload_0
      85: getfield      #1                  // Field full:D
      88: invokestatic  #19                 // Method java/lang/Double.isNaN:(D)Z
      91: ifeq          98
      94: getstatic     #20                 // Field NAN:Lorg/apache/commons/math3/util/FastMath$Split;
      97: areturn
      98: aload_0
      99: getfield      #1                  // Field full:D
     102: invokestatic  #21                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     105: dconst_1
     106: dcmpg
     107: ifge          127
     110: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
     113: dup
     114: dconst_0
     115: aload_0
     116: getfield      #1                  // Field full:D
     119: invokestatic  #22                 // Method org/apache/commons/math3/util/FastMath.copySign:(DD)D
     122: dconst_0
     123: invokespecial #17                 // Method "<init>":(DD)V
     126: areturn
     127: aload_0
     128: getfield      #1                  // Field full:D
     131: dconst_0
     132: dcmpg
     133: ifge          148
     136: lload_1
     137: lconst_1
     138: land
     139: lconst_1
     140: lcmp
     141: ifne          148
     144: getstatic     #23                 // Field NEGATIVE_INFINITY:Lorg/apache/commons/math3/util/FastMath$Split;
     147: areturn
     148: getstatic     #24                 // Field POSITIVE_INFINITY:Lorg/apache/commons/math3/util/FastMath$Split;
     151: areturn
     152: aload_3
     153: areturn

  static org.apache.commons.math3.util.FastMath$Split access$500(org.apache.commons.math3.util.FastMath$Split, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #2                  // Method pow:(J)Lorg/apache/commons/math3/util/FastMath$Split;
       5: areturn

  static double access$600(org.apache.commons.math3.util.FastMath$Split);
    Code:
       0: aload_0
       1: getfield      #1                  // Field full:D
       4: dreturn

  static {};
    Code:
       0: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
       3: dup
       4: ldc2_w        #25                 // double NaNd
       7: dconst_0
       8: invokespecial #17                 // Method "<init>":(DD)V
      11: putstatic     #20                 // Field NAN:Lorg/apache/commons/math3/util/FastMath$Split;
      14: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
      17: dup
      18: ldc2_w        #27                 // double Infinityd
      21: dconst_0
      22: invokespecial #17                 // Method "<init>":(DD)V
      25: putstatic     #24                 // Field POSITIVE_INFINITY:Lorg/apache/commons/math3/util/FastMath$Split;
      28: new           #15                 // class org/apache/commons/math3/util/FastMath$Split
      31: dup
      32: ldc2_w        #29                 // double -Infinityd
      35: dconst_0
      36: invokespecial #17                 // Method "<init>":(DD)V
      39: putstatic     #23                 // Field NEGATIVE_INFINITY:Lorg/apache/commons/math3/util/FastMath$Split;
      42: return
}
