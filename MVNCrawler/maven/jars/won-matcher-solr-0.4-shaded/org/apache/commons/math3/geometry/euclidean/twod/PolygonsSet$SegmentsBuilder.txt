Compiled from "PolygonsSet.java"
class org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder implements org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> {
  private final double tolerance;

  private final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment> segments;

  org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder(double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #2                  // Field tolerance:D
       9: aload_0
      10: new           #3                  // class java/util/ArrayList
      13: dup
      14: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #5                  // Field segments:Ljava/util/List;
      20: return

  public org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: getstatic     #6                  // Field org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order.MINUS_SUB_PLUS:Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
       3: areturn

  public void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
       4: checkcast     #8                  // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
       7: astore_2
       8: aload_2
       9: invokevirtual #9                  // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getSplitters:()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
      12: astore_3
      13: aload_2
      14: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      17: ifnull        31
      20: aload_0
      21: aload_2
      22: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      25: aload_1
      26: aload_3
      27: iconst_0
      28: invokespecial #11                 // Method addContribution:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Iterable;Z)V
      31: aload_2
      32: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      35: ifnull        49
      38: aload_0
      39: aload_2
      40: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      43: aload_1
      44: aload_3
      45: iconst_1
      46: invokespecial #11                 // Method addContribution:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Iterable;Z)V
      49: return

  public void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: return

  private void addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, java.lang.Iterable<org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>, boolean);
    Code:
       0: aload_1
       1: checkcast     #13                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
       4: astore        5
       6: aload_1
       7: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      12: checkcast     #15                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      15: astore        6
      17: aload         5
      19: invokevirtual #16                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      22: checkcast     #17                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
      25: invokevirtual #18                 // Method org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.asList:()Ljava/util/List;
      28: astore        7
      30: aload         7
      32: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore        8
      39: aload         8
      41: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          217
      49: aload         8
      51: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Interval
      59: astore        9
      61: aload         9
      63: invokevirtual #23                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getInf:()D
      66: invokestatic  #24                 // Method java/lang/Double.isInfinite:(D)Z
      69: ifeq          76
      72: aconst_null
      73: goto          93
      76: aload         6
      78: new           #25                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
      81: dup
      82: aload         9
      84: invokevirtual #23                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getInf:()D
      87: invokespecial #26                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
      90: invokevirtual #27                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      93: astore        10
      95: aload         9
      97: invokevirtual #28                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getSup:()D
     100: invokestatic  #24                 // Method java/lang/Double.isInfinite:(D)Z
     103: ifeq          110
     106: aconst_null
     107: goto          127
     110: aload         6
     112: new           #25                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
     115: dup
     116: aload         9
     118: invokevirtual #28                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getSup:()D
     121: invokespecial #26                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
     124: invokevirtual #27                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
     127: astore        11
     129: aload_0
     130: aload         10
     132: aload_3
     133: invokespecial #29                 // Method selectClosest:(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     136: astore        12
     138: aload_0
     139: aload         11
     141: aload_3
     142: invokespecial #29                 // Method selectClosest:(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     145: astore        13
     147: iload         4
     149: ifeq          186
     152: aload_0
     153: getfield      #5                  // Field segments:Ljava/util/List;
     156: new           #30                 // class org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment
     159: dup
     160: aload         11
     162: aload         10
     164: aload         6
     166: invokevirtual #31                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getReverse:()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
     169: aload_2
     170: aload         13
     172: aload         12
     174: invokespecial #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
     177: invokeinterface #33,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     182: pop
     183: goto          214
     186: aload_0
     187: getfield      #5                  // Field segments:Ljava/util/List;
     190: new           #30                 // class org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment
     193: dup
     194: aload         10
     196: aload         11
     198: aload         6
     200: aload_2
     201: aload         12
     203: aload         13
     205: invokespecial #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
     208: invokeinterface #33,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     213: pop
     214: goto          39
     217: return

  private org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> selectClosest(org.apache.commons.math3.geometry.euclidean.twod.Vector2D, java.lang.Iterable<org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>);
    Code:
       0: aconst_null
       1: astore_3
       2: ldc2_w        #34                 // double Infinityd
       5: dstore        4
       7: aload_2
       8: invokeinterface #36,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      13: astore        6
      15: aload         6
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          76
      25: aload         6
      27: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #37                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      35: astore        7
      37: aload         7
      39: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      42: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      47: aload_1
      48: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.getOffset:(Lorg/apache/commons/math3/geometry/Point;)D
      53: invokestatic  #40                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      56: dstore        8
      58: dload         8
      60: dload         4
      62: dcmpg
      63: ifge          73
      66: aload         7
      68: astore_3
      69: dload         8
      71: dstore        4
      73: goto          15
      76: dload         4
      78: aload_0
      79: getfield      #2                  // Field tolerance:D
      82: dcmpg
      83: ifgt          90
      86: aload_3
      87: goto          91
      90: aconst_null
      91: areturn

  public java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment> getSegments();
    Code:
       0: aload_0
       1: getfield      #5                  // Field segments:Ljava/util/List;
       4: areturn
}
