Compiled from "AbstractLeastSquaresOptimizer.java"
public abstract class org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer extends org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer {
  private org.apache.commons.math3.linear.RealMatrix weightMatrixSqrt;

  private double cost;

  protected org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: return

  protected org.apache.commons.math3.linear.RealMatrix computeWeightedJacobian(double[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field weightMatrixSqrt:Lorg/apache/commons/math3/linear/RealMatrix;
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method computeJacobian:([D)[[D
       9: invokestatic  #4                  // Method org/apache/commons/math3/linear/MatrixUtils.createRealMatrix:([[D)Lorg/apache/commons/math3/linear/RealMatrix;
      12: invokeinterface #5,  2            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      17: areturn

  protected double computeCost(double[]);
    Code:
       0: new           #6                  // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([D)V
       8: astore_2
       9: aload_2
      10: aload_0
      11: invokevirtual #8                  // Method getWeight:()Lorg/apache/commons/math3/linear/RealMatrix;
      14: aload_2
      15: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.operate:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      20: invokevirtual #10                 // Method org/apache/commons/math3/linear/ArrayRealVector.dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      23: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      26: dreturn

  public double getRMS();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getChiSquare:()D
       4: aload_0
       5: invokevirtual #13                 // Method getTargetSize:()I
       8: i2d
       9: ddiv
      10: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      13: dreturn

  public double getChiSquare();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cost:D
       4: aload_0
       5: getfield      #14                 // Field cost:D
       8: dmul
       9: dreturn

  public org.apache.commons.math3.linear.RealMatrix getWeightSquareRoot();
    Code:
       0: aload_0
       1: getfield      #2                  // Field weightMatrixSqrt:Lorg/apache/commons/math3/linear/RealMatrix;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.copy:()Lorg/apache/commons/math3/linear/RealMatrix;
       9: areturn

  protected void setCost(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #14                 // Field cost:D
       5: return

  public double[][] computeCovariances(double[], double);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method computeWeightedJacobian:([D)Lorg/apache/commons/math3/linear/RealMatrix;
       5: astore        4
       7: aload         4
       9: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.transpose:()Lorg/apache/commons/math3/linear/RealMatrix;
      14: aload         4
      16: invokeinterface #5,  2            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      21: astore        5
      23: new           #18                 // class org/apache/commons/math3/linear/QRDecomposition
      26: dup
      27: aload         5
      29: dload_2
      30: invokespecial #19                 // Method org/apache/commons/math3/linear/QRDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;D)V
      33: invokevirtual #20                 // Method org/apache/commons/math3/linear/QRDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
      36: astore        6
      38: aload         6
      40: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.getInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
      45: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getData:()[[D
      50: areturn

  public double[] computeSigma(double[], double);
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: iload         4
       6: newarray       double
       8: astore        5
      10: aload_0
      11: aload_1
      12: dload_2
      13: invokevirtual #23                 // Method computeCovariances:([DD)[[D
      16: astore        6
      18: iconst_0
      19: istore        7
      21: iload         7
      23: iload         4
      25: if_icmpge     50
      28: aload         5
      30: iload         7
      32: aload         6
      34: iload         7
      36: aaload
      37: iload         7
      39: daload
      40: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      43: dastore
      44: iinc          7, 1
      47: goto          21
      50: aload         5
      52: areturn

  public org.apache.commons.math3.optim.PointVectorValuePair optimize(org.apache.commons.math3.optim.OptimizationData...) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
       5: areturn

  protected double[] computeResiduals(double[]);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getTarget:()[D
       4: astore_2
       5: aload_1
       6: arraylength
       7: aload_2
       8: arraylength
       9: if_icmpeq     24
      12: new           #26                 // class org/apache/commons/math3/exception/DimensionMismatchException
      15: dup
      16: aload_2
      17: arraylength
      18: aload_1
      19: arraylength
      20: invokespecial #27                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      23: athrow
      24: aload_2
      25: arraylength
      26: newarray       double
      28: astore_3
      29: iconst_0
      30: istore        4
      32: iload         4
      34: aload_2
      35: arraylength
      36: if_icmpge     58
      39: aload_3
      40: iload         4
      42: aload_2
      43: iload         4
      45: daload
      46: aload_1
      47: iload         4
      49: daload
      50: dsub
      51: dastore
      52: iinc          4, 1
      55: goto          32
      58: aload_3
      59: areturn

  protected void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_1
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     58
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: instanceof    #29                 // class org/apache/commons/math3/optim/nonlinear/vector/Weight
      30: ifeq          52
      33: aload_0
      34: aload_0
      35: aload         5
      37: checkcast     #29                 // class org/apache/commons/math3/optim/nonlinear/vector/Weight
      40: invokevirtual #30                 // Method org/apache/commons/math3/optim/nonlinear/vector/Weight.getWeight:()Lorg/apache/commons/math3/linear/RealMatrix;
      43: invokespecial #31                 // Method squareRoot:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      46: putfield      #2                  // Field weightMatrixSqrt:Lorg/apache/commons/math3/linear/RealMatrix;
      49: goto          58
      52: iinc          4, 1
      55: goto          13
      58: return

  private org.apache.commons.math3.linear.RealMatrix squareRoot(org.apache.commons.math3.linear.RealMatrix);
    Code:
       0: aload_1
       1: instanceof    #32                 // class org/apache/commons/math3/linear/DiagonalMatrix
       4: ifeq          63
       7: aload_1
       8: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      13: istore_2
      14: new           #32                 // class org/apache/commons/math3/linear/DiagonalMatrix
      17: dup
      18: iload_2
      19: invokespecial #34                 // Method org/apache/commons/math3/linear/DiagonalMatrix."<init>":(I)V
      22: astore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_2
      29: if_icmpge     61
      32: aload_3
      33: iload         4
      35: iload         4
      37: aload_1
      38: iload         4
      40: iload         4
      42: invokeinterface #35,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      47: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      50: invokeinterface #36,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      55: iinc          4, 1
      58: goto          26
      61: aload_3
      62: areturn
      63: new           #37                 // class org/apache/commons/math3/linear/EigenDecomposition
      66: dup
      67: aload_1
      68: invokespecial #38                 // Method org/apache/commons/math3/linear/EigenDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;)V
      71: astore_2
      72: aload_2
      73: invokevirtual #39                 // Method org/apache/commons/math3/linear/EigenDecomposition.getSquareRoot:()Lorg/apache/commons/math3/linear/RealMatrix;
      76: areturn

  public java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
       5: areturn
}
