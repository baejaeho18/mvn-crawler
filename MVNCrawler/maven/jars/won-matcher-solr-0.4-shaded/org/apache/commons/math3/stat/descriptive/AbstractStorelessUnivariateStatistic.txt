Compiled from "AbstractStorelessUnivariateStatistic.java"
public abstract class org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic extends org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic implements org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic {
  public org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic."<init>":()V
       4: return

  public double evaluate(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_1
       1: ifnonnull     19
       4: new           #2                  // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: getstatic     #3                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.INPUT_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokespecial #5                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      18: athrow
      19: aload_0
      20: aload_1
      21: iconst_0
      22: aload_1
      23: arraylength
      24: invokevirtual #6                  // Method evaluate:([DII)D
      27: dreturn

  public double evaluate(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #7                  // Method test:([DII)Z
       7: ifeq          21
      10: aload_0
      11: invokevirtual #8                  // Method clear:()V
      14: aload_0
      15: aload_1
      16: iload_2
      17: iload_3
      18: invokevirtual #9                  // Method incrementAll:([DII)V
      21: aload_0
      22: invokevirtual #10                 // Method getResult:()D
      25: dreturn

  public abstract org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy();

  public abstract void clear();

  public abstract double getResult();

  public abstract void increment(double);

  public void incrementAll(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_1
       1: ifnonnull     19
       4: new           #2                  // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: getstatic     #3                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.INPUT_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokespecial #5                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      18: athrow
      19: aload_0
      20: aload_1
      21: iconst_0
      22: aload_1
      23: arraylength
      24: invokevirtual #9                  // Method incrementAll:([DII)V
      27: return

  public void incrementAll(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #7                  // Method test:([DII)Z
       7: ifeq          39
      10: iload_2
      11: iload_3
      12: iadd
      13: istore        4
      15: iload_2
      16: istore        5
      18: iload         5
      20: iload         4
      22: if_icmpge     39
      25: aload_0
      26: aload_1
      27: iload         5
      29: daload
      30: invokevirtual #11                 // Method increment:(D)V
      33: iinc          5, 1
      36: goto          18
      39: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #12                 // class org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #12                 // class org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic
      20: astore_2
      21: aload_2
      22: invokevirtual #10                 // Method getResult:()D
      25: aload_0
      26: invokevirtual #10                 // Method getResult:()D
      29: invokestatic  #13                 // Method org/apache/commons/math3/util/Precision.equalsIncludingNaN:(DD)Z
      32: ifeq          55
      35: aload_2
      36: invokevirtual #14                 // Method getN:()J
      39: l2f
      40: aload_0
      41: invokevirtual #14                 // Method getN:()J
      44: l2f
      45: invokestatic  #15                 // Method org/apache/commons/math3/util/Precision.equalsIncludingNaN:(FF)Z
      48: ifeq          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: bipush        31
       4: aload_0
       5: invokevirtual #10                 // Method getResult:()D
       8: invokestatic  #16                 // Method org/apache/commons/math3/util/MathUtils.hash:(D)I
      11: iadd
      12: imul
      13: aload_0
      14: invokevirtual #14                 // Method getN:()J
      17: l2d
      18: invokestatic  #16                 // Method org/apache/commons/math3/util/MathUtils.hash:(D)I
      21: iadd
      22: ireturn

  public org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method copy:()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
       4: areturn
}
