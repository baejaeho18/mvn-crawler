Compiled from "DerivativeStructure.java"
class org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject implements java.io.Serializable {
  private static final long serialVersionUID;

  private final int variables;

  private final int order;

  private final double[] data;

  org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject(int, int, double[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field variables:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field order:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field data:[D
      19: return

  private java.lang.Object readResolve();
    Code:
       0: new           #5                  // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #2                  // Field variables:I
       8: aload_0
       9: getfield      #3                  // Field order:I
      12: aload_0
      13: getfield      #4                  // Field data:[D
      16: invokespecial #6                  // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure."<init>":(II[D)V
      19: areturn
}
