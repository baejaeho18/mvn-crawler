Compiled from "Max.java"
public class org.apache.commons.math3.stat.descriptive.rank.Max extends org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic implements java.io.Serializable {
  private static final long serialVersionUID;

  private long n;

  private double value;

  public org.apache.commons.math3.stat.descriptive.rank.Max();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field n:J
       9: aload_0
      10: ldc2_w        #3                  // double NaNd
      13: putfield      #5                  // Field value:D
      16: return

  public org.apache.commons.math3.stat.descriptive.rank.Max(org.apache.commons.math3.stat.descriptive.rank.Max) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic."<init>":()V
       4: aload_1
       5: aload_0
       6: invokestatic  #6                  // Method copy:(Lorg/apache/commons/math3/stat/descriptive/rank/Max;Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V
       9: return

  public void increment(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #5                  // Field value:D
       5: dcmpl
       6: ifgt          19
       9: aload_0
      10: getfield      #5                  // Field value:D
      13: invokestatic  #7                  // Method java/lang/Double.isNaN:(D)Z
      16: ifeq          24
      19: aload_0
      20: dload_1
      21: putfield      #5                  // Field value:D
      24: aload_0
      25: dup
      26: getfield      #2                  // Field n:J
      29: lconst_1
      30: ladd
      31: putfield      #2                  // Field n:J
      34: return

  public void clear();
    Code:
       0: aload_0
       1: ldc2_w        #3                  // double NaNd
       4: putfield      #5                  // Field value:D
       7: aload_0
       8: lconst_0
       9: putfield      #2                  // Field n:J
      12: return

  public double getResult();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:D
       4: dreturn

  public long getN();
    Code:
       0: aload_0
       1: getfield      #2                  // Field n:J
       4: lreturn

  public double evaluate(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: ldc2_w        #3                  // double NaNd
       3: dstore        4
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: invokevirtual #8                  // Method test:([DII)Z
      12: ifeq          68
      15: aload_1
      16: iload_2
      17: daload
      18: dstore        4
      20: iload_2
      21: istore        6
      23: iload         6
      25: iload_2
      26: iload_3
      27: iadd
      28: if_icmpge     68
      31: aload_1
      32: iload         6
      34: daload
      35: invokestatic  #7                  // Method java/lang/Double.isNaN:(D)Z
      38: ifne          62
      41: dload         4
      43: aload_1
      44: iload         6
      46: daload
      47: dcmpl
      48: ifle          56
      51: dload         4
      53: goto          60
      56: aload_1
      57: iload         6
      59: daload
      60: dstore        4
      62: iinc          6, 1
      65: goto          23
      68: dload         4
      70: dreturn

  public org.apache.commons.math3.stat.descriptive.rank.Max copy();
    Code:
       0: new           #9                  // class org/apache/commons/math3/stat/descriptive/rank/Max
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #6                  // Method copy:(Lorg/apache/commons/math3/stat/descriptive/rank/Max;Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V
      13: aload_1
      14: areturn

  public static void copy(org.apache.commons.math3.stat.descriptive.rank.Max, org.apache.commons.math3.stat.descriptive.rank.Max) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: invokestatic  #11                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_1
       9: aload_0
      10: invokevirtual #12                 // Method getDataRef:()[D
      13: invokevirtual #13                 // Method setData:([D)V
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field n:J
      21: putfield      #2                  // Field n:J
      24: aload_1
      25: aload_0
      26: getfield      #5                  // Field value:D
      29: putfield      #5                  // Field value:D
      32: return

  public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method copy:()Lorg/apache/commons/math3/stat/descriptive/rank/Max;
       4: areturn

  public org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method copy:()Lorg/apache/commons/math3/stat/descriptive/rank/Max;
       4: areturn
}
