Compiled from "SaddlePointExpansion.java"
final class org.apache.commons.math3.distribution.SaddlePointExpansion {
  private static final double HALF_LOG_2_PI;

  private static final double[] EXACT_STIRLING_ERRORS;

  private org.apache.commons.math3.distribution.SaddlePointExpansion();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static double getStirlingError(double);
    Code:
       0: dload_0
       1: ldc2_w        #2                  // double 15.0d
       4: dcmpg
       5: ifge          64
       8: ldc2_w        #4                  // double 2.0d
      11: dload_0
      12: dmul
      13: dstore        4
      15: dload         4
      17: invokestatic  #6                  // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      20: dload         4
      22: dcmpl
      23: ifne          37
      26: getstatic     #7                  // Field EXACT_STIRLING_ERRORS:[D
      29: dload         4
      31: d2i
      32: daload
      33: dstore_2
      34: goto          61
      37: dload_0
      38: dconst_1
      39: dadd
      40: invokestatic  #8                  // Method org/apache/commons/math3/special/Gamma.logGamma:(D)D
      43: dload_0
      44: ldc2_w        #9                  // double 0.5d
      47: dadd
      48: dload_0
      49: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
      52: dmul
      53: dsub
      54: dload_0
      55: dadd
      56: getstatic     #12                 // Field HALF_LOG_2_PI:D
      59: dsub
      60: dstore_2
      61: goto          103
      64: dload_0
      65: dload_0
      66: dmul
      67: dstore        4
      69: ldc2_w        #13                 // double 0.08333333333333333d
      72: ldc2_w        #15                 // double 0.002777777777777778d
      75: ldc2_w        #17                 // double 7.936507936507937E-4d
      78: ldc2_w        #19                 // double 5.952380952380953E-4d
      81: ldc2_w        #21                 // double 8.417508417508417E-4d
      84: dload         4
      86: ddiv
      87: dsub
      88: dload         4
      90: ddiv
      91: dsub
      92: dload         4
      94: ddiv
      95: dsub
      96: dload         4
      98: ddiv
      99: dsub
     100: dload_0
     101: ddiv
     102: dstore_2
     103: dload_2
     104: dreturn

  static double getDeviancePart(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: dsub
       3: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
       6: ldc2_w        #24                 // double 0.1d
       9: dload_0
      10: dload_2
      11: dadd
      12: dmul
      13: dcmpg
      14: ifge          109
      17: dload_0
      18: dload_2
      19: dsub
      20: dstore        6
      22: dload         6
      24: dload_0
      25: dload_2
      26: dadd
      27: ddiv
      28: dstore        8
      30: dload         8
      32: dload         6
      34: dmul
      35: dstore        10
      37: ldc2_w        #26                 // double NaNd
      40: dstore        12
      42: ldc2_w        #4                  // double 2.0d
      45: dload_0
      46: dmul
      47: dload         8
      49: dmul
      50: dstore        14
      52: dload         8
      54: dload         8
      56: dmul
      57: dstore        8
      59: iconst_1
      60: istore        16
      62: dload         10
      64: dload         12
      66: dcmpl
      67: ifeq          102
      70: dload         10
      72: dstore        12
      74: dload         14
      76: dload         8
      78: dmul
      79: dstore        14
      81: dload         12
      83: dload         14
      85: iload         16
      87: iconst_2
      88: imul
      89: iconst_1
      90: iadd
      91: i2d
      92: ddiv
      93: dadd
      94: dstore        10
      96: iinc          16, 1
      99: goto          62
     102: dload         10
     104: dstore        4
     106: goto          123
     109: dload_0
     110: dload_0
     111: dload_2
     112: ddiv
     113: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
     116: dmul
     117: dload_2
     118: dadd
     119: dload_0
     120: dsub
     121: dstore        4
     123: dload         4
     125: dreturn

  static double logBinomialProbability(int, int, double, double);
    Code:
       0: iload_0
       1: ifne          46
       4: dload_2
       5: ldc2_w        #24                 // double 0.1d
       8: dcmpg
       9: ifge          33
      12: iload_1
      13: i2d
      14: iload_1
      15: i2d
      16: dload         4
      18: dmul
      19: invokestatic  #28                 // Method getDeviancePart:(DD)D
      22: dneg
      23: iload_1
      24: i2d
      25: dload_2
      26: dmul
      27: dsub
      28: dstore        6
      30: goto          167
      33: iload_1
      34: i2d
      35: dload         4
      37: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
      40: dmul
      41: dstore        6
      43: goto          167
      46: iload_0
      47: iload_1
      48: if_icmpne     93
      51: dload         4
      53: ldc2_w        #24                 // double 0.1d
      56: dcmpg
      57: ifge          81
      60: iload_1
      61: i2d
      62: iload_1
      63: i2d
      64: dload_2
      65: dmul
      66: invokestatic  #28                 // Method getDeviancePart:(DD)D
      69: dneg
      70: iload_1
      71: i2d
      72: dload         4
      74: dmul
      75: dsub
      76: dstore        6
      78: goto          167
      81: iload_1
      82: i2d
      83: dload_2
      84: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
      87: dmul
      88: dstore        6
      90: goto          167
      93: iload_1
      94: i2d
      95: invokestatic  #29                 // Method getStirlingError:(D)D
      98: iload_0
      99: i2d
     100: invokestatic  #29                 // Method getStirlingError:(D)D
     103: dsub
     104: iload_1
     105: iload_0
     106: isub
     107: i2d
     108: invokestatic  #29                 // Method getStirlingError:(D)D
     111: dsub
     112: iload_0
     113: i2d
     114: iload_1
     115: i2d
     116: dload_2
     117: dmul
     118: invokestatic  #28                 // Method getDeviancePart:(DD)D
     121: dsub
     122: iload_1
     123: iload_0
     124: isub
     125: i2d
     126: iload_1
     127: i2d
     128: dload         4
     130: dmul
     131: invokestatic  #28                 // Method getDeviancePart:(DD)D
     134: dsub
     135: dstore        6
     137: ldc2_w        #30                 // double 6.283185307179586d
     140: iload_0
     141: i2d
     142: dmul
     143: iload_1
     144: iload_0
     145: isub
     146: i2d
     147: dmul
     148: iload_1
     149: i2d
     150: ddiv
     151: dstore        8
     153: ldc2_w        #32                 // double -0.5d
     156: dload         8
     158: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
     161: dmul
     162: dload         6
     164: dadd
     165: dstore        6
     167: dload         6
     169: dreturn

  static {};
    Code:
       0: ldc2_w        #9                  // double 0.5d
       3: ldc2_w        #30                 // double 6.283185307179586d
       6: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
       9: dmul
      10: putstatic     #12                 // Field HALF_LOG_2_PI:D
      13: bipush        31
      15: newarray       double
      17: dup
      18: iconst_0
      19: dconst_0
      20: dastore
      21: dup
      22: iconst_1
      23: ldc2_w        #34                 // double 0.15342640972002736d
      26: dastore
      27: dup
      28: iconst_2
      29: ldc2_w        #36                 // double 0.08106146679532726d
      32: dastore
      33: dup
      34: iconst_3
      35: ldc2_w        #38                 // double 0.05481412105191765d
      38: dastore
      39: dup
      40: iconst_4
      41: ldc2_w        #40                 // double 0.0413406959554093d
      44: dastore
      45: dup
      46: iconst_5
      47: ldc2_w        #42                 // double 0.03316287351993629d
      50: dastore
      51: dup
      52: bipush        6
      54: ldc2_w        #44                 // double 0.02767792568499834d
      57: dastore
      58: dup
      59: bipush        7
      61: ldc2_w        #46                 // double 0.023746163656297496d
      64: dastore
      65: dup
      66: bipush        8
      68: ldc2_w        #48                 // double 0.020790672103765093d
      71: dastore
      72: dup
      73: bipush        9
      75: ldc2_w        #50                 // double 0.018488450532673187d
      78: dastore
      79: dup
      80: bipush        10
      82: ldc2_w        #52                 // double 0.016644691189821193d
      85: dastore
      86: dup
      87: bipush        11
      89: ldc2_w        #54                 // double 0.015134973221917378d
      92: dastore
      93: dup
      94: bipush        12
      96: ldc2_w        #56                 // double 0.013876128823070748d
      99: dastore
     100: dup
     101: bipush        13
     103: ldc2_w        #58                 // double 0.012810465242920227d
     106: dastore
     107: dup
     108: bipush        14
     110: ldc2_w        #60                 // double 0.01189670994589177d
     113: dastore
     114: dup
     115: bipush        15
     117: ldc2_w        #62                 // double 0.011104559758206917d
     120: dastore
     121: dup
     122: bipush        16
     124: ldc2_w        #64                 // double 0.010411265261972096d
     127: dastore
     128: dup
     129: bipush        17
     131: ldc2_w        #66                 // double 0.009799416126158804d
     134: dastore
     135: dup
     136: bipush        18
     138: ldc2_w        #68                 // double 0.009255462182712733d
     141: dastore
     142: dup
     143: bipush        19
     145: ldc2_w        #70                 // double 0.008768700134139386d
     148: dastore
     149: dup
     150: bipush        20
     152: ldc2_w        #72                 // double 0.00833056343336287d
     155: dastore
     156: dup
     157: bipush        21
     159: ldc2_w        #74                 // double 0.00793411456431402d
     162: dastore
     163: dup
     164: bipush        22
     166: ldc2_w        #76                 // double 0.007573675487951841d
     169: dastore
     170: dup
     171: bipush        23
     173: ldc2_w        #78                 // double 0.007244554301320383d
     176: dastore
     177: dup
     178: bipush        24
     180: ldc2_w        #80                 // double 0.00694284010720953d
     183: dastore
     184: dup
     185: bipush        25
     187: ldc2_w        #82                 // double 0.006665247032707682d
     190: dastore
     191: dup
     192: bipush        26
     194: ldc2_w        #84                 // double 0.006408994188004207d
     197: dastore
     198: dup
     199: bipush        27
     201: ldc2_w        #86                 // double 0.006171712263039458d
     204: dastore
     205: dup
     206: bipush        28
     208: ldc2_w        #88                 // double 0.0059513701127588475d
     211: dastore
     212: dup
     213: bipush        29
     215: ldc2_w        #90                 // double 0.0057462165130101155d
     218: dastore
     219: dup
     220: bipush        30
     222: ldc2_w        #92                 // double 0.005554733551962801d
     225: dastore
     226: putstatic     #7                  // Field EXACT_STIRLING_ERRORS:[D
     229: return
}
