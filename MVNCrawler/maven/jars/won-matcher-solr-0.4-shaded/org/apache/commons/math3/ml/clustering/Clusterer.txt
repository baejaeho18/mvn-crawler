Compiled from "Clusterer.java"
public abstract class org.apache.commons.math3.ml.clustering.Clusterer<T extends org.apache.commons.math3.ml.clustering.Clusterable> {
  private org.apache.commons.math3.ml.distance.DistanceMeasure measure;

  protected org.apache.commons.math3.ml.clustering.Clusterer(org.apache.commons.math3.ml.distance.DistanceMeasure);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field measure:Lorg/apache/commons/math3/ml/distance/DistanceMeasure;
       9: return

  public abstract java.util.List<? extends org.apache.commons.math3.ml.clustering.Cluster<T>> cluster(java.util.Collection<T>) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.ConvergenceException;

  public org.apache.commons.math3.ml.distance.DistanceMeasure getDistanceMeasure();
    Code:
       0: aload_0
       1: getfield      #2                  // Field measure:Lorg/apache/commons/math3/ml/distance/DistanceMeasure;
       4: areturn

  protected double distance(org.apache.commons.math3.ml.clustering.Clusterable, org.apache.commons.math3.ml.clustering.Clusterable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field measure:Lorg/apache/commons/math3/ml/distance/DistanceMeasure;
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod org/apache/commons/math3/ml/clustering/Clusterable.getPoint:()[D
      10: aload_2
      11: invokeinterface #3,  1            // InterfaceMethod org/apache/commons/math3/ml/clustering/Clusterable.getPoint:()[D
      16: invokeinterface #4,  3            // InterfaceMethod org/apache/commons/math3/ml/distance/DistanceMeasure.compute:([D[D)D
      21: dreturn
}
