Compiled from "BaseAbstractUnivariateOptimizer.java"
public abstract class org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer implements org.apache.commons.math3.optimization.univariate.UnivariateOptimizer {
  private final org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> checker;

  private final org.apache.commons.math3.util.Incrementor evaluations;

  private org.apache.commons.math3.optimization.GoalType goal;

  private double searchMin;

  private double searchMax;

  private double searchStart;

  private org.apache.commons.math3.analysis.UnivariateFunction function;

  protected org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/util/Incrementor
       8: dup
       9: invokespecial #3                  // Method org/apache/commons/math3/util/Incrementor."<init>":()V
      12: putfield      #4                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field checker:Lorg/apache/commons/math3/optimization/ConvergenceChecker;
      20: return

  public int getMaxEvaluations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
       4: invokevirtual #6                  // Method org/apache/commons/math3/util/Incrementor.getMaximalCount:()I
       7: ireturn

  public int getEvaluations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
       4: invokevirtual #7                  // Method org/apache/commons/math3/util/Incrementor.getCount:()I
       7: ireturn

  public org.apache.commons.math3.optimization.GoalType getGoalType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field goal:Lorg/apache/commons/math3/optimization/GoalType;
       4: areturn

  public double getMin();
    Code:
       0: aload_0
       1: getfield      #9                  // Field searchMin:D
       4: dreturn

  public double getMax();
    Code:
       0: aload_0
       1: getfield      #10                 // Field searchMax:D
       4: dreturn

  public double getStartValue();
    Code:
       0: aload_0
       1: getfield      #11                 // Field searchStart:D
       4: dreturn

  protected double computeObjectiveValue(double);
    Code:
       0: aload_0
       1: getfield      #4                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
       4: invokevirtual #12                 // Method org/apache/commons/math3/util/Incrementor.incrementCount:()V
       7: goto          23
      10: astore_3
      11: new           #14                 // class org/apache/commons/math3/exception/TooManyEvaluationsException
      14: dup
      15: aload_3
      16: invokevirtual #15                 // Method org/apache/commons/math3/exception/MaxCountExceededException.getMax:()Ljava/lang/Number;
      19: invokespecial #16                 // Method org/apache/commons/math3/exception/TooManyEvaluationsException."<init>":(Ljava/lang/Number;)V
      22: athrow
      23: aload_0
      24: getfield      #17                 // Field function:Lorg/apache/commons/math3/analysis/UnivariateFunction;
      27: dload_1
      28: invokeinterface #18,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
      33: dreturn
    Exception table:
       from    to  target type
           0     7    10   Class org/apache/commons/math3/exception/MaxCountExceededException

  public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optimization.GoalType, double, double, double);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: new           #19                 // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: invokespecial #20                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      11: athrow
      12: aload_3
      13: ifnonnull     24
      16: new           #19                 // class org/apache/commons/math3/exception/NullArgumentException
      19: dup
      20: invokespecial #20                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      23: athrow
      24: aload_0
      25: dload         4
      27: putfield      #9                  // Field searchMin:D
      30: aload_0
      31: dload         6
      33: putfield      #10                 // Field searchMax:D
      36: aload_0
      37: dload         8
      39: putfield      #11                 // Field searchStart:D
      42: aload_0
      43: aload_3
      44: putfield      #8                  // Field goal:Lorg/apache/commons/math3/optimization/GoalType;
      47: aload_0
      48: aload_2
      49: putfield      #17                 // Field function:Lorg/apache/commons/math3/analysis/UnivariateFunction;
      52: aload_0
      53: getfield      #4                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
      56: iload_1
      57: invokevirtual #21                 // Method org/apache/commons/math3/util/Incrementor.setMaximalCount:(I)V
      60: aload_0
      61: getfield      #4                  // Field evaluations:Lorg/apache/commons/math3/util/Incrementor;
      64: invokevirtual #22                 // Method org/apache/commons/math3/util/Incrementor.resetCount:()V
      67: aload_0
      68: invokevirtual #23                 // Method doOptimize:()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
      71: areturn

  public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optimization.GoalType, double, double);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: dload         4
       6: dload         6
       8: dload         4
      10: ldc2_w        #24                 // double 0.5d
      13: dload         6
      15: dload         4
      17: dsub
      18: dmul
      19: dadd
      20: invokevirtual #26                 // Method optimize:(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
      23: areturn

  public org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair> getConvergenceChecker();
    Code:
       0: aload_0
       1: getfield      #5                  // Field checker:Lorg/apache/commons/math3/optimization/ConvergenceChecker;
       4: areturn

  protected abstract org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair doOptimize();
}
