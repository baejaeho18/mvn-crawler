Compiled from "Circle.java"
class org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform implements org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.spherical.twod.Sphere2D, org.apache.commons.math3.geometry.spherical.oned.Sphere1D> {
  private final org.apache.commons.math3.geometry.euclidean.threed.Rotation rotation;

  org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform(org.apache.commons.math3.geometry.euclidean.threed.Rotation);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
       9: return

  public org.apache.commons.math3.geometry.spherical.twod.S2Point apply(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.twod.Sphere2D>);
    Code:
       0: new           #3                  // class org/apache/commons/math3/geometry/spherical/twod/S2Point
       3: dup
       4: aload_0
       5: getfield      #2                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
       8: aload_1
       9: checkcast     #3                  // class org/apache/commons/math3/geometry/spherical/twod/S2Point
      12: invokevirtual #4                  // Method org/apache/commons/math3/geometry/spherical/twod/S2Point.getVector:()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      15: invokevirtual #5                  // Method org/apache/commons/math3/geometry/euclidean/threed/Rotation.applyTo:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      18: invokespecial #6                  // Method org/apache/commons/math3/geometry/spherical/twod/S2Point."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      21: areturn

  public org.apache.commons.math3.geometry.spherical.twod.Circle apply(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.spherical.twod.Sphere2D>);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/apache/commons/math3/geometry/spherical/twod/Circle
       4: astore_2
       5: new           #7                  // class org/apache/commons/math3/geometry/spherical/twod/Circle
       8: dup
       9: aload_0
      10: getfield      #2                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
      13: aload_2
      14: invokestatic  #8                  // Method org/apache/commons/math3/geometry/spherical/twod/Circle.access$000:(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      17: invokevirtual #5                  // Method org/apache/commons/math3/geometry/euclidean/threed/Rotation.applyTo:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      20: aload_0
      21: getfield      #2                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
      24: aload_2
      25: invokestatic  #9                  // Method org/apache/commons/math3/geometry/spherical/twod/Circle.access$100:(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      28: invokevirtual #5                  // Method org/apache/commons/math3/geometry/euclidean/threed/Rotation.applyTo:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      31: aload_0
      32: getfield      #2                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
      35: aload_2
      36: invokestatic  #10                 // Method org/apache/commons/math3/geometry/spherical/twod/Circle.access$200:(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      39: invokevirtual #5                  // Method org/apache/commons/math3/geometry/euclidean/threed/Rotation.applyTo:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      42: aload_2
      43: invokestatic  #11                 // Method org/apache/commons/math3/geometry/spherical/twod/Circle.access$300:(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)D
      46: aconst_null
      47: invokespecial #12                 // Method org/apache/commons/math3/geometry/spherical/twod/Circle."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/spherical/twod/Circle$1;)V
      50: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.spherical.oned.Sphere1D> apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.spherical.oned.Sphere1D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.spherical.twod.Sphere2D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.spherical.twod.Sphere2D>);
    Code:
       0: aload_1
       1: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method apply:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
       5: areturn

  public org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method apply:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
       5: areturn
}
