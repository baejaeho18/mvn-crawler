Compiled from "Quaternion.java"
public final class org.apache.commons.math3.complex.Quaternion implements java.io.Serializable {
  public static final org.apache.commons.math3.complex.Quaternion IDENTITY;

  public static final org.apache.commons.math3.complex.Quaternion ZERO;

  public static final org.apache.commons.math3.complex.Quaternion I;

  public static final org.apache.commons.math3.complex.Quaternion J;

  public static final org.apache.commons.math3.complex.Quaternion K;

  private static final long serialVersionUID;

  private final double q0;

  private final double q1;

  private final double q2;

  private final double q3;

  public org.apache.commons.math3.complex.Quaternion(double, double, double, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #2                  // Field q0:D
       9: aload_0
      10: dload_3
      11: putfield      #3                  // Field q1:D
      14: aload_0
      15: dload         5
      17: putfield      #4                  // Field q2:D
      20: aload_0
      21: dload         7
      23: putfield      #5                  // Field q3:D
      26: return

  public org.apache.commons.math3.complex.Quaternion(double, double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_3
       5: arraylength
       6: iconst_3
       7: if_icmpeq     21
      10: new           #6                  // class org/apache/commons/math3/exception/DimensionMismatchException
      13: dup
      14: aload_3
      15: arraylength
      16: iconst_3
      17: invokespecial #7                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      20: athrow
      21: aload_0
      22: dload_1
      23: putfield      #2                  // Field q0:D
      26: aload_0
      27: aload_3
      28: iconst_0
      29: daload
      30: putfield      #3                  // Field q1:D
      33: aload_0
      34: aload_3
      35: iconst_1
      36: daload
      37: putfield      #4                  // Field q2:D
      40: aload_0
      41: aload_3
      42: iconst_2
      43: daload
      44: putfield      #5                  // Field q3:D
      47: return

  public org.apache.commons.math3.complex.Quaternion(double[]);
    Code:
       0: aload_0
       1: dconst_0
       2: aload_1
       3: invokespecial #8                  // Method "<init>":(D[D)V
       6: return

  public org.apache.commons.math3.complex.Quaternion getConjugate();
    Code:
       0: new           #9                  // class org/apache/commons/math3/complex/Quaternion
       3: dup
       4: aload_0
       5: getfield      #2                  // Field q0:D
       8: aload_0
       9: getfield      #3                  // Field q1:D
      12: dneg
      13: aload_0
      14: getfield      #4                  // Field q2:D
      17: dneg
      18: aload_0
      19: getfield      #5                  // Field q3:D
      22: dneg
      23: invokespecial #10                 // Method "<init>":(DDDD)V
      26: areturn

  public static org.apache.commons.math3.complex.Quaternion multiply(org.apache.commons.math3.complex.Quaternion, org.apache.commons.math3.complex.Quaternion);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getQ0:()D
       4: dstore_2
       5: aload_0
       6: invokevirtual #12                 // Method getQ1:()D
       9: dstore        4
      11: aload_0
      12: invokevirtual #13                 // Method getQ2:()D
      15: dstore        6
      17: aload_0
      18: invokevirtual #14                 // Method getQ3:()D
      21: dstore        8
      23: aload_1
      24: invokevirtual #11                 // Method getQ0:()D
      27: dstore        10
      29: aload_1
      30: invokevirtual #12                 // Method getQ1:()D
      33: dstore        12
      35: aload_1
      36: invokevirtual #13                 // Method getQ2:()D
      39: dstore        14
      41: aload_1
      42: invokevirtual #14                 // Method getQ3:()D
      45: dstore        16
      47: dload_2
      48: dload         10
      50: dmul
      51: dload         4
      53: dload         12
      55: dmul
      56: dsub
      57: dload         6
      59: dload         14
      61: dmul
      62: dsub
      63: dload         8
      65: dload         16
      67: dmul
      68: dsub
      69: dstore        18
      71: dload_2
      72: dload         12
      74: dmul
      75: dload         4
      77: dload         10
      79: dmul
      80: dadd
      81: dload         6
      83: dload         16
      85: dmul
      86: dadd
      87: dload         8
      89: dload         14
      91: dmul
      92: dsub
      93: dstore        20
      95: dload_2
      96: dload         14
      98: dmul
      99: dload         4
     101: dload         16
     103: dmul
     104: dsub
     105: dload         6
     107: dload         10
     109: dmul
     110: dadd
     111: dload         8
     113: dload         12
     115: dmul
     116: dadd
     117: dstore        22
     119: dload_2
     120: dload         16
     122: dmul
     123: dload         4
     125: dload         14
     127: dmul
     128: dadd
     129: dload         6
     131: dload         12
     133: dmul
     134: dsub
     135: dload         8
     137: dload         10
     139: dmul
     140: dadd
     141: dstore        24
     143: new           #9                  // class org/apache/commons/math3/complex/Quaternion
     146: dup
     147: dload         18
     149: dload         20
     151: dload         22
     153: dload         24
     155: invokespecial #10                 // Method "<init>":(DDDD)V
     158: areturn

  public org.apache.commons.math3.complex.Quaternion multiply(org.apache.commons.math3.complex.Quaternion);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method multiply:(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
       5: areturn

  public static org.apache.commons.math3.complex.Quaternion add(org.apache.commons.math3.complex.Quaternion, org.apache.commons.math3.complex.Quaternion);
    Code:
       0: new           #9                  // class org/apache/commons/math3/complex/Quaternion
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method getQ0:()D
       8: aload_1
       9: invokevirtual #11                 // Method getQ0:()D
      12: dadd
      13: aload_0
      14: invokevirtual #12                 // Method getQ1:()D
      17: aload_1
      18: invokevirtual #12                 // Method getQ1:()D
      21: dadd
      22: aload_0
      23: invokevirtual #13                 // Method getQ2:()D
      26: aload_1
      27: invokevirtual #13                 // Method getQ2:()D
      30: dadd
      31: aload_0
      32: invokevirtual #14                 // Method getQ3:()D
      35: aload_1
      36: invokevirtual #14                 // Method getQ3:()D
      39: dadd
      40: invokespecial #10                 // Method "<init>":(DDDD)V
      43: areturn

  public org.apache.commons.math3.complex.Quaternion add(org.apache.commons.math3.complex.Quaternion);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method add:(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
       5: areturn

  public static org.apache.commons.math3.complex.Quaternion subtract(org.apache.commons.math3.complex.Quaternion, org.apache.commons.math3.complex.Quaternion);
    Code:
       0: new           #9                  // class org/apache/commons/math3/complex/Quaternion
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method getQ0:()D
       8: aload_1
       9: invokevirtual #11                 // Method getQ0:()D
      12: dsub
      13: aload_0
      14: invokevirtual #12                 // Method getQ1:()D
      17: aload_1
      18: invokevirtual #12                 // Method getQ1:()D
      21: dsub
      22: aload_0
      23: invokevirtual #13                 // Method getQ2:()D
      26: aload_1
      27: invokevirtual #13                 // Method getQ2:()D
      30: dsub
      31: aload_0
      32: invokevirtual #14                 // Method getQ3:()D
      35: aload_1
      36: invokevirtual #14                 // Method getQ3:()D
      39: dsub
      40: invokespecial #10                 // Method "<init>":(DDDD)V
      43: areturn

  public org.apache.commons.math3.complex.Quaternion subtract(org.apache.commons.math3.complex.Quaternion);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method subtract:(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
       5: areturn

  public static double dotProduct(org.apache.commons.math3.complex.Quaternion, org.apache.commons.math3.complex.Quaternion);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getQ0:()D
       4: aload_1
       5: invokevirtual #11                 // Method getQ0:()D
       8: dmul
       9: aload_0
      10: invokevirtual #12                 // Method getQ1:()D
      13: aload_1
      14: invokevirtual #12                 // Method getQ1:()D
      17: dmul
      18: dadd
      19: aload_0
      20: invokevirtual #13                 // Method getQ2:()D
      23: aload_1
      24: invokevirtual #13                 // Method getQ2:()D
      27: dmul
      28: dadd
      29: aload_0
      30: invokevirtual #14                 // Method getQ3:()D
      33: aload_1
      34: invokevirtual #14                 // Method getQ3:()D
      37: dmul
      38: dadd
      39: dreturn

  public double dotProduct(org.apache.commons.math3.complex.Quaternion);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method dotProduct:(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)D
       5: dreturn

  public double getNorm();
    Code:
       0: aload_0
       1: getfield      #2                  // Field q0:D
       4: aload_0
       5: getfield      #2                  // Field q0:D
       8: dmul
       9: aload_0
      10: getfield      #3                  // Field q1:D
      13: aload_0
      14: getfield      #3                  // Field q1:D
      17: dmul
      18: dadd
      19: aload_0
      20: getfield      #4                  // Field q2:D
      23: aload_0
      24: getfield      #4                  // Field q2:D
      27: dmul
      28: dadd
      29: aload_0
      30: getfield      #5                  // Field q3:D
      33: aload_0
      34: getfield      #5                  // Field q3:D
      37: dmul
      38: dadd
      39: invokestatic  #19                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      42: dreturn

  public org.apache.commons.math3.complex.Quaternion normalize();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getNorm:()D
       4: dstore_1
       5: dload_1
       6: getstatic     #21                 // Field org/apache/commons/math3/util/Precision.SAFE_MIN:D
       9: dcmpg
      10: ifge          35
      13: new           #22                 // class org/apache/commons/math3/exception/ZeroException
      16: dup
      17: getstatic     #23                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      20: iconst_1
      21: anewarray     #24                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: dload_1
      27: invokestatic  #25                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      30: aastore
      31: invokespecial #26                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      34: athrow
      35: new           #9                  // class org/apache/commons/math3/complex/Quaternion
      38: dup
      39: aload_0
      40: getfield      #2                  // Field q0:D
      43: dload_1
      44: ddiv
      45: aload_0
      46: getfield      #3                  // Field q1:D
      49: dload_1
      50: ddiv
      51: aload_0
      52: getfield      #4                  // Field q2:D
      55: dload_1
      56: ddiv
      57: aload_0
      58: getfield      #5                  // Field q3:D
      61: dload_1
      62: ddiv
      63: invokespecial #10                 // Method "<init>":(DDDD)V
      66: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #9                  // class org/apache/commons/math3/complex/Quaternion
      11: ifeq          73
      14: aload_1
      15: checkcast     #9                  // class org/apache/commons/math3/complex/Quaternion
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field q0:D
      23: aload_2
      24: invokevirtual #11                 // Method getQ0:()D
      27: dcmpl
      28: ifne          71
      31: aload_0
      32: getfield      #3                  // Field q1:D
      35: aload_2
      36: invokevirtual #12                 // Method getQ1:()D
      39: dcmpl
      40: ifne          71
      43: aload_0
      44: getfield      #4                  // Field q2:D
      47: aload_2
      48: invokevirtual #13                 // Method getQ2:()D
      51: dcmpl
      52: ifne          71
      55: aload_0
      56: getfield      #5                  // Field q3:D
      59: aload_2
      60: invokevirtual #14                 // Method getQ3:()D
      63: dcmpl
      64: ifne          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn
      73: iconst_0
      74: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iconst_4
       4: newarray       double
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #2                  // Field q0:D
      12: dastore
      13: dup
      14: iconst_1
      15: aload_0
      16: getfield      #3                  // Field q1:D
      19: dastore
      20: dup
      21: iconst_2
      22: aload_0
      23: getfield      #4                  // Field q2:D
      26: dastore
      27: dup
      28: iconst_3
      29: aload_0
      30: getfield      #5                  // Field q3:D
      33: dastore
      34: astore_2
      35: aload_2
      36: arraylength
      37: istore_3
      38: iconst_0
      39: istore        4
      41: iload         4
      43: iload_3
      44: if_icmpge     74
      47: aload_2
      48: iload         4
      50: daload
      51: dstore        5
      53: dload         5
      55: invokestatic  #27                 // Method org/apache/commons/math3/util/MathUtils.hash:(D)I
      58: istore        7
      60: bipush        31
      62: iload_1
      63: imul
      64: iload         7
      66: iadd
      67: istore_1
      68: iinc          4, 1
      71: goto          41
      74: iload_1
      75: ireturn

  public boolean equals(org.apache.commons.math3.complex.Quaternion, double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field q0:D
       4: aload_1
       5: invokevirtual #11                 // Method getQ0:()D
       8: dload_2
       9: invokestatic  #28                 // Method org/apache/commons/math3/util/Precision.equals:(DDD)Z
      12: ifeq          64
      15: aload_0
      16: getfield      #3                  // Field q1:D
      19: aload_1
      20: invokevirtual #12                 // Method getQ1:()D
      23: dload_2
      24: invokestatic  #28                 // Method org/apache/commons/math3/util/Precision.equals:(DDD)Z
      27: ifeq          64
      30: aload_0
      31: getfield      #4                  // Field q2:D
      34: aload_1
      35: invokevirtual #13                 // Method getQ2:()D
      38: dload_2
      39: invokestatic  #28                 // Method org/apache/commons/math3/util/Precision.equals:(DDD)Z
      42: ifeq          64
      45: aload_0
      46: getfield      #5                  // Field q3:D
      49: aload_1
      50: invokevirtual #14                 // Method getQ3:()D
      53: dload_2
      54: invokestatic  #28                 // Method org/apache/commons/math3/util/Precision.equals:(DDD)Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public boolean isUnitQuaternion(double);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getNorm:()D
       4: dconst_1
       5: dload_1
       6: invokestatic  #28                 // Method org/apache/commons/math3/util/Precision.equals:(DDD)Z
       9: ireturn

  public boolean isPureQuaternion(double);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getQ0:()D
       4: invokestatic  #29                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
       7: dload_1
       8: dcmpg
       9: ifgt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public org.apache.commons.math3.complex.Quaternion getPositivePolarForm();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getQ0:()D
       4: dconst_0
       5: dcmpg
       6: ifge          42
       9: aload_0
      10: invokevirtual #30                 // Method normalize:()Lorg/apache/commons/math3/complex/Quaternion;
      13: astore_1
      14: new           #9                  // class org/apache/commons/math3/complex/Quaternion
      17: dup
      18: aload_1
      19: invokevirtual #11                 // Method getQ0:()D
      22: dneg
      23: aload_1
      24: invokevirtual #12                 // Method getQ1:()D
      27: dneg
      28: aload_1
      29: invokevirtual #13                 // Method getQ2:()D
      32: dneg
      33: aload_1
      34: invokevirtual #14                 // Method getQ3:()D
      37: dneg
      38: invokespecial #10                 // Method "<init>":(DDDD)V
      41: areturn
      42: aload_0
      43: invokevirtual #30                 // Method normalize:()Lorg/apache/commons/math3/complex/Quaternion;
      46: areturn

  public org.apache.commons.math3.complex.Quaternion getInverse();
    Code:
       0: aload_0
       1: getfield      #2                  // Field q0:D
       4: aload_0
       5: getfield      #2                  // Field q0:D
       8: dmul
       9: aload_0
      10: getfield      #3                  // Field q1:D
      13: aload_0
      14: getfield      #3                  // Field q1:D
      17: dmul
      18: dadd
      19: aload_0
      20: getfield      #4                  // Field q2:D
      23: aload_0
      24: getfield      #4                  // Field q2:D
      27: dmul
      28: dadd
      29: aload_0
      30: getfield      #5                  // Field q3:D
      33: aload_0
      34: getfield      #5                  // Field q3:D
      37: dmul
      38: dadd
      39: dstore_1
      40: dload_1
      41: getstatic     #21                 // Field org/apache/commons/math3/util/Precision.SAFE_MIN:D
      44: dcmpg
      45: ifge          70
      48: new           #22                 // class org/apache/commons/math3/exception/ZeroException
      51: dup
      52: getstatic     #23                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      55: iconst_1
      56: anewarray     #24                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: dload_1
      62: invokestatic  #25                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      65: aastore
      66: invokespecial #26                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      69: athrow
      70: new           #9                  // class org/apache/commons/math3/complex/Quaternion
      73: dup
      74: aload_0
      75: getfield      #2                  // Field q0:D
      78: dload_1
      79: ddiv
      80: aload_0
      81: getfield      #3                  // Field q1:D
      84: dneg
      85: dload_1
      86: ddiv
      87: aload_0
      88: getfield      #4                  // Field q2:D
      91: dneg
      92: dload_1
      93: ddiv
      94: aload_0
      95: getfield      #5                  // Field q3:D
      98: dneg
      99: dload_1
     100: ddiv
     101: invokespecial #10                 // Method "<init>":(DDDD)V
     104: areturn

  public double getQ0();
    Code:
       0: aload_0
       1: getfield      #2                  // Field q0:D
       4: dreturn

  public double getQ1();
    Code:
       0: aload_0
       1: getfield      #3                  // Field q1:D
       4: dreturn

  public double getQ2();
    Code:
       0: aload_0
       1: getfield      #4                  // Field q2:D
       4: dreturn

  public double getQ3();
    Code:
       0: aload_0
       1: getfield      #5                  // Field q3:D
       4: dreturn

  public double getScalarPart();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getQ0:()D
       4: dreturn

  public double[] getVectorPart();
    Code:
       0: iconst_3
       1: newarray       double
       3: dup
       4: iconst_0
       5: aload_0
       6: invokevirtual #12                 // Method getQ1:()D
       9: dastore
      10: dup
      11: iconst_1
      12: aload_0
      13: invokevirtual #13                 // Method getQ2:()D
      16: dastore
      17: dup
      18: iconst_2
      19: aload_0
      20: invokevirtual #14                 // Method getQ3:()D
      23: dastore
      24: areturn

  public org.apache.commons.math3.complex.Quaternion multiply(double);
    Code:
       0: new           #9                  // class org/apache/commons/math3/complex/Quaternion
       3: dup
       4: dload_1
       5: aload_0
       6: getfield      #2                  // Field q0:D
       9: dmul
      10: dload_1
      11: aload_0
      12: getfield      #3                  // Field q1:D
      15: dmul
      16: dload_1
      17: aload_0
      18: getfield      #4                  // Field q2:D
      21: dmul
      22: dload_1
      23: aload_0
      24: getfield      #5                  // Field q3:D
      27: dmul
      28: invokespecial #10                 // Method "<init>":(DDDD)V
      31: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #31                 // String
       2: astore_1
       3: new           #32                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      10: astore_2
      11: aload_2
      12: ldc           #34                 // String [
      14: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: getfield      #2                  // Field q0:D
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      24: ldc           #31                 // String
      26: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #3                  // Field q1:D
      33: invokevirtual #36                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      36: ldc           #31                 // String
      38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #4                  // Field q2:D
      45: invokevirtual #36                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      48: ldc           #31                 // String
      50: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #5                  // Field q3:D
      57: invokevirtual #36                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      60: ldc           #37                 // String ]
      62: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_2
      67: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  static {};
    Code:
       0: new           #9                  // class org/apache/commons/math3/complex/Quaternion
       3: dup
       4: dconst_1
       5: dconst_0
       6: dconst_0
       7: dconst_0
       8: invokespecial #10                 // Method "<init>":(DDDD)V
      11: putstatic     #39                 // Field IDENTITY:Lorg/apache/commons/math3/complex/Quaternion;
      14: new           #9                  // class org/apache/commons/math3/complex/Quaternion
      17: dup
      18: dconst_0
      19: dconst_0
      20: dconst_0
      21: dconst_0
      22: invokespecial #10                 // Method "<init>":(DDDD)V
      25: putstatic     #40                 // Field ZERO:Lorg/apache/commons/math3/complex/Quaternion;
      28: new           #9                  // class org/apache/commons/math3/complex/Quaternion
      31: dup
      32: dconst_0
      33: dconst_1
      34: dconst_0
      35: dconst_0
      36: invokespecial #10                 // Method "<init>":(DDDD)V
      39: putstatic     #41                 // Field I:Lorg/apache/commons/math3/complex/Quaternion;
      42: new           #9                  // class org/apache/commons/math3/complex/Quaternion
      45: dup
      46: dconst_0
      47: dconst_0
      48: dconst_1
      49: dconst_0
      50: invokespecial #10                 // Method "<init>":(DDDD)V
      53: putstatic     #42                 // Field J:Lorg/apache/commons/math3/complex/Quaternion;
      56: new           #9                  // class org/apache/commons/math3/complex/Quaternion
      59: dup
      60: dconst_0
      61: dconst_0
      62: dconst_0
      63: dconst_1
      64: invokespecial #10                 // Method "<init>":(DDDD)V
      67: putstatic     #43                 // Field K:Lorg/apache/commons/math3/complex/Quaternion;
      70: return
}
