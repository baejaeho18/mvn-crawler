Compiled from "RungeKuttaIntegrator.java"
public abstract class org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator extends org.apache.commons.math3.ode.AbstractIntegrator {
  private final double[] c;

  private final double[][] a;

  private final double[] b;

  private final org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator prototype;

  private final double step;

  protected org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator(java.lang.String, double[], double[][], double[], org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/ode/AbstractIntegrator."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field c:[D
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field a:[[D
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field b:[D
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field prototype:Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;
      27: aload_0
      28: dload         6
      30: invokestatic  #6                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      33: putfield      #7                  // Field step:D
      36: return

  public void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException;
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: invokevirtual #8                  // Method sanityChecks:(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
       6: aload_0
       7: aload_1
       8: invokevirtual #9                  // Method setEquations:(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V
      11: dload_2
      12: aload_1
      13: invokevirtual #10                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getTime:()D
      16: dcmpl
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore        4
      27: aload_1
      28: invokevirtual #11                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getCompleteState:()[D
      31: astore        5
      33: aload         5
      35: invokevirtual #12                 // Method "[D".clone:()Ljava/lang/Object;
      38: checkcast     #13                 // class "[D"
      41: astore        6
      43: aload_0
      44: getfield      #2                  // Field c:[D
      47: arraylength
      48: iconst_1
      49: iadd
      50: istore        7
      52: iload         7
      54: anewarray     #13                 // class "[D"
      57: astore        8
      59: iconst_0
      60: istore        9
      62: iload         9
      64: iload         7
      66: if_icmpge     85
      69: aload         8
      71: iload         9
      73: aload         5
      75: arraylength
      76: newarray       double
      78: aastore
      79: iinc          9, 1
      82: goto          62
      85: aload         5
      87: invokevirtual #14                 // Method "[D".clone:()Ljava/lang/Object;
      90: checkcast     #13                 // class "[D"
      93: astore        9
      95: aload         5
      97: arraylength
      98: newarray       double
     100: astore        10
     102: aload_0
     103: getfield      #5                  // Field prototype:Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;
     106: invokevirtual #15                 // Method org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.copy:()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
     109: checkcast     #16                 // class org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator
     112: astore        11
     114: aload         11
     116: aload_0
     117: aload         9
     119: aload         8
     121: iload         4
     123: aload_1
     124: invokevirtual #17                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getPrimaryMapper:()Lorg/apache/commons/math3/ode/EquationsMapper;
     127: aload_1
     128: invokevirtual #18                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getSecondaryMappers:()[Lorg/apache/commons/math3/ode/EquationsMapper;
     131: invokevirtual #19                 // Method org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.reinitialize:(Lorg/apache/commons/math3/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
     134: aload         11
     136: aload_1
     137: invokevirtual #10                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getTime:()D
     140: invokevirtual #20                 // Method org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.storeTime:(D)V
     143: aload_0
     144: aload_1
     145: invokevirtual #10                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getTime:()D
     148: putfield      #21                 // Field stepStart:D
     151: iload         4
     153: ifeq          194
     156: aload_0
     157: getfield      #21                 // Field stepStart:D
     160: aload_0
     161: getfield      #7                  // Field step:D
     164: dadd
     165: dload_2
     166: dcmpl
     167: iflt          183
     170: aload_0
     171: dload_2
     172: aload_0
     173: getfield      #21                 // Field stepStart:D
     176: dsub
     177: putfield      #22                 // Field stepSize:D
     180: goto          230
     183: aload_0
     184: aload_0
     185: getfield      #7                  // Field step:D
     188: putfield      #22                 // Field stepSize:D
     191: goto          230
     194: aload_0
     195: getfield      #21                 // Field stepStart:D
     198: aload_0
     199: getfield      #7                  // Field step:D
     202: dsub
     203: dload_2
     204: dcmpg
     205: ifgt          221
     208: aload_0
     209: dload_2
     210: aload_0
     211: getfield      #21                 // Field stepStart:D
     214: dsub
     215: putfield      #22                 // Field stepSize:D
     218: goto          230
     221: aload_0
     222: aload_0
     223: getfield      #7                  // Field step:D
     226: dneg
     227: putfield      #22                 // Field stepSize:D
     230: aload_0
     231: aload_1
     232: invokevirtual #10                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getTime:()D
     235: aload         5
     237: dload_2
     238: invokevirtual #23                 // Method initIntegration:(D[DD)V
     241: aload_0
     242: iconst_0
     243: putfield      #24                 // Field isLastStep:Z
     246: aload         11
     248: invokevirtual #25                 // Method org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.shift:()V
     251: aload_0
     252: aload_0
     253: getfield      #21                 // Field stepStart:D
     256: aload         6
     258: aload         8
     260: iconst_0
     261: aaload
     262: invokevirtual #26                 // Method computeDerivatives:(D[D[D)V
     265: iconst_1
     266: istore        12
     268: iload         12
     270: iload         7
     272: if_icmpge     409
     275: iconst_0
     276: istore        13
     278: iload         13
     280: aload         5
     282: arraylength
     283: if_icmpge     373
     286: aload_0
     287: getfield      #3                  // Field a:[[D
     290: iload         12
     292: iconst_1
     293: isub
     294: aaload
     295: iconst_0
     296: daload
     297: aload         8
     299: iconst_0
     300: aaload
     301: iload         13
     303: daload
     304: dmul
     305: dstore        14
     307: iconst_1
     308: istore        16
     310: iload         16
     312: iload         12
     314: if_icmpge     349
     317: dload         14
     319: aload_0
     320: getfield      #3                  // Field a:[[D
     323: iload         12
     325: iconst_1
     326: isub
     327: aaload
     328: iload         16
     330: daload
     331: aload         8
     333: iload         16
     335: aaload
     336: iload         13
     338: daload
     339: dmul
     340: dadd
     341: dstore        14
     343: iinc          16, 1
     346: goto          310
     349: aload         9
     351: iload         13
     353: aload         6
     355: iload         13
     357: daload
     358: aload_0
     359: getfield      #22                 // Field stepSize:D
     362: dload         14
     364: dmul
     365: dadd
     366: dastore
     367: iinc          13, 1
     370: goto          278
     373: aload_0
     374: aload_0
     375: getfield      #21                 // Field stepStart:D
     378: aload_0
     379: getfield      #2                  // Field c:[D
     382: iload         12
     384: iconst_1
     385: isub
     386: daload
     387: aload_0
     388: getfield      #22                 // Field stepSize:D
     391: dmul
     392: dadd
     393: aload         9
     395: aload         8
     397: iload         12
     399: aaload
     400: invokevirtual #26                 // Method computeDerivatives:(D[D[D)V
     403: iinc          12, 1
     406: goto          268
     409: iconst_0
     410: istore        12
     412: iload         12
     414: aload         5
     416: arraylength
     417: if_icmpge     497
     420: aload_0
     421: getfield      #4                  // Field b:[D
     424: iconst_0
     425: daload
     426: aload         8
     428: iconst_0
     429: aaload
     430: iload         12
     432: daload
     433: dmul
     434: dstore        13
     436: iconst_1
     437: istore        15
     439: iload         15
     441: iload         7
     443: if_icmpge     473
     446: dload         13
     448: aload_0
     449: getfield      #4                  // Field b:[D
     452: iload         15
     454: daload
     455: aload         8
     457: iload         15
     459: aaload
     460: iload         12
     462: daload
     463: dmul
     464: dadd
     465: dstore        13
     467: iinc          15, 1
     470: goto          439
     473: aload         9
     475: iload         12
     477: aload         6
     479: iload         12
     481: daload
     482: aload_0
     483: getfield      #22                 // Field stepSize:D
     486: dload         13
     488: dmul
     489: dadd
     490: dastore
     491: iinc          12, 1
     494: goto          412
     497: aload         11
     499: aload_0
     500: getfield      #21                 // Field stepStart:D
     503: aload_0
     504: getfield      #22                 // Field stepSize:D
     507: dadd
     508: invokevirtual #20                 // Method org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.storeTime:(D)V
     511: aload         9
     513: iconst_0
     514: aload         6
     516: iconst_0
     517: aload         5
     519: arraylength
     520: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     523: aload         8
     525: iload         7
     527: iconst_1
     528: isub
     529: aaload
     530: iconst_0
     531: aload         10
     533: iconst_0
     534: aload         5
     536: arraylength
     537: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     540: aload_0
     541: aload_0
     542: aload         11
     544: aload         6
     546: aload         10
     548: dload_2
     549: invokevirtual #28                 // Method acceptStep:(Lorg/apache/commons/math3/ode/sampling/AbstractStepInterpolator;[D[DD)D
     552: putfield      #21                 // Field stepStart:D
     555: aload_0
     556: getfield      #24                 // Field isLastStep:Z
     559: ifne          631
     562: aload         11
     564: aload_0
     565: getfield      #21                 // Field stepStart:D
     568: invokevirtual #20                 // Method org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.storeTime:(D)V
     571: aload_0
     572: getfield      #21                 // Field stepStart:D
     575: aload_0
     576: getfield      #22                 // Field stepSize:D
     579: dadd
     580: dstore        12
     582: iload         4
     584: ifeq          602
     587: dload         12
     589: dload_2
     590: dcmpl
     591: iflt          598
     594: iconst_1
     595: goto          614
     598: iconst_0
     599: goto          614
     602: dload         12
     604: dload_2
     605: dcmpg
     606: ifgt          613
     609: iconst_1
     610: goto          614
     613: iconst_0
     614: istore        14
     616: iload         14
     618: ifeq          631
     621: aload_0
     622: dload_2
     623: aload_0
     624: getfield      #21                 // Field stepStart:D
     627: dsub
     628: putfield      #22                 // Field stepSize:D
     631: aload_0
     632: getfield      #24                 // Field isLastStep:Z
     635: ifeq          246
     638: aload_1
     639: aload_0
     640: getfield      #21                 // Field stepStart:D
     643: invokevirtual #29                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.setTime:(D)V
     646: aload_1
     647: aload         6
     649: invokevirtual #30                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.setCompleteState:([D)V
     652: aload_0
     653: ldc2_w        #31                 // double NaNd
     656: putfield      #21                 // Field stepStart:D
     659: aload_0
     660: ldc2_w        #31                 // double NaNd
     663: putfield      #22                 // Field stepSize:D
     666: return

  public double[] singleStep(org.apache.commons.math3.ode.FirstOrderDifferentialEquations, double, double[], double);
    Code:
       0: aload         4
       2: invokevirtual #33                 // Method "[D".clone:()Ljava/lang/Object;
       5: checkcast     #13                 // class "[D"
       8: astore        7
      10: aload_0
      11: getfield      #2                  // Field c:[D
      14: arraylength
      15: iconst_1
      16: iadd
      17: istore        8
      19: iload         8
      21: anewarray     #13                 // class "[D"
      24: astore        9
      26: iconst_0
      27: istore        10
      29: iload         10
      31: iload         8
      33: if_icmpge     52
      36: aload         9
      38: iload         10
      40: aload         4
      42: arraylength
      43: newarray       double
      45: aastore
      46: iinc          10, 1
      49: goto          29
      52: aload         4
      54: invokevirtual #34                 // Method "[D".clone:()Ljava/lang/Object;
      57: checkcast     #13                 // class "[D"
      60: astore        10
      62: dload         5
      64: dload_2
      65: dsub
      66: dstore        11
      68: aload_1
      69: dload_2
      70: aload         7
      72: aload         9
      74: iconst_0
      75: aaload
      76: invokeinterface #35,  5           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderDifferentialEquations.computeDerivatives:(D[D[D)V
      81: iconst_1
      82: istore        13
      84: iload         13
      86: iload         8
      88: if_icmpge     220
      91: iconst_0
      92: istore        14
      94: iload         14
      96: aload         4
      98: arraylength
      99: if_icmpge     187
     102: aload_0
     103: getfield      #3                  // Field a:[[D
     106: iload         13
     108: iconst_1
     109: isub
     110: aaload
     111: iconst_0
     112: daload
     113: aload         9
     115: iconst_0
     116: aaload
     117: iload         14
     119: daload
     120: dmul
     121: dstore        15
     123: iconst_1
     124: istore        17
     126: iload         17
     128: iload         13
     130: if_icmpge     165
     133: dload         15
     135: aload_0
     136: getfield      #3                  // Field a:[[D
     139: iload         13
     141: iconst_1
     142: isub
     143: aaload
     144: iload         17
     146: daload
     147: aload         9
     149: iload         17
     151: aaload
     152: iload         14
     154: daload
     155: dmul
     156: dadd
     157: dstore        15
     159: iinc          17, 1
     162: goto          126
     165: aload         10
     167: iload         14
     169: aload         7
     171: iload         14
     173: daload
     174: dload         11
     176: dload         15
     178: dmul
     179: dadd
     180: dastore
     181: iinc          14, 1
     184: goto          94
     187: aload_1
     188: dload_2
     189: aload_0
     190: getfield      #2                  // Field c:[D
     193: iload         13
     195: iconst_1
     196: isub
     197: daload
     198: dload         11
     200: dmul
     201: dadd
     202: aload         10
     204: aload         9
     206: iload         13
     208: aaload
     209: invokeinterface #35,  5           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderDifferentialEquations.computeDerivatives:(D[D[D)V
     214: iinc          13, 1
     217: goto          84
     220: iconst_0
     221: istore        13
     223: iload         13
     225: aload         4
     227: arraylength
     228: if_icmpge     303
     231: aload_0
     232: getfield      #4                  // Field b:[D
     235: iconst_0
     236: daload
     237: aload         9
     239: iconst_0
     240: aaload
     241: iload         13
     243: daload
     244: dmul
     245: dstore        14
     247: iconst_1
     248: istore        16
     250: iload         16
     252: iload         8
     254: if_icmpge     284
     257: dload         14
     259: aload_0
     260: getfield      #4                  // Field b:[D
     263: iload         16
     265: daload
     266: aload         9
     268: iload         16
     270: aaload
     271: iload         13
     273: daload
     274: dmul
     275: dadd
     276: dstore        14
     278: iinc          16, 1
     281: goto          250
     284: aload         7
     286: iload         13
     288: dup2
     289: daload
     290: dload         11
     292: dload         14
     294: dmul
     295: dadd
     296: dastore
     297: iinc          13, 1
     300: goto          223
     303: aload         7
     305: areturn
}
