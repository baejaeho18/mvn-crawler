Compiled from "LimitAngle.java"
public class org.apache.commons.math3.geometry.spherical.oned.LimitAngle implements org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.spherical.oned.Sphere1D> {
  private org.apache.commons.math3.geometry.spherical.oned.S1Point location;

  private boolean direct;

  private final double tolerance;

  public org.apache.commons.math3.geometry.spherical.oned.LimitAngle(org.apache.commons.math3.geometry.spherical.oned.S1Point, boolean, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field location:Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field direct:Z
      14: aload_0
      15: dload_3
      16: putfield      #4                  // Field tolerance:D
      19: return

  public org.apache.commons.math3.geometry.spherical.oned.LimitAngle copySelf();
    Code:
       0: aload_0
       1: areturn

  public double getOffset(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.oned.Sphere1D>);
    Code:
       0: aload_1
       1: checkcast     #5                  // class org/apache/commons/math3/geometry/spherical/oned/S1Point
       4: invokevirtual #6                  // Method org/apache/commons/math3/geometry/spherical/oned/S1Point.getAlpha:()D
       7: aload_0
       8: getfield      #2                  // Field location:Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
      11: invokevirtual #6                  // Method org/apache/commons/math3/geometry/spherical/oned/S1Point.getAlpha:()D
      14: dsub
      15: dstore_2
      16: aload_0
      17: getfield      #3                  // Field direct:Z
      20: ifeq          27
      23: dload_2
      24: goto          29
      27: dload_2
      28: dneg
      29: dreturn

  public boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #3                  // Field direct:Z
       4: ireturn

  public org.apache.commons.math3.geometry.spherical.oned.LimitAngle getReverse();
    Code:
       0: new           #7                  // class org/apache/commons/math3/geometry/spherical/oned/LimitAngle
       3: dup
       4: aload_0
       5: getfield      #2                  // Field location:Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
       8: aload_0
       9: getfield      #3                  // Field direct:Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: aload_0
      21: getfield      #4                  // Field tolerance:D
      24: invokespecial #8                  // Method "<init>":(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;ZD)V
      27: areturn

  public org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle wholeHyperplane();
    Code:
       0: new           #9                  // class org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #10                 // Method org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle."<init>":(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
       9: areturn

  public org.apache.commons.math3.geometry.spherical.oned.ArcsSet wholeSpace();
    Code:
       0: new           #11                 // class org/apache/commons/math3/geometry/spherical/oned/ArcsSet
       3: dup
       4: aload_0
       5: getfield      #4                  // Field tolerance:D
       8: invokespecial #12                 // Method org/apache/commons/math3/geometry/spherical/oned/ArcsSet."<init>":(D)V
      11: areturn

  public boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.spherical.oned.Sphere1D>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field direct:Z
       4: aload_1
       5: checkcast     #7                  // class org/apache/commons/math3/geometry/spherical/oned/LimitAngle
       8: getfield      #3                  // Field direct:Z
      11: ixor
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public org.apache.commons.math3.geometry.spherical.oned.S1Point getLocation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field location:Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
       4: areturn

  public org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.oned.Sphere1D> project(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.oned.Sphere1D>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field location:Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
       4: areturn

  public double getTolerance();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tolerance:D
       4: dreturn

  public org.apache.commons.math3.geometry.partitioning.Region wholeSpace();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method wholeSpace:()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
       4: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method wholeHyperplane:()Lorg/apache/commons/math3/geometry/spherical/oned/SubLimitAngle;
       4: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane copySelf();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method copySelf:()Lorg/apache/commons/math3/geometry/spherical/oned/LimitAngle;
       4: areturn
}
