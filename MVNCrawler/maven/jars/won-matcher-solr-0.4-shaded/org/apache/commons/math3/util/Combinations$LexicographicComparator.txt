Compiled from "Combinations.java"
class org.apache.commons.math3.util.Combinations$LexicographicComparator implements java.util.Comparator<int[]>, java.io.Serializable {
  private static final long serialVersionUID;

  private final int n;

  private final int k;

  org.apache.commons.math3.util.Combinations$LexicographicComparator(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field n:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field k:I
      14: return

  public int compare(int[], int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #3                  // Field k:I
       6: if_icmpeq     23
       9: new           #4                  // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_1
      14: arraylength
      15: aload_0
      16: getfield      #3                  // Field k:I
      19: invokespecial #5                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: aload_2
      24: arraylength
      25: aload_0
      26: getfield      #3                  // Field k:I
      29: if_icmpeq     46
      32: new           #4                  // class org/apache/commons/math3/exception/DimensionMismatchException
      35: dup
      36: aload_2
      37: arraylength
      38: aload_0
      39: getfield      #3                  // Field k:I
      42: invokespecial #5                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      45: athrow
      46: aload_1
      47: invokestatic  #6                  // Method org/apache/commons/math3/util/MathArrays.copyOf:([I)[I
      50: astore_3
      51: aload_3
      52: invokestatic  #7                  // Method java/util/Arrays.sort:([I)V
      55: aload_2
      56: invokestatic  #6                  // Method org/apache/commons/math3/util/MathArrays.copyOf:([I)[I
      59: astore        4
      61: aload         4
      63: invokestatic  #7                  // Method java/util/Arrays.sort:([I)V
      66: aload_0
      67: aload_3
      68: invokespecial #8                  // Method lexNorm:([I)J
      71: lstore        5
      73: aload_0
      74: aload         4
      76: invokespecial #8                  // Method lexNorm:([I)J
      79: lstore        7
      81: lload         5
      83: lload         7
      85: lcmp
      86: ifge          91
      89: iconst_m1
      90: ireturn
      91: lload         5
      93: lload         7
      95: lcmp
      96: ifle          101
      99: iconst_1
     100: ireturn
     101: iconst_0
     102: ireturn

  private long lexNorm(int[]);
    Code:
       0: lconst_0
       1: lstore_2
       2: iconst_0
       3: istore        4
       5: iload         4
       7: aload_1
       8: arraylength
       9: if_icmpge     82
      12: aload_1
      13: iload         4
      15: iaload
      16: istore        5
      18: iload         5
      20: iflt          32
      23: iload         5
      25: aload_0
      26: getfield      #2                  // Field n:I
      29: if_icmplt     58
      32: new           #9                  // class org/apache/commons/math3/exception/OutOfRangeException
      35: dup
      36: iload         5
      38: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: iconst_0
      42: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: aload_0
      46: getfield      #2                  // Field n:I
      49: iconst_1
      50: isub
      51: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: invokespecial #11                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      57: athrow
      58: lload_2
      59: aload_1
      60: iload         4
      62: iaload
      63: aload_0
      64: getfield      #2                  // Field n:I
      67: iload         4
      69: invokestatic  #12                 // Method org/apache/commons/math3/util/ArithmeticUtils.pow:(II)I
      72: imul
      73: i2l
      74: ladd
      75: lstore_2
      76: iinc          4, 1
      79: goto          5
      82: lload_2
      83: lreturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class "[I"
       5: aload_2
       6: checkcast     #13                 // class "[I"
       9: invokevirtual #14                 // Method compare:([I[I)I
      12: ireturn
}
