Compiled from "Array2DRowFieldMatrix.java"
public class org.apache.commons.math3.linear.Array2DRowFieldMatrix<T extends org.apache.commons.math3.FieldElement<T>> extends org.apache.commons.math3.linear.AbstractFieldMatrix<T> implements java.io.Serializable {
  private static final long serialVersionUID;

  private T[][] data;

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #2                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokestatic  #3                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      14: checkcast     #4                  // class "[[Lorg/apache/commons/math3/FieldElement;"
      17: putfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      20: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[][]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method extractField:([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
       5: aload_1
       6: invokespecial #7                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;)V
       9: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, T[][]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: aload_0
       6: aload_2
       7: invokespecial #8                  // Method copyIn:([[Lorg/apache/commons/math3/FieldElement;)V
      10: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[][], boolean) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method extractField:([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
       5: aload_1
       6: iload_2
       7: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
      10: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, T[][], boolean) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: iload_3
       6: ifeq          17
       9: aload_0
      10: aload_2
      11: invokespecial #8                  // Method copyIn:([[Lorg/apache/commons/math3/FieldElement;)V
      14: goto          109
      17: aload_2
      18: invokestatic  #10                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      21: aload_2
      22: arraylength
      23: istore        4
      25: iload         4
      27: ifne          41
      30: new           #11                 // class org/apache/commons/math3/exception/NoDataException
      33: dup
      34: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_ROW:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      37: invokespecial #13                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      40: athrow
      41: aload_2
      42: iconst_0
      43: aaload
      44: arraylength
      45: istore        5
      47: iload         5
      49: ifne          63
      52: new           #11                 // class org/apache/commons/math3/exception/NoDataException
      55: dup
      56: getstatic     #14                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_COLUMN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      59: invokespecial #13                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      62: athrow
      63: iconst_1
      64: istore        6
      66: iload         6
      68: iload         4
      70: if_icmpge     104
      73: aload_2
      74: iload         6
      76: aaload
      77: arraylength
      78: iload         5
      80: if_icmpeq     98
      83: new           #15                 // class org/apache/commons/math3/exception/DimensionMismatchException
      86: dup
      87: iload         5
      89: aload_2
      90: iload         6
      92: aaload
      93: arraylength
      94: invokespecial #16                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      97: athrow
      98: iinc          6, 1
     101: goto          66
     104: aload_0
     105: aload_2
     106: putfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     109: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[]) throws org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method extractField:([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
       5: aload_1
       6: invokespecial #18                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
       9: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, T[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: aload_2
       6: arraylength
       7: istore_3
       8: aload_0
       9: aload_0
      10: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: iload_3
      14: iconst_1
      15: invokestatic  #3                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      18: checkcast     #4                  // class "[[Lorg/apache/commons/math3/FieldElement;"
      21: putfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     52
      33: aload_0
      34: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      37: iload         4
      39: aaload
      40: iconst_0
      41: aload_2
      42: iload         4
      44: aaload
      45: aastore
      46: iinc          4, 1
      49: goto          27
      52: return

  public org.apache.commons.math3.linear.FieldMatrix<T> createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #20                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: iload_1
       9: iload_2
      10: invokespecial #21                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      13: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> copy();
    Code:
       0: new           #20                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: aload_0
       9: invokespecial #22                 // Method copyOut:()[[Lorg/apache/commons/math3/FieldElement;
      12: iconst_0
      13: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
      16: areturn

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> add(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method checkAdditionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: aload_0
       6: invokevirtual #24                 // Method getRowDimension:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #25                 // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      19: iload_2
      20: iload_3
      21: invokestatic  #3                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      24: checkcast     #4                  // class "[[Lorg/apache/commons/math3/FieldElement;"
      27: astore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload_2
      35: if_icmpge     107
      38: aload_0
      39: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      42: iload         5
      44: aaload
      45: astore        6
      47: aload_1
      48: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      51: iload         5
      53: aaload
      54: astore        7
      56: aload         4
      58: iload         5
      60: aaload
      61: astore        8
      63: iconst_0
      64: istore        9
      66: iload         9
      68: iload_3
      69: if_icmpge     101
      72: aload         8
      74: iload         9
      76: aload         6
      78: iload         9
      80: aaload
      81: aload         7
      83: iload         9
      85: aaload
      86: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      91: checkcast     #27                 // class org/apache/commons/math3/FieldElement
      94: aastore
      95: iinc          9, 1
      98: goto          66
     101: iinc          5, 1
     104: goto          32
     107: new           #20                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
     110: dup
     111: aload_0
     112: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
     115: aload         4
     117: iconst_0
     118: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
     121: areturn

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: aload_0
       6: invokevirtual #24                 // Method getRowDimension:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #25                 // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      19: iload_2
      20: iload_3
      21: invokestatic  #3                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      24: checkcast     #4                  // class "[[Lorg/apache/commons/math3/FieldElement;"
      27: astore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload_2
      35: if_icmpge     107
      38: aload_0
      39: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      42: iload         5
      44: aaload
      45: astore        6
      47: aload_1
      48: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      51: iload         5
      53: aaload
      54: astore        7
      56: aload         4
      58: iload         5
      60: aaload
      61: astore        8
      63: iconst_0
      64: istore        9
      66: iload         9
      68: iload_3
      69: if_icmpge     101
      72: aload         8
      74: iload         9
      76: aload         6
      78: iload         9
      80: aaload
      81: aload         7
      83: iload         9
      85: aaload
      86: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      91: checkcast     #27                 // class org/apache/commons/math3/FieldElement
      94: aastore
      95: iinc          9, 1
      98: goto          66
     101: iinc          5, 1
     104: goto          32
     107: new           #20                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
     110: dup
     111: aload_0
     112: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
     115: aload         4
     117: iconst_0
     118: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
     121: areturn

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: aload_0
       6: invokevirtual #24                 // Method getRowDimension:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #25                 // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #25                 // Method getColumnDimension:()I
      19: istore        4
      21: aload_0
      22: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      25: iload_2
      26: iload_3
      27: invokestatic  #3                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      30: checkcast     #4                  // class "[[Lorg/apache/commons/math3/FieldElement;"
      33: astore        5
      35: iconst_0
      36: istore        6
      38: iload         6
      40: iload_2
      41: if_icmpge     150
      44: aload_0
      45: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      48: iload         6
      50: aaload
      51: astore        7
      53: aload         5
      55: iload         6
      57: aaload
      58: astore        8
      60: iconst_0
      61: istore        9
      63: iload         9
      65: iload_3
      66: if_icmpge     144
      69: aload_0
      70: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      73: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      78: checkcast     #27                 // class org/apache/commons/math3/FieldElement
      81: astore        10
      83: iconst_0
      84: istore        11
      86: iload         11
      88: iload         4
      90: if_icmpge     131
      93: aload         10
      95: aload         7
      97: iload         11
      99: aaload
     100: aload_1
     101: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     104: iload         11
     106: aaload
     107: iload         9
     109: aaload
     110: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     115: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     120: checkcast     #27                 // class org/apache/commons/math3/FieldElement
     123: astore        10
     125: iinc          11, 1
     128: goto          86
     131: aload         8
     133: iload         9
     135: aload         10
     137: aastore
     138: iinc          9, 1
     141: goto          63
     144: iinc          6, 1
     147: goto          38
     150: new           #20                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
     153: dup
     154: aload_0
     155: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
     158: aload         5
     160: iconst_0
     161: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
     164: areturn

  public T[][] getData();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method copyOut:()[[Lorg/apache/commons/math3/FieldElement;
       4: areturn

  public T[][] getDataRef();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: areturn

  public void setSubMatrix(T[][], int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: ifnonnull     186
       7: iload_2
       8: ifle          33
      11: new           #33                 // class org/apache/commons/math3/exception/MathIllegalStateException
      14: dup
      15: getstatic     #34                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: iconst_1
      19: anewarray     #35                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: iload_2
      25: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: invokespecial #37                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      32: athrow
      33: iload_3
      34: ifle          59
      37: new           #33                 // class org/apache/commons/math3/exception/MathIllegalStateException
      40: dup
      41: getstatic     #38                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      44: iconst_1
      45: anewarray     #35                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: iload_3
      51: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: aastore
      55: invokespecial #37                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      58: athrow
      59: aload_1
      60: arraylength
      61: istore        4
      63: iload         4
      65: ifne          79
      68: new           #11                 // class org/apache/commons/math3/exception/NoDataException
      71: dup
      72: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_ROW:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      75: invokespecial #13                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      78: athrow
      79: aload_1
      80: iconst_0
      81: aaload
      82: arraylength
      83: istore        5
      85: iload         5
      87: ifne          101
      90: new           #11                 // class org/apache/commons/math3/exception/NoDataException
      93: dup
      94: getstatic     #14                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_COLUMN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      97: invokespecial #13                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
     100: athrow
     101: aload_0
     102: aload_0
     103: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
     106: aload_1
     107: arraylength
     108: iload         5
     110: invokestatic  #3                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
     113: checkcast     #4                  // class "[[Lorg/apache/commons/math3/FieldElement;"
     116: putfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     119: iconst_0
     120: istore        6
     122: iload         6
     124: aload_0
     125: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     128: arraylength
     129: if_icmpge     183
     132: aload_1
     133: iload         6
     135: aaload
     136: arraylength
     137: iload         5
     139: if_icmpeq     157
     142: new           #15                 // class org/apache/commons/math3/exception/DimensionMismatchException
     145: dup
     146: iload         5
     148: aload_1
     149: iload         6
     151: aaload
     152: arraylength
     153: invokespecial #16                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
     156: athrow
     157: aload_1
     158: iload         6
     160: aaload
     161: iconst_0
     162: aload_0
     163: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     166: iload         6
     168: iload_2
     169: iadd
     170: aaload
     171: iload_3
     172: iload         5
     174: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     177: iinc          6, 1
     180: goto          122
     183: goto          193
     186: aload_0
     187: aload_1
     188: iload_2
     189: iload_3
     190: invokespecial #40                 // Method org/apache/commons/math3/linear/AbstractFieldMatrix.setSubMatrix:([[Lorg/apache/commons/math3/FieldElement;II)V
     193: return

  public T getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #42                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aaload
      18: areturn

  public void setEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #42                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aload_3
      18: aastore
      19: return

  public void addToEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #42                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aload_0
      18: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      21: iload_1
      22: aaload
      23: iload_2
      24: aaload
      25: aload_3
      26: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #27                 // class org/apache/commons/math3/FieldElement
      34: aastore
      35: return

  public void multiplyEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #42                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aload_0
      18: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      21: iload_1
      22: aaload
      23: iload_2
      24: aaload
      25: aload_3
      26: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #27                 // class org/apache/commons/math3/FieldElement
      34: aastore
      35: return

  public int getRowDimension();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      15: arraylength
      16: ireturn

  public int getColumnDimension();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: ifnull        16
       7: aload_0
       8: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      11: iconst_0
      12: aaload
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      24: iconst_0
      25: aaload
      26: arraylength
      27: ireturn

  public T[] operate(T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #25                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: arraylength
      12: iload_3
      13: if_icmpeq     27
      16: new           #15                 // class org/apache/commons/math3/exception/DimensionMismatchException
      19: dup
      20: aload_1
      21: arraylength
      22: iload_3
      23: invokespecial #16                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      26: athrow
      27: aload_0
      28: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      31: iload_2
      32: invokestatic  #43                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      35: checkcast     #44                 // class "[Lorg/apache/commons/math3/FieldElement;"
      38: astore        4
      40: iconst_0
      41: istore        5
      43: iload         5
      45: iload_2
      46: if_icmpge     126
      49: aload_0
      50: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      53: iload         5
      55: aaload
      56: astore        6
      58: aload_0
      59: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      62: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      67: checkcast     #27                 // class org/apache/commons/math3/FieldElement
      70: astore        7
      72: iconst_0
      73: istore        8
      75: iload         8
      77: iload_3
      78: if_icmpge     113
      81: aload         7
      83: aload         6
      85: iload         8
      87: aaload
      88: aload_1
      89: iload         8
      91: aaload
      92: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      97: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     102: checkcast     #27                 // class org/apache/commons/math3/FieldElement
     105: astore        7
     107: iinc          8, 1
     110: goto          75
     113: aload         4
     115: iload         5
     117: aload         7
     119: aastore
     120: iinc          5, 1
     123: goto          43
     126: aload         4
     128: areturn

  public T[] preMultiply(T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #25                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: arraylength
      12: iload_2
      13: if_icmpeq     27
      16: new           #15                 // class org/apache/commons/math3/exception/DimensionMismatchException
      19: dup
      20: aload_1
      21: arraylength
      22: iload_2
      23: invokespecial #16                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      26: athrow
      27: aload_0
      28: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      31: iload_3
      32: invokestatic  #43                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      35: checkcast     #44                 // class "[Lorg/apache/commons/math3/FieldElement;"
      38: astore        4
      40: iconst_0
      41: istore        5
      43: iload         5
      45: iload_3
      46: if_icmpge     122
      49: aload_0
      50: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
      53: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      58: checkcast     #27                 // class org/apache/commons/math3/FieldElement
      61: astore        6
      63: iconst_0
      64: istore        7
      66: iload         7
      68: iload_2
      69: if_icmpge     109
      72: aload         6
      74: aload_0
      75: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      78: iload         7
      80: aaload
      81: iload         5
      83: aaload
      84: aload_1
      85: iload         7
      87: aaload
      88: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      93: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #27                 // class org/apache/commons/math3/FieldElement
     101: astore        6
     103: iinc          7, 1
     106: goto          66
     109: aload         4
     111: iload         5
     113: aload         6
     115: aastore
     116: iinc          5, 1
     119: goto          43
     122: aload         4
     124: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #25                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #45,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_2
      32: if_icmpge     85
      35: aload_0
      36: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      39: iload         4
      41: aaload
      42: astore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload_3
      50: if_icmpge     79
      53: aload         5
      55: iload         6
      57: aload_1
      58: iload         4
      60: iload         6
      62: aload         5
      64: iload         6
      66: aaload
      67: invokeinterface #46,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      72: aastore
      73: iinc          6, 1
      76: goto          47
      79: iinc          4, 1
      82: goto          29
      85: aload_1
      86: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      91: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #25                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #48,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_2
      32: if_icmpge     80
      35: aload_0
      36: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      39: iload         4
      41: aaload
      42: astore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload_3
      50: if_icmpge     74
      53: aload_1
      54: iload         4
      56: iload         6
      58: aload         5
      60: iload         6
      62: aaload
      63: invokeinterface #49,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      68: iinc          6, 1
      71: goto          47
      74: iinc          4, 1
      77: goto          29
      80: aload_1
      81: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      86: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #51                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #24                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #25                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #45,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      30: iload_2
      31: istore        6
      33: iload         6
      35: iload_3
      36: if_icmpgt     91
      39: aload_0
      40: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      43: iload         6
      45: aaload
      46: astore        7
      48: iload         4
      50: istore        8
      52: iload         8
      54: iload         5
      56: if_icmpgt     85
      59: aload         7
      61: iload         8
      63: aload_1
      64: iload         6
      66: iload         8
      68: aload         7
      70: iload         8
      72: aaload
      73: invokeinterface #46,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      78: aastore
      79: iinc          8, 1
      82: goto          52
      85: iinc          6, 1
      88: goto          33
      91: aload_1
      92: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      97: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #51                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #24                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #25                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #48,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      30: iload_2
      31: istore        6
      33: iload         6
      35: iload_3
      36: if_icmpgt     86
      39: aload_0
      40: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      43: iload         6
      45: aaload
      46: astore        7
      48: iload         4
      50: istore        8
      52: iload         8
      54: iload         5
      56: if_icmpgt     80
      59: aload_1
      60: iload         6
      62: iload         8
      64: aload         7
      66: iload         8
      68: aaload
      69: invokeinterface #49,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      74: iinc          8, 1
      77: goto          52
      80: iinc          6, 1
      83: goto          33
      86: aload_1
      87: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      92: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #25                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #45,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     85
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_2
      41: if_icmpge     79
      44: aload_0
      45: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      48: iload         5
      50: aaload
      51: astore        6
      53: aload         6
      55: iload         4
      57: aload_1
      58: iload         5
      60: iload         4
      62: aload         6
      64: iload         4
      66: aaload
      67: invokeinterface #46,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      72: aastore
      73: iinc          5, 1
      76: goto          38
      79: iinc          4, 1
      82: goto          29
      85: aload_1
      86: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      91: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #25                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #48,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     76
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_2
      41: if_icmpge     70
      44: aload_1
      45: iload         5
      47: iload         4
      49: aload_0
      50: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      53: iload         5
      55: aaload
      56: iload         4
      58: aaload
      59: invokeinterface #49,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      64: iinc          5, 1
      67: goto          38
      70: iinc          4, 1
      73: goto          29
      76: aload_1
      77: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      82: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #51                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #24                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #25                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #45,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      30: iload         4
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpgt     91
      41: iload_2
      42: istore        7
      44: iload         7
      46: iload_3
      47: if_icmpgt     85
      50: aload_0
      51: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      54: iload         7
      56: aaload
      57: astore        8
      59: aload         8
      61: iload         6
      63: aload_1
      64: iload         7
      66: iload         6
      68: aload         8
      70: iload         6
      72: aaload
      73: invokeinterface #46,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      78: aastore
      79: iinc          7, 1
      82: goto          44
      85: iinc          6, 1
      88: goto          34
      91: aload_1
      92: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      97: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #51                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #24                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #25                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #48,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      30: iload         4
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpgt     82
      41: iload_2
      42: istore        7
      44: iload         7
      46: iload_3
      47: if_icmpgt     76
      50: aload_1
      51: iload         7
      53: iload         6
      55: aload_0
      56: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      59: iload         7
      61: aaload
      62: iload         6
      64: aaload
      65: invokeinterface #49,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      70: iinc          7, 1
      73: goto          44
      76: iinc          6, 1
      79: goto          34
      82: aload_1
      83: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      88: areturn

  private T[][] copyOut();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getRowDimension:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #19                 // Method getField:()Lorg/apache/commons/math3/Field;
       9: iload_1
      10: aload_0
      11: invokevirtual #25                 // Method getColumnDimension:()I
      14: invokestatic  #3                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      17: checkcast     #4                  // class "[[Lorg/apache/commons/math3/FieldElement;"
      20: astore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: iload_1
      25: if_icmpge     55
      28: aload_0
      29: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      32: iload_3
      33: aaload
      34: iconst_0
      35: aload_2
      36: iload_3
      37: aaload
      38: iconst_0
      39: aload_0
      40: getfield      #5                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      43: iload_3
      44: aaload
      45: arraylength
      46: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: iinc          3, 1
      52: goto          23
      55: aload_2
      56: areturn

  private void copyIn(T[][]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokevirtual #52                 // Method setSubMatrix:([[Lorg/apache/commons/math3/FieldElement;II)V
       7: return
}
