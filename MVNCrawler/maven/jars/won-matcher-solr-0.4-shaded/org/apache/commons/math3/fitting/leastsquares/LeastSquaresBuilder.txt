Compiled from "LeastSquaresBuilder.java"
public class org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder {
  private int maxEvaluations;

  private int maxIterations;

  private org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation> checker;

  private org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model;

  private org.apache.commons.math3.linear.RealVector target;

  private org.apache.commons.math3.linear.RealVector start;

  private org.apache.commons.math3.linear.RealMatrix weight;

  private boolean lazyEvaluation;

  private org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator;

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem build();
    Code:
       0: aload_0
       1: getfield      #2                  // Field model:Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;
       4: aload_0
       5: getfield      #3                  // Field target:Lorg/apache/commons/math3/linear/RealVector;
       8: aload_0
       9: getfield      #4                  // Field start:Lorg/apache/commons/math3/linear/RealVector;
      12: aload_0
      13: getfield      #5                  // Field weight:Lorg/apache/commons/math3/linear/RealMatrix;
      16: aload_0
      17: getfield      #6                  // Field checker:Lorg/apache/commons/math3/optim/ConvergenceChecker;
      20: aload_0
      21: getfield      #7                  // Field maxEvaluations:I
      24: aload_0
      25: getfield      #8                  // Field maxIterations:I
      28: aload_0
      29: getfield      #9                  // Field lazyEvaluation:Z
      32: aload_0
      33: getfield      #10                 // Field paramValidator:Lorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;
      36: invokestatic  #11                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.create:(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;IIZLorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
      39: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder maxEvaluations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field maxEvaluations:I
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder maxIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field maxIterations:I
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checker(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field checker:Lorg/apache/commons/math3/optim/ConvergenceChecker;
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checkerPair(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.evaluationChecker:(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/optim/ConvergenceChecker;
       5: invokevirtual #13                 // Method checker:(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
       8: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.analysis.MultivariateVectorFunction, org.apache.commons.math3.analysis.MultivariateMatrixFunction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #14                 // Method org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.model:(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;
       6: invokevirtual #15                 // Method model:(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
       9: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field model:Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field target:Lorg/apache/commons/math3/linear/RealVector;
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(double[]);
    Code:
       0: aload_0
       1: new           #16                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: dup
       5: aload_1
       6: iconst_0
       7: invokespecial #17                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      10: invokevirtual #18                 // Method target:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
      13: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field start:Lorg/apache/commons/math3/linear/RealVector;
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(double[]);
    Code:
       0: aload_0
       1: new           #16                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: dup
       5: aload_1
       6: iconst_0
       7: invokespecial #17                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      10: invokevirtual #19                 // Method start:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
      13: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder weight(org.apache.commons.math3.linear.RealMatrix);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field weight:Lorg/apache/commons/math3/linear/RealMatrix;
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder lazyEvaluation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field lazyEvaluation:Z
       5: aload_0
       6: areturn

  public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder parameterValidator(org.apache.commons.math3.fitting.leastsquares.ParameterValidator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field paramValidator:Lorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;
       5: aload_0
       6: areturn
}
