Compiled from "SubLine.java"
public class org.apache.commons.math3.geometry.euclidean.twod.SubLine extends org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> {
  private static final double DEFAULT_TOLERANCE;

  public org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane."<init>":(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
       6: return

  public org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D, org.apache.commons.math3.geometry.euclidean.twod.Vector2D, double);
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/commons/math3/geometry/euclidean/twod/Line
       4: dup
       5: aload_1
       6: aload_2
       7: dload_3
       8: invokespecial #3                  // Method org/apache/commons/math3/geometry/euclidean/twod/Line."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
      11: aload_1
      12: aload_2
      13: dload_3
      14: invokestatic  #4                  // Method buildIntervalSet:(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
      17: invokespecial #1                  // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane."<init>":(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
      20: return

  public org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D, org.apache.commons.math3.geometry.euclidean.twod.Vector2D);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #5                  // double 1.0E-10d
       6: invokespecial #7                  // Method "<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
       9: return

  public org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.euclidean.twod.Segment);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method org/apache/commons/math3/geometry/euclidean/twod/Segment.getLine:()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
       5: aload_1
       6: invokevirtual #9                  // Method org/apache/commons/math3/geometry/euclidean/twod/Segment.getStart:()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       9: aload_1
      10: invokevirtual #10                 // Method org/apache/commons/math3/geometry/euclidean/twod/Segment.getEnd:()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      13: aload_1
      14: invokevirtual #8                  // Method org/apache/commons/math3/geometry/euclidean/twod/Segment.getLine:()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
      17: invokevirtual #11                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getTolerance:()D
      20: invokestatic  #4                  // Method buildIntervalSet:(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
      23: invokespecial #1                  // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane."<init>":(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
      26: return

  public java.util.List<org.apache.commons.math3.geometry.euclidean.twod.Segment> getSegments();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       4: checkcast     #2                  // class org/apache/commons/math3/geometry/euclidean/twod/Line
       7: astore_1
       8: aload_0
       9: invokevirtual #13                 // Method getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      12: checkcast     #14                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
      15: invokevirtual #15                 // Method org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.asList:()Ljava/util/List;
      18: astore_2
      19: new           #16                 // class java/util/ArrayList
      22: dup
      23: aload_2
      24: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      29: invokespecial #18                 // Method java/util/ArrayList."<init>":(I)V
      32: astore_3
      33: aload_2
      34: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore        4
      41: aload         4
      43: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          121
      51: aload         4
      53: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #22                 // class org/apache/commons/math3/geometry/euclidean/oned/Interval
      61: astore        5
      63: aload_1
      64: new           #23                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
      67: dup
      68: aload         5
      70: invokevirtual #24                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getInf:()D
      73: invokespecial #25                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
      76: invokevirtual #26                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      79: astore        6
      81: aload_1
      82: new           #23                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
      85: dup
      86: aload         5
      88: invokevirtual #27                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getSup:()D
      91: invokespecial #25                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
      94: invokevirtual #26                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      97: astore        7
      99: aload_3
     100: new           #28                 // class org/apache/commons/math3/geometry/euclidean/twod/Segment
     103: dup
     104: aload         6
     106: aload         7
     108: aload_1
     109: invokespecial #29                 // Method org/apache/commons/math3/geometry/euclidean/twod/Segment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
     112: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     117: pop
     118: goto          41
     121: aload_3
     122: areturn

  public org.apache.commons.math3.geometry.euclidean.twod.Vector2D intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine, boolean);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       4: checkcast     #2                  // class org/apache/commons/math3/geometry/euclidean/twod/Line
       7: astore_3
       8: aload_1
       9: invokevirtual #12                 // Method getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      12: checkcast     #2                  // class org/apache/commons/math3/geometry/euclidean/twod/Line
      15: astore        4
      17: aload_3
      18: aload         4
      20: invokevirtual #31                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.intersection:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      23: astore        5
      25: aload         5
      27: ifnonnull     32
      30: aconst_null
      31: areturn
      32: aload_0
      33: invokevirtual #13                 // Method getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      36: aload_3
      37: aload         5
      39: invokevirtual #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      42: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.checkPoint:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      47: astore        6
      49: aload_1
      50: invokevirtual #13                 // Method getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      53: aload         4
      55: aload         5
      57: invokevirtual #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      60: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.checkPoint:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      65: astore        7
      67: iload_2
      68: ifeq          94
      71: aload         6
      73: getstatic     #34                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.OUTSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      76: if_acmpeq     92
      79: aload         7
      81: getstatic     #34                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.OUTSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      84: if_acmpeq     92
      87: aload         5
      89: goto          93
      92: aconst_null
      93: areturn
      94: aload         6
      96: getstatic     #35                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.INSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      99: if_acmpne     115
     102: aload         7
     104: getstatic     #35                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.INSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
     107: if_acmpne     115
     110: aload         5
     112: goto          116
     115: aconst_null
     116: areturn

  private static org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet buildIntervalSet(org.apache.commons.math3.geometry.euclidean.twod.Vector2D, org.apache.commons.math3.geometry.euclidean.twod.Vector2D, double);
    Code:
       0: new           #2                  // class org/apache/commons/math3/geometry/euclidean/twod/Line
       3: dup
       4: aload_0
       5: aload_1
       6: dload_2
       7: invokespecial #3                  // Method org/apache/commons/math3/geometry/euclidean/twod/Line."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
      10: astore        4
      12: new           #14                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
      15: dup
      16: aload         4
      18: aload_0
      19: invokevirtual #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      22: invokevirtual #36                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D.getX:()D
      25: aload         4
      27: aload_1
      28: invokevirtual #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      31: invokevirtual #36                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D.getX:()D
      34: dload_2
      35: invokespecial #37                 // Method org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet."<init>":(DDD)V
      38: areturn

  protected org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>);
    Code:
       0: new           #38                 // class org/apache/commons/math3/geometry/euclidean/twod/SubLine
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #39                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
       9: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> split(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       4: checkcast     #2                  // class org/apache/commons/math3/geometry/euclidean/twod/Line
       7: astore_2
       8: aload_1
       9: checkcast     #2                  // class org/apache/commons/math3/geometry/euclidean/twod/Line
      12: astore_3
      13: aload_2
      14: aload_3
      15: invokevirtual #31                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.intersection:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      18: astore        4
      20: aload_2
      21: invokevirtual #11                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getTolerance:()D
      24: dstore        5
      26: aload         4
      28: ifnonnull     85
      31: aload_3
      32: aload_2
      33: invokevirtual #40                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getOffset:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      36: dstore        7
      38: dload         7
      40: dload         5
      42: dneg
      43: dcmpg
      44: ifge          57
      47: new           #41                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane
      50: dup
      51: aconst_null
      52: aload_0
      53: invokespecial #42                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
      56: areturn
      57: dload         7
      59: dload         5
      61: dcmpl
      62: ifle          75
      65: new           #41                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane
      68: dup
      69: aload_0
      70: aconst_null
      71: invokespecial #42                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
      74: areturn
      75: new           #41                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane
      78: dup
      79: aconst_null
      80: aconst_null
      81: invokespecial #42                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
      84: areturn
      85: aload_2
      86: invokevirtual #43                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getAngle:()D
      89: aload_3
      90: invokevirtual #43                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getAngle:()D
      93: dsub
      94: invokestatic  #44                 // Method org/apache/commons/math3/util/FastMath.sin:(D)D
      97: dconst_0
      98: dcmpg
      99: ifge          106
     102: iconst_1
     103: goto          107
     106: iconst_0
     107: istore        7
     109: aload_2
     110: aload         4
     112: invokevirtual #32                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSubSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
     115: astore        8
     117: new           #45                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
     120: dup
     121: aload         8
     123: iload         7
     125: ifne          132
     128: iconst_1
     129: goto          133
     132: iconst_0
     133: dload         5
     135: invokespecial #46                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
     138: invokevirtual #47                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.wholeHyperplane:()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
     141: astore        9
     143: new           #45                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
     146: dup
     147: aload         8
     149: iload         7
     151: dload         5
     153: invokespecial #46                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
     156: invokevirtual #47                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.wholeHyperplane:()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
     159: astore        10
     161: aload_0
     162: invokevirtual #13                 // Method getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
     165: iconst_0
     166: invokeinterface #48,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     171: aload         10
     173: invokevirtual #49                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.split:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     176: astore        11
     178: aload_0
     179: invokevirtual #13                 // Method getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
     182: aload         11
     184: invokevirtual #50                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     187: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     192: ifeq          208
     195: new           #52                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     198: dup
     199: getstatic     #53                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     202: invokespecial #54                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     205: goto          233
     208: new           #52                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     211: dup
     212: aload         9
     214: new           #52                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     217: dup
     218: getstatic     #53                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     221: invokespecial #54                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     224: aload         11
     226: invokevirtual #50                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     229: aconst_null
     230: invokespecial #55                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     233: astore        12
     235: aload_0
     236: invokevirtual #13                 // Method getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
     239: aload         11
     241: invokevirtual #56                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     244: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     249: ifeq          265
     252: new           #52                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     255: dup
     256: getstatic     #53                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     259: invokespecial #54                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     262: goto          290
     265: new           #52                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     268: dup
     269: aload         10
     271: new           #52                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     274: dup
     275: getstatic     #53                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     278: invokespecial #54                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
     281: aload         11
     283: invokevirtual #56                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     286: aconst_null
     287: invokespecial #55                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     290: astore        13
     292: new           #41                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane
     295: dup
     296: new           #38                 // class org/apache/commons/math3/geometry/euclidean/twod/SubLine
     299: dup
     300: aload_2
     301: invokevirtual #57                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.copySelf:()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
     304: new           #14                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
     307: dup
     308: aload         12
     310: dload         5
     312: invokespecial #58                 // Method org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet."<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
     315: invokespecial #39                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
     318: new           #38                 // class org/apache/commons/math3/geometry/euclidean/twod/SubLine
     321: dup
     322: aload_2
     323: invokevirtual #57                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.copySelf:()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
     326: new           #14                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
     329: dup
     330: aload         13
     332: dload         5
     334: invokespecial #58                 // Method org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet."<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
     337: invokespecial #39                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
     340: invokespecial #42                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
     343: areturn
}
