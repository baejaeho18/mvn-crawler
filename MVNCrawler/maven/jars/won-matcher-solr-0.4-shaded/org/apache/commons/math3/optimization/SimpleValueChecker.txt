Compiled from "SimpleValueChecker.java"
public class org.apache.commons.math3.optimization.SimpleValueChecker extends org.apache.commons.math3.optimization.AbstractConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> {
  private static final int ITERATION_CHECK_DISABLED;

  private final int maxIterationCount;

  public org.apache.commons.math3.optimization.SimpleValueChecker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/optimization/AbstractConvergenceChecker."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field maxIterationCount:I
       9: return

  public org.apache.commons.math3.optimization.SimpleValueChecker(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #3                  // Method org/apache/commons/math3/optimization/AbstractConvergenceChecker."<init>":(DD)V
       6: aload_0
       7: iconst_m1
       8: putfield      #2                  // Field maxIterationCount:I
      11: return

  public org.apache.commons.math3.optimization.SimpleValueChecker(double, double, int);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #3                  // Method org/apache/commons/math3/optimization/AbstractConvergenceChecker."<init>":(DD)V
       6: iload         5
       8: ifgt          24
      11: new           #4                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      14: dup
      15: iload         5
      17: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: invokespecial #6                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Ljava/lang/Number;)V
      23: athrow
      24: aload_0
      25: iload         5
      27: putfield      #2                  // Field maxIterationCount:I
      30: return

  public boolean converged(int, org.apache.commons.math3.optimization.PointValuePair, org.apache.commons.math3.optimization.PointValuePair);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxIterationCount:I
       4: iconst_m1
       5: if_icmpeq     18
       8: iload_1
       9: aload_0
      10: getfield      #2                  // Field maxIterationCount:I
      13: if_icmplt     18
      16: iconst_1
      17: ireturn
      18: aload_2
      19: invokevirtual #7                  // Method org/apache/commons/math3/optimization/PointValuePair.getValue:()Ljava/lang/Object;
      22: checkcast     #8                  // class java/lang/Double
      25: invokevirtual #9                  // Method java/lang/Double.doubleValue:()D
      28: dstore        4
      30: aload_3
      31: invokevirtual #7                  // Method org/apache/commons/math3/optimization/PointValuePair.getValue:()Ljava/lang/Object;
      34: checkcast     #8                  // class java/lang/Double
      37: invokevirtual #9                  // Method java/lang/Double.doubleValue:()D
      40: dstore        6
      42: dload         4
      44: dload         6
      46: dsub
      47: invokestatic  #10                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      50: dstore        8
      52: dload         4
      54: invokestatic  #10                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      57: dload         6
      59: invokestatic  #10                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      62: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      65: dstore        10
      67: dload         8
      69: dload         10
      71: aload_0
      72: invokevirtual #12                 // Method getRelativeThreshold:()D
      75: dmul
      76: dcmpg
      77: ifle          90
      80: dload         8
      82: aload_0
      83: invokevirtual #13                 // Method getAbsoluteThreshold:()D
      86: dcmpg
      87: ifgt          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ireturn

  public boolean converged(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #14                 // class org/apache/commons/math3/optimization/PointValuePair
       6: aload_3
       7: checkcast     #14                 // class org/apache/commons/math3/optimization/PointValuePair
      10: invokevirtual #15                 // Method converged:(ILorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)Z
      13: ireturn
}
