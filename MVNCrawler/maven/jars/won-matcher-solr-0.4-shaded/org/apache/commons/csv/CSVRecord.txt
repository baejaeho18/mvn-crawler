Compiled from "CSVRecord.java"
public final class org.apache.commons.csv.CSVRecord implements java.io.Serializable, java.lang.Iterable<java.lang.String> {
  private static final java.lang.String[] EMPTY_STRING_ARRAY;

  private static final long serialVersionUID;

  private final long characterPosition;

  private final java.lang.String comment;

  private final java.util.Map<java.lang.String, java.lang.Integer> mapping;

  private final long recordNumber;

  private final java.lang.String[] values;

  org.apache.commons.csv.CSVRecord(java.lang.String[], java.util.Map<java.lang.String, java.lang.Integer>, java.lang.String, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload         4
       7: putfield      #2                  // Field recordNumber:J
      10: aload_0
      11: aload_1
      12: ifnull        19
      15: aload_1
      16: goto          22
      19: getstatic     #3                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      22: putfield      #4                  // Field values:[Ljava/lang/String;
      25: aload_0
      26: aload_2
      27: putfield      #5                  // Field mapping:Ljava/util/Map;
      30: aload_0
      31: aload_3
      32: putfield      #6                  // Field comment:Ljava/lang/String;
      35: aload_0
      36: lload         6
      38: putfield      #7                  // Field characterPosition:J
      41: return

  public java.lang.String get(java.lang.Enum<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method java/lang/Enum.toString:()Ljava/lang/String;
       5: invokevirtual #9                  // Method get:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String get(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:[Ljava/lang/String;
       4: iload_1
       5: aaload
       6: areturn

  public java.lang.String get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mapping:Ljava/util/Map;
       4: ifnonnull     17
       7: new           #10                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #11                 // String No header mapping was specified, the record values can\'t be accessed by name
      13: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #5                  // Field mapping:Ljava/util/Map;
      21: aload_1
      22: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #14                 // class java/lang/Integer
      30: astore_2
      31: aload_2
      32: ifnonnull     68
      35: new           #15                 // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #16                 // String Mapping for %s not found, expected one of %s
      41: iconst_2
      42: anewarray     #17                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload_1
      48: aastore
      49: dup
      50: iconst_1
      51: aload_0
      52: getfield      #5                  // Field mapping:Ljava/util/Map;
      55: invokeinterface #18,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      60: aastore
      61: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      64: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #4                  // Field values:[Ljava/lang/String;
      72: aload_2
      73: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
      76: aaload
      77: areturn
      78: astore_3
      79: new           #15                 // class java/lang/IllegalArgumentException
      82: dup
      83: ldc           #23                 // String Index for header \'%s\' is %d but CSVRecord only has %d values!
      85: iconst_3
      86: anewarray     #17                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_1
      92: aastore
      93: dup
      94: iconst_1
      95: aload_2
      96: aastore
      97: dup
      98: iconst_2
      99: aload_0
     100: getfield      #4                  // Field values:[Ljava/lang/String;
     103: arraylength
     104: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: aastore
     108: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     111: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     114: athrow
    Exception table:
       from    to  target type
          68    77    78   Class java/lang/ArrayIndexOutOfBoundsException

  public long getCharacterPosition();
    Code:
       0: aload_0
       1: getfield      #7                  // Field characterPosition:J
       4: lreturn

  public java.lang.String getComment();
    Code:
       0: aload_0
       1: getfield      #6                  // Field comment:Ljava/lang/String;
       4: areturn

  public long getRecordNumber();
    Code:
       0: aload_0
       1: getfield      #2                  // Field recordNumber:J
       4: lreturn

  public boolean isConsistent();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mapping:Ljava/util/Map;
       4: ifnull        24
       7: aload_0
       8: getfield      #5                  // Field mapping:Ljava/util/Map;
      11: invokeinterface #25,  1           // InterfaceMethod java/util/Map.size:()I
      16: aload_0
      17: getfield      #4                  // Field values:[Ljava/lang/String;
      20: arraylength
      21: if_icmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean hasComment();
    Code:
       0: aload_0
       1: getfield      #6                  // Field comment:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isMapped(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mapping:Ljava/util/Map;
       4: ifnull        24
       7: aload_0
       8: getfield      #5                  // Field mapping:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #26,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isSet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method isMapped:(Ljava/lang/String;)Z
       5: ifeq          36
       8: aload_0
       9: getfield      #5                  // Field mapping:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #14                 // class java/lang/Integer
      21: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
      24: aload_0
      25: getfield      #4                  // Field values:[Ljava/lang/String;
      28: arraylength
      29: if_icmpge     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public java.util.Iterator<java.lang.String> iterator();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method toList:()Ljava/util/List;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  <M extends java.util.Map<java.lang.String, java.lang.String>> M putIn(M);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mapping:Ljava/util/Map;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aload_0
      10: getfield      #5                  // Field mapping:Ljava/util/Map;
      13: invokeinterface #30,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          90
      33: aload_2
      34: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #34                 // class java/util/Map$Entry
      42: astore_3
      43: aload_3
      44: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: checkcast     #14                 // class java/lang/Integer
      52: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
      55: istore        4
      57: iload         4
      59: aload_0
      60: getfield      #4                  // Field values:[Ljava/lang/String;
      63: arraylength
      64: if_icmpge     87
      67: aload_1
      68: aload_3
      69: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: aload_0
      75: getfield      #4                  // Field values:[Ljava/lang/String;
      78: iload         4
      80: aaload
      81: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          24
      90: aload_1
      91: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:[Ljava/lang/String;
       4: arraylength
       5: ireturn

  private java.util.List<java.lang.String> toList();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:[Ljava/lang/String;
       4: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public java.util.Map<java.lang.String, java.lang.String> toMap();
    Code:
       0: aload_0
       1: new           #39                 // class java/util/HashMap
       4: dup
       5: aload_0
       6: getfield      #4                  // Field values:[Ljava/lang/String;
       9: arraylength
      10: invokespecial #40                 // Method java/util/HashMap."<init>":(I)V
      13: invokevirtual #41                 // Method putIn:(Ljava/util/Map;)Ljava/util/Map;
      16: areturn

  public java.lang.String toString();
    Code:
       0: new           #42                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #44                 // String CSVRecord [comment=
       9: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field comment:Ljava/lang/String;
      16: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #46                 // String , mapping=
      21: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field mapping:Ljava/util/Map;
      28: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #48                 // String , recordNumber=
      33: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field recordNumber:J
      40: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #50                 // String , values=
      45: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field values:[Ljava/lang/String;
      52: invokestatic  #51                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      55: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #52                 // String ]
      60: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  java.lang.String[] values();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:[Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #54                 // class java/lang/String
       4: putstatic     #3                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
       7: return
}
