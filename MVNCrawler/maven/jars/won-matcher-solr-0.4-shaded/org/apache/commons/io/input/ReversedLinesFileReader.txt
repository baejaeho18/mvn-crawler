Compiled from "ReversedLinesFileReader.java"
public class org.apache.commons.io.input.ReversedLinesFileReader implements java.io.Closeable {
  private final int blockSize;

  private final java.nio.charset.Charset encoding;

  private final java.io.RandomAccessFile randomAccessFile;

  private final long totalByteLength;

  private final long totalBlockCount;

  private final byte[][] newLineSequences;

  private final int avoidNewlineSplitBufferSize;

  private final int byteDecrement;

  private org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart;

  private boolean trailingNewlineOfFileSkipped;

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        4096
       5: invokestatic  #7                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       8: invokevirtual #8                  // Method java/nio/charset/Charset.toString:()Ljava/lang/String;
      11: invokespecial #9                  // Method "<init>":(Ljava/io/File;ILjava/lang/String;)V
      14: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #11                 // Field trailingNewlineOfFileSkipped:Z
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field blockSize:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field encoding:Ljava/nio/charset/Charset;
      19: aload_0
      20: new           #12                 // class java/io/RandomAccessFile
      23: dup
      24: aload_1
      25: ldc           #13                 // String r
      27: invokespecial #14                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      30: putfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
      33: aload_0
      34: aload_0
      35: getfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
      38: invokevirtual #15                 // Method java/io/RandomAccessFile.length:()J
      41: putfield      #16                 // Field totalByteLength:J
      44: aload_0
      45: getfield      #16                 // Field totalByteLength:J
      48: iload_2
      49: i2l
      50: lrem
      51: l2i
      52: istore        4
      54: iload         4
      56: ifle          75
      59: aload_0
      60: aload_0
      61: getfield      #16                 // Field totalByteLength:J
      64: iload_2
      65: i2l
      66: ldiv
      67: lconst_1
      68: ladd
      69: putfield      #17                 // Field totalBlockCount:J
      72: goto          98
      75: aload_0
      76: aload_0
      77: getfield      #16                 // Field totalByteLength:J
      80: iload_2
      81: i2l
      82: ldiv
      83: putfield      #17                 // Field totalBlockCount:J
      86: aload_0
      87: getfield      #16                 // Field totalByteLength:J
      90: lconst_0
      91: lcmp
      92: ifle          98
      95: iload_2
      96: istore        4
      98: aload_0
      99: new           #18                 // class org/apache/commons/io/input/ReversedLinesFileReader$FilePart
     102: dup
     103: aload_0
     104: aload_0
     105: getfield      #17                 // Field totalBlockCount:J
     108: iload         4
     110: aconst_null
     111: aconst_null
     112: invokespecial #19                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart."<init>":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V
     115: putfield      #20                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
     118: aload_3
     119: invokestatic  #21                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
     122: astore        5
     124: aload         5
     126: invokevirtual #22                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
     129: astore        6
     131: aload         6
     133: invokevirtual #23                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
     136: fstore        7
     138: fload         7
     140: fconst_1
     141: fcmpl
     142: ifne          153
     145: aload_0
     146: iconst_1
     147: putfield      #2                  // Field byteDecrement:I
     150: goto          269
     153: aload         5
     155: ldc           #24                 // String UTF-8
     157: invokestatic  #25                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     160: if_acmpne     171
     163: aload_0
     164: iconst_1
     165: putfield      #2                  // Field byteDecrement:I
     168: goto          269
     171: aload         5
     173: ldc           #26                 // String Shift_JIS
     175: invokestatic  #25                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     178: if_acmpne     189
     181: aload_0
     182: iconst_1
     183: putfield      #2                  // Field byteDecrement:I
     186: goto          269
     189: aload         5
     191: ldc           #27                 // String UTF-16BE
     193: invokestatic  #25                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     196: if_acmpeq     209
     199: aload         5
     201: ldc           #28                 // String UTF-16LE
     203: invokestatic  #25                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     206: if_acmpne     217
     209: aload_0
     210: iconst_2
     211: putfield      #2                  // Field byteDecrement:I
     214: goto          269
     217: aload         5
     219: ldc           #29                 // String UTF-16
     221: invokestatic  #25                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     224: if_acmpne     237
     227: new           #30                 // class java/io/UnsupportedEncodingException
     230: dup
     231: ldc           #31                 // String For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)
     233: invokespecial #32                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     236: athrow
     237: new           #30                 // class java/io/UnsupportedEncodingException
     240: dup
     241: new           #33                 // class java/lang/StringBuilder
     244: dup
     245: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     248: ldc           #35                 // String Encoding
     250: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: aload_3
     254: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     257: ldc           #38                 // String  is not supported yet (feel free to submit a patch)
     259: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: invokespecial #32                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     268: athrow
     269: aload_0
     270: iconst_3
     271: anewarray     #40                 // class "[B"
     274: dup
     275: iconst_0
     276: ldc           #41                 // String \r\n
     278: aload_3
     279: invokevirtual #42                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     282: aastore
     283: dup
     284: iconst_1
     285: ldc           #43                 // String \n
     287: aload_3
     288: invokevirtual #42                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     291: aastore
     292: dup
     293: iconst_2
     294: ldc           #44                 // String \r
     296: aload_3
     297: invokevirtual #42                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     300: aastore
     301: putfield      #1                  // Field newLineSequences:[[B
     304: aload_0
     305: aload_0
     306: getfield      #1                  // Field newLineSequences:[[B
     309: iconst_0
     310: aaload
     311: arraylength
     312: putfield      #3                  // Field avoidNewlineSplitBufferSize:I
     315: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #45                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       7: invokespecial #46                 // Method "<init>":(Ljava/io/File;ILjava/nio/charset/Charset;)V
      10: return

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
       4: invokestatic  #47                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$100:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ifnonnull     41
      12: aload_0
      13: aload_0
      14: getfield      #20                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      17: invokestatic  #48                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$200:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      20: putfield      #20                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      23: aload_0
      24: getfield      #20                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      27: ifnull        41
      30: aload_0
      31: getfield      #20                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      34: invokestatic  #47                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$100:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
      37: astore_1
      38: goto          8
      41: ldc           #49                 // String
      43: aload_1
      44: invokevirtual #50                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          67
      50: aload_0
      51: getfield      #11                 // Field trailingNewlineOfFileSkipped:Z
      54: ifne          67
      57: aload_0
      58: iconst_1
      59: putfield      #11                 // Field trailingNewlineOfFileSkipped:Z
      62: aload_0
      63: invokevirtual #51                 // Method readLine:()Ljava/lang/String;
      66: astore_1
      67: aload_1
      68: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
       4: invokevirtual #52                 // Method java/io/RandomAccessFile.close:()V
       7: return

  static int access$300(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #6                  // Field blockSize:I
       4: ireturn

  static java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
       4: areturn

  static java.nio.charset.Charset access$500(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field encoding:Ljava/nio/charset/Charset;
       4: areturn

  static int access$600(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #3                  // Field avoidNewlineSplitBufferSize:I
       4: ireturn

  static int access$700(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field byteDecrement:I
       4: ireturn

  static byte[][] access$800(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #1                  // Field newLineSequences:[[B
       4: areturn
}
