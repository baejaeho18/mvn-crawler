Compiled from "ReaderInputStream.java"
public class org.apache.commons.io.input.ReaderInputStream extends java.io.InputStream {
  private static final int DEFAULT_BUFFER_SIZE;

  private final java.io.Reader reader;

  private final java.nio.charset.CharsetEncoder encoder;

  private final java.nio.CharBuffer encoderIn;

  private final java.nio.ByteBuffer encoderOut;

  private java.nio.charset.CoderResult lastCoderResult;

  private boolean endOfInput;

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: invokespecial #1                  // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
       9: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field reader:Ljava/io/Reader;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      14: aload_0
      15: iload_3
      16: invokestatic  #5                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      19: putfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      22: aload_0
      23: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      26: invokevirtual #7                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      29: pop
      30: aload_0
      31: sipush        128
      34: invokestatic  #8                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      37: putfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
      40: aload_0
      41: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
      44: invokevirtual #10                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      47: pop
      48: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #11                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
       6: getstatic     #12                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
       9: invokevirtual #13                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      12: getstatic     #12                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      15: invokevirtual #14                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      18: iload_3
      19: invokespecial #1                  // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
      22: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: invokespecial #15                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
       9: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #16                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: invokespecial #15                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
      10: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: invokespecial #17                 // Method "<init>":(Ljava/io/Reader;Ljava/lang/String;I)V
       9: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: invokespecial #19                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V
       8: return

  private void fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field endOfInput:Z
       4: ifne          95
       7: aload_0
       8: getfield      #21                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
      11: ifnull        24
      14: aload_0
      15: getfield      #21                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
      18: invokevirtual #22                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      21: ifeq          95
      24: aload_0
      25: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      28: invokevirtual #23                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
      31: pop
      32: aload_0
      33: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      36: invokevirtual #24                 // Method java/nio/CharBuffer.position:()I
      39: istore_1
      40: aload_0
      41: getfield      #3                  // Field reader:Ljava/io/Reader;
      44: aload_0
      45: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      48: invokevirtual #25                 // Method java/nio/CharBuffer.array:()[C
      51: iload_1
      52: aload_0
      53: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      56: invokevirtual #26                 // Method java/nio/CharBuffer.remaining:()I
      59: invokevirtual #27                 // Method java/io/Reader.read:([CII)I
      62: istore_2
      63: iload_2
      64: iconst_m1
      65: if_icmpne     76
      68: aload_0
      69: iconst_1
      70: putfield      #20                 // Field endOfInput:Z
      73: goto          87
      76: aload_0
      77: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      80: iload_1
      81: iload_2
      82: iadd
      83: invokevirtual #28                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      86: pop
      87: aload_0
      88: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
      91: invokevirtual #7                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      94: pop
      95: aload_0
      96: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
      99: invokevirtual #29                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     102: pop
     103: aload_0
     104: aload_0
     105: getfield      #4                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
     108: aload_0
     109: getfield      #6                  // Field encoderIn:Ljava/nio/CharBuffer;
     112: aload_0
     113: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
     116: aload_0
     117: getfield      #20                 // Field endOfInput:Z
     120: invokevirtual #30                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     123: putfield      #21                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
     126: aload_0
     127: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
     130: invokevirtual #10                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     133: pop
     134: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #32                 // String Byte array must not be null
      10: invokespecial #33                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_3
      15: iflt          30
      18: iload_2
      19: iflt          30
      22: iload_2
      23: iload_3
      24: iadd
      25: aload_1
      26: arraylength
      27: if_icmple     76
      30: new           #34                 // class java/lang/IndexOutOfBoundsException
      33: dup
      34: new           #35                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #37                 // String Array Size=
      43: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: arraylength
      48: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: ldc           #40                 // String , offset=
      53: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_2
      57: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: ldc           #41                 // String , length=
      62: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: iload_3
      66: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #43                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: iconst_0
      77: istore        4
      79: iload_3
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: iload_3
      86: ifle          168
      89: aload_0
      90: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
      93: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      96: ifeq          144
      99: aload_0
     100: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
     103: invokevirtual #45                 // Method java/nio/ByteBuffer.remaining:()I
     106: iload_3
     107: invokestatic  #46                 // Method java/lang/Math.min:(II)I
     110: istore        5
     112: aload_0
     113: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
     116: aload_1
     117: iload_2
     118: iload         5
     120: invokevirtual #47                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     123: pop
     124: iload_2
     125: iload         5
     127: iadd
     128: istore_2
     129: iload_3
     130: iload         5
     132: isub
     133: istore_3
     134: iload         4
     136: iload         5
     138: iadd
     139: istore        4
     141: goto          85
     144: aload_0
     145: invokespecial #48                 // Method fillBuffer:()V
     148: aload_0
     149: getfield      #20                 // Field endOfInput:Z
     152: ifeq          85
     155: aload_0
     156: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
     159: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     162: ifne          85
     165: goto          168
     168: iload         4
     170: ifne          184
     173: aload_0
     174: getfield      #20                 // Field endOfInput:Z
     177: ifeq          184
     180: iconst_m1
     181: goto          186
     184: iload         4
     186: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #49                 // Method read:([BII)I
       8: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
       4: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
      14: invokevirtual #50                 // Method java/nio/ByteBuffer.get:()B
      17: sipush        255
      20: iand
      21: ireturn
      22: aload_0
      23: invokespecial #48                 // Method fillBuffer:()V
      26: aload_0
      27: getfield      #20                 // Field endOfInput:Z
      30: ifeq          0
      33: aload_0
      34: getfield      #9                  // Field encoderOut:Ljava/nio/ByteBuffer;
      37: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      40: ifne          0
      43: iconst_m1
      44: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field reader:Ljava/io/Reader;
       4: invokevirtual #51                 // Method java/io/Reader.close:()V
       7: return
}
