Compiled from "FileCleaningTracker.java"
public class org.apache.commons.io.FileCleaningTracker {
  java.lang.ref.ReferenceQueue<java.lang.Object> q;

  final java.util.Collection<org.apache.commons.io.FileCleaningTracker$Tracker> trackers;

  final java.util.List<java.lang.String> deleteFailures;

  volatile boolean exitWhenFinished;

  java.lang.Thread reaper;

  public org.apache.commons.io.FileCleaningTracker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field q:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: invokestatic  #7                  // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      26: putfield      #8                  // Field trackers:Ljava/util/Collection;
      29: aload_0
      30: new           #9                  // class java/util/ArrayList
      33: dup
      34: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      37: invokestatic  #11                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      40: putfield      #12                 // Field deleteFailures:Ljava/util/List;
      43: aload_0
      44: iconst_0
      45: putfield      #13                 // Field exitWhenFinished:Z
      48: return

  public void track(java.io.File, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: checkcast     #14                 // class org/apache/commons/io/FileDeleteStrategy
       7: invokevirtual #15                 // Method track:(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V
      10: return

  public void track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #16                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #17                 // String The file must not be null
      10: invokespecial #18                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method java/io/File.getPath:()Ljava/lang/String;
      19: aload_2
      20: aload_3
      21: invokespecial #20                 // Method addTracker:(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V
      24: return

  public void track(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: checkcast     #14                 // class org/apache/commons/io/FileDeleteStrategy
       7: invokevirtual #21                 // Method track:(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V
      10: return

  public void track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #16                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #22                 // String The path must not be null
      10: invokespecial #18                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokespecial #20                 // Method addTracker:(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V
      21: return

  private synchronized void addTracker(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy);
    Code:
       0: aload_0
       1: getfield      #13                 // Field exitWhenFinished:Z
       4: ifeq          17
       7: new           #23                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #24                 // String No new trackers can be added once exitWhenFinished() is called
      13: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #26                 // Field reaper:Ljava/lang/Thread;
      21: ifnonnull     43
      24: aload_0
      25: new           #27                 // class org/apache/commons/io/FileCleaningTracker$Reaper
      28: dup
      29: aload_0
      30: invokespecial #28                 // Method org/apache/commons/io/FileCleaningTracker$Reaper."<init>":(Lorg/apache/commons/io/FileCleaningTracker;)V
      33: putfield      #26                 // Field reaper:Ljava/lang/Thread;
      36: aload_0
      37: getfield      #26                 // Field reaper:Ljava/lang/Thread;
      40: invokevirtual #29                 // Method java/lang/Thread.start:()V
      43: aload_0
      44: getfield      #8                  // Field trackers:Ljava/util/Collection;
      47: new           #30                 // class org/apache/commons/io/FileCleaningTracker$Tracker
      50: dup
      51: aload_1
      52: aload_3
      53: aload_2
      54: aload_0
      55: getfield      #4                  // Field q:Ljava/lang/ref/ReferenceQueue;
      58: invokespecial #31                 // Method org/apache/commons/io/FileCleaningTracker$Tracker."<init>":(Ljava/lang/String;Lorg/apache/commons/io/FileDeleteStrategy;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      61: invokeinterface #32,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      66: pop
      67: return

  public int getTrackCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field trackers:Ljava/util/Collection;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.size:()I
       9: ireturn

  public java.util.List<java.lang.String> getDeleteFailures();
    Code:
       0: aload_0
       1: getfield      #12                 // Field deleteFailures:Ljava/util/List;
       4: areturn

  public synchronized void exitWhenFinished();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #13                 // Field exitWhenFinished:Z
       5: aload_0
       6: getfield      #26                 // Field reaper:Ljava/lang/Thread;
       9: ifnull        36
      12: aload_0
      13: getfield      #26                 // Field reaper:Ljava/lang/Thread;
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: getfield      #26                 // Field reaper:Ljava/lang/Thread;
      23: invokevirtual #34                 // Method java/lang/Thread.interrupt:()V
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: return
    Exception table:
       from    to  target type
          19    28    31   any
          31    34    31   any
}
