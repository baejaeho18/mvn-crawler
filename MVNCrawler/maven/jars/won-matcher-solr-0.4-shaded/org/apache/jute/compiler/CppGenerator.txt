Compiled from "CppGenerator.java"
class org.apache.jute.compiler.CppGenerator {
  private java.lang.String mName;

  private java.util.ArrayList<org.apache.jute.compiler.JFile> mInclFiles;

  private java.util.ArrayList<org.apache.jute.compiler.JRecord> mRecList;

  private final java.io.File outputDirectory;

  org.apache.jute.compiler.CppGenerator(java.lang.String, java.util.ArrayList<org.apache.jute.compiler.JFile>, java.util.ArrayList<org.apache.jute.compiler.JRecord>, java.io.File);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload         4
       7: putfield      #2                  // Field outputDirectory:Ljava/io/File;
      10: aload_0
      11: new           #3                  // class java/io/File
      14: dup
      15: aload_1
      16: invokespecial #4                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      19: invokevirtual #5                  // Method java/io/File.getName:()Ljava/lang/String;
      22: putfield      #6                  // Field mName:Ljava/lang/String;
      25: aload_0
      26: aload_2
      27: putfield      #7                  // Field mInclFiles:Ljava/util/ArrayList;
      30: aload_0
      31: aload_3
      32: putfield      #8                  // Field mRecList:Ljava/util/ArrayList;
      35: return

  void genCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field outputDirectory:Ljava/io/File;
       4: invokevirtual #9                  // Method java/io/File.exists:()Z
       7: ifne          50
      10: aload_0
      11: getfield      #2                  // Field outputDirectory:Ljava/io/File;
      14: invokevirtual #10                 // Method java/io/File.mkdirs:()Z
      17: ifne          50
      20: new           #11                 // class java/io/IOException
      23: dup
      24: new           #12                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #14                 // String unable to create output directory
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field outputDirectory:Ljava/io/File;
      40: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: new           #19                 // class java/io/FileWriter
      53: dup
      54: new           #3                  // class java/io/File
      57: dup
      58: aload_0
      59: getfield      #2                  // Field outputDirectory:Ljava/io/File;
      62: new           #12                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      69: aload_0
      70: getfield      #6                  // Field mName:Ljava/lang/String;
      73: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #20                 // String .cc
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #21                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      87: invokespecial #22                 // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
      90: astore_1
      91: new           #19                 // class java/io/FileWriter
      94: dup
      95: new           #3                  // class java/io/File
      98: dup
      99: aload_0
     100: getfield      #2                  // Field outputDirectory:Ljava/io/File;
     103: new           #12                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     110: aload_0
     111: getfield      #6                  // Field mName:Ljava/lang/String;
     114: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #23                 // String .hh
     119: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #21                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     128: invokespecial #22                 // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
     131: astore_2
     132: aload_2
     133: ldc           #24                 // String /**\n
     135: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     138: aload_2
     139: ldc           #26                 // String * Licensed to the Apache Software Foundation (ASF) under one\n
     141: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     144: aload_2
     145: ldc           #27                 // String * or more contributor license agreements.  See the NOTICE file\n
     147: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     150: aload_2
     151: ldc           #28                 // String * distributed with this work for additional information\n
     153: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     156: aload_2
     157: ldc           #29                 // String * regarding copyright ownership.  The ASF licenses this file\n
     159: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     162: aload_2
     163: ldc           #30                 // String * to you under the Apache License, Version 2.0 (the\n
     165: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     168: aload_2
     169: ldc           #31                 // String * \"License\"); you may not use this file except in compliance\n
     171: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     174: aload_2
     175: ldc           #32                 // String * with the License.  You may obtain a copy of the License at\n
     177: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     180: aload_2
     181: ldc           #33                 // String *\n
     183: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     186: aload_2
     187: ldc           #34                 // String *     http://www.apache.org/licenses/LICENSE-2.0\n
     189: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     192: aload_2
     193: ldc           #33                 // String *\n
     195: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     198: aload_2
     199: ldc           #35                 // String * Unless required by applicable law or agreed to in writing, software\n
     201: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     204: aload_2
     205: ldc           #36                 // String * distributed under the License is distributed on an \"AS IS\" BASIS,\n
     207: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     210: aload_2
     211: ldc           #37                 // String * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
     213: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     216: aload_2
     217: ldc           #38                 // String * See the License for the specific language governing permissions and\n
     219: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     222: aload_2
     223: ldc           #39                 // String * limitations under the License.\n
     225: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     228: aload_2
     229: ldc           #40                 // String */\n
     231: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     234: aload_2
     235: ldc           #41                 // String \n
     237: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     240: aload_1
     241: ldc           #24                 // String /**\n
     243: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     246: aload_1
     247: ldc           #26                 // String * Licensed to the Apache Software Foundation (ASF) under one\n
     249: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     252: aload_1
     253: ldc           #27                 // String * or more contributor license agreements.  See the NOTICE file\n
     255: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     258: aload_1
     259: ldc           #28                 // String * distributed with this work for additional information\n
     261: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     264: aload_1
     265: ldc           #29                 // String * regarding copyright ownership.  The ASF licenses this file\n
     267: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     270: aload_1
     271: ldc           #30                 // String * to you under the Apache License, Version 2.0 (the\n
     273: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     276: aload_1
     277: ldc           #31                 // String * \"License\"); you may not use this file except in compliance\n
     279: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     282: aload_1
     283: ldc           #32                 // String * with the License.  You may obtain a copy of the License at\n
     285: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     288: aload_1
     289: ldc           #33                 // String *\n
     291: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     294: aload_1
     295: ldc           #34                 // String *     http://www.apache.org/licenses/LICENSE-2.0\n
     297: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     300: aload_1
     301: ldc           #33                 // String *\n
     303: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     306: aload_1
     307: ldc           #35                 // String * Unless required by applicable law or agreed to in writing, software\n
     309: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     312: aload_1
     313: ldc           #36                 // String * distributed under the License is distributed on an \"AS IS\" BASIS,\n
     315: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     318: aload_1
     319: ldc           #37                 // String * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
     321: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     324: aload_1
     325: ldc           #38                 // String * See the License for the specific language governing permissions and\n
     327: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     330: aload_1
     331: ldc           #39                 // String * limitations under the License.\n
     333: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     336: aload_1
     337: ldc           #40                 // String */\n
     339: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     342: aload_1
     343: ldc           #41                 // String \n
     345: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     348: aload_2
     349: new           #12                 // class java/lang/StringBuilder
     352: dup
     353: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     356: ldc           #42                 // String #ifndef __
     358: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     361: aload_0
     362: getfield      #6                  // Field mName:Ljava/lang/String;
     365: invokevirtual #43                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     368: bipush        46
     370: bipush        95
     372: invokevirtual #44                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     375: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     378: ldc           #45                 // String __\n
     380: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     383: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     386: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     389: aload_2
     390: new           #12                 // class java/lang/StringBuilder
     393: dup
     394: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     397: ldc           #46                 // String #define __
     399: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     402: aload_0
     403: getfield      #6                  // Field mName:Ljava/lang/String;
     406: invokevirtual #43                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     409: bipush        46
     411: bipush        95
     413: invokevirtual #44                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     416: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     419: ldc           #45                 // String __\n
     421: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     424: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     427: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     430: aload_2
     431: ldc           #47                 // String #include \"recordio.hh\"\n
     433: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     436: aload_0
     437: getfield      #7                  // Field mInclFiles:Ljava/util/ArrayList;
     440: invokevirtual #48                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     443: astore_3
     444: aload_3
     445: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     450: ifeq          499
     453: aload_3
     454: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     459: checkcast     #51                 // class org/apache/jute/compiler/JFile
     462: astore        4
     464: aload_2
     465: new           #12                 // class java/lang/StringBuilder
     468: dup
     469: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     472: ldc           #52                 // String #include \"
     474: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     477: aload         4
     479: invokevirtual #53                 // Method org/apache/jute/compiler/JFile.getName:()Ljava/lang/String;
     482: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     485: ldc           #54                 // String .hh\"\n
     487: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     490: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     493: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     496: goto          444
     499: aload_1
     500: new           #12                 // class java/lang/StringBuilder
     503: dup
     504: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     507: ldc           #52                 // String #include \"
     509: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     512: aload_0
     513: getfield      #6                  // Field mName:Ljava/lang/String;
     516: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     519: ldc           #54                 // String .hh\"\n
     521: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     524: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     527: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     530: aload_0
     531: getfield      #8                  // Field mRecList:Ljava/util/ArrayList;
     534: invokevirtual #48                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     537: astore_3
     538: aload_3
     539: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     544: ifeq          568
     547: aload_3
     548: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     553: checkcast     #55                 // class org/apache/jute/compiler/JRecord
     556: astore        4
     558: aload         4
     560: aload_2
     561: aload_1
     562: invokevirtual #56                 // Method org/apache/jute/compiler/JRecord.genCppCode:(Ljava/io/FileWriter;Ljava/io/FileWriter;)V
     565: goto          538
     568: aload_2
     569: new           #12                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #57                 // String #endif //
     578: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: getfield      #6                  // Field mName:Ljava/lang/String;
     585: invokevirtual #43                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     588: bipush        46
     590: bipush        95
     592: invokevirtual #44                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     595: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     598: ldc           #45                 // String __\n
     600: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     603: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     606: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     609: aload_2
     610: invokevirtual #58                 // Method java/io/FileWriter.close:()V
     613: aload_1
     614: invokevirtual #58                 // Method java/io/FileWriter.close:()V
     617: return
}
