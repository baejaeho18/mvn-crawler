Compiled from "BinaryOutputArchive.java"
public class org.apache.jute.BinaryOutputArchive implements org.apache.jute.OutputArchive {
  private java.nio.ByteBuffer bb;

  private java.io.DataOutput out;

  public static org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream);
    Code:
       0: new           #1                  // class org/apache/jute/BinaryOutputArchive
       3: dup
       4: new           #2                  // class java/io/DataOutputStream
       7: dup
       8: aload_0
       9: invokespecial #3                  // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      12: invokespecial #4                  // Method "<init>":(Ljava/io/DataOutput;)V
      15: areturn

  public org.apache.jute.BinaryOutputArchive(java.io.DataOutput);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        1024
       8: invokestatic  #6                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      11: putfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
      14: aload_0
      15: aload_1
      16: putfield      #8                  // Field out:Ljava/io/DataOutput;
      19: return

  public void writeByte(byte, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field out:Ljava/io/DataOutput;
       4: iload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: return

  public void writeBool(boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field out:Ljava/io/DataOutput;
       4: iload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      10: return

  public void writeInt(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field out:Ljava/io/DataOutput;
       4: iload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      10: return

  public void writeLong(long, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field out:Ljava/io/DataOutput;
       4: lload_1
       5: invokeinterface #12,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      10: return

  public void writeFloat(float, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field out:Ljava/io/DataOutput;
       4: fload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/io/DataOutput.writeFloat:(F)V
      10: return

  public void writeDouble(double, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field out:Ljava/io/DataOutput;
       4: dload_1
       5: invokeinterface #14,  3           // InterfaceMethod java/io/DataOutput.writeDouble:(D)V
      10: return

  private final java.nio.ByteBuffer stringToByteBuffer(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
       4: invokevirtual #15                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: aload_1
       9: invokeinterface #16,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     212
      22: aload_0
      23: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
      26: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      29: iconst_3
      30: if_icmpge     71
      33: aload_0
      34: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
      37: invokevirtual #18                 // Method java/nio/ByteBuffer.capacity:()I
      40: iconst_1
      41: ishl
      42: invokestatic  #6                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      45: astore        4
      47: aload_0
      48: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
      51: invokevirtual #19                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      54: pop
      55: aload         4
      57: aload_0
      58: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
      61: invokevirtual #20                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      64: pop
      65: aload_0
      66: aload         4
      68: putfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
      71: aload_1
      72: iload_3
      73: invokeinterface #21,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      78: istore        4
      80: iload         4
      82: sipush        128
      85: if_icmpge     102
      88: aload_0
      89: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
      92: iload         4
      94: i2b
      95: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      98: pop
      99: goto          206
     102: iload         4
     104: sipush        2048
     107: if_icmpge     149
     110: aload_0
     111: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
     114: sipush        192
     117: iload         4
     119: bipush        6
     121: ishr
     122: ior
     123: i2b
     124: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     127: pop
     128: aload_0
     129: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
     132: sipush        128
     135: iload         4
     137: bipush        63
     139: iand
     140: ior
     141: i2b
     142: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     145: pop
     146: goto          206
     149: aload_0
     150: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
     153: sipush        224
     156: iload         4
     158: bipush        12
     160: ishr
     161: ior
     162: i2b
     163: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     166: pop
     167: aload_0
     168: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
     171: sipush        128
     174: iload         4
     176: bipush        6
     178: ishr
     179: bipush        63
     181: iand
     182: ior
     183: i2b
     184: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     187: pop
     188: aload_0
     189: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
     192: sipush        128
     195: iload         4
     197: bipush        63
     199: iand
     200: ior
     201: i2b
     202: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     205: pop
     206: iinc          3, 1
     209: goto          17
     212: aload_0
     213: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
     216: invokevirtual #19                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     219: pop
     220: aload_0
     221: getfield      #7                  // Field bb:Ljava/nio/ByteBuffer;
     224: areturn

  public void writeString(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: iconst_m1
       6: ldc           #23                 // String len
       8: invokevirtual #24                 // Method writeInt:(ILjava/lang/String;)V
      11: return
      12: aload_0
      13: aload_1
      14: invokespecial #25                 // Method stringToByteBuffer:(Ljava/lang/CharSequence;)Ljava/nio/ByteBuffer;
      17: astore_3
      18: aload_0
      19: aload_3
      20: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      23: ldc           #23                 // String len
      25: invokevirtual #24                 // Method writeInt:(ILjava/lang/String;)V
      28: aload_0
      29: getfield      #8                  // Field out:Ljava/io/DataOutput;
      32: aload_3
      33: invokevirtual #26                 // Method java/nio/ByteBuffer.array:()[B
      36: aload_3
      37: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      40: aload_3
      41: invokevirtual #28                 // Method java/nio/ByteBuffer.limit:()I
      44: invokeinterface #29,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      49: return

  public void writeBuffer(byte[], java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: getfield      #8                  // Field out:Ljava/io/DataOutput;
       8: iconst_m1
       9: invokeinterface #11,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      14: return
      15: aload_0
      16: getfield      #8                  // Field out:Ljava/io/DataOutput;
      19: aload_1
      20: arraylength
      21: invokeinterface #11,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      26: aload_0
      27: getfield      #8                  // Field out:Ljava/io/DataOutput;
      30: aload_1
      31: invokeinterface #30,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
      36: return

  public void writeRecord(org.apache.jute.Record, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #31,  3           // InterfaceMethod org/apache/jute/Record.serialize:(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
       8: return

  public void startRecord(org.apache.jute.Record, java.lang.String) throws java.io.IOException;
    Code:
       0: return

  public void endRecord(org.apache.jute.Record, java.lang.String) throws java.io.IOException;
    Code:
       0: return

  public void startVector(java.util.List, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: iconst_m1
       6: aload_2
       7: invokevirtual #24                 // Method writeInt:(ILjava/lang/String;)V
      10: return
      11: aload_0
      12: aload_1
      13: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      18: aload_2
      19: invokevirtual #24                 // Method writeInt:(ILjava/lang/String;)V
      22: return

  public void endVector(java.util.List, java.lang.String) throws java.io.IOException;
    Code:
       0: return

  public void startMap(java.util.TreeMap, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method java/util/TreeMap.size:()I
       5: aload_2
       6: invokevirtual #24                 // Method writeInt:(ILjava/lang/String;)V
       9: return

  public void endMap(java.util.TreeMap, java.lang.String) throws java.io.IOException;
    Code:
       0: return
}
