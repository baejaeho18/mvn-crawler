Compiled from "CombinedEntity.java"
class org.apache.http.impl.client.cache.CombinedEntity extends org.apache.http.entity.AbstractHttpEntity {
  private final org.apache.http.client.cache.Resource resource;

  private final java.io.InputStream combinedStream;

  org.apache.http.impl.client.cache.CombinedEntity(org.apache.http.client.cache.Resource, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/http/entity/AbstractHttpEntity."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field resource:Lorg/apache/http/client/cache/Resource;
       9: aload_0
      10: new           #4                  // class java/io/SequenceInputStream
      13: dup
      14: new           #5                  // class org/apache/http/impl/client/cache/CombinedEntity$ResourceStream
      17: dup
      18: aload_0
      19: aload_1
      20: invokeinterface #6,  1            // InterfaceMethod org/apache/http/client/cache/Resource.getInputStream:()Ljava/io/InputStream;
      25: invokespecial #7                  // Method org/apache/http/impl/client/cache/CombinedEntity$ResourceStream."<init>":(Lorg/apache/http/impl/client/cache/CombinedEntity;Ljava/io/InputStream;)V
      28: aload_2
      29: invokespecial #8                  // Method java/io/SequenceInputStream."<init>":(Ljava/io/InputStream;Ljava/io/InputStream;)V
      32: putfield      #9                  // Field combinedStream:Ljava/io/InputStream;
      35: return

  public long getContentLength();
    Code:
       0: ldc2_w        #10                 // long -1l
       3: lreturn

  public boolean isRepeatable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isStreaming();
    Code:
       0: iconst_1
       1: ireturn

  public java.io.InputStream getContent() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field combinedStream:Ljava/io/InputStream;
       4: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #12                 // String Output stream
       3: invokestatic  #13                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #14                 // Method getContent:()Ljava/io/InputStream;
      11: astore_2
      12: sipush        2048
      15: newarray       byte
      17: astore        4
      19: aload_2
      20: aload         4
      22: invokevirtual #15                 // Method java/io/InputStream.read:([B)I
      25: dup
      26: istore_3
      27: iconst_m1
      28: if_icmpeq     42
      31: aload_1
      32: aload         4
      34: iconst_0
      35: iload_3
      36: invokevirtual #16                 // Method java/io/OutputStream.write:([BII)V
      39: goto          19
      42: aload_2
      43: invokevirtual #17                 // Method java/io/InputStream.close:()V
      46: goto          58
      49: astore        5
      51: aload_2
      52: invokevirtual #17                 // Method java/io/InputStream.close:()V
      55: aload         5
      57: athrow
      58: return
    Exception table:
       from    to  target type
          12    42    49   any
          49    51    49   any

  private void dispose();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lorg/apache/http/client/cache/Resource;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/http/client/cache/Resource.dispose:()V
       9: return

  static void access$000(org.apache.http.impl.client.cache.CombinedEntity);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method dispose:()V
       4: return
}
