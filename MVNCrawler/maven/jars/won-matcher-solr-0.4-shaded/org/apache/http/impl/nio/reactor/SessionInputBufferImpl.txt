Compiled from "SessionInputBufferImpl.java"
public class org.apache.http.impl.nio.reactor.SessionInputBufferImpl extends org.apache.http.nio.util.ExpandableBuffer implements org.apache.http.nio.reactor.SessionInputBuffer {
  private final java.nio.charset.CharsetDecoder chardecoder;

  private final org.apache.http.config.MessageConstraints constraints;

  private final int lineBuffersize;

  private java.nio.CharBuffer charbuffer;

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int, int, org.apache.http.config.MessageConstraints, java.nio.charset.CharsetDecoder, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: aload         5
       4: ifnull        12
       7: aload         5
       9: goto          15
      12: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
      15: invokespecial #2                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
      18: aload_0
      19: iload_2
      20: ldc           #3                  // String Line buffer size
      22: invokestatic  #4                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      25: putfield      #5                  // Field lineBuffersize:I
      28: aload_0
      29: aload_3
      30: ifnull        37
      33: aload_3
      34: goto          40
      37: getstatic     #6                  // Field org/apache/http/config/MessageConstraints.DEFAULT:Lorg/apache/http/config/MessageConstraints;
      40: putfield      #7                  // Field constraints:Lorg/apache/http/config/MessageConstraints;
      43: aload_0
      44: aload         4
      46: putfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
      49: return

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int, int, java.nio.charset.CharsetDecoder, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: aload_3
       5: aload         4
       7: invokespecial #9                  // Method "<init>":(IILorg/apache/http/config/MessageConstraints;Ljava/nio/charset/CharsetDecoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      10: return

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int, int, org.apache.http.nio.util.ByteBufferAllocator, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: invokespecial #2                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       6: aload_0
       7: iload_2
       8: ldc           #3                  // String Line buffer size
      10: invokestatic  #4                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      13: putfield      #5                  // Field lineBuffersize:I
      16: aload         4
      18: ldc           #10                 // String http.protocol.element-charset
      20: invokeinterface #11,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      25: checkcast     #12                 // class java/lang/String
      28: astore        5
      30: aload         5
      32: invokestatic  #13                 // Method org/apache/http/util/CharsetUtils.lookup:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      35: astore        6
      37: aload         6
      39: ifnull        124
      42: aload_0
      43: aload         6
      45: invokevirtual #14                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      48: putfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
      51: aload         4
      53: ldc           #15                 // String http.malformed.input.action
      55: invokeinterface #11,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      60: checkcast     #16                 // class java/nio/charset/CodingErrorAction
      63: astore        7
      65: aload_0
      66: getfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
      69: aload         7
      71: ifnull        79
      74: aload         7
      76: goto          82
      79: getstatic     #17                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
      82: invokevirtual #18                 // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      85: pop
      86: aload         4
      88: ldc           #19                 // String http.unmappable.input.action
      90: invokeinterface #11,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      95: checkcast     #16                 // class java/nio/charset/CodingErrorAction
      98: astore        8
     100: aload_0
     101: getfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
     104: aload         8
     106: ifnull        114
     109: aload         8
     111: goto          117
     114: getstatic     #17                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
     117: invokevirtual #20                 // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
     120: pop
     121: goto          129
     124: aload_0
     125: aconst_null
     126: putfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
     129: aload_0
     130: getstatic     #6                  // Field org/apache/http/config/MessageConstraints.DEFAULT:Lorg/apache/http/config/MessageConstraints;
     133: putfield      #7                  // Field constraints:Lorg/apache/http/config/MessageConstraints;
     136: return

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int, int, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       6: aload_3
       7: invokespecial #21                 // Method "<init>":(IILorg/apache/http/nio/util/ByteBufferAllocator;Lorg/apache/http/params/HttpParams;)V
      10: return

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int, int, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: aload_3
       5: ifnull        15
       8: aload_3
       9: invokevirtual #14                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      12: goto          16
      15: aconst_null
      16: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
      19: invokespecial #9                  // Method "<init>":(IILorg/apache/http/config/MessageConstraints;Ljava/nio/charset/CharsetDecoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      22: return

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int, int, org.apache.http.config.MessageConstraints, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: ifnull        17
       9: aload         4
      11: invokevirtual #14                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      14: goto          18
      17: aconst_null
      18: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
      21: invokespecial #9                  // Method "<init>":(IILorg/apache/http/config/MessageConstraints;Ljava/nio/charset/CharsetDecoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      24: return

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: aconst_null
       5: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       8: invokespecial #9                  // Method "<init>":(IILorg/apache/http/config/MessageConstraints;Ljava/nio/charset/CharsetDecoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      11: return

  public org.apache.http.impl.nio.reactor.SessionInputBufferImpl(int);
    Code:
       0: aload_0
       1: iload_1
       2: sipush        256
       5: aconst_null
       6: aconst_null
       7: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
      10: invokespecial #9                  // Method "<init>":(IILorg/apache/http/config/MessageConstraints;Ljava/nio/charset/CharsetDecoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      13: return

  public int fill(java.nio.channels.ReadableByteChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #22                 // String Channel
       3: invokestatic  #23                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #24                 // Method setInputMode:()V
      11: aload_0
      12: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      15: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      18: ifne          25
      21: aload_0
      22: invokevirtual #27                 // Method expand:()V
      25: aload_1
      26: aload_0
      27: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      30: invokeinterface #28,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      35: ireturn

  public int read();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method setOutputMode:()V
       4: aload_0
       5: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
       8: invokevirtual #30                 // Method java/nio/ByteBuffer.get:()B
      11: sipush        255
      14: iand
      15: ireturn

  public int read(java.nio.ByteBuffer, int);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #29                 // Method setOutputMode:()V
      10: aload_1
      11: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
      14: iload_2
      15: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      18: istore_3
      19: aload_0
      20: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      23: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
      26: iload_3
      27: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      30: istore        4
      32: aload_0
      33: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      36: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
      39: iload         4
      41: if_icmple     96
      44: aload_0
      45: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      48: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
      51: istore        5
      53: aload_0
      54: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      57: invokevirtual #34                 // Method java/nio/ByteBuffer.position:()I
      60: iload         4
      62: iadd
      63: istore        6
      65: aload_0
      66: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      69: iload         6
      71: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      74: pop
      75: aload_1
      76: aload_0
      77: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      80: invokevirtual #36                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      83: pop
      84: aload_0
      85: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      88: iload         5
      90: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      93: pop
      94: iload_3
      95: ireturn
      96: aload_1
      97: aload_0
      98: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     101: invokevirtual #36                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     104: pop
     105: iload         4
     107: ireturn

  public int read(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: aload_1
       9: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
      12: invokevirtual #37                 // Method read:(Ljava/nio/ByteBuffer;I)I
      15: ireturn

  public int read(java.nio.channels.WritableByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #29                 // Method setOutputMode:()V
      10: aload_0
      11: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
      17: iload_2
      18: if_icmple     78
      21: aload_0
      22: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      25: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
      28: istore        4
      30: iload         4
      32: aload_0
      33: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      36: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
      39: iload_2
      40: isub
      41: isub
      42: istore        5
      44: aload_0
      45: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      48: iload         5
      50: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      53: pop
      54: aload_1
      55: aload_0
      56: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      59: invokeinterface #38,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      64: istore_3
      65: aload_0
      66: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      69: iload         4
      71: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      74: pop
      75: goto          89
      78: aload_1
      79: aload_0
      80: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      83: invokeinterface #38,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      88: istore_3
      89: iload_3
      90: ireturn

  public int read(java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #29                 // Method setOutputMode:()V
      10: aload_1
      11: aload_0
      12: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      15: invokeinterface #38,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      20: ireturn

  public boolean readLine(org.apache.http.util.CharArrayBuffer, boolean) throws java.nio.charset.CharacterCodingException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method setOutputMode:()V
       4: iconst_m1
       5: istore_3
       6: aload_0
       7: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      10: invokevirtual #34                 // Method java/nio/ByteBuffer.position:()I
      13: istore        4
      15: iload         4
      17: aload_0
      18: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      21: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
      24: if_icmpge     59
      27: aload_0
      28: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      31: iload         4
      33: invokevirtual #39                 // Method java/nio/ByteBuffer.get:(I)B
      36: istore        5
      38: iload         5
      40: bipush        10
      42: if_icmpne     53
      45: iload         4
      47: iconst_1
      48: iadd
      49: istore_3
      50: goto          59
      53: iinc          4, 1
      56: goto          15
      59: aload_0
      60: getfield      #7                  // Field constraints:Lorg/apache/http/config/MessageConstraints;
      63: invokevirtual #40                 // Method org/apache/http/config/MessageConstraints.getMaxLineLength:()I
      66: istore        4
      68: iload         4
      70: ifle          115
      73: iload_3
      74: ifle          81
      77: iload_3
      78: goto          88
      81: aload_0
      82: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      85: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
      88: aload_0
      89: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
      92: invokevirtual #34                 // Method java/nio/ByteBuffer.position:()I
      95: isub
      96: istore        5
      98: iload         5
     100: iload         4
     102: if_icmplt     115
     105: new           #41                 // class org/apache/http/MessageConstraintException
     108: dup
     109: ldc           #42                 // String Maximum line length limit exceeded
     111: invokespecial #43                 // Method org/apache/http/MessageConstraintException."<init>":(Ljava/lang/String;)V
     114: athrow
     115: iload_3
     116: iconst_m1
     117: if_icmpne     147
     120: iload_2
     121: ifeq          145
     124: aload_0
     125: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     128: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     131: ifeq          145
     134: aload_0
     135: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     138: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
     141: istore_3
     142: goto          147
     145: iconst_0
     146: ireturn
     147: aload_0
     148: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     151: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
     154: istore        5
     156: aload_0
     157: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     160: iload_3
     161: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     164: pop
     165: aload_0
     166: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     169: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
     172: aload_0
     173: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     176: invokevirtual #34                 // Method java/nio/ByteBuffer.position:()I
     179: isub
     180: istore        6
     182: aload_1
     183: iload         6
     185: invokevirtual #44                 // Method org/apache/http/util/CharArrayBuffer.ensureCapacity:(I)V
     188: aload_0
     189: getfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
     192: ifnonnull     287
     195: aload_0
     196: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     199: invokevirtual #45                 // Method java/nio/ByteBuffer.hasArray:()Z
     202: ifeq          258
     205: aload_0
     206: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     209: invokevirtual #46                 // Method java/nio/ByteBuffer.array:()[B
     212: astore        7
     214: aload_0
     215: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     218: invokevirtual #34                 // Method java/nio/ByteBuffer.position:()I
     221: istore        8
     223: aload_0
     224: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     227: invokevirtual #31                 // Method java/nio/ByteBuffer.remaining:()I
     230: istore        9
     232: aload_1
     233: aload         7
     235: iload         8
     237: iload         9
     239: invokevirtual #47                 // Method org/apache/http/util/CharArrayBuffer.append:([BII)V
     242: aload_0
     243: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     246: iload         8
     248: iload         9
     250: iadd
     251: invokevirtual #48                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     254: pop
     255: goto          462
     258: aload_0
     259: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     262: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     265: ifeq          462
     268: aload_1
     269: aload_0
     270: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     273: invokevirtual #30                 // Method java/nio/ByteBuffer.get:()B
     276: sipush        255
     279: iand
     280: i2c
     281: invokevirtual #49                 // Method org/apache/http/util/CharArrayBuffer.append:(C)V
     284: goto          258
     287: aload_0
     288: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     291: ifnonnull     305
     294: aload_0
     295: aload_0
     296: getfield      #5                  // Field lineBuffersize:I
     299: invokestatic  #51                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
     302: putfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     305: aload_0
     306: getfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
     309: invokevirtual #52                 // Method java/nio/charset/CharsetDecoder.reset:()Ljava/nio/charset/CharsetDecoder;
     312: pop
     313: aload_0
     314: getfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
     317: aload_0
     318: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     321: aload_0
     322: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     325: iconst_1
     326: invokevirtual #53                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
     329: astore        7
     331: aload         7
     333: invokevirtual #54                 // Method java/nio/charset/CoderResult.isError:()Z
     336: ifeq          344
     339: aload         7
     341: invokevirtual #55                 // Method java/nio/charset/CoderResult.throwException:()V
     344: aload         7
     346: invokevirtual #56                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     349: ifeq          393
     352: aload_0
     353: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     356: invokevirtual #57                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
     359: pop
     360: aload_1
     361: aload_0
     362: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     365: invokevirtual #58                 // Method java/nio/CharBuffer.array:()[C
     368: aload_0
     369: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     372: invokevirtual #59                 // Method java/nio/CharBuffer.position:()I
     375: aload_0
     376: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     379: invokevirtual #60                 // Method java/nio/CharBuffer.remaining:()I
     382: invokevirtual #61                 // Method org/apache/http/util/CharArrayBuffer.append:([CII)V
     385: aload_0
     386: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     389: invokevirtual #62                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
     392: pop
     393: aload         7
     395: invokevirtual #63                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
     398: ifeq          404
     401: goto          407
     404: goto          313
     407: aload_0
     408: getfield      #8                  // Field chardecoder:Ljava/nio/charset/CharsetDecoder;
     411: aload_0
     412: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     415: invokevirtual #64                 // Method java/nio/charset/CharsetDecoder.flush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;
     418: pop
     419: aload_0
     420: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     423: invokevirtual #57                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
     426: pop
     427: aload_0
     428: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     431: invokevirtual #65                 // Method java/nio/CharBuffer.hasRemaining:()Z
     434: ifeq          462
     437: aload_1
     438: aload_0
     439: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     442: invokevirtual #58                 // Method java/nio/CharBuffer.array:()[C
     445: aload_0
     446: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     449: invokevirtual #59                 // Method java/nio/CharBuffer.position:()I
     452: aload_0
     453: getfield      #50                 // Field charbuffer:Ljava/nio/CharBuffer;
     456: invokevirtual #60                 // Method java/nio/CharBuffer.remaining:()I
     459: invokevirtual #61                 // Method org/apache/http/util/CharArrayBuffer.append:([CII)V
     462: aload_0
     463: getfield      #25                 // Field buffer:Ljava/nio/ByteBuffer;
     466: iload         5
     468: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     471: pop
     472: aload_1
     473: invokevirtual #66                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     476: istore        7
     478: iload         7
     480: ifle          532
     483: aload_1
     484: iload         7
     486: iconst_1
     487: isub
     488: invokevirtual #67                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
     491: bipush        10
     493: if_icmpne     505
     496: iinc          7, -1
     499: aload_1
     500: iload         7
     502: invokevirtual #68                 // Method org/apache/http/util/CharArrayBuffer.setLength:(I)V
     505: iload         7
     507: ifle          532
     510: aload_1
     511: iload         7
     513: iconst_1
     514: isub
     515: invokevirtual #67                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
     518: bipush        13
     520: if_icmpne     532
     523: iinc          7, -1
     526: aload_1
     527: iload         7
     529: invokevirtual #68                 // Method org/apache/http/util/CharArrayBuffer.setLength:(I)V
     532: iconst_1
     533: ireturn

  public java.lang.String readLine(boolean) throws java.nio.charset.CharacterCodingException;
    Code:
       0: new           #69                 // class org/apache/http/util/CharArrayBuffer
       3: dup
       4: bipush        64
       6: invokespecial #70                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
       9: astore_2
      10: aload_0
      11: aload_2
      12: iload_1
      13: invokevirtual #71                 // Method readLine:(Lorg/apache/http/util/CharArrayBuffer;Z)Z
      16: istore_3
      17: iload_3
      18: ifeq          26
      21: aload_2
      22: invokevirtual #72                 // Method org/apache/http/util/CharArrayBuffer.toString:()Ljava/lang/String;
      25: areturn
      26: aconst_null
      27: areturn
}
