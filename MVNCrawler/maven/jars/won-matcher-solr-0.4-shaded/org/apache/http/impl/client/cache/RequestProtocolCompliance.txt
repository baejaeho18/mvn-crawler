Compiled from "RequestProtocolCompliance.java"
class org.apache.http.impl.client.cache.RequestProtocolCompliance {
  private final boolean weakETagOnPutDeleteAllowed;

  private static final java.util.List<java.lang.String> disallowedWithNoCache;

  public org.apache.http.impl.client.cache.RequestProtocolCompliance();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field weakETagOnPutDeleteAllowed:Z
       9: return

  public org.apache.http.impl.client.cache.RequestProtocolCompliance(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field weakETagOnPutDeleteAllowed:Z
       9: return

  public java.util.List<org.apache.http.impl.client.cache.RequestProtocolError> requestIsFatallyNonCompliant(org.apache.http.HttpRequest);
    Code:
       0: new           #3                  // class java/util/ArrayList
       3: dup
       4: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokespecial #5                  // Method requestHasWeakETagAndRange:(Lorg/apache/http/HttpRequest;)Lorg/apache/http/impl/client/cache/RequestProtocolError;
      13: astore_3
      14: aload_3
      15: ifnull        26
      18: aload_2
      19: aload_3
      20: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: getfield      #2                  // Field weakETagOnPutDeleteAllowed:Z
      30: ifne          51
      33: aload_0
      34: aload_1
      35: invokespecial #7                  // Method requestHasWeekETagForPUTOrDELETEIfMatch:(Lorg/apache/http/HttpRequest;)Lorg/apache/http/impl/client/cache/RequestProtocolError;
      38: astore_3
      39: aload_3
      40: ifnull        51
      43: aload_2
      44: aload_3
      45: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: aload_0
      52: aload_1
      53: invokespecial #8                  // Method requestContainsNoCacheDirectiveWithFieldName:(Lorg/apache/http/HttpRequest;)Lorg/apache/http/impl/client/cache/RequestProtocolError;
      56: astore_3
      57: aload_3
      58: ifnull        69
      61: aload_2
      62: aload_3
      63: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_2
      70: areturn

  public void makeRequestCompliant(org.apache.http.client.methods.HttpRequestWrapper) throws org.apache.http.client.ClientProtocolException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method requestMustNotHaveEntity:(Lorg/apache/http/HttpRequest;)Z
       5: ifeq          18
       8: aload_1
       9: checkcast     #10                 // class org/apache/http/HttpEntityEnclosingRequest
      12: aconst_null
      13: invokeinterface #11,  2           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.setEntity:(Lorg/apache/http/HttpEntity;)V
      18: aload_0
      19: aload_1
      20: invokespecial #12                 // Method verifyRequestWithExpectContinueFlagHas100continueHeader:(Lorg/apache/http/HttpRequest;)V
      23: aload_0
      24: aload_1
      25: invokespecial #13                 // Method verifyOPTIONSRequestWithBodyHasContentType:(Lorg/apache/http/HttpRequest;)V
      28: aload_0
      29: aload_1
      30: invokespecial #14                 // Method decrementOPTIONSMaxForwardsIfGreaterThen0:(Lorg/apache/http/HttpRequest;)V
      33: aload_0
      34: aload_1
      35: invokespecial #15                 // Method stripOtherFreshnessDirectivesWithNoCache:(Lorg/apache/http/HttpRequest;)V
      38: aload_0
      39: aload_1
      40: invokevirtual #16                 // Method requestVersionIsTooLow:(Lorg/apache/http/HttpRequest;)Z
      43: ifne          54
      46: aload_0
      47: aload_1
      48: invokevirtual #17                 // Method requestMinorVersionIsTooHighMajorVersionsMatch:(Lorg/apache/http/HttpRequest;)Z
      51: ifeq          61
      54: aload_1
      55: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
      58: invokevirtual #19                 // Method org/apache/http/client/methods/HttpRequestWrapper.setProtocolVersion:(Lorg/apache/http/ProtocolVersion;)V
      61: return

  private void stripOtherFreshnessDirectivesWithNoCache(org.apache.http.HttpRequest);
    Code:
       0: new           #3                  // class java/util/ArrayList
       3: dup
       4: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_1
      11: ldc           #20                 // String Cache-Control
      13: invokeinterface #21,  2           // InterfaceMethod org/apache/http/HttpRequest.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;
      18: astore        4
      20: aload         4
      22: arraylength
      23: istore        5
      25: iconst_0
      26: istore        6
      28: iload         6
      30: iload         5
      32: if_icmpge     129
      35: aload         4
      37: iload         6
      39: aaload
      40: astore        7
      42: aload         7
      44: invokeinterface #22,  1           // InterfaceMethod org/apache/http/Header.getElements:()[Lorg/apache/http/HeaderElement;
      49: astore        8
      51: aload         8
      53: arraylength
      54: istore        9
      56: iconst_0
      57: istore        10
      59: iload         10
      61: iload         9
      63: if_icmpge     123
      66: aload         8
      68: iload         10
      70: aaload
      71: astore        11
      73: getstatic     #23                 // Field disallowedWithNoCache:Ljava/util/List;
      76: aload         11
      78: invokeinterface #24,  1           // InterfaceMethod org/apache/http/HeaderElement.getName:()Ljava/lang/String;
      83: invokeinterface #25,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      88: ifne          100
      91: aload_2
      92: aload         11
      94: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      99: pop
     100: ldc           #26                 // String no-cache
     102: aload         11
     104: invokeinterface #24,  1           // InterfaceMethod org/apache/http/HeaderElement.getName:()Ljava/lang/String;
     109: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     112: ifeq          117
     115: iconst_1
     116: istore_3
     117: iinc          10, 1
     120: goto          59
     123: iinc          6, 1
     126: goto          28
     129: iload_3
     130: ifne          134
     133: return
     134: aload_1
     135: ldc           #20                 // String Cache-Control
     137: invokeinterface #28,  2           // InterfaceMethod org/apache/http/HttpRequest.removeHeaders:(Ljava/lang/String;)V
     142: aload_1
     143: ldc           #20                 // String Cache-Control
     145: aload_0
     146: aload_2
     147: invokespecial #29                 // Method buildHeaderFromElements:(Ljava/util/List;)Ljava/lang/String;
     150: invokeinterface #30,  3           // InterfaceMethod org/apache/http/HttpRequest.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
     155: return

  private java.lang.String buildHeaderFromElements(java.util.List<org.apache.http.HeaderElement>);
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #32                 // String
       6: invokespecial #33                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_2
      10: iconst_1
      11: istore_3
      12: aload_1
      13: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          71
      30: aload         4
      32: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #37                 // class org/apache/http/HeaderElement
      40: astore        5
      42: iload_3
      43: ifne          56
      46: aload_2
      47: ldc           #38                 // String ,
      49: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: goto          58
      56: iconst_0
      57: istore_3
      58: aload_2
      59: aload         5
      61: invokevirtual #40                 // Method java/lang/Object.toString:()Ljava/lang/String;
      64: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: goto          20
      71: aload_2
      72: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  private boolean requestMustNotHaveEntity(org.apache.http.HttpRequest);
    Code:
       0: ldc           #42                 // String TRACE
       2: aload_1
       3: invokeinterface #43,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
       8: invokeinterface #44,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      13: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          30
      19: aload_1
      20: instanceof    #10                 // class org/apache/http/HttpEntityEnclosingRequest
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private void decrementOPTIONSMaxForwardsIfGreaterThen0(org.apache.http.HttpRequest);
    Code:
       0: ldc           #45                 // String OPTIONS
       2: aload_1
       3: invokeinterface #43,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
       8: invokeinterface #44,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      13: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifne          20
      19: return
      20: aload_1
      21: ldc           #46                 // String Max-Forwards
      23: invokeinterface #47,  2           // InterfaceMethod org/apache/http/HttpRequest.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      28: astore_2
      29: aload_2
      30: ifnonnull     34
      33: return
      34: aload_1
      35: ldc           #46                 // String Max-Forwards
      37: invokeinterface #28,  2           // InterfaceMethod org/apache/http/HttpRequest.removeHeaders:(Ljava/lang/String;)V
      42: aload_2
      43: invokeinterface #48,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
      48: invokestatic  #49                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      51: istore_3
      52: aload_1
      53: ldc           #46                 // String Max-Forwards
      55: iload_3
      56: iconst_1
      57: isub
      58: invokestatic  #50                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      61: invokeinterface #30,  3           // InterfaceMethod org/apache/http/HttpRequest.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      66: return

  private void verifyOPTIONSRequestWithBodyHasContentType(org.apache.http.HttpRequest);
    Code:
       0: ldc           #45                 // String OPTIONS
       2: aload_1
       3: invokeinterface #43,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
       8: invokeinterface #44,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      13: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifne          20
      19: return
      20: aload_1
      21: instanceof    #10                 // class org/apache/http/HttpEntityEnclosingRequest
      24: ifne          28
      27: return
      28: aload_0
      29: aload_1
      30: checkcast     #10                 // class org/apache/http/HttpEntityEnclosingRequest
      33: invokespecial #51                 // Method addContentTypeHeaderIfMissing:(Lorg/apache/http/HttpEntityEnclosingRequest;)V
      36: return

  private void addContentTypeHeaderIfMissing(org.apache.http.HttpEntityEnclosingRequest);
    Code:
       0: aload_1
       1: invokeinterface #52,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.getEntity:()Lorg/apache/http/HttpEntity;
       6: invokeinterface #53,  1           // InterfaceMethod org/apache/http/HttpEntity.getContentType:()Lorg/apache/http/Header;
      11: ifnonnull     32
      14: aload_1
      15: invokeinterface #52,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.getEntity:()Lorg/apache/http/HttpEntity;
      20: checkcast     #54                 // class org/apache/http/entity/AbstractHttpEntity
      23: getstatic     #55                 // Field org/apache/http/entity/ContentType.APPLICATION_OCTET_STREAM:Lorg/apache/http/entity/ContentType;
      26: invokevirtual #56                 // Method org/apache/http/entity/ContentType.getMimeType:()Ljava/lang/String;
      29: invokevirtual #57                 // Method org/apache/http/entity/AbstractHttpEntity.setContentType:(Ljava/lang/String;)V
      32: return

  private void verifyRequestWithExpectContinueFlagHas100continueHeader(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/apache/http/HttpEntityEnclosingRequest
       4: ifeq          47
       7: aload_1
       8: checkcast     #10                 // class org/apache/http/HttpEntityEnclosingRequest
      11: invokeinterface #58,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.expectContinue:()Z
      16: ifeq          39
      19: aload_1
      20: checkcast     #10                 // class org/apache/http/HttpEntityEnclosingRequest
      23: invokeinterface #52,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.getEntity:()Lorg/apache/http/HttpEntity;
      28: ifnull        39
      31: aload_0
      32: aload_1
      33: invokespecial #59                 // Method add100ContinueHeaderIfMissing:(Lorg/apache/http/HttpRequest;)V
      36: goto          52
      39: aload_0
      40: aload_1
      41: invokespecial #60                 // Method remove100ContinueHeaderIfExists:(Lorg/apache/http/HttpRequest;)V
      44: goto          52
      47: aload_0
      48: aload_1
      49: invokespecial #60                 // Method remove100ContinueHeaderIfExists:(Lorg/apache/http/HttpRequest;)V
      52: return

  private void remove100ContinueHeaderIfExists(org.apache.http.HttpRequest);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ldc           #61                 // String Expect
       5: invokeinterface #21,  2           // InterfaceMethod org/apache/http/HttpRequest.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;
      10: astore_3
      11: new           #3                  // class java/util/ArrayList
      14: dup
      15: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      18: astore        4
      20: aload_3
      21: astore        5
      23: aload         5
      25: arraylength
      26: istore        6
      28: iconst_0
      29: istore        7
      31: iload         7
      33: iload         6
      35: if_icmpge     200
      38: aload         5
      40: iload         7
      42: aaload
      43: astore        8
      45: aload         8
      47: invokeinterface #22,  1           // InterfaceMethod org/apache/http/Header.getElements:()[Lorg/apache/http/HeaderElement;
      52: astore        9
      54: aload         9
      56: arraylength
      57: istore        10
      59: iconst_0
      60: istore        11
      62: iload         11
      64: iload         10
      66: if_icmpge     112
      69: aload         9
      71: iload         11
      73: aaload
      74: astore        12
      76: ldc           #62                 // String 100-continue
      78: aload         12
      80: invokeinterface #24,  1           // InterfaceMethod org/apache/http/HeaderElement.getName:()Ljava/lang/String;
      85: invokevirtual #63                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      88: ifne          104
      91: aload         4
      93: aload         12
      95: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     100: pop
     101: goto          106
     104: iconst_1
     105: istore_2
     106: iinc          11, 1
     109: goto          62
     112: iload_2
     113: ifeq          185
     116: aload_1
     117: aload         8
     119: invokeinterface #64,  2           // InterfaceMethod org/apache/http/HttpRequest.removeHeader:(Lorg/apache/http/Header;)V
     124: aload         4
     126: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     131: astore        9
     133: aload         9
     135: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     140: ifeq          184
     143: aload         9
     145: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     150: checkcast     #37                 // class org/apache/http/HeaderElement
     153: astore        10
     155: new           #65                 // class org/apache/http/message/BasicHeader
     158: dup
     159: ldc           #61                 // String Expect
     161: aload         10
     163: invokeinterface #24,  1           // InterfaceMethod org/apache/http/HeaderElement.getName:()Ljava/lang/String;
     168: invokespecial #66                 // Method org/apache/http/message/BasicHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     171: astore        11
     173: aload_1
     174: aload         11
     176: invokeinterface #67,  2           // InterfaceMethod org/apache/http/HttpRequest.addHeader:(Lorg/apache/http/Header;)V
     181: goto          133
     184: return
     185: new           #3                  // class java/util/ArrayList
     188: dup
     189: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
     192: astore        4
     194: iinc          7, 1
     197: goto          31
     200: return

  private void add100ContinueHeaderIfMissing(org.apache.http.HttpRequest);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ldc           #61                 // String Expect
       5: invokeinterface #21,  2           // InterfaceMethod org/apache/http/HttpRequest.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;
      10: astore_3
      11: aload_3
      12: arraylength
      13: istore        4
      15: iconst_0
      16: istore        5
      18: iload         5
      20: iload         4
      22: if_icmpge     91
      25: aload_3
      26: iload         5
      28: aaload
      29: astore        6
      31: aload         6
      33: invokeinterface #22,  1           // InterfaceMethod org/apache/http/Header.getElements:()[Lorg/apache/http/HeaderElement;
      38: astore        7
      40: aload         7
      42: arraylength
      43: istore        8
      45: iconst_0
      46: istore        9
      48: iload         9
      50: iload         8
      52: if_icmpge     85
      55: aload         7
      57: iload         9
      59: aaload
      60: astore        10
      62: ldc           #62                 // String 100-continue
      64: aload         10
      66: invokeinterface #24,  1           // InterfaceMethod org/apache/http/HeaderElement.getName:()Ljava/lang/String;
      71: invokevirtual #63                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      74: ifeq          79
      77: iconst_1
      78: istore_2
      79: iinc          9, 1
      82: goto          48
      85: iinc          5, 1
      88: goto          18
      91: iload_2
      92: ifne          105
      95: aload_1
      96: ldc           #61                 // String Expect
      98: ldc           #62                 // String 100-continue
     100: invokeinterface #68,  3           // InterfaceMethod org/apache/http/HttpRequest.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     105: return

  protected boolean requestMinorVersionIsTooHighMajorVersionsMatch(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #69,  1           // InterfaceMethod org/apache/http/HttpRequest.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
       6: astore_2
       7: aload_2
       8: invokevirtual #70                 // Method org/apache/http/ProtocolVersion.getMajor:()I
      11: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
      14: invokevirtual #71                 // Method org/apache/http/HttpVersion.getMajor:()I
      17: if_icmpeq     22
      20: iconst_0
      21: ireturn
      22: aload_2
      23: invokevirtual #72                 // Method org/apache/http/ProtocolVersion.getMinor:()I
      26: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
      29: invokevirtual #73                 // Method org/apache/http/HttpVersion.getMinor:()I
      32: if_icmple     37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  protected boolean requestVersionIsTooLow(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #69,  1           // InterfaceMethod org/apache/http/HttpRequest.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
       6: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
       9: invokevirtual #74                 // Method org/apache/http/ProtocolVersion.compareToVersion:(Lorg/apache/http/ProtocolVersion;)I
      12: ifge          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public org.apache.http.HttpResponse getErrorForRequest(org.apache.http.impl.client.cache.RequestProtocolError);
    Code:
       0: getstatic     #75                 // Field org/apache/http/impl/client/cache/RequestProtocolCompliance$1.$SwitchMap$org$apache$http$impl$client$cache$RequestProtocolError:[I
       3: aload_1
       4: invokevirtual #76                 // Method org/apache/http/impl/client/cache/RequestProtocolError.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 4
                     1: 40
                     2: 63
                     3: 86
                     4: 109
               default: 132
          }
      40: new           #77                 // class org/apache/http/message/BasicHttpResponse
      43: dup
      44: new           #78                 // class org/apache/http/message/BasicStatusLine
      47: dup
      48: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
      51: sipush        411
      54: ldc           #32                 // String
      56: invokespecial #79                 // Method org/apache/http/message/BasicStatusLine."<init>":(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V
      59: invokespecial #80                 // Method org/apache/http/message/BasicHttpResponse."<init>":(Lorg/apache/http/StatusLine;)V
      62: areturn
      63: new           #77                 // class org/apache/http/message/BasicHttpResponse
      66: dup
      67: new           #78                 // class org/apache/http/message/BasicStatusLine
      70: dup
      71: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
      74: sipush        400
      77: ldc           #81                 // String Weak eTag not compatible with byte range
      79: invokespecial #79                 // Method org/apache/http/message/BasicStatusLine."<init>":(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V
      82: invokespecial #80                 // Method org/apache/http/message/BasicHttpResponse."<init>":(Lorg/apache/http/StatusLine;)V
      85: areturn
      86: new           #77                 // class org/apache/http/message/BasicHttpResponse
      89: dup
      90: new           #78                 // class org/apache/http/message/BasicStatusLine
      93: dup
      94: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
      97: sipush        400
     100: ldc           #82                 // String Weak eTag not compatible with PUT or DELETE requests
     102: invokespecial #79                 // Method org/apache/http/message/BasicStatusLine."<init>":(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V
     105: invokespecial #80                 // Method org/apache/http/message/BasicHttpResponse."<init>":(Lorg/apache/http/StatusLine;)V
     108: areturn
     109: new           #77                 // class org/apache/http/message/BasicHttpResponse
     112: dup
     113: new           #78                 // class org/apache/http/message/BasicStatusLine
     116: dup
     117: getstatic     #18                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
     120: sipush        400
     123: ldc           #83                 // String No-Cache directive MUST NOT include a field name
     125: invokespecial #79                 // Method org/apache/http/message/BasicStatusLine."<init>":(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V
     128: invokespecial #80                 // Method org/apache/http/message/BasicHttpResponse."<init>":(Lorg/apache/http/StatusLine;)V
     131: areturn
     132: new           #84                 // class java/lang/IllegalStateException
     135: dup
     136: ldc           #85                 // String The request was compliant, therefore no error can be generated for it.
     138: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     141: athrow

  private org.apache.http.impl.client.cache.RequestProtocolError requestHasWeakETagAndRange(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #43,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
       6: invokeinterface #44,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      11: astore_2
      12: ldc           #87                 // String GET
      14: aload_2
      15: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          23
      21: aconst_null
      22: areturn
      23: aload_1
      24: ldc           #88                 // String Range
      26: invokeinterface #47,  2           // InterfaceMethod org/apache/http/HttpRequest.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      31: astore_3
      32: aload_3
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: aload_1
      39: ldc           #89                 // String If-Range
      41: invokeinterface #47,  2           // InterfaceMethod org/apache/http/HttpRequest.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      46: astore        4
      48: aload         4
      50: ifnonnull     55
      53: aconst_null
      54: areturn
      55: aload         4
      57: invokeinterface #48,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
      62: astore        5
      64: aload         5
      66: ldc           #90                 // String W/
      68: invokevirtual #91                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      71: ifeq          78
      74: getstatic     #92                 // Field org/apache/http/impl/client/cache/RequestProtocolError.WEAK_ETAG_AND_RANGE_ERROR:Lorg/apache/http/impl/client/cache/RequestProtocolError;
      77: areturn
      78: aconst_null
      79: areturn

  private org.apache.http.impl.client.cache.RequestProtocolError requestHasWeekETagForPUTOrDELETEIfMatch(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #43,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
       6: invokeinterface #44,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      11: astore_2
      12: ldc           #93                 // String PUT
      14: aload_2
      15: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          32
      21: ldc           #94                 // String DELETE
      23: aload_2
      24: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifne          32
      30: aconst_null
      31: areturn
      32: aload_1
      33: ldc           #95                 // String If-Match
      35: invokeinterface #47,  2           // InterfaceMethod org/apache/http/HttpRequest.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      40: astore_3
      41: aload_3
      42: ifnull        70
      45: aload_3
      46: invokeinterface #48,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
      51: astore        4
      53: aload         4
      55: ldc           #90                 // String W/
      57: invokevirtual #91                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      60: ifeq          67
      63: getstatic     #96                 // Field org/apache/http/impl/client/cache/RequestProtocolError.WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR:Lorg/apache/http/impl/client/cache/RequestProtocolError;
      66: areturn
      67: goto          110
      70: aload_1
      71: ldc           #97                 // String If-None-Match
      73: invokeinterface #47,  2           // InterfaceMethod org/apache/http/HttpRequest.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      78: astore        4
      80: aload         4
      82: ifnonnull     87
      85: aconst_null
      86: areturn
      87: aload         4
      89: invokeinterface #48,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
      94: astore        5
      96: aload         5
      98: ldc           #90                 // String W/
     100: invokevirtual #91                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     103: ifeq          110
     106: getstatic     #96                 // Field org/apache/http/impl/client/cache/RequestProtocolError.WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR:Lorg/apache/http/impl/client/cache/RequestProtocolError;
     109: areturn
     110: aconst_null
     111: areturn

  private org.apache.http.impl.client.cache.RequestProtocolError requestContainsNoCacheDirectiveWithFieldName(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: ldc           #20                 // String Cache-Control
       3: invokeinterface #21,  2           // InterfaceMethod org/apache/http/HttpRequest.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     99
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload         5
      29: invokeinterface #22,  1           // InterfaceMethod org/apache/http/Header.getElements:()[Lorg/apache/http/HeaderElement;
      34: astore        6
      36: aload         6
      38: arraylength
      39: istore        7
      41: iconst_0
      42: istore        8
      44: iload         8
      46: iload         7
      48: if_icmpge     93
      51: aload         6
      53: iload         8
      55: aaload
      56: astore        9
      58: ldc           #26                 // String no-cache
      60: aload         9
      62: invokeinterface #24,  1           // InterfaceMethod org/apache/http/HeaderElement.getName:()Ljava/lang/String;
      67: invokevirtual #63                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      70: ifeq          87
      73: aload         9
      75: invokeinterface #98,  1           // InterfaceMethod org/apache/http/HeaderElement.getValue:()Ljava/lang/String;
      80: ifnull        87
      83: getstatic     #99                 // Field org/apache/http/impl/client/cache/RequestProtocolError.NO_CACHE_DIRECTIVE_WITH_FIELD_NAME:Lorg/apache/http/impl/client/cache/RequestProtocolError;
      86: areturn
      87: iinc          8, 1
      90: goto          44
      93: iinc          4, 1
      96: goto          15
      99: aconst_null
     100: areturn

  static {};
    Code:
       0: iconst_3
       1: anewarray     #100                // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #101                // String min-fresh
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #102                // String max-stale
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #103                // String max-age
      18: aastore
      19: invokestatic  #104                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: putstatic     #23                 // Field disallowedWithNoCache:Ljava/util/List;
      25: return
}
