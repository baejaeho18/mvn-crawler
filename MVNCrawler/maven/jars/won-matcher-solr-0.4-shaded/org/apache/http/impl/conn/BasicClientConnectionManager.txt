Compiled from "BasicClientConnectionManager.java"
public class org.apache.http.impl.conn.BasicClientConnectionManager implements org.apache.http.conn.ClientConnectionManager {
  private final org.apache.commons.logging.Log log;

  private static final java.util.concurrent.atomic.AtomicLong COUNTER;

  public static final java.lang.String MISUSE_MESSAGE;

  private final org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;

  private final org.apache.http.conn.ClientConnectionOperator connOperator;

  private org.apache.http.impl.conn.HttpPoolEntry poolEntry;

  private org.apache.http.impl.conn.ManagedClientConnectionImpl conn;

  private volatile boolean shutdown;

  public org.apache.http.impl.conn.BasicClientConnectionManager(org.apache.http.conn.scheme.SchemeRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ldc           #5                  // String Scheme registry
      18: invokestatic  #6                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field schemeRegistry:Lorg/apache/http/conn/scheme/SchemeRegistry;
      27: aload_0
      28: aload_0
      29: aload_1
      30: invokevirtual #8                  // Method createConnectionOperator:(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;
      33: putfield      #9                  // Field connOperator:Lorg/apache/http/conn/ClientConnectionOperator;
      36: return

  public org.apache.http.impl.conn.BasicClientConnectionManager();
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/apache/http/impl/conn/SchemeRegistryFactory.createDefault:()Lorg/apache/http/conn/scheme/SchemeRegistry;
       4: invokespecial #11                 // Method "<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
       7: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method shutdown:()V
       4: aload_0
       5: invokespecial #13                 // Method java/lang/Object.finalize:()V
       8: goto          18
      11: astore_1
      12: aload_0
      13: invokespecial #13                 // Method java/lang/Object.finalize:()V
      16: aload_1
      17: athrow
      18: return
    Exception table:
       from    to  target type
           0     4    11   any
          11    12    11   any

  public org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry();
    Code:
       0: aload_0
       1: getfield      #7                  // Field schemeRegistry:Lorg/apache/http/conn/scheme/SchemeRegistry;
       4: areturn

  protected org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry);
    Code:
       0: new           #14                 // class org/apache/http/impl/conn/DefaultClientConnectionOperator
       3: dup
       4: aload_1
       5: invokespecial #15                 // Method org/apache/http/impl/conn/DefaultClientConnectionOperator."<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
       8: areturn

  public final org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
    Code:
       0: new           #16                 // class org/apache/http/impl/conn/BasicClientConnectionManager$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #17                 // Method org/apache/http/impl/conn/BasicClientConnectionManager$1."<init>":(Lorg/apache/http/impl/conn/BasicClientConnectionManager;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)V
      10: areturn

  private void assertNotShutdown();
    Code:
       0: aload_0
       1: getfield      #18                 // Field shutdown:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String Connection manager has been shut down
      14: invokestatic  #20                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      17: return

  org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #21                 // String Route
       3: invokestatic  #6                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: invokespecial #22                 // Method assertNotShutdown:()V
      15: aload_0
      16: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      19: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      24: ifeq          55
      27: aload_0
      28: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      31: new           #24                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #26                 // String Get connection for route
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      55: aload_0
      56: getfield      #31                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
      59: ifnonnull     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #32                 // String Invalid use of BasicClientConnManager: connection still allocated.\nMake sure to release the connection before allocating another one.
      69: invokestatic  #20                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      72: aload_0
      73: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      76: ifnull        105
      79: aload_0
      80: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      83: invokevirtual #34                 // Method org/apache/http/impl/conn/HttpPoolEntry.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;
      86: aload_1
      87: invokevirtual #35                 // Method org/apache/http/conn/routing/HttpRoute.equals:(Ljava/lang/Object;)Z
      90: ifne          105
      93: aload_0
      94: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      97: invokevirtual #36                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
     100: aload_0
     101: aconst_null
     102: putfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     105: aload_0
     106: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     109: ifnonnull     158
     112: getstatic     #37                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
     115: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
     118: invokestatic  #39                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     121: astore        4
     123: aload_0
     124: getfield      #9                  // Field connOperator:Lorg/apache/http/conn/ClientConnectionOperator;
     127: invokeinterface #40,  1           // InterfaceMethod org/apache/http/conn/ClientConnectionOperator.createConnection:()Lorg/apache/http/conn/OperatedClientConnection;
     132: astore        5
     134: aload_0
     135: new           #41                 // class org/apache/http/impl/conn/HttpPoolEntry
     138: dup
     139: aload_0
     140: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
     143: aload         4
     145: aload_1
     146: aload         5
     148: lconst_0
     149: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     152: invokespecial #43                 // Method org/apache/http/impl/conn/HttpPoolEntry."<init>":(Lorg/apache/commons/logging/Log;Ljava/lang/String;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/conn/OperatedClientConnection;JLjava/util/concurrent/TimeUnit;)V
     155: putfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     158: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
     161: lstore        4
     163: aload_0
     164: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     167: lload         4
     169: invokevirtual #45                 // Method org/apache/http/impl/conn/HttpPoolEntry.isExpired:(J)Z
     172: ifeq          192
     175: aload_0
     176: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     179: invokevirtual #36                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
     182: aload_0
     183: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     186: invokevirtual #46                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     189: invokevirtual #47                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
     192: aload_0
     193: new           #48                 // class org/apache/http/impl/conn/ManagedClientConnectionImpl
     196: dup
     197: aload_0
     198: aload_0
     199: getfield      #9                  // Field connOperator:Lorg/apache/http/conn/ClientConnectionOperator;
     202: aload_0
     203: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     206: invokespecial #49                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl."<init>":(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/impl/conn/HttpPoolEntry;)V
     209: putfield      #31                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     212: aload_0
     213: getfield      #31                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     216: aload_3
     217: monitorexit
     218: areturn
     219: astore        6
     221: aload_3
     222: monitorexit
     223: aload         6
     225: athrow
    Exception table:
       from    to  target type
          11   218   219   any
         219   223   219   any

  private void shutdownConnection(org.apache.http.HttpClientConnection);
    Code:
       0: aload_1
       1: invokeinterface #50,  1           // InterfaceMethod org/apache/http/HttpClientConnection.shutdown:()V
       6: goto          34
       9: astore_2
      10: aload_0
      11: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      14: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      19: ifeq          34
      22: aload_0
      23: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      26: ldc           #52                 // String I/O exception shutting down connection
      28: aload_2
      29: invokeinterface #53,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      34: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  public void releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: instanceof    #48                 // class org/apache/http/impl/conn/ManagedClientConnectionImpl
       4: ldc           #54                 // String Connection class mismatch, connection not obtained from this manager
       6: invokestatic  #55                 // Method org/apache/http/util/Args.check:(ZLjava/lang/String;)V
       9: aload_1
      10: checkcast     #48                 // class org/apache/http/impl/conn/ManagedClientConnectionImpl
      13: astore        5
      15: aload         5
      17: dup
      18: astore        6
      20: monitorenter
      21: aload_0
      22: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      25: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      30: ifeq          61
      33: aload_0
      34: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      37: new           #24                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #56                 // String Releasing connection
      46: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      61: aload         5
      63: invokevirtual #57                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.getPoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
      66: ifnonnull     73
      69: aload         6
      71: monitorexit
      72: return
      73: aload         5
      75: invokevirtual #58                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.getManager:()Lorg/apache/http/conn/ClientConnectionManager;
      78: astore        7
      80: aload         7
      82: aload_0
      83: if_acmpne     90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ldc           #59                 // String Connection not obtained from this manager
      93: invokestatic  #20                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      96: aload_0
      97: dup
      98: astore        8
     100: monitorenter
     101: aload_0
     102: getfield      #18                 // Field shutdown:Z
     105: ifeq          121
     108: aload_0
     109: aload         5
     111: invokespecial #60                 // Method shutdownConnection:(Lorg/apache/http/HttpClientConnection;)V
     114: aload         8
     116: monitorexit
     117: aload         6
     119: monitorexit
     120: return
     121: aload         5
     123: invokevirtual #61                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.isOpen:()Z
     126: ifeq          143
     129: aload         5
     131: invokevirtual #62                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.isMarkedReusable:()Z
     134: ifne          143
     137: aload_0
     138: aload         5
     140: invokespecial #60                 // Method shutdownConnection:(Lorg/apache/http/HttpClientConnection;)V
     143: aload         5
     145: invokevirtual #62                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.isMarkedReusable:()Z
     148: ifeq          257
     151: aload_0
     152: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     155: lload_2
     156: aload         4
     158: ifnull        166
     161: aload         4
     163: goto          169
     166: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     169: invokevirtual #63                 // Method org/apache/http/impl/conn/HttpPoolEntry.updateExpiry:(JLjava/util/concurrent/TimeUnit;)V
     172: aload_0
     173: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
     176: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     181: ifeq          257
     184: lload_2
     185: lconst_0
     186: lcmp
     187: ifle          224
     190: new           #24                 // class java/lang/StringBuilder
     193: dup
     194: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     197: ldc           #64                 // String for
     199: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: lload_2
     203: invokevirtual #65                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     206: ldc           #66                 // String
     208: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: aload         4
     213: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     216: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     219: astore        9
     221: goto          228
     224: ldc           #67                 // String indefinitely
     226: astore        9
     228: aload_0
     229: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
     232: new           #24                 // class java/lang/StringBuilder
     235: dup
     236: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     239: ldc           #68                 // String Connection can be kept alive
     241: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: aload         9
     246: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     257: aload         5
     259: invokevirtual #69                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.detach:()Lorg/apache/http/impl/conn/HttpPoolEntry;
     262: pop
     263: aload_0
     264: aconst_null
     265: putfield      #31                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     268: aload_0
     269: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     272: invokevirtual #70                 // Method org/apache/http/impl/conn/HttpPoolEntry.isClosed:()Z
     275: ifeq          317
     278: aload_0
     279: aconst_null
     280: putfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     283: goto          317
     286: astore        10
     288: aload         5
     290: invokevirtual #69                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.detach:()Lorg/apache/http/impl/conn/HttpPoolEntry;
     293: pop
     294: aload_0
     295: aconst_null
     296: putfield      #31                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     299: aload_0
     300: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     303: invokevirtual #70                 // Method org/apache/http/impl/conn/HttpPoolEntry.isClosed:()Z
     306: ifeq          314
     309: aload_0
     310: aconst_null
     311: putfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     314: aload         10
     316: athrow
     317: aload         8
     319: monitorexit
     320: goto          331
     323: astore        11
     325: aload         8
     327: monitorexit
     328: aload         11
     330: athrow
     331: aload         6
     333: monitorexit
     334: goto          345
     337: astore        12
     339: aload         6
     341: monitorexit
     342: aload         12
     344: athrow
     345: return
    Exception table:
       from    to  target type
         121   257   286   any
         286   288   286   any
         101   117   323   any
         121   320   323   any
         323   328   323   any
          21    72   337   any
          73   120   337   any
         121   334   337   any
         337   342   337   any

  public void closeExpiredConnections();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokespecial #22                 // Method assertNotShutdown:()V
       8: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
      11: lstore_2
      12: aload_0
      13: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      16: ifnull        47
      19: aload_0
      20: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: lload_2
      24: invokevirtual #45                 // Method org/apache/http/impl/conn/HttpPoolEntry.isExpired:(J)Z
      27: ifeq          47
      30: aload_0
      31: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      34: invokevirtual #36                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
      37: aload_0
      38: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      41: invokevirtual #46                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      44: invokevirtual #47                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      47: aload_1
      48: monitorexit
      49: goto          59
      52: astore        4
      54: aload_1
      55: monitorexit
      56: aload         4
      58: athrow
      59: return
    Exception table:
       from    to  target type
           4    49    52   any
          52    56    52   any

  public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ldc           #71                 // String Time unit
       3: invokestatic  #6                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: dup
       9: astore        4
      11: monitorenter
      12: aload_0
      13: invokespecial #22                 // Method assertNotShutdown:()V
      16: aload_3
      17: lload_1
      18: invokevirtual #72                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      21: lstore        5
      23: lload         5
      25: lconst_0
      26: lcmp
      27: ifge          33
      30: lconst_0
      31: lstore        5
      33: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
      36: lload         5
      38: lsub
      39: lstore        7
      41: aload_0
      42: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      45: ifnull        78
      48: aload_0
      49: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      52: invokevirtual #73                 // Method org/apache/http/impl/conn/HttpPoolEntry.getUpdated:()J
      55: lload         7
      57: lcmp
      58: ifgt          78
      61: aload_0
      62: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      65: invokevirtual #36                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
      68: aload_0
      69: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      72: invokevirtual #46                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      75: invokevirtual #47                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      78: aload         4
      80: monitorexit
      81: goto          92
      84: astore        9
      86: aload         4
      88: monitorexit
      89: aload         9
      91: athrow
      92: return
    Exception table:
       from    to  target type
          12    81    84   any
          84    89    84   any

  public void shutdown();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: putfield      #18                 // Field shutdown:Z
       9: aload_0
      10: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      13: ifnull        23
      16: aload_0
      17: getfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      20: invokevirtual #36                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
      23: aload_0
      24: aconst_null
      25: putfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      28: aload_0
      29: aconst_null
      30: putfield      #31                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
      33: goto          49
      36: astore_2
      37: aload_0
      38: aconst_null
      39: putfield      #33                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      42: aload_0
      43: aconst_null
      44: putfield      #31                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
      47: aload_2
      48: athrow
      49: aload_1
      50: monitorexit
      51: goto          59
      54: astore_3
      55: aload_1
      56: monitorexit
      57: aload_3
      58: athrow
      59: return
    Exception table:
       from    to  target type
           9    23    36   any
          36    37    36   any
           4    51    54   any
          54    57    54   any

  static {};
    Code:
       0: new           #74                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #75                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: putstatic     #37                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
      10: return
}
