Compiled from "IOReactorConfig.java"
public final class org.apache.http.impl.nio.reactor.IOReactorConfig implements java.lang.Cloneable {
  private static final int AVAIL_PROCS;

  public static final org.apache.http.impl.nio.reactor.IOReactorConfig DEFAULT;

  private long selectInterval;

  private long shutdownGracePeriod;

  private boolean interestOpQueued;

  private int ioThreadCount;

  private int soTimeout;

  private boolean soReuseAddress;

  private int soLinger;

  private boolean soKeepAlive;

  private boolean tcpNoDelay;

  private int connectTimeout;

  private int sndBufSize;

  private int rcvBufSize;

  private final int backlogSize;

  public org.apache.http.impl.nio.reactor.IOReactorConfig();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #3                  // long 1000l
       8: putfield      #5                  // Field selectInterval:J
      11: aload_0
      12: ldc2_w        #6                  // long 500l
      15: putfield      #8                  // Field shutdownGracePeriod:J
      18: aload_0
      19: iconst_0
      20: putfield      #9                  // Field interestOpQueued:Z
      23: aload_0
      24: getstatic     #1                  // Field AVAIL_PROCS:I
      27: putfield      #10                 // Field ioThreadCount:I
      30: aload_0
      31: iconst_0
      32: putfield      #11                 // Field soTimeout:I
      35: aload_0
      36: iconst_0
      37: putfield      #12                 // Field soReuseAddress:Z
      40: aload_0
      41: iconst_m1
      42: putfield      #13                 // Field soLinger:I
      45: aload_0
      46: iconst_0
      47: putfield      #14                 // Field soKeepAlive:Z
      50: aload_0
      51: iconst_1
      52: putfield      #15                 // Field tcpNoDelay:Z
      55: aload_0
      56: iconst_0
      57: putfield      #16                 // Field connectTimeout:I
      60: aload_0
      61: iconst_0
      62: putfield      #17                 // Field sndBufSize:I
      65: aload_0
      66: iconst_0
      67: putfield      #18                 // Field rcvBufSize:I
      70: aload_0
      71: iconst_0
      72: putfield      #19                 // Field backlogSize:I
      75: return

  org.apache.http.impl.nio.reactor.IOReactorConfig(long, long, boolean, int, int, boolean, int, boolean, boolean, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #5                  // Field selectInterval:J
       9: aload_0
      10: lload_3
      11: putfield      #8                  // Field shutdownGracePeriod:J
      14: aload_0
      15: iload         5
      17: putfield      #9                  // Field interestOpQueued:Z
      20: aload_0
      21: iload         6
      23: putfield      #10                 // Field ioThreadCount:I
      26: aload_0
      27: iload         7
      29: putfield      #11                 // Field soTimeout:I
      32: aload_0
      33: iload         8
      35: putfield      #12                 // Field soReuseAddress:Z
      38: aload_0
      39: iload         9
      41: putfield      #13                 // Field soLinger:I
      44: aload_0
      45: iload         10
      47: putfield      #14                 // Field soKeepAlive:Z
      50: aload_0
      51: iload         11
      53: putfield      #15                 // Field tcpNoDelay:Z
      56: aload_0
      57: iload         12
      59: putfield      #16                 // Field connectTimeout:I
      62: aload_0
      63: iload         13
      65: putfield      #17                 // Field sndBufSize:I
      68: aload_0
      69: iload         14
      71: putfield      #18                 // Field rcvBufSize:I
      74: aload_0
      75: iload         15
      77: putfield      #19                 // Field backlogSize:I
      80: return

  public long getSelectInterval();
    Code:
       0: aload_0
       1: getfield      #5                  // Field selectInterval:J
       4: lreturn

  public void setSelectInterval(long);
    Code:
       0: lload_1
       1: ldc           #20                 // String Select internal
       3: invokestatic  #21                 // Method org/apache/http/util/Args.positive:(JLjava/lang/String;)J
       6: pop2
       7: aload_0
       8: lload_1
       9: putfield      #5                  // Field selectInterval:J
      12: return

  public long getShutdownGracePeriod();
    Code:
       0: aload_0
       1: getfield      #8                  // Field shutdownGracePeriod:J
       4: lreturn

  public void setShutdownGracePeriod(long);
    Code:
       0: lload_1
       1: ldc           #22                 // String Shutdown grace period
       3: invokestatic  #21                 // Method org/apache/http/util/Args.positive:(JLjava/lang/String;)J
       6: pop2
       7: aload_0
       8: lload_1
       9: putfield      #8                  // Field shutdownGracePeriod:J
      12: return

  public boolean isInterestOpQueued();
    Code:
       0: aload_0
       1: getfield      #9                  // Field interestOpQueued:Z
       4: ireturn

  public void setInterestOpQueued(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field interestOpQueued:Z
       5: return

  public int getIoThreadCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ioThreadCount:I
       4: ireturn

  public void setIoThreadCount(int);
    Code:
       0: iload_1
       1: ldc           #23                 // String I/O thread count
       3: invokestatic  #24                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: iload_1
       9: putfield      #10                 // Field ioThreadCount:I
      12: return

  public int getSoTimeout();
    Code:
       0: aload_0
       1: getfield      #11                 // Field soTimeout:I
       4: ireturn

  public void setSoTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field soTimeout:I
       5: return

  public boolean isSoReuseAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field soReuseAddress:Z
       4: ireturn

  public void setSoReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field soReuseAddress:Z
       5: return

  public int getSoLinger();
    Code:
       0: aload_0
       1: getfield      #13                 // Field soLinger:I
       4: ireturn

  public void setSoLinger(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field soLinger:I
       5: return

  public boolean isSoKeepalive();
    Code:
       0: aload_0
       1: getfield      #14                 // Field soKeepAlive:Z
       4: ireturn

  public void setSoKeepalive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field soKeepAlive:Z
       5: return

  public boolean isTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #15                 // Field tcpNoDelay:Z
       4: ireturn

  public void setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field tcpNoDelay:Z
       5: return

  public int getConnectTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field connectTimeout:I
       4: ireturn

  public void setConnectTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field connectTimeout:I
       5: return

  public int getSndBufSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field sndBufSize:I
       4: ireturn

  public void setSndBufSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field sndBufSize:I
       5: return

  public int getRcvBufSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field rcvBufSize:I
       4: ireturn

  public void setRcvBufSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field rcvBufSize:I
       5: return

  public int getBacklogSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field backlogSize:I
       4: ireturn

  protected org.apache.http.impl.nio.reactor.IOReactorConfig clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #26                 // class org/apache/http/impl/nio/reactor/IOReactorConfig
       7: areturn

  public static org.apache.http.impl.nio.reactor.IOReactorConfig$Builder custom();
    Code:
       0: new           #27                 // class org/apache/http/impl/nio/reactor/IOReactorConfig$Builder
       3: dup
       4: invokespecial #28                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder."<init>":()V
       7: areturn

  public static org.apache.http.impl.nio.reactor.IOReactorConfig$Builder copy(org.apache.http.impl.nio.reactor.IOReactorConfig);
    Code:
       0: aload_0
       1: ldc           #29                 // String I/O reactor config
       3: invokestatic  #30                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #27                 // class org/apache/http/impl/nio/reactor/IOReactorConfig$Builder
      10: dup
      11: invokespecial #28                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder."<init>":()V
      14: aload_0
      15: invokevirtual #31                 // Method getSelectInterval:()J
      18: invokevirtual #32                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSelectInterval:(J)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      21: aload_0
      22: invokevirtual #33                 // Method getShutdownGracePeriod:()J
      25: invokevirtual #34                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setShutdownGracePeriod:(J)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      28: aload_0
      29: invokevirtual #35                 // Method isInterestOpQueued:()Z
      32: invokevirtual #36                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setInterestOpQueued:(Z)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      35: aload_0
      36: invokevirtual #37                 // Method getIoThreadCount:()I
      39: invokevirtual #38                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setIoThreadCount:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      42: aload_0
      43: invokevirtual #39                 // Method getSoTimeout:()I
      46: invokevirtual #40                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSoTimeout:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      49: aload_0
      50: invokevirtual #41                 // Method isSoReuseAddress:()Z
      53: invokevirtual #42                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSoReuseAddress:(Z)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      56: aload_0
      57: invokevirtual #43                 // Method getSoLinger:()I
      60: invokevirtual #44                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSoLinger:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      63: aload_0
      64: invokevirtual #45                 // Method isSoKeepalive:()Z
      67: invokevirtual #46                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSoKeepAlive:(Z)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      70: aload_0
      71: invokevirtual #47                 // Method isTcpNoDelay:()Z
      74: invokevirtual #48                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setTcpNoDelay:(Z)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      77: aload_0
      78: invokevirtual #49                 // Method getConnectTimeout:()I
      81: invokevirtual #50                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setConnectTimeout:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      84: aload_0
      85: invokevirtual #51                 // Method getSndBufSize:()I
      88: invokevirtual #52                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSndBufSize:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      91: aload_0
      92: invokevirtual #53                 // Method getRcvBufSize:()I
      95: invokevirtual #54                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setRcvBufSize:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      98: aload_0
      99: invokevirtual #55                 // Method getBacklogSize:()I
     102: invokevirtual #56                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setBacklogSize:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
     105: areturn

  public java.lang.String toString();
    Code:
       0: new           #57                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #59                 // String [selectInterval=
      11: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #5                  // Field selectInterval:J
      18: invokevirtual #61                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      21: ldc           #62                 // String , shutdownGracePeriod=
      23: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #8                  // Field shutdownGracePeriod:J
      30: invokevirtual #61                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      33: ldc           #63                 // String , interestOpQueued=
      35: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #9                  // Field interestOpQueued:Z
      42: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      45: ldc           #65                 // String , ioThreadCount=
      47: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #10                 // Field ioThreadCount:I
      54: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: ldc           #67                 // String , soTimeout=
      59: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #11                 // Field soTimeout:I
      66: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: ldc           #68                 // String , soReuseAddress=
      71: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #12                 // Field soReuseAddress:Z
      78: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      81: ldc           #69                 // String , soLinger=
      83: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #13                 // Field soLinger:I
      90: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: ldc           #70                 // String , soKeepAlive=
      95: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #14                 // Field soKeepAlive:Z
     102: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     105: ldc           #71                 // String , tcpNoDelay=
     107: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: getfield      #15                 // Field tcpNoDelay:Z
     114: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     117: ldc           #72                 // String , connectTimeout=
     119: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #16                 // Field connectTimeout:I
     126: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #73                 // String , sndBufSize=
     131: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: getfield      #17                 // Field sndBufSize:I
     138: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     141: ldc           #74                 // String , rcvBufSize=
     143: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_0
     147: getfield      #18                 // Field rcvBufSize:I
     150: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     153: ldc           #75                 // String , backlogSize=
     155: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_0
     159: getfield      #19                 // Field backlogSize:I
     162: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     165: ldc           #76                 // String ]
     167: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_1
     172: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: areturn

  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method clone:()Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
       4: areturn

  static int access$000();
    Code:
       0: getstatic     #1                  // Field AVAIL_PROCS:I
       3: ireturn

  static {};
    Code:
       0: invokestatic  #79                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: invokevirtual #80                 // Method java/lang/Runtime.availableProcessors:()I
       6: putstatic     #1                  // Field AVAIL_PROCS:I
       9: new           #27                 // class org/apache/http/impl/nio/reactor/IOReactorConfig$Builder
      12: dup
      13: invokespecial #28                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder."<init>":()V
      16: invokevirtual #81                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.build:()Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      19: putstatic     #82                 // Field DEFAULT:Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      22: return
}
