Compiled from "CacheConfig.java"
public class org.apache.http.impl.client.cache.CacheConfig implements java.lang.Cloneable {
  public static final int DEFAULT_MAX_OBJECT_SIZE_BYTES;

  public static final int DEFAULT_MAX_CACHE_ENTRIES;

  public static final int DEFAULT_MAX_UPDATE_RETRIES;

  public static final boolean DEFAULT_303_CACHING_ENABLED;

  public static final boolean DEFAULT_WEAK_ETAG_ON_PUTDELETE_ALLOWED;

  public static final boolean DEFAULT_HEURISTIC_CACHING_ENABLED;

  public static final float DEFAULT_HEURISTIC_COEFFICIENT;

  public static final long DEFAULT_HEURISTIC_LIFETIME;

  public static final int DEFAULT_ASYNCHRONOUS_WORKERS_MAX;

  public static final int DEFAULT_ASYNCHRONOUS_WORKERS_CORE;

  public static final int DEFAULT_ASYNCHRONOUS_WORKER_IDLE_LIFETIME_SECS;

  public static final int DEFAULT_REVALIDATION_QUEUE_SIZE;

  public static final org.apache.http.impl.client.cache.CacheConfig DEFAULT;

  private long maxObjectSize;

  private int maxCacheEntries;

  private int maxUpdateRetries;

  private final boolean allow303Caching;

  private final boolean weakETagOnPutDeleteAllowed;

  private boolean heuristicCachingEnabled;

  private float heuristicCoefficient;

  private long heuristicDefaultLifetime;

  private boolean isSharedCache;

  private int asynchronousWorkersMax;

  private int asynchronousWorkersCore;

  private int asynchronousWorkerIdleLifetimeSecs;

  private int revalidationQueueSize;

  private boolean neverCacheHTTP10ResponsesWithQuery;

  public org.apache.http.impl.client.cache.CacheConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long 8192l
       8: putfield      #4                  // Field maxObjectSize:J
      11: aload_0
      12: sipush        1000
      15: putfield      #5                  // Field maxCacheEntries:I
      18: aload_0
      19: iconst_1
      20: putfield      #6                  // Field maxUpdateRetries:I
      23: aload_0
      24: iconst_0
      25: putfield      #7                  // Field allow303Caching:Z
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field weakETagOnPutDeleteAllowed:Z
      33: aload_0
      34: iconst_0
      35: putfield      #9                  // Field heuristicCachingEnabled:Z
      38: aload_0
      39: ldc           #10                 // float 0.1f
      41: putfield      #11                 // Field heuristicCoefficient:F
      44: aload_0
      45: lconst_0
      46: putfield      #12                 // Field heuristicDefaultLifetime:J
      49: aload_0
      50: iconst_1
      51: putfield      #13                 // Field isSharedCache:Z
      54: aload_0
      55: iconst_1
      56: putfield      #14                 // Field asynchronousWorkersMax:I
      59: aload_0
      60: iconst_1
      61: putfield      #15                 // Field asynchronousWorkersCore:I
      64: aload_0
      65: bipush        60
      67: putfield      #16                 // Field asynchronousWorkerIdleLifetimeSecs:I
      70: aload_0
      71: bipush        100
      73: putfield      #17                 // Field revalidationQueueSize:I
      76: return

  org.apache.http.impl.client.cache.CacheConfig(long, int, int, boolean, boolean, boolean, float, long, boolean, int, int, int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #4                  // Field maxObjectSize:J
       9: aload_0
      10: iload_3
      11: putfield      #5                  // Field maxCacheEntries:I
      14: aload_0
      15: iload         4
      17: putfield      #6                  // Field maxUpdateRetries:I
      20: aload_0
      21: iload         5
      23: putfield      #7                  // Field allow303Caching:Z
      26: aload_0
      27: iload         6
      29: putfield      #8                  // Field weakETagOnPutDeleteAllowed:Z
      32: aload_0
      33: iload         7
      35: putfield      #9                  // Field heuristicCachingEnabled:Z
      38: aload_0
      39: fload         8
      41: putfield      #11                 // Field heuristicCoefficient:F
      44: aload_0
      45: lload         9
      47: putfield      #12                 // Field heuristicDefaultLifetime:J
      50: aload_0
      51: iload         11
      53: putfield      #13                 // Field isSharedCache:Z
      56: aload_0
      57: iload         12
      59: putfield      #14                 // Field asynchronousWorkersMax:I
      62: aload_0
      63: iload         13
      65: putfield      #15                 // Field asynchronousWorkersCore:I
      68: aload_0
      69: iload         14
      71: putfield      #16                 // Field asynchronousWorkerIdleLifetimeSecs:I
      74: aload_0
      75: iload         15
      77: putfield      #17                 // Field revalidationQueueSize:I
      80: return

  public int getMaxObjectSizeBytes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxObjectSize:J
       4: ldc2_w        #18                 // long 2147483647l
       7: lcmp
       8: ifle          16
      11: ldc           #20                 // int 2147483647
      13: goto          21
      16: aload_0
      17: getfield      #4                  // Field maxObjectSize:J
      20: l2i
      21: ireturn

  public void setMaxObjectSizeBytes(int);
    Code:
       0: iload_1
       1: ldc           #20                 // int 2147483647
       3: if_icmple     16
       6: aload_0
       7: ldc2_w        #18                 // long 2147483647l
      10: putfield      #4                  // Field maxObjectSize:J
      13: goto          22
      16: aload_0
      17: iload_1
      18: i2l
      19: putfield      #4                  // Field maxObjectSize:J
      22: return

  public long getMaxObjectSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxObjectSize:J
       4: lreturn

  public void setMaxObjectSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field maxObjectSize:J
       5: return

  public boolean isNeverCacheHTTP10ResponsesWithQuery();
    Code:
       0: aload_0
       1: getfield      #21                 // Field neverCacheHTTP10ResponsesWithQuery:Z
       4: ireturn

  public int getMaxCacheEntries();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxCacheEntries:I
       4: ireturn

  public void setMaxCacheEntries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field maxCacheEntries:I
       5: return

  public int getMaxUpdateRetries();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxUpdateRetries:I
       4: ireturn

  public void setMaxUpdateRetries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field maxUpdateRetries:I
       5: return

  public boolean is303CachingEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field allow303Caching:Z
       4: ireturn

  public boolean isWeakETagOnPutDeleteAllowed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field weakETagOnPutDeleteAllowed:Z
       4: ireturn

  public boolean isHeuristicCachingEnabled();
    Code:
       0: aload_0
       1: getfield      #9                  // Field heuristicCachingEnabled:Z
       4: ireturn

  public void setHeuristicCachingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field heuristicCachingEnabled:Z
       5: return

  public float getHeuristicCoefficient();
    Code:
       0: aload_0
       1: getfield      #11                 // Field heuristicCoefficient:F
       4: freturn

  public void setHeuristicCoefficient(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #11                 // Field heuristicCoefficient:F
       5: return

  public long getHeuristicDefaultLifetime();
    Code:
       0: aload_0
       1: getfield      #12                 // Field heuristicDefaultLifetime:J
       4: lreturn

  public void setHeuristicDefaultLifetime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #12                 // Field heuristicDefaultLifetime:J
       5: return

  public boolean isSharedCache();
    Code:
       0: aload_0
       1: getfield      #13                 // Field isSharedCache:Z
       4: ireturn

  public void setSharedCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field isSharedCache:Z
       5: return

  public int getAsynchronousWorkersMax();
    Code:
       0: aload_0
       1: getfield      #14                 // Field asynchronousWorkersMax:I
       4: ireturn

  public void setAsynchronousWorkersMax(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field asynchronousWorkersMax:I
       5: return

  public int getAsynchronousWorkersCore();
    Code:
       0: aload_0
       1: getfield      #15                 // Field asynchronousWorkersCore:I
       4: ireturn

  public void setAsynchronousWorkersCore(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field asynchronousWorkersCore:I
       5: return

  public int getAsynchronousWorkerIdleLifetimeSecs();
    Code:
       0: aload_0
       1: getfield      #16                 // Field asynchronousWorkerIdleLifetimeSecs:I
       4: ireturn

  public void setAsynchronousWorkerIdleLifetimeSecs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field asynchronousWorkerIdleLifetimeSecs:I
       5: return

  public int getRevalidationQueueSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field revalidationQueueSize:I
       4: ireturn

  public void setRevalidationQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field revalidationQueueSize:I
       5: return

  protected org.apache.http.impl.client.cache.CacheConfig clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #23                 // class org/apache/http/impl/client/cache/CacheConfig
       7: areturn

  public static org.apache.http.impl.client.cache.CacheConfig$Builder custom();
    Code:
       0: new           #24                 // class org/apache/http/impl/client/cache/CacheConfig$Builder
       3: dup
       4: invokespecial #25                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder."<init>":()V
       7: areturn

  public static org.apache.http.impl.client.cache.CacheConfig$Builder copy(org.apache.http.impl.client.cache.CacheConfig);
    Code:
       0: aload_0
       1: ldc           #26                 // String Cache config
       3: invokestatic  #27                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #24                 // class org/apache/http/impl/client/cache/CacheConfig$Builder
      10: dup
      11: invokespecial #25                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder."<init>":()V
      14: aload_0
      15: invokevirtual #28                 // Method getMaxObjectSize:()J
      18: invokevirtual #29                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setMaxObjectSize:(J)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      21: aload_0
      22: invokevirtual #30                 // Method getMaxCacheEntries:()I
      25: invokevirtual #31                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setMaxCacheEntries:(I)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      28: aload_0
      29: invokevirtual #32                 // Method getMaxUpdateRetries:()I
      32: invokevirtual #33                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setMaxUpdateRetries:(I)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      35: aload_0
      36: invokevirtual #34                 // Method isHeuristicCachingEnabled:()Z
      39: invokevirtual #35                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setHeuristicCachingEnabled:(Z)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      42: aload_0
      43: invokevirtual #36                 // Method getHeuristicCoefficient:()F
      46: invokevirtual #37                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setHeuristicCoefficient:(F)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      49: aload_0
      50: invokevirtual #38                 // Method getHeuristicDefaultLifetime:()J
      53: invokevirtual #39                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setHeuristicDefaultLifetime:(J)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      56: aload_0
      57: invokevirtual #40                 // Method isSharedCache:()Z
      60: invokevirtual #41                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setSharedCache:(Z)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      63: aload_0
      64: invokevirtual #42                 // Method getAsynchronousWorkersMax:()I
      67: invokevirtual #43                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setAsynchronousWorkersMax:(I)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      70: aload_0
      71: invokevirtual #44                 // Method getAsynchronousWorkersCore:()I
      74: invokevirtual #45                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setAsynchronousWorkersCore:(I)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      77: aload_0
      78: invokevirtual #46                 // Method getAsynchronousWorkerIdleLifetimeSecs:()I
      81: invokevirtual #47                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setAsynchronousWorkerIdleLifetimeSecs:(I)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      84: aload_0
      85: invokevirtual #48                 // Method getRevalidationQueueSize:()I
      88: invokevirtual #49                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setRevalidationQueueSize:(I)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      91: aload_0
      92: invokevirtual #50                 // Method isNeverCacheHTTP10ResponsesWithQuery:()Z
      95: invokevirtual #51                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.setNeverCacheHTTP10ResponsesWithQueryString:(Z)Lorg/apache/http/impl/client/cache/CacheConfig$Builder;
      98: areturn

  public java.lang.String toString();
    Code:
       0: new           #52                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #54                 // String [maxObjectSize=
      11: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #4                  // Field maxObjectSize:J
      18: invokevirtual #56                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      21: ldc           #57                 // String , maxCacheEntries=
      23: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #5                  // Field maxCacheEntries:I
      30: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #59                 // String , maxUpdateRetries=
      35: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #6                  // Field maxUpdateRetries:I
      42: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #60                 // String , 303CachingEnabled=
      47: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #7                  // Field allow303Caching:Z
      54: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      57: ldc           #62                 // String , weakETagOnPutDeleteAllowed=
      59: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #8                  // Field weakETagOnPutDeleteAllowed:Z
      66: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      69: ldc           #63                 // String , heuristicCachingEnabled=
      71: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #9                  // Field heuristicCachingEnabled:Z
      78: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      81: ldc           #64                 // String , heuristicCoefficient=
      83: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #11                 // Field heuristicCoefficient:F
      90: invokevirtual #65                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      93: ldc           #66                 // String , heuristicDefaultLifetime=
      95: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #12                 // Field heuristicDefaultLifetime:J
     102: invokevirtual #56                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     105: ldc           #67                 // String , isSharedCache=
     107: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: getfield      #13                 // Field isSharedCache:Z
     114: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     117: ldc           #68                 // String , asynchronousWorkersMax=
     119: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #14                 // Field asynchronousWorkersMax:I
     126: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #69                 // String , asynchronousWorkersCore=
     131: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: getfield      #15                 // Field asynchronousWorkersCore:I
     138: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     141: ldc           #70                 // String , asynchronousWorkerIdleLifetimeSecs=
     143: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_0
     147: getfield      #16                 // Field asynchronousWorkerIdleLifetimeSecs:I
     150: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     153: ldc           #71                 // String , revalidationQueueSize=
     155: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_0
     159: getfield      #17                 // Field revalidationQueueSize:I
     162: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     165: ldc           #72                 // String , neverCacheHTTP10ResponsesWithQuery=
     167: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: getfield      #21                 // Field neverCacheHTTP10ResponsesWithQuery:Z
     174: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     177: ldc           #73                 // String ]
     179: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: pop
     183: aload_1
     184: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: areturn

  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method clone:()Lorg/apache/http/impl/client/cache/CacheConfig;
       4: areturn

  static {};
    Code:
       0: new           #24                 // class org/apache/http/impl/client/cache/CacheConfig$Builder
       3: dup
       4: invokespecial #25                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder."<init>":()V
       7: invokevirtual #76                 // Method org/apache/http/impl/client/cache/CacheConfig$Builder.build:()Lorg/apache/http/impl/client/cache/CacheConfig;
      10: putstatic     #77                 // Field DEFAULT:Lorg/apache/http/impl/client/cache/CacheConfig;
      13: return
}
