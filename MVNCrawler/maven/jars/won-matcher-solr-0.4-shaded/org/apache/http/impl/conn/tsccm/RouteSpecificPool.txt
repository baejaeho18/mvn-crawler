Compiled from "RouteSpecificPool.java"
public class org.apache.http.impl.conn.tsccm.RouteSpecificPool {
  private final org.apache.commons.logging.Log log;

  protected final org.apache.http.conn.routing.HttpRoute route;

  protected final int maxEntries;

  protected final org.apache.http.conn.params.ConnPerRoute connPerRoute;

  protected final java.util.LinkedList<org.apache.http.impl.conn.tsccm.BasicPoolEntry> freeEntries;

  protected final java.util.Queue<org.apache.http.impl.conn.tsccm.WaitingThread> waitingThreads;

  protected int numEntries;

  public org.apache.http.impl.conn.tsccm.RouteSpecificPool(org.apache.http.conn.routing.HttpRoute, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field route:Lorg/apache/http/conn/routing/HttpRoute;
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field maxEntries:I
      25: aload_0
      26: new           #7                  // class org/apache/http/impl/conn/tsccm/RouteSpecificPool$1
      29: dup
      30: aload_0
      31: invokespecial #8                  // Method org/apache/http/impl/conn/tsccm/RouteSpecificPool$1."<init>":(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V
      34: putfield      #9                  // Field connPerRoute:Lorg/apache/http/conn/params/ConnPerRoute;
      37: aload_0
      38: new           #10                 // class java/util/LinkedList
      41: dup
      42: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      45: putfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      48: aload_0
      49: new           #10                 // class java/util/LinkedList
      52: dup
      53: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      56: putfield      #13                 // Field waitingThreads:Ljava/util/Queue;
      59: aload_0
      60: iconst_0
      61: putfield      #14                 // Field numEntries:I
      64: return

  public org.apache.http.impl.conn.tsccm.RouteSpecificPool(org.apache.http.conn.routing.HttpRoute, org.apache.http.conn.params.ConnPerRoute);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field route:Lorg/apache/http/conn/routing/HttpRoute;
      20: aload_0
      21: aload_2
      22: putfield      #9                  // Field connPerRoute:Lorg/apache/http/conn/params/ConnPerRoute;
      25: aload_0
      26: aload_2
      27: aload_1
      28: invokeinterface #15,  2           // InterfaceMethod org/apache/http/conn/params/ConnPerRoute.getMaxForRoute:(Lorg/apache/http/conn/routing/HttpRoute;)I
      33: putfield      #6                  // Field maxEntries:I
      36: aload_0
      37: new           #10                 // class java/util/LinkedList
      40: dup
      41: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      44: putfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      47: aload_0
      48: new           #10                 // class java/util/LinkedList
      51: dup
      52: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      55: putfield      #13                 // Field waitingThreads:Ljava/util/Queue;
      58: aload_0
      59: iconst_0
      60: putfield      #14                 // Field numEntries:I
      63: return

  public final org.apache.http.conn.routing.HttpRoute getRoute();
    Code:
       0: aload_0
       1: getfield      #5                  // Field route:Lorg/apache/http/conn/routing/HttpRoute;
       4: areturn

  public final int getMaxEntries();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxEntries:I
       4: ireturn

  public boolean isUnused();
    Code:
       0: aload_0
       1: getfield      #14                 // Field numEntries:I
       4: iconst_1
       5: if_icmpge     24
       8: aload_0
       9: getfield      #13                 // Field waitingThreads:Ljava/util/Queue;
      12: invokeinterface #16,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public int getCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connPerRoute:Lorg/apache/http/conn/params/ConnPerRoute;
       4: aload_0
       5: getfield      #5                  // Field route:Lorg/apache/http/conn/routing/HttpRoute;
       8: invokeinterface #15,  2           // InterfaceMethod org/apache/http/conn/params/ConnPerRoute.getMaxForRoute:(Lorg/apache/http/conn/routing/HttpRoute;)I
      13: aload_0
      14: getfield      #14                 // Field numEntries:I
      17: isub
      18: ireturn

  public final int getEntryCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field numEntries:I
       4: ireturn

  public org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
       4: invokevirtual #17                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifne          73
      10: aload_0
      11: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      14: aload_0
      15: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      18: invokevirtual #18                 // Method java/util/LinkedList.size:()I
      21: invokevirtual #19                 // Method java/util/LinkedList.listIterator:(I)Ljava/util/ListIterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #20,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
      31: ifeq          73
      34: aload_2
      35: invokeinterface #21,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      40: checkcast     #22                 // class org/apache/http/impl/conn/tsccm/BasicPoolEntry
      43: astore_3
      44: aload_3
      45: invokevirtual #23                 // Method org/apache/http/impl/conn/tsccm/BasicPoolEntry.getState:()Ljava/lang/Object;
      48: ifnull        62
      51: aload_1
      52: aload_3
      53: invokevirtual #23                 // Method org/apache/http/impl/conn/tsccm/BasicPoolEntry.getState:()Ljava/lang/Object;
      56: invokestatic  #24                 // Method org/apache/http/util/LangUtils.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: ifeq          70
      62: aload_2
      63: invokeinterface #25,  1           // InterfaceMethod java/util/ListIterator.remove:()V
      68: aload_3
      69: areturn
      70: goto          25
      73: aload_0
      74: invokevirtual #26                 // Method getCapacity:()I
      77: ifne          136
      80: aload_0
      81: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      84: invokevirtual #17                 // Method java/util/LinkedList.isEmpty:()Z
      87: ifne          136
      90: aload_0
      91: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      94: invokevirtual #27                 // Method java/util/LinkedList.remove:()Ljava/lang/Object;
      97: checkcast     #22                 // class org/apache/http/impl/conn/tsccm/BasicPoolEntry
     100: astore_2
     101: aload_2
     102: invokevirtual #28                 // Method org/apache/http/impl/conn/tsccm/BasicPoolEntry.shutdownEntry:()V
     105: aload_2
     106: invokevirtual #29                 // Method org/apache/http/impl/conn/tsccm/BasicPoolEntry.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;
     109: astore_3
     110: aload_3
     111: invokeinterface #30,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.close:()V
     116: goto          134
     119: astore        4
     121: aload_0
     122: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
     125: ldc           #32                 // String I/O error closing connection
     127: aload         4
     129: invokeinterface #33,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     134: aload_2
     135: areturn
     136: aconst_null
     137: areturn
    Exception table:
       from    to  target type
         110   116   119   Class java/io/IOException

  public void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry);
    Code:
       0: aload_0
       1: getfield      #14                 // Field numEntries:I
       4: iconst_1
       5: if_icmpge     38
       8: new           #34                 // class java/lang/IllegalStateException
      11: dup
      12: new           #35                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #37                 // String No entry created for this pool.
      21: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field route:Lorg/apache/http/conn/routing/HttpRoute;
      28: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #14                 // Field numEntries:I
      42: aload_0
      43: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      46: invokevirtual #18                 // Method java/util/LinkedList.size:()I
      49: if_icmpgt     82
      52: new           #34                 // class java/lang/IllegalStateException
      55: dup
      56: new           #35                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #42                 // String No entry allocated from this pool.
      65: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #5                  // Field route:Lorg/apache/http/conn/routing/HttpRoute;
      72: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
      86: aload_1
      87: invokevirtual #43                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      90: pop
      91: return

  public void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry);
    Code:
       0: aload_0
       1: getfield      #5                  // Field route:Lorg/apache/http/conn/routing/HttpRoute;
       4: aload_1
       5: invokevirtual #44                 // Method org/apache/http/impl/conn/tsccm/BasicPoolEntry.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;
       8: invokevirtual #45                 // Method org/apache/http/conn/routing/HttpRoute.equals:(Ljava/lang/Object;)Z
      11: ldc           #46                 // String Entry not planned for this pool
      13: invokestatic  #47                 // Method org/apache/http/util/Args.check:(ZLjava/lang/String;)V
      16: aload_0
      17: dup
      18: getfield      #14                 // Field numEntries:I
      21: iconst_1
      22: iadd
      23: putfield      #14                 // Field numEntries:I
      26: return

  public boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry);
    Code:
       0: aload_0
       1: getfield      #12                 // Field freeEntries:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #48                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
       8: istore_2
       9: iload_2
      10: ifeq          23
      13: aload_0
      14: dup
      15: getfield      #14                 // Field numEntries:I
      18: iconst_1
      19: isub
      20: putfield      #14                 // Field numEntries:I
      23: iload_2
      24: ireturn

  public void dropEntry();
    Code:
       0: aload_0
       1: getfield      #14                 // Field numEntries:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #49                 // String There is no entry that could be dropped
      14: invokestatic  #50                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      17: aload_0
      18: dup
      19: getfield      #14                 // Field numEntries:I
      22: iconst_1
      23: isub
      24: putfield      #14                 // Field numEntries:I
      27: return

  public void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread);
    Code:
       0: aload_1
       1: ldc           #51                 // String Waiting thread
       3: invokestatic  #52                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #13                 // Field waitingThreads:Ljava/util/Queue;
      11: aload_1
      12: invokeinterface #53,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  public boolean hasThread();
    Code:
       0: aload_0
       1: getfield      #13                 // Field waitingThreads:Ljava/util/Queue;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public org.apache.http.impl.conn.tsccm.WaitingThread nextThread();
    Code:
       0: aload_0
       1: getfield      #13                 // Field waitingThreads:Ljava/util/Queue;
       4: invokeinterface #54,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
       9: checkcast     #55                 // class org/apache/http/impl/conn/tsccm/WaitingThread
      12: areturn

  public void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #13                 // Field waitingThreads:Ljava/util/Queue;
       9: aload_1
      10: invokeinterface #56,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      15: pop
      16: return
}
