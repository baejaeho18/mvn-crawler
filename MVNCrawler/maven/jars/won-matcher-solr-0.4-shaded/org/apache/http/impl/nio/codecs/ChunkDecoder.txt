Compiled from "ChunkDecoder.java"
public class org.apache.http.impl.nio.codecs.ChunkDecoder extends org.apache.http.impl.nio.codecs.AbstractContentDecoder {
  private static final int READ_CONTENT;

  private static final int READ_FOOTERS;

  private static final int COMPLETED;

  private int state;

  private boolean endOfChunk;

  private boolean endOfStream;

  private org.apache.http.util.CharArrayBuffer lineBuf;

  private long chunkSize;

  private long pos;

  private final org.apache.http.config.MessageConstraints constraints;

  private final java.util.List<org.apache.http.util.CharArrayBuffer> trailerBufs;

  private org.apache.http.Header[] footers;

  public org.apache.http.impl.nio.codecs.ChunkDecoder(java.nio.channels.ReadableByteChannel, org.apache.http.nio.reactor.SessionInputBuffer, org.apache.http.config.MessageConstraints, org.apache.http.impl.io.HttpTransportMetricsImpl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: invokespecial #1                  // Method org/apache/http/impl/nio/codecs/AbstractContentDecoder."<init>":(Ljava/nio/channels/ReadableByteChannel;Lorg/apache/http/nio/reactor/SessionInputBuffer;Lorg/apache/http/impl/io/HttpTransportMetricsImpl;)V
       8: aload_0
       9: iconst_0
      10: putfield      #2                  // Field state:I
      13: aload_0
      14: ldc2_w        #3                  // long -1l
      17: putfield      #5                  // Field chunkSize:J
      20: aload_0
      21: lconst_0
      22: putfield      #6                  // Field pos:J
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field endOfChunk:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field endOfStream:Z
      35: aload_0
      36: aload_3
      37: ifnull        44
      40: aload_3
      41: goto          47
      44: getstatic     #9                  // Field org/apache/http/config/MessageConstraints.DEFAULT:Lorg/apache/http/config/MessageConstraints;
      47: putfield      #10                 // Field constraints:Lorg/apache/http/config/MessageConstraints;
      50: aload_0
      51: new           #11                 // class java/util/ArrayList
      54: dup
      55: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
      58: putfield      #13                 // Field trailerBufs:Ljava/util/List;
      61: return

  public org.apache.http.impl.nio.codecs.ChunkDecoder(java.nio.channels.ReadableByteChannel, org.apache.http.nio.reactor.SessionInputBuffer, org.apache.http.impl.io.HttpTransportMetricsImpl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokespecial #14                 // Method "<init>":(Ljava/nio/channels/ReadableByteChannel;Lorg/apache/http/nio/reactor/SessionInputBuffer;Lorg/apache/http/config/MessageConstraints;Lorg/apache/http/impl/io/HttpTransportMetricsImpl;)V
       8: return

  private void readChunkHead() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
       4: ifnonnull     23
       7: aload_0
       8: new           #16                 // class org/apache/http/util/CharArrayBuffer
      11: dup
      12: bipush        32
      14: invokespecial #17                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
      17: putfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      20: goto          30
      23: aload_0
      24: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      27: invokevirtual #18                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
      30: aload_0
      31: getfield      #7                  // Field endOfChunk:Z
      34: ifeq          113
      37: aload_0
      38: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
      41: aload_0
      42: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      45: aload_0
      46: getfield      #8                  // Field endOfStream:Z
      49: invokeinterface #20,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;Z)Z
      54: ifeq          77
      57: aload_0
      58: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      61: invokevirtual #21                 // Method org/apache/http/util/CharArrayBuffer.isEmpty:()Z
      64: ifne          108
      67: new           #22                 // class org/apache/http/MalformedChunkCodingException
      70: dup
      71: ldc           #23                 // String CRLF expected at end of chunk
      73: invokespecial #24                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
      81: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.length:()I
      86: iconst_2
      87: if_icmpgt     97
      90: aload_0
      91: getfield      #8                  // Field endOfStream:Z
      94: ifeq          107
      97: new           #22                 // class org/apache/http/MalformedChunkCodingException
     100: dup
     101: ldc           #23                 // String CRLF expected at end of chunk
     103: invokespecial #24                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: return
     108: aload_0
     109: iconst_0
     110: putfield      #7                  // Field endOfChunk:Z
     113: aload_0
     114: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     117: aload_0
     118: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     121: aload_0
     122: getfield      #8                  // Field endOfStream:Z
     125: invokeinterface #20,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;Z)Z
     130: istore_1
     131: aload_0
     132: getfield      #10                 // Field constraints:Lorg/apache/http/config/MessageConstraints;
     135: invokevirtual #26                 // Method org/apache/http/config/MessageConstraints.getMaxLineLength:()I
     138: istore_2
     139: iload_2
     140: ifle          181
     143: aload_0
     144: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     147: invokevirtual #27                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     150: iload_2
     151: if_icmpgt     171
     154: iload_1
     155: ifne          181
     158: aload_0
     159: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     162: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.length:()I
     167: iload_2
     168: if_icmple     181
     171: new           #28                 // class org/apache/http/MessageConstraintException
     174: dup
     175: ldc           #29                 // String Maximum line length limit exceeded
     177: invokespecial #30                 // Method org/apache/http/MessageConstraintException."<init>":(Ljava/lang/String;)V
     180: athrow
     181: iload_1
     182: ifeq          270
     185: aload_0
     186: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     189: bipush        59
     191: invokevirtual #31                 // Method org/apache/http/util/CharArrayBuffer.indexOf:(I)I
     194: istore_3
     195: iload_3
     196: ifge          207
     199: aload_0
     200: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     203: invokevirtual #27                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     206: istore_3
     207: aload_0
     208: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     211: iconst_0
     212: iload_3
     213: invokevirtual #32                 // Method org/apache/http/util/CharArrayBuffer.substringTrimmed:(II)Ljava/lang/String;
     216: astore        4
     218: aload_0
     219: aload         4
     221: bipush        16
     223: invokestatic  #33                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
     226: putfield      #5                  // Field chunkSize:J
     229: goto          262
     232: astore        5
     234: new           #22                 // class org/apache/http/MalformedChunkCodingException
     237: dup
     238: new           #35                 // class java/lang/StringBuilder
     241: dup
     242: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     245: ldc           #37                 // String Bad chunk header:
     247: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: aload         4
     252: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     258: invokespecial #24                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
     261: athrow
     262: aload_0
     263: lconst_0
     264: putfield      #6                  // Field pos:J
     267: goto          287
     270: aload_0
     271: getfield      #8                  // Field endOfStream:Z
     274: ifeq          287
     277: new           #40                 // class org/apache/http/ConnectionClosedException
     280: dup
     281: ldc           #41                 // String Premature end of chunk coded message body: closing chunk expected
     283: invokespecial #42                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
     286: athrow
     287: return
    Exception table:
       from    to  target type
         218   229   232   Class java/lang/NumberFormatException

  private void parseHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field trailerBufs:Ljava/util/List;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
      14: istore_2
      15: aload_0
      16: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      19: iconst_0
      20: invokevirtual #44                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
      23: bipush        32
      25: if_icmpeq     41
      28: aload_0
      29: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      32: iconst_0
      33: invokevirtual #44                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
      36: bipush        9
      38: if_icmpne     170
      41: iload_2
      42: ifle          170
      45: aload_0
      46: getfield      #13                 // Field trailerBufs:Ljava/util/List;
      49: iload_2
      50: iconst_1
      51: isub
      52: invokeinterface #45,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      57: checkcast     #16                 // class org/apache/http/util/CharArrayBuffer
      60: astore_3
      61: iconst_0
      62: istore        4
      64: iload         4
      66: aload_1
      67: invokevirtual #27                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      70: if_icmpge     104
      73: aload_1
      74: iload         4
      76: invokevirtual #44                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
      79: istore        5
      81: iload         5
      83: bipush        32
      85: if_icmpeq     98
      88: iload         5
      90: bipush        9
      92: if_icmpeq     98
      95: goto          104
      98: iinc          4, 1
     101: goto          64
     104: aload_0
     105: getfield      #10                 // Field constraints:Lorg/apache/http/config/MessageConstraints;
     108: invokevirtual #26                 // Method org/apache/http/config/MessageConstraints.getMaxLineLength:()I
     111: istore        5
     113: iload         5
     115: ifle          147
     118: aload_3
     119: invokevirtual #27                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     122: iconst_1
     123: iadd
     124: aload_1
     125: invokevirtual #27                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     128: iadd
     129: iload         4
     131: isub
     132: iload         5
     134: if_icmple     147
     137: new           #28                 // class org/apache/http/MessageConstraintException
     140: dup
     141: ldc           #29                 // String Maximum line length limit exceeded
     143: invokespecial #30                 // Method org/apache/http/MessageConstraintException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: aload_3
     148: bipush        32
     150: invokevirtual #46                 // Method org/apache/http/util/CharArrayBuffer.append:(C)V
     153: aload_3
     154: aload_1
     155: iload         4
     157: aload_1
     158: invokevirtual #27                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     161: iload         4
     163: isub
     164: invokevirtual #47                 // Method org/apache/http/util/CharArrayBuffer.append:(Lorg/apache/http/util/CharArrayBuffer;II)V
     167: goto          186
     170: aload_0
     171: getfield      #13                 // Field trailerBufs:Ljava/util/List;
     174: aload_1
     175: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     180: pop
     181: aload_0
     182: aconst_null
     183: putfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     186: return

  private void processFooters() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field trailerBufs:Ljava/util/List;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_1
      10: iload_1
      11: ifle          93
      14: aload_0
      15: aload_0
      16: getfield      #13                 // Field trailerBufs:Ljava/util/List;
      19: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
      24: anewarray     #49                 // class org/apache/http/Header
      27: putfield      #50                 // Field footers:[Lorg/apache/http/Header;
      30: iconst_0
      31: istore_2
      32: iload_2
      33: aload_0
      34: getfield      #13                 // Field trailerBufs:Ljava/util/List;
      37: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
      42: if_icmpge     93
      45: aload_0
      46: getfield      #50                 // Field footers:[Lorg/apache/http/Header;
      49: iload_2
      50: new           #51                 // class org/apache/http/message/BufferedHeader
      53: dup
      54: aload_0
      55: getfield      #13                 // Field trailerBufs:Ljava/util/List;
      58: iload_2
      59: invokeinterface #45,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      64: checkcast     #16                 // class org/apache/http/util/CharArrayBuffer
      67: invokespecial #52                 // Method org/apache/http/message/BufferedHeader."<init>":(Lorg/apache/http/util/CharArrayBuffer;)V
      70: aastore
      71: goto          87
      74: astore_3
      75: new           #54                 // class java/io/IOException
      78: dup
      79: aload_3
      80: invokevirtual #55                 // Method org/apache/http/ParseException.getMessage:()Ljava/lang/String;
      83: invokespecial #56                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: iinc          2, 1
      90: goto          32
      93: aload_0
      94: getfield      #13                 // Field trailerBufs:Ljava/util/List;
      97: invokeinterface #57,  1           // InterfaceMethod java/util/List.clear:()V
     102: return
    Exception table:
       from    to  target type
          45    71    74   Class org/apache/http/ParseException

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #58                 // String Byte buffer
       3: invokestatic  #59                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #2                  // Field state:I
      11: iconst_2
      12: if_icmpne     17
      15: iconst_m1
      16: ireturn
      17: iconst_0
      18: istore_2
      19: aload_0
      20: getfield      #2                  // Field state:I
      23: iconst_2
      24: if_icmpeq     454
      27: aload_0
      28: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
      31: invokeinterface #60,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.hasData:()Z
      36: ifeq          50
      39: aload_0
      40: getfield      #5                  // Field chunkSize:J
      43: ldc2_w        #3                  // long -1l
      46: lcmp
      47: ifne          65
      50: aload_0
      51: invokevirtual #61                 // Method fillBufferFromChannel:()I
      54: istore_3
      55: iload_3
      56: iconst_m1
      57: if_icmpne     65
      60: aload_0
      61: iconst_1
      62: putfield      #8                  // Field endOfStream:Z
      65: aload_0
      66: getfield      #2                  // Field state:I
      69: lookupswitch  { // 2
                     0: 96
                     1: 313
               default: 451
          }
      96: aload_0
      97: getfield      #5                  // Field chunkSize:J
     100: ldc2_w        #3                  // long -1l
     103: lcmp
     104: ifne          148
     107: aload_0
     108: invokespecial #62                 // Method readChunkHead:()V
     111: aload_0
     112: getfield      #5                  // Field chunkSize:J
     115: ldc2_w        #3                  // long -1l
     118: lcmp
     119: ifne          124
     122: iload_2
     123: ireturn
     124: aload_0
     125: getfield      #5                  // Field chunkSize:J
     128: lconst_0
     129: lcmp
     130: ifne          148
     133: aload_0
     134: ldc2_w        #3                  // long -1l
     137: putfield      #5                  // Field chunkSize:J
     140: aload_0
     141: iconst_1
     142: putfield      #2                  // Field state:I
     145: goto          451
     148: aload_0
     149: getfield      #5                  // Field chunkSize:J
     152: aload_0
     153: getfield      #6                  // Field pos:J
     156: lsub
     157: lstore_3
     158: aload_0
     159: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     162: aload_1
     163: lload_3
     164: ldc2_w        #63                 // long 2147483647l
     167: invokestatic  #65                 // Method java/lang/Math.min:(JJ)J
     170: l2i
     171: invokeinterface #66,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.read:(Ljava/nio/ByteBuffer;I)I
     176: istore        5
     178: iload         5
     180: ifle          203
     183: aload_0
     184: dup
     185: getfield      #6                  // Field pos:J
     188: iload         5
     190: i2l
     191: ladd
     192: putfield      #6                  // Field pos:J
     195: iload_2
     196: iload         5
     198: iadd
     199: istore_2
     200: goto          279
     203: aload_0
     204: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     207: invokeinterface #60,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.hasData:()Z
     212: ifne          279
     215: aload_0
     216: getfield      #8                  // Field endOfStream:Z
     219: ifeq          279
     222: aload_0
     223: iconst_2
     224: putfield      #2                  // Field state:I
     227: aload_0
     228: iconst_1
     229: putfield      #67                 // Field completed:Z
     232: new           #68                 // class org/apache/http/TruncatedChunkException
     235: dup
     236: new           #35                 // class java/lang/StringBuilder
     239: dup
     240: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     243: ldc           #69                 // String Truncated chunk ( expected size:
     245: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: aload_0
     249: getfield      #5                  // Field chunkSize:J
     252: invokevirtual #70                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     255: ldc           #71                 // String ; actual size:
     257: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     260: aload_0
     261: getfield      #6                  // Field pos:J
     264: invokevirtual #70                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     267: ldc           #72                 // String )
     269: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: invokespecial #73                 // Method org/apache/http/TruncatedChunkException."<init>":(Ljava/lang/String;)V
     278: athrow
     279: aload_0
     280: getfield      #6                  // Field pos:J
     283: aload_0
     284: getfield      #5                  // Field chunkSize:J
     287: lcmp
     288: ifne          311
     291: aload_0
     292: ldc2_w        #3                  // long -1l
     295: putfield      #5                  // Field chunkSize:J
     298: aload_0
     299: lconst_0
     300: putfield      #6                  // Field pos:J
     303: aload_0
     304: iconst_1
     305: putfield      #7                  // Field endOfChunk:Z
     308: goto          451
     311: iload_2
     312: ireturn
     313: aload_0
     314: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     317: ifnonnull     336
     320: aload_0
     321: new           #16                 // class org/apache/http/util/CharArrayBuffer
     324: dup
     325: bipush        32
     327: invokespecial #17                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
     330: putfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     333: goto          343
     336: aload_0
     337: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     340: invokevirtual #18                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
     343: aload_0
     344: getfield      #19                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     347: aload_0
     348: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     351: aload_0
     352: getfield      #8                  // Field endOfStream:Z
     355: invokeinterface #20,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;Z)Z
     360: ifne          382
     363: aload_0
     364: getfield      #8                  // Field endOfStream:Z
     367: ifeq          380
     370: aload_0
     371: iconst_2
     372: putfield      #2                  // Field state:I
     375: aload_0
     376: iconst_1
     377: putfield      #67                 // Field completed:Z
     380: iload_2
     381: ireturn
     382: aload_0
     383: getfield      #15                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     386: invokevirtual #27                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     389: ifle          437
     392: aload_0
     393: getfield      #10                 // Field constraints:Lorg/apache/http/config/MessageConstraints;
     396: invokevirtual #74                 // Method org/apache/http/config/MessageConstraints.getMaxHeaderCount:()I
     399: istore        6
     401: iload         6
     403: ifle          430
     406: aload_0
     407: getfield      #13                 // Field trailerBufs:Ljava/util/List;
     410: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
     415: iload         6
     417: if_icmplt     430
     420: new           #28                 // class org/apache/http/MessageConstraintException
     423: dup
     424: ldc           #75                 // String Maximum header count exceeded
     426: invokespecial #30                 // Method org/apache/http/MessageConstraintException."<init>":(Ljava/lang/String;)V
     429: athrow
     430: aload_0
     431: invokespecial #76                 // Method parseHeader:()V
     434: goto          451
     437: aload_0
     438: iconst_2
     439: putfield      #2                  // Field state:I
     442: aload_0
     443: iconst_1
     444: putfield      #67                 // Field completed:Z
     447: aload_0
     448: invokespecial #77                 // Method processFooters:()V
     451: goto          19
     454: iload_2
     455: ireturn

  public org.apache.http.Header[] getFooters();
    Code:
       0: aload_0
       1: getfield      #50                 // Field footers:[Lorg/apache/http/Header;
       4: ifnull        18
       7: aload_0
       8: getfield      #50                 // Field footers:[Lorg/apache/http/Header;
      11: invokevirtual #78                 // Method "[Lorg/apache/http/Header;".clone:()Ljava/lang/Object;
      14: checkcast     #79                 // class "[Lorg/apache/http/Header;"
      17: areturn
      18: iconst_0
      19: anewarray     #49                 // class org/apache/http/Header
      22: areturn

  public java.lang.String toString();
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #80                 // String [chunk-coded; completed:
      11: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #67                 // Field completed:Z
      20: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #82                 // String ]
      27: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn
}
