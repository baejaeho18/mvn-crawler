Compiled from "BasicNIOConnPool.java"
public class org.apache.http.impl.nio.pool.BasicNIOConnPool extends org.apache.http.nio.pool.AbstractNIOConnPool<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection, org.apache.http.impl.nio.pool.BasicNIOPoolEntry> {
  private static final java.util.concurrent.atomic.AtomicLong COUNTER;

  private final int connectTimeout;

  public org.apache.http.impl.nio.pool.BasicNIOConnPool(org.apache.http.nio.reactor.ConnectingIOReactor, org.apache.http.nio.pool.NIOConnFactory<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_2
       4: bipush        20
       6: invokespecial #1                  // Method org/apache/http/nio/pool/AbstractNIOConnPool."<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/pool/NIOConnFactory;II)V
       9: aload_3
      10: ldc           #2                  // String HTTP parameters
      12: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_3
      18: ldc           #4                  // String http.connection.timeout
      20: iconst_0
      21: invokeinterface #5,  3            // InterfaceMethod org/apache/http/params/HttpParams.getIntParameter:(Ljava/lang/String;I)I
      26: putfield      #6                  // Field connectTimeout:I
      29: return

  public org.apache.http.impl.nio.pool.BasicNIOConnPool(org.apache.http.nio.reactor.ConnectingIOReactor, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: aload_1
       2: new           #7                  // class org/apache/http/impl/nio/pool/BasicNIOConnFactory
       5: dup
       6: aload_2
       7: invokespecial #8                  // Method org/apache/http/impl/nio/pool/BasicNIOConnFactory."<init>":(Lorg/apache/http/params/HttpParams;)V
      10: aload_2
      11: invokespecial #9                  // Method "<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/pool/NIOConnFactory;Lorg/apache/http/params/HttpParams;)V
      14: return

  public org.apache.http.impl.nio.pool.BasicNIOConnPool(org.apache.http.nio.reactor.ConnectingIOReactor, org.apache.http.nio.pool.NIOConnFactory<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #10                 // class org/apache/http/impl/nio/pool/BasicNIOConnPool$BasicAddressResolver
       6: dup
       7: invokespecial #11                 // Method org/apache/http/impl/nio/pool/BasicNIOConnPool$BasicAddressResolver."<init>":()V
      10: iconst_2
      11: bipush        20
      13: invokespecial #12                 // Method org/apache/http/nio/pool/AbstractNIOConnPool."<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/pool/NIOConnFactory;Lorg/apache/http/nio/pool/SocketAddressResolver;II)V
      16: aload_0
      17: iload_3
      18: putfield      #6                  // Field connectTimeout:I
      21: return

  public org.apache.http.impl.nio.pool.BasicNIOConnPool(org.apache.http.nio.reactor.ConnectingIOReactor, int, org.apache.http.config.ConnectionConfig);
    Code:
       0: aload_0
       1: aload_1
       2: new           #7                  // class org/apache/http/impl/nio/pool/BasicNIOConnFactory
       5: dup
       6: aload_3
       7: invokespecial #13                 // Method org/apache/http/impl/nio/pool/BasicNIOConnFactory."<init>":(Lorg/apache/http/config/ConnectionConfig;)V
      10: iload_2
      11: invokespecial #14                 // Method "<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/pool/NIOConnFactory;I)V
      14: return

  public org.apache.http.impl.nio.pool.BasicNIOConnPool(org.apache.http.nio.reactor.ConnectingIOReactor, org.apache.http.config.ConnectionConfig);
    Code:
       0: aload_0
       1: aload_1
       2: new           #7                  // class org/apache/http/impl/nio/pool/BasicNIOConnFactory
       5: dup
       6: aload_2
       7: invokespecial #13                 // Method org/apache/http/impl/nio/pool/BasicNIOConnFactory."<init>":(Lorg/apache/http/config/ConnectionConfig;)V
      10: iconst_0
      11: invokespecial #14                 // Method "<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/pool/NIOConnFactory;I)V
      14: return

  public org.apache.http.impl.nio.pool.BasicNIOConnPool(org.apache.http.nio.reactor.ConnectingIOReactor);
    Code:
       0: aload_0
       1: aload_1
       2: new           #7                  // class org/apache/http/impl/nio/pool/BasicNIOConnFactory
       5: dup
       6: getstatic     #15                 // Field org/apache/http/config/ConnectionConfig.DEFAULT:Lorg/apache/http/config/ConnectionConfig;
       9: invokespecial #13                 // Method org/apache/http/impl/nio/pool/BasicNIOConnFactory."<init>":(Lorg/apache/http/config/ConnectionConfig;)V
      12: iconst_0
      13: invokespecial #14                 // Method "<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/pool/NIOConnFactory;I)V
      16: return

  protected java.net.SocketAddress resolveRemoteAddress(org.apache.http.HttpHost);
    Code:
       0: new           #16                 // class java/net/InetSocketAddress
       3: dup
       4: aload_1
       5: invokevirtual #17                 // Method org/apache/http/HttpHost.getHostName:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #18                 // Method org/apache/http/HttpHost.getPort:()I
      12: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      15: areturn

  protected java.net.SocketAddress resolveLocalAddress(org.apache.http.HttpHost);
    Code:
       0: aconst_null
       1: areturn

  protected org.apache.http.impl.nio.pool.BasicNIOPoolEntry createEntry(org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection);
    Code:
       0: new           #20                 // class org/apache/http/impl/nio/pool/BasicNIOPoolEntry
       3: dup
       4: getstatic     #21                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      10: invokestatic  #23                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      13: aload_1
      14: aload_2
      15: invokespecial #24                 // Method org/apache/http/impl/nio/pool/BasicNIOPoolEntry."<init>":(Ljava/lang/String;Lorg/apache/http/HttpHost;Lorg/apache/http/nio/NHttpClientConnection;)V
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getSocketTimeout:()I
      26: invokevirtual #26                 // Method org/apache/http/impl/nio/pool/BasicNIOPoolEntry.setSocketTimeout:(I)V
      29: aload_3
      30: areturn

  public java.util.concurrent.Future<org.apache.http.impl.nio.pool.BasicNIOPoolEntry> lease(org.apache.http.HttpHost, java.lang.Object, org.apache.http.concurrent.FutureCallback<org.apache.http.impl.nio.pool.BasicNIOPoolEntry>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #6                  // Field connectTimeout:I
       7: i2l
       8: getstatic     #27                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: aload_3
      12: invokespecial #28                 // Method org/apache/http/nio/pool/AbstractNIOConnPool.lease:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      15: areturn

  public java.util.concurrent.Future<org.apache.http.impl.nio.pool.BasicNIOPoolEntry> lease(org.apache.http.HttpHost, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #6                  // Field connectTimeout:I
       7: i2l
       8: getstatic     #27                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: aconst_null
      12: invokespecial #28                 // Method org/apache/http/nio/pool/AbstractNIOConnPool.lease:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      15: areturn

  protected void onLease(org.apache.http.impl.nio.pool.BasicNIOPoolEntry);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method org/apache/http/impl/nio/pool/BasicNIOPoolEntry.getConnection:()Ljava/lang/Object;
       4: checkcast     #30                 // class org/apache/http/nio/NHttpClientConnection
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #31                 // Method org/apache/http/impl/nio/pool/BasicNIOPoolEntry.getSocketTimeout:()I
      13: invokeinterface #32,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
      18: return

  protected void onRelease(org.apache.http.impl.nio.pool.BasicNIOPoolEntry);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method org/apache/http/impl/nio/pool/BasicNIOPoolEntry.getConnection:()Ljava/lang/Object;
       4: checkcast     #30                 // class org/apache/http/nio/NHttpClientConnection
       7: astore_2
       8: aload_1
       9: aload_2
      10: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getSocketTimeout:()I
      15: invokevirtual #26                 // Method org/apache/http/impl/nio/pool/BasicNIOPoolEntry.setSocketTimeout:(I)V
      18: aload_2
      19: iconst_0
      20: invokeinterface #32,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
      25: return

  public java.util.concurrent.Future lease(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/http/HttpHost
       5: aload_2
       6: invokevirtual #34                 // Method lease:(Lorg/apache/http/HttpHost;Ljava/lang/Object;)Ljava/util/concurrent/Future;
       9: areturn

  public java.util.concurrent.Future lease(java.lang.Object, java.lang.Object, org.apache.http.concurrent.FutureCallback);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/http/HttpHost
       5: aload_2
       6: aload_3
       7: invokevirtual #35                 // Method lease:(Lorg/apache/http/HttpHost;Ljava/lang/Object;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      10: areturn

  protected void onRelease(org.apache.http.pool.PoolEntry);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/http/impl/nio/pool/BasicNIOPoolEntry
       5: invokevirtual #36                 // Method onRelease:(Lorg/apache/http/impl/nio/pool/BasicNIOPoolEntry;)V
       8: return

  protected void onLease(org.apache.http.pool.PoolEntry);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/http/impl/nio/pool/BasicNIOPoolEntry
       5: invokevirtual #37                 // Method onLease:(Lorg/apache/http/impl/nio/pool/BasicNIOPoolEntry;)V
       8: return

  protected org.apache.http.pool.PoolEntry createEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/http/HttpHost
       5: aload_2
       6: checkcast     #30                 // class org/apache/http/nio/NHttpClientConnection
       9: invokevirtual #38                 // Method createEntry:(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/NHttpClientConnection;)Lorg/apache/http/impl/nio/pool/BasicNIOPoolEntry;
      12: areturn

  protected java.net.SocketAddress resolveLocalAddress(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/http/HttpHost
       5: invokevirtual #39                 // Method resolveLocalAddress:(Lorg/apache/http/HttpHost;)Ljava/net/SocketAddress;
       8: areturn

  protected java.net.SocketAddress resolveRemoteAddress(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/http/HttpHost
       5: invokevirtual #40                 // Method resolveRemoteAddress:(Lorg/apache/http/HttpHost;)Ljava/net/SocketAddress;
       8: areturn

  static {};
    Code:
       0: new           #41                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #42                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: putstatic     #21                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
      10: return
}
