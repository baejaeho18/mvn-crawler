Compiled from "BasicNIOPoolEntry.java"
public class org.apache.http.impl.nio.pool.BasicNIOPoolEntry extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection> {
  private volatile int socketTimeout;

  public org.apache.http.impl.nio.pool.BasicNIOPoolEntry(java.lang.String, org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/apache/http/pool/PoolEntry."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
       7: return

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getConnection:()Ljava/lang/Object;
       4: checkcast     #3                  // class org/apache/http/nio/NHttpClientConnection
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      12: goto          16
      15: astore_1
      16: return
    Exception table:
       from    to  target type
           0    12    15   Class java/io/IOException

  public boolean isClosed();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getConnection:()Ljava/lang/Object;
       4: checkcast     #3                  // class org/apache/http/nio/NHttpClientConnection
       7: invokeinterface #6,  1            // InterfaceMethod org/apache/http/nio/NHttpClientConnection.isOpen:()Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  int getSocketTimeout();
    Code:
       0: aload_0
       1: getfield      #7                  // Field socketTimeout:I
       4: ireturn

  void setSocketTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field socketTimeout:I
       5: return
}
