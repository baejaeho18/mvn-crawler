Compiled from "AbstractMultiworkerIOReactor.java"
class org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$DefaultThreadFactory implements java.util.concurrent.ThreadFactory {
  private static final java.util.concurrent.atomic.AtomicLong COUNT;

  org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$DefaultThreadFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: new           #2                  // class java/lang/Thread
       3: dup
       4: aload_1
       5: new           #3                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #5                  // String I/O dispatcher
      14: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: getstatic     #7                  // Field COUNT:Ljava/util/concurrent/atomic/AtomicLong;
      20: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      23: invokevirtual #9                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #11                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      32: areturn

  static {};
    Code:
       0: new           #12                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_1
       5: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #7                  // Field COUNT:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
