Compiled from "HttpCache.java"
interface org.apache.http.impl.client.cache.HttpCache {
  public abstract void flushCacheEntriesFor(org.apache.http.HttpHost, org.apache.http.HttpRequest) throws java.io.IOException;

  public abstract void flushInvalidatedCacheEntriesFor(org.apache.http.HttpHost, org.apache.http.HttpRequest) throws java.io.IOException;

  public abstract void flushInvalidatedCacheEntriesFor(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.HttpResponse);

  public abstract org.apache.http.client.cache.HttpCacheEntry getCacheEntry(org.apache.http.HttpHost, org.apache.http.HttpRequest) throws java.io.IOException;

  public abstract java.util.Map<java.lang.String, org.apache.http.impl.client.cache.Variant> getVariantCacheEntriesWithEtags(org.apache.http.HttpHost, org.apache.http.HttpRequest) throws java.io.IOException;

  public abstract org.apache.http.HttpResponse cacheAndReturnResponse(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.HttpResponse, java.util.Date, java.util.Date) throws java.io.IOException;

  public abstract org.apache.http.client.methods.CloseableHttpResponse cacheAndReturnResponse(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.methods.CloseableHttpResponse, java.util.Date, java.util.Date) throws java.io.IOException;

  public abstract org.apache.http.client.cache.HttpCacheEntry updateCacheEntry(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.cache.HttpCacheEntry, org.apache.http.HttpResponse, java.util.Date, java.util.Date) throws java.io.IOException;

  public abstract org.apache.http.client.cache.HttpCacheEntry updateVariantCacheEntry(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.cache.HttpCacheEntry, org.apache.http.HttpResponse, java.util.Date, java.util.Date, java.lang.String) throws java.io.IOException;

  public abstract void reuseVariantEntryFor(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.impl.client.cache.Variant) throws java.io.IOException;
}
