Compiled from "BasicAsyncClientExchangeHandler.java"
public class org.apache.http.nio.protocol.BasicAsyncClientExchangeHandler<T> implements org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler {
  private final org.apache.http.nio.protocol.HttpAsyncRequestProducer requestProducer;

  private final org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T> responseConsumer;

  private final org.apache.http.concurrent.BasicFuture<T> future;

  private final org.apache.http.protocol.HttpContext localContext;

  private final org.apache.http.nio.NHttpClientConnection conn;

  private final org.apache.http.protocol.HttpProcessor httppocessor;

  private final org.apache.http.ConnectionReuseStrategy connReuseStrategy;

  private final java.util.concurrent.atomic.AtomicBoolean requestSent;

  private final java.util.concurrent.atomic.AtomicBoolean keepAlive;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  public org.apache.http.nio.protocol.BasicAsyncClientExchangeHandler(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.concurrent.FutureCallback<T>, org.apache.http.protocol.HttpContext, org.apache.http.nio.NHttpClientConnection, org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String Request producer
       8: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class org/apache/http/nio/protocol/HttpAsyncRequestProducer
      14: putfield      #5                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String Response consumer
      21: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      27: putfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      30: aload_0
      31: new           #9                  // class org/apache/http/concurrent/BasicFuture
      34: dup
      35: aload_3
      36: invokespecial #10                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      39: putfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      42: aload_0
      43: aload         4
      45: ldc           #12                 // String HTTP context
      47: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      50: checkcast     #13                 // class org/apache/http/protocol/HttpContext
      53: putfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      56: aload_0
      57: aload         5
      59: ldc           #15                 // String HTTP connection
      61: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      64: checkcast     #16                 // class org/apache/http/nio/NHttpClientConnection
      67: putfield      #17                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
      70: aload_0
      71: aload         6
      73: ldc           #18                 // String HTTP processor
      75: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      78: checkcast     #19                 // class org/apache/http/protocol/HttpProcessor
      81: putfield      #20                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
      84: aload_0
      85: aload         7
      87: ifnull        95
      90: aload         7
      92: goto          98
      95: getstatic     #21                 // Field org/apache/http/impl/DefaultConnectionReuseStrategy.INSTANCE:Lorg/apache/http/impl/DefaultConnectionReuseStrategy;
      98: putfield      #22                 // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
     101: aload_0
     102: new           #23                 // class java/util/concurrent/atomic/AtomicBoolean
     105: dup
     106: iconst_0
     107: invokespecial #24                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     110: putfield      #25                 // Field requestSent:Ljava/util/concurrent/atomic/AtomicBoolean;
     113: aload_0
     114: new           #23                 // class java/util/concurrent/atomic/AtomicBoolean
     117: dup
     118: iconst_0
     119: invokespecial #24                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     122: putfield      #26                 // Field keepAlive:Ljava/util/concurrent/atomic/AtomicBoolean;
     125: aload_0
     126: new           #23                 // class java/util/concurrent/atomic/AtomicBoolean
     129: dup
     130: iconst_0
     131: invokespecial #24                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     134: putfield      #27                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
     137: return

  public org.apache.http.nio.protocol.BasicAsyncClientExchangeHandler(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.protocol.HttpContext, org.apache.http.nio.NHttpClientConnection, org.apache.http.protocol.HttpProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: aload         4
       7: aload         5
       9: aconst_null
      10: invokespecial #28                 // Method "<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
      13: return

  public java.util.concurrent.Future<T> getFuture();
    Code:
       0: aload_0
       1: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
       4: areturn

  private void releaseResources();
    Code:
       0: aload_0
       1: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #29,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.close:()V
       9: goto          13
      12: astore_1
      13: aload_0
      14: getfield      #5                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      17: invokeinterface #31,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.close:()V
      22: goto          26
      25: astore_1
      26: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException
          13    22    25   Class java/io/IOException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          34
      12: aload_0
      13: invokespecial #33                 // Method releaseResources:()V
      16: aload_0
      17: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      20: invokevirtual #34                 // Method org/apache/http/concurrent/BasicFuture.isDone:()Z
      23: ifne          34
      26: aload_0
      27: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      30: invokevirtual #35                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      33: pop
      34: return

  public org.apache.http.HttpRequest generateRequest() throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isDone:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #5                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      13: invokeinterface #37,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.generateRequest:()Lorg/apache/http/HttpRequest;
      18: astore_1
      19: aload_0
      20: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      23: ldc           #38                 // String http.request
      25: aload_1
      26: invokeinterface #39,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      35: ldc           #40                 // String http.connection
      37: aload_0
      38: getfield      #17                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
      41: invokeinterface #39,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_0
      47: getfield      #20                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
      50: aload_1
      51: aload_0
      52: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      55: invokeinterface #41,  3           // InterfaceMethod org/apache/http/protocol/HttpProcessor.process:(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V
      60: aload_1
      61: areturn

  public void produceContent(org.apache.http.nio.ContentEncoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: aload_1
       5: aload_2
       6: invokeinterface #42,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
      11: return

  public void requestCompleted();
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: aload_0
       5: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
       8: invokeinterface #43,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.requestCompleted:(Lorg/apache/http/protocol/HttpContext;)V
      13: aload_0
      14: getfield      #25                 // Field requestSent:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: iconst_1
      18: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      21: return

  public void responseReceived(org.apache.http.HttpResponse) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
       4: ldc           #45                 // String http.response
       6: aload_1
       7: invokeinterface #39,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #20                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
      16: aload_1
      17: aload_0
      18: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      21: invokeinterface #46,  3           // InterfaceMethod org/apache/http/protocol/HttpProcessor.process:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V
      26: aload_0
      27: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      30: aload_1
      31: invokeinterface #47,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.responseReceived:(Lorg/apache/http/HttpResponse;)V
      36: aload_0
      37: getfield      #26                 // Field keepAlive:Ljava/util/concurrent/atomic/AtomicBoolean;
      40: aload_0
      41: getfield      #22                 // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      44: aload_1
      45: aload_0
      46: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      49: invokeinterface #48,  3           // InterfaceMethod org/apache/http/ConnectionReuseStrategy.keepAlive:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z
      54: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      57: return

  public void consumeContent(org.apache.http.nio.ContentDecoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #49,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.consumeContent:(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
      11: return

  public void responseCompleted() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field keepAlive:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          19
      10: aload_0
      11: getfield      #17                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
      14: invokeinterface #51,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      19: aload_0
      20: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      23: aload_0
      24: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      27: invokeinterface #52,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.responseCompleted:(Lorg/apache/http/protocol/HttpContext;)V
      32: aload_0
      33: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      36: invokeinterface #53,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getResult:()Ljava/lang/Object;
      41: astore_1
      42: aload_0
      43: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      46: invokeinterface #54,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getException:()Ljava/lang/Exception;
      51: astore_2
      52: aload_1
      53: ifnull        68
      56: aload_0
      57: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      60: aload_1
      61: invokevirtual #55                 // Method org/apache/http/concurrent/BasicFuture.completed:(Ljava/lang/Object;)Z
      64: pop
      65: goto          77
      68: aload_0
      69: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      72: aload_2
      73: invokevirtual #56                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      76: pop
      77: aload_0
      78: getfield      #27                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      81: iconst_0
      82: iconst_1
      83: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      86: ifeq          93
      89: aload_0
      90: invokespecial #33                 // Method releaseResources:()V
      93: goto          104
      96: astore_1
      97: aload_0
      98: aload_1
      99: invokevirtual #58                 // Method failed:(Ljava/lang/Exception;)V
     102: aload_1
     103: athrow
     104: return
    Exception table:
       from    to  target type
           0    93    96   Class java/lang/RuntimeException

  public void inputTerminated();
    Code:
       0: aload_0
       1: new           #59                 // class org/apache/http/ConnectionClosedException
       4: dup
       5: ldc           #60                 // String Connection closed
       7: invokespecial #61                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
      10: invokevirtual #58                 // Method failed:(Ljava/lang/Exception;)V
      13: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #27                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          96
      12: aload_0
      13: getfield      #25                 // Field requestSent:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      19: ifne          32
      22: aload_0
      23: getfield      #5                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      26: aload_1
      27: invokeinterface #62,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.failed:(Ljava/lang/Exception;)V
      32: aload_0
      33: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      36: aload_1
      37: invokeinterface #63,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.failed:(Ljava/lang/Exception;)V
      42: aload_0
      43: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      46: aload_1
      47: invokevirtual #56                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      50: pop
      51: aload_0
      52: invokespecial #33                 // Method releaseResources:()V
      55: goto          65
      58: astore_2
      59: aload_0
      60: invokespecial #33                 // Method releaseResources:()V
      63: aload_2
      64: athrow
      65: goto          96
      68: astore_3
      69: aload_0
      70: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      73: aload_1
      74: invokevirtual #56                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      77: pop
      78: aload_0
      79: invokespecial #33                 // Method releaseResources:()V
      82: goto          94
      85: astore        4
      87: aload_0
      88: invokespecial #33                 // Method releaseResources:()V
      91: aload         4
      93: athrow
      94: aload_3
      95: athrow
      96: return
    Exception table:
       from    to  target type
          42    51    58   any
          58    59    58   any
          12    42    68   any
          69    78    85   any
          85    87    85   any
          68    69    68   any

  public boolean cancel();
    Code:
       0: aload_0
       1: getfield      #27                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          54
      12: aload_0
      13: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      16: invokeinterface #64,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.cancel:()Z
      21: istore_1
      22: aload_0
      23: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      26: invokevirtual #35                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      29: pop
      30: aload_0
      31: invokespecial #33                 // Method releaseResources:()V
      34: iload_1
      35: ireturn
      36: astore_2
      37: aload_0
      38: getfield      #11                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      41: invokevirtual #35                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      44: pop
      45: aload_2
      46: athrow
      47: astore_3
      48: aload_0
      49: invokespecial #33                 // Method releaseResources:()V
      52: aload_3
      53: athrow
      54: iconst_0
      55: ireturn
    Exception table:
       from    to  target type
          12    22    36   any
          36    37    36   any
          12    30    47   any
          36    48    47   any

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #8                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #65,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.isDone:()Z
       9: ireturn
}
