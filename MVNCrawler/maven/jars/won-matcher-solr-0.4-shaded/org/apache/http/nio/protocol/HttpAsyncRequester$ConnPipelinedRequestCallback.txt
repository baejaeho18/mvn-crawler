Compiled from "HttpAsyncRequester.java"
class org.apache.http.nio.protocol.HttpAsyncRequester$ConnPipelinedRequestCallback<T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> implements org.apache.http.concurrent.FutureCallback<E> {
  private final org.apache.http.concurrent.BasicFuture<java.util.List<T>> requestFuture;

  private final java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncRequestProducer> requestProducers;

  private final java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>> responseConsumers;

  private final org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E> connPool;

  private final org.apache.http.protocol.HttpContext context;

  final org.apache.http.nio.protocol.HttpAsyncRequester this$0;

  org.apache.http.nio.protocol.HttpAsyncRequester$ConnPipelinedRequestCallback(org.apache.http.concurrent.BasicFuture<java.util.List<T>>, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncRequestProducer>, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>>, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field requestProducers:Ljava/util/List;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field responseConsumers:Ljava/util/List;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field connPool:Lorg/apache/http/pool/ConnPool;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field context:Lorg/apache/http/protocol/HttpContext;
      37: return

  public void completed(E);
    Code:
       0: aload_0
       1: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
       4: invokevirtual #8                  // Method org/apache/http/concurrent/BasicFuture.isDone:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #6                  // Field connPool:Lorg/apache/http/pool/ConnPool;
      14: aload_1
      15: iconst_1
      16: invokeinterface #9,  3            // InterfaceMethod org/apache/http/pool/ConnPool.release:(Ljava/lang/Object;Z)V
      21: return
      22: aload_1
      23: invokevirtual #10                 // Method org/apache/http/pool/PoolEntry.getConnection:()Ljava/lang/Object;
      26: checkcast     #11                 // class org/apache/http/nio/NHttpClientConnection
      29: astore_2
      30: new           #12                 // class org/apache/http/nio/protocol/PipeliningClientExchangeHandler
      33: dup
      34: aload_0
      35: getfield      #4                  // Field requestProducers:Ljava/util/List;
      38: aload_0
      39: getfield      #5                  // Field responseConsumers:Ljava/util/List;
      42: new           #13                 // class org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback
      45: dup
      46: aload_0
      47: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      50: aload_0
      51: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      54: aload_1
      55: aload_0
      56: getfield      #6                  // Field connPool:Lorg/apache/http/pool/ConnPool;
      59: invokespecial #14                 // Method org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/pool/PoolEntry;Lorg/apache/http/pool/ConnPool;)V
      62: aload_0
      63: getfield      #7                  // Field context:Lorg/apache/http/protocol/HttpContext;
      66: aload_2
      67: aload_0
      68: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      71: invokestatic  #15                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$000:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;)Lorg/apache/http/protocol/HttpProcessor;
      74: aload_0
      75: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      78: invokestatic  #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$100:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;)Lorg/apache/http/ConnectionReuseStrategy;
      81: invokespecial #17                 // Method org/apache/http/nio/protocol/PipeliningClientExchangeHandler."<init>":(Ljava/util/List;Ljava/util/List;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
      84: astore_3
      85: aload_0
      86: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      89: aload_3
      90: aload_2
      91: invokestatic  #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$200:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;Lorg/apache/http/nio/NHttpClientConnection;)V
      94: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseConsumers:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #22                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #23,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.failed:(Ljava/lang/Exception;)V
      36: goto          10
      39: aload_0
      40: invokevirtual #24                 // Method releaseResources:()V
      43: goto          55
      46: astore        4
      48: aload_0
      49: invokevirtual #24                 // Method releaseResources:()V
      52: aload         4
      54: athrow
      55: aload_0
      56: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      59: aload_1
      60: invokevirtual #25                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      63: pop
      64: goto          81
      67: astore        5
      69: aload_0
      70: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      73: aload_1
      74: invokevirtual #25                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      77: pop
      78: aload         5
      80: athrow
      81: return
    Exception table:
       from    to  target type
           0    39    46   any
          46    48    46   any
           0    55    67   any
          67    69    67   any

  public void cancelled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseConsumers:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #22                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      28: astore_2
      29: aload_2
      30: invokeinterface #26,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.cancel:()Z
      35: pop
      36: goto          10
      39: aload_0
      40: invokevirtual #24                 // Method releaseResources:()V
      43: goto          53
      46: astore_3
      47: aload_0
      48: invokevirtual #24                 // Method releaseResources:()V
      51: aload_3
      52: athrow
      53: aload_0
      54: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      57: iconst_1
      58: invokevirtual #27                 // Method org/apache/http/concurrent/BasicFuture.cancel:(Z)Z
      61: pop
      62: goto          79
      65: astore        4
      67: aload_0
      68: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      71: iconst_1
      72: invokevirtual #27                 // Method org/apache/http/concurrent/BasicFuture.cancel:(Z)Z
      75: pop
      76: aload         4
      78: athrow
      79: return
    Exception table:
       from    to  target type
           0    39    46   any
          46    47    46   any
           0    53    65   any
          65    67    65   any

  public void releaseResources();
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestProducers:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_1
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #28                 // class org/apache/http/nio/protocol/HttpAsyncRequestProducer
      28: astore_2
      29: aload_0
      30: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      33: aload_2
      34: invokestatic  #29                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$300:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Ljava/io/Closeable;)V
      37: goto          10
      40: aload_0
      41: getfield      #5                  // Field responseConsumers:Ljava/util/List;
      44: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      49: astore_1
      50: aload_1
      51: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          80
      59: aload_1
      60: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #22                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      68: astore_2
      69: aload_0
      70: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      73: aload_2
      74: invokestatic  #29                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$300:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Ljava/io/Closeable;)V
      77: goto          50
      80: return

  public void completed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/http/pool/PoolEntry
       5: invokevirtual #31                 // Method completed:(Lorg/apache/http/pool/PoolEntry;)V
       8: return
}
