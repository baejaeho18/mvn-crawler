Compiled from "RouteSpecificPool.java"
abstract class org.apache.http.nio.pool.RouteSpecificPool<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> {
  private final T route;

  private final java.util.Set<E> leased;

  private final java.util.LinkedList<E> available;

  private final java.util.Map<org.apache.http.nio.reactor.SessionRequest, org.apache.http.concurrent.BasicFuture<E>> pending;

  org.apache.http.nio.pool.RouteSpecificPool(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field route:Ljava/lang/Object;
       9: aload_0
      10: new           #3                  // class java/util/HashSet
      13: dup
      14: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      17: putfield      #5                  // Field leased:Ljava/util/Set;
      20: aload_0
      21: new           #6                  // class java/util/LinkedList
      24: dup
      25: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      28: putfield      #8                  // Field available:Ljava/util/LinkedList;
      31: aload_0
      32: new           #9                  // class java/util/HashMap
      35: dup
      36: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      39: putfield      #11                 // Field pending:Ljava/util/Map;
      42: return

  public T getRoute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field route:Ljava/lang/Object;
       4: areturn

  protected abstract E createEntry(T, C);

  public int getLeasedCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field leased:Ljava/util/Set;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public int getPendingCount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field pending:Ljava/util/Map;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public int getAvailableCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #14                 // Method java/util/LinkedList.size:()I
       7: ireturn

  public int getAllocatedCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #14                 // Method java/util/LinkedList.size:()I
       7: aload_0
       8: getfield      #5                  // Field leased:Ljava/util/Set;
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Set.size:()I
      16: iadd
      17: aload_0
      18: getfield      #11                 // Field pending:Ljava/util/Map;
      21: invokeinterface #13,  1           // InterfaceMethod java/util/Map.size:()I
      26: iadd
      27: ireturn

  public E getFree(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #15                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifne          130
      10: aload_1
      11: ifnull        74
      14: aload_0
      15: getfield      #8                  // Field available:Ljava/util/LinkedList;
      18: invokevirtual #16                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          74
      31: aload_2
      32: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #19                 // class org/apache/http/pool/PoolEntry
      40: astore_3
      41: aload_1
      42: aload_3
      43: invokevirtual #20                 // Method org/apache/http/pool/PoolEntry.getState:()Ljava/lang/Object;
      46: invokevirtual #21                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          71
      52: aload_2
      53: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.remove:()V
      58: aload_0
      59: getfield      #5                  // Field leased:Ljava/util/Set;
      62: aload_3
      63: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_3
      70: areturn
      71: goto          22
      74: aload_0
      75: getfield      #8                  // Field available:Ljava/util/LinkedList;
      78: invokevirtual #16                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      81: astore_2
      82: aload_2
      83: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          130
      91: aload_2
      92: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #19                 // class org/apache/http/pool/PoolEntry
     100: astore_3
     101: aload_3
     102: invokevirtual #20                 // Method org/apache/http/pool/PoolEntry.getState:()Ljava/lang/Object;
     105: ifnonnull     127
     108: aload_2
     109: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.remove:()V
     114: aload_0
     115: getfield      #5                  // Field leased:Ljava/util/Set;
     118: aload_3
     119: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload_3
     126: areturn
     127: goto          82
     130: aconst_null
     131: areturn

  public E getLastUsed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #15                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifne          21
      10: aload_0
      11: getfield      #8                  // Field available:Ljava/util/LinkedList;
      14: invokevirtual #24                 // Method java/util/LinkedList.getLast:()Ljava/lang/Object;
      17: checkcast     #19                 // class org/apache/http/pool/PoolEntry
      20: areturn
      21: aconst_null
      22: areturn

  public boolean remove(E);
    Code:
       0: aload_1
       1: ldc           #25                 // String Pool entry
       3: invokestatic  #26                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #8                  // Field available:Ljava/util/LinkedList;
      11: aload_1
      12: invokevirtual #27                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      15: ifne          33
      18: aload_0
      19: getfield      #5                  // Field leased:Ljava/util/Set;
      22: aload_1
      23: invokeinterface #28,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: iconst_1
      34: ireturn

  public void free(E, boolean);
    Code:
       0: aload_1
       1: ldc           #25                 // String Pool entry
       3: invokestatic  #26                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field leased:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #28,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: istore_3
      18: iload_3
      19: ldc           #29                 // String Entry %s has not been leased from this pool
      21: aload_1
      22: invokestatic  #30                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      25: iload_2
      26: ifeq          37
      29: aload_0
      30: getfield      #8                  // Field available:Ljava/util/LinkedList;
      33: aload_1
      34: invokevirtual #31                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      37: return

  public void addPending(org.apache.http.nio.reactor.SessionRequest, org.apache.http.concurrent.BasicFuture<E>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field pending:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private org.apache.http.concurrent.BasicFuture<E> removeRequest(org.apache.http.nio.reactor.SessionRequest);
    Code:
       0: aload_0
       1: getfield      #11                 // Field pending:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #34                 // class org/apache/http/concurrent/BasicFuture
      13: astore_2
      14: aload_2
      15: ldc           #35                 // String Session request future
      17: invokestatic  #36                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      20: aload_2
      21: areturn

  public E createEntry(org.apache.http.nio.reactor.SessionRequest, C);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field route:Ljava/lang/Object;
       5: aload_2
       6: invokevirtual #37                 // Method createEntry:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
       9: astore_3
      10: aload_0
      11: getfield      #5                  // Field leased:Ljava/util/Set;
      14: aload_3
      15: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_3
      22: areturn

  public boolean completed(org.apache.http.nio.reactor.SessionRequest, E);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method removeRequest:(Lorg/apache/http/nio/reactor/SessionRequest;)Lorg/apache/http/concurrent/BasicFuture;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokevirtual #39                 // Method org/apache/http/concurrent/BasicFuture.completed:(Ljava/lang/Object;)Z
      11: ireturn

  public void cancelled(org.apache.http.nio.reactor.SessionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method removeRequest:(Lorg/apache/http/nio/reactor/SessionRequest;)Lorg/apache/http/concurrent/BasicFuture;
       5: astore_2
       6: aload_2
       7: iconst_1
       8: invokevirtual #40                 // Method org/apache/http/concurrent/BasicFuture.cancel:(Z)Z
      11: pop
      12: return

  public void failed(org.apache.http.nio.reactor.SessionRequest, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method removeRequest:(Lorg/apache/http/nio/reactor/SessionRequest;)Lorg/apache/http/concurrent/BasicFuture;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokevirtual #41                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      11: pop
      12: return

  public void timeout(org.apache.http.nio.reactor.SessionRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method removeRequest:(Lorg/apache/http/nio/reactor/SessionRequest;)Lorg/apache/http/concurrent/BasicFuture;
       5: astore_2
       6: aload_2
       7: new           #42                 // class java/net/ConnectException
      10: dup
      11: invokespecial #43                 // Method java/net/ConnectException."<init>":()V
      14: invokevirtual #41                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      17: pop
      18: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #11                 // Field pending:Ljava/util/Map;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          43
      24: aload_1
      25: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #46                 // class org/apache/http/nio/reactor/SessionRequest
      33: astore_2
      34: aload_2
      35: invokeinterface #47,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionRequest.cancel:()V
      40: goto          15
      43: aload_0
      44: getfield      #11                 // Field pending:Ljava/util/Map;
      47: invokeinterface #48,  1           // InterfaceMethod java/util/Map.clear:()V
      52: aload_0
      53: getfield      #8                  // Field available:Ljava/util/LinkedList;
      56: invokevirtual #49                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      59: astore_1
      60: aload_1
      61: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          86
      69: aload_1
      70: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #19                 // class org/apache/http/pool/PoolEntry
      78: astore_2
      79: aload_2
      80: invokevirtual #50                 // Method org/apache/http/pool/PoolEntry.close:()V
      83: goto          60
      86: aload_0
      87: getfield      #8                  // Field available:Ljava/util/LinkedList;
      90: invokevirtual #51                 // Method java/util/LinkedList.clear:()V
      93: aload_0
      94: getfield      #5                  // Field leased:Ljava/util/Set;
      97: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     102: astore_1
     103: aload_1
     104: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     109: ifeq          129
     112: aload_1
     113: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #19                 // class org/apache/http/pool/PoolEntry
     121: astore_2
     122: aload_2
     123: invokevirtual #50                 // Method org/apache/http/pool/PoolEntry.close:()V
     126: goto          103
     129: aload_0
     130: getfield      #5                  // Field leased:Ljava/util/Set;
     133: invokeinterface #52,  1           // InterfaceMethod java/util/Set.clear:()V
     138: return

  public java.lang.String toString();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #55                 // String [route:
      11: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field route:Ljava/lang/Object;
      20: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #58                 // String ][leased:
      27: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #5                  // Field leased:Ljava/util/Set;
      36: invokeinterface #12,  1           // InterfaceMethod java/util/Set.size:()I
      41: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: pop
      45: aload_1
      46: ldc           #60                 // String ][available:
      48: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: aload_0
      54: getfield      #8                  // Field available:Ljava/util/LinkedList;
      57: invokevirtual #14                 // Method java/util/LinkedList.size:()I
      60: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: pop
      64: aload_1
      65: ldc           #61                 // String ][pending:
      67: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_1
      72: aload_0
      73: getfield      #11                 // Field pending:Ljava/util/Map;
      76: invokeinterface #13,  1           // InterfaceMethod java/util/Map.size:()I
      81: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: pop
      85: aload_1
      86: ldc           #62                 // String ]
      88: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: aload_1
      93: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: areturn
}
