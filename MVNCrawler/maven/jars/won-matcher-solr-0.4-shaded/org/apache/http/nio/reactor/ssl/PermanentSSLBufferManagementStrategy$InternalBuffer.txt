Compiled from "PermanentSSLBufferManagementStrategy.java"
final class org.apache.http.nio.reactor.ssl.PermanentSSLBufferManagementStrategy$InternalBuffer implements org.apache.http.nio.reactor.ssl.SSLBuffer {
  private final java.nio.ByteBuffer buffer;

  public org.apache.http.nio.reactor.ssl.PermanentSSLBufferManagementStrategy$InternalBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ldc           #2                  // String size
       7: invokestatic  #3                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      10: pop
      11: aload_0
      12: iload_1
      13: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      16: putfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      19: return

  public java.nio.ByteBuffer acquire();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
       4: areturn

  public void release();
    Code:
       0: return

  public boolean isAcquired();
    Code:
       0: iconst_1
       1: ireturn

  public boolean hasData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
