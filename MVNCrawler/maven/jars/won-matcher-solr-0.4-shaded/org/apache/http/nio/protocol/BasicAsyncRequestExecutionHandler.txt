Compiled from "BasicAsyncRequestExecutionHandler.java"
public class org.apache.http.nio.protocol.BasicAsyncRequestExecutionHandler<T> implements org.apache.http.nio.protocol.HttpAsyncRequestExecutionHandler<T> {
  private final org.apache.http.nio.protocol.HttpAsyncRequestProducer requestProducer;

  private final org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T> responseConsumer;

  private final org.apache.http.concurrent.BasicFuture<T> future;

  private final org.apache.http.protocol.HttpContext localContext;

  private final org.apache.http.protocol.HttpProcessor httppocessor;

  private final org.apache.http.ConnectionReuseStrategy reuseStrategy;

  private volatile boolean requestSent;

  public org.apache.http.nio.protocol.BasicAsyncRequestExecutionHandler(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.concurrent.FutureCallback<T>, org.apache.http.protocol.HttpContext, org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Request producer
       7: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_2
      12: ldc           #4                  // String Response consumer
      14: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: pop
      18: aload         4
      20: ldc           #5                  // String HTTP context
      22: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      25: pop
      26: aload         5
      28: ldc           #6                  // String HTTP processor
      30: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: pop
      34: aload         6
      36: ldc           #7                  // String Connection reuse strategy
      38: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      41: pop
      42: aload         7
      44: ldc           #8                  // String HTTP parameters
      46: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: aload_1
      52: putfield      #9                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      55: aload_0
      56: aload_2
      57: putfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      60: aload_0
      61: new           #11                 // class org/apache/http/concurrent/BasicFuture
      64: dup
      65: aload_3
      66: invokespecial #12                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      69: putfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      72: aload_0
      73: aload         4
      75: putfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      78: aload_0
      79: aload         5
      81: putfield      #15                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
      84: aload_0
      85: aload         6
      87: putfield      #16                 // Field reuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      90: return

  public org.apache.http.nio.protocol.BasicAsyncRequestExecutionHandler(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.protocol.HttpContext, org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokespecial #17                 // Method "<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/params/HttpParams;)V
      14: return

  public java.util.concurrent.Future<T> getFuture();
    Code:
       0: aload_0
       1: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
       4: areturn

  private void releaseResources();
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.close:()V
       9: goto          13
      12: astore_1
      13: aload_0
      14: getfield      #9                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      17: invokeinterface #20,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.close:()V
      22: goto          26
      25: astore_1
      26: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException
          13    22    25   Class java/io/IOException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #21                 // Method releaseResources:()V
       4: aload_0
       5: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
       8: invokevirtual #22                 // Method org/apache/http/concurrent/BasicFuture.isDone:()Z
      11: ifne          22
      14: aload_0
      15: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      18: invokevirtual #23                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      21: pop
      22: return

  public org.apache.http.HttpHost getTarget();
    Code:
       0: aload_0
       1: getfield      #9                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: invokeinterface #24,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.getTarget:()Lorg/apache/http/HttpHost;
       9: areturn

  public org.apache.http.HttpRequest generateRequest() throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.generateRequest:()Lorg/apache/http/HttpRequest;
       9: areturn

  public void produceContent(org.apache.http.nio.ContentEncoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: aload_1
       5: aload_2
       6: invokeinterface #26,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
      11: return

  public void requestCompleted(org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: getfield      #9                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.requestCompleted:(Lorg/apache/http/protocol/HttpContext;)V
      10: aload_0
      11: iconst_1
      12: putfield      #28                 // Field requestSent:Z
      15: return

  public boolean isRepeatable();
    Code:
       0: iconst_0
       1: ireturn

  public void resetRequest();
    Code:
       0: return

  public void responseReceived(org.apache.http.HttpResponse) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.responseReceived:(Lorg/apache/http/HttpResponse;)V
      10: return

  public void consumeContent(org.apache.http.nio.ContentDecoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #30,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.consumeContent:(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
      11: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #28                 // Field requestSent:Z
       4: ifne          17
       7: aload_0
       8: getfield      #9                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      11: aload_1
      12: invokeinterface #31,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.failed:(Ljava/lang/Exception;)V
      17: aload_0
      18: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      21: aload_1
      22: invokeinterface #32,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.failed:(Ljava/lang/Exception;)V
      27: aload_0
      28: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      31: aload_1
      32: invokevirtual #33                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      35: pop
      36: aload_0
      37: invokespecial #21                 // Method releaseResources:()V
      40: goto          50
      43: astore_2
      44: aload_0
      45: invokespecial #21                 // Method releaseResources:()V
      48: aload_2
      49: athrow
      50: goto          81
      53: astore_3
      54: aload_0
      55: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      58: aload_1
      59: invokevirtual #33                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      62: pop
      63: aload_0
      64: invokespecial #21                 // Method releaseResources:()V
      67: goto          79
      70: astore        4
      72: aload_0
      73: invokespecial #21                 // Method releaseResources:()V
      76: aload         4
      78: athrow
      79: aload_3
      80: athrow
      81: return
    Exception table:
       from    to  target type
          27    36    43   any
          43    44    43   any
           0    27    53   any
          54    63    70   any
          70    72    70   any
          53    54    53   any

  public boolean cancel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #34,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.cancel:()Z
       9: istore_1
      10: aload_0
      11: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      14: invokevirtual #23                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      17: pop
      18: aload_0
      19: invokespecial #21                 // Method releaseResources:()V
      22: iload_1
      23: ireturn
      24: astore_1
      25: aload_0
      26: aload_1
      27: invokevirtual #36                 // Method failed:(Ljava/lang/Exception;)V
      30: aload_1
      31: athrow
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/RuntimeException

  public void responseCompleted(org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.responseCompleted:(Lorg/apache/http/protocol/HttpContext;)V
      10: aload_0
      11: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      14: invokeinterface #38,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getResult:()Ljava/lang/Object;
      19: astore_2
      20: aload_0
      21: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      24: invokeinterface #39,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getException:()Ljava/lang/Exception;
      29: astore_3
      30: aload_3
      31: ifnonnull     46
      34: aload_0
      35: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      38: aload_2
      39: invokevirtual #40                 // Method org/apache/http/concurrent/BasicFuture.completed:(Ljava/lang/Object;)Z
      42: pop
      43: goto          55
      46: aload_0
      47: getfield      #13                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      50: aload_3
      51: invokevirtual #33                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      54: pop
      55: aload_0
      56: invokespecial #21                 // Method releaseResources:()V
      59: goto          70
      62: astore_2
      63: aload_0
      64: aload_2
      65: invokevirtual #36                 // Method failed:(Ljava/lang/Exception;)V
      68: aload_2
      69: athrow
      70: return
    Exception table:
       from    to  target type
           0    59    62   Class java/lang/RuntimeException

  public T getResult();
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #38,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getResult:()Ljava/lang/Object;
       9: areturn

  public java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #39,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getException:()Ljava/lang/Exception;
       9: areturn

  public org.apache.http.protocol.HttpContext getContext();
    Code:
       0: aload_0
       1: getfield      #14                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
       4: areturn

  public org.apache.http.protocol.HttpProcessor getHttpProcessor();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
       4: areturn

  public org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy();
    Code:
       0: aload_0
       1: getfield      #16                 // Field reuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
       4: areturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #41,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.isDone:()Z
       9: ireturn
}
