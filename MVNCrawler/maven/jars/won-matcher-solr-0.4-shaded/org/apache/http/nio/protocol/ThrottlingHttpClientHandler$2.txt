Compiled from "ThrottlingHttpClientHandler.java"
class org.apache.http.nio.protocol.ThrottlingHttpClientHandler$2 implements java.lang.Runnable {
  final org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState val$connState;

  final org.apache.http.HttpResponse val$response;

  final org.apache.http.protocol.HttpContext val$context;

  final org.apache.http.nio.NHttpClientConnection val$conn;

  final org.apache.http.nio.protocol.ThrottlingHttpClientHandler this$0;

  org.apache.http.nio.protocol.ThrottlingHttpClientHandler$2(org.apache.http.nio.protocol.ThrottlingHttpClientHandler, org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext, org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$response:Lorg/apache/http/HttpResponse;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$context:Lorg/apache/http/protocol/HttpContext;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      11: invokevirtual #7                  // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.getOutputState:()I
      14: istore_2
      15: aload_0
      16: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      19: invokevirtual #8                  // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.isWorkerRunning:()Z
      22: ifne          28
      25: goto          46
      28: iload_2
      29: iconst_m1
      30: if_icmpne     36
      33: aload_1
      34: monitorexit
      35: return
      36: aload_0
      37: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      40: invokevirtual #9                  // Method java/lang/Object.wait:()V
      43: goto          7
      46: goto          60
      49: astore_2
      50: aload_0
      51: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      54: invokevirtual #11                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.shutdown:()V
      57: aload_1
      58: monitorexit
      59: return
      60: aload_0
      61: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      64: iconst_1
      65: invokevirtual #12                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.setWorkerRunning:(Z)V
      68: aload_1
      69: monitorexit
      70: goto          78
      73: astore_3
      74: aload_1
      75: monitorexit
      76: aload_3
      77: athrow
      78: aload_0
      79: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
      82: getfield      #13                 // Field org/apache/http/nio/protocol/ThrottlingHttpClientHandler.execHandler:Lorg/apache/http/nio/protocol/HttpRequestExecutionHandler;
      85: aload_0
      86: getfield      #3                  // Field val$response:Lorg/apache/http/HttpResponse;
      89: aload_0
      90: getfield      #4                  // Field val$context:Lorg/apache/http/protocol/HttpContext;
      93: invokeinterface #14,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpRequestExecutionHandler.handleResponse:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V
      98: aload_0
      99: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     102: dup
     103: astore_1
     104: monitorenter
     105: aload_0
     106: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     109: invokevirtual #15                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.getInputState:()I
     112: istore_2
     113: iload_2
     114: bipush        64
     116: if_icmpne     122
     119: goto          140
     122: iload_2
     123: iconst_m1
     124: if_icmpne     130
     127: aload_1
     128: monitorexit
     129: return
     130: aload_0
     131: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     134: invokevirtual #9                  // Method java/lang/Object.wait:()V
     137: goto          105
     140: goto          151
     143: astore_2
     144: aload_0
     145: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     148: invokevirtual #11                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.shutdown:()V
     151: aload_0
     152: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     155: invokevirtual #16                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.resetInput:()V
     158: aload_0
     159: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     162: invokevirtual #17                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.resetOutput:()V
     165: aload_0
     166: getfield      #5                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
     169: invokeinterface #18,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.isOpen:()Z
     174: ifeq          186
     177: aload_0
     178: getfield      #5                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
     181: invokeinterface #19,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
     186: aload_0
     187: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     190: iconst_0
     191: invokevirtual #12                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.setWorkerRunning:(Z)V
     194: aload_0
     195: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     198: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
     201: aload_1
     202: monitorexit
     203: goto          213
     206: astore        4
     208: aload_1
     209: monitorexit
     210: aload         4
     212: athrow
     213: goto          256
     216: astore_1
     217: aload_0
     218: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
     221: aload_0
     222: getfield      #5                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
     225: aload_1
     226: invokevirtual #22                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler.shutdownConnection:(Lorg/apache/http/nio/NHttpConnection;Ljava/lang/Throwable;)V
     229: aload_0
     230: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
     233: getfield      #23                 // Field org/apache/http/nio/protocol/ThrottlingHttpClientHandler.eventListener:Lorg/apache/http/nio/protocol/EventListener;
     236: ifnull        256
     239: aload_0
     240: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
     243: getfield      #23                 // Field org/apache/http/nio/protocol/ThrottlingHttpClientHandler.eventListener:Lorg/apache/http/nio/protocol/EventListener;
     246: aload_1
     247: aload_0
     248: getfield      #5                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
     251: invokeinterface #24,  3           // InterfaceMethod org/apache/http/nio/protocol/EventListener.fatalIOException:(Ljava/io/IOException;Lorg/apache/http/nio/NHttpConnection;)V
     256: return
    Exception table:
       from    to  target type
           7    33    49   Class java/lang/InterruptedException
          36    46    49   Class java/lang/InterruptedException
           7    35    73   any
          36    59    73   any
          60    70    73   any
          73    76    73   any
         105   127   143   Class java/lang/InterruptedException
         130   140   143   Class java/lang/InterruptedException
         105   129   206   any
         130   203   206   any
         206   210   206   any
           0    35   216   Class java/io/IOException
          36    59   216   Class java/io/IOException
          60   129   216   Class java/io/IOException
         130   213   216   Class java/io/IOException
}
