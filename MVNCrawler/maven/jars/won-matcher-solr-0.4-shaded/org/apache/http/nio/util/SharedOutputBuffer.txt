Compiled from "SharedOutputBuffer.java"
public class org.apache.http.nio.util.SharedOutputBuffer extends org.apache.http.nio.util.ExpandableBuffer implements org.apache.http.nio.util.ContentOutputBuffer {
  private final java.util.concurrent.locks.ReentrantLock lock;

  private final java.util.concurrent.locks.Condition condition;

  private volatile org.apache.http.nio.IOControl ioctrl;

  private volatile boolean shutdown;

  private volatile boolean endOfStream;

  public org.apache.http.nio.util.SharedOutputBuffer(int, org.apache.http.nio.IOControl, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: invokespecial #1                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field shutdown:Z
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field endOfStream:Z
      16: aload_2
      17: ldc           #4                  // String I/O content control
      19: invokestatic  #5                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: aload_2
      25: putfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
      28: aload_0
      29: new           #7                  // class java/util/concurrent/locks/ReentrantLock
      32: dup
      33: invokespecial #8                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      36: putfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      39: aload_0
      40: aload_0
      41: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      44: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      47: putfield      #11                 // Field condition:Ljava/util/concurrent/locks/Condition;
      50: return

  public org.apache.http.nio.util.SharedOutputBuffer(int, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field shutdown:Z
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field endOfStream:Z
      16: aload_0
      17: new           #7                  // class java/util/concurrent/locks/ReentrantLock
      20: dup
      21: invokespecial #8                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      24: putfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      27: aload_0
      28: aload_0
      29: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      32: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      35: putfield      #11                 // Field condition:Ljava/util/concurrent/locks/Condition;
      38: return

  public org.apache.http.nio.util.SharedOutputBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #12                 // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       5: invokespecial #13                 // Method "<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       8: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      12: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      15: aload_0
      16: invokevirtual #15                 // Method clear:()V
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field endOfStream:Z
      24: aload_0
      25: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      28: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      31: goto          44
      34: astore_1
      35: aload_0
      36: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      39: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      42: aload_1
      43: athrow
      44: return
    Exception table:
       from    to  target type
          15    24    34   any
          34    35    34   any

  public boolean hasData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #17                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
      11: istore_1
      12: aload_0
      13: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int available();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #18                 // Method org/apache/http/nio/util/ExpandableBuffer.available:()I
      11: istore_1
      12: aload_0
      13: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #19                 // Method org/apache/http/nio/util/ExpandableBuffer.capacity:()I
      11: istore_1
      12: aload_0
      13: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int length();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #20                 // Method org/apache/http/nio/util/ExpandableBuffer.length:()I
      11: istore_1
      12: aload_0
      13: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int produceContent(org.apache.http.nio.ContentEncoder) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #21                 // Method produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)I
       6: ireturn

  public int produceContent(org.apache.http.nio.ContentEncoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field shutdown:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      13: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      16: aload_2
      17: ifnull        25
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
      25: aload_0
      26: invokevirtual #22                 // Method setOutputMode:()V
      29: iconst_0
      30: istore_3
      31: aload_0
      32: invokespecial #17                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
      35: ifeq          63
      38: aload_1
      39: aload_0
      40: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      43: invokeinterface #24,  2           // InterfaceMethod org/apache/http/nio/ContentEncoder.write:(Ljava/nio/ByteBuffer;)I
      48: istore_3
      49: aload_1
      50: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.isCompleted:()Z
      55: ifeq          63
      58: aload_0
      59: iconst_1
      60: putfield      #3                  // Field endOfStream:Z
      63: aload_0
      64: invokespecial #17                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
      67: ifne          115
      70: aload_0
      71: getfield      #3                  // Field endOfStream:Z
      74: ifeq          92
      77: aload_1
      78: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.isCompleted:()Z
      83: ifne          92
      86: aload_1
      87: invokeinterface #26,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.complete:()V
      92: aload_0
      93: getfield      #3                  // Field endOfStream:Z
      96: ifne          115
      99: aload_0
     100: getfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
     103: ifnull        115
     106: aload_0
     107: getfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
     110: invokeinterface #27,  1           // InterfaceMethod org/apache/http/nio/IOControl.suspendOutput:()V
     115: aload_0
     116: getfield      #11                 // Field condition:Ljava/util/concurrent/locks/Condition;
     119: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
     124: iload_3
     125: istore        4
     127: aload_0
     128: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     131: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     134: iload         4
     136: ireturn
     137: astore        5
     139: aload_0
     140: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     143: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     146: aload         5
     148: athrow
    Exception table:
       from    to  target type
          16   127   137   any
         137   139   137   any

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method shutdown:()V
       4: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #2                  // Field shutdown:Z
      13: aload_0
      14: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      17: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      20: aload_0
      21: getfield      #11                 // Field condition:Ljava/util/concurrent/locks/Condition;
      24: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      29: aload_0
      30: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      33: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      36: goto          49
      39: astore_1
      40: aload_0
      41: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      44: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      47: aload_1
      48: athrow
      49: return
    Exception table:
       from    to  target type
          20    29    39   any
          39    40    39   any

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: iload_2
       6: istore        4
       8: aload_0
       9: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      12: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      15: aload_0
      16: getfield      #2                  // Field shutdown:Z
      19: ifne          33
      22: aload_0
      23: getfield      #3                  // Field endOfStream:Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ldc           #30                 // String Buffer already closed for writing
      36: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      39: aload_0
      40: invokevirtual #32                 // Method setInputMode:()V
      43: iload_3
      44: istore        5
      46: iload         5
      48: ifle          113
      51: aload_0
      52: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      55: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      58: ifne          69
      61: aload_0
      62: invokespecial #34                 // Method flushContent:()V
      65: aload_0
      66: invokevirtual #32                 // Method setInputMode:()V
      69: iload         5
      71: aload_0
      72: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      75: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      78: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      81: istore        6
      83: aload_0
      84: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      87: aload_1
      88: iload         4
      90: iload         6
      92: invokevirtual #37                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      95: pop
      96: iload         5
      98: iload         6
     100: isub
     101: istore        5
     103: iload         4
     105: iload         6
     107: iadd
     108: istore        4
     110: goto          46
     113: aload_0
     114: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     117: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     120: goto          135
     123: astore        7
     125: aload_0
     126: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     129: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     132: aload         7
     134: athrow
     135: return
    Exception table:
       from    to  target type
          15   113   123   any
         123   125   123   any

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: iconst_0
       8: aload_1
       9: arraylength
      10: invokevirtual #38                 // Method write:([BII)V
      13: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #2                  // Field shutdown:Z
      11: ifne          25
      14: aload_0
      15: getfield      #3                  // Field endOfStream:Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #30                 // String Buffer already closed for writing
      28: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      31: aload_0
      32: invokevirtual #32                 // Method setInputMode:()V
      35: aload_0
      36: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      39: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      42: ifne          53
      45: aload_0
      46: invokespecial #34                 // Method flushContent:()V
      49: aload_0
      50: invokevirtual #32                 // Method setInputMode:()V
      53: aload_0
      54: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      57: iload_1
      58: i2b
      59: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      62: pop
      63: aload_0
      64: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      67: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      70: goto          83
      73: astore_2
      74: aload_0
      75: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      78: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      81: aload_2
      82: athrow
      83: return
    Exception table:
       from    to  target type
           7    63    73   any
          73    74    73   any

  public void flush() throws java.io.IOException;
    Code:
       0: return

  private void flushContent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #17                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
      11: ifeq          59
      14: aload_0
      15: getfield      #2                  // Field shutdown:Z
      18: ifeq          31
      21: new           #40                 // class java/io/InterruptedIOException
      24: dup
      25: ldc           #41                 // String Output operation aborted
      27: invokespecial #42                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
      35: ifnull        47
      38: aload_0
      39: getfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
      42: invokeinterface #43,  1           // InterfaceMethod org/apache/http/nio/IOControl.requestOutput:()V
      47: aload_0
      48: getfield      #11                 // Field condition:Ljava/util/concurrent/locks/Condition;
      51: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      56: goto          7
      59: goto          73
      62: astore_1
      63: new           #46                 // class java/io/IOException
      66: dup
      67: ldc           #47                 // String Interrupted while flushing the content buffer
      69: invokespecial #48                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      77: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      80: goto          93
      83: astore_2
      84: aload_0
      85: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      88: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      91: aload_2
      92: athrow
      93: return
    Exception table:
       from    to  target type
           7    59    62   Class java/lang/InterruptedException
           7    73    83   any
          83    84    83   any

  public void writeCompleted() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #3                  // Field endOfStream:Z
      11: ifeq          22
      14: aload_0
      15: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      18: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      21: return
      22: aload_0
      23: iconst_1
      24: putfield      #3                  // Field endOfStream:Z
      27: aload_0
      28: getfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
      31: ifnull        43
      34: aload_0
      35: getfield      #6                  // Field ioctrl:Lorg/apache/http/nio/IOControl;
      38: invokeinterface #43,  1           // InterfaceMethod org/apache/http/nio/IOControl.requestOutput:()V
      43: aload_0
      44: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      47: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      50: goto          63
      53: astore_1
      54: aload_0
      55: getfield      #9                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      58: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      61: aload_1
      62: athrow
      63: return
    Exception table:
       from    to  target type
           7    14    53   any
          22    43    53   any
          53    54    53   any
}
