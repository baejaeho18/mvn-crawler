Compiled from "HttpAsyncRequestExecutor.java"
class org.apache.http.nio.protocol.HttpAsyncRequestExecutor$State {
  private final java.util.Queue<org.apache.http.HttpRequest> requestQueue;

  private volatile org.apache.http.nio.protocol.MessageState requestState;

  private volatile org.apache.http.nio.protocol.MessageState responseState;

  private volatile org.apache.http.HttpRequest request;

  private volatile org.apache.http.HttpResponse response;

  private volatile boolean valid;

  private volatile int timeout;

  org.apache.http.nio.protocol.HttpAsyncRequestExecutor$State();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #4                  // Field requestQueue:Ljava/util/Queue;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field valid:Z
      20: aload_0
      21: getstatic     #6                  // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      24: putfield      #7                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
      27: aload_0
      28: getstatic     #6                  // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      31: putfield      #8                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
      34: return

  public org.apache.http.nio.protocol.MessageState getRequestState();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
       4: areturn

  public void setRequestState(org.apache.http.nio.protocol.MessageState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
       5: return

  public org.apache.http.nio.protocol.MessageState getResponseState();
    Code:
       0: aload_0
       1: getfield      #8                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
       4: areturn

  public void setResponseState(org.apache.http.nio.protocol.MessageState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
       5: return

  public org.apache.http.HttpRequest getRequest();
    Code:
       0: aload_0
       1: getfield      #9                  // Field request:Lorg/apache/http/HttpRequest;
       4: areturn

  public void setRequest(org.apache.http.HttpRequest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field request:Lorg/apache/http/HttpRequest;
       5: return

  public org.apache.http.HttpResponse getResponse();
    Code:
       0: aload_0
       1: getfield      #10                 // Field response:Lorg/apache/http/HttpResponse;
       4: areturn

  public void setResponse(org.apache.http.HttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field response:Lorg/apache/http/HttpResponse;
       5: return

  public java.util.Queue<org.apache.http.HttpRequest> getRequestQueue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestQueue:Ljava/util/Queue;
       4: areturn

  public int getTimeout();
    Code:
       0: aload_0
       1: getfield      #11                 // Field timeout:I
       4: ireturn

  public void setTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field timeout:I
       5: return

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #5                  // Field valid:Z
       4: ireturn

  public void invalidate();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field valid:Z
       5: return

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #14                 // String request state:
      11: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #7                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
      20: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #17                 // String ; request:
      27: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_0
      32: getfield      #9                  // Field request:Lorg/apache/http/HttpRequest;
      35: ifnull        52
      38: aload_1
      39: aload_0
      40: getfield      #9                  // Field request:Lorg/apache/http/HttpRequest;
      43: invokeinterface #18,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      48: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: ldc           #19                 // String ; response state:
      55: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: pop
      59: aload_1
      60: aload_0
      61: getfield      #8                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
      64: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: pop
      68: aload_1
      69: ldc           #20                 // String ; response:
      71: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: aload_0
      76: getfield      #10                 // Field response:Lorg/apache/http/HttpResponse;
      79: ifnull        96
      82: aload_1
      83: aload_0
      84: getfield      #10                 // Field response:Lorg/apache/http/HttpResponse;
      87: invokeinterface #21,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      92: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: pop
      96: aload_1
      97: ldc           #22                 // String ; valid:
      99: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: pop
     103: aload_1
     104: aload_0
     105: getfield      #5                  // Field valid:Z
     108: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     111: pop
     112: aload_1
     113: ldc           #24                 // String ;
     115: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: pop
     119: aload_1
     120: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: areturn
}
