Compiled from "HttpAsyncRequestExecutor.java"
public class org.apache.http.nio.protocol.HttpAsyncRequestExecutor implements org.apache.http.nio.NHttpClientEventHandler {
  public static final int DEFAULT_WAIT_FOR_CONTINUE;

  public static final java.lang.String HTTP_HANDLER;

  private final int waitForContinue;

  private final org.apache.http.ExceptionLogger exceptionLogger;

  static final java.lang.String HTTP_EXCHANGE_STATE;

  public org.apache.http.nio.protocol.HttpAsyncRequestExecutor(int, org.apache.http.ExceptionLogger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: ldc           #2                  // String Wait for continue time
       8: invokestatic  #3                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      11: putfield      #4                  // Field waitForContinue:I
      14: aload_0
      15: aload_2
      16: ifnull        23
      19: aload_2
      20: goto          26
      23: getstatic     #5                  // Field org/apache/http/ExceptionLogger.NO_OP:Lorg/apache/http/ExceptionLogger;
      26: putfield      #6                  // Field exceptionLogger:Lorg/apache/http/ExceptionLogger;
      29: return

  public org.apache.http.nio.protocol.HttpAsyncRequestExecutor(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokespecial #7                  // Method "<init>":(ILorg/apache/http/ExceptionLogger;)V
       6: return

  public org.apache.http.nio.protocol.HttpAsyncRequestExecutor();
    Code:
       0: aload_0
       1: sipush        3000
       4: aconst_null
       5: invokespecial #7                  // Method "<init>":(ILorg/apache/http/ExceptionLogger;)V
       8: return

  public void connected(org.apache.http.nio.NHttpClientConnection, java.lang.Object) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: new           #8                  // class org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State
       3: dup
       4: invokespecial #9                  // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State."<init>":()V
       7: astore_3
       8: aload_1
       9: invokeinterface #10,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
      14: astore        4
      16: aload         4
      18: ldc           #11                 // String http.nio.http-exchange-state
      20: aload_3
      21: invokeinterface #12,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      26: aload_0
      27: aload_1
      28: invokevirtual #13                 // Method requestReady:(Lorg/apache/http/nio/NHttpClientConnection;)V
      31: return

  public void closed(org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       4: astore_2
       5: aload_1
       6: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
       9: astore_3
      10: aload_2
      11: ifnull        53
      14: aload_2
      15: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      18: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      21: if_acmpne     34
      24: aload_2
      25: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      28: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      31: if_acmpeq     53
      34: aload_3
      35: ifnull        53
      38: aload_3
      39: new           #19                 // class org/apache/http/ConnectionClosedException
      42: dup
      43: ldc           #20                 // String Connection closed unexpectedly
      45: invokespecial #21                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
      48: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      53: aload_2
      54: ifnull        70
      57: aload_3
      58: ifnull        75
      61: aload_3
      62: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.isDone:()Z
      67: ifeq          75
      70: aload_0
      71: aload_3
      72: invokespecial #24                 // Method closeHandler:(Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;)V
      75: return

  public void exception(org.apache.http.nio.NHttpClientConnection, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method shutdownConnection:(Lorg/apache/http/nio/NHttpConnection;)V
       5: aload_1
       6: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
       9: astore_3
      10: aload_3
      11: ifnull        24
      14: aload_3
      15: aload_2
      16: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      21: goto          29
      24: aload_0
      25: aload_2
      26: invokevirtual #26                 // Method log:(Ljava/lang/Exception;)V
      29: return

  public void requestReady(org.apache.http.nio.NHttpClientConnection) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       4: astore_2
       5: aload_2
       6: ldc           #27                 // String Connection state
       8: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_2
      12: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      15: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      18: if_acmpeq     31
      21: aload_2
      22: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      25: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
      28: if_acmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #30                 // String Unexpected request state %s
      38: aload_2
      39: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      42: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      45: aload_2
      46: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      49: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
      52: if_acmpne     62
      55: aload_1
      56: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.suspendOutput:()V
      61: return
      62: aload_1
      63: invokeinterface #10,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
      68: astore_3
      69: aload_3
      70: dup
      71: astore        5
      73: monitorenter
      74: aload_1
      75: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      78: astore        4
      80: aload         4
      82: ifnull        95
      85: aload         4
      87: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.isDone:()Z
      92: ifeq          105
      95: aload_1
      96: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.suspendOutput:()V
     101: aload         5
     103: monitorexit
     104: return
     105: aload         5
     107: monitorexit
     108: goto          119
     111: astore        6
     113: aload         5
     115: monitorexit
     116: aload         6
     118: athrow
     119: aload         4
     121: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     124: ldc_w         #34                 // class org/apache/http/nio/protocol/Pipelined
     127: invokevirtual #35                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     130: ifnull        137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: istore        5
     140: aload         4
     142: invokeinterface #36,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.generateRequest:()Lorg/apache/http/HttpRequest;
     147: astore        6
     149: aload         6
     151: ifnonnull     161
     154: aload_1
     155: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.suspendOutput:()V
     160: return
     161: aload         6
     163: invokeinterface #37,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
     168: invokeinterface #38,  1           // InterfaceMethod org/apache/http/RequestLine.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
     173: astore        7
     175: iload         5
     177: ifeq          219
     180: aload         7
     182: getstatic     #39                 // Field org/apache/http/HttpVersion.HTTP_1_0:Lorg/apache/http/HttpVersion;
     185: invokevirtual #40                 // Method org/apache/http/ProtocolVersion.lessEquals:(Lorg/apache/http/ProtocolVersion;)Z
     188: ifeq          219
     191: new           #41                 // class org/apache/http/ProtocolException
     194: dup
     195: new           #42                 // class java/lang/StringBuilder
     198: dup
     199: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     202: aload         7
     204: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: ldc           #45                 // String  cannot be used with request pipelining
     209: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokespecial #48                 // Method org/apache/http/ProtocolException."<init>":(Ljava/lang/String;)V
     218: athrow
     219: aload_2
     220: aload         6
     222: invokevirtual #49                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequest:(Lorg/apache/http/HttpRequest;)V
     225: iload         5
     227: ifeq          242
     230: aload_2
     231: invokevirtual #50                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestQueue:()Ljava/util/Queue;
     234: aload         6
     236: invokeinterface #51,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     241: pop
     242: aload         6
     244: instanceof    #52                 // class org/apache/http/HttpEntityEnclosingRequest
     247: ifeq          384
     250: aload         6
     252: checkcast     #52                 // class org/apache/http/HttpEntityEnclosingRequest
     255: invokeinterface #53,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.expectContinue:()Z
     260: istore        8
     262: iload         8
     264: ifeq          282
     267: iload         5
     269: ifeq          282
     272: new           #41                 // class org/apache/http/ProtocolException
     275: dup
     276: ldc           #54                 // String Expect-continue handshake cannot be used with request pipelining
     278: invokespecial #48                 // Method org/apache/http/ProtocolException."<init>":(Ljava/lang/String;)V
     281: athrow
     282: aload_1
     283: aload         6
     285: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.submitRequest:(Lorg/apache/http/HttpRequest;)V
     290: iload         8
     292: ifeq          329
     295: aload_1
     296: invokeinterface #56,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getSocketTimeout:()I
     301: istore        9
     303: aload_2
     304: iload         9
     306: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setTimeout:(I)V
     309: aload_1
     310: aload_0
     311: getfield      #4                  // Field waitForContinue:I
     314: invokeinterface #58,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     319: aload_2
     320: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
     323: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     326: goto          381
     329: aload         6
     331: checkcast     #52                 // class org/apache/http/HttpEntityEnclosingRequest
     334: invokeinterface #61,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.getEntity:()Lorg/apache/http/HttpEntity;
     339: astore        9
     341: aload         9
     343: ifnull        356
     346: aload_2
     347: getstatic     #62                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     350: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     353: goto          381
     356: aload         4
     358: invokeinterface #63,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.requestCompleted:()V
     363: aload_2
     364: iload         5
     366: ifeq          375
     369: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
     372: goto          378
     375: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     378: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     381: goto          417
     384: aload_1
     385: aload         6
     387: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.submitRequest:(Lorg/apache/http/HttpRequest;)V
     392: aload         4
     394: invokeinterface #63,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.requestCompleted:()V
     399: aload_2
     400: iload         5
     402: ifeq          411
     405: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
     408: goto          414
     411: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     414: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     417: return
    Exception table:
       from    to  target type
          74   104   111   any
         105   108   111   any
         111   116   111   any

  public void outputReady(org.apache.http.nio.NHttpClientConnection, org.apache.http.nio.ContentEncoder) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       4: astore_3
       5: aload_3
       6: ldc           #27                 // String Connection state
       8: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_3
      12: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      15: getstatic     #62                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
      18: if_acmpeq     31
      21: aload_3
      22: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      25: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
      28: if_acmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #30                 // String Unexpected request state %s
      38: aload_3
      39: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      42: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      45: aload_1
      46: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      49: astore        4
      51: aload         4
      53: ldc           #64                 // String Client exchange handler
      55: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      58: aload_3
      59: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      62: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
      65: if_acmpne     75
      68: aload_1
      69: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.suspendOutput:()V
      74: return
      75: aload         4
      77: aload_2
      78: aload_1
      79: invokeinterface #65,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
      84: aload_2
      85: invokeinterface #66,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.isCompleted:()Z
      90: ifeq          139
      93: aload         4
      95: invokeinterface #63,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.requestCompleted:()V
     100: aload         4
     102: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     105: ldc_w         #34                 // class org/apache/http/nio/protocol/Pipelined
     108: invokevirtual #35                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     111: ifnull        118
     114: iconst_1
     115: goto          119
     118: iconst_0
     119: istore        5
     121: aload_3
     122: iload         5
     124: ifeq          133
     127: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
     130: goto          136
     133: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     136: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     139: return

  public void responseReceived(org.apache.http.nio.NHttpClientConnection) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       4: astore_2
       5: aload_2
       6: ldc           #27                 // String Connection state
       8: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_2
      12: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      15: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      18: if_acmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #30                 // String Unexpected request state %s
      28: aload_2
      29: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      32: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      35: aload_1
      36: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      39: astore_3
      40: aload_3
      41: ldc           #64                 // String Client exchange handler
      43: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload_3
      47: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: ldc_w         #34                 // class org/apache/http/nio/protocol/Pipelined
      53: invokevirtual #35                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      56: ifnull        63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore        4
      66: iload         4
      68: ifeq          95
      71: aload_2
      72: invokevirtual #50                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestQueue:()Ljava/util/Queue;
      75: invokeinterface #67,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      80: checkcast     #68                 // class org/apache/http/HttpRequest
      83: astore        5
      85: aload         5
      87: ldc           #69                 // String HTTP request
      89: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      92: goto          116
      95: aload_2
      96: invokevirtual #70                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequest:()Lorg/apache/http/HttpRequest;
      99: astore        5
     101: aload         5
     103: ifnonnull     116
     106: new           #71                 // class org/apache/http/HttpException
     109: dup
     110: ldc           #72                 // String Out of sequence response
     112: invokespecial #73                 // Method org/apache/http/HttpException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload_1
     117: invokeinterface #74,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getHttpResponse:()Lorg/apache/http/HttpResponse;
     122: astore        6
     124: aload         6
     126: invokeinterface #75,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
     131: invokeinterface #76,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
     136: istore        7
     138: iload         7
     140: sipush        200
     143: if_icmpge     224
     146: iload         7
     148: bipush        100
     150: if_icmpeq     186
     153: new           #41                 // class org/apache/http/ProtocolException
     156: dup
     157: new           #42                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #77                 // String Unexpected response:
     166: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload         6
     171: invokeinterface #75,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
     176: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     179: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokespecial #48                 // Method org/apache/http/ProtocolException."<init>":(Ljava/lang/String;)V
     185: athrow
     186: aload_2
     187: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
     190: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
     193: if_acmpne     223
     196: aload_2
     197: invokevirtual #78                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getTimeout:()I
     200: istore        8
     202: aload_1
     203: iload         8
     205: invokeinterface #58,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     210: aload_1
     211: invokeinterface #79,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
     216: aload_2
     217: getstatic     #62                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     220: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     223: return
     224: aload_2
     225: aload         6
     227: invokevirtual #80                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponse:(Lorg/apache/http/HttpResponse;)V
     230: aload_2
     231: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
     234: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
     237: if_acmpne     270
     240: aload_2
     241: invokevirtual #78                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getTimeout:()I
     244: istore        8
     246: aload_1
     247: iload         8
     249: invokeinterface #58,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     254: aload_1
     255: invokeinterface #81,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.resetOutput:()V
     260: aload_2
     261: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     264: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     267: goto          303
     270: aload_2
     271: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
     274: getstatic     #62                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     277: if_acmpne     303
     280: aload_1
     281: invokeinterface #81,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.resetOutput:()V
     286: aload_1
     287: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.suspendOutput:()V
     292: aload_2
     293: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     296: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     299: aload_2
     300: invokevirtual #82                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.invalidate:()V
     303: aload_0
     304: aload         5
     306: aload         6
     308: invokespecial #83                 // Method canResponseHaveBody:(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;)Z
     311: ifeq          332
     314: aload_3
     315: aload         6
     317: invokeinterface #84,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.responseReceived:(Lorg/apache/http/HttpResponse;)V
     322: aload_2
     323: getstatic     #62                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     326: invokevirtual #85                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponseState:(Lorg/apache/http/nio/protocol/MessageState;)V
     329: goto          361
     332: aload         6
     334: aconst_null
     335: invokeinterface #86,  2           // InterfaceMethod org/apache/http/HttpResponse.setEntity:(Lorg/apache/http/HttpEntity;)V
     340: aload_3
     341: aload         6
     343: invokeinterface #84,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.responseReceived:(Lorg/apache/http/HttpResponse;)V
     348: aload_1
     349: invokeinterface #87,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.resetInput:()V
     354: aload_0
     355: aload_1
     356: aload_2
     357: aload_3
     358: invokespecial #88                 // Method processResponse:(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;)V
     361: return

  public void inputReady(org.apache.http.nio.NHttpClientConnection, org.apache.http.nio.ContentDecoder) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       4: astore_3
       5: aload_3
       6: ldc           #27                 // String Connection state
       8: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_3
      12: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      15: getstatic     #62                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
      18: if_acmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #30                 // String Unexpected request state %s
      28: aload_3
      29: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      32: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      35: aload_1
      36: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      39: astore        4
      41: aload         4
      43: ldc           #64                 // String Client exchange handler
      45: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      48: aload         4
      50: aload_2
      51: aload_1
      52: invokeinterface #89,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.consumeContent:(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
      57: aload_2
      58: invokeinterface #90,  1           // InterfaceMethod org/apache/http/nio/ContentDecoder.isCompleted:()Z
      63: ifeq          74
      66: aload_0
      67: aload_1
      68: aload_3
      69: aload         4
      71: invokespecial #88                 // Method processResponse:(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;)V
      74: return

  public void endOfInput(org.apache.http.nio.NHttpClientConnection) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       4: astore_2
       5: aload_1
       6: invokeinterface #10,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
      11: astore_3
      12: aload_3
      13: dup
      14: astore        4
      16: monitorenter
      17: aload_2
      18: ifnull        82
      21: aload_2
      22: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      25: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      28: invokevirtual #91                 // Method org/apache/http/nio/protocol/MessageState.compareTo:(Ljava/lang/Enum;)I
      31: ifeq          38
      34: aload_2
      35: invokevirtual #82                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.invalidate:()V
      38: aload_1
      39: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      42: astore        5
      44: aload         5
      46: ifnull        82
      49: aload_2
      50: invokevirtual #92                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.isValid:()Z
      53: ifeq          66
      56: aload         5
      58: invokeinterface #93,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.inputTerminated:()V
      63: goto          82
      66: aload         5
      68: new           #19                 // class org/apache/http/ConnectionClosedException
      71: dup
      72: ldc           #94                 // String Connection closed
      74: invokespecial #21                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
      77: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      82: aload_1
      83: invokeinterface #56,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getSocketTimeout:()I
      88: ifgt          100
      91: aload_1
      92: sipush        1000
      95: invokeinterface #58,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     100: aload_1
     101: invokeinterface #95,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
     106: aload         4
     108: monitorexit
     109: goto          120
     112: astore        6
     114: aload         4
     116: monitorexit
     117: aload         6
     119: athrow
     120: return
    Exception table:
       from    to  target type
          17   109   112   any
         112   117   112   any

  public void timeout(org.apache.http.nio.NHttpClientConnection) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       4: astore_2
       5: aload_2
       6: ifnull        82
       9: aload_2
      10: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      13: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
      16: if_acmpne     50
      19: aload_2
      20: invokevirtual #78                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getTimeout:()I
      23: istore_3
      24: aload_1
      25: iload_3
      26: invokeinterface #58,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
      31: aload_1
      32: invokeinterface #79,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
      37: aload_2
      38: getstatic     #62                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
      41: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
      44: aload_2
      45: iconst_0
      46: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setTimeout:(I)V
      49: return
      50: aload_2
      51: invokevirtual #82                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.invalidate:()V
      54: aload_1
      55: invokestatic  #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      58: astore_3
      59: aload_3
      60: ifnull        82
      63: aload_3
      64: new           #96                 // class java/net/SocketTimeoutException
      67: dup
      68: invokespecial #97                 // Method java/net/SocketTimeoutException."<init>":()V
      71: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      76: aload_3
      77: invokeinterface #98,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.close:()V
      82: aload_1
      83: invokeinterface #99,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getStatus:()I
      88: ifne          119
      91: aload_1
      92: invokeinterface #95,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      97: aload_1
      98: invokeinterface #99,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getStatus:()I
     103: iconst_1
     104: if_icmpne     125
     107: aload_1
     108: sipush        250
     111: invokeinterface #58,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     116: goto          125
     119: aload_1
     120: invokeinterface #100,  1          // InterfaceMethod org/apache/http/nio/NHttpClientConnection.shutdown:()V
     125: return

  protected void log(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #6                  // Field exceptionLogger:Lorg/apache/http/ExceptionLogger;
       4: aload_1
       5: invokeinterface #101,  2          // InterfaceMethod org/apache/http/ExceptionLogger.log:(Ljava/lang/Exception;)V
      10: return

  private static org.apache.http.nio.protocol.HttpAsyncRequestExecutor$State getState(org.apache.http.nio.NHttpConnection);
    Code:
       0: aload_0
       1: invokeinterface #102,  1          // InterfaceMethod org/apache/http/nio/NHttpConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
       6: ldc           #11                 // String http.nio.http-exchange-state
       8: invokeinterface #103,  2          // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #8                  // class org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State
      16: areturn

  private static org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler getHandler(org.apache.http.nio.NHttpConnection);
    Code:
       0: aload_0
       1: invokeinterface #102,  1          // InterfaceMethod org/apache/http/nio/NHttpConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
       6: ldc           #104                // String http.nio.exchange-handler
       8: invokeinterface #103,  2          // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #105                // class org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler
      16: areturn

  private void shutdownConnection(org.apache.http.nio.NHttpConnection);
    Code:
       0: aload_1
       1: invokeinterface #106,  1          // InterfaceMethod org/apache/http/nio/NHttpConnection.shutdown:()V
       6: goto          15
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #26                 // Method log:(Ljava/lang/Exception;)V
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  private void closeHandler(org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: invokeinterface #98,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.close:()V
      10: goto          19
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #26                 // Method log:(Ljava/lang/Exception;)V
      19: return
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  private void processResponse(org.apache.http.nio.NHttpClientConnection, org.apache.http.nio.protocol.HttpAsyncRequestExecutor$State, org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_2
       1: invokevirtual #92                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.isValid:()Z
       4: ifne          13
       7: aload_1
       8: invokeinterface #95,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      13: aload_3
      14: invokeinterface #108,  1          // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.responseCompleted:()V
      19: aload_3
      20: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: ldc_w         #34                 // class org/apache/http/nio/protocol/Pipelined
      26: invokevirtual #35                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      29: ifnull        36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: istore        4
      39: iload         4
      41: ifne          56
      44: aload_2
      45: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      48: invokevirtual #60                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
      51: aload_2
      52: aconst_null
      53: invokevirtual #49                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequest:(Lorg/apache/http/HttpRequest;)V
      56: aload_2
      57: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      60: invokevirtual #85                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponseState:(Lorg/apache/http/nio/protocol/MessageState;)V
      63: aload_2
      64: aconst_null
      65: invokevirtual #80                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponse:(Lorg/apache/http/HttpResponse;)V
      68: aload_3
      69: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.isDone:()Z
      74: ifne          92
      77: aload_1
      78: invokeinterface #109,  1          // InterfaceMethod org/apache/http/nio/NHttpClientConnection.isOpen:()Z
      83: ifeq          92
      86: aload_1
      87: invokeinterface #79,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
      92: return

  private boolean canResponseHaveBody(org.apache.http.HttpRequest, org.apache.http.HttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #37,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
       6: invokeinterface #110,  1          // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      11: astore_3
      12: aload_2
      13: invokeinterface #75,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      18: invokeinterface #76,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      23: istore        4
      25: aload_3
      26: ldc           #111                // String HEAD
      28: invokevirtual #112                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      31: ifeq          36
      34: iconst_0
      35: ireturn
      36: aload_3
      37: ldc           #113                // String CONNECT
      39: invokevirtual #112                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      42: ifeq          55
      45: iload         4
      47: sipush        300
      50: if_icmpge     55
      53: iconst_0
      54: ireturn
      55: iload         4
      57: sipush        200
      60: if_icmplt     91
      63: iload         4
      65: sipush        204
      68: if_icmpeq     91
      71: iload         4
      73: sipush        304
      76: if_icmpeq     91
      79: iload         4
      81: sipush        205
      84: if_icmpeq     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ireturn
}
