Compiled from "LeaseRequest.java"
class org.apache.http.nio.pool.LeaseRequest<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> {
  private final T route;

  private final java.lang.Object state;

  private final long connectTimeout;

  private final long deadline;

  private final org.apache.http.concurrent.BasicFuture<E> future;

  private final java.util.concurrent.atomic.AtomicBoolean completed;

  private volatile E result;

  private volatile java.lang.Exception ex;

  public org.apache.http.nio.pool.LeaseRequest(T, java.lang.Object, long, long, org.apache.http.concurrent.BasicFuture<E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field route:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field state:Ljava/lang/Object;
      14: aload_0
      15: lload_3
      16: putfield      #4                  // Field connectTimeout:J
      19: aload_0
      20: lload         5
      22: lconst_0
      23: lcmp
      24: ifle          36
      27: invokestatic  #5                  // Method java/lang/System.currentTimeMillis:()J
      30: lload         5
      32: ladd
      33: goto          39
      36: ldc2_w        #6                  // long 9223372036854775807l
      39: putfield      #8                  // Field deadline:J
      42: aload_0
      43: aload         7
      45: putfield      #9                  // Field future:Lorg/apache/http/concurrent/BasicFuture;
      48: aload_0
      49: new           #10                 // class java/util/concurrent/atomic/AtomicBoolean
      52: dup
      53: iconst_0
      54: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      57: putfield      #12                 // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
      60: return

  public T getRoute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field route:Ljava/lang/Object;
       4: areturn

  public java.lang.Object getState();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Ljava/lang/Object;
       4: areturn

  public long getConnectTimeout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectTimeout:J
       4: lreturn

  public long getDeadline();
    Code:
       0: aload_0
       1: getfield      #8                  // Field deadline:J
       4: lreturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #12                 // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #12                 // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          17
      12: aload_0
      13: aload_1
      14: putfield      #15                 // Field ex:Ljava/lang/Exception;
      17: return

  public void completed(E);
    Code:
       0: aload_0
       1: getfield      #12                 // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          17
      12: aload_0
      13: aload_1
      14: putfield      #16                 // Field result:Lorg/apache/http/pool/PoolEntry;
      17: return

  public org.apache.http.concurrent.BasicFuture<E> getFuture();
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Lorg/apache/http/concurrent/BasicFuture;
       4: areturn

  public E getResult();
    Code:
       0: aload_0
       1: getfield      #16                 // Field result:Lorg/apache/http/pool/PoolEntry;
       4: areturn

  public java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ex:Ljava/lang/Exception;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #19                 // String [
      11: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field route:Ljava/lang/Object;
      20: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #22                 // String ][
      27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #3                  // Field state:Ljava/lang/Object;
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: ldc           #23                 // String ]
      43: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
}
