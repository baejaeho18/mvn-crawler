Compiled from "InternalHttpRequest.java"
class org.apache.http.client.fluent.InternalHttpRequest extends org.apache.http.message.AbstractHttpMessage implements org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.HttpExecutionAware,org.apache.http.client.methods.Configurable {
  private final java.lang.String method;

  private org.apache.http.ProtocolVersion version;

  private java.net.URI uri;

  private org.apache.http.client.config.RequestConfig config;

  private final java.util.concurrent.atomic.AtomicBoolean aborted;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.http.concurrent.Cancellable> cancellableRef;

  org.apache.http.client.fluent.InternalHttpRequest(java.lang.String, java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/http/message/AbstractHttpMessage."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Method
       7: invokestatic  #3                  // Method org/apache/http/util/Args.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/CharSequence;
      10: pop
      11: aload_2
      12: ldc           #4                  // String Request URI
      14: invokestatic  #5                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: pop
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field method:Ljava/lang/String;
      23: aload_0
      24: aload_2
      25: putfield      #7                  // Field uri:Ljava/net/URI;
      28: aload_0
      29: new           #8                  // class java/util/concurrent/atomic/AtomicBoolean
      32: dup
      33: iconst_0
      34: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      37: putfield      #10                 // Field aborted:Ljava/util/concurrent/atomic/AtomicBoolean;
      40: aload_0
      41: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      44: dup
      45: aconst_null
      46: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      49: putfield      #13                 // Field cancellableRef:Ljava/util/concurrent/atomic/AtomicReference;
      52: return

  public void setProtocolVersion(org.apache.http.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field version:Lorg/apache/http/ProtocolVersion;
       5: return

  public org.apache.http.ProtocolVersion getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #14                 // Field version:Lorg/apache/http/ProtocolVersion;
       4: ifnull        14
       7: aload_0
       8: getfield      #14                 // Field version:Lorg/apache/http/ProtocolVersion;
      11: goto          17
      14: getstatic     #15                 // Field org/apache/http/HttpVersion.HTTP_1_1:Lorg/apache/http/HttpVersion;
      17: areturn

  public java.lang.String getMethod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field method:Ljava/lang/String;
       4: areturn

  public java.net.URI getURI();
    Code:
       0: aload_0
       1: getfield      #7                  // Field uri:Ljava/net/URI;
       4: areturn

  public void abort() throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field aborted:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          35
      12: aload_0
      13: getfield      #13                 // Field cancellableRef:Ljava/util/concurrent/atomic/AtomicReference;
      16: aconst_null
      17: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #18                 // class org/apache/http/concurrent/Cancellable
      23: astore_1
      24: aload_1
      25: ifnull        35
      28: aload_1
      29: invokeinterface #19,  1           // InterfaceMethod org/apache/http/concurrent/Cancellable.cancel:()Z
      34: pop
      35: return

  public boolean isAborted();
    Code:
       0: aload_0
       1: getfield      #10                 // Field aborted:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setCancellable(org.apache.http.concurrent.Cancellable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field aborted:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: aload_0
      11: getfield      #13                 // Field cancellableRef:Ljava/util/concurrent/atomic/AtomicReference;
      14: aload_1
      15: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      18: return

  public org.apache.http.RequestLine getRequestLine();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
       4: astore_1
       5: aload_0
       6: invokevirtual #23                 // Method getURI:()Ljava/net/URI;
       9: astore_2
      10: aconst_null
      11: astore_3
      12: aload_2
      13: ifnull        21
      16: aload_2
      17: invokevirtual #24                 // Method java/net/URI.toASCIIString:()Ljava/lang/String;
      20: astore_3
      21: aload_3
      22: ifnull        32
      25: aload_3
      26: invokevirtual #25                 // Method java/lang/String.isEmpty:()Z
      29: ifeq          35
      32: ldc           #26                 // String /
      34: astore_3
      35: new           #27                 // class org/apache/http/message/BasicRequestLine
      38: dup
      39: aload_0
      40: invokevirtual #28                 // Method getMethod:()Ljava/lang/String;
      43: aload_3
      44: aload_1
      45: invokespecial #29                 // Method org/apache/http/message/BasicRequestLine."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V
      48: areturn

  public org.apache.http.client.config.RequestConfig getConfig();
    Code:
       0: aload_0
       1: getfield      #30                 // Field config:Lorg/apache/http/client/config/RequestConfig;
       4: areturn

  public void setConfig(org.apache.http.client.config.RequestConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field config:Lorg/apache/http/client/config/RequestConfig;
       5: return

  public void setURI(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field uri:Ljava/net/URI;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #28                 // Method getMethod:()Ljava/lang/String;
      11: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #34                 // String
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #23                 // Method getURI:()Ljava/net/URI;
      23: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #34                 // String
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #22                 // Method getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
      35: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn
}
