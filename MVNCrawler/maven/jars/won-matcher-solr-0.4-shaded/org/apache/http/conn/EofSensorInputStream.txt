Compiled from "EofSensorInputStream.java"
public class org.apache.http.conn.EofSensorInputStream extends java.io.InputStream implements org.apache.http.conn.ConnectionReleaseTrigger {
  protected java.io.InputStream wrappedStream;

  private boolean selfClosed;

  private final org.apache.http.conn.EofSensorWatcher eofWatcher;

  public org.apache.http.conn.EofSensorInputStream(java.io.InputStream, org.apache.http.conn.EofSensorWatcher);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Wrapped stream
       7: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field selfClosed:Z
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field eofWatcher:Lorg/apache/http/conn/EofSensorWatcher;
      26: return

  boolean isSelfClosed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field selfClosed:Z
       4: ireturn

  java.io.InputStream getWrappedStream();
    Code:
       0: aload_0
       1: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
       4: areturn

  protected boolean isReadAllowed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field selfClosed:Z
       4: ifeq          17
       7: new           #7                  // class java/io/IOException
      10: dup
      11: ldc           #8                  // String Attempted read on closed stream.
      13: invokespecial #9                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      21: ifnull        28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: iconst_m1
       1: istore_1
       2: aload_0
       3: invokevirtual #10                 // Method isReadAllowed:()Z
       6: ifeq          32
       9: aload_0
      10: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      13: invokevirtual #11                 // Method java/io/InputStream.read:()I
      16: istore_1
      17: aload_0
      18: iload_1
      19: invokevirtual #12                 // Method checkEOF:(I)V
      22: goto          32
      25: astore_2
      26: aload_0
      27: invokevirtual #13                 // Method checkAbort:()V
      30: aload_2
      31: athrow
      32: iload_1
      33: ireturn
    Exception table:
       from    to  target type
           9    22    25   Class java/io/IOException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: istore        4
       3: aload_0
       4: invokevirtual #10                 // Method isReadAllowed:()Z
       7: ifeq          40
      10: aload_0
      11: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokevirtual #14                 // Method java/io/InputStream.read:([BII)I
      20: istore        4
      22: aload_0
      23: iload         4
      25: invokevirtual #12                 // Method checkEOF:(I)V
      28: goto          40
      31: astore        5
      33: aload_0
      34: invokevirtual #13                 // Method checkAbort:()V
      37: aload         5
      39: athrow
      40: iload         4
      42: ireturn
    Exception table:
       from    to  target type
          10    28    31   Class java/io/IOException

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #15                 // Method read:([BII)I
       8: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #10                 // Method isReadAllowed:()Z
       6: ifeq          27
       9: aload_0
      10: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      13: invokevirtual #16                 // Method java/io/InputStream.available:()I
      16: istore_1
      17: goto          27
      20: astore_2
      21: aload_0
      22: invokevirtual #13                 // Method checkAbort:()V
      25: aload_2
      26: athrow
      27: iload_1
      28: ireturn
    Exception table:
       from    to  target type
           9    17    20   Class java/io/IOException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field selfClosed:Z
       5: aload_0
       6: invokevirtual #17                 // Method checkClose:()V
       9: return

  protected void checkEOF(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
       4: ifnull        61
       7: iload_1
       8: ifge          61
      11: iconst_1
      12: istore_2
      13: aload_0
      14: getfield      #6                  // Field eofWatcher:Lorg/apache/http/conn/EofSensorWatcher;
      17: ifnull        34
      20: aload_0
      21: getfield      #6                  // Field eofWatcher:Lorg/apache/http/conn/EofSensorWatcher;
      24: aload_0
      25: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      28: invokeinterface #18,  2           // InterfaceMethod org/apache/http/conn/EofSensorWatcher.eofDetected:(Ljava/io/InputStream;)Z
      33: istore_2
      34: iload_2
      35: ifeq          45
      38: aload_0
      39: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      42: invokevirtual #19                 // Method java/io/InputStream.close:()V
      45: aload_0
      46: aconst_null
      47: putfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      50: goto          61
      53: astore_3
      54: aload_0
      55: aconst_null
      56: putfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      59: aload_3
      60: athrow
      61: return
    Exception table:
       from    to  target type
          11    45    53   any
          53    54    53   any

  protected void checkClose() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
       4: ifnull        57
       7: iconst_1
       8: istore_1
       9: aload_0
      10: getfield      #6                  // Field eofWatcher:Lorg/apache/http/conn/EofSensorWatcher;
      13: ifnull        30
      16: aload_0
      17: getfield      #6                  // Field eofWatcher:Lorg/apache/http/conn/EofSensorWatcher;
      20: aload_0
      21: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      24: invokeinterface #20,  2           // InterfaceMethod org/apache/http/conn/EofSensorWatcher.streamClosed:(Ljava/io/InputStream;)Z
      29: istore_1
      30: iload_1
      31: ifeq          41
      34: aload_0
      35: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      38: invokevirtual #19                 // Method java/io/InputStream.close:()V
      41: aload_0
      42: aconst_null
      43: putfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      46: goto          57
      49: astore_2
      50: aload_0
      51: aconst_null
      52: putfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      55: aload_2
      56: athrow
      57: return
    Exception table:
       from    to  target type
           7    41    49   any
          49    50    49   any

  protected void checkAbort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
       4: ifnull        57
       7: iconst_1
       8: istore_1
       9: aload_0
      10: getfield      #6                  // Field eofWatcher:Lorg/apache/http/conn/EofSensorWatcher;
      13: ifnull        30
      16: aload_0
      17: getfield      #6                  // Field eofWatcher:Lorg/apache/http/conn/EofSensorWatcher;
      20: aload_0
      21: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      24: invokeinterface #21,  2           // InterfaceMethod org/apache/http/conn/EofSensorWatcher.streamAbort:(Ljava/io/InputStream;)Z
      29: istore_1
      30: iload_1
      31: ifeq          41
      34: aload_0
      35: getfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      38: invokevirtual #19                 // Method java/io/InputStream.close:()V
      41: aload_0
      42: aconst_null
      43: putfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      46: goto          57
      49: astore_2
      50: aload_0
      51: aconst_null
      52: putfield      #4                  // Field wrappedStream:Ljava/io/InputStream;
      55: aload_2
      56: athrow
      57: return
    Exception table:
       from    to  target type
           7    41    49   any
          49    50    49   any

  public void releaseConnection() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method close:()V
       4: return

  public void abortConnection() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field selfClosed:Z
       5: aload_0
       6: invokevirtual #13                 // Method checkAbort:()V
       9: return
}
