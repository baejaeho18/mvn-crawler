Compiled from "SyncRequestProcessor.java"
public class org.apache.zookeeper.server.SyncRequestProcessor extends java.lang.Thread implements org.apache.zookeeper.server.RequestProcessor {
  private static final org.slf4j.Logger LOG;

  private final org.apache.zookeeper.server.ZooKeeperServer zks;

  private final java.util.concurrent.LinkedBlockingQueue<org.apache.zookeeper.server.Request> queuedRequests;

  private final org.apache.zookeeper.server.RequestProcessor nextProcessor;

  private java.lang.Thread snapInProcess;

  private volatile boolean running;

  private final java.util.LinkedList<org.apache.zookeeper.server.Request> toFlush;

  private final java.util.Random r;

  private static int snapCount;

  private static int randRoll;

  private final org.apache.zookeeper.server.Request requestOfDeath;

  public org.apache.zookeeper.server.SyncRequestProcessor(org.apache.zookeeper.server.ZooKeeperServer, org.apache.zookeeper.server.RequestProcessor);
    Code:
       0: aload_0
       1: new           #3                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #5                  // String SyncThread:
      10: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #7                  // Method org/apache/zookeeper/server/ZooKeeperServer.getServerId:()J
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      20: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #10                 // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
      26: aload_0
      27: new           #11                 // class java/util/concurrent/LinkedBlockingQueue
      30: dup
      31: invokespecial #12                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      34: putfield      #13                 // Field queuedRequests:Ljava/util/concurrent/LinkedBlockingQueue;
      37: aload_0
      38: aconst_null
      39: putfield      #14                 // Field snapInProcess:Ljava/lang/Thread;
      42: aload_0
      43: new           #15                 // class java/util/LinkedList
      46: dup
      47: invokespecial #16                 // Method java/util/LinkedList."<init>":()V
      50: putfield      #17                 // Field toFlush:Ljava/util/LinkedList;
      53: aload_0
      54: new           #18                 // class java/util/Random
      57: dup
      58: invokestatic  #19                 // Method java/lang/System.nanoTime:()J
      61: invokespecial #20                 // Method java/util/Random."<init>":(J)V
      64: putfield      #21                 // Field r:Ljava/util/Random;
      67: aload_0
      68: getstatic     #22                 // Field org/apache/zookeeper/server/Request.requestOfDeath:Lorg/apache/zookeeper/server/Request;
      71: putfield      #23                 // Field requestOfDeath:Lorg/apache/zookeeper/server/Request;
      74: aload_0
      75: aload_1
      76: putfield      #2                  // Field zks:Lorg/apache/zookeeper/server/ZooKeeperServer;
      79: aload_0
      80: aload_2
      81: putfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      84: aload_0
      85: iconst_1
      86: putfield      #25                 // Field running:Z
      89: return

  public static void setSnapCount(int);
    Code:
       0: iload_0
       1: putstatic     #26                 // Field snapCount:I
       4: iload_0
       5: putstatic     #27                 // Field randRoll:I
       8: return

  public static int getSnapCount();
    Code:
       0: getstatic     #26                 // Field snapCount:I
       3: ireturn

  private static void setRandRoll(int);
    Code:
       0: iload_0
       1: putstatic     #27                 // Field randRoll:I
       4: return

  public void run();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #21                 // Field r:Ljava/util/Random;
       6: getstatic     #26                 // Field snapCount:I
       9: iconst_2
      10: idiv
      11: invokevirtual #28                 // Method java/util/Random.nextInt:(I)I
      14: invokestatic  #29                 // Method setRandRoll:(I)V
      17: aconst_null
      18: astore_2
      19: aload_0
      20: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
      23: invokevirtual #30                 // Method java/util/LinkedList.isEmpty:()Z
      26: ifeq          43
      29: aload_0
      30: getfield      #13                 // Field queuedRequests:Ljava/util/concurrent/LinkedBlockingQueue;
      33: invokevirtual #31                 // Method java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
      36: checkcast     #32                 // class org/apache/zookeeper/server/Request
      39: astore_2
      40: goto          69
      43: aload_0
      44: getfield      #13                 // Field queuedRequests:Ljava/util/concurrent/LinkedBlockingQueue;
      47: invokevirtual #33                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      50: checkcast     #32                 // class org/apache/zookeeper/server/Request
      53: astore_2
      54: aload_2
      55: ifnonnull     69
      58: aload_0
      59: aload_0
      60: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
      63: invokespecial #34                 // Method flush:(Ljava/util/LinkedList;)V
      66: goto          17
      69: aload_2
      70: aload_0
      71: getfield      #23                 // Field requestOfDeath:Lorg/apache/zookeeper/server/Request;
      74: if_acmpne     80
      77: goto          280
      80: aload_2
      81: ifnull        277
      84: aload_0
      85: getfield      #2                  // Field zks:Lorg/apache/zookeeper/server/ZooKeeperServer;
      88: invokevirtual #35                 // Method org/apache/zookeeper/server/ZooKeeperServer.getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
      91: aload_2
      92: invokevirtual #36                 // Method org/apache/zookeeper/server/ZKDatabase.append:(Lorg/apache/zookeeper/server/Request;)Z
      95: ifeq          195
      98: iinc          1, 1
     101: iload_1
     102: getstatic     #26                 // Field snapCount:I
     105: iconst_2
     106: idiv
     107: getstatic     #27                 // Field randRoll:I
     110: iadd
     111: if_icmple     247
     114: aload_0
     115: getfield      #21                 // Field r:Ljava/util/Random;
     118: getstatic     #26                 // Field snapCount:I
     121: iconst_2
     122: idiv
     123: invokevirtual #28                 // Method java/util/Random.nextInt:(I)I
     126: putstatic     #27                 // Field randRoll:I
     129: aload_0
     130: getfield      #2                  // Field zks:Lorg/apache/zookeeper/server/ZooKeeperServer;
     133: invokevirtual #35                 // Method org/apache/zookeeper/server/ZooKeeperServer.getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
     136: invokevirtual #37                 // Method org/apache/zookeeper/server/ZKDatabase.rollLog:()V
     139: aload_0
     140: getfield      #14                 // Field snapInProcess:Ljava/lang/Thread;
     143: ifnull        169
     146: aload_0
     147: getfield      #14                 // Field snapInProcess:Ljava/lang/Thread;
     150: invokevirtual #38                 // Method java/lang/Thread.isAlive:()Z
     153: ifeq          169
     156: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     159: ldc           #39                 // String Too busy to snap, skipping
     161: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     166: goto          190
     169: aload_0
     170: new           #41                 // class org/apache/zookeeper/server/SyncRequestProcessor$1
     173: dup
     174: aload_0
     175: ldc           #42                 // String Snapshot Thread
     177: invokespecial #43                 // Method org/apache/zookeeper/server/SyncRequestProcessor$1."<init>":(Lorg/apache/zookeeper/server/SyncRequestProcessor;Ljava/lang/String;)V
     180: putfield      #14                 // Field snapInProcess:Ljava/lang/Thread;
     183: aload_0
     184: getfield      #14                 // Field snapInProcess:Ljava/lang/Thread;
     187: invokevirtual #44                 // Method java/lang/Thread.start:()V
     190: iconst_0
     191: istore_1
     192: goto          247
     195: aload_0
     196: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
     199: invokevirtual #30                 // Method java/util/LinkedList.isEmpty:()Z
     202: ifeq          247
     205: aload_0
     206: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
     209: ifnull        17
     212: aload_0
     213: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
     216: aload_2
     217: invokeinterface #45,  2           // InterfaceMethod org/apache/zookeeper/server/RequestProcessor.processRequest:(Lorg/apache/zookeeper/server/Request;)V
     222: aload_0
     223: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
     226: instanceof    #46                 // class java/io/Flushable
     229: ifeq          17
     232: aload_0
     233: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
     236: checkcast     #46                 // class java/io/Flushable
     239: invokeinterface #47,  1           // InterfaceMethod java/io/Flushable.flush:()V
     244: goto          17
     247: aload_0
     248: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
     251: aload_2
     252: invokevirtual #48                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     255: pop
     256: aload_0
     257: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
     260: invokevirtual #49                 // Method java/util/LinkedList.size:()I
     263: sipush        1000
     266: if_icmple     277
     269: aload_0
     270: aload_0
     271: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
     274: invokespecial #34                 // Method flush:(Ljava/util/LinkedList;)V
     277: goto          17
     280: goto          305
     283: astore_1
     284: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     287: ldc           #51                 // String Severe unrecoverable error, exiting
     289: aload_1
     290: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     295: aload_0
     296: iconst_0
     297: putfield      #25                 // Field running:Z
     300: bipush        11
     302: invokestatic  #53                 // Method java/lang/System.exit:(I)V
     305: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     308: ldc           #54                 // String SyncRequestProcessor exited!
     310: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     315: return
    Exception table:
       from    to  target type
           0   280   283   Class java/lang/Throwable

  private void flush(java.util.LinkedList<org.apache.zookeeper.server.Request>) throws java.io.IOException, org.apache.zookeeper.server.RequestProcessor$RequestProcessorException;
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method java/util/LinkedList.isEmpty:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field zks:Lorg/apache/zookeeper/server/ZooKeeperServer;
      12: invokevirtual #35                 // Method org/apache/zookeeper/server/ZooKeeperServer.getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
      15: invokevirtual #56                 // Method org/apache/zookeeper/server/ZKDatabase.commit:()V
      18: aload_1
      19: invokevirtual #30                 // Method java/util/LinkedList.isEmpty:()Z
      22: ifne          53
      25: aload_1
      26: invokevirtual #57                 // Method java/util/LinkedList.remove:()Ljava/lang/Object;
      29: checkcast     #32                 // class org/apache/zookeeper/server/Request
      32: astore_2
      33: aload_0
      34: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      37: ifnull        50
      40: aload_0
      41: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      44: aload_2
      45: invokeinterface #45,  2           // InterfaceMethod org/apache/zookeeper/server/RequestProcessor.processRequest:(Lorg/apache/zookeeper/server/Request;)V
      50: goto          18
      53: aload_0
      54: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      57: ifnull        82
      60: aload_0
      61: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      64: instanceof    #46                 // class java/io/Flushable
      67: ifeq          82
      70: aload_0
      71: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      74: checkcast     #46                 // class java/io/Flushable
      77: invokeinterface #47,  1           // InterfaceMethod java/io/Flushable.flush:()V
      82: return

  public void shutdown();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #58                 // String Shutting down
       5: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #13                 // Field queuedRequests:Ljava/util/concurrent/LinkedBlockingQueue;
      14: aload_0
      15: getfield      #23                 // Field requestOfDeath:Lorg/apache/zookeeper/server/Request;
      18: invokevirtual #59                 // Method java/util/concurrent/LinkedBlockingQueue.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: getfield      #25                 // Field running:Z
      26: ifeq          33
      29: aload_0
      30: invokevirtual #60                 // Method join:()V
      33: aload_0
      34: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
      37: invokevirtual #30                 // Method java/util/LinkedList.isEmpty:()Z
      40: ifne          51
      43: aload_0
      44: aload_0
      45: getfield      #17                 // Field toFlush:Ljava/util/LinkedList;
      48: invokespecial #34                 // Method flush:(Ljava/util/LinkedList;)V
      51: goto          115
      54: astore_1
      55: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      58: new           #3                  // class java/lang/StringBuilder
      61: dup
      62: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #62                 // String Interrupted while wating for
      67: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: ldc           #64                 // String  to finish
      76: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      87: goto          115
      90: astore_1
      91: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      94: ldc           #66                 // String Got IO exception during shutdown
      96: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     101: goto          115
     104: astore_1
     105: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     108: ldc           #68                 // String Got request processor exception during shutdown
     110: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     115: aload_0
     116: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
     119: ifnull        131
     122: aload_0
     123: getfield      #24                 // Field nextProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
     126: invokeinterface #69,  1           // InterfaceMethod org/apache/zookeeper/server/RequestProcessor.shutdown:()V
     131: return
    Exception table:
       from    to  target type
          22    51    54   Class java/lang/InterruptedException
          22    51    90   Class java/io/IOException
          22    51   104   Class org/apache/zookeeper/server/RequestProcessor$RequestProcessorException

  public void processRequest(org.apache.zookeeper.server.Request);
    Code:
       0: aload_0
       1: getfield      #13                 // Field queuedRequests:Ljava/util/concurrent/LinkedBlockingQueue;
       4: aload_1
       5: invokevirtual #59                 // Method java/util/concurrent/LinkedBlockingQueue.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  static org.apache.zookeeper.server.ZooKeeperServer access$000(org.apache.zookeeper.server.SyncRequestProcessor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field zks:Lorg/apache/zookeeper/server/ZooKeeperServer;
       4: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #70                 // class org/apache/zookeeper/server/SyncRequestProcessor
       3: invokestatic  #71                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: invokestatic  #72                 // Method org/apache/zookeeper/server/ZooKeeperServer.getSnapCount:()I
      12: putstatic     #26                 // Field snapCount:I
      15: return
}
