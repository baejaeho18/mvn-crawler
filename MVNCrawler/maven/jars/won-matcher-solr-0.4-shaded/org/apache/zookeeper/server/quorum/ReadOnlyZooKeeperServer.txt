Compiled from "ReadOnlyZooKeeperServer.java"
public class org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer extends org.apache.zookeeper.server.quorum.QuorumZooKeeperServer {
  private volatile boolean shutdown;

  org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer(org.apache.zookeeper.server.persistence.FileTxnSnapLog, org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.ZooKeeperServer$DataTreeBuilder, org.apache.zookeeper.server.ZKDatabase);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getfield      #1                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.tickTime:I
       6: aload_2
       7: getfield      #2                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.minSessionTimeout:I
      10: aload_2
      11: getfield      #3                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.maxSessionTimeout:I
      14: aload_3
      15: aload         4
      17: aload_2
      18: invokespecial #4                  // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer."<init>":(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field shutdown:Z
      26: return

  protected void setupRequestProcessors();
    Code:
       0: new           #6                  // class org/apache/zookeeper/server/FinalRequestProcessor
       3: dup
       4: aload_0
       5: invokespecial #7                  // Method org/apache/zookeeper/server/FinalRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
       8: astore_1
       9: new           #8                  // class org/apache/zookeeper/server/PrepRequestProcessor
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #9                  // Method org/apache/zookeeper/server/PrepRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      18: astore_2
      19: aload_2
      20: checkcast     #8                  // class org/apache/zookeeper/server/PrepRequestProcessor
      23: invokevirtual #10                 // Method org/apache/zookeeper/server/PrepRequestProcessor.start:()V
      26: aload_0
      27: new           #11                 // class org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor
      30: dup
      31: aload_0
      32: aload_2
      33: invokespecial #12                 // Method org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      36: putfield      #13                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      39: aload_0
      40: getfield      #13                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      43: checkcast     #11                 // class org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor
      46: invokevirtual #14                 // Method org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.start:()V
      49: return

  public synchronized void startup();
    Code:
       0: aload_0
       1: getfield      #5                  // Field shutdown:Z
       4: ifeq          18
       7: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      10: ldc           #16                 // String Not starting Read-only server as startup follows shutdown!
      12: invokeinterface #17,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      17: return
      18: aload_0
      19: new           #18                 // class org/apache/zookeeper/server/quorum/ReadOnlyBean
      22: dup
      23: aload_0
      24: invokespecial #19                 // Method org/apache/zookeeper/server/quorum/ReadOnlyBean."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      27: aload_0
      28: getfield      #20                 // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      31: getfield      #21                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLocalPeerBean:Lorg/apache/zookeeper/server/quorum/LocalPeerBean;
      34: invokevirtual #22                 // Method registerJMX:(Lorg/apache/zookeeper/server/ZooKeeperServerBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
      37: aload_0
      38: invokespecial #23                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.startup:()V
      41: aload_0
      42: getfield      #20                 // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      45: getfield      #24                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.cnxnFactory:Lorg/apache/zookeeper/server/ServerCnxnFactory;
      48: aload_0
      49: invokevirtual #25                 // Method org/apache/zookeeper/server/ServerCnxnFactory.setZooKeeperServer:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      52: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      55: ldc           #26                 // String Read-only server started
      57: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      62: return

  protected void registerJMX();
    Code:
       0: aload_0
       1: new           #28                 // class org/apache/zookeeper/server/DataTreeBean
       4: dup
       5: aload_0
       6: invokevirtual #29                 // Method getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
       9: invokevirtual #30                 // Method org/apache/zookeeper/server/ZKDatabase.getDataTree:()Lorg/apache/zookeeper/server/DataTree;
      12: invokespecial #31                 // Method org/apache/zookeeper/server/DataTreeBean."<init>":(Lorg/apache/zookeeper/server/DataTree;)V
      15: putfield      #32                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      18: invokestatic  #33                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      21: aload_0
      22: getfield      #32                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      25: aload_0
      26: getfield      #34                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      29: invokevirtual #35                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      32: goto          52
      35: astore_1
      36: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #37                 // String Failed to register with JMX
      41: aload_1
      42: invokeinterface #38,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: aload_0
      48: aconst_null
      49: putfield      #32                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      52: return
    Exception table:
       from    to  target type
           0    32    35   Class java/lang/Exception

  public void registerJMX(org.apache.zookeeper.server.ZooKeeperServerBean, org.apache.zookeeper.server.quorum.LocalPeerBean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
       5: invokestatic  #33                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
       8: aload_1
       9: aload_2
      10: invokevirtual #35                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      13: goto          33
      16: astore_3
      17: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #37                 // String Failed to register with JMX
      22: aload_3
      23: invokeinterface #38,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: aload_0
      29: aconst_null
      30: putfield      #34                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      33: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/Exception

  protected void unregisterJMX();
    Code:
       0: aload_0
       1: getfield      #32                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
       4: ifnull        17
       7: invokestatic  #33                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #32                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      14: invokevirtual #39                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_1
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #40                 // String Failed to unregister with JMX
      26: aload_1
      27: invokeinterface #38,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #32                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  protected void unregisterJMX(org.apache.zookeeper.server.ZooKeeperServer);
    Code:
       0: aload_0
       1: getfield      #34                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
       4: ifnull        17
       7: invokestatic  #33                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #34                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      14: invokevirtual #39                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_2
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #40                 // String Failed to unregister with JMX
      26: aload_2
      27: invokeinterface #38,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #34                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  public java.lang.String getState();
    Code:
       0: ldc           #41                 // String read-only
       2: areturn

  public long getServerId();
    Code:
       0: aload_0
       1: getfield      #20                 // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: invokevirtual #42                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getId:()J
       7: lreturn

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field shutdown:Z
       5: aload_0
       6: aload_0
       7: invokevirtual #43                 // Method unregisterJMX:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      10: aload_0
      11: getfield      #20                 // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      14: getfield      #24                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.cnxnFactory:Lorg/apache/zookeeper/server/ServerCnxnFactory;
      17: aconst_null
      18: invokevirtual #25                 // Method org/apache/zookeeper/server/ServerCnxnFactory.setZooKeeperServer:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      21: aload_0
      22: getfield      #20                 // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      25: getfield      #24                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.cnxnFactory:Lorg/apache/zookeeper/server/ServerCnxnFactory;
      28: invokevirtual #44                 // Method org/apache/zookeeper/server/ServerCnxnFactory.closeAll:()V
      31: aload_0
      32: invokespecial #45                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.shutdown:()V
      35: return
}
