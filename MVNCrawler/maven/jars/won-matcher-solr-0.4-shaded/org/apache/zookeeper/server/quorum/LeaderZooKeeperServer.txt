Compiled from "LeaderZooKeeperServer.java"
public class org.apache.zookeeper.server.quorum.LeaderZooKeeperServer extends org.apache.zookeeper.server.quorum.QuorumZooKeeperServer {
  org.apache.zookeeper.server.quorum.CommitProcessor commitProcessor;

  org.apache.zookeeper.server.quorum.LeaderZooKeeperServer(org.apache.zookeeper.server.persistence.FileTxnSnapLog, org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.ZooKeeperServer$DataTreeBuilder, org.apache.zookeeper.server.ZKDatabase) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getfield      #1                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.tickTime:I
       6: aload_2
       7: getfield      #2                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.minSessionTimeout:I
      10: aload_2
      11: getfield      #3                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.maxSessionTimeout:I
      14: aload_3
      15: aload         4
      17: aload_2
      18: invokespecial #4                  // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer."<init>":(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
      21: return

  public org.apache.zookeeper.server.quorum.Leader getLeader();
    Code:
       0: aload_0
       1: getfield      #5                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: getfield      #6                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.leader:Lorg/apache/zookeeper/server/quorum/Leader;
       7: areturn

  protected void setupRequestProcessors();
    Code:
       0: new           #7                  // class org/apache/zookeeper/server/FinalRequestProcessor
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method org/apache/zookeeper/server/FinalRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
       8: astore_1
       9: new           #9                  // class org/apache/zookeeper/server/quorum/Leader$ToBeAppliedRequestProcessor
      12: dup
      13: aload_1
      14: aload_0
      15: invokevirtual #10                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
      18: getfield      #11                 // Field org/apache/zookeeper/server/quorum/Leader.toBeApplied:Ljava/util/concurrent/ConcurrentLinkedQueue;
      21: invokespecial #12                 // Method org/apache/zookeeper/server/quorum/Leader$ToBeAppliedRequestProcessor."<init>":(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/util/concurrent/ConcurrentLinkedQueue;)V
      24: astore_2
      25: aload_0
      26: new           #13                 // class org/apache/zookeeper/server/quorum/CommitProcessor
      29: dup
      30: aload_2
      31: aload_0
      32: invokevirtual #14                 // Method getServerId:()J
      35: invokestatic  #15                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      38: iconst_0
      39: invokespecial #16                 // Method org/apache/zookeeper/server/quorum/CommitProcessor."<init>":(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;Z)V
      42: putfield      #17                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      45: aload_0
      46: getfield      #17                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      49: invokevirtual #18                 // Method org/apache/zookeeper/server/quorum/CommitProcessor.start:()V
      52: new           #19                 // class org/apache/zookeeper/server/quorum/ProposalRequestProcessor
      55: dup
      56: aload_0
      57: aload_0
      58: getfield      #17                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      61: invokespecial #20                 // Method org/apache/zookeeper/server/quorum/ProposalRequestProcessor."<init>":(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      64: astore_3
      65: aload_3
      66: invokevirtual #21                 // Method org/apache/zookeeper/server/quorum/ProposalRequestProcessor.initialize:()V
      69: aload_0
      70: new           #22                 // class org/apache/zookeeper/server/PrepRequestProcessor
      73: dup
      74: aload_0
      75: aload_3
      76: invokespecial #23                 // Method org/apache/zookeeper/server/PrepRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      79: putfield      #24                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      82: aload_0
      83: getfield      #24                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      86: checkcast     #22                 // class org/apache/zookeeper/server/PrepRequestProcessor
      89: invokevirtual #25                 // Method org/apache/zookeeper/server/PrepRequestProcessor.start:()V
      92: return

  public int getGlobalOutstandingLimit();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.getGlobalOutstandingLimit:()I
       4: aload_0
       5: getfield      #5                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       8: invokevirtual #27                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getQuorumSize:()I
      11: iconst_1
      12: isub
      13: idiv
      14: ireturn

  public void createSessionTracker();
    Code:
       0: aload_0
       1: new           #28                 // class org/apache/zookeeper/server/SessionTrackerImpl
       4: dup
       5: aload_0
       6: aload_0
       7: invokevirtual #29                 // Method getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
      10: invokevirtual #30                 // Method org/apache/zookeeper/server/ZKDatabase.getSessionWithTimeOuts:()Ljava/util/concurrent/ConcurrentHashMap;
      13: aload_0
      14: getfield      #31                 // Field tickTime:I
      17: aload_0
      18: getfield      #5                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      21: invokevirtual #32                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getId:()J
      24: invokespecial #33                 // Method org/apache/zookeeper/server/SessionTrackerImpl."<init>":(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;IJ)V
      27: putfield      #34                 // Field sessionTracker:Lorg/apache/zookeeper/server/SessionTracker;
      30: return

  protected void startSessionTracker();
    Code:
       0: aload_0
       1: getfield      #34                 // Field sessionTracker:Lorg/apache/zookeeper/server/SessionTracker;
       4: checkcast     #28                 // class org/apache/zookeeper/server/SessionTrackerImpl
       7: invokevirtual #35                 // Method org/apache/zookeeper/server/SessionTrackerImpl.start:()V
      10: return

  public boolean touch(long, int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field sessionTracker:Lorg/apache/zookeeper/server/SessionTracker;
       4: lload_1
       5: iload_3
       6: invokeinterface #36,  4           // InterfaceMethod org/apache/zookeeper/server/SessionTracker.touchSession:(JI)Z
      11: ireturn

  protected void registerJMX();
    Code:
       0: aload_0
       1: new           #37                 // class org/apache/zookeeper/server/DataTreeBean
       4: dup
       5: aload_0
       6: invokevirtual #29                 // Method getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
       9: invokevirtual #38                 // Method org/apache/zookeeper/server/ZKDatabase.getDataTree:()Lorg/apache/zookeeper/server/DataTree;
      12: invokespecial #39                 // Method org/apache/zookeeper/server/DataTreeBean."<init>":(Lorg/apache/zookeeper/server/DataTree;)V
      15: putfield      #40                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      18: invokestatic  #41                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      21: aload_0
      22: getfield      #40                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      25: aload_0
      26: getfield      #42                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      29: invokevirtual #43                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      32: goto          52
      35: astore_1
      36: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #46                 // String Failed to register with JMX
      41: aload_1
      42: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: aload_0
      48: aconst_null
      49: putfield      #40                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      52: return
    Exception table:
       from    to  target type
           0    32    35   Class java/lang/Exception

  public void registerJMX(org.apache.zookeeper.server.quorum.LeaderBean, org.apache.zookeeper.server.quorum.LocalPeerBean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: getfield      #48                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLeaderElectionBean:Lorg/apache/zookeeper/server/quorum/LeaderElectionBean;
       7: ifnull        46
      10: invokestatic  #41                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      13: aload_0
      14: getfield      #5                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      17: getfield      #48                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLeaderElectionBean:Lorg/apache/zookeeper/server/quorum/LeaderElectionBean;
      20: invokevirtual #49                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      23: goto          38
      26: astore_3
      27: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #46                 // String Failed to register with JMX
      32: aload_3
      33: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: aload_0
      39: getfield      #5                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      42: aconst_null
      43: putfield      #48                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLeaderElectionBean:Lorg/apache/zookeeper/server/quorum/LeaderElectionBean;
      46: aload_0
      47: aload_1
      48: putfield      #42                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      51: invokestatic  #41                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      54: aload_1
      55: aload_2
      56: invokevirtual #43                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      59: goto          79
      62: astore_3
      63: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      66: ldc           #46                 // String Failed to register with JMX
      68: aload_3
      69: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: aload_0
      75: aconst_null
      76: putfield      #42                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      79: return
    Exception table:
       from    to  target type
          10    23    26   Class java/lang/Exception
          46    59    62   Class java/lang/Exception

  protected void unregisterJMX();
    Code:
       0: aload_0
       1: getfield      #40                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
       4: ifnull        17
       7: invokestatic  #41                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #40                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      14: invokevirtual #49                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_1
      21: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #50                 // String Failed to unregister with JMX
      26: aload_1
      27: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #40                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  protected void unregisterJMX(org.apache.zookeeper.server.quorum.Leader);
    Code:
       0: aload_0
       1: getfield      #42                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
       4: ifnull        17
       7: invokestatic  #41                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #42                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      14: invokevirtual #49                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_2
      21: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #50                 // String Failed to unregister with JMX
      26: aload_2
      27: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #42                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  public java.lang.String getState();
    Code:
       0: ldc           #51                 // String leader
       2: areturn

  public long getServerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: invokevirtual #32                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getId:()J
       7: lreturn

  protected void revalidateSession(org.apache.zookeeper.server.ServerCnxn, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iload         4
       5: invokespecial #52                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.revalidateSession:(Lorg/apache/zookeeper/server/ServerCnxn;JI)V
       8: aload_0
       9: lload_2
      10: getstatic     #53                 // Field org/apache/zookeeper/server/ServerCnxn.me:Ljava/lang/Object;
      13: invokevirtual #54                 // Method setOwner:(JLjava/lang/Object;)V
      16: goto          21
      19: astore        5
      21: return
    Exception table:
       from    to  target type
           8    16    19   Class org/apache/zookeeper/KeeperException$SessionExpiredException
}
