Compiled from "PathTrie.java"
class org.apache.zookeeper.common.PathTrie$TrieNode {
  boolean property;

  final java.util.HashMap<java.lang.String, org.apache.zookeeper.common.PathTrie$TrieNode> children;

  org.apache.zookeeper.common.PathTrie$TrieNode parent;

  private org.apache.zookeeper.common.PathTrie$TrieNode(org.apache.zookeeper.common.PathTrie$TrieNode);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field property:Z
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field parent:Lorg/apache/zookeeper/common/PathTrie$TrieNode;
      14: aload_0
      15: new           #5                  // class java/util/HashMap
      18: dup
      19: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      22: putfield      #7                  // Field children:Ljava/util/HashMap;
      25: aload_0
      26: aload_1
      27: putfield      #4                  // Field parent:Lorg/apache/zookeeper/common/PathTrie$TrieNode;
      30: return

  org.apache.zookeeper.common.PathTrie$TrieNode getParent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parent:Lorg/apache/zookeeper/common/PathTrie$TrieNode;
       4: areturn

  void setParent(org.apache.zookeeper.common.PathTrie$TrieNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field parent:Lorg/apache/zookeeper/common/PathTrie$TrieNode;
       5: return

  void setProperty(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field property:Z
       5: return

  boolean getProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field property:Z
       4: ireturn

  void addChild(java.lang.String, org.apache.zookeeper.common.PathTrie$TrieNode);
    Code:
       0: aload_0
       1: getfield      #7                  // Field children:Ljava/util/HashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field children:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #8                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          21
      18: aload_3
      19: monitorexit
      20: return
      21: aload_0
      22: getfield      #7                  // Field children:Ljava/util/HashMap;
      25: aload_1
      26: aload_2
      27: invokevirtual #9                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_3
      32: monitorexit
      33: goto          43
      36: astore        4
      38: aload_3
      39: monitorexit
      40: aload         4
      42: athrow
      43: return
    Exception table:
       from    to  target type
           7    20    36   any
          21    33    36   any
          36    40    36   any

  void deleteChild(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field children:Ljava/util/HashMap;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field children:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #8                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      15: ifne          21
      18: aload_2
      19: monitorexit
      20: return
      21: aload_0
      22: getfield      #7                  // Field children:Ljava/util/HashMap;
      25: aload_1
      26: invokevirtual #10                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #11                 // class org/apache/zookeeper/common/PathTrie$TrieNode
      32: astore_3
      33: aload_3
      34: invokevirtual #12                 // Method getChildren:()[Ljava/lang/String;
      37: arraylength
      38: iconst_1
      39: if_icmpne     59
      42: aload_3
      43: aconst_null
      44: invokevirtual #13                 // Method setParent:(Lorg/apache/zookeeper/common/PathTrie$TrieNode;)V
      47: aload_0
      48: getfield      #7                  // Field children:Ljava/util/HashMap;
      51: aload_1
      52: invokevirtual #14                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: goto          64
      59: aload_3
      60: iconst_0
      61: invokevirtual #15                 // Method setProperty:(Z)V
      64: aload_2
      65: monitorexit
      66: goto          76
      69: astore        4
      71: aload_2
      72: monitorexit
      73: aload         4
      75: athrow
      76: return
    Exception table:
       from    to  target type
           7    20    69   any
          21    66    69   any
          69    73    69   any

  org.apache.zookeeper.common.PathTrie$TrieNode getChild(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field children:Ljava/util/HashMap;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field children:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #8                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      15: ifne          22
      18: aconst_null
      19: aload_2
      20: monitorexit
      21: areturn
      22: aload_0
      23: getfield      #7                  // Field children:Ljava/util/HashMap;
      26: aload_1
      27: invokevirtual #10                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #11                 // class org/apache/zookeeper/common/PathTrie$TrieNode
      33: aload_2
      34: monitorexit
      35: areturn
      36: astore_3
      37: aload_2
      38: monitorexit
      39: aload_3
      40: athrow
    Exception table:
       from    to  target type
           7    21    36   any
          22    35    36   any
          36    39    36   any

  java.lang.String[] getChildren();
    Code:
       0: aload_0
       1: getfield      #7                  // Field children:Ljava/util/HashMap;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field children:Ljava/util/HashMap;
      11: invokevirtual #16                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
      14: iconst_0
      15: anewarray     #17                 // class java/lang/String
      18: invokeinterface #18,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      23: checkcast     #19                 // class "[Ljava/lang/String;"
      26: aload_1
      27: monitorexit
      28: areturn
      29: astore_2
      30: aload_1
      31: monitorexit
      32: aload_2
      33: athrow
    Exception table:
       from    to  target type
           7    28    29   any
          29    32    29   any

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #22                 // String Children of trienode:
      11: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: getfield      #7                  // Field children:Ljava/util/HashMap;
      19: dup
      20: astore_2
      21: monitorenter
      22: aload_0
      23: getfield      #7                  // Field children:Ljava/util/HashMap;
      26: invokevirtual #16                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
      29: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_3
      35: aload_3
      36: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          83
      44: aload_3
      45: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #17                 // class java/lang/String
      53: astore        4
      55: aload_1
      56: new           #20                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #27                 // String
      65: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload         4
      70: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: goto          35
      83: aload_2
      84: monitorexit
      85: goto          95
      88: astore        5
      90: aload_2
      91: monitorexit
      92: aload         5
      94: athrow
      95: aload_1
      96: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn
    Exception table:
       from    to  target type
          22    85    88   any
          88    92    88   any

  org.apache.zookeeper.common.PathTrie$TrieNode(org.apache.zookeeper.common.PathTrie$TrieNode, org.apache.zookeeper.common.PathTrie$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/zookeeper/common/PathTrie$TrieNode;)V
       5: return
}
