Compiled from "ActiveMQSession.java"
public class org.apache.activemq.ActiveMQSession implements javax.jms.Session,javax.jms.QueueSession,javax.jms.TopicSession,org.apache.activemq.management.StatsCapable,org.apache.activemq.ActiveMQDispatcher {
  public static final int INDIVIDUAL_ACKNOWLEDGE;

  public static final int MAX_ACK_CONSTANT;

  private static final org.slf4j.Logger LOG;

  private final java.util.concurrent.ThreadPoolExecutor connectionExecutor;

  protected int acknowledgementMode;

  protected final org.apache.activemq.ActiveMQConnection connection;

  protected final org.apache.activemq.command.SessionInfo info;

  protected final org.apache.activemq.util.LongSequenceGenerator consumerIdGenerator;

  protected final org.apache.activemq.util.LongSequenceGenerator producerIdGenerator;

  protected final org.apache.activemq.util.LongSequenceGenerator deliveryIdGenerator;

  protected final org.apache.activemq.ActiveMQSessionExecutor executor;

  protected final java.util.concurrent.atomic.AtomicBoolean started;

  protected final java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.ActiveMQMessageConsumer> consumers;

  protected final java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.ActiveMQMessageProducer> producers;

  protected boolean closed;

  private volatile boolean synchronizationRegistered;

  protected boolean asyncDispatch;

  protected boolean sessionAsyncDispatch;

  protected final boolean debug;

  protected java.lang.Object sendMutex;

  private final java.util.concurrent.atomic.AtomicBoolean clearInProgress;

  private javax.jms.MessageListener messageListener;

  private final org.apache.activemq.management.JMSSessionStatsImpl stats;

  private org.apache.activemq.TransactionContext transactionContext;

  private org.apache.activemq.ActiveMQSession$DeliveryListener deliveryListener;

  private org.apache.activemq.MessageTransformer transformer;

  private org.apache.activemq.blob.BlobTransferPolicy blobTransferPolicy;

  private long lastDeliveredSequenceId;

  final java.util.concurrent.atomic.AtomicInteger clearRequestsCounter;

  protected org.apache.activemq.ActiveMQSession(org.apache.activemq.ActiveMQConnection, org.apache.activemq.command.SessionId, int, boolean, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class org/apache/activemq/util/LongSequenceGenerator
       8: dup
       9: invokespecial #7                  // Method org/apache/activemq/util/LongSequenceGenerator."<init>":()V
      12: putfield      #8                  // Field consumerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      15: aload_0
      16: new           #6                  // class org/apache/activemq/util/LongSequenceGenerator
      19: dup
      20: invokespecial #7                  // Method org/apache/activemq/util/LongSequenceGenerator."<init>":()V
      23: putfield      #9                  // Field producerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      26: aload_0
      27: new           #6                  // class org/apache/activemq/util/LongSequenceGenerator
      30: dup
      31: invokespecial #7                  // Method org/apache/activemq/util/LongSequenceGenerator."<init>":()V
      34: putfield      #10                 // Field deliveryIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      37: aload_0
      38: new           #11                 // class java/util/concurrent/atomic/AtomicBoolean
      41: dup
      42: iconst_0
      43: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      46: putfield      #13                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      49: aload_0
      50: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList
      53: dup
      54: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      57: putfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      60: aload_0
      61: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList
      64: dup
      65: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      68: putfield      #17                 // Field producers:Ljava/util/concurrent/CopyOnWriteArrayList;
      71: aload_0
      72: new           #18                 // class java/lang/Object
      75: dup
      76: invokespecial #5                  // Method java/lang/Object."<init>":()V
      79: putfield      #19                 // Field sendMutex:Ljava/lang/Object;
      82: aload_0
      83: new           #11                 // class java/util/concurrent/atomic/AtomicBoolean
      86: dup
      87: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      90: putfield      #2                  // Field clearInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
      93: aload_0
      94: new           #21                 // class java/util/concurrent/atomic/AtomicInteger
      97: dup
      98: iconst_0
      99: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     102: putfield      #23                 // Field clearRequestsCounter:Ljava/util/concurrent/atomic/AtomicInteger;
     105: aload_0
     106: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     109: invokeinterface #24,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     114: putfield      #25                 // Field debug:Z
     117: aload_0
     118: aload_1
     119: putfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     122: aload_0
     123: iload_3
     124: putfield      #27                 // Field acknowledgementMode:I
     127: aload_0
     128: iload         4
     130: putfield      #28                 // Field asyncDispatch:Z
     133: aload_0
     134: iload         5
     136: putfield      #29                 // Field sessionAsyncDispatch:Z
     139: aload_0
     140: new           #30                 // class org/apache/activemq/command/SessionInfo
     143: dup
     144: aload_1
     145: invokevirtual #31                 // Method org/apache/activemq/ActiveMQConnection.getConnectionInfo:()Lorg/apache/activemq/command/ConnectionInfo;
     148: aload_2
     149: invokevirtual #32                 // Method org/apache/activemq/command/SessionId.getValue:()J
     152: invokespecial #33                 // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
     155: putfield      #34                 // Field info:Lorg/apache/activemq/command/SessionInfo;
     158: aload_0
     159: new           #35                 // class org/apache/activemq/TransactionContext
     162: dup
     163: aload_1
     164: invokespecial #36                 // Method org/apache/activemq/TransactionContext."<init>":(Lorg/apache/activemq/ActiveMQConnection;)V
     167: invokevirtual #37                 // Method setTransactionContext:(Lorg/apache/activemq/TransactionContext;)V
     170: aload_0
     171: new           #38                 // class org/apache/activemq/management/JMSSessionStatsImpl
     174: dup
     175: aload_0
     176: getfield      #17                 // Field producers:Ljava/util/concurrent/CopyOnWriteArrayList;
     179: aload_0
     180: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     183: invokespecial #39                 // Method org/apache/activemq/management/JMSSessionStatsImpl."<init>":(Ljava/util/List;Ljava/util/List;)V
     186: putfield      #40                 // Field stats:Lorg/apache/activemq/management/JMSSessionStatsImpl;
     189: aload_0
     190: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     193: aload_0
     194: getfield      #34                 // Field info:Lorg/apache/activemq/command/SessionInfo;
     197: invokevirtual #41                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     200: aload_0
     201: aload_1
     202: invokevirtual #42                 // Method org/apache/activemq/ActiveMQConnection.getTransformer:()Lorg/apache/activemq/MessageTransformer;
     205: invokevirtual #43                 // Method setTransformer:(Lorg/apache/activemq/MessageTransformer;)V
     208: aload_0
     209: aload_1
     210: invokevirtual #44                 // Method org/apache/activemq/ActiveMQConnection.getBlobTransferPolicy:()Lorg/apache/activemq/blob/BlobTransferPolicy;
     213: invokevirtual #45                 // Method setBlobTransferPolicy:(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
     216: aload_0
     217: aload_1
     218: invokevirtual #46                 // Method org/apache/activemq/ActiveMQConnection.getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     221: putfield      #47                 // Field connectionExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
     224: aload_0
     225: new           #48                 // class org/apache/activemq/ActiveMQSessionExecutor
     228: dup
     229: aload_0
     230: invokespecial #49                 // Method org/apache/activemq/ActiveMQSessionExecutor."<init>":(Lorg/apache/activemq/ActiveMQSession;)V
     233: putfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
     236: aload_1
     237: aload_0
     238: invokevirtual #51                 // Method org/apache/activemq/ActiveMQConnection.addSession:(Lorg/apache/activemq/ActiveMQSession;)V
     241: aload_1
     242: invokevirtual #52                 // Method org/apache/activemq/ActiveMQConnection.isStarted:()Z
     245: ifeq          252
     248: aload_0
     249: invokevirtual #53                 // Method start:()V
     252: return

  protected org.apache.activemq.ActiveMQSession(org.apache.activemq.ActiveMQConnection, org.apache.activemq.command.SessionId, int, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iconst_1
       7: invokespecial #54                 // Method "<init>":(Lorg/apache/activemq/ActiveMQConnection;Lorg/apache/activemq/command/SessionId;IZZ)V
      10: return

  public void setTransactionContext(org.apache.activemq.TransactionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
       5: return

  public org.apache.activemq.TransactionContext getTransactionContext();
    Code:
       0: aload_0
       1: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
       4: areturn

  public org.apache.activemq.management.StatsImpl getStats();
    Code:
       0: aload_0
       1: getfield      #40                 // Field stats:Lorg/apache/activemq/management/JMSSessionStatsImpl;
       4: areturn

  public org.apache.activemq.management.JMSSessionStatsImpl getSessionStats();
    Code:
       0: aload_0
       1: getfield      #40                 // Field stats:Lorg/apache/activemq/management/JMSSessionStatsImpl;
       4: areturn

  public javax.jms.BytesMessage createBytesMessage() throws javax.jms.JMSException;
    Code:
       0: new           #56                 // class org/apache/activemq/command/ActiveMQBytesMessage
       3: dup
       4: invokespecial #57                 // Method org/apache/activemq/command/ActiveMQBytesMessage."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_1
      14: areturn

  public javax.jms.MapMessage createMapMessage() throws javax.jms.JMSException;
    Code:
       0: new           #59                 // class org/apache/activemq/command/ActiveMQMapMessage
       3: dup
       4: invokespecial #60                 // Method org/apache/activemq/command/ActiveMQMapMessage."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_1
      14: areturn

  public javax.jms.Message createMessage() throws javax.jms.JMSException;
    Code:
       0: new           #61                 // class org/apache/activemq/command/ActiveMQMessage
       3: dup
       4: invokespecial #62                 // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_1
      14: areturn

  public javax.jms.ObjectMessage createObjectMessage() throws javax.jms.JMSException;
    Code:
       0: new           #63                 // class org/apache/activemq/command/ActiveMQObjectMessage
       3: dup
       4: invokespecial #64                 // Method org/apache/activemq/command/ActiveMQObjectMessage."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_1
      14: areturn

  public javax.jms.ObjectMessage createObjectMessage(java.io.Serializable) throws javax.jms.JMSException;
    Code:
       0: new           #63                 // class org/apache/activemq/command/ActiveMQObjectMessage
       3: dup
       4: invokespecial #64                 // Method org/apache/activemq/command/ActiveMQObjectMessage."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_2
      14: aload_1
      15: invokevirtual #65                 // Method org/apache/activemq/command/ActiveMQObjectMessage.setObject:(Ljava/io/Serializable;)V
      18: aload_2
      19: areturn

  public javax.jms.StreamMessage createStreamMessage() throws javax.jms.JMSException;
    Code:
       0: new           #66                 // class org/apache/activemq/command/ActiveMQStreamMessage
       3: dup
       4: invokespecial #67                 // Method org/apache/activemq/command/ActiveMQStreamMessage."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_1
      14: areturn

  public javax.jms.TextMessage createTextMessage() throws javax.jms.JMSException;
    Code:
       0: new           #68                 // class org/apache/activemq/command/ActiveMQTextMessage
       3: dup
       4: invokespecial #69                 // Method org/apache/activemq/command/ActiveMQTextMessage."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_1
      14: areturn

  public javax.jms.TextMessage createTextMessage(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: new           #68                 // class org/apache/activemq/command/ActiveMQTextMessage
       3: dup
       4: invokespecial #69                 // Method org/apache/activemq/command/ActiveMQTextMessage."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #70                 // Method org/apache/activemq/command/ActiveMQTextMessage.setText:(Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      18: aload_2
      19: areturn

  public org.apache.activemq.BlobMessage createBlobMessage(java.net.URL) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #71                 // Method createBlobMessage:(Ljava/net/URL;Z)Lorg/apache/activemq/BlobMessage;
       6: areturn

  public org.apache.activemq.BlobMessage createBlobMessage(java.net.URL, boolean) throws javax.jms.JMSException;
    Code:
       0: new           #72                 // class org/apache/activemq/command/ActiveMQBlobMessage
       3: dup
       4: invokespecial #73                 // Method org/apache/activemq/command/ActiveMQBlobMessage."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_3
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_3
      14: aload_1
      15: invokevirtual #74                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setURL:(Ljava/net/URL;)V
      18: aload_3
      19: iload_2
      20: invokevirtual #75                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setDeletedByBroker:(Z)V
      23: aload_3
      24: new           #76                 // class org/apache/activemq/blob/BlobDownloader
      27: dup
      28: aload_0
      29: invokevirtual #77                 // Method getBlobTransferPolicy:()Lorg/apache/activemq/blob/BlobTransferPolicy;
      32: invokespecial #78                 // Method org/apache/activemq/blob/BlobDownloader."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      35: invokevirtual #79                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setBlobDownloader:(Lorg/apache/activemq/blob/BlobDownloader;)V
      38: aload_3
      39: areturn

  public org.apache.activemq.BlobMessage createBlobMessage(java.io.File) throws javax.jms.JMSException;
    Code:
       0: new           #72                 // class org/apache/activemq/command/ActiveMQBlobMessage
       3: dup
       4: invokespecial #73                 // Method org/apache/activemq/command/ActiveMQBlobMessage."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_2
      14: new           #80                 // class org/apache/activemq/blob/BlobUploader
      17: dup
      18: aload_0
      19: invokevirtual #77                 // Method getBlobTransferPolicy:()Lorg/apache/activemq/blob/BlobTransferPolicy;
      22: aload_1
      23: invokespecial #81                 // Method org/apache/activemq/blob/BlobUploader."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;Ljava/io/File;)V
      26: invokevirtual #82                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setBlobUploader:(Lorg/apache/activemq/blob/BlobUploader;)V
      29: aload_2
      30: new           #76                 // class org/apache/activemq/blob/BlobDownloader
      33: dup
      34: aload_0
      35: invokevirtual #77                 // Method getBlobTransferPolicy:()Lorg/apache/activemq/blob/BlobTransferPolicy;
      38: invokespecial #78                 // Method org/apache/activemq/blob/BlobDownloader."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      41: invokevirtual #79                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setBlobDownloader:(Lorg/apache/activemq/blob/BlobDownloader;)V
      44: aload_2
      45: iconst_1
      46: invokevirtual #75                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setDeletedByBroker:(Z)V
      49: aload_2
      50: aload_1
      51: invokevirtual #83                 // Method java/io/File.getName:()Ljava/lang/String;
      54: invokevirtual #84                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setName:(Ljava/lang/String;)V
      57: aload_2
      58: areturn

  public org.apache.activemq.BlobMessage createBlobMessage(java.io.InputStream) throws javax.jms.JMSException;
    Code:
       0: new           #72                 // class org/apache/activemq/command/ActiveMQBlobMessage
       3: dup
       4: invokespecial #73                 // Method org/apache/activemq/command/ActiveMQBlobMessage."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #58                 // Method configureMessage:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_2
      14: new           #80                 // class org/apache/activemq/blob/BlobUploader
      17: dup
      18: aload_0
      19: invokevirtual #77                 // Method getBlobTransferPolicy:()Lorg/apache/activemq/blob/BlobTransferPolicy;
      22: aload_1
      23: invokespecial #85                 // Method org/apache/activemq/blob/BlobUploader."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;Ljava/io/InputStream;)V
      26: invokevirtual #82                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setBlobUploader:(Lorg/apache/activemq/blob/BlobUploader;)V
      29: aload_2
      30: new           #76                 // class org/apache/activemq/blob/BlobDownloader
      33: dup
      34: aload_0
      35: invokevirtual #77                 // Method getBlobTransferPolicy:()Lorg/apache/activemq/blob/BlobTransferPolicy;
      38: invokespecial #78                 // Method org/apache/activemq/blob/BlobDownloader."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      41: invokevirtual #79                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setBlobDownloader:(Lorg/apache/activemq/blob/BlobDownloader;)V
      44: aload_2
      45: iconst_1
      46: invokevirtual #75                 // Method org/apache/activemq/command/ActiveMQBlobMessage.setDeletedByBroker:(Z)V
      49: aload_2
      50: areturn

  public boolean getTransacted() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #87                 // Method isTransacted:()Z
       8: ireturn

  public int getAcknowledgeMode() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #27                 // Field acknowledgementMode:I
       8: ireturn

  public void commit() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #88                 // Method getTransacted:()Z
       8: ifne          21
      11: new           #89                 // class javax/jms/IllegalStateException
      14: dup
      15: ldc           #90                 // String Not a transacted session
      17: invokespecial #91                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      24: invokeinterface #24,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      29: ifeq          72
      32: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      35: new           #92                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_0
      43: invokevirtual #94                 // Method getSessionId:()Lorg/apache/activemq/command/SessionId;
      46: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #96                 // String  Transaction Commit :
      51: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      58: invokevirtual #98                 // Method org/apache/activemq/TransactionContext.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      61: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #100,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      72: aload_0
      73: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      76: invokevirtual #101                // Method org/apache/activemq/TransactionContext.commit:()V
      79: return

  public void rollback() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #88                 // Method getTransacted:()Z
       8: ifne          21
      11: new           #89                 // class javax/jms/IllegalStateException
      14: dup
      15: ldc           #90                 // String Not a transacted session
      17: invokespecial #91                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      24: invokeinterface #24,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      29: ifeq          72
      32: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      35: new           #92                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_0
      43: invokevirtual #94                 // Method getSessionId:()Lorg/apache/activemq/command/SessionId;
      46: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #102                // String  Transaction Rollback, txid:
      51: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      58: invokevirtual #98                 // Method org/apache/activemq/TransactionContext.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      61: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #100,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      72: aload_0
      73: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      76: invokevirtual #103                // Method org/apache/activemq/TransactionContext.rollback:()V
      79: return

  public void close() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #104                // Field closed:Z
       4: ifne          51
       7: aload_0
       8: invokevirtual #105                // Method getTransactionContext:()Lorg/apache/activemq/TransactionContext;
      11: invokevirtual #106                // Method org/apache/activemq/TransactionContext.isInXATransaction:()Z
      14: ifeq          47
      17: aload_0
      18: getfield      #3                  // Field synchronizationRegistered:Z
      21: ifne          51
      24: aload_0
      25: iconst_1
      26: putfield      #3                  // Field synchronizationRegistered:Z
      29: aload_0
      30: invokevirtual #105                // Method getTransactionContext:()Lorg/apache/activemq/TransactionContext;
      33: new           #107                // class org/apache/activemq/ActiveMQSession$1
      36: dup
      37: aload_0
      38: invokespecial #108                // Method org/apache/activemq/ActiveMQSession$1."<init>":(Lorg/apache/activemq/ActiveMQSession;)V
      41: invokevirtual #109                // Method org/apache/activemq/TransactionContext.addSynchronization:(Lorg/apache/activemq/transaction/Synchronization;)V
      44: goto          51
      47: aload_0
      48: invokespecial #4                  // Method doClose:()V
      51: return

  private void doClose() throws javax.jms.JMSException;
    Code:
       0: invokestatic  #110                // Method java/lang/Thread.interrupted:()Z
       3: istore_1
       4: aload_0
       5: invokevirtual #111                // Method dispose:()V
       8: aload_0
       9: getfield      #34                 // Field info:Lorg/apache/activemq/command/SessionInfo;
      12: invokevirtual #112                // Method org/apache/activemq/command/SessionInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      15: astore_2
      16: aload_2
      17: aload_0
      18: getfield      #113                // Field lastDeliveredSequenceId:J
      21: invokevirtual #114                // Method org/apache/activemq/command/RemoveInfo.setLastDeliveredSequenceId:(J)V
      24: aload_0
      25: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      28: aload_2
      29: invokevirtual #41                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
      32: iload_1
      33: ifeq          42
      36: invokestatic  #115                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      39: invokevirtual #116                // Method java/lang/Thread.interrupt:()V
      42: return

  void clearMessagesInProgress(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: getfield      #23                 // Field clearRequestsCounter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #117                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload_0
       9: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
      12: invokevirtual #118                // Method org/apache/activemq/ActiveMQSessionExecutor.clearMessagesInProgress:()V
      15: aload_0
      16: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      19: invokevirtual #119                // Method java/util/concurrent/CopyOnWriteArrayList.isEmpty:()Z
      22: ifeq          26
      25: return
      26: aload_0
      27: getfield      #2                  // Field clearInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
      30: iconst_0
      31: iconst_1
      32: invokevirtual #120                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      35: ifeq          142
      38: aload_0
      39: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      42: invokevirtual #121                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      45: astore_2
      46: aload_2
      47: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          111
      55: aload_2
      56: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      64: astore_3
      65: aload_3
      66: invokevirtual #125                // Method org/apache/activemq/ActiveMQMessageConsumer.inProgressClearRequired:()V
      69: aload_1
      70: invokevirtual #117                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      73: pop
      74: aload_0
      75: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      78: invokevirtual #126                // Method org/apache/activemq/ActiveMQConnection.getScheduler:()Lorg/apache/activemq/thread/Scheduler;
      81: new           #127                // class org/apache/activemq/ActiveMQSession$2
      84: dup
      85: aload_0
      86: aload_3
      87: invokespecial #128                // Method org/apache/activemq/ActiveMQSession$2."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/ActiveMQMessageConsumer;)V
      90: lconst_0
      91: invokevirtual #129                // Method org/apache/activemq/thread/Scheduler.executeAfterDelay:(Ljava/lang/Runnable;J)V
      94: goto          108
      97: astore        4
      99: aload_0
     100: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     103: aload         4
     105: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
     108: goto          46
     111: aload_0
     112: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     115: invokevirtual #126                // Method org/apache/activemq/ActiveMQConnection.getScheduler:()Lorg/apache/activemq/thread/Scheduler;
     118: new           #132                // class org/apache/activemq/ActiveMQSession$3
     121: dup
     122: aload_0
     123: invokespecial #133                // Method org/apache/activemq/ActiveMQSession$3."<init>":(Lorg/apache/activemq/ActiveMQSession;)V
     126: lconst_0
     127: invokevirtual #129                // Method org/apache/activemq/thread/Scheduler.executeAfterDelay:(Ljava/lang/Runnable;J)V
     130: goto          142
     133: astore_2
     134: aload_0
     135: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     138: aload_2
     139: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
     142: return
    Exception table:
       from    to  target type
          74    94    97   Class javax/jms/JMSException
         111   130   133   Class javax/jms/JMSException

  void deliverAcks();
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          34
      17: aload_1
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      26: astore_2
      27: aload_2
      28: invokevirtual #135                // Method org/apache/activemq/ActiveMQMessageConsumer.deliverAcks:()V
      31: goto          8
      34: return

  public synchronized void dispose() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #104                // Field closed:Z
       4: ifne          182
       7: aload_0
       8: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
      11: invokevirtual #136                // Method org/apache/activemq/ActiveMQSessionExecutor.stop:()V
      14: aload_0
      15: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      18: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          74
      31: aload_1
      32: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      40: astore_2
      41: aload_2
      42: aload_0
      43: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      46: invokevirtual #137                // Method org/apache/activemq/ActiveMQConnection.getFirstFailureError:()Ljava/io/IOException;
      49: invokevirtual #138                // Method org/apache/activemq/ActiveMQMessageConsumer.setFailureError:(Ljava/io/IOException;)V
      52: aload_2
      53: invokevirtual #139                // Method org/apache/activemq/ActiveMQMessageConsumer.dispose:()V
      56: aload_0
      57: aload_0
      58: getfield      #113                // Field lastDeliveredSequenceId:J
      61: aload_2
      62: invokevirtual #140                // Method org/apache/activemq/ActiveMQMessageConsumer.getLastDeliveredSequenceId:()J
      65: invokestatic  #141                // Method java/lang/Math.max:(JJ)J
      68: putfield      #113                // Field lastDeliveredSequenceId:J
      71: goto          22
      74: aload_0
      75: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      78: invokevirtual #142                // Method java/util/concurrent/CopyOnWriteArrayList.clear:()V
      81: aload_0
      82: getfield      #17                 // Field producers:Ljava/util/concurrent/CopyOnWriteArrayList;
      85: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      88: astore_1
      89: aload_1
      90: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          115
      98: aload_1
      99: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #143                // class org/apache/activemq/ActiveMQMessageProducer
     107: astore_2
     108: aload_2
     109: invokevirtual #144                // Method org/apache/activemq/ActiveMQMessageProducer.dispose:()V
     112: goto          89
     115: aload_0
     116: getfield      #17                 // Field producers:Ljava/util/concurrent/CopyOnWriteArrayList;
     119: invokevirtual #142                // Method java/util/concurrent/CopyOnWriteArrayList.clear:()V
     122: aload_0
     123: invokevirtual #105                // Method getTransactionContext:()Lorg/apache/activemq/TransactionContext;
     126: invokevirtual #145                // Method org/apache/activemq/TransactionContext.isInLocalTransaction:()Z
     129: ifeq          136
     132: aload_0
     133: invokevirtual #146                // Method rollback:()V
     136: goto          140
     139: astore_1
     140: aload_0
     141: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     144: aload_0
     145: invokevirtual #147                // Method org/apache/activemq/ActiveMQConnection.removeSession:(Lorg/apache/activemq/ActiveMQSession;)V
     148: aload_0
     149: aconst_null
     150: putfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
     153: aload_0
     154: iconst_1
     155: putfield      #104                // Field closed:Z
     158: goto          182
     161: astore_3
     162: aload_0
     163: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     166: aload_0
     167: invokevirtual #147                // Method org/apache/activemq/ActiveMQConnection.removeSession:(Lorg/apache/activemq/ActiveMQSession;)V
     170: aload_0
     171: aconst_null
     172: putfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
     175: aload_0
     176: iconst_1
     177: putfield      #104                // Field closed:Z
     180: aload_3
     181: athrow
     182: return
    Exception table:
       from    to  target type
         122   136   139   Class javax/jms/JMSException
           7   140   161   any
         161   162   161   any

  protected void configureMessage(org.apache.activemq.command.ActiveMQMessage) throws javax.jms.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       9: invokevirtual #148                // Method org/apache/activemq/command/ActiveMQMessage.setConnection:(Lorg/apache/activemq/ActiveMQConnection;)V
      12: return

  protected void checkClosed() throws javax.jms.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #104                // Field closed:Z
       4: ifeq          17
       7: new           #89                 // class javax/jms/IllegalStateException
      10: dup
      11: ldc           #149                // String The Session is closed
      13: invokespecial #91                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #104                // Field closed:Z
       4: ireturn

  public void recover() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #88                 // Method getTransacted:()Z
       8: ifeq          21
      11: new           #89                 // class javax/jms/IllegalStateException
      14: dup
      15: ldc           #150                // String This session is transacted
      17: invokespecial #91                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      25: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      28: astore_1
      29: aload_1
      30: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          55
      38: aload_1
      39: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      47: astore_2
      48: aload_2
      49: invokevirtual #151                // Method org/apache/activemq/ActiveMQMessageConsumer.rollback:()V
      52: goto          29
      55: return

  public javax.jms.MessageListener getMessageListener() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #152                // Field messageListener:Ljavax/jms/MessageListener;
       8: areturn

  public void setMessageListener(javax.jms.MessageListener) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_0
       5: invokevirtual #86                 // Method checkClosed:()V
       8: aload_0
       9: aload_1
      10: putfield      #152                // Field messageListener:Ljavax/jms/MessageListener;
      13: aload_1
      14: ifnull        25
      17: aload_0
      18: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
      21: iconst_1
      22: invokevirtual #153                // Method org/apache/activemq/ActiveMQSessionExecutor.setDispatchedBySessionPool:(Z)V
      25: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
       4: invokevirtual #154                // Method org/apache/activemq/ActiveMQSessionExecutor.dequeueNoWait:()Lorg/apache/activemq/command/MessageDispatch;
       7: dup
       8: astore_1
       9: ifnull        459
      12: aload_1
      13: astore_2
      14: aload_2
      15: invokevirtual #155                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      18: checkcast     #61                 // class org/apache/activemq/command/ActiveMQMessage
      21: astore_3
      22: aconst_null
      23: astore        4
      25: aload_3
      26: invokevirtual #156                // Method org/apache/activemq/command/ActiveMQMessage.isExpired:()Z
      29: ifeq          48
      32: new           #157                // class org/apache/activemq/command/MessageAck
      35: dup
      36: aload_2
      37: bipush        6
      39: iconst_1
      40: invokespecial #158                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
      43: astore        4
      45: goto          130
      48: aload_0
      49: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      52: aload_0
      53: aload_3
      54: invokevirtual #159                // Method org/apache/activemq/ActiveMQConnection.isDuplicate:(Lorg/apache/activemq/ActiveMQDispatcher;Lorg/apache/activemq/command/Message;)Z
      57: ifeq          130
      60: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      63: ldc           #160                // String {} got duplicate: {}
      65: aload_0
      66: aload_3
      67: invokevirtual #161                // Method org/apache/activemq/command/ActiveMQMessage.getMessageId:()Lorg/apache/activemq/command/MessageId;
      70: invokeinterface #162,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      75: new           #157                // class org/apache/activemq/command/MessageAck
      78: dup
      79: aload_2
      80: iconst_1
      81: iconst_1
      82: invokespecial #158                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
      85: astore        4
      87: aload         4
      89: aload_2
      90: invokevirtual #155                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      93: invokevirtual #163                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      96: invokevirtual #164                // Method org/apache/activemq/command/MessageAck.setFirstMessageId:(Lorg/apache/activemq/command/MessageId;)V
      99: aload         4
     101: new           #165                // class java/lang/Throwable
     104: dup
     105: new           #92                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #166                // String Duplicate delivery to
     114: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_0
     118: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokespecial #167                // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
     127: invokevirtual #168                // Method org/apache/activemq/command/MessageAck.setPoisonCause:(Ljava/lang/Throwable;)V
     130: aload         4
     132: ifnull        177
     135: aload_0
     136: aload         4
     138: invokevirtual #169                // Method asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     141: goto          0
     144: astore        5
     146: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     149: ldc           #170                // String error dispatching ack: {}
     151: aload         4
     153: aload         5
     155: invokeinterface #171,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     160: aload_0
     161: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     164: aload         5
     166: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
     169: goto          0
     172: astore        6
     174: goto          0
     177: aload_0
     178: invokevirtual #172                // Method isClientAcknowledge:()Z
     181: ifne          191
     184: aload_0
     185: invokevirtual #173                // Method isIndividualAcknowledge:()Z
     188: ifeq          203
     191: aload_3
     192: new           #174                // class org/apache/activemq/ActiveMQSession$4
     195: dup
     196: aload_0
     197: invokespecial #175                // Method org/apache/activemq/ActiveMQSession$4."<init>":(Lorg/apache/activemq/ActiveMQSession;)V
     200: invokevirtual #176                // Method org/apache/activemq/command/ActiveMQMessage.setAcknowledgeCallback:(Lorg/apache/activemq/util/Callback;)V
     203: aload_0
     204: getfield      #177                // Field deliveryListener:Lorg/apache/activemq/ActiveMQSession$DeliveryListener;
     207: ifnull        221
     210: aload_0
     211: getfield      #177                // Field deliveryListener:Lorg/apache/activemq/ActiveMQSession$DeliveryListener;
     214: aload_0
     215: aload_3
     216: invokeinterface #178,  3          // InterfaceMethod org/apache/activemq/ActiveMQSession$DeliveryListener.beforeDelivery:(Lorg/apache/activemq/ActiveMQSession;Ljavax/jms/Message;)V
     221: aload_2
     222: aload_0
     223: invokevirtual #179                // Method getNextDeliveryId:()J
     226: invokevirtual #180                // Method org/apache/activemq/command/MessageDispatch.setDeliverySequenceId:(J)V
     229: new           #157                // class org/apache/activemq/command/MessageAck
     232: dup
     233: aload_2
     234: iconst_2
     235: iconst_1
     236: invokespecial #158                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
     239: astore        5
     241: aload         5
     243: aload_2
     244: invokevirtual #155                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     247: invokevirtual #163                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     250: invokevirtual #164                // Method org/apache/activemq/command/MessageAck.setFirstMessageId:(Lorg/apache/activemq/command/MessageId;)V
     253: aload_0
     254: invokevirtual #181                // Method doStartTransaction:()V
     257: aload         5
     259: aload_0
     260: invokevirtual #105                // Method getTransactionContext:()Lorg/apache/activemq/TransactionContext;
     263: invokevirtual #98                 // Method org/apache/activemq/TransactionContext.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     266: invokevirtual #182                // Method org/apache/activemq/command/MessageAck.setTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
     269: aload         5
     271: invokevirtual #183                // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     274: ifnull        295
     277: aload_0
     278: invokevirtual #105                // Method getTransactionContext:()Lorg/apache/activemq/TransactionContext;
     281: new           #184                // class org/apache/activemq/ActiveMQSession$5
     284: dup
     285: aload_0
     286: aload         5
     288: aload_2
     289: invokespecial #185                // Method org/apache/activemq/ActiveMQSession$5."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/MessageAck;Lorg/apache/activemq/command/MessageDispatch;)V
     292: invokevirtual #109                // Method org/apache/activemq/TransactionContext.addSynchronization:(Lorg/apache/activemq/transaction/Synchronization;)V
     295: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     298: ldc           #186                // String {} onMessage({})
     300: aload_0
     301: aload_3
     302: invokevirtual #161                // Method org/apache/activemq/command/ActiveMQMessage.getMessageId:()Lorg/apache/activemq/command/MessageId;
     305: invokeinterface #187,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     310: aload_0
     311: getfield      #152                // Field messageListener:Ljavax/jms/MessageListener;
     314: aload_3
     315: invokeinterface #188,  2          // InterfaceMethod javax/jms/MessageListener.onMessage:(Ljavax/jms/Message;)V
     320: aload         5
     322: invokevirtual #183                // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     325: ifnonnull     438
     328: aload_0
     329: aload         5
     331: invokevirtual #169                // Method asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     334: goto          438
     337: astore        6
     339: aload_0
     340: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     343: aload         6
     345: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
     348: goto          438
     351: astore        6
     353: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     356: ldc           #189                // String error dispatching message:
     358: aload         6
     360: invokeinterface #190,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     365: aload_0
     366: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     369: aload         6
     371: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
     374: aload         5
     376: invokevirtual #183                // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     379: ifnonnull     438
     382: aload_0
     383: aload         5
     385: invokevirtual #169                // Method asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     388: goto          438
     391: astore        6
     393: aload_0
     394: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     397: aload         6
     399: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
     402: goto          438
     405: astore        7
     407: aload         5
     409: invokevirtual #183                // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     412: ifnonnull     435
     415: aload_0
     416: aload         5
     418: invokevirtual #169                // Method asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     421: goto          435
     424: astore        8
     426: aload_0
     427: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     430: aload         8
     432: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
     435: aload         7
     437: athrow
     438: aload_0
     439: getfield      #177                // Field deliveryListener:Lorg/apache/activemq/ActiveMQSession$DeliveryListener;
     442: ifnull        456
     445: aload_0
     446: getfield      #177                // Field deliveryListener:Lorg/apache/activemq/ActiveMQSession$DeliveryListener;
     449: aload_0
     450: aload_3
     451: invokeinterface #191,  3          // InterfaceMethod org/apache/activemq/ActiveMQSession$DeliveryListener.afterDelivery:(Lorg/apache/activemq/ActiveMQSession;Ljavax/jms/Message;)V
     456: goto          0
     459: return
    Exception table:
       from    to  target type
         135   141   144   Class java/lang/Throwable
         135   141   172   any
         144   169   172   any
         172   174   172   any
         328   334   337   Class java/lang/Throwable
         241   320   351   Class java/lang/Throwable
         382   388   391   Class java/lang/Throwable
         241   320   405   any
         351   374   405   any
         415   421   424   Class java/lang/Throwable
         405   407   405   any

  public javax.jms.MessageProducer createProducer(javax.jms.Destination) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: instanceof    #192                // class org/apache/activemq/CustomDestination
       8: ifeq          24
      11: aload_1
      12: checkcast     #192                // class org/apache/activemq/CustomDestination
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokeinterface #193,  2          // InterfaceMethod org/apache/activemq/CustomDestination.createProducer:(Lorg/apache/activemq/ActiveMQSession;)Ljavax/jms/MessageProducer;
      23: areturn
      24: aload_0
      25: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      28: invokevirtual #194                // Method org/apache/activemq/ActiveMQConnection.getSendTimeout:()I
      31: istore_2
      32: new           #143                // class org/apache/activemq/ActiveMQMessageProducer
      35: dup
      36: aload_0
      37: aload_0
      38: invokevirtual #195                // Method getNextProducerId:()Lorg/apache/activemq/command/ProducerId;
      41: aload_1
      42: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      45: iload_2
      46: invokespecial #197                // Method org/apache/activemq/ActiveMQMessageProducer."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ProducerId;Lorg/apache/activemq/command/ActiveMQDestination;I)V
      49: areturn

  public javax.jms.MessageConsumer createConsumer(javax.jms.Destination) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #198                // class java/lang/String
       6: invokevirtual #199                // Method createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;)Ljavax/jms/MessageConsumer;
       9: areturn

  public javax.jms.MessageConsumer createConsumer(javax.jms.Destination, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #200                // Method createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;Z)Ljavax/jms/MessageConsumer;
       7: areturn

  public javax.jms.MessageConsumer createConsumer(javax.jms.Destination, javax.jms.MessageListener) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #201                // Method createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;Ljavax/jms/MessageListener;)Ljavax/jms/MessageConsumer;
       7: areturn

  public javax.jms.MessageConsumer createConsumer(javax.jms.Destination, java.lang.String, javax.jms.MessageListener) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_3
       5: invokevirtual #202                // Method createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;ZLjavax/jms/MessageListener;)Ljavax/jms/MessageConsumer;
       8: areturn

  public javax.jms.MessageConsumer createConsumer(javax.jms.Destination, java.lang.String, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #202                // Method createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;ZLjavax/jms/MessageListener;)Ljavax/jms/MessageConsumer;
       8: areturn

  public javax.jms.MessageConsumer createConsumer(javax.jms.Destination, java.lang.String, boolean, javax.jms.MessageListener) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: instanceof    #192                // class org/apache/activemq/CustomDestination
       8: ifeq          28
      11: aload_1
      12: checkcast     #192                // class org/apache/activemq/CustomDestination
      15: astore        5
      17: aload         5
      19: aload_0
      20: aload_2
      21: iload_3
      22: invokeinterface #203,  4          // InterfaceMethod org/apache/activemq/CustomDestination.createConsumer:(Lorg/apache/activemq/ActiveMQSession;Ljava/lang/String;Z)Ljavax/jms/MessageConsumer;
      27: areturn
      28: aload_0
      29: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      32: invokevirtual #204                // Method org/apache/activemq/ActiveMQConnection.getPrefetchPolicy:()Lorg/apache/activemq/ActiveMQPrefetchPolicy;
      35: astore        5
      37: iconst_0
      38: istore        6
      40: aload_1
      41: instanceof    #205                // class javax/jms/Topic
      44: ifeq          57
      47: aload         5
      49: invokevirtual #206                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getTopicPrefetch:()I
      52: istore        6
      54: goto          64
      57: aload         5
      59: invokevirtual #207                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getQueuePrefetch:()I
      62: istore        6
      64: aload_1
      65: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      68: astore        7
      70: new           #124                // class org/apache/activemq/ActiveMQMessageConsumer
      73: dup
      74: aload_0
      75: aload_0
      76: invokevirtual #208                // Method getNextConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      79: aload         7
      81: aconst_null
      82: aload_2
      83: iload         6
      85: aload         5
      87: invokevirtual #209                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getMaximumPendingMessageLimit:()I
      90: iload_3
      91: iconst_0
      92: aload_0
      93: invokevirtual #210                // Method isAsyncDispatch:()Z
      96: aload         4
      98: invokespecial #211                // Method org/apache/activemq/ActiveMQMessageConsumer."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/String;Ljava/lang/String;IIZZZLjavax/jms/MessageListener;)V
     101: areturn

  public javax.jms.Queue createQueue(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: ldc           #212                // String ID:
       7: invokevirtual #213                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ifeq          22
      13: new           #214                // class org/apache/activemq/command/ActiveMQTempQueue
      16: dup
      17: aload_1
      18: invokespecial #215                // Method org/apache/activemq/command/ActiveMQTempQueue."<init>":(Ljava/lang/String;)V
      21: areturn
      22: new           #216                // class org/apache/activemq/command/ActiveMQQueue
      25: dup
      26: aload_1
      27: invokespecial #217                // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
      30: areturn

  public javax.jms.Topic createTopic(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: ldc           #212                // String ID:
       7: invokevirtual #213                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ifeq          22
      13: new           #218                // class org/apache/activemq/command/ActiveMQTempTopic
      16: dup
      17: aload_1
      18: invokespecial #219                // Method org/apache/activemq/command/ActiveMQTempTopic."<init>":(Ljava/lang/String;)V
      21: areturn
      22: new           #220                // class org/apache/activemq/command/ActiveMQTopic
      25: dup
      26: aload_1
      27: invokespecial #221                // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
      30: areturn

  public javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: aconst_null
       8: iconst_0
       9: invokevirtual #222                // Method createDurableSubscriber:(Ljavax/jms/Topic;Ljava/lang/String;Ljava/lang/String;Z)Ljavax/jms/TopicSubscriber;
      12: areturn

  public javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic, java.lang.String, java.lang.String, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: ifnonnull     18
       8: new           #223                // class javax/jms/InvalidDestinationException
      11: dup
      12: ldc           #224                // String Topic cannot be null
      14: invokespecial #225                // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: instanceof    #192                // class org/apache/activemq/CustomDestination
      22: ifeq          44
      25: aload_1
      26: checkcast     #192                // class org/apache/activemq/CustomDestination
      29: astore        5
      31: aload         5
      33: aload_0
      34: aload_2
      35: aload_3
      36: iload         4
      38: invokeinterface #226,  5          // InterfaceMethod org/apache/activemq/CustomDestination.createDurableSubscriber:(Lorg/apache/activemq/ActiveMQSession;Ljava/lang/String;Ljava/lang/String;Z)Ljavax/jms/TopicSubscriber;
      43: areturn
      44: aload_0
      45: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      48: invokevirtual #227                // Method org/apache/activemq/ActiveMQConnection.checkClientIDWasManuallySpecified:()V
      51: aload_0
      52: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      55: invokevirtual #204                // Method org/apache/activemq/ActiveMQConnection.getPrefetchPolicy:()Lorg/apache/activemq/ActiveMQPrefetchPolicy;
      58: astore        5
      60: aload_0
      61: invokevirtual #228                // Method isAutoAcknowledge:()Z
      64: ifeq          85
      67: aload_0
      68: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      71: invokevirtual #229                // Method org/apache/activemq/ActiveMQConnection.isOptimizedMessageDispatch:()Z
      74: ifeq          85
      77: aload         5
      79: invokevirtual #230                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getOptimizeDurableTopicPrefetch:()I
      82: goto          90
      85: aload         5
      87: invokevirtual #231                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getDurableTopicPrefetch:()I
      90: istore        6
      92: aload         5
      94: invokevirtual #209                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getMaximumPendingMessageLimit:()I
      97: istore        7
      99: new           #232                // class org/apache/activemq/ActiveMQTopicSubscriber
     102: dup
     103: aload_0
     104: aload_0
     105: invokevirtual #208                // Method getNextConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     108: aload_1
     109: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
     112: aload_2
     113: aload_3
     114: iload         6
     116: iload         7
     118: iload         4
     120: iconst_0
     121: aload_0
     122: getfield      #28                 // Field asyncDispatch:Z
     125: invokespecial #233                // Method org/apache/activemq/ActiveMQTopicSubscriber."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/String;Ljava/lang/String;IIZZZ)V
     128: areturn

  public javax.jms.QueueBrowser createBrowser(javax.jms.Queue) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokevirtual #234                // Method createBrowser:(Ljavax/jms/Queue;Ljava/lang/String;)Ljavax/jms/QueueBrowser;
      10: areturn

  public javax.jms.QueueBrowser createBrowser(javax.jms.Queue, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: new           #235                // class org/apache/activemq/ActiveMQQueueBrowser
       7: dup
       8: aload_0
       9: aload_0
      10: invokevirtual #208                // Method getNextConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      13: aload_1
      14: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      17: aload_2
      18: aload_0
      19: getfield      #28                 // Field asyncDispatch:Z
      22: invokespecial #236                // Method org/apache/activemq/ActiveMQQueueBrowser."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/String;Z)V
      25: areturn

  public javax.jms.TemporaryQueue createTemporaryQueue() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       8: iconst_0
       9: invokevirtual #237                // Method org/apache/activemq/ActiveMQConnection.createTempDestination:(Z)Lorg/apache/activemq/command/ActiveMQTempDestination;
      12: checkcast     #238                // class javax/jms/TemporaryQueue
      15: areturn

  public javax.jms.TemporaryTopic createTemporaryTopic() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       8: iconst_1
       9: invokevirtual #237                // Method org/apache/activemq/ActiveMQConnection.createTempDestination:(Z)Lorg/apache/activemq/command/ActiveMQTempDestination;
      12: checkcast     #239                // class javax/jms/TemporaryTopic
      15: areturn

  public javax.jms.QueueReceiver createReceiver(javax.jms.Queue) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokevirtual #240                // Method createReceiver:(Ljavax/jms/Queue;Ljava/lang/String;)Ljavax/jms/QueueReceiver;
      10: areturn

  public javax.jms.QueueReceiver createReceiver(javax.jms.Queue, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: instanceof    #192                // class org/apache/activemq/CustomDestination
       8: ifeq          25
      11: aload_1
      12: checkcast     #192                // class org/apache/activemq/CustomDestination
      15: astore_3
      16: aload_3
      17: aload_0
      18: aload_2
      19: invokeinterface #241,  3          // InterfaceMethod org/apache/activemq/CustomDestination.createReceiver:(Lorg/apache/activemq/ActiveMQSession;Ljava/lang/String;)Ljavax/jms/QueueReceiver;
      24: areturn
      25: aload_0
      26: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      29: invokevirtual #204                // Method org/apache/activemq/ActiveMQConnection.getPrefetchPolicy:()Lorg/apache/activemq/ActiveMQPrefetchPolicy;
      32: astore_3
      33: new           #242                // class org/apache/activemq/ActiveMQQueueReceiver
      36: dup
      37: aload_0
      38: aload_0
      39: invokevirtual #208                // Method getNextConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      42: aload_1
      43: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      46: aload_2
      47: aload_3
      48: invokevirtual #207                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getQueuePrefetch:()I
      51: aload_3
      52: invokevirtual #209                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getMaximumPendingMessageLimit:()I
      55: aload_0
      56: getfield      #28                 // Field asyncDispatch:Z
      59: invokespecial #243                // Method org/apache/activemq/ActiveMQQueueReceiver."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/String;IIZ)V
      62: areturn

  public javax.jms.QueueSender createSender(javax.jms.Queue) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: instanceof    #192                // class org/apache/activemq/CustomDestination
       8: ifeq          24
      11: aload_1
      12: checkcast     #192                // class org/apache/activemq/CustomDestination
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokeinterface #244,  2          // InterfaceMethod org/apache/activemq/CustomDestination.createSender:(Lorg/apache/activemq/ActiveMQSession;)Ljavax/jms/QueueSender;
      23: areturn
      24: aload_0
      25: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      28: invokevirtual #194                // Method org/apache/activemq/ActiveMQConnection.getSendTimeout:()I
      31: istore_2
      32: new           #245                // class org/apache/activemq/ActiveMQQueueSender
      35: dup
      36: aload_0
      37: aload_1
      38: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      41: iload_2
      42: invokespecial #246                // Method org/apache/activemq/ActiveMQQueueSender."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ActiveMQDestination;I)V
      45: areturn

  public javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: aconst_null
       7: iconst_0
       8: invokevirtual #247                // Method createSubscriber:(Ljavax/jms/Topic;Ljava/lang/String;Z)Ljavax/jms/TopicSubscriber;
      11: areturn

  public javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic, java.lang.String, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: instanceof    #192                // class org/apache/activemq/CustomDestination
       8: ifeq          28
      11: aload_1
      12: checkcast     #192                // class org/apache/activemq/CustomDestination
      15: astore        4
      17: aload         4
      19: aload_0
      20: aload_2
      21: iload_3
      22: invokeinterface #248,  4          // InterfaceMethod org/apache/activemq/CustomDestination.createSubscriber:(Lorg/apache/activemq/ActiveMQSession;Ljava/lang/String;Z)Ljavax/jms/TopicSubscriber;
      27: areturn
      28: aload_0
      29: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      32: invokevirtual #204                // Method org/apache/activemq/ActiveMQConnection.getPrefetchPolicy:()Lorg/apache/activemq/ActiveMQPrefetchPolicy;
      35: astore        4
      37: new           #232                // class org/apache/activemq/ActiveMQTopicSubscriber
      40: dup
      41: aload_0
      42: aload_0
      43: invokevirtual #208                // Method getNextConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      46: aload_1
      47: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      50: aconst_null
      51: aload_2
      52: aload         4
      54: invokevirtual #206                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getTopicPrefetch:()I
      57: aload         4
      59: invokevirtual #209                // Method org/apache/activemq/ActiveMQPrefetchPolicy.getMaximumPendingMessageLimit:()I
      62: iload_3
      63: iconst_0
      64: aload_0
      65: getfield      #28                 // Field asyncDispatch:Z
      68: invokespecial #233                // Method org/apache/activemq/ActiveMQTopicSubscriber."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/String;Ljava/lang/String;IIZZZ)V
      71: areturn

  public javax.jms.TopicPublisher createPublisher(javax.jms.Topic) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_1
       5: instanceof    #192                // class org/apache/activemq/CustomDestination
       8: ifeq          24
      11: aload_1
      12: checkcast     #192                // class org/apache/activemq/CustomDestination
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokeinterface #249,  2          // InterfaceMethod org/apache/activemq/CustomDestination.createPublisher:(Lorg/apache/activemq/ActiveMQSession;)Ljavax/jms/TopicPublisher;
      23: areturn
      24: aload_0
      25: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      28: invokevirtual #194                // Method org/apache/activemq/ActiveMQConnection.getSendTimeout:()I
      31: istore_2
      32: new           #250                // class org/apache/activemq/ActiveMQTopicPublisher
      35: dup
      36: aload_0
      37: aload_1
      38: invokestatic  #196                // Method org/apache/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      41: iload_2
      42: invokespecial #251                // Method org/apache/activemq/ActiveMQTopicPublisher."<init>":(Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ActiveMQDestination;I)V
      45: areturn

  public void unsubscribe(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       8: aload_1
       9: invokevirtual #252                // Method org/apache/activemq/ActiveMQConnection.unsubscribe:(Ljava/lang/String;)V
      12: return

  public void dispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
       4: aload_1
       5: invokevirtual #253                // Method org/apache/activemq/ActiveMQSessionExecutor.execute:(Lorg/apache/activemq/command/MessageDispatch;)V
       8: goto          26
      11: astore_2
      12: invokestatic  #115                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      15: invokevirtual #116                // Method java/lang/Thread.interrupt:()V
      18: aload_0
      19: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      22: aload_2
      23: invokevirtual #131                // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
      26: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/InterruptedException

  public void acknowledge() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          34
      17: aload_1
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      26: astore_2
      27: aload_2
      28: invokevirtual #255                // Method org/apache/activemq/ActiveMQMessageConsumer.acknowledge:()V
      31: goto          8
      34: return

  protected void addConsumer(org.apache.activemq.ActiveMQMessageConsumer) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #256                // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_1
      10: invokevirtual #257                // Method org/apache/activemq/ActiveMQMessageConsumer.isDurableSubscriber:()Z
      13: ifeq          23
      16: aload_0
      17: getfield      #40                 // Field stats:Lorg/apache/activemq/management/JMSSessionStatsImpl;
      20: invokevirtual #258                // Method org/apache/activemq/management/JMSSessionStatsImpl.onCreateDurableSubscriber:()V
      23: aload_0
      24: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      27: aload_1
      28: invokevirtual #259                // Method org/apache/activemq/ActiveMQMessageConsumer.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      31: aload_0
      32: invokevirtual #260                // Method org/apache/activemq/ActiveMQConnection.addDispatcher:(Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/ActiveMQDispatcher;)V
      35: return

  protected void removeConsumer(org.apache.activemq.ActiveMQMessageConsumer);
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_1
       5: invokevirtual #259                // Method org/apache/activemq/ActiveMQMessageConsumer.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       8: invokevirtual #261                // Method org/apache/activemq/ActiveMQConnection.removeDispatcher:(Lorg/apache/activemq/command/ConsumerId;)V
      11: aload_1
      12: invokevirtual #257                // Method org/apache/activemq/ActiveMQMessageConsumer.isDurableSubscriber:()Z
      15: ifeq          25
      18: aload_0
      19: getfield      #40                 // Field stats:Lorg/apache/activemq/management/JMSSessionStatsImpl;
      22: invokevirtual #262                // Method org/apache/activemq/management/JMSSessionStatsImpl.onRemoveDurableSubscriber:()V
      25: aload_0
      26: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      29: aload_1
      30: invokevirtual #263                // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      38: aload_1
      39: invokevirtual #264                // Method org/apache/activemq/ActiveMQConnection.removeDispatcher:(Lorg/apache/activemq/ActiveMQDispatcher;)V
      42: return

  protected void addProducer(org.apache.activemq.ActiveMQMessageProducer) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field producers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #256                // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      13: aload_1
      14: invokevirtual #265                // Method org/apache/activemq/ActiveMQMessageProducer.getProducerInfo:()Lorg/apache/activemq/command/ProducerInfo;
      17: invokevirtual #266                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      20: aload_1
      21: invokevirtual #267                // Method org/apache/activemq/ActiveMQConnection.addProducer:(Lorg/apache/activemq/command/ProducerId;Lorg/apache/activemq/ActiveMQMessageProducer;)V
      24: return

  protected void removeProducer(org.apache.activemq.ActiveMQMessageProducer);
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_1
       5: invokevirtual #265                // Method org/apache/activemq/ActiveMQMessageProducer.getProducerInfo:()Lorg/apache/activemq/command/ProducerInfo;
       8: invokevirtual #266                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      11: invokevirtual #268                // Method org/apache/activemq/ActiveMQConnection.removeProducer:(Lorg/apache/activemq/command/ProducerId;)V
      14: aload_0
      15: getfield      #17                 // Field producers:Ljava/util/concurrent/CopyOnWriteArrayList;
      18: aload_1
      19: invokevirtual #263                // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      22: pop
      23: return

  protected void start() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #269                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      12: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      15: astore_1
      16: aload_1
      17: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          42
      25: aload_1
      26: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      34: astore_2
      35: aload_2
      36: invokevirtual #270                // Method org/apache/activemq/ActiveMQMessageConsumer.start:()V
      39: goto          16
      42: aload_0
      43: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
      46: invokevirtual #271                // Method org/apache/activemq/ActiveMQSessionExecutor.start:()V
      49: return

  protected void stop() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          34
      17: aload_1
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      26: astore_2
      27: aload_2
      28: invokevirtual #272                // Method org/apache/activemq/ActiveMQMessageConsumer.stop:()V
      31: goto          8
      34: aload_0
      35: getfield      #13                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: iconst_0
      39: invokevirtual #269                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      42: aload_0
      43: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
      46: invokevirtual #136                // Method org/apache/activemq/ActiveMQSessionExecutor.stop:()V
      49: return

  protected org.apache.activemq.command.SessionId getSessionId();
    Code:
       0: aload_0
       1: getfield      #34                 // Field info:Lorg/apache/activemq/command/SessionInfo;
       4: invokevirtual #273                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
       7: areturn

  protected org.apache.activemq.command.ConsumerId getNextConsumerId();
    Code:
       0: new           #274                // class org/apache/activemq/command/ConsumerId
       3: dup
       4: aload_0
       5: getfield      #34                 // Field info:Lorg/apache/activemq/command/SessionInfo;
       8: invokevirtual #273                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      11: aload_0
      12: getfield      #8                  // Field consumerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      15: invokevirtual #275                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
      18: invokespecial #276                // Method org/apache/activemq/command/ConsumerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      21: areturn

  protected org.apache.activemq.command.ProducerId getNextProducerId();
    Code:
       0: new           #277                // class org/apache/activemq/command/ProducerId
       3: dup
       4: aload_0
       5: getfield      #34                 // Field info:Lorg/apache/activemq/command/SessionInfo;
       8: invokevirtual #273                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      11: aload_0
      12: getfield      #9                  // Field producerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      15: invokevirtual #275                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
      18: invokespecial #278                // Method org/apache/activemq/command/ProducerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      21: areturn

  protected void send(org.apache.activemq.ActiveMQMessageProducer, org.apache.activemq.command.ActiveMQDestination, javax.jms.Message, int, int, long, org.apache.activemq.usage.MemoryUsage, int, org.apache.activemq.AsyncCallback) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method checkClosed:()V
       4: aload_2
       5: invokevirtual #279                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
       8: ifeq          50
      11: aload_0
      12: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      15: aload_2
      16: invokevirtual #280                // Method org/apache/activemq/ActiveMQConnection.isDeleted:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      19: ifeq          50
      22: new           #223                // class javax/jms/InvalidDestinationException
      25: dup
      26: new           #92                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc_w         #281                // String Cannot publish to a deleted Destination:
      36: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_2
      40: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #225                // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #19                 // Field sendMutex:Ljava/lang/Object;
      54: dup
      55: astore        11
      57: monitorenter
      58: aload_0
      59: invokevirtual #181                // Method doStartTransaction:()V
      62: aload_0
      63: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      66: invokevirtual #98                 // Method org/apache/activemq/TransactionContext.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      69: astore        12
      71: aload_1
      72: invokevirtual #282                // Method org/apache/activemq/ActiveMQMessageProducer.getMessageSequence:()J
      75: lstore        13
      77: aload_3
      78: iload         4
      80: invokeinterface #283,  2          // InterfaceMethod javax/jms/Message.setJMSDeliveryMode:(I)V
      85: lconst_0
      86: lstore        15
      88: aload_1
      89: invokevirtual #284                // Method org/apache/activemq/ActiveMQMessageProducer.getDisableMessageTimestamp:()Z
      92: ifne          122
      95: invokestatic  #285                // Method java/lang/System.currentTimeMillis:()J
      98: lstore        17
     100: aload_3
     101: lload         17
     103: invokeinterface #286,  3          // InterfaceMethod javax/jms/Message.setJMSTimestamp:(J)V
     108: lload         6
     110: lconst_0
     111: lcmp
     112: ifle          122
     115: lload         6
     117: lload         17
     119: ladd
     120: lstore        15
     122: aload_3
     123: lload         15
     125: invokeinterface #287,  3          // InterfaceMethod javax/jms/Message.setJMSExpiration:(J)V
     130: aload_3
     131: iload         5
     133: invokeinterface #288,  2          // InterfaceMethod javax/jms/Message.setJMSPriority:(I)V
     138: aload_3
     139: iconst_0
     140: invokeinterface #289,  2          // InterfaceMethod javax/jms/Message.setJMSRedelivered:(Z)V
     145: aload_3
     146: aload_0
     147: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     150: invokestatic  #290                // Method org/apache/activemq/ActiveMQMessageTransformation.transformMessage:(Ljavax/jms/Message;Lorg/apache/activemq/ActiveMQConnection;)Lorg/apache/activemq/command/ActiveMQMessage;
     153: astore        17
     155: aload         17
     157: aload_2
     158: invokevirtual #291                // Method org/apache/activemq/command/ActiveMQMessage.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     161: aload         17
     163: new           #292                // class org/apache/activemq/command/MessageId
     166: dup
     167: aload_1
     168: invokevirtual #265                // Method org/apache/activemq/ActiveMQMessageProducer.getProducerInfo:()Lorg/apache/activemq/command/ProducerInfo;
     171: invokevirtual #266                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     174: lload         13
     176: invokespecial #293                // Method org/apache/activemq/command/MessageId."<init>":(Lorg/apache/activemq/command/ProducerId;J)V
     179: invokevirtual #294                // Method org/apache/activemq/command/ActiveMQMessage.setMessageId:(Lorg/apache/activemq/command/MessageId;)V
     182: aload         17
     184: aload_3
     185: if_acmpeq     209
     188: aload_3
     189: aload         17
     191: invokevirtual #161                // Method org/apache/activemq/command/ActiveMQMessage.getMessageId:()Lorg/apache/activemq/command/MessageId;
     194: invokevirtual #295                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
     197: invokeinterface #296,  2          // InterfaceMethod javax/jms/Message.setJMSMessageID:(Ljava/lang/String;)V
     202: aload_3
     203: aload_2
     204: invokeinterface #297,  2          // InterfaceMethod javax/jms/Message.setJMSDestination:(Ljavax/jms/Destination;)V
     209: aload         17
     211: aconst_null
     212: invokevirtual #298                // Method org/apache/activemq/command/ActiveMQMessage.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     215: aload         17
     217: aload         12
     219: invokevirtual #299                // Method org/apache/activemq/command/ActiveMQMessage.setTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
     222: aload_0
     223: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     226: invokevirtual #300                // Method org/apache/activemq/ActiveMQConnection.isCopyMessageOnSend:()Z
     229: ifeq          242
     232: aload         17
     234: invokevirtual #301                // Method org/apache/activemq/command/ActiveMQMessage.copy:()Lorg/apache/activemq/command/Message;
     237: checkcast     #61                 // class org/apache/activemq/command/ActiveMQMessage
     240: astore        17
     242: aload         17
     244: aload_0
     245: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     248: invokevirtual #148                // Method org/apache/activemq/command/ActiveMQMessage.setConnection:(Lorg/apache/activemq/ActiveMQConnection;)V
     251: aload         17
     253: invokevirtual #302                // Method org/apache/activemq/command/ActiveMQMessage.onSend:()V
     256: aload         17
     258: aload         17
     260: invokevirtual #161                // Method org/apache/activemq/command/ActiveMQMessage.getMessageId:()Lorg/apache/activemq/command/MessageId;
     263: invokevirtual #303                // Method org/apache/activemq/command/MessageId.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     266: invokevirtual #304                // Method org/apache/activemq/command/ActiveMQMessage.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
     269: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     272: invokeinterface #305,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     277: ifeq          316
     280: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     283: new           #92                 // class java/lang/StringBuilder
     286: dup
     287: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     290: aload_0
     291: invokevirtual #94                 // Method getSessionId:()Lorg/apache/activemq/command/SessionId;
     294: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     297: ldc_w         #306                // String  sending message:
     300: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: aload         17
     305: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     308: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     311: invokeinterface #307,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     316: aload         10
     318: ifnonnull     399
     321: iload         9
     323: ifgt          399
     326: aload         17
     328: invokevirtual #308                // Method org/apache/activemq/command/ActiveMQMessage.isResponseRequired:()Z
     331: ifne          399
     334: aload_0
     335: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     338: invokevirtual #309                // Method org/apache/activemq/ActiveMQConnection.isAlwaysSyncSend:()Z
     341: ifne          399
     344: aload         17
     346: invokevirtual #310                // Method org/apache/activemq/command/ActiveMQMessage.isPersistent:()Z
     349: ifeq          367
     352: aload_0
     353: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     356: invokevirtual #311                // Method org/apache/activemq/ActiveMQConnection.isUseAsyncSend:()Z
     359: ifne          367
     362: aload         12
     364: ifnull        399
     367: aload_0
     368: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     371: aload         17
     373: invokevirtual #41                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     376: aload         8
     378: ifnull        435
     381: aload         17
     383: invokevirtual #312                // Method org/apache/activemq/command/ActiveMQMessage.getSize:()I
     386: istore        18
     388: aload         8
     390: iload         18
     392: i2l
     393: invokevirtual #313                // Method org/apache/activemq/usage/MemoryUsage.increaseUsage:(J)V
     396: goto          435
     399: iload         9
     401: ifle          424
     404: aload         10
     406: ifnonnull     424
     409: aload_0
     410: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     413: aload         17
     415: iload         9
     417: invokevirtual #314                // Method org/apache/activemq/ActiveMQConnection.syncSendPacket:(Lorg/apache/activemq/command/Command;I)Lorg/apache/activemq/command/Response;
     420: pop
     421: goto          435
     424: aload_0
     425: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     428: aload         17
     430: aload         10
     432: invokevirtual #315                // Method org/apache/activemq/ActiveMQConnection.syncSendPacket:(Lorg/apache/activemq/command/Command;Lorg/apache/activemq/AsyncCallback;)V
     435: aload         11
     437: monitorexit
     438: goto          449
     441: astore        19
     443: aload         11
     445: monitorexit
     446: aload         19
     448: athrow
     449: return
    Exception table:
       from    to  target type
          58   438   441   any
         441   446   441   any

  protected void doStartTransaction() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method getTransacted:()Z
       4: ifeq          24
       7: aload_0
       8: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      11: invokevirtual #106                // Method org/apache/activemq/TransactionContext.isInXATransaction:()Z
      14: ifne          24
      17: aload_0
      18: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      21: invokevirtual #316                // Method org/apache/activemq/TransactionContext.begin:()V
      24: return

  public boolean hasUncomsumedMessages();
    Code:
       0: aload_0
       1: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
       4: invokevirtual #317                // Method org/apache/activemq/ActiveMQSessionExecutor.hasUncomsumedMessages:()Z
       7: ireturn

  public boolean isTransacted();
    Code:
       0: aload_0
       1: getfield      #27                 // Field acknowledgementMode:I
       4: ifeq          17
       7: aload_0
       8: getfield      #55                 // Field transactionContext:Lorg/apache/activemq/TransactionContext;
      11: invokevirtual #106                // Method org/apache/activemq/TransactionContext.isInXATransaction:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  protected boolean isClientAcknowledge();
    Code:
       0: aload_0
       1: getfield      #27                 // Field acknowledgementMode:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isAutoAcknowledge();
    Code:
       0: aload_0
       1: getfield      #27                 // Field acknowledgementMode:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDupsOkAcknowledge();
    Code:
       0: aload_0
       1: getfield      #27                 // Field acknowledgementMode:I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isIndividualAcknowledge();
    Code:
       0: aload_0
       1: getfield      #27                 // Field acknowledgementMode:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public org.apache.activemq.ActiveMQSession$DeliveryListener getDeliveryListener();
    Code:
       0: aload_0
       1: getfield      #177                // Field deliveryListener:Lorg/apache/activemq/ActiveMQSession$DeliveryListener;
       4: areturn

  public void setDeliveryListener(org.apache.activemq.ActiveMQSession$DeliveryListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #177                // Field deliveryListener:Lorg/apache/activemq/ActiveMQSession$DeliveryListener;
       5: return

  protected org.apache.activemq.command.SessionInfo getSessionInfo() throws javax.jms.JMSException;
    Code:
       0: new           #30                 // class org/apache/activemq/command/SessionInfo
       3: dup
       4: aload_0
       5: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       8: invokevirtual #31                 // Method org/apache/activemq/ActiveMQConnection.getConnectionInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      11: aload_0
      12: invokevirtual #94                 // Method getSessionId:()Lorg/apache/activemq/command/SessionId;
      15: invokevirtual #32                 // Method org/apache/activemq/command/SessionId.getValue:()J
      18: invokespecial #33                 // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
      21: astore_1
      22: aload_1
      23: areturn

  public void asyncSendPacket(org.apache.activemq.command.Command) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_1
       5: invokevirtual #41                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
       8: return

  public org.apache.activemq.command.Response syncSendPacket(org.apache.activemq.command.Command) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_1
       5: invokevirtual #318                // Method org/apache/activemq/ActiveMQConnection.syncSendPacket:(Lorg/apache/activemq/command/Command;)Lorg/apache/activemq/command/Response;
       8: areturn

  public long getNextDeliveryId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field deliveryIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
       4: invokevirtual #275                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
       7: lreturn

  public void redispatch(org.apache.activemq.ActiveMQDispatcher, org.apache.activemq.MessageDispatchChannel) throws javax.jms.JMSException;
    Code:
       0: aload_2
       1: invokeinterface #319,  1          // InterfaceMethod org/apache/activemq/MessageDispatchChannel.removeAll:()Ljava/util/List;
       6: astore_3
       7: aload_3
       8: invokeinterface #320,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          53
      25: aload         4
      27: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #321                // class org/apache/activemq/command/MessageDispatch
      35: astore        5
      37: aload_0
      38: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      41: aload_1
      42: aload         5
      44: invokevirtual #155                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      47: invokevirtual #322                // Method org/apache/activemq/ActiveMQConnection.rollbackDuplicate:(Lorg/apache/activemq/ActiveMQDispatcher;Lorg/apache/activemq/command/Message;)V
      50: goto          15
      53: aload_3
      54: invokestatic  #323                // Method java/util/Collections.reverse:(Ljava/util/List;)V
      57: aload_3
      58: invokeinterface #324,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: astore        4
      65: aload         4
      67: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          99
      75: aload         4
      77: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #321                // class org/apache/activemq/command/MessageDispatch
      85: astore        5
      87: aload_0
      88: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
      91: aload         5
      93: invokevirtual #325                // Method org/apache/activemq/ActiveMQSessionExecutor.executeFirst:(Lorg/apache/activemq/command/MessageDispatch;)V
      96: goto          65
      99: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #13                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #326                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean isAsyncDispatch();
    Code:
       0: aload_0
       1: getfield      #28                 // Field asyncDispatch:Z
       4: ireturn

  public void setAsyncDispatch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field asyncDispatch:Z
       5: return

  public boolean isSessionAsyncDispatch();
    Code:
       0: aload_0
       1: getfield      #29                 // Field sessionAsyncDispatch:Z
       4: ireturn

  public void setSessionAsyncDispatch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field sessionAsyncDispatch:Z
       5: return

  public org.apache.activemq.MessageTransformer getTransformer();
    Code:
       0: aload_0
       1: getfield      #327                // Field transformer:Lorg/apache/activemq/MessageTransformer;
       4: areturn

  public org.apache.activemq.ActiveMQConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       4: areturn

  public void setTransformer(org.apache.activemq.MessageTransformer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #327                // Field transformer:Lorg/apache/activemq/MessageTransformer;
       5: return

  public org.apache.activemq.blob.BlobTransferPolicy getBlobTransferPolicy();
    Code:
       0: aload_0
       1: getfield      #328                // Field blobTransferPolicy:Lorg/apache/activemq/blob/BlobTransferPolicy;
       4: areturn

  public void setBlobTransferPolicy(org.apache.activemq.blob.BlobTransferPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #328                // Field blobTransferPolicy:Lorg/apache/activemq/blob/BlobTransferPolicy;
       5: return

  public java.util.List<org.apache.activemq.command.MessageDispatch> getUnconsumedMessages();
    Code:
       0: aload_0
       1: getfield      #50                 // Field executor:Lorg/apache/activemq/ActiveMQSessionExecutor;
       4: invokevirtual #329                // Method org/apache/activemq/ActiveMQSessionExecutor.getUnconsumedMessages:()Ljava/util/List;
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #92                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #330                // String ActiveMQSession {id=
      10: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #34                 // Field info:Lorg/apache/activemq/command/SessionInfo;
      17: invokevirtual #273                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      20: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc_w         #331                // String ,started=
      26: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #13                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      33: invokevirtual #326                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      36: invokevirtual #332                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      39: ldc_w         #333                // String }
      42: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  public void checkMessageListener() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #152                // Field messageListener:Ljavax/jms/MessageListener;
       4: ifnull        18
       7: new           #89                 // class javax/jms/IllegalStateException
      10: dup
      11: ldc_w         #334                // String Cannot synchronously receive a message when a MessageListener is set
      14: invokespecial #91                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      22: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          66
      35: aload_1
      36: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      44: astore_2
      45: aload_2
      46: invokevirtual #335                // Method org/apache/activemq/ActiveMQMessageConsumer.hasMessageListener:()Z
      49: ifeq          63
      52: new           #89                 // class javax/jms/IllegalStateException
      55: dup
      56: ldc_w         #334                // String Cannot synchronously receive a message when a MessageListener is set
      59: invokespecial #91                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: goto          26
      66: return

  protected void setOptimizeAcknowledge(boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          35
      17: aload_2
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      26: astore_3
      27: aload_3
      28: iload_1
      29: invokevirtual #336                // Method org/apache/activemq/ActiveMQMessageConsumer.setOptimizeAcknowledge:(Z)V
      32: goto          8
      35: return

  protected void setPrefetchSize(org.apache.activemq.command.ConsumerId, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_3
       8: aload_3
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          52
      17: aload_3
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      26: astore        4
      28: aload         4
      30: invokevirtual #259                // Method org/apache/activemq/ActiveMQMessageConsumer.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      33: aload_1
      34: invokevirtual #337                // Method org/apache/activemq/command/ConsumerId.equals:(Ljava/lang/Object;)Z
      37: ifeq          49
      40: aload         4
      42: iload_2
      43: invokevirtual #338                // Method org/apache/activemq/ActiveMQMessageConsumer.setPrefetchSize:(I)V
      46: goto          52
      49: goto          8
      52: return

  protected void close(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          94
      17: aload_2
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      26: astore_3
      27: aload_3
      28: invokevirtual #259                // Method org/apache/activemq/ActiveMQMessageConsumer.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      31: aload_1
      32: invokevirtual #337                // Method org/apache/activemq/command/ConsumerId.equals:(Ljava/lang/Object;)Z
      35: ifeq          91
      38: aload_3
      39: invokevirtual #339                // Method org/apache/activemq/ActiveMQMessageConsumer.close:()V
      42: goto          60
      45: astore        4
      47: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      50: ldc_w         #340                // String Exception closing consumer
      53: aload         4
      55: invokeinterface #341,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      60: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      63: new           #92                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc_w         #342                // String Closed consumer on Command,
      73: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokeinterface #343,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      88: goto          94
      91: goto          8
      94: return
    Exception table:
       from    to  target type
          38    42    45   Class javax/jms/JMSException

  public boolean isInUse(org.apache.activemq.command.ActiveMQTempDestination);
    Code:
       0: aload_0
       1: getfield      #16                 // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #134                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          40
      17: aload_2
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #124                // class org/apache/activemq/ActiveMQMessageConsumer
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokevirtual #344                // Method org/apache/activemq/ActiveMQMessageConsumer.isInUse:(Lorg/apache/activemq/command/ActiveMQTempDestination;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: goto          8
      40: iconst_0
      41: ireturn

  public long getLastDeliveredSequenceId();
    Code:
       0: aload_0
       1: getfield      #113                // Field lastDeliveredSequenceId:J
       4: lreturn

  protected void sendAck(org.apache.activemq.command.MessageAck) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #345                // Method sendAck:(Lorg/apache/activemq/command/MessageAck;Z)V
       6: return

  protected void sendAck(org.apache.activemq.command.MessageAck, boolean) throws javax.jms.JMSException;
    Code:
       0: iload_2
       1: ifne          21
       4: aload_0
       5: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       8: invokevirtual #346                // Method org/apache/activemq/ActiveMQConnection.isSendAcksAsync:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #88                 // Method getTransacted:()Z
      18: ifeq          29
      21: aload_0
      22: aload_1
      23: invokevirtual #169                // Method asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
      26: goto          35
      29: aload_0
      30: aload_1
      31: invokevirtual #347                // Method syncSendPacket:(Lorg/apache/activemq/command/Command;)Lorg/apache/activemq/command/Response;
      34: pop
      35: return

  protected org.apache.activemq.thread.Scheduler getScheduler() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/apache/activemq/ActiveMQConnection;
       4: invokevirtual #126                // Method org/apache/activemq/ActiveMQConnection.getScheduler:()Lorg/apache/activemq/thread/Scheduler;
       7: areturn

  protected java.util.concurrent.ThreadPoolExecutor getConnectionExecutor();
    Code:
       0: aload_0
       1: getfield      #47                 // Field connectionExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  static void access$000(org.apache.activemq.ActiveMQSession) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method doClose:()V
       4: return

  static boolean access$102(org.apache.activemq.ActiveMQSession, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field synchronizationRegistered:Z
       6: ireturn

  static java.util.concurrent.atomic.AtomicBoolean access$200(org.apache.activemq.ActiveMQSession);
    Code:
       0: aload_0
       1: getfield      #2                  // Field clearInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static org.slf4j.Logger access$300();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #348                // class org/apache/activemq/ActiveMQSession
       3: invokestatic  #349                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
