Compiled from "ActiveMQMessageProducer.java"
public class org.apache.activemq.ActiveMQMessageProducer extends org.apache.activemq.ActiveMQMessageProducerSupport implements org.apache.activemq.management.StatsCapable,org.apache.activemq.Disposable {
  private static final org.slf4j.Logger LOG;

  protected org.apache.activemq.command.ProducerInfo info;

  protected boolean closed;

  private final org.apache.activemq.management.JMSProducerStatsImpl stats;

  private java.util.concurrent.atomic.AtomicLong messageSequence;

  private final long startTime;

  private org.apache.activemq.MessageTransformer transformer;

  private org.apache.activemq.usage.MemoryUsage producerWindow;

  protected org.apache.activemq.ActiveMQMessageProducer(org.apache.activemq.ActiveMQSession, org.apache.activemq.command.ProducerId, org.apache.activemq.command.ActiveMQDestination, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/ActiveMQMessageProducerSupport."<init>":(Lorg/apache/activemq/ActiveMQSession;)V
       5: aload_0
       6: new           #2                  // class org/apache/activemq/command/ProducerInfo
       9: dup
      10: aload_2
      11: invokespecial #3                  // Method org/apache/activemq/command/ProducerInfo."<init>":(Lorg/apache/activemq/command/ProducerId;)V
      14: putfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      17: aload_0
      18: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      21: aload_1
      22: getfield      #5                  // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      25: invokevirtual #6                  // Method org/apache/activemq/ActiveMQConnection.getProducerWindowSize:()I
      28: invokevirtual #7                  // Method org/apache/activemq/command/ProducerInfo.setWindowSize:(I)V
      31: aload_3
      32: ifnull        157
      35: aload_3
      36: invokevirtual #8                  // Method org/apache/activemq/command/ActiveMQDestination.getOptions:()Ljava/util/Map;
      39: ifnull        157
      42: new           #9                  // class java/util/HashMap
      45: dup
      46: aload_3
      47: invokevirtual #8                  // Method org/apache/activemq/command/ActiveMQDestination.getOptions:()Ljava/util/Map;
      50: invokespecial #10                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      53: ldc           #11                 // String producer.
      55: invokestatic  #12                 // Method org/apache/activemq/util/IntrospectionSupport.extractProperties:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;
      58: astore        5
      60: aload_0
      61: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      64: aload         5
      66: invokestatic  #13                 // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;)Z
      69: pop
      70: aload         5
      72: invokeinterface #14,  1           // InterfaceMethod java/util/Map.size:()I
      77: ifle          157
      80: new           #15                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #17                 // String There are
      89: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload         5
      94: invokeinterface #14,  1           // InterfaceMethod java/util/Map.size:()I
      99: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     102: ldc           #20                 // String  producer options that couldn\'t be set on the producer.
     104: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #21                 // String  Check the options are spelled correctly.
     109: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #22                 // String  Unknown parameters=[
     114: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload         5
     119: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     122: ldc           #24                 // String ].
     124: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #25                 // String  This producer cannot be started.
     129: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: astore        6
     137: getstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
     140: aload         6
     142: invokeinterface #28,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     147: new           #29                 // class org/apache/activemq/ConfigurationException
     150: dup
     151: aload         6
     153: invokespecial #30                 // Method org/apache/activemq/ConfigurationException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: aload_0
     158: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
     161: aload_3
     162: invokevirtual #31                 // Method org/apache/activemq/command/ProducerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     165: aload_1
     166: getfield      #5                  // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
     169: invokevirtual #32                 // Method org/apache/activemq/ActiveMQConnection.getProtocolVersion:()I
     172: iconst_3
     173: if_icmplt     249
     176: aload_0
     177: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
     180: invokevirtual #33                 // Method org/apache/activemq/command/ProducerInfo.getWindowSize:()I
     183: ifle          249
     186: aload_0
     187: new           #34                 // class org/apache/activemq/usage/MemoryUsage
     190: dup
     191: new           #15                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #35                 // String Producer Window:
     200: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_2
     204: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #36                 // Method org/apache/activemq/usage/MemoryUsage."<init>":(Ljava/lang/String;)V
     213: putfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
     216: aload_0
     217: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
     220: aload_1
     221: invokevirtual #38                 // Method org/apache/activemq/ActiveMQSession.getConnectionExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     224: invokevirtual #39                 // Method org/apache/activemq/usage/MemoryUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
     227: aload_0
     228: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
     231: aload_0
     232: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
     235: invokevirtual #33                 // Method org/apache/activemq/command/ProducerInfo.getWindowSize:()I
     238: i2l
     239: invokevirtual #40                 // Method org/apache/activemq/usage/MemoryUsage.setLimit:(J)V
     242: aload_0
     243: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
     246: invokevirtual #41                 // Method org/apache/activemq/usage/MemoryUsage.start:()V
     249: aload_0
     250: iconst_2
     251: putfield      #42                 // Field defaultDeliveryMode:I
     254: aload_0
     255: iconst_4
     256: putfield      #43                 // Field defaultPriority:I
     259: aload_0
     260: lconst_0
     261: putfield      #44                 // Field defaultTimeToLive:J
     264: aload_0
     265: invokestatic  #45                 // Method java/lang/System.currentTimeMillis:()J
     268: putfield      #46                 // Field startTime:J
     271: aload_0
     272: new           #47                 // class java/util/concurrent/atomic/AtomicLong
     275: dup
     276: lconst_0
     277: invokespecial #48                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
     280: putfield      #49                 // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
     283: aload_0
     284: new           #50                 // class org/apache/activemq/management/JMSProducerStatsImpl
     287: dup
     288: aload_1
     289: invokevirtual #51                 // Method org/apache/activemq/ActiveMQSession.getSessionStats:()Lorg/apache/activemq/management/JMSSessionStatsImpl;
     292: aload_3
     293: invokespecial #52                 // Method org/apache/activemq/management/JMSProducerStatsImpl."<init>":(Lorg/apache/activemq/management/JMSSessionStatsImpl;Ljavax/jms/Destination;)V
     296: putfield      #53                 // Field stats:Lorg/apache/activemq/management/JMSProducerStatsImpl;
     299: aload_0
     300: getfield      #54                 // Field session:Lorg/apache/activemq/ActiveMQSession;
     303: aload_0
     304: invokevirtual #55                 // Method org/apache/activemq/ActiveMQSession.addProducer:(Lorg/apache/activemq/ActiveMQMessageProducer;)V
     307: aload_0
     308: getfield      #54                 // Field session:Lorg/apache/activemq/ActiveMQSession;
     311: aload_0
     312: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
     315: invokevirtual #56                 // Method org/apache/activemq/ActiveMQSession.syncSendPacket:(Lorg/apache/activemq/command/Command;)Lorg/apache/activemq/command/Response;
     318: pop
     319: goto          335
     322: astore        5
     324: aload_0
     325: getfield      #54                 // Field session:Lorg/apache/activemq/ActiveMQSession;
     328: aload_0
     329: invokevirtual #58                 // Method org/apache/activemq/ActiveMQSession.removeProducer:(Lorg/apache/activemq/ActiveMQMessageProducer;)V
     332: aload         5
     334: athrow
     335: aload_0
     336: iload         4
     338: invokevirtual #59                 // Method setSendTimeout:(I)V
     341: aload_0
     342: aload_1
     343: invokevirtual #60                 // Method org/apache/activemq/ActiveMQSession.getTransformer:()Lorg/apache/activemq/MessageTransformer;
     346: invokevirtual #61                 // Method setTransformer:(Lorg/apache/activemq/MessageTransformer;)V
     349: return
    Exception table:
       from    to  target type
         299   319   322   Class javax/jms/JMSException

  public org.apache.activemq.management.StatsImpl getStats();
    Code:
       0: aload_0
       1: getfield      #53                 // Field stats:Lorg/apache/activemq/management/JMSProducerStatsImpl;
       4: areturn

  public org.apache.activemq.management.JMSProducerStatsImpl getProducerStats();
    Code:
       0: aload_0
       1: getfield      #53                 // Field stats:Lorg/apache/activemq/management/JMSProducerStatsImpl;
       4: areturn

  public javax.jms.Destination getDestination() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
       8: invokevirtual #63                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      11: areturn

  public void close() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field closed:Z
       4: ifne          25
       7: aload_0
       8: invokevirtual #65                 // Method dispose:()V
      11: aload_0
      12: getfield      #54                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      15: aload_0
      16: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      19: invokevirtual #66                 // Method org/apache/activemq/command/ProducerInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      22: invokevirtual #67                 // Method org/apache/activemq/ActiveMQSession.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
      25: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #64                 // Field closed:Z
       4: ifne          34
       7: aload_0
       8: getfield      #54                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      11: aload_0
      12: invokevirtual #58                 // Method org/apache/activemq/ActiveMQSession.removeProducer:(Lorg/apache/activemq/ActiveMQMessageProducer;)V
      15: aload_0
      16: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
      19: ifnull        29
      22: aload_0
      23: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
      26: invokevirtual #68                 // Method org/apache/activemq/usage/MemoryUsage.stop:()V
      29: aload_0
      30: iconst_1
      31: putfield      #64                 // Field closed:Z
      34: return

  protected void checkClosed() throws javax.jms.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field closed:Z
       4: ifeq          17
       7: new           #69                 // class javax/jms/IllegalStateException
      10: dup
      11: ldc           #70                 // String The producer is closed
      13: invokespecial #71                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void send(javax.jms.Destination, javax.jms.Message, int, int, long) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: lload         5
       8: aconst_null
       9: invokevirtual #72                 // Method send:(Ljavax/jms/Destination;Ljavax/jms/Message;IIJLorg/apache/activemq/AsyncCallback;)V
      12: return

  public void send(javax.jms.Message, org.apache.activemq.AsyncCallback) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #73                 // Method getDestination:()Ljavax/jms/Destination;
       5: aload_1
       6: aload_0
       7: getfield      #42                 // Field defaultDeliveryMode:I
      10: aload_0
      11: getfield      #43                 // Field defaultPriority:I
      14: aload_0
      15: getfield      #44                 // Field defaultTimeToLive:J
      18: aload_2
      19: invokevirtual #72                 // Method send:(Ljavax/jms/Destination;Ljavax/jms/Message;IIJLorg/apache/activemq/AsyncCallback;)V
      22: return

  public void send(javax.jms.Destination, javax.jms.Message, org.apache.activemq.AsyncCallback) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #42                 // Field defaultDeliveryMode:I
       7: aload_0
       8: getfield      #43                 // Field defaultPriority:I
      11: aload_0
      12: getfield      #44                 // Field defaultTimeToLive:J
      15: aload_3
      16: invokevirtual #72                 // Method send:(Ljavax/jms/Destination;Ljavax/jms/Message;IIJLorg/apache/activemq/AsyncCallback;)V
      19: return

  public void send(javax.jms.Message, int, int, long, org.apache.activemq.AsyncCallback) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #73                 // Method getDestination:()Ljavax/jms/Destination;
       5: aload_1
       6: iload_2
       7: iload_3
       8: lload         4
      10: aload         6
      12: invokevirtual #72                 // Method send:(Ljavax/jms/Destination;Ljavax/jms/Message;IIJLorg/apache/activemq/AsyncCallback;)V
      15: return

  public void send(javax.jms.Destination, javax.jms.Message, int, int, long, org.apache.activemq.AsyncCallback) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method checkClosed:()V
       4: aload_1
       5: ifnonnull     38
       8: aload_0
       9: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      12: invokevirtual #63                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      15: ifnonnull     28
      18: new           #74                 // class java/lang/UnsupportedOperationException
      21: dup
      22: ldc           #75                 // String A destination must be specified.
      24: invokespecial #76                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #77                 // class javax/jms/InvalidDestinationException
      31: dup
      32: ldc           #78                 // String Don\'t understand null destinations
      34: invokespecial #79                 // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: aload_0
      40: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      43: invokevirtual #63                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      46: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          61
      52: aload_1
      53: checkcast     #81                 // class org/apache/activemq/command/ActiveMQDestination
      56: astore        8
      58: goto          116
      61: aload_0
      62: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      65: invokevirtual #63                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      68: ifnonnull     80
      71: aload_1
      72: invokestatic  #82                 // Method org/apache/activemq/command/ActiveMQDestination.transform:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      75: astore        8
      77: goto          116
      80: new           #74                 // class java/lang/UnsupportedOperationException
      83: dup
      84: new           #15                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #83                 // String This producer can only send messages to:
      93: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
     100: invokevirtual #63                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     103: invokevirtual #84                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
     106: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #76                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload         8
     118: ifnonnull     131
     121: new           #57                 // class javax/jms/JMSException
     124: dup
     125: ldc           #85                 // String No destination specified
     127: invokespecial #86                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     130: athrow
     131: aload_0
     132: getfield      #87                 // Field transformer:Lorg/apache/activemq/MessageTransformer;
     135: ifnull        163
     138: aload_0
     139: getfield      #87                 // Field transformer:Lorg/apache/activemq/MessageTransformer;
     142: aload_0
     143: getfield      #54                 // Field session:Lorg/apache/activemq/ActiveMQSession;
     146: aload_0
     147: aload_2
     148: invokeinterface #88,  4           // InterfaceMethod org/apache/activemq/MessageTransformer.producerTransform:(Ljavax/jms/Session;Ljavax/jms/MessageProducer;Ljavax/jms/Message;)Ljavax/jms/Message;
     153: astore        9
     155: aload         9
     157: ifnull        163
     160: aload         9
     162: astore_2
     163: aload_0
     164: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
     167: ifnull        192
     170: aload_0
     171: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
     174: invokevirtual #89                 // Method org/apache/activemq/usage/MemoryUsage.waitForSpace:()V
     177: goto          192
     180: astore        9
     182: new           #57                 // class javax/jms/JMSException
     185: dup
     186: ldc           #91                 // String Send aborted due to thread interrupt.
     188: invokespecial #86                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     191: athrow
     192: aload_0
     193: getfield      #54                 // Field session:Lorg/apache/activemq/ActiveMQSession;
     196: aload_0
     197: aload         8
     199: aload_2
     200: iload_3
     201: iload         4
     203: lload         5
     205: aload_0
     206: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
     209: aload_0
     210: getfield      #92                 // Field sendTimeout:I
     213: aload         7
     215: invokevirtual #93                 // Method org/apache/activemq/ActiveMQSession.send:(Lorg/apache/activemq/ActiveMQMessageProducer;Lorg/apache/activemq/command/ActiveMQDestination;Ljavax/jms/Message;IIJLorg/apache/activemq/usage/MemoryUsage;ILorg/apache/activemq/AsyncCallback;)V
     218: aload_0
     219: getfield      #53                 // Field stats:Lorg/apache/activemq/management/JMSProducerStatsImpl;
     222: invokevirtual #94                 // Method org/apache/activemq/management/JMSProducerStatsImpl.onMessage:()V
     225: return
    Exception table:
       from    to  target type
         170   177   180   Class java/lang/InterruptedException

  public org.apache.activemq.MessageTransformer getTransformer();
    Code:
       0: aload_0
       1: getfield      #87                 // Field transformer:Lorg/apache/activemq/MessageTransformer;
       4: areturn

  public void setTransformer(org.apache.activemq.MessageTransformer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field transformer:Lorg/apache/activemq/MessageTransformer;
       5: return

  protected long getStartTime();
    Code:
       0: aload_0
       1: getfield      #46                 // Field startTime:J
       4: lreturn

  protected long getMessageSequence();
    Code:
       0: aload_0
       1: getfield      #49                 // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #95                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: lreturn

  protected void setMessageSequence(java.util.concurrent.atomic.AtomicLong);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
       5: return

  protected org.apache.activemq.command.ProducerInfo getProducerInfo();
    Code:
       0: aload_0
       1: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      11: goto          15
      14: aconst_null
      15: areturn

  protected void setProducerInfo(org.apache.activemq.command.ProducerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #96                 // String ActiveMQMessageProducer { value=
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field info:Lorg/apache/activemq/command/ProducerInfo;
      16: invokevirtual #97                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #98                 // String  }
      24: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public void onProducerAck(org.apache.activemq.command.ProducerAck);
    Code:
       0: aload_0
       1: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
       4: ifnull        19
       7: aload_0
       8: getfield      #37                 // Field producerWindow:Lorg/apache/activemq/usage/MemoryUsage;
      11: aload_1
      12: invokevirtual #99                 // Method org/apache/activemq/command/ProducerAck.getSize:()I
      15: i2l
      16: invokevirtual #100                // Method org/apache/activemq/usage/MemoryUsage.decreaseUsage:(J)V
      19: return

  static {};
    Code:
       0: ldc_w         #101                // class org/apache/activemq/ActiveMQMessageProducer
       3: invokestatic  #102                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
