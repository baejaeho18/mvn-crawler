Compiled from "AdvisoryBroker.java"
public class org.apache.activemq.advisory.AdvisoryBroker extends org.apache.activemq.broker.BrokerFilter {
  private static final org.slf4j.Logger LOG;

  private static final org.apache.activemq.util.IdGenerator ID_GENERATOR;

  protected final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ConnectionId, org.apache.activemq.command.ConnectionInfo> connections;

  private final java.util.concurrent.locks.ReentrantReadWriteLock consumersLock;

  protected final java.util.Map<org.apache.activemq.command.ConsumerId, org.apache.activemq.command.ConsumerInfo> consumers;

  protected final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ProducerId, org.apache.activemq.command.ProducerInfo> producers;

  protected final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.DestinationInfo> destinations;

  protected final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.BrokerInfo, org.apache.activemq.command.ActiveMQMessage> networkBridges;

  protected final org.apache.activemq.command.ProducerId advisoryProducerId;

  private final org.apache.activemq.util.LongSequenceGenerator messageIdGenerator;

  public org.apache.activemq.advisory.AdvisoryBroker(org.apache.activemq.broker.Broker);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/broker/BrokerFilter."<init>":(Lorg/apache/activemq/broker/Broker;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      13: putfield      #4                  // Field connections:Ljava/util/concurrent/ConcurrentHashMap;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      20: dup
      21: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      24: putfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      27: aload_0
      28: new           #8                  // class java/util/LinkedHashMap
      31: dup
      32: invokespecial #9                  // Method java/util/LinkedHashMap."<init>":()V
      35: putfield      #10                 // Field consumers:Ljava/util/Map;
      38: aload_0
      39: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      42: dup
      43: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      46: putfield      #11                 // Field producers:Ljava/util/concurrent/ConcurrentHashMap;
      49: aload_0
      50: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      53: dup
      54: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      57: putfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
      60: aload_0
      61: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      64: dup
      65: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      68: putfield      #13                 // Field networkBridges:Ljava/util/concurrent/ConcurrentHashMap;
      71: aload_0
      72: new           #14                 // class org/apache/activemq/command/ProducerId
      75: dup
      76: invokespecial #15                 // Method org/apache/activemq/command/ProducerId."<init>":()V
      79: putfield      #16                 // Field advisoryProducerId:Lorg/apache/activemq/command/ProducerId;
      82: aload_0
      83: new           #17                 // class org/apache/activemq/util/LongSequenceGenerator
      86: dup
      87: invokespecial #18                 // Method org/apache/activemq/util/LongSequenceGenerator."<init>":()V
      90: putfield      #19                 // Field messageIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      93: aload_0
      94: getfield      #16                 // Field advisoryProducerId:Lorg/apache/activemq/command/ProducerId;
      97: getstatic     #20                 // Field ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
     100: invokevirtual #21                 // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
     103: invokevirtual #22                 // Method org/apache/activemq/command/ProducerId.setConnectionId:(Ljava/lang/String;)V
     106: return

  public void addConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #23                 // Method org/apache/activemq/broker/BrokerFilter.addConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;)V
       6: invokestatic  #24                 // Method org/apache/activemq/advisory/AdvisorySupport.getConnectionAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
       9: astore_3
      10: aload_2
      11: invokevirtual #25                 // Method org/apache/activemq/command/ConnectionInfo.copy:()Lorg/apache/activemq/command/ConnectionInfo;
      14: astore        4
      16: aload         4
      18: ldc           #26                 // String
      20: invokevirtual #27                 // Method org/apache/activemq/command/ConnectionInfo.setPassword:(Ljava/lang/String;)V
      23: aload_0
      24: aload_1
      25: aload_3
      26: aload         4
      28: invokevirtual #28                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      31: aload_0
      32: getfield      #4                  // Field connections:Ljava/util/concurrent/ConcurrentHashMap;
      35: aload         4
      37: invokevirtual #29                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      40: aload         4
      42: invokevirtual #30                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: return

  public org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #31                 // Method org/apache/activemq/broker/BrokerFilter.addConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/broker/region/Subscription;
       6: astore_3
       7: aload_2
       8: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      11: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      14: ifne          94
      17: aload_2
      18: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      21: invokestatic  #34                 // Method org/apache/activemq/advisory/AdvisorySupport.getConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      24: astore        4
      26: aload_0
      27: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      30: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      33: invokevirtual #36                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      36: aload_0
      37: getfield      #10                 // Field consumers:Ljava/util/Map;
      40: aload_2
      41: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      44: aload_2
      45: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_0
      52: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      55: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      58: invokevirtual #39                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      61: goto          79
      64: astore        5
      66: aload_0
      67: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      70: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      73: invokevirtual #39                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      76: aload         5
      78: athrow
      79: aload_0
      80: aload_1
      81: aload_2
      82: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      85: aload         4
      87: aload_2
      88: invokevirtual #40                 // Method fireConsumerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      91: goto          589
      94: aload_2
      95: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      98: invokestatic  #41                 // Method org/apache/activemq/advisory/AdvisorySupport.isConnectionAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     101: ifeq          161
     104: aload_0
     105: getfield      #4                  // Field connections:Ljava/util/concurrent/ConcurrentHashMap;
     108: invokevirtual #42                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     111: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     116: astore        4
     118: aload         4
     120: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          161
     128: aload         4
     130: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #46                 // class org/apache/activemq/command/ConnectionInfo
     138: astore        5
     140: invokestatic  #24                 // Method org/apache/activemq/advisory/AdvisorySupport.getConnectionAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
     143: astore        6
     145: aload_0
     146: aload_1
     147: aload         6
     149: aload         5
     151: aload_2
     152: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     155: invokevirtual #47                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
     158: goto          118
     161: aload_2
     162: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     165: invokestatic  #48                 // Method org/apache/activemq/advisory/AdvisorySupport.isTempDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     168: ifeq          247
     171: aload_0
     172: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
     175: invokevirtual #42                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     178: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     183: astore        4
     185: aload         4
     187: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     192: ifeq          244
     195: aload         4
     197: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     202: checkcast     #50                 // class org/apache/activemq/command/DestinationInfo
     205: astore        5
     207: aload         5
     209: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     212: invokevirtual #52                 // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
     215: ifeq          241
     218: aload         5
     220: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     223: invokestatic  #53                 // Method org/apache/activemq/advisory/AdvisorySupport.getDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
     226: astore        6
     228: aload_0
     229: aload_1
     230: aload         6
     232: aload         5
     234: aload_2
     235: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     238: invokevirtual #47                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
     241: goto          185
     244: goto          319
     247: aload_2
     248: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     251: invokestatic  #54                 // Method org/apache/activemq/advisory/AdvisorySupport.isDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     254: ifeq          319
     257: aload_0
     258: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
     261: invokevirtual #42                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     264: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     269: astore        4
     271: aload         4
     273: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     278: ifeq          319
     281: aload         4
     283: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     288: checkcast     #50                 // class org/apache/activemq/command/DestinationInfo
     291: astore        5
     293: aload         5
     295: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     298: invokestatic  #53                 // Method org/apache/activemq/advisory/AdvisorySupport.getDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
     301: astore        6
     303: aload_0
     304: aload_1
     305: aload         6
     307: aload         5
     309: aload_2
     310: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     313: invokevirtual #47                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
     316: goto          271
     319: aload_2
     320: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     323: invokestatic  #55                 // Method org/apache/activemq/advisory/AdvisorySupport.isProducerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     326: ifeq          396
     329: aload_0
     330: getfield      #11                 // Field producers:Ljava/util/concurrent/ConcurrentHashMap;
     333: invokevirtual #42                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     336: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     341: astore        4
     343: aload         4
     345: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     350: ifeq          396
     353: aload         4
     355: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     360: checkcast     #56                 // class org/apache/activemq/command/ProducerInfo
     363: astore        5
     365: aload         5
     367: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     370: invokestatic  #58                 // Method org/apache/activemq/advisory/AdvisorySupport.getProducerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
     373: astore        6
     375: aload_0
     376: aload_1
     377: aload         5
     379: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     382: aload         6
     384: aload         5
     386: aload_2
     387: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     390: invokevirtual #59                 // Method fireProducerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
     393: goto          343
     396: aload_2
     397: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     400: invokestatic  #60                 // Method org/apache/activemq/advisory/AdvisorySupport.isConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     403: ifeq          513
     406: aload_0
     407: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     410: invokevirtual #61                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     413: invokevirtual #62                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
     416: aload_0
     417: getfield      #10                 // Field consumers:Ljava/util/Map;
     420: invokeinterface #63,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     425: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     430: astore        4
     432: aload         4
     434: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     439: ifeq          485
     442: aload         4
     444: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     449: checkcast     #64                 // class org/apache/activemq/command/ConsumerInfo
     452: astore        5
     454: aload         5
     456: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     459: invokestatic  #34                 // Method org/apache/activemq/advisory/AdvisorySupport.getConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
     462: astore        6
     464: aload_0
     465: aload_1
     466: aload         5
     468: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     471: aload         6
     473: aload         5
     475: aload_2
     476: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     479: invokevirtual #65                 // Method fireConsumerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
     482: goto          432
     485: aload_0
     486: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     489: invokevirtual #61                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     492: invokevirtual #66                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     495: goto          513
     498: astore        7
     500: aload_0
     501: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     504: invokevirtual #61                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     507: invokevirtual #66                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     510: aload         7
     512: athrow
     513: aload_2
     514: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     517: invokestatic  #67                 // Method org/apache/activemq/advisory/AdvisorySupport.isNetworkBridgeAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     520: ifeq          589
     523: aload_0
     524: getfield      #13                 // Field networkBridges:Ljava/util/concurrent/ConcurrentHashMap;
     527: invokevirtual #68                 // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/Set;
     530: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     535: astore        4
     537: aload         4
     539: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     544: ifeq          589
     547: aload         4
     549: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     554: checkcast     #70                 // class org/apache/activemq/command/BrokerInfo
     557: astore        5
     559: invokestatic  #71                 // Method org/apache/activemq/advisory/AdvisorySupport.getNetworkBridgeAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
     562: astore        6
     564: aload_0
     565: aload_1
     566: aload         6
     568: aload         5
     570: aconst_null
     571: aload_0
     572: getfield      #13                 // Field networkBridges:Ljava/util/concurrent/ConcurrentHashMap;
     575: aload         5
     577: invokevirtual #72                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     580: checkcast     #73                 // class org/apache/activemq/command/ActiveMQMessage
     583: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
     586: goto          537
     589: aload_3
     590: areturn
    Exception table:
       from    to  target type
          36    51    64   any
          64    66    64   any
         416   485   498   any
         498   500   498   any

  public void addProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #75                 // Method org/apache/activemq/broker/BrokerFilter.addProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
       6: aload_2
       7: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      10: ifnull        55
      13: aload_2
      14: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      17: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      20: ifne          55
      23: aload_2
      24: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      27: invokestatic  #58                 // Method org/apache/activemq/advisory/AdvisorySupport.getProducerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      30: astore_3
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      37: aload_3
      38: aload_2
      39: invokevirtual #76                 // Method fireProducerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      42: aload_0
      43: getfield      #11                 // Field producers:Ljava/util/concurrent/ConcurrentHashMap;
      46: aload_2
      47: invokevirtual #77                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      50: aload_2
      51: invokevirtual #30                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: return

  public org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #78                 // Method org/apache/activemq/broker/BrokerFilter.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
       7: astore        4
       9: aload_2
      10: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      13: ifne          66
      16: new           #50                 // class org/apache/activemq/command/DestinationInfo
      19: dup
      20: aload_1
      21: invokevirtual #79                 // Method org/apache/activemq/broker/ConnectionContext.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      24: iconst_0
      25: aload_2
      26: invokespecial #80                 // Method org/apache/activemq/command/DestinationInfo."<init>":(Lorg/apache/activemq/command/ConnectionId;BLorg/apache/activemq/command/ActiveMQDestination;)V
      29: astore        5
      31: aload_0
      32: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
      35: aload_2
      36: aload         5
      38: invokevirtual #81                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #50                 // class org/apache/activemq/command/DestinationInfo
      44: astore        6
      46: aload         6
      48: ifnonnull     66
      51: aload_2
      52: invokestatic  #53                 // Method org/apache/activemq/advisory/AdvisorySupport.getDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      55: astore        7
      57: aload_0
      58: aload_1
      59: aload         7
      61: aload         5
      63: invokevirtual #28                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      66: aload         4
      68: areturn

  public void addDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_0
       6: getfield      #82                 // Field next:Lorg/apache/activemq/broker/Broker;
       9: aload_1
      10: aload_2
      11: invokeinterface #83,  3           // InterfaceMethod org/apache/activemq/broker/Broker.addDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
      16: aload_3
      17: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      20: ifne          56
      23: aload_0
      24: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
      27: aload_3
      28: aload_2
      29: invokevirtual #81                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #50                 // class org/apache/activemq/command/DestinationInfo
      35: astore        4
      37: aload         4
      39: ifnonnull     56
      42: aload_3
      43: invokestatic  #53                 // Method org/apache/activemq/advisory/AdvisorySupport.getDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      46: astore        5
      48: aload_0
      49: aload_1
      50: aload         5
      52: aload_2
      53: invokevirtual #28                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      56: return

  public void removeDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: invokespecial #84                 // Method org/apache/activemq/broker/BrokerFilter.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
       7: aload_0
       8: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_2
      12: invokevirtual #85                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #50                 // class org/apache/activemq/command/DestinationInfo
      18: astore        5
      20: aload         5
      22: ifnull        117
      25: aload         5
      27: invokevirtual #86                 // Method org/apache/activemq/command/DestinationInfo.copy:()Lorg/apache/activemq/command/DestinationInfo;
      30: astore        5
      32: aload         5
      34: aload_2
      35: invokevirtual #87                 // Method org/apache/activemq/command/DestinationInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      38: aload         5
      40: iconst_1
      41: invokevirtual #88                 // Method org/apache/activemq/command/DestinationInfo.setOperationType:(B)V
      44: aload_2
      45: invokestatic  #53                 // Method org/apache/activemq/advisory/AdvisorySupport.getDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      48: astore        6
      50: aload_0
      51: aload_1
      52: aload         6
      54: aload         5
      56: invokevirtual #28                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      59: aload_2
      60: invokestatic  #89                 // Method org/apache/activemq/advisory/AdvisorySupport.getAllDestinationAdvisoryTopics:(Lorg/apache/activemq/command/ActiveMQDestination;)[Lorg/apache/activemq/command/ActiveMQTopic;
      63: astore        7
      65: aload         7
      67: astore        8
      69: aload         8
      71: arraylength
      72: istore        9
      74: iconst_0
      75: istore        10
      77: iload         10
      79: iload         9
      81: if_icmpge     117
      84: aload         8
      86: iload         10
      88: aaload
      89: astore        11
      91: aload_0
      92: getfield      #82                 // Field next:Lorg/apache/activemq/broker/Broker;
      95: aload_1
      96: aload         11
      98: ldc2_w        #90                 // long -1l
     101: invokeinterface #92,  5           // InterfaceMethod org/apache/activemq/broker/Broker.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
     106: goto          111
     109: astore        12
     111: iinc          10, 1
     114: goto          77
     117: return
    Exception table:
       from    to  target type
          91   106   109   Class java/lang/Exception

  public void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #94                 // Method org/apache/activemq/broker/BrokerFilter.removeDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
       6: aload_0
       7: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
      10: aload_2
      11: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      14: invokevirtual #85                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #50                 // class org/apache/activemq/command/DestinationInfo
      20: astore_3
      21: aload_3
      22: ifnull        121
      25: aload_3
      26: invokevirtual #86                 // Method org/apache/activemq/command/DestinationInfo.copy:()Lorg/apache/activemq/command/DestinationInfo;
      29: astore_3
      30: aload_3
      31: aload_2
      32: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      35: invokevirtual #87                 // Method org/apache/activemq/command/DestinationInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      38: aload_3
      39: iconst_1
      40: invokevirtual #88                 // Method org/apache/activemq/command/DestinationInfo.setOperationType:(B)V
      43: aload_2
      44: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      47: invokestatic  #53                 // Method org/apache/activemq/advisory/AdvisorySupport.getDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      50: astore        4
      52: aload_0
      53: aload_1
      54: aload         4
      56: aload_3
      57: invokevirtual #28                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      60: aload_2
      61: invokevirtual #51                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      64: invokestatic  #89                 // Method org/apache/activemq/advisory/AdvisorySupport.getAllDestinationAdvisoryTopics:(Lorg/apache/activemq/command/ActiveMQDestination;)[Lorg/apache/activemq/command/ActiveMQTopic;
      67: astore        5
      69: aload         5
      71: astore        6
      73: aload         6
      75: arraylength
      76: istore        7
      78: iconst_0
      79: istore        8
      81: iload         8
      83: iload         7
      85: if_icmpge     121
      88: aload         6
      90: iload         8
      92: aaload
      93: astore        9
      95: aload_0
      96: getfield      #82                 // Field next:Lorg/apache/activemq/broker/Broker;
      99: aload_1
     100: aload         9
     102: ldc2_w        #90                 // long -1l
     105: invokeinterface #92,  5           // InterfaceMethod org/apache/activemq/broker/Broker.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
     110: goto          115
     113: astore        10
     115: iinc          8, 1
     118: goto          81
     121: return
    Exception table:
       from    to  target type
          95   110   113   Class java/lang/Exception

  public void removeConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #95                 // Method org/apache/activemq/broker/BrokerFilter.removeConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;Ljava/lang/Throwable;)V
       7: invokestatic  #24                 // Method org/apache/activemq/advisory/AdvisorySupport.getConnectionAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
      10: astore        4
      12: aload_0
      13: aload_1
      14: aload         4
      16: aload_2
      17: invokevirtual #96                 // Method org/apache/activemq/command/ConnectionInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      20: invokevirtual #28                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      23: aload_0
      24: getfield      #4                  // Field connections:Ljava/util/concurrent/ConcurrentHashMap;
      27: aload_2
      28: invokevirtual #29                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      31: invokevirtual #85                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: return

  public void removeConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #97                 // Method org/apache/activemq/broker/BrokerFilter.removeConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)V
       6: aload_2
       7: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      10: astore_3
      11: aload_3
      12: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      15: ifne          106
      18: aload_3
      19: invokestatic  #34                 // Method org/apache/activemq/advisory/AdvisorySupport.getConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      22: astore        4
      24: aload_0
      25: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      28: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      31: invokevirtual #36                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      34: aload_0
      35: getfield      #10                 // Field consumers:Ljava/util/Map;
      38: aload_2
      39: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      42: invokeinterface #98,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_0
      49: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      52: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      55: invokevirtual #39                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      58: goto          76
      61: astore        5
      63: aload_0
      64: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      67: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      70: invokevirtual #39                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      73: aload         5
      75: athrow
      76: aload_3
      77: invokevirtual #52                 // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      80: ifeq          94
      83: aload_0
      84: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
      87: aload_3
      88: invokevirtual #99                 // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
      91: ifeq          106
      94: aload_0
      95: aload_1
      96: aload_3
      97: aload         4
      99: aload_2
     100: invokevirtual #100                // Method org/apache/activemq/command/ConsumerInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
     103: invokevirtual #40                 // Method fireConsumerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
     106: return
    Exception table:
       from    to  target type
          34    48    61   any
          61    63    61   any

  public void removeSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.RemoveSubscriptionInfo) throws java.lang.Exception;
    Code:
       0: new           #101                // class org/apache/activemq/util/SubscriptionKey
       3: dup
       4: aload_1
       5: invokevirtual #102                // Method org/apache/activemq/broker/ConnectionContext.getClientId:()Ljava/lang/String;
       8: aload_2
       9: invokevirtual #103                // Method org/apache/activemq/command/RemoveSubscriptionInfo.getSubscriptionName:()Ljava/lang/String;
      12: invokespecial #104                // Method org/apache/activemq/util/SubscriptionKey."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: astore_3
      16: aconst_null
      17: astore        4
      19: aload_0
      20: getfield      #82                 // Field next:Lorg/apache/activemq/broker/Broker;
      23: instanceof    #105                // class org/apache/activemq/broker/region/RegionBroker
      26: ifeq          41
      29: aload_0
      30: getfield      #82                 // Field next:Lorg/apache/activemq/broker/Broker;
      33: checkcast     #105                // class org/apache/activemq/broker/region/RegionBroker
      36: astore        4
      38: goto          62
      41: aload_0
      42: getfield      #82                 // Field next:Lorg/apache/activemq/broker/Broker;
      45: invokeinterface #106,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      50: astore        5
      52: aload         5
      54: invokevirtual #107                // Method org/apache/activemq/broker/BrokerService.getRegionBroker:()Lorg/apache/activemq/broker/Broker;
      57: checkcast     #105                // class org/apache/activemq/broker/region/RegionBroker
      60: astore        4
      62: aload         4
      64: ifnonnull     87
      67: getstatic     #108                // Field LOG:Lorg/slf4j/Logger;
      70: ldc           #109                // String Cannot locate a RegionBroker instance to pass along the removeSubscription call
      72: invokeinterface #110,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      77: new           #111                // class java/lang/IllegalStateException
      80: dup
      81: ldc           #112                // String No RegionBroker found.
      83: invokespecial #113                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload         4
      89: invokevirtual #114                // Method org/apache/activemq/broker/region/RegionBroker.getTopicRegion:()Lorg/apache/activemq/broker/region/Region;
      92: checkcast     #115                // class org/apache/activemq/broker/region/TopicRegion
      95: aload_3
      96: invokevirtual #116                // Method org/apache/activemq/broker/region/TopicRegion.getDurableSubscription:(Lorg/apache/activemq/util/SubscriptionKey;)Lorg/apache/activemq/broker/region/DurableTopicSubscription;
      99: astore        5
     101: aload_0
     102: aload_1
     103: aload_2
     104: invokespecial #117                // Method org/apache/activemq/broker/BrokerFilter.removeSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/RemoveSubscriptionInfo;)V
     107: aload         5
     109: ifnonnull     123
     112: getstatic     #108                // Field LOG:Lorg/slf4j/Logger;
     115: ldc           #118                // String We cannot send an advisory message for a durable sub removal when we don\'t know about the durable sub
     117: invokeinterface #110,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     122: return
     123: aload         5
     125: invokevirtual #119                // Method org/apache/activemq/broker/region/DurableTopicSubscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     128: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     131: astore        6
     133: aload         6
     135: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     138: ifne          158
     141: aload         6
     143: invokestatic  #34                 // Method org/apache/activemq/advisory/AdvisorySupport.getConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
     146: astore        7
     148: aload_0
     149: aload_1
     150: aload         6
     152: aload         7
     154: aload_2
     155: invokevirtual #40                 // Method fireConsumerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
     158: return

  public void removeProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #120                // Method org/apache/activemq/broker/BrokerFilter.removeProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
       6: aload_2
       7: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      10: astore_3
      11: aload_2
      12: invokevirtual #57                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      15: ifnull        73
      18: aload_3
      19: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      22: ifne          73
      25: aload_3
      26: invokestatic  #58                 // Method org/apache/activemq/advisory/AdvisorySupport.getProducerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      29: astore        4
      31: aload_0
      32: getfield      #11                 // Field producers:Ljava/util/concurrent/ConcurrentHashMap;
      35: aload_2
      36: invokevirtual #77                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      39: invokevirtual #85                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_3
      44: invokevirtual #52                 // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      47: ifeq          61
      50: aload_0
      51: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
      54: aload_3
      55: invokevirtual #99                 // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
      58: ifeq          73
      61: aload_0
      62: aload_1
      63: aload_3
      64: aload         4
      66: aload_2
      67: invokevirtual #121                // Method org/apache/activemq/command/ProducerInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      70: invokevirtual #76                 // Method fireProducerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      73: return

  public void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #122                // Method org/apache/activemq/broker/BrokerFilter.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;)V
       7: aload_2
       8: invokeinterface #123,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isAdvisory:()Z
      13: ifne          82
      16: aload_2
      17: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      22: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      25: invokestatic  #126                // Method org/apache/activemq/advisory/AdvisorySupport.getExpiredMessageTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      28: astore        4
      30: aload_2
      31: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      36: invokevirtual #127                // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      39: astore        5
      41: aload         5
      43: invokevirtual #128                // Method org/apache/activemq/command/Message.clearBody:()V
      46: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      49: dup
      50: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      53: astore        6
      55: aload         6
      57: ldc           #130                // String orignalMessageId
      59: aload         5
      61: invokevirtual #131                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      64: invokevirtual #132                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
      67: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      70: aload_0
      71: aload_1
      72: aload         4
      74: aload         5
      76: aconst_null
      77: aload         6
      79: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      82: goto          95
      85: astore        4
      87: aload_0
      88: ldc           #134                // String expired
      90: aload         4
      92: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      95: return
    Exception table:
       from    to  target type
           7    82    85   Class java/lang/Exception

  public void messageConsumed(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #136                // Method org/apache/activemq/broker/BrokerFilter.messageConsumed:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
       6: aload_2
       7: invokeinterface #123,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isAdvisory:()Z
      12: ifne          106
      15: aload_2
      16: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      21: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      24: invokestatic  #137                // Method org/apache/activemq/advisory/AdvisorySupport.getMessageConsumedAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      27: astore_3
      28: aload_2
      29: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      34: invokevirtual #127                // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      37: astore        4
      39: aload         4
      41: invokevirtual #128                // Method org/apache/activemq/command/Message.clearBody:()V
      44: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      47: dup
      48: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      51: astore        5
      53: aload         5
      55: ldc           #130                // String orignalMessageId
      57: aload         4
      59: invokevirtual #131                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      62: invokevirtual #132                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
      65: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      68: aload         4
      70: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      73: astore        6
      75: aload         6
      77: ifnull        95
      80: aload         5
      82: ldc           #138                // String orignalDestination
      84: aload         4
      86: invokevirtual #131                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      89: invokevirtual #132                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
      92: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      95: aload_0
      96: aload_1
      97: aload_3
      98: aload         4
     100: aconst_null
     101: aload         5
     103: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
     106: goto          117
     109: astore_3
     110: aload_0
     111: ldc           #139                // String consumed
     113: aload_3
     114: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
     117: return
    Exception table:
       from    to  target type
           6   106   109   Class java/lang/Exception

  public void messageDelivered(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #140                // Method org/apache/activemq/broker/BrokerFilter.messageDelivered:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
       6: aload_2
       7: invokeinterface #123,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isAdvisory:()Z
      12: ifne          106
      15: aload_2
      16: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      21: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      24: invokestatic  #141                // Method org/apache/activemq/advisory/AdvisorySupport.getMessageDeliveredAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      27: astore_3
      28: aload_2
      29: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      34: invokevirtual #127                // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      37: astore        4
      39: aload         4
      41: invokevirtual #128                // Method org/apache/activemq/command/Message.clearBody:()V
      44: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      47: dup
      48: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      51: astore        5
      53: aload         5
      55: ldc           #130                // String orignalMessageId
      57: aload         4
      59: invokevirtual #131                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      62: invokevirtual #132                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
      65: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      68: aload         4
      70: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      73: astore        6
      75: aload         6
      77: ifnull        95
      80: aload         5
      82: ldc           #138                // String orignalDestination
      84: aload         4
      86: invokevirtual #131                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      89: invokevirtual #132                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
      92: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      95: aload_0
      96: aload_1
      97: aload_3
      98: aload         4
     100: aconst_null
     101: aload         5
     103: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
     106: goto          117
     109: astore_3
     110: aload_0
     111: ldc           #142                // String delivered
     113: aload_3
     114: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
     117: return
    Exception table:
       from    to  target type
           6   106   109   Class java/lang/Exception

  public void messageDiscarded(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #143                // Method org/apache/activemq/broker/BrokerFilter.messageDiscarded:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
       7: aload_3
       8: invokeinterface #123,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isAdvisory:()Z
      13: ifne          149
      16: aload_3
      17: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      22: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      25: invokestatic  #144                // Method org/apache/activemq/advisory/AdvisorySupport.getMessageDiscardedAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      28: astore        4
      30: aload_3
      31: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      36: invokevirtual #127                // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      39: astore        5
      41: aload         5
      43: invokevirtual #128                // Method org/apache/activemq/command/Message.clearBody:()V
      46: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      49: dup
      50: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      53: astore        6
      55: aload_2
      56: instanceof    #145                // class org/apache/activemq/broker/region/TopicSubscription
      59: ifeq          76
      62: aload         6
      64: ldc           #146                // String discardedCount
      66: aload_2
      67: checkcast     #145                // class org/apache/activemq/broker/region/TopicSubscription
      70: invokevirtual #147                // Method org/apache/activemq/broker/region/TopicSubscription.discarded:()I
      73: invokevirtual #148                // Method org/apache/activemq/command/ActiveMQMessage.setIntProperty:(Ljava/lang/String;I)V
      76: aload         6
      78: ldc           #130                // String orignalMessageId
      80: aload         5
      82: invokevirtual #131                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      85: invokevirtual #132                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
      88: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      91: aload         6
      93: ldc           #149                // String consumerId
      95: aload_2
      96: invokeinterface #150,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     101: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     104: invokevirtual #151                // Method org/apache/activemq/command/ConsumerId.toString:()Ljava/lang/String;
     107: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
     110: aload         5
     112: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     115: astore        7
     117: aload         7
     119: ifnull        137
     122: aload         6
     124: ldc           #138                // String orignalDestination
     126: aload         5
     128: invokevirtual #131                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     131: invokevirtual #132                // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
     134: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
     137: aload_0
     138: aload_1
     139: aload         4
     141: aload         5
     143: aconst_null
     144: aload         6
     146: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
     149: goto          162
     152: astore        4
     154: aload_0
     155: ldc           #152                // String discarded
     157: aload         4
     159: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
     162: return
    Exception table:
       from    to  target type
           7   149   152   Class java/lang/Exception

  public void slowConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #153                // Method org/apache/activemq/broker/BrokerFilter.slowConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/broker/region/Subscription;)V
       7: aload_2
       8: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      13: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      16: ifne          74
      19: aload_2
      20: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      25: invokestatic  #155                // Method org/apache/activemq/advisory/AdvisorySupport.getSlowConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      28: astore        4
      30: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      33: dup
      34: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      37: astore        5
      39: aload         5
      41: ldc           #149                // String consumerId
      43: aload_3
      44: invokeinterface #150,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      49: invokevirtual #37                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      52: invokevirtual #151                // Method org/apache/activemq/command/ConsumerId.toString:()Ljava/lang/String;
      55: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      58: aload_0
      59: aload_1
      60: aload         4
      62: aload_3
      63: invokeinterface #150,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      68: aconst_null
      69: aload         5
      71: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      74: goto          87
      77: astore        4
      79: aload_0
      80: ldc           #156                // String slow consumer
      82: aload         4
      84: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: return
    Exception table:
       from    to  target type
           7    74    77   Class java/lang/Exception

  public void fastProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo, org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #157                // Method org/apache/activemq/broker/BrokerFilter.fastProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;Lorg/apache/activemq/command/ActiveMQDestination;)V
       7: aload_3
       8: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      11: ifne          54
      14: aload_3
      15: invokestatic  #158                // Method org/apache/activemq/advisory/AdvisorySupport.getFastProducerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      18: astore        4
      20: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      23: dup
      24: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      27: astore        5
      29: aload         5
      31: ldc           #159                // String producerId
      33: aload_2
      34: invokevirtual #77                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      37: invokevirtual #160                // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      40: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      43: aload_0
      44: aload_1
      45: aload         4
      47: aload_2
      48: aconst_null
      49: aload         5
      51: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      54: goto          67
      57: astore        4
      59: aload_0
      60: ldc           #161                // String fast producer
      62: aload         4
      64: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: return
    Exception table:
       from    to  target type
           7    54    57   Class java/lang/Exception

  public void isFull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.usage.Usage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #162                // Method org/apache/activemq/broker/BrokerFilter.isFull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/usage/Usage;)V
       7: aload_2
       8: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      13: invokestatic  #33                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      16: ifne          74
      19: aload_2
      20: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      25: invokestatic  #163                // Method org/apache/activemq/advisory/AdvisorySupport.getFullAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      28: astore        4
      30: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      33: dup
      34: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      37: astore        5
      39: aload         5
      41: ldc           #164                // String usageName
      43: aload_3
      44: invokevirtual #165                // Method org/apache/activemq/usage/Usage.getName:()Ljava/lang/String;
      47: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      50: aload_0
      51: aload_1
      52: aload         4
      54: aconst_null
      55: aconst_null
      56: aload         5
      58: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      61: goto          74
      64: astore        4
      66: aload_0
      67: ldc           #166                // String is full
      69: aload         4
      71: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: return
    Exception table:
       from    to  target type
          19    61    64   Class java/lang/Exception

  public void nowMasterBroker();
    Code:
       0: aload_0
       1: invokespecial #167                // Method org/apache/activemq/broker/BrokerFilter.nowMasterBroker:()V
       4: invokestatic  #168                // Method org/apache/activemq/advisory/AdvisorySupport.getMasterBrokerAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
       7: astore_1
       8: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
      11: dup
      12: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      15: astore_2
      16: new           #169                // class org/apache/activemq/broker/ConnectionContext
      19: dup
      20: invokespecial #170                // Method org/apache/activemq/broker/ConnectionContext."<init>":()V
      23: astore_3
      24: aload_3
      25: getstatic     #171                // Field org/apache/activemq/security/SecurityContext.BROKER_SECURITY_CONTEXT:Lorg/apache/activemq/security/SecurityContext;
      28: invokevirtual #172                // Method org/apache/activemq/broker/ConnectionContext.setSecurityContext:(Lorg/apache/activemq/security/SecurityContext;)V
      31: aload_3
      32: aload_0
      33: invokevirtual #173                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      36: invokevirtual #174                // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
      39: invokevirtual #175                // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
      42: aload_0
      43: aload_3
      44: aload_1
      45: aconst_null
      46: aconst_null
      47: aload_2
      48: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      51: goto          62
      54: astore_1
      55: aload_0
      56: ldc           #176                // String now master broker
      58: aload_1
      59: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: return
    Exception table:
       from    to  target type
           4    51    54   Class java/lang/Exception

  public boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #177                // Method org/apache/activemq/broker/BrokerFilter.sendToDeadLetterQueue:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;Ljava/lang/Throwable;)Z
       9: istore        5
      11: iload         5
      13: ifeq          77
      16: aload_2
      17: invokeinterface #123,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isAdvisory:()Z
      22: ifne          64
      25: aload_2
      26: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      31: invokevirtual #125                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      34: invokestatic  #178                // Method org/apache/activemq/advisory/AdvisorySupport.getMessageDLQdAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQTopic;
      37: astore        6
      39: aload_2
      40: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      45: invokevirtual #127                // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      48: astore        7
      50: aload         7
      52: invokevirtual #128                // Method org/apache/activemq/command/Message.clearBody:()V
      55: aload_0
      56: aload_1
      57: aload         6
      59: aload         7
      61: invokevirtual #28                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;)V
      64: goto          77
      67: astore        6
      69: aload_0
      70: ldc           #179                // String add to DLQ
      72: aload         6
      74: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      77: iload         5
      79: ireturn
    Exception table:
       from    to  target type
          16    64    67   Class java/lang/Exception

  public void networkBridgeStarted(org.apache.activemq.command.BrokerInfo, boolean, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        94
       4: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
       7: dup
       8: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      11: astore        4
      13: aload         4
      15: ldc           #180                // String started
      17: iconst_1
      18: invokevirtual #181                // Method org/apache/activemq/command/ActiveMQMessage.setBooleanProperty:(Ljava/lang/String;Z)V
      21: aload         4
      23: ldc           #182                // String createdByDuplex
      25: iload_2
      26: invokevirtual #181                // Method org/apache/activemq/command/ActiveMQMessage.setBooleanProperty:(Ljava/lang/String;Z)V
      29: aload         4
      31: ldc           #183                // String remoteIp
      33: aload_3
      34: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      37: aload_0
      38: getfield      #13                 // Field networkBridges:Ljava/util/concurrent/ConcurrentHashMap;
      41: aload_1
      42: aload         4
      44: invokevirtual #81                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: invokestatic  #71                 // Method org/apache/activemq/advisory/AdvisorySupport.getNetworkBridgeAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
      51: astore        5
      53: new           #169                // class org/apache/activemq/broker/ConnectionContext
      56: dup
      57: invokespecial #170                // Method org/apache/activemq/broker/ConnectionContext."<init>":()V
      60: astore        6
      62: aload         6
      64: getstatic     #171                // Field org/apache/activemq/security/SecurityContext.BROKER_SECURITY_CONTEXT:Lorg/apache/activemq/security/SecurityContext;
      67: invokevirtual #172                // Method org/apache/activemq/broker/ConnectionContext.setSecurityContext:(Lorg/apache/activemq/security/SecurityContext;)V
      70: aload         6
      72: aload_0
      73: invokevirtual #173                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      76: invokevirtual #174                // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
      79: invokevirtual #175                // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
      82: aload_0
      83: aload         6
      85: aload         5
      87: aload_1
      88: aconst_null
      89: aload         4
      91: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      94: goto          107
      97: astore        4
      99: aload_0
     100: ldc           #184                // String network bridge started
     102: aload         4
     104: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
     107: return
    Exception table:
       from    to  target type
           0    94    97   Class java/lang/Exception

  public void networkBridgeStopped(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_1
       1: ifnull        71
       4: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
       7: dup
       8: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      11: astore_2
      12: aload_2
      13: ldc           #180                // String started
      15: iconst_0
      16: invokevirtual #181                // Method org/apache/activemq/command/ActiveMQMessage.setBooleanProperty:(Ljava/lang/String;Z)V
      19: aload_0
      20: getfield      #13                 // Field networkBridges:Ljava/util/concurrent/ConcurrentHashMap;
      23: aload_1
      24: invokevirtual #85                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: invokestatic  #71                 // Method org/apache/activemq/advisory/AdvisorySupport.getNetworkBridgeAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
      31: astore_3
      32: new           #169                // class org/apache/activemq/broker/ConnectionContext
      35: dup
      36: invokespecial #170                // Method org/apache/activemq/broker/ConnectionContext."<init>":()V
      39: astore        4
      41: aload         4
      43: getstatic     #171                // Field org/apache/activemq/security/SecurityContext.BROKER_SECURITY_CONTEXT:Lorg/apache/activemq/security/SecurityContext;
      46: invokevirtual #172                // Method org/apache/activemq/broker/ConnectionContext.setSecurityContext:(Lorg/apache/activemq/security/SecurityContext;)V
      49: aload         4
      51: aload_0
      52: invokevirtual #173                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      55: invokevirtual #174                // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
      58: invokevirtual #175                // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
      61: aload_0
      62: aload         4
      64: aload_3
      65: aload_1
      66: aconst_null
      67: aload_2
      68: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      71: goto          82
      74: astore_2
      75: aload_0
      76: ldc           #185                // String network bridge stopped
      78: aload_2
      79: invokespecial #135                // Method handleFireFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: return
    Exception table:
       from    to  target type
           0    71    74   Class java/lang/Exception

  private void handleFireFailure(java.lang.String, java.lang.Throwable);
    Code:
       0: getstatic     #108                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #186                // String Failed to fire {} advisory, reason: {}
       5: aload_1
       6: aload_2
       7: invokeinterface #187,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: getstatic     #108                // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #188                // String {} detail: {}
      17: aload_1
      18: aload_2
      19: invokeinterface #189,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: return

  protected void fireAdvisory(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQTopic, org.apache.activemq.command.Command) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #47                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
       8: return

  protected void fireAdvisory(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQTopic, org.apache.activemq.command.Command, org.apache.activemq.command.ConsumerId) throws java.lang.Exception;
    Code:
       0: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
       3: dup
       4: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
       7: astore        5
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: aload         4
      15: aload         5
      17: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      20: return

  protected void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.ActiveMQTopic, org.apache.activemq.command.Command) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokevirtual #65                 // Method fireConsumerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
      10: return

  protected void fireConsumerAdvisory(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.ActiveMQTopic, org.apache.activemq.command.Command, org.apache.activemq.command.ConsumerId) throws java.lang.Exception;
    Code:
       0: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
       3: dup
       4: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
       7: astore        6
       9: iconst_0
      10: istore        7
      12: aload_0
      13: aload_2
      14: invokevirtual #190                // Method getDestinations:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      17: astore        8
      19: aload         8
      21: ifnull        78
      24: aload         8
      26: invokeinterface #191,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore        9
      33: aload         9
      35: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          78
      43: aload         9
      45: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #192                // class org/apache/activemq/broker/region/Destination
      53: astore        10
      55: iload         7
      57: i2l
      58: aload         10
      60: invokeinterface #193,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
      65: invokevirtual #194                // Method org/apache/activemq/broker/region/DestinationStatistics.getConsumers:()Lorg/apache/activemq/management/CountStatisticImpl;
      68: invokevirtual #195                // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      71: ladd
      72: l2i
      73: istore        7
      75: goto          33
      78: aload         6
      80: ldc           #196                // String consumerCount
      82: iload         7
      84: invokevirtual #148                // Method org/apache/activemq/command/ActiveMQMessage.setIntProperty:(Ljava/lang/String;I)V
      87: aload_0
      88: aload_1
      89: aload_3
      90: aload         4
      92: aload         5
      94: aload         6
      96: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
      99: return

  protected void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.ActiveMQTopic, org.apache.activemq.command.Command) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokevirtual #59                 // Method fireProducerAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;)V
      10: return

  protected void fireProducerAdvisory(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.ActiveMQTopic, org.apache.activemq.command.Command, org.apache.activemq.command.ConsumerId) throws java.lang.Exception;
    Code:
       0: new           #73                 // class org/apache/activemq/command/ActiveMQMessage
       3: dup
       4: invokespecial #129                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
       7: astore        6
       9: iconst_0
      10: istore        7
      12: aload_2
      13: ifnull        82
      16: aload_0
      17: aload_2
      18: invokevirtual #190                // Method getDestinations:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      21: astore        8
      23: aload         8
      25: ifnull        82
      28: aload         8
      30: invokeinterface #191,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore        9
      37: aload         9
      39: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          82
      47: aload         9
      49: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #192                // class org/apache/activemq/broker/region/Destination
      57: astore        10
      59: iload         7
      61: i2l
      62: aload         10
      64: invokeinterface #193,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
      69: invokevirtual #197                // Method org/apache/activemq/broker/region/DestinationStatistics.getProducers:()Lorg/apache/activemq/management/CountStatisticImpl;
      72: invokevirtual #195                // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      75: ladd
      76: l2i
      77: istore        7
      79: goto          37
      82: aload         6
      84: ldc           #198                // String producerCount
      86: iload         7
      88: invokevirtual #148                // Method org/apache/activemq/command/ActiveMQMessage.setIntProperty:(Ljava/lang/String;I)V
      91: aload_0
      92: aload_1
      93: aload_3
      94: aload         4
      96: aload         5
      98: aload         6
     100: invokevirtual #74                 // Method fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
     103: return

  public void fireAdvisory(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQTopic, org.apache.activemq.command.Command, org.apache.activemq.command.ConsumerId, org.apache.activemq.command.ActiveMQMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #173                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #199                // Method org/apache/activemq/broker/BrokerService.isStarted:()Z
       7: ifeq          245
      10: aload         5
      12: ldc           #200                // String originBrokerName
      14: aload_0
      15: invokevirtual #201                // Method getBrokerName:()Ljava/lang/String;
      18: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      21: aload_0
      22: invokevirtual #202                // Method getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      25: ifnull        38
      28: aload_0
      29: invokevirtual #202                // Method getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      32: invokevirtual #203                // Method org/apache/activemq/command/BrokerId.getValue:()Ljava/lang/String;
      35: goto          40
      38: ldc           #204                // String NOT_SET
      40: astore        6
      42: aload         5
      44: ldc           #205                // String originBrokerId
      46: aload         6
      48: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      51: aload_0
      52: invokevirtual #173                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      55: invokevirtual #206                // Method org/apache/activemq/broker/BrokerService.getVmConnectorURI:()Ljava/net/URI;
      58: invokevirtual #207                // Method java/net/URI.toString:()Ljava/lang/String;
      61: astore        7
      63: aload_0
      64: invokevirtual #173                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      67: invokevirtual #208                // Method org/apache/activemq/broker/BrokerService.getDefaultSocketURIString:()Ljava/lang/String;
      70: ifnull        82
      73: aload_0
      74: invokevirtual #173                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      77: invokevirtual #208                // Method org/apache/activemq/broker/BrokerService.getDefaultSocketURIString:()Ljava/lang/String;
      80: astore        7
      82: aload         5
      84: ldc           #209                // String originBrokerURL
      86: aload         7
      88: invokevirtual #133                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      91: aload         5
      93: aload_3
      94: invokevirtual #210                // Method org/apache/activemq/command/ActiveMQMessage.setDataStructure:(Lorg/apache/activemq/command/DataStructure;)V
      97: aload         5
      99: iconst_0
     100: invokevirtual #211                // Method org/apache/activemq/command/ActiveMQMessage.setPersistent:(Z)V
     103: aload         5
     105: ldc           #212                // String Advisory
     107: invokevirtual #213                // Method org/apache/activemq/command/ActiveMQMessage.setType:(Ljava/lang/String;)V
     110: aload         5
     112: new           #214                // class org/apache/activemq/command/MessageId
     115: dup
     116: aload_0
     117: getfield      #16                 // Field advisoryProducerId:Lorg/apache/activemq/command/ProducerId;
     120: aload_0
     121: getfield      #19                 // Field messageIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
     124: invokevirtual #215                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
     127: invokespecial #216                // Method org/apache/activemq/command/MessageId."<init>":(Lorg/apache/activemq/command/ProducerId;J)V
     130: invokevirtual #217                // Method org/apache/activemq/command/ActiveMQMessage.setMessageId:(Lorg/apache/activemq/command/MessageId;)V
     133: aload         5
     135: aload         4
     137: invokevirtual #218                // Method org/apache/activemq/command/ActiveMQMessage.setTargetConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
     140: aload         5
     142: aload_2
     143: invokevirtual #219                // Method org/apache/activemq/command/ActiveMQMessage.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     146: aload         5
     148: iconst_0
     149: invokevirtual #220                // Method org/apache/activemq/command/ActiveMQMessage.setResponseRequired:(Z)V
     152: aload         5
     154: aload_0
     155: getfield      #16                 // Field advisoryProducerId:Lorg/apache/activemq/command/ProducerId;
     158: invokevirtual #221                // Method org/apache/activemq/command/ActiveMQMessage.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
     161: aload_1
     162: invokevirtual #222                // Method org/apache/activemq/broker/ConnectionContext.isProducerFlowControl:()Z
     165: istore        8
     167: new           #223                // class org/apache/activemq/broker/ProducerBrokerExchange
     170: dup
     171: invokespecial #224                // Method org/apache/activemq/broker/ProducerBrokerExchange."<init>":()V
     174: astore        9
     176: aload         9
     178: aload_1
     179: invokevirtual #225                // Method org/apache/activemq/broker/ProducerBrokerExchange.setConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
     182: aload         9
     184: iconst_1
     185: invokevirtual #226                // Method org/apache/activemq/broker/ProducerBrokerExchange.setMutable:(Z)V
     188: aload         9
     190: new           #227                // class org/apache/activemq/state/ProducerState
     193: dup
     194: new           #56                 // class org/apache/activemq/command/ProducerInfo
     197: dup
     198: invokespecial #228                // Method org/apache/activemq/command/ProducerInfo."<init>":()V
     201: invokespecial #229                // Method org/apache/activemq/state/ProducerState."<init>":(Lorg/apache/activemq/command/ProducerInfo;)V
     204: invokevirtual #230                // Method org/apache/activemq/broker/ProducerBrokerExchange.setProducerState:(Lorg/apache/activemq/state/ProducerState;)V
     207: aload_1
     208: iconst_0
     209: invokevirtual #231                // Method org/apache/activemq/broker/ConnectionContext.setProducerFlowControl:(Z)V
     212: aload_0
     213: getfield      #82                 // Field next:Lorg/apache/activemq/broker/Broker;
     216: aload         9
     218: aload         5
     220: invokeinterface #232,  3          // InterfaceMethod org/apache/activemq/broker/Broker.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
     225: aload_1
     226: iload         8
     228: invokevirtual #231                // Method org/apache/activemq/broker/ConnectionContext.setProducerFlowControl:(Z)V
     231: goto          245
     234: astore        10
     236: aload_1
     237: iload         8
     239: invokevirtual #231                // Method org/apache/activemq/broker/ConnectionContext.setProducerFlowControl:(Z)V
     242: aload         10
     244: athrow
     245: return
    Exception table:
       from    to  target type
         207   225   234   any
         234   236   234   any

  public java.util.Map<org.apache.activemq.command.ConnectionId, org.apache.activemq.command.ConnectionInfo> getAdvisoryConnections();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connections:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public java.util.Collection<org.apache.activemq.command.ConsumerInfo> getAdvisoryConsumers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #61                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #62                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: new           #233                // class java/util/ArrayList
      13: dup
      14: aload_0
      15: getfield      #10                 // Field consumers:Ljava/util/Map;
      18: invokeinterface #63,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      23: invokespecial #234                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      26: astore_1
      27: aload_0
      28: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #61                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      34: invokevirtual #66                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      37: aload_1
      38: areturn
      39: astore_2
      40: aload_0
      41: getfield      #7                  // Field consumersLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      44: invokevirtual #61                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      47: invokevirtual #66                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
          10    27    39   any
          39    40    39   any

  public java.util.Map<org.apache.activemq.command.ProducerId, org.apache.activemq.command.ProducerInfo> getAdvisoryProducers();
    Code:
       0: aload_0
       1: getfield      #11                 // Field producers:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.DestinationInfo> getAdvisoryDestinations();
    Code:
       0: aload_0
       1: getfield      #12                 // Field destinations:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  static {};
    Code:
       0: ldc_w         #235                // class org/apache/activemq/advisory/AdvisoryBroker
       3: invokestatic  #236                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #108                // Field LOG:Lorg/slf4j/Logger;
       9: new           #237                // class org/apache/activemq/util/IdGenerator
      12: dup
      13: invokespecial #238                // Method org/apache/activemq/util/IdGenerator."<init>":()V
      16: putstatic     #20                 // Field ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
      19: return
}
