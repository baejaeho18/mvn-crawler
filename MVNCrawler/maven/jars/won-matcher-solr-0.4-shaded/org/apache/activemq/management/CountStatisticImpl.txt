Compiled from "CountStatisticImpl.java"
public class org.apache.activemq.management.CountStatisticImpl extends org.apache.activemq.management.StatisticImpl implements javax.management.j2ee.statistics.CountStatistic {
  private final java.util.concurrent.atomic.AtomicLong counter;

  private org.apache.activemq.management.CountStatisticImpl parent;

  public org.apache.activemq.management.CountStatisticImpl(org.apache.activemq.management.CountStatisticImpl, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      11: return

  public org.apache.activemq.management.CountStatisticImpl(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #3                  // String count
       4: aload_2
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       8: return

  public org.apache.activemq.management.CountStatisticImpl(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method org/apache/activemq/management/StatisticImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: aload_0
       8: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      11: dup
      12: lconst_0
      13: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      16: putfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      19: return

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isDoReset:()Z
       4: ifeq          19
       7: aload_0
       8: invokespecial #10                 // Method org/apache/activemq/management/StatisticImpl.reset:()V
      11: aload_0
      12: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      15: lconst_0
      16: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      19: return

  public long getCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void setCount(long);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEnabled:()Z
       4: ifeq          15
       7: aload_0
       8: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      15: return

  public void add(long);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEnabled:()Z
       4: ifeq          35
       7: aload_0
       8: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      15: pop2
      16: aload_0
      17: invokevirtual #15                 // Method updateSampleTime:()V
      20: aload_0
      21: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      24: ifnull        35
      27: aload_0
      28: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      31: lload_1
      32: invokevirtual #16                 // Method add:(J)V
      35: return

  public void increment();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEnabled:()Z
       4: ifeq          33
       7: aload_0
       8: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      14: pop2
      15: aload_0
      16: invokevirtual #15                 // Method updateSampleTime:()V
      19: aload_0
      20: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      23: ifnull        33
      26: aload_0
      27: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      30: invokevirtual #18                 // Method increment:()V
      33: return

  public void subtract(long);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEnabled:()Z
       4: ifeq          36
       7: aload_0
       8: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: lneg
      13: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      16: pop2
      17: aload_0
      18: invokevirtual #15                 // Method updateSampleTime:()V
      21: aload_0
      22: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      25: ifnull        36
      28: aload_0
      29: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      32: lload_1
      33: invokevirtual #19                 // Method subtract:(J)V
      36: return

  public void decrement();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEnabled:()Z
       4: ifeq          33
       7: aload_0
       8: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      14: pop2
      15: aload_0
      16: invokevirtual #15                 // Method updateSampleTime:()V
      19: aload_0
      20: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      23: ifnull        33
      26: aload_0
      27: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      30: invokevirtual #21                 // Method decrement:()V
      33: return

  public org.apache.activemq.management.CountStatisticImpl getParent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
       4: areturn

  public void setParent(org.apache.activemq.management.CountStatisticImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
       4: ifnull        18
       7: aload_0
       8: getfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      11: aload_0
      12: invokevirtual #22                 // Method getCount:()J
      15: invokevirtual #19                 // Method subtract:(J)V
      18: aload_0
      19: aload_1
      20: putfield      #2                  // Field parent:Lorg/apache/activemq/management/CountStatisticImpl;
      23: return

  protected void appendFieldDescription(java.lang.StringBuffer);
    Code:
       0: aload_1
       1: ldc           #23                 // String  count:
       3: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       6: pop
       7: aload_1
       8: aload_0
       9: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      15: invokestatic  #25                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      18: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      21: pop
      22: aload_0
      23: aload_1
      24: invokespecial #26                 // Method org/apache/activemq/management/StatisticImpl.appendFieldDescription:(Ljava/lang/StringBuffer;)V
      27: return

  public double getPeriod();
    Code:
       0: aload_0
       1: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2d
       8: dstore_1
       9: dload_1
      10: dconst_0
      11: dcmpl
      12: ifne          17
      15: dconst_0
      16: dreturn
      17: invokestatic  #27                 // Method java/lang/System.currentTimeMillis:()J
      20: aload_0
      21: invokevirtual #28                 // Method getStartTime:()J
      24: lsub
      25: l2d
      26: dstore_3
      27: dload_3
      28: dload_1
      29: ldc2_w        #29                 // double 1000.0d
      32: dmul
      33: ddiv
      34: dreturn

  public double getFrequency();
    Code:
       0: aload_0
       1: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2d
       8: dstore_1
       9: invokestatic  #27                 // Method java/lang/System.currentTimeMillis:()J
      12: aload_0
      13: invokevirtual #28                 // Method getStartTime:()J
      16: lsub
      17: l2d
      18: dstore_3
      19: dload_1
      20: ldc2_w        #29                 // double 1000.0d
      23: dmul
      24: dload_3
      25: ddiv
      26: dreturn
}
