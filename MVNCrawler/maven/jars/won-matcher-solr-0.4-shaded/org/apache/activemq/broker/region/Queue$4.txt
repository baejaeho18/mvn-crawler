Compiled from "Queue.java"
class org.apache.activemq.broker.region.Queue$4 implements java.lang.Runnable {
  final org.apache.activemq.command.Message val$message;

  final org.apache.activemq.broker.ConnectionContext val$context;

  final org.apache.activemq.broker.ProducerBrokerExchange val$producerExchangeCopy;

  final boolean val$sendProducerAck;

  final org.apache.activemq.command.ProducerInfo val$producerInfo;

  final org.apache.activemq.broker.region.Queue this$0;

  org.apache.activemq.broker.region.Queue$4(org.apache.activemq.broker.region.Queue, org.apache.activemq.command.Message, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.ProducerBrokerExchange, boolean, org.apache.activemq.command.ProducerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Queue;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$producerExchangeCopy:Lorg/apache/activemq/broker/ProducerBrokerExchange;
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field val$sendProducerAck:Z
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$producerInfo:Lorg/apache/activemq/command/ProducerInfo;
      33: aload_0
      34: invokespecial #7                  // Method java/lang/Object."<init>":()V
      37: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
       4: invokevirtual #8                  // Method org/apache/activemq/command/Message.isExpired:()Z
       7: ifeq          57
      10: getstatic     #9                  // Field org/apache/activemq/broker/region/Queue.LOG:Lorg/slf4j/Logger;
      13: ldc           #10                 // String expired waiting for space..
      15: invokeinterface #11,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      20: aload_0
      21: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Queue;
      24: getfield      #12                 // Field org/apache/activemq/broker/region/Queue.broker:Lorg/apache/activemq/broker/Broker;
      27: aload_0
      28: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
      31: aload_0
      32: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      35: aconst_null
      36: invokeinterface #13,  4           // InterfaceMethod org/apache/activemq/broker/Broker.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;)V
      41: aload_0
      42: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Queue;
      45: getfield      #14                 // Field org/apache/activemq/broker/region/Queue.destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
      48: invokevirtual #15                 // Method org/apache/activemq/broker/region/DestinationStatistics.getExpired:()Lorg/apache/activemq/management/CountStatisticImpl;
      51: invokevirtual #16                 // Method org/apache/activemq/management/CountStatisticImpl.increment:()V
      54: goto          72
      57: aload_0
      58: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Queue;
      61: aload_0
      62: getfield      #4                  // Field val$producerExchangeCopy:Lorg/apache/activemq/broker/ProducerBrokerExchange;
      65: aload_0
      66: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      69: invokevirtual #17                 // Method org/apache/activemq/broker/region/Queue.doMessageSend:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      72: aload_0
      73: getfield      #5                  // Field val$sendProducerAck:Z
      76: ifeq          117
      79: new           #18                 // class org/apache/activemq/command/ProducerAck
      82: dup
      83: aload_0
      84: getfield      #6                  // Field val$producerInfo:Lorg/apache/activemq/command/ProducerInfo;
      87: invokevirtual #19                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      90: aload_0
      91: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      94: invokevirtual #20                 // Method org/apache/activemq/command/Message.getSize:()I
      97: invokespecial #21                 // Method org/apache/activemq/command/ProducerAck."<init>":(Lorg/apache/activemq/command/ProducerId;I)V
     100: astore_1
     101: aload_0
     102: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
     105: invokevirtual #22                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     108: aload_1
     109: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     114: goto          149
     117: new           #24                 // class org/apache/activemq/command/Response
     120: dup
     121: invokespecial #25                 // Method org/apache/activemq/command/Response."<init>":()V
     124: astore_1
     125: aload_1
     126: aload_0
     127: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
     130: invokevirtual #26                 // Method org/apache/activemq/command/Message.getCommandId:()I
     133: invokevirtual #27                 // Method org/apache/activemq/command/Response.setCorrelationId:(I)V
     136: aload_0
     137: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
     140: invokevirtual #22                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     143: aload_1
     144: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     149: goto          234
     152: astore_1
     153: aload_0
     154: getfield      #5                  // Field val$sendProducerAck:Z
     157: ifne          219
     160: aload_0
     161: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
     164: invokevirtual #29                 // Method org/apache/activemq/broker/ConnectionContext.isInRecoveryMode:()Z
     167: ifne          219
     170: aload_0
     171: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Queue;
     174: getfield      #30                 // Field org/apache/activemq/broker/region/Queue.brokerService:Lorg/apache/activemq/broker/BrokerService;
     177: invokevirtual #31                 // Method org/apache/activemq/broker/BrokerService.isStopping:()Z
     180: ifne          219
     183: new           #32                 // class org/apache/activemq/command/ExceptionResponse
     186: dup
     187: aload_1
     188: invokespecial #33                 // Method org/apache/activemq/command/ExceptionResponse."<init>":(Ljava/lang/Throwable;)V
     191: astore_2
     192: aload_2
     193: aload_0
     194: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
     197: invokevirtual #26                 // Method org/apache/activemq/command/Message.getCommandId:()I
     200: invokevirtual #34                 // Method org/apache/activemq/command/ExceptionResponse.setCorrelationId:(I)V
     203: aload_0
     204: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
     207: invokevirtual #22                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     210: aload_2
     211: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     216: goto          234
     219: getstatic     #9                  // Field org/apache/activemq/broker/region/Queue.LOG:Lorg/slf4j/Logger;
     222: ldc           #35                 // String unexpected exception on deferred send of: {}
     224: aload_0
     225: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
     228: aload_1
     229: invokeinterface #36,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     234: return
    Exception table:
       from    to  target type
           0   149   152   Class java/lang/Exception
}
