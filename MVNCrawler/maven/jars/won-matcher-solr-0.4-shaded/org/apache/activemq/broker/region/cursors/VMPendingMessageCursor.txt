Compiled from "VMPendingMessageCursor.java"
public class org.apache.activemq.broker.region.cursors.VMPendingMessageCursor extends org.apache.activemq.broker.region.cursors.AbstractPendingMessageCursor {
  private final org.apache.activemq.broker.region.cursors.PendingList list;

  private java.util.Iterator<org.apache.activemq.broker.region.MessageReference> iter;

  public org.apache.activemq.broker.region.cursors.VMPendingMessageCursor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor."<init>":(Z)V
       5: aload_0
       6: getfield      #2                  // Field prioritizedMessages:Z
       9: ifeq          26
      12: aload_0
      13: new           #3                  // class org/apache/activemq/broker/region/cursors/PrioritizedPendingList
      16: dup
      17: invokespecial #4                  // Method org/apache/activemq/broker/region/cursors/PrioritizedPendingList."<init>":()V
      20: putfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      23: goto          37
      26: aload_0
      27: new           #6                  // class org/apache/activemq/broker/region/cursors/OrderedPendingList
      30: dup
      31: invokespecial #7                  // Method org/apache/activemq/broker/region/cursors/OrderedPendingList."<init>":()V
      34: putfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      37: return

  public synchronized java.util.List<org.apache.activemq.broker.region.MessageReference> remove(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination) throws java.lang.Exception;
    Code:
       0: new           #8                  // class java/util/ArrayList
       3: dup
       4: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      12: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          79
      29: aload         4
      31: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #13                 // class org/apache/activemq/broker/region/MessageReference
      39: astore        5
      41: aload         5
      43: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      48: aload_2
      49: if_acmpne     76
      52: aload         5
      54: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      59: pop
      60: aload_3
      61: aload         5
      63: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload         4
      71: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.remove:()V
      76: goto          19
      79: aload_3
      80: areturn

  public synchronized boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      18: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      23: astore_1
      24: aload_1
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          73
      33: aload_1
      34: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #13                 // class org/apache/activemq/broker/region/MessageReference
      42: astore_2
      43: aload_2
      44: getstatic     #19                 // Field org/apache/activemq/broker/region/QueueMessageReference.NULL_MESSAGE:Lorg/apache/activemq/broker/region/QueueMessageReference;
      47: if_acmpne     53
      50: goto          24
      53: aload_2
      54: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isDropped:()Z
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: aload_1
      65: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.remove:()V
      70: goto          24
      73: iconst_1
      74: ireturn

  public synchronized void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
       5: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      10: putfield      #21                 // Field iter:Ljava/util/Iterator;
      13: aload_0
      14: aconst_null
      15: putfield      #22                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      18: return

  public synchronized void addMessageLast(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
       6: pop
       7: aload_0
       8: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      11: aload_1
      12: invokeinterface #24,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      17: pop
      18: return

  public synchronized void addMessageFirst(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
       6: pop
       7: aload_0
       8: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      11: aload_1
      12: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      17: pop
      18: return

  public synchronized boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field iter:Ljava/util/Iterator;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public synchronized org.apache.activemq.broker.region.MessageReference next();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #21                 // Field iter:Ljava/util/Iterator;
       5: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      10: checkcast     #13                 // class org/apache/activemq/broker/region/MessageReference
      13: putfield      #22                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      16: aload_0
      17: getfield      #22                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      20: ifnull        33
      23: aload_0
      24: getfield      #22                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      27: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
      32: pop
      33: aload_0
      34: getfield      #22                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      37: areturn

  public synchronized void remove();
    Code:
       0: aload_0
       1: getfield      #22                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
       4: ifnull        17
       7: aload_0
       8: getfield      #22                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      11: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      16: pop
      17: aload_0
      18: getfield      #21                 // Field iter:Ljava/util/Iterator;
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.remove:()V
      26: return

  public synchronized int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #26,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.size:()I
       9: ireturn

  public synchronized void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #13                 // class org/apache/activemq/broker/region/MessageReference
      28: astore_2
      29: aload_2
      30: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      35: pop
      36: goto          10
      39: aload_0
      40: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      43: invokeinterface #27,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.clear:()V
      48: return

  public synchronized void remove(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.remove:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      10: pop
      11: aload_1
      12: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      17: pop
      18: return

  public java.util.LinkedList<org.apache.activemq.broker.region.MessageReference> pageInList(int);
    Code:
       0: new           #29                 // class java/util/LinkedList
       3: dup
       4: invokespecial #30                 // Method java/util/LinkedList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field list:Lorg/apache/activemq/broker/region/cursors/PendingList;
      12: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          67
      27: aload_3
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #13                 // class org/apache/activemq/broker/region/MessageReference
      36: astore        4
      38: aload         4
      40: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
      45: pop
      46: aload_2
      47: aload         4
      49: invokevirtual #31                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload_2
      54: invokevirtual #32                 // Method java/util/LinkedList.size:()I
      57: iload_1
      58: if_icmplt     64
      61: goto          67
      64: goto          18
      67: aload_2
      68: areturn

  public boolean isTransient();
    Code:
       0: iconst_1
       1: ireturn

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.destroy:()V
       4: aload_0
       5: invokevirtual #34                 // Method clear:()V
       8: return
}
