Compiled from "TransactionBroker.java"
public class org.apache.activemq.broker.TransactionBroker extends org.apache.activemq.broker.BrokerFilter {
  private static final org.slf4j.Logger LOG;

  private org.apache.activemq.store.TransactionStore transactionStore;

  private java.util.Map<org.apache.activemq.command.TransactionId, org.apache.activemq.transaction.XATransaction> xaTransactions;

  private org.apache.activemq.ActiveMQMessageAudit audit;

  public org.apache.activemq.broker.TransactionBroker(org.apache.activemq.broker.Broker, org.apache.activemq.store.TransactionStore);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/activemq/broker/BrokerFilter."<init>":(Lorg/apache/activemq/broker/Broker;)V
       5: aload_0
       6: new           #6                  // class java/util/LinkedHashMap
       9: dup
      10: invokespecial #7                  // Method java/util/LinkedHashMap."<init>":()V
      13: putfield      #8                  // Field xaTransactions:Ljava/util/Map;
      16: aload_0
      17: aload_2
      18: putfield      #9                  // Field transactionStore:Lorg/apache/activemq/store/TransactionStore;
      21: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field transactionStore:Lorg/apache/activemq/store/TransactionStore;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/store/TransactionStore.start:()V
       9: new           #11                 // class org/apache/activemq/broker/ConnectionContext
      12: dup
      13: invokespecial #12                 // Method org/apache/activemq/broker/ConnectionContext."<init>":()V
      16: astore_1
      17: aload_1
      18: aload_0
      19: invokevirtual #13                 // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
      22: aload_1
      23: iconst_1
      24: invokevirtual #14                 // Method org/apache/activemq/broker/ConnectionContext.setInRecoveryMode:(Z)V
      27: aload_1
      28: new           #15                 // class java/util/concurrent/ConcurrentHashMap
      31: dup
      32: invokespecial #16                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      35: invokevirtual #17                 // Method org/apache/activemq/broker/ConnectionContext.setTransactions:(Ljava/util/concurrent/ConcurrentHashMap;)V
      38: aload_1
      39: iconst_0
      40: invokevirtual #18                 // Method org/apache/activemq/broker/ConnectionContext.setProducerFlowControl:(Z)V
      43: new           #19                 // class org/apache/activemq/broker/ProducerBrokerExchange
      46: dup
      47: invokespecial #20                 // Method org/apache/activemq/broker/ProducerBrokerExchange."<init>":()V
      50: astore_2
      51: aload_2
      52: iconst_1
      53: invokevirtual #21                 // Method org/apache/activemq/broker/ProducerBrokerExchange.setMutable:(Z)V
      56: aload_2
      57: aload_1
      58: invokevirtual #22                 // Method org/apache/activemq/broker/ProducerBrokerExchange.setConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
      61: aload_2
      62: new           #23                 // class org/apache/activemq/state/ProducerState
      65: dup
      66: new           #24                 // class org/apache/activemq/command/ProducerInfo
      69: dup
      70: invokespecial #25                 // Method org/apache/activemq/command/ProducerInfo."<init>":()V
      73: invokespecial #26                 // Method org/apache/activemq/state/ProducerState."<init>":(Lorg/apache/activemq/command/ProducerInfo;)V
      76: invokevirtual #27                 // Method org/apache/activemq/broker/ProducerBrokerExchange.setProducerState:(Lorg/apache/activemq/state/ProducerState;)V
      79: new           #28                 // class org/apache/activemq/broker/ConsumerBrokerExchange
      82: dup
      83: invokespecial #29                 // Method org/apache/activemq/broker/ConsumerBrokerExchange."<init>":()V
      86: astore_3
      87: aload_3
      88: aload_1
      89: invokevirtual #30                 // Method org/apache/activemq/broker/ConsumerBrokerExchange.setConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
      92: aload_0
      93: getfield      #9                  // Field transactionStore:Lorg/apache/activemq/store/TransactionStore;
      96: new           #31                 // class org/apache/activemq/broker/TransactionBroker$1
      99: dup
     100: aload_0
     101: aload_1
     102: invokespecial #32                 // Method org/apache/activemq/broker/TransactionBroker$1."<init>":(Lorg/apache/activemq/broker/TransactionBroker;Lorg/apache/activemq/broker/ConnectionContext;)V
     105: invokeinterface #33,  2           // InterfaceMethod org/apache/activemq/store/TransactionStore.recover:(Lorg/apache/activemq/store/TransactionRecoveryListener;)V
     110: goto          146
     113: astore_1
     114: aload_1
     115: invokevirtual #35                 // Method org/apache/activemq/util/WrappedException.getCause:()Ljava/lang/Throwable;
     118: astore_2
     119: new           #36                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #38                 // String Recovery Failed:
     128: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_2
     132: invokevirtual #40                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     135: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: aload_2
     142: invokestatic  #42                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
     145: athrow
     146: aload_0
     147: getfield      #43                 // Field next:Lorg/apache/activemq/broker/Broker;
     150: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/Broker.start:()V
     155: return
    Exception table:
       from    to  target type
           9   110   113   Class org/apache/activemq/util/WrappedException

  private void registerMBean(org.apache.activemq.transaction.XATransaction);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #46                 // Method org/apache/activemq/broker/BrokerService.getRegionBroker:()Lorg/apache/activemq/broker/Broker;
       7: instanceof    #47                 // class org/apache/activemq/broker/jmx/ManagedRegionBroker
      10: ifeq          29
      13: aload_0
      14: invokevirtual #45                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      17: invokevirtual #46                 // Method org/apache/activemq/broker/BrokerService.getRegionBroker:()Lorg/apache/activemq/broker/Broker;
      20: checkcast     #47                 // class org/apache/activemq/broker/jmx/ManagedRegionBroker
      23: astore_2
      24: aload_2
      25: aload_1
      26: invokevirtual #48                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.registerRecoveredTransactionMBean:(Lorg/apache/activemq/transaction/XATransaction;)V
      29: return

  private void forceDestinationWakeupOnCompletion(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.transaction.Transaction, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.BaseCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: iconst_0
       4: invokevirtual #49                 // Method addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
       7: astore        5
       9: aload_0
      10: aload         5
      12: aload_2
      13: aload         4
      15: invokespecial #50                 // Method registerSync:(Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/transaction/Transaction;Lorg/apache/activemq/command/BaseCommand;)V
      18: return

  private void registerSync(org.apache.activemq.broker.region.Destination, org.apache.activemq.transaction.Transaction, org.apache.activemq.command.BaseCommand);
    Code:
       0: new           #51                 // class org/apache/activemq/broker/TransactionBroker$PreparedDestinationCompletion
       3: dup
       4: aload_1
       5: aload_3
       6: invokevirtual #52                 // Method org/apache/activemq/command/BaseCommand.isMessage:()Z
       9: invokespecial #53                 // Method org/apache/activemq/broker/TransactionBroker$PreparedDestinationCompletion."<init>":(Lorg/apache/activemq/broker/region/Destination;Z)V
      12: astore        4
      14: aload_2
      15: aload         4
      17: invokevirtual #54                 // Method org/apache/activemq/transaction/Transaction.findMatching:(Lorg/apache/activemq/transaction/Synchronization;)Lorg/apache/activemq/transaction/Synchronization;
      20: astore        5
      22: aload         5
      24: ifnull        38
      27: aload         5
      29: checkcast     #51                 // class org/apache/activemq/broker/TransactionBroker$PreparedDestinationCompletion
      32: invokevirtual #55                 // Method org/apache/activemq/broker/TransactionBroker$PreparedDestinationCompletion.incrementOpCount:()V
      35: goto          44
      38: aload_2
      39: aload         4
      41: invokevirtual #56                 // Method org/apache/activemq/transaction/Transaction.addSynchronization:(Lorg/apache/activemq/transaction/Synchronization;)V
      44: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field transactionStore:Lorg/apache/activemq/store/TransactionStore;
       4: invokeinterface #57,  1           // InterfaceMethod org/apache/activemq/store/TransactionStore.stop:()V
       9: aload_0
      10: getfield      #43                 // Field next:Lorg/apache/activemq/broker/Broker;
      13: invokeinterface #58,  1           // InterfaceMethod org/apache/activemq/broker/Broker.stop:()V
      18: return

  public org.apache.activemq.command.TransactionId[] getPreparedTransactions(org.apache.activemq.broker.ConnectionContext) throws java.lang.Exception;
    Code:
       0: new           #59                 // class java/util/ArrayList
       3: dup
       4: invokespecial #60                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      12: dup
      13: astore_3
      14: monitorenter
      15: aload_0
      16: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      19: invokeinterface #61,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      24: invokeinterface #62,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          91
      41: aload         4
      43: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #65                 // class org/apache/activemq/transaction/Transaction
      51: astore        5
      53: aload         5
      55: invokevirtual #66                 // Method org/apache/activemq/transaction/Transaction.isPrepared:()Z
      58: ifeq          88
      61: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      64: ldc           #67                 // String prepared transaction: {}
      66: aload         5
      68: invokevirtual #68                 // Method org/apache/activemq/transaction/Transaction.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      71: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      76: aload_2
      77: aload         5
      79: invokevirtual #68                 // Method org/apache/activemq/transaction/Transaction.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      82: invokeinterface #70,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          31
      91: aload_3
      92: monitorexit
      93: goto          103
      96: astore        6
      98: aload_3
      99: monitorexit
     100: aload         6
     102: athrow
     103: aload_2
     104: invokeinterface #71,  1           // InterfaceMethod java/util/List.size:()I
     109: anewarray     #72                 // class org/apache/activemq/command/XATransactionId
     112: astore_3
     113: aload_2
     114: aload_3
     115: invokeinterface #73,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     120: pop
     121: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     124: ldc           #74                 // String prepared transaction list size: {}
     126: aload_3
     127: arraylength
     128: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     131: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     136: aload_3
     137: areturn
    Exception table:
       from    to  target type
          15    93    96   any
          96   100    96   any

  public void beginTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #76                 // Method org/apache/activemq/command/TransactionId.isXATransaction:()Z
       4: ifeq          89
       7: aconst_null
       8: astore_3
       9: aload_0
      10: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      13: dup
      14: astore        4
      16: monitorenter
      17: aload_0
      18: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      21: aload_2
      22: invokeinterface #77,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #78                 // class org/apache/activemq/transaction/XATransaction
      30: astore_3
      31: aload_3
      32: ifnull        39
      35: aload         4
      37: monitorexit
      38: return
      39: new           #78                 // class org/apache/activemq/transaction/XATransaction
      42: dup
      43: aload_0
      44: getfield      #9                  // Field transactionStore:Lorg/apache/activemq/store/TransactionStore;
      47: aload_2
      48: checkcast     #72                 // class org/apache/activemq/command/XATransactionId
      51: aload_0
      52: aload_1
      53: invokevirtual #79                 // Method org/apache/activemq/broker/ConnectionContext.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      56: invokespecial #80                 // Method org/apache/activemq/transaction/XATransaction."<init>":(Lorg/apache/activemq/store/TransactionStore;Lorg/apache/activemq/command/XATransactionId;Lorg/apache/activemq/broker/TransactionBroker;Lorg/apache/activemq/command/ConnectionId;)V
      59: astore_3
      60: aload_0
      61: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      64: aload_2
      65: aload_3
      66: invokeinterface #81,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload         4
      74: monitorexit
      75: goto          86
      78: astore        5
      80: aload         4
      82: monitorexit
      83: aload         5
      85: athrow
      86: goto          171
      89: aload_1
      90: invokevirtual #82                 // Method org/apache/activemq/broker/ConnectionContext.getTransactions:()Ljava/util/concurrent/ConcurrentHashMap;
      93: astore_3
      94: aload_3
      95: aload_2
      96: invokeinterface #77,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: checkcast     #65                 // class org/apache/activemq/transaction/Transaction
     104: astore        4
     106: aload         4
     108: ifnull        143
     111: new           #83                 // class javax/jms/JMSException
     114: dup
     115: new           #36                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #84                 // String Transaction \'
     124: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_2
     128: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #86                 // String \' has already been started.
     133: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #87                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: new           #88                 // class org/apache/activemq/transaction/LocalTransaction
     146: dup
     147: aload_0
     148: getfield      #9                  // Field transactionStore:Lorg/apache/activemq/store/TransactionStore;
     151: aload_2
     152: checkcast     #89                 // class org/apache/activemq/command/LocalTransactionId
     155: aload_1
     156: invokespecial #90                 // Method org/apache/activemq/transaction/LocalTransaction."<init>":(Lorg/apache/activemq/store/TransactionStore;Lorg/apache/activemq/command/LocalTransactionId;Lorg/apache/activemq/broker/ConnectionContext;)V
     159: astore        4
     161: aload_3
     162: aload_2
     163: aload         4
     165: invokeinterface #81,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: return
    Exception table:
       from    to  target type
          17    38    78   any
          39    75    78   any
          78    83    78   any

  public int prepareTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #91                 // Method getTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)Lorg/apache/activemq/transaction/Transaction;
       7: astore_3
       8: aload_3
       9: invokevirtual #92                 // Method org/apache/activemq/transaction/Transaction.prepare:()I
      12: ireturn

  public void commitTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #91                 // Method getTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)Lorg/apache/activemq/transaction/Transaction;
       7: astore        4
       9: aload         4
      11: iload_3
      12: invokevirtual #93                 // Method org/apache/activemq/transaction/Transaction.commit:(Z)V
      15: return

  public void rollbackTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #91                 // Method getTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)Lorg/apache/activemq/transaction/Transaction;
       7: astore_3
       8: aload_3
       9: invokevirtual #94                 // Method org/apache/activemq/transaction/Transaction.rollback:()V
      12: return

  public void forgetTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #91                 // Method getTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)Lorg/apache/activemq/transaction/Transaction;
       7: astore_3
       8: aload_3
       9: invokevirtual #94                 // Method org/apache/activemq/transaction/Transaction.rollback:()V
      12: return

  public void acknowledge(org.apache.activemq.broker.ConsumerBrokerExchange, org.apache.activemq.command.MessageAck) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #95                 // Method org/apache/activemq/broker/ConsumerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       4: astore_3
       5: aload_3
       6: invokevirtual #96                 // Method org/apache/activemq/broker/ConnectionContext.getTransaction:()Lorg/apache/activemq/transaction/Transaction;
       9: astore        4
      11: aconst_null
      12: astore        5
      14: aload_2
      15: invokevirtual #97                 // Method org/apache/activemq/command/MessageAck.isInTransaction:()Z
      18: ifeq          33
      21: aload_0
      22: aload_3
      23: aload_2
      24: invokevirtual #98                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      27: iconst_0
      28: invokevirtual #91                 // Method getTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)Lorg/apache/activemq/transaction/Transaction;
      31: astore        5
      33: aload_3
      34: aload         5
      36: invokevirtual #99                 // Method org/apache/activemq/broker/ConnectionContext.setTransaction:(Lorg/apache/activemq/transaction/Transaction;)V
      39: aload_0
      40: getfield      #43                 // Field next:Lorg/apache/activemq/broker/Broker;
      43: aload_1
      44: aload_2
      45: invokeinterface #100,  3          // InterfaceMethod org/apache/activemq/broker/Broker.acknowledge:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/MessageAck;)V
      50: aload_3
      51: aload         4
      53: invokevirtual #99                 // Method org/apache/activemq/broker/ConnectionContext.setTransaction:(Lorg/apache/activemq/transaction/Transaction;)V
      56: goto          70
      59: astore        6
      61: aload_3
      62: aload         4
      64: invokevirtual #99                 // Method org/apache/activemq/broker/ConnectionContext.setTransaction:(Lorg/apache/activemq/transaction/Transaction;)V
      67: aload         6
      69: athrow
      70: return
    Exception table:
       from    to  target type
          39    50    59   any
          59    61    59   any

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #101                // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       4: astore_3
       5: aload_3
       6: invokevirtual #96                 // Method org/apache/activemq/broker/ConnectionContext.getTransaction:()Lorg/apache/activemq/transaction/Transaction;
       9: astore        4
      11: aconst_null
      12: astore        5
      14: aconst_null
      15: astore        6
      17: aload_2
      18: invokevirtual #102                // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      21: ifnull        59
      24: aload_0
      25: aload_3
      26: aload_2
      27: invokevirtual #102                // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      30: iconst_0
      31: invokevirtual #91                 // Method getTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)Lorg/apache/activemq/transaction/Transaction;
      34: astore        5
      36: aload         5
      38: ifnull        59
      41: new           #103                // class org/apache/activemq/broker/TransactionBroker$2
      44: dup
      45: aload_0
      46: aload_2
      47: invokespecial #104                // Method org/apache/activemq/broker/TransactionBroker$2."<init>":(Lorg/apache/activemq/broker/TransactionBroker;Lorg/apache/activemq/command/Message;)V
      50: astore        6
      52: aload         5
      54: aload         6
      56: invokevirtual #56                 // Method org/apache/activemq/transaction/Transaction.addSynchronization:(Lorg/apache/activemq/transaction/Synchronization;)V
      59: aload_0
      60: getfield      #1                  // Field audit:Lorg/apache/activemq/ActiveMQMessageAudit;
      63: ifnull        77
      66: aload_0
      67: getfield      #1                  // Field audit:Lorg/apache/activemq/ActiveMQMessageAudit;
      70: aload_2
      71: invokevirtual #105                // Method org/apache/activemq/ActiveMQMessageAudit.isDuplicate:(Lorg/apache/activemq/broker/region/MessageReference;)Z
      74: ifne          117
      77: aload_3
      78: aload         5
      80: invokevirtual #99                 // Method org/apache/activemq/broker/ConnectionContext.setTransaction:(Lorg/apache/activemq/transaction/Transaction;)V
      83: aload_0
      84: getfield      #43                 // Field next:Lorg/apache/activemq/broker/Broker;
      87: aload_1
      88: aload_2
      89: invokeinterface #106,  3          // InterfaceMethod org/apache/activemq/broker/Broker.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      94: aload_3
      95: aload         4
      97: invokevirtual #99                 // Method org/apache/activemq/broker/ConnectionContext.setTransaction:(Lorg/apache/activemq/transaction/Transaction;)V
     100: goto          114
     103: astore        7
     105: aload_3
     106: aload         4
     108: invokevirtual #99                 // Method org/apache/activemq/broker/ConnectionContext.setTransaction:(Lorg/apache/activemq/transaction/Transaction;)V
     111: aload         7
     113: athrow
     114: goto          145
     117: aload         6
     119: ifnull        134
     122: aload         5
     124: ifnull        134
     127: aload         5
     129: aload         6
     131: invokevirtual #107                // Method org/apache/activemq/transaction/Transaction.removeSynchronization:(Lorg/apache/activemq/transaction/Synchronization;)V
     134: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     137: ldc           #108                // String IGNORING duplicate message {}
     139: aload_2
     140: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     145: return
    Exception table:
       from    to  target type
          83    94   103   any
         103   105   103   any

  public void removeConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #82                 // Method org/apache/activemq/broker/ConnectionContext.getTransactions:()Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #109                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #62,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore        4
      14: aload         4
      16: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          68
      24: aload         4
      26: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #65                 // class org/apache/activemq/transaction/Transaction
      34: astore        5
      36: aload         5
      38: invokevirtual #94                 // Method org/apache/activemq/transaction/Transaction.rollback:()V
      41: goto          58
      44: astore        5
      46: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      49: ldc           #111                // String ERROR Rolling back disconnected client\'s transactions:
      51: aload         5
      53: invokeinterface #112,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      58: aload         4
      60: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.remove:()V
      65: goto          14
      68: aload_0
      69: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      72: dup
      73: astore        4
      75: monitorenter
      76: new           #59                 // class java/util/ArrayList
      79: dup
      80: invokespecial #60                 // Method java/util/ArrayList."<init>":()V
      83: astore        5
      85: aload_0
      86: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      89: invokeinterface #61,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      94: invokeinterface #114,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      99: astore        6
     101: aload         6
     103: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     108: ifeq          165
     111: aload         6
     113: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #78                 // class org/apache/activemq/transaction/XATransaction
     121: astore        7
     123: aload         7
     125: invokevirtual #115                // Method org/apache/activemq/transaction/XATransaction.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     128: ifnull        162
     131: aload         7
     133: invokevirtual #115                // Method org/apache/activemq/transaction/XATransaction.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     136: aload_2
     137: invokevirtual #116                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     140: invokevirtual #117                // Method org/apache/activemq/command/ConnectionId.equals:(Ljava/lang/Object;)Z
     143: ifeq          162
     146: aload         7
     148: invokevirtual #118                // Method org/apache/activemq/transaction/XATransaction.isPrepared:()Z
     151: ifne          162
     154: aload         5
     156: aload         7
     158: invokevirtual #119                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     161: pop
     162: goto          101
     165: aload         5
     167: invokevirtual #120                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     170: astore        6
     172: aload         6
     174: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     179: ifeq          219
     182: aload         6
     184: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     189: checkcast     #78                 // class org/apache/activemq/transaction/XATransaction
     192: astore        7
     194: aload         7
     196: invokevirtual #121                // Method org/apache/activemq/transaction/XATransaction.rollback:()V
     199: goto          216
     202: astore        8
     204: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     207: ldc           #122                // String ERROR Rolling back disconnected client\'s xa transactions:
     209: aload         8
     211: invokeinterface #112,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     216: goto          172
     219: aload         4
     221: monitorexit
     222: goto          233
     225: astore        9
     227: aload         4
     229: monitorexit
     230: aload         9
     232: athrow
     233: aload_0
     234: getfield      #43                 // Field next:Lorg/apache/activemq/broker/Broker;
     237: aload_1
     238: aload_2
     239: aload_3
     240: invokeinterface #123,  4          // InterfaceMethod org/apache/activemq/broker/Broker.removeConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;Ljava/lang/Throwable;)V
     245: return
    Exception table:
       from    to  target type
          24    41    44   Class java/lang/Exception
         194   199   202   Class java/lang/Exception
          76   222   225   any
         225   230   225   any

  public org.apache.activemq.transaction.Transaction getTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId, boolean) throws javax.jms.JMSException, javax.transaction.xa.XAException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
       7: dup
       8: astore        5
      10: monitorenter
      11: aload_2
      12: invokevirtual #76                 // Method org/apache/activemq/command/TransactionId.isXATransaction:()Z
      15: ifeq          25
      18: aload_0
      19: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      22: goto          29
      25: aload_1
      26: invokevirtual #82                 // Method org/apache/activemq/broker/ConnectionContext.getTransactions:()Ljava/util/concurrent/ConcurrentHashMap;
      29: astore        4
      31: aload         5
      33: monitorexit
      34: goto          45
      37: astore        6
      39: aload         5
      41: monitorexit
      42: aload         6
      44: athrow
      45: aload         4
      47: aload_2
      48: invokeinterface #77,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #65                 // class org/apache/activemq/transaction/Transaction
      56: astore        5
      58: aload         5
      60: ifnull        66
      63: aload         5
      65: areturn
      66: aload_2
      67: invokevirtual #76                 // Method org/apache/activemq/command/TransactionId.isXATransaction:()Z
      70: ifeq          107
      73: new           #36                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #84                 // String Transaction \'
      82: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_2
      86: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: ldc           #124                // String \' has not been started.
      91: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: bipush        -4
      99: invokestatic  #125                // Method org/apache/activemq/transaction/XATransaction.newXAException:(Ljava/lang/String;I)Ljavax/transaction/xa/XAException;
     102: astore        6
     104: aload         6
     106: athrow
     107: new           #83                 // class javax/jms/JMSException
     110: dup
     111: new           #36                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #84                 // String Transaction \'
     120: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_2
     124: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: ldc           #124                // String \' has not been started.
     129: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #87                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     138: athrow
    Exception table:
       from    to  target type
          11    34    37   any
          37    42    37   any

  public void removeTransaction(org.apache.activemq.command.XATransactionId);
    Code:
       0: aload_0
       1: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #8                  // Field xaTransactions:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #126,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public synchronized void brokerServiceStarted();
    Code:
       0: aload_0
       1: invokespecial #127                // Method org/apache/activemq/broker/BrokerFilter.brokerServiceStarted:()V
       4: aload_0
       5: invokevirtual #45                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       8: invokevirtual #128                // Method org/apache/activemq/broker/BrokerService.isSupportFailOver:()Z
      11: ifeq          32
      14: aload_0
      15: getfield      #1                  // Field audit:Lorg/apache/activemq/ActiveMQMessageAudit;
      18: ifnonnull     32
      21: aload_0
      22: new           #129                // class org/apache/activemq/ActiveMQMessageAudit
      25: dup
      26: invokespecial #130                // Method org/apache/activemq/ActiveMQMessageAudit."<init>":()V
      29: putfield      #1                  // Field audit:Lorg/apache/activemq/ActiveMQMessageAudit;
      32: return

  static void access$000(org.apache.activemq.broker.TransactionBroker, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.transaction.Transaction, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.BaseCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method forceDestinationWakeupOnCompletion:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/transaction/Transaction;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/BaseCommand;)V
       9: return

  static void access$100(org.apache.activemq.broker.TransactionBroker, org.apache.activemq.transaction.XATransaction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method registerMBean:(Lorg/apache/activemq/transaction/XATransaction;)V
       5: return

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.activemq.ActiveMQMessageAudit access$300(org.apache.activemq.broker.TransactionBroker);
    Code:
       0: aload_0
       1: getfield      #1                  // Field audit:Lorg/apache/activemq/ActiveMQMessageAudit;
       4: areturn

  static {};
    Code:
       0: ldc_w         #131                // class org/apache/activemq/broker/TransactionBroker
       3: invokestatic  #132                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
