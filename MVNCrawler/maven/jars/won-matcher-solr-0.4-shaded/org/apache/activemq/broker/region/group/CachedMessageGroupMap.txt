Compiled from "CachedMessageGroupMap.java"
public class org.apache.activemq.broker.region.group.CachedMessageGroupMap implements org.apache.activemq.broker.region.group.MessageGroupMap {
  private final org.apache.activemq.memory.LRUMap<java.lang.String, org.apache.activemq.command.ConsumerId> cache;

  private final int maximumCacheSize;

  org.apache.activemq.broker.region.group.CachedMessageGroupMap(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/activemq/memory/LRUMap
       8: dup
       9: iload_1
      10: invokespecial #3                  // Method org/apache/activemq/memory/LRUMap."<init>":(I)V
      13: putfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
      16: aload_0
      17: iload_1
      18: putfield      #5                  // Field maximumCacheSize:I
      21: return

  public synchronized void put(java.lang.String, org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #6                  // Method org/apache/activemq/memory/LRUMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public synchronized org.apache.activemq.command.ConsumerId get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
       4: aload_1
       5: invokevirtual #7                  // Method org/apache/activemq/memory/LRUMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class org/apache/activemq/command/ConsumerId
      11: areturn

  public synchronized org.apache.activemq.command.ConsumerId removeGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
       4: aload_1
       5: invokevirtual #9                  // Method org/apache/activemq/memory/LRUMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class org/apache/activemq/command/ConsumerId
      11: areturn

  public synchronized org.apache.activemq.broker.region.group.MessageGroupSet removeConsumer(org.apache.activemq.command.ConsumerId);
    Code:
       0: new           #10                 // class org/apache/activemq/broker/region/group/SimpleMessageGroupSet
       3: dup
       4: invokespecial #11                 // Method org/apache/activemq/broker/region/group/SimpleMessageGroupSet."<init>":()V
       7: astore_2
       8: new           #12                 // class java/util/HashMap
      11: dup
      12: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      15: astore_3
      16: aload_3
      17: aload_0
      18: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
      21: invokeinterface #14,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      26: aload_3
      27: invokeinterface #15,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      32: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: astore        4
      39: aload         4
      41: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          92
      49: aload         4
      51: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #19                 // class java/lang/String
      59: astore        5
      61: aload_3
      62: aload         5
      64: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #8                  // class org/apache/activemq/command/ConsumerId
      72: astore        6
      74: aload         6
      76: aload_1
      77: invokevirtual #21                 // Method org/apache/activemq/command/ConsumerId.equals:(Ljava/lang/Object;)Z
      80: ifeq          89
      83: aload_2
      84: aload         5
      86: invokevirtual #22                 // Method org/apache/activemq/broker/region/group/SimpleMessageGroupSet.add:(Ljava/lang/String;)V
      89: goto          39
      92: aload_2
      93: invokevirtual #23                 // Method org/apache/activemq/broker/region/group/SimpleMessageGroupSet.getUnderlyingSet:()Ljava/util/Set;
      96: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     101: astore        4
     103: aload         4
     105: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          138
     113: aload         4
     115: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #19                 // class java/lang/String
     123: astore        5
     125: aload_0
     126: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
     129: aload         5
     131: invokevirtual #9                  // Method org/apache/activemq/memory/LRUMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: goto          103
     138: aload_2
     139: areturn

  public synchronized void removeAll();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
       4: invokevirtual #25                 // Method org/apache/activemq/memory/LRUMap.clear:()V
       7: return

  public synchronized java.util.Map<java.lang.String, java.lang.String> getGroups();
    Code:
       0: new           #12                 // class java/util/HashMap
       3: dup
       4: invokespecial #13                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
      12: invokevirtual #26                 // Method org/apache/activemq/memory/LRUMap.entrySet:()Ljava/util/Set;
      15: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          68
      30: aload_2
      31: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #27                 // class java/util/Map$Entry
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: aload_3
      48: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: checkcast     #8                  // class org/apache/activemq/command/ConsumerId
      56: invokevirtual #30                 // Method org/apache/activemq/command/ConsumerId.toString:()Ljava/lang/String;
      59: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: goto          21
      68: aload_1
      69: areturn

  public java.lang.String getType();
    Code:
       0: ldc           #32                 // String cached
       2: areturn

  public int getMaximumCacheSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maximumCacheSize:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String message groups:
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field cache:Lorg/apache/activemq/memory/LRUMap;
      16: invokevirtual #37                 // Method org/apache/activemq/memory/LRUMap.size:()I
      19: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      22: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn
}
