Compiled from "TransportConnection.java"
public class org.apache.activemq.broker.TransportConnection implements org.apache.activemq.broker.Connection,org.apache.activemq.thread.Task,org.apache.activemq.state.CommandVisitor {
  private static final org.slf4j.Logger LOG;

  private static final org.slf4j.Logger TRANSPORTLOG;

  private static final org.slf4j.Logger SERVICELOG;

  protected final org.apache.activemq.broker.Broker broker;

  protected final org.apache.activemq.broker.TransportConnector connector;

  protected final java.util.Map<org.apache.activemq.command.ConnectionId, org.apache.activemq.state.ConnectionState> brokerConnectionStates;

  protected org.apache.activemq.command.BrokerInfo brokerInfo;

  protected final java.util.List<org.apache.activemq.command.Command> dispatchQueue;

  protected org.apache.activemq.thread.TaskRunner taskRunner;

  protected final java.util.concurrent.atomic.AtomicReference<java.io.IOException> transportException;

  protected java.util.concurrent.atomic.AtomicBoolean dispatchStopped;

  private final org.apache.activemq.transport.Transport transport;

  private org.apache.activemq.security.MessageAuthorizationPolicy messageAuthorizationPolicy;

  private org.apache.activemq.command.WireFormatInfo wireFormatInfo;

  private boolean inServiceException;

  private final org.apache.activemq.broker.region.ConnectionStatistics statistics;

  private boolean manageable;

  private boolean slow;

  private boolean markedCandidate;

  private boolean blockedCandidate;

  private boolean blocked;

  private boolean connected;

  private boolean active;

  private boolean starting;

  private boolean pendingStop;

  private long timeStamp;

  private final java.util.concurrent.atomic.AtomicBoolean stopping;

  private final java.util.concurrent.CountDownLatch stopped;

  private final java.util.concurrent.atomic.AtomicBoolean asyncException;

  private final java.util.Map<org.apache.activemq.command.ProducerId, org.apache.activemq.broker.ProducerBrokerExchange> producerExchanges;

  private final java.util.Map<org.apache.activemq.command.ConsumerId, org.apache.activemq.broker.ConsumerBrokerExchange> consumerExchanges;

  private final java.util.concurrent.CountDownLatch dispatchStoppedLatch;

  private org.apache.activemq.broker.ConnectionContext context;

  private boolean networkConnection;

  private boolean faultTolerantConnection;

  private final java.util.concurrent.atomic.AtomicInteger protocolVersion;

  private org.apache.activemq.network.DemandForwardingBridge duplexBridge;

  private final org.apache.activemq.thread.TaskRunnerFactory taskRunnerFactory;

  private final org.apache.activemq.thread.TaskRunnerFactory stopTaskRunnerFactory;

  private org.apache.activemq.broker.TransportConnectionStateRegister connectionStateRegister;

  private final java.util.concurrent.locks.ReentrantReadWriteLock serviceLock;

  private java.lang.String duplexNetworkConnectorId;

  private java.lang.Throwable stopError;

  public org.apache.activemq.broker.TransportConnection(org.apache.activemq.broker.TransportConnector, org.apache.activemq.transport.Transport, org.apache.activemq.broker.Broker, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.thread.TaskRunnerFactory);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/LinkedList
       8: dup
       9: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #8                  // Field dispatchQueue:Ljava/util/List;
      15: aload_0
      16: new           #9                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #11                 // Field transportException:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean
      30: dup
      31: iconst_0
      32: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      35: putfield      #14                 // Field dispatchStopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: aload_0
      39: new           #15                 // class org/apache/activemq/broker/region/ConnectionStatistics
      42: dup
      43: invokespecial #16                 // Method org/apache/activemq/broker/region/ConnectionStatistics."<init>":()V
      46: putfield      #17                 // Field statistics:Lorg/apache/activemq/broker/region/ConnectionStatistics;
      49: aload_0
      50: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean
      53: dup
      54: iconst_0
      55: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      58: putfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      61: aload_0
      62: new           #19                 // class java/util/concurrent/CountDownLatch
      65: dup
      66: iconst_1
      67: invokespecial #20                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      70: putfield      #1                  // Field stopped:Ljava/util/concurrent/CountDownLatch;
      73: aload_0
      74: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean
      77: dup
      78: iconst_0
      79: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      82: putfield      #21                 // Field asyncException:Ljava/util/concurrent/atomic/AtomicBoolean;
      85: aload_0
      86: new           #22                 // class java/util/HashMap
      89: dup
      90: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      93: putfield      #24                 // Field producerExchanges:Ljava/util/Map;
      96: aload_0
      97: new           #22                 // class java/util/HashMap
     100: dup
     101: invokespecial #23                 // Method java/util/HashMap."<init>":()V
     104: putfield      #25                 // Field consumerExchanges:Ljava/util/Map;
     107: aload_0
     108: new           #19                 // class java/util/concurrent/CountDownLatch
     111: dup
     112: iconst_1
     113: invokespecial #20                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     116: putfield      #26                 // Field dispatchStoppedLatch:Ljava/util/concurrent/CountDownLatch;
     119: aload_0
     120: new           #27                 // class java/util/concurrent/atomic/AtomicInteger
     123: dup
     124: bipush        10
     126: invokespecial #28                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     129: putfield      #29                 // Field protocolVersion:Ljava/util/concurrent/atomic/AtomicInteger;
     132: aload_0
     133: new           #30                 // class org/apache/activemq/broker/SingleTransportConnectionStateRegister
     136: dup
     137: invokespecial #31                 // Method org/apache/activemq/broker/SingleTransportConnectionStateRegister."<init>":()V
     140: putfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
     143: aload_0
     144: new           #33                 // class java/util/concurrent/locks/ReentrantReadWriteLock
     147: dup
     148: invokespecial #34                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
     151: putfield      #4                  // Field serviceLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     154: aload_0
     155: aconst_null
     156: putfield      #35                 // Field stopError:Ljava/lang/Throwable;
     159: aload_0
     160: aload_1
     161: putfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     164: aload_0
     165: aload_3
     166: putfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     169: aload_3
     170: ldc_w         #38                 // class org/apache/activemq/broker/region/RegionBroker
     173: invokeinterface #39,  2           // InterfaceMethod org/apache/activemq/broker/Broker.getAdaptor:(Ljava/lang/Class;)Lorg/apache/activemq/broker/Broker;
     178: checkcast     #38                 // class org/apache/activemq/broker/region/RegionBroker
     181: astore        6
     183: aload_0
     184: aload         6
     186: invokevirtual #40                 // Method org/apache/activemq/broker/region/RegionBroker.getConnectionStates:()Ljava/util/Map;
     189: putfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
     192: aload_1
     193: ifnull        215
     196: aload_0
     197: getfield      #17                 // Field statistics:Lorg/apache/activemq/broker/region/ConnectionStatistics;
     200: aload_1
     201: invokevirtual #42                 // Method org/apache/activemq/broker/TransportConnector.getStatistics:()Lorg/apache/activemq/broker/region/ConnectorStatistics;
     204: invokevirtual #43                 // Method org/apache/activemq/broker/region/ConnectionStatistics.setParent:(Lorg/apache/activemq/broker/region/ConnectorStatistics;)V
     207: aload_0
     208: aload_1
     209: invokevirtual #44                 // Method org/apache/activemq/broker/TransportConnector.getMessageAuthorizationPolicy:()Lorg/apache/activemq/security/MessageAuthorizationPolicy;
     212: putfield      #45                 // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
     215: aload_0
     216: aload         4
     218: putfield      #46                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     221: aload_0
     222: aload         5
     224: putfield      #47                 // Field stopTaskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     227: aload_0
     228: aload_2
     229: putfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
     232: aload_0
     233: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     236: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
     241: astore        7
     243: aload_0
     244: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
     247: instanceof    #49                 // class org/apache/activemq/broker/BrokerServiceAware
     250: ifeq          267
     253: aload_0
     254: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
     257: checkcast     #49                 // class org/apache/activemq/broker/BrokerServiceAware
     260: aload         7
     262: invokeinterface #50,  2           // InterfaceMethod org/apache/activemq/broker/BrokerServiceAware.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
     267: aload_0
     268: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
     271: new           #51                 // class org/apache/activemq/broker/TransportConnection$1
     274: dup
     275: aload_0
     276: aload         7
     278: invokespecial #52                 // Method org/apache/activemq/broker/TransportConnection$1."<init>":(Lorg/apache/activemq/broker/TransportConnection;Lorg/apache/activemq/broker/BrokerService;)V
     281: invokeinterface #53,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
     286: aload_0
     287: iconst_1
     288: putfield      #54                 // Field connected:Z
     291: return

  public int getDispatchQueueSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
      11: invokeinterface #55,  1           // InterfaceMethod java/util/List.size:()I
      16: aload_1
      17: monitorexit
      18: ireturn
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
    Exception table:
       from    to  target type
           7    18    19   any
          19    22    19   any

  public void serviceTransportException(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
       4: invokevirtual #56                 // Method org/apache/activemq/broker/TransportConnector.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       7: astore_2
       8: aload_2
       9: invokevirtual #57                 // Method org/apache/activemq/broker/BrokerService.isShutdownOnSlaveFailure:()Z
      12: ifeq          70
      15: aload_0
      16: getfield      #58                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      19: ifnull        70
      22: aload_0
      23: getfield      #58                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      26: invokevirtual #59                 // Method org/apache/activemq/command/BrokerInfo.isSlaveBroker:()Z
      29: ifeq          70
      32: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      35: ldc           #60                 // String Slave has exception: {} shutting down master now.
      37: aload_1
      38: invokevirtual #61                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      41: aload_1
      42: invokeinterface #62,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      47: aload_0
      48: invokevirtual #63                 // Method doStop:()V
      51: aload_2
      52: invokevirtual #64                 // Method org/apache/activemq/broker/BrokerService.stop:()V
      55: goto          70
      58: astore_3
      59: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      62: ldc           #66                 // String Failed to stop the master
      64: aload_3
      65: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: aload_0
      71: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      74: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      77: ifne          195
      80: aload_0
      81: getfield      #69                 // Field pendingStop:Z
      84: ifne          195
      87: aload_0
      88: getfield      #11                 // Field transportException:Ljava/util/concurrent/atomic/AtomicReference;
      91: aload_1
      92: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      95: getstatic     #71                 // Field TRANSPORTLOG:Lorg/slf4j/Logger;
      98: invokeinterface #72,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     103: ifeq          141
     106: getstatic     #71                 // Field TRANSPORTLOG:Lorg/slf4j/Logger;
     109: new           #73                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     116: aload_0
     117: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #76                 // String  failed:
     122: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: aload_1
     133: invokeinterface #79,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     138: goto          191
     141: getstatic     #71                 // Field TRANSPORTLOG:Lorg/slf4j/Logger;
     144: invokeinterface #80,  1           // InterfaceMethod org/slf4j/Logger.isWarnEnabled:()Z
     149: ifeq          191
     152: aload_0
     153: aload_1
     154: invokespecial #81                 // Method expected:(Ljava/io/IOException;)Z
     157: ifne          191
     160: getstatic     #71                 // Field TRANSPORTLOG:Lorg/slf4j/Logger;
     163: new           #73                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     170: aload_0
     171: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: ldc           #76                 // String  failed:
     176: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_1
     180: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     183: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokeinterface #82,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     191: aload_0
     192: invokevirtual #83                 // Method stopAsync:()V
     195: return
    Exception table:
       from    to  target type
          47    55    58   Class java/lang/Exception

  private boolean expected(java.io.IOException);
    Code:
       0: aload_0
       1: invokespecial #84                 // Method isStomp:()Z
       4: ifeq          38
       7: aload_1
       8: instanceof    #85                 // class java/net/SocketException
      11: ifeq          27
      14: aload_1
      15: invokevirtual #61                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      18: ldc           #86                 // String reset
      20: invokevirtual #87                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      23: iconst_m1
      24: if_icmpne     34
      27: aload_1
      28: instanceof    #88                 // class java/io/EOFException
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  private boolean isStomp();
    Code:
       0: aload_0
       1: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
       4: invokevirtual #89                 // Method org/apache/activemq/broker/TransportConnector.getUri:()Ljava/net/URI;
       7: astore_1
       8: aload_1
       9: ifnull        36
      12: aload_1
      13: invokevirtual #90                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      16: ifnull        36
      19: aload_1
      20: invokevirtual #90                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      23: ldc           #91                 // String stomp
      25: invokevirtual #87                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      28: iconst_m1
      29: if_icmpeq     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public void serviceExceptionAsync(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #21                 // Field asyncException:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          26
      12: new           #93                 // class org/apache/activemq/broker/TransportConnection$2
      15: dup
      16: aload_0
      17: ldc           #94                 // String Async Exception Handler
      19: aload_1
      20: invokespecial #95                 // Method org/apache/activemq/broker/TransportConnection$2."<init>":(Lorg/apache/activemq/broker/TransportConnection;Ljava/lang/String;Ljava/io/IOException;)V
      23: invokevirtual #96                 // Method org/apache/activemq/broker/TransportConnection$2.start:()V
      26: return

  public void serviceException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #97                 // class java/io/IOException
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #97                 // class java/io/IOException
      12: invokevirtual #98                 // Method serviceTransportException:(Ljava/io/IOException;)V
      15: goto          178
      18: aload_1
      19: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: ldc_w         #100                // class org/apache/activemq/broker/BrokerStoppedException
      25: if_acmpne     94
      28: aload_0
      29: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      35: ifne          178
      38: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
      41: ldc           #102                // String Broker has been stopped.  Notifying client and closing his connection.
      43: invokeinterface #103,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      48: new           #104                // class org/apache/activemq/command/ConnectionError
      51: dup
      52: invokespecial #105                // Method org/apache/activemq/command/ConnectionError."<init>":()V
      55: astore_2
      56: aload_2
      57: aload_1
      58: invokevirtual #106                // Method org/apache/activemq/command/ConnectionError.setException:(Ljava/lang/Throwable;)V
      61: aload_0
      62: aload_2
      63: invokevirtual #107                // Method dispatchSync:(Lorg/apache/activemq/command/Command;)V
      66: aload_0
      67: aload_1
      68: putfield      #35                 // Field stopError:Ljava/lang/Throwable;
      71: ldc2_w        #108                // long 500l
      74: invokestatic  #110                // Method java/lang/Thread.sleep:(J)V
      77: goto          87
      80: astore_3
      81: invokestatic  #112                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      84: invokevirtual #113                // Method java/lang/Thread.interrupt:()V
      87: aload_0
      88: invokevirtual #83                 // Method stopAsync:()V
      91: goto          178
      94: aload_0
      95: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      98: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     101: ifne          178
     104: aload_0
     105: getfield      #114                // Field inServiceException:Z
     108: ifne          178
     111: aload_0
     112: iconst_1
     113: putfield      #114                // Field inServiceException:Z
     116: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
     119: ldc           #115                // String Async error occurred:
     121: aload_1
     122: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     127: new           #104                // class org/apache/activemq/command/ConnectionError
     130: dup
     131: invokespecial #105                // Method org/apache/activemq/command/ConnectionError."<init>":()V
     134: astore_2
     135: aload_2
     136: aload_1
     137: invokevirtual #106                // Method org/apache/activemq/command/ConnectionError.setException:(Ljava/lang/Throwable;)V
     140: aload_0
     141: getfield      #69                 // Field pendingStop:Z
     144: ifeq          155
     147: aload_0
     148: aload_2
     149: invokevirtual #107                // Method dispatchSync:(Lorg/apache/activemq/command/Command;)V
     152: goto          160
     155: aload_0
     156: aload_2
     157: invokevirtual #116                // Method dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     160: aload_0
     161: iconst_0
     162: putfield      #114                // Field inServiceException:Z
     165: goto          178
     168: astore        4
     170: aload_0
     171: iconst_0
     172: putfield      #114                // Field inServiceException:Z
     175: aload         4
     177: athrow
     178: return
    Exception table:
       from    to  target type
          71    77    80   Class java/lang/InterruptedException
         116   160   168   any
         168   170   168   any

  public org.apache.activemq.command.Response service(org.apache.activemq.command.Command);
    Code:
       0: ldc           #117                // String activemq.connector
       2: aload_0
       3: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
       6: invokevirtual #89                 // Method org/apache/activemq/broker/TransportConnector.getUri:()Ljava/net/URI;
       9: invokevirtual #118                // Method java/net/URI.toString:()Ljava/lang/String;
      12: invokestatic  #119                // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
      15: aconst_null
      16: astore_2
      17: aload_1
      18: invokeinterface #120,  1          // InterfaceMethod org/apache/activemq/command/Command.isResponseRequired:()Z
      23: istore_3
      24: aload_1
      25: invokeinterface #121,  1          // InterfaceMethod org/apache/activemq/command/Command.getCommandId:()I
      30: istore        4
      32: aload_0
      33: getfield      #69                 // Field pendingStop:Z
      36: ifne          50
      39: aload_1
      40: aload_0
      41: invokeinterface #122,  2          // InterfaceMethod org/apache/activemq/command/Command.visit:(Lorg/apache/activemq/state/CommandVisitor;)Lorg/apache/activemq/command/Response;
      46: astore_2
      47: goto          62
      50: new           #123                // class org/apache/activemq/command/ExceptionResponse
      53: dup
      54: aload_0
      55: getfield      #35                 // Field stopError:Ljava/lang/Throwable;
      58: invokespecial #124                // Method org/apache/activemq/command/ExceptionResponse."<init>":(Ljava/lang/Throwable;)V
      61: astore_2
      62: goto          275
      65: astore        5
      67: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
      70: invokeinterface #72,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      75: ifeq          147
      78: aload         5
      80: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      83: ldc_w         #100                // class org/apache/activemq/broker/BrokerStoppedException
      86: if_acmpeq     147
      89: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
      92: new           #73                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #126                // String Error occured while processing
     101: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: iload_3
     105: ifeq          113
     108: ldc           #127                // String sync
     110: goto          115
     113: ldc           #128                // String async
     115: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #129                // String  command:
     120: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_1
     124: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: ldc           #130                // String , exception:
     129: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload         5
     134: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     137: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: aload         5
     142: invokeinterface #79,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     147: aload         5
     149: instanceof    #131                // class org/apache/activemq/broker/SuppressReplyException
     152: ifne          166
     155: aload         5
     157: invokevirtual #132                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     160: instanceof    #131                // class org/apache/activemq/broker/SuppressReplyException
     163: ifeq          218
     166: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     169: new           #73                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     176: ldc           #133                // String Suppressing reply to:
     178: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload_1
     182: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     185: ldc           #134                // String  on:
     187: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload         5
     192: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     195: ldc           #135                // String , cause:
     197: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload         5
     202: invokevirtual #132                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     205: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     208: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokeinterface #136,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     216: iconst_0
     217: istore_3
     218: iload_3
     219: ifeq          269
     222: aload         5
     224: instanceof    #137                // class java/lang/SecurityException
     227: ifne          241
     230: aload         5
     232: invokevirtual #132                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     235: instanceof    #137                // class java/lang/SecurityException
     238: ifeq          256
     241: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
     244: ldc           #138                // String Security Error occurred: {}
     246: aload         5
     248: invokevirtual #139                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     251: invokeinterface #140,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     256: new           #123                // class org/apache/activemq/command/ExceptionResponse
     259: dup
     260: aload         5
     262: invokespecial #124                // Method org/apache/activemq/command/ExceptionResponse."<init>":(Ljava/lang/Throwable;)V
     265: astore_2
     266: goto          275
     269: aload_0
     270: aload         5
     272: invokevirtual #141                // Method serviceException:(Ljava/lang/Throwable;)V
     275: iload_3
     276: ifeq          297
     279: aload_2
     280: ifnonnull     291
     283: new           #142                // class org/apache/activemq/command/Response
     286: dup
     287: invokespecial #143                // Method org/apache/activemq/command/Response."<init>":()V
     290: astore_2
     291: aload_2
     292: iload         4
     294: invokevirtual #144                // Method org/apache/activemq/command/Response.setCorrelationId:(I)V
     297: aload_0
     298: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     301: ifnull        329
     304: aload_0
     305: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     308: invokevirtual #146                // Method org/apache/activemq/broker/ConnectionContext.isDontSendReponse:()Z
     311: ifeq          324
     314: aload_0
     315: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     318: iconst_0
     319: invokevirtual #147                // Method org/apache/activemq/broker/ConnectionContext.setDontSendReponse:(Z)V
     322: aconst_null
     323: astore_2
     324: aload_0
     325: aconst_null
     326: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     329: ldc           #117                // String activemq.connector
     331: invokestatic  #148                // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
     334: aload_2
     335: areturn
    Exception table:
       from    to  target type
          32    62    65   Class java/lang/Throwable

  public org.apache.activemq.command.Response processKeepAlive(org.apache.activemq.command.KeepAliveInfo) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.command.Response processRemoveSubscription(org.apache.activemq.command.RemoveSubscriptionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
       4: aload_0
       5: aload_1
       6: invokevirtual #149                // Method org/apache/activemq/command/RemoveSubscriptionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       9: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      12: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      15: aload_1
      16: invokeinterface #152,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/RemoveSubscriptionInfo;)V
      21: aconst_null
      22: areturn

  public org.apache.activemq.command.Response processWireFormat(org.apache.activemq.command.WireFormatInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field wireFormatInfo:Lorg/apache/activemq/command/WireFormatInfo;
       5: aload_0
       6: getfield      #29                 // Field protocolVersion:Ljava/util/concurrent/atomic/AtomicInteger;
       9: aload_1
      10: invokevirtual #154                // Method org/apache/activemq/command/WireFormatInfo.getVersion:()I
      13: invokevirtual #155                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: aconst_null
      17: areturn

  public org.apache.activemq.command.Response processShutdown(org.apache.activemq.command.ShutdownInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method stopAsync:()V
       4: aconst_null
       5: areturn

  public org.apache.activemq.command.Response processFlush(org.apache.activemq.command.FlushCommand) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.command.Response processBeginTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: aconst_null
      11: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      14: aload_2
      15: ifnull        26
      18: aload_0
      19: aload_2
      20: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      23: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      26: aload_2
      27: ifnonnull     40
      30: new           #157                // class java/lang/NullPointerException
      33: dup
      34: ldc           #158                // String Context is null
      36: invokespecial #159                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: aload_1
      42: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      45: invokevirtual #161                // Method org/apache/activemq/broker/TransportConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      48: ifnonnull     76
      51: aload_2
      52: aload_1
      53: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      56: invokevirtual #162                // Method org/apache/activemq/broker/TransportConnectionState.addTransactionState:(Lorg/apache/activemq/command/TransactionId;)V
      59: aload_0
      60: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      63: aload_0
      64: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      67: aload_1
      68: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      71: invokeinterface #163,  3          // InterfaceMethod org/apache/activemq/broker/Broker.beginTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      76: aconst_null
      77: areturn

  public int getActiveTransactionCount();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       6: invokeinterface #164,  1          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.listConnectionStates:()Ljava/util/List;
      11: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          82
      26: aload_2
      27: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #168                // class org/apache/activemq/broker/TransportConnectionState
      35: astore_3
      36: aload_3
      37: invokevirtual #169                // Method org/apache/activemq/broker/TransportConnectionState.getTransactionStates:()Ljava/util/Collection;
      40: astore        4
      42: aload         4
      44: invokeinterface #170,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      49: astore        5
      51: aload         5
      53: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          79
      61: aload         5
      63: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #171                // class org/apache/activemq/state/TransactionState
      71: astore        6
      73: iinc          1, 1
      76: goto          51
      79: goto          17
      82: iload_1
      83: ireturn

  public java.lang.Long getOldestActiveTransactionDuration();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       6: invokeinterface #164,  1          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.listConnectionStates:()Ljava/util/List;
      11: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          99
      26: aload_2
      27: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #168                // class org/apache/activemq/broker/TransportConnectionState
      35: astore_3
      36: aload_3
      37: invokevirtual #169                // Method org/apache/activemq/broker/TransportConnectionState.getTransactionStates:()Ljava/util/Collection;
      40: astore        4
      42: aload         4
      44: invokeinterface #170,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      49: astore        5
      51: aload         5
      53: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          96
      61: aload         5
      63: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #171                // class org/apache/activemq/state/TransactionState
      71: astore        6
      73: aload_1
      74: ifnull        90
      77: aload_1
      78: invokevirtual #172                // Method org/apache/activemq/state/TransactionState.getCreatedAt:()J
      81: aload         6
      83: invokevirtual #172                // Method org/apache/activemq/state/TransactionState.getCreatedAt:()J
      86: lcmp
      87: ifge          93
      90: aload         6
      92: astore_1
      93: goto          51
      96: goto          17
      99: aload_1
     100: ifnonnull     105
     103: aconst_null
     104: areturn
     105: invokestatic  #173                // Method java/lang/System.currentTimeMillis:()J
     108: aload_1
     109: invokevirtual #172                // Method org/apache/activemq/state/TransactionState.getCreatedAt:()J
     112: lsub
     113: invokestatic  #174                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     116: areturn

  public org.apache.activemq.command.Response processEndTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.command.Response processPrepareTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: aconst_null
      11: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      14: aload_2
      15: ifnull        26
      18: aload_0
      19: aload_2
      20: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      23: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      26: aload_2
      27: ifnonnull     40
      30: new           #157                // class java/lang/NullPointerException
      33: dup
      34: ldc           #158                // String Context is null
      36: invokespecial #159                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: aload_1
      42: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      45: invokevirtual #161                // Method org/apache/activemq/broker/TransportConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      48: astore_3
      49: aload_3
      50: ifnonnull     83
      53: new           #175                // class java/lang/IllegalStateException
      56: dup
      57: new           #73                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #176                // String Cannot prepare a transaction that had not been started or previously returned XA_RDONLY:
      66: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      73: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_3
      84: invokevirtual #178                // Method org/apache/activemq/state/TransactionState.isPrepared:()Z
      87: ifne          149
      90: aload_3
      91: iconst_1
      92: invokevirtual #179                // Method org/apache/activemq/state/TransactionState.setPrepared:(Z)V
      95: aload_0
      96: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      99: aload_0
     100: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     103: aload_1
     104: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     107: invokeinterface #180,  3          // InterfaceMethod org/apache/activemq/broker/Broker.prepareTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)I
     112: istore        4
     114: aload_3
     115: iload         4
     117: invokevirtual #181                // Method org/apache/activemq/state/TransactionState.setPreparedResult:(I)V
     120: iload         4
     122: iconst_3
     123: if_icmpne     135
     126: aload_2
     127: aload_1
     128: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     131: invokevirtual #182                // Method org/apache/activemq/broker/TransportConnectionState.removeTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
     134: pop
     135: new           #183                // class org/apache/activemq/command/IntegerResponse
     138: dup
     139: iload         4
     141: invokespecial #184                // Method org/apache/activemq/command/IntegerResponse."<init>":(I)V
     144: astore        5
     146: aload         5
     148: areturn
     149: new           #183                // class org/apache/activemq/command/IntegerResponse
     152: dup
     153: aload_3
     154: invokevirtual #185                // Method org/apache/activemq/state/TransactionState.getPreparedResult:()I
     157: invokespecial #184                // Method org/apache/activemq/command/IntegerResponse."<init>":(I)V
     160: astore        4
     162: aload         4
     164: areturn

  public org.apache.activemq.command.Response processCommitTransactionOnePhase(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      14: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      17: aload_2
      18: aload_1
      19: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      22: invokevirtual #182                // Method org/apache/activemq/broker/TransportConnectionState.removeTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      25: pop
      26: aload_0
      27: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      30: aload_0
      31: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      34: aload_1
      35: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      38: iconst_1
      39: invokeinterface #186,  4          // InterfaceMethod org/apache/activemq/broker/Broker.commitTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)V
      44: aconst_null
      45: areturn

  public org.apache.activemq.command.Response processCommitTransactionTwoPhase(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      14: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      17: aload_2
      18: aload_1
      19: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      22: invokevirtual #182                // Method org/apache/activemq/broker/TransportConnectionState.removeTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      25: pop
      26: aload_0
      27: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      30: aload_0
      31: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      34: aload_1
      35: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      38: iconst_0
      39: invokeinterface #186,  4          // InterfaceMethod org/apache/activemq/broker/Broker.commitTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)V
      44: aconst_null
      45: areturn

  public org.apache.activemq.command.Response processRollbackTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      14: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      17: aload_2
      18: aload_1
      19: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      22: invokevirtual #182                // Method org/apache/activemq/broker/TransportConnectionState.removeTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      25: pop
      26: aload_0
      27: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      30: aload_0
      31: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      34: aload_1
      35: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      38: invokeinterface #187,  3          // InterfaceMethod org/apache/activemq/broker/Broker.rollbackTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      43: aconst_null
      44: areturn

  public org.apache.activemq.command.Response processForgetTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      14: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      17: aload_0
      18: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      21: aload_0
      22: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      25: aload_1
      26: invokevirtual #160                // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      29: invokeinterface #188,  3          // InterfaceMethod org/apache/activemq/broker/Broker.forgetTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      34: aconst_null
      35: areturn

  public org.apache.activemq.command.Response processRecoverTransactions(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      14: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      17: aload_0
      18: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      21: aload_0
      22: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      25: invokeinterface #189,  2          // InterfaceMethod org/apache/activemq/broker/Broker.getPreparedTransactions:(Lorg/apache/activemq/broker/ConnectionContext;)[Lorg/apache/activemq/command/TransactionId;
      30: astore_3
      31: new           #190                // class org/apache/activemq/command/DataArrayResponse
      34: dup
      35: aload_3
      36: invokespecial #191                // Method org/apache/activemq/command/DataArrayResponse."<init>":([Lorg/apache/activemq/command/DataStructure;)V
      39: areturn

  public org.apache.activemq.command.Response processMessage(org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #192                // Method org/apache/activemq/command/Message.getProducerId:()Lorg/apache/activemq/command/ProducerId;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #193                // Method getProducerBrokerExchange:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/broker/ProducerBrokerExchange;
      10: astore_3
      11: aload_3
      12: aload_1
      13: invokevirtual #194                // Method org/apache/activemq/broker/ProducerBrokerExchange.canDispatch:(Lorg/apache/activemq/command/Message;)Z
      16: ifeq          30
      19: aload_0
      20: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      23: aload_3
      24: aload_1
      25: invokeinterface #195,  3          // InterfaceMethod org/apache/activemq/broker/Broker.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      30: aconst_null
      31: areturn

  public org.apache.activemq.command.Response processMessageAck(org.apache.activemq.command.MessageAck) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #196                // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       5: invokespecial #197                // Method getConsumerBrokerExchange:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/broker/ConsumerBrokerExchange;
       8: astore_2
       9: aload_2
      10: ifnull        27
      13: aload_0
      14: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      17: aload_2
      18: aload_1
      19: invokeinterface #198,  3          // InterfaceMethod org/apache/activemq/broker/Broker.acknowledge:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/MessageAck;)V
      24: goto          46
      27: aload_1
      28: invokevirtual #199                // Method org/apache/activemq/command/MessageAck.isInTransaction:()Z
      31: ifeq          46
      34: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      37: ldc           #200                // String no matching consumer, ignoring ack {}
      39: aload_2
      40: aload_1
      41: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      46: aconst_null
      47: areturn

  public org.apache.activemq.command.Response processMessagePull(org.apache.activemq.command.MessagePull) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
       4: aload_0
       5: aload_1
       6: invokevirtual #202                // Method org/apache/activemq/command/MessagePull.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       9: invokevirtual #203                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/broker/TransportConnectionState;
      12: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      15: aload_1
      16: invokeinterface #204,  3          // InterfaceMethod org/apache/activemq/broker/Broker.messagePull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/MessagePull;)Lorg/apache/activemq/command/Response;
      21: areturn

  public org.apache.activemq.command.Response processMessageDispatchNotification(org.apache.activemq.command.MessageDispatchNotification) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #205,  2          // InterfaceMethod org/apache/activemq/broker/Broker.processDispatchNotification:(Lorg/apache/activemq/command/MessageDispatchNotification;)V
      10: aconst_null
      11: areturn

  public org.apache.activemq.command.Response processAddDestination(org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #206                // Method org/apache/activemq/command/DestinationInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      13: aload_2
      14: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      17: aload_1
      18: invokeinterface #207,  3          // InterfaceMethod org/apache/activemq/broker/Broker.addDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
      23: aload_1
      24: invokevirtual #208                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      27: invokevirtual #209                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      30: ifeq          38
      33: aload_2
      34: aload_1
      35: invokevirtual #210                // Method org/apache/activemq/broker/TransportConnectionState.addTempDestination:(Lorg/apache/activemq/command/DestinationInfo;)V
      38: aconst_null
      39: areturn

  public org.apache.activemq.command.Response processRemoveDestination(org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #206                // Method org/apache/activemq/command/DestinationInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
       5: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       8: astore_2
       9: aload_0
      10: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      13: aload_2
      14: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      17: aload_1
      18: invokeinterface #211,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
      23: aload_1
      24: invokevirtual #208                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      27: invokevirtual #209                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      30: ifeq          41
      33: aload_2
      34: aload_1
      35: invokevirtual #208                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      38: invokevirtual #212                // Method org/apache/activemq/broker/TransportConnectionState.removeTempDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      41: aconst_null
      42: areturn

  public org.apache.activemq.command.Response processAddProducer(org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #213                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
       4: invokevirtual #214                // Method org/apache/activemq/command/ProducerId.getParentId:()Lorg/apache/activemq/command/SessionId;
       7: astore_2
       8: aload_2
       9: invokevirtual #215                // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      18: astore        4
      20: aload         4
      22: ifnonnull     52
      25: new           #175                // class java/lang/IllegalStateException
      28: dup
      29: new           #73                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #216                // String Cannot add a producer to a connection that had not been registered:
      38: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload         4
      54: aload_2
      55: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      58: astore        5
      60: aload         5
      62: ifnonnull     92
      65: new           #175                // class java/lang/IllegalStateException
      68: dup
      69: new           #73                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #218                // String Cannot add a producer to a session that had not been registered:
      78: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_2
      82: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload         5
      94: invokevirtual #219                // Method org/apache/activemq/state/SessionState.getProducerIds:()Ljava/util/Set;
      97: aload_1
      98: invokevirtual #213                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     101: invokeinterface #220,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     106: ifne          226
     109: aload_1
     110: invokevirtual #221                // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     113: astore        6
     115: aload         6
     117: ifnull        185
     120: aload         6
     122: invokestatic  #222                // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     125: ifne          185
     128: aload_0
     129: aload_3
     130: invokespecial #223                // Method getProducerCount:(Lorg/apache/activemq/command/ConnectionId;)I
     133: aload_0
     134: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     137: invokevirtual #224                // Method org/apache/activemq/broker/TransportConnector.getMaximumProducersAllowedPerConnection:()I
     140: if_icmplt     185
     143: new           #175                // class java/lang/IllegalStateException
     146: dup
     147: new           #73                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #225                // String Can\'t add producer on connection
     156: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_3
     160: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: ldc           #226                // String : at maximum limit:
     165: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     172: invokevirtual #224                // Method org/apache/activemq/broker/TransportConnector.getMaximumProducersAllowedPerConnection:()I
     175: invokevirtual #227                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     178: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     184: athrow
     185: aload_0
     186: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     189: aload         4
     191: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     194: aload_1
     195: invokeinterface #228,  3          // InterfaceMethod org/apache/activemq/broker/Broker.addProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
     200: aload         5
     202: aload_1
     203: invokevirtual #229                // Method org/apache/activemq/state/SessionState.addProducer:(Lorg/apache/activemq/command/ProducerInfo;)V
     206: goto          226
     209: astore        7
     211: aload_0
     212: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     215: aload         4
     217: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     220: aload_1
     221: invokeinterface #230,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
     226: aconst_null
     227: areturn
    Exception table:
       from    to  target type
         200   206   209   Class java/lang/IllegalStateException

  public org.apache.activemq.command.Response processRemoveProducer(org.apache.activemq.command.ProducerId) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #214                // Method org/apache/activemq/command/ProducerId.getParentId:()Lorg/apache/activemq/command/SessionId;
       4: astore_2
       5: aload_2
       6: invokevirtual #215                // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      15: astore        4
      17: aload         4
      19: aload_2
      20: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      23: astore        5
      25: aload         5
      27: ifnonnull     57
      30: new           #175                // class java/lang/IllegalStateException
      33: dup
      34: new           #73                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #231                // String Cannot remove a producer from a session that had not been registered:
      43: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload         5
      59: aload_1
      60: invokevirtual #232                // Method org/apache/activemq/state/SessionState.removeProducer:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/state/ProducerState;
      63: astore        6
      65: aload         6
      67: ifnonnull     97
      70: new           #175                // class java/lang/IllegalStateException
      73: dup
      74: new           #73                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #233                // String Cannot remove a producer that had not been registered:
      83: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_0
      98: aload_1
      99: invokespecial #234                // Method removeProducerBrokerExchange:(Lorg/apache/activemq/command/ProducerId;)V
     102: aload_0
     103: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     106: aload         4
     108: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     111: aload         6
     113: invokevirtual #235                // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
     116: invokeinterface #230,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
     121: aconst_null
     122: areturn

  public org.apache.activemq.command.Response processAddConsumer(org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #236                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       4: invokevirtual #237                // Method org/apache/activemq/command/ConsumerId.getParentId:()Lorg/apache/activemq/command/SessionId;
       7: astore_2
       8: aload_2
       9: invokevirtual #215                // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      18: astore        4
      20: aload         4
      22: ifnonnull     52
      25: new           #175                // class java/lang/IllegalStateException
      28: dup
      29: new           #73                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #238                // String Cannot add a consumer to a connection that had not been registered:
      38: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload         4
      54: aload_2
      55: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      58: astore        5
      60: aload         5
      62: ifnonnull     104
      65: new           #175                // class java/lang/IllegalStateException
      68: dup
      69: new           #73                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      76: aload_0
      77: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      80: invokeinterface #239,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerName:()Ljava/lang/String;
      85: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc           #240                // String  Cannot add a consumer to a session that had not been registered:
      90: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_2
      94: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload         5
     106: invokevirtual #241                // Method org/apache/activemq/state/SessionState.getConsumerIds:()Ljava/util/Set;
     109: aload_1
     110: invokevirtual #236                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     113: invokeinterface #220,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     118: ifne          248
     121: aload_1
     122: invokevirtual #242                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     125: astore        6
     127: aload         6
     129: ifnull        197
     132: aload         6
     134: invokestatic  #222                // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     137: ifne          197
     140: aload_0
     141: aload_3
     142: invokespecial #243                // Method getConsumerCount:(Lorg/apache/activemq/command/ConnectionId;)I
     145: aload_0
     146: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     149: invokevirtual #244                // Method org/apache/activemq/broker/TransportConnector.getMaximumConsumersAllowedPerConnection:()I
     152: if_icmplt     197
     155: new           #175                // class java/lang/IllegalStateException
     158: dup
     159: new           #73                 // class java/lang/StringBuilder
     162: dup
     163: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     166: ldc           #245                // String Can\'t add consumer on connection
     168: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload_3
     172: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     175: ldc           #226                // String : at maximum limit:
     177: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     184: invokevirtual #244                // Method org/apache/activemq/broker/TransportConnector.getMaximumConsumersAllowedPerConnection:()I
     187: invokevirtual #227                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     190: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     193: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     196: athrow
     197: aload_0
     198: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     201: aload         4
     203: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     206: aload_1
     207: invokeinterface #246,  3          // InterfaceMethod org/apache/activemq/broker/Broker.addConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/broker/region/Subscription;
     212: pop
     213: aload         5
     215: aload_1
     216: invokevirtual #247                // Method org/apache/activemq/state/SessionState.addConsumer:(Lorg/apache/activemq/command/ConsumerInfo;)V
     219: aload_0
     220: aload_1
     221: invokevirtual #236                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     224: invokespecial #248                // Method addConsumerBrokerExchange:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/broker/ConsumerBrokerExchange;
     227: pop
     228: goto          248
     231: astore        7
     233: aload_0
     234: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     237: aload         4
     239: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     242: aload_1
     243: invokeinterface #249,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)V
     248: aconst_null
     249: areturn
    Exception table:
       from    to  target type
         213   228   231   Class java/lang/IllegalStateException

  public org.apache.activemq.command.Response processRemoveConsumer(org.apache.activemq.command.ConsumerId, long) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #237                // Method org/apache/activemq/command/ConsumerId.getParentId:()Lorg/apache/activemq/command/SessionId;
       4: astore        4
       6: aload         4
       8: invokevirtual #215                // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      11: astore        5
      13: aload_0
      14: aload         5
      16: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      19: astore        6
      21: aload         6
      23: ifnonnull     54
      26: new           #175                // class java/lang/IllegalStateException
      29: dup
      30: new           #73                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #250                // String Cannot remove a consumer from a connection that had not been registered:
      39: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload         5
      44: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload         6
      56: aload         4
      58: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      61: astore        7
      63: aload         7
      65: ifnonnull     96
      68: new           #175                // class java/lang/IllegalStateException
      71: dup
      72: new           #73                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #251                // String Cannot remove a consumer from a session that had not been registered:
      81: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload         4
      86: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload         7
      98: aload_1
      99: invokevirtual #252                // Method org/apache/activemq/state/SessionState.removeConsumer:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/state/ConsumerState;
     102: astore        8
     104: aload         8
     106: ifnonnull     136
     109: new           #175                // class java/lang/IllegalStateException
     112: dup
     113: new           #73                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #253                // String Cannot remove a consumer that had not been registered:
     122: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload         8
     138: invokevirtual #254                // Method org/apache/activemq/state/ConsumerState.getInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     141: astore        9
     143: aload         9
     145: lload_2
     146: invokevirtual #255                // Method org/apache/activemq/command/ConsumerInfo.setLastDeliveredSequenceId:(J)V
     149: aload_0
     150: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     153: aload         6
     155: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     158: aload         8
     160: invokevirtual #254                // Method org/apache/activemq/state/ConsumerState.getInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     163: invokeinterface #249,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)V
     168: aload_0
     169: aload_1
     170: invokespecial #256                // Method removeConsumerBrokerExchange:(Lorg/apache/activemq/command/ConsumerId;)V
     173: aconst_null
     174: areturn

  public org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #257                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
       4: invokevirtual #215                // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      13: astore_3
      14: aload_3
      15: ifnull        77
      18: aload_3
      19: invokevirtual #258                // Method org/apache/activemq/broker/TransportConnectionState.getSessionIds:()Ljava/util/Set;
      22: aload_1
      23: invokevirtual #257                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      26: invokeinterface #220,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      31: ifne          77
      34: aload_0
      35: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      38: aload_3
      39: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      42: aload_1
      43: invokeinterface #259,  3          // InterfaceMethod org/apache/activemq/broker/Broker.addSession:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/SessionInfo;)V
      48: aload_3
      49: aload_1
      50: invokevirtual #260                // Method org/apache/activemq/broker/TransportConnectionState.addSession:(Lorg/apache/activemq/command/SessionInfo;)V
      53: goto          77
      56: astore        4
      58: aload         4
      60: invokevirtual #261                // Method java/lang/IllegalStateException.printStackTrace:()V
      63: aload_0
      64: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      67: aload_3
      68: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      71: aload_1
      72: invokeinterface #262,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeSession:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/SessionInfo;)V
      77: aconst_null
      78: areturn
    Exception table:
       from    to  target type
          48    53    56   Class java/lang/IllegalStateException

  public org.apache.activemq.command.Response processRemoveSession(org.apache.activemq.command.SessionId, long) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #215                // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
       4: astore        4
       6: aload_0
       7: aload         4
       9: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      12: astore        5
      14: aload         5
      16: ifnonnull     48
      19: new           #175                // class java/lang/IllegalStateException
      22: dup
      23: new           #73                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc_w         #263                // String Cannot remove session from connection that had not been registered:
      33: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload         4
      38: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload         5
      50: aload_1
      51: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      54: astore        6
      56: aload         6
      58: ifnonnull     89
      61: new           #175                // class java/lang/IllegalStateException
      64: dup
      65: new           #73                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc_w         #264                // String Cannot remove session that had not been registered:
      75: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #177                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload         6
      91: invokevirtual #265                // Method org/apache/activemq/state/SessionState.shutdown:()V
      94: aload         6
      96: invokevirtual #241                // Method org/apache/activemq/state/SessionState.getConsumerIds:()Ljava/util/Set;
      99: invokeinterface #266,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     104: astore        7
     106: aload         7
     108: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          159
     116: aload         7
     118: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #267                // class org/apache/activemq/command/ConsumerId
     126: astore        8
     128: aload_0
     129: aload         8
     131: lload_2
     132: invokevirtual #268                // Method processRemoveConsumer:(Lorg/apache/activemq/command/ConsumerId;J)Lorg/apache/activemq/command/Response;
     135: pop
     136: goto          156
     139: astore        9
     141: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     144: ldc_w         #269                // String Failed to remove consumer: {}
     147: aload         8
     149: aload         9
     151: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     156: goto          106
     159: aload         6
     161: invokevirtual #219                // Method org/apache/activemq/state/SessionState.getProducerIds:()Ljava/util/Set;
     164: invokeinterface #266,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     169: astore        7
     171: aload         7
     173: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     178: ifeq          223
     181: aload         7
     183: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     188: checkcast     #270                // class org/apache/activemq/command/ProducerId
     191: astore        8
     193: aload_0
     194: aload         8
     196: invokevirtual #271                // Method processRemoveProducer:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/command/Response;
     199: pop
     200: goto          220
     203: astore        9
     205: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     208: ldc_w         #272                // String Failed to remove producer: {}
     211: aload         8
     213: aload         9
     215: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     220: goto          171
     223: aload         5
     225: aload_1
     226: invokevirtual #273                // Method org/apache/activemq/broker/TransportConnectionState.removeSession:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
     229: pop
     230: aload_0
     231: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     234: aload         5
     236: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     239: aload         6
     241: invokevirtual #274                // Method org/apache/activemq/state/SessionState.getInfo:()Lorg/apache/activemq/command/SessionInfo;
     244: invokeinterface #262,  3          // InterfaceMethod org/apache/activemq/broker/Broker.removeSession:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/SessionInfo;)V
     249: aconst_null
     250: areturn
    Exception table:
       from    to  target type
         128   136   139   Class java/lang/Throwable
         193   200   203   Class java/lang/Throwable

  public org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #153                // Field wireFormatInfo:Lorg/apache/activemq/command/WireFormatInfo;
       4: ifnull        23
       7: aload_0
       8: getfield      #153                // Field wireFormatInfo:Lorg/apache/activemq/command/WireFormatInfo;
      11: invokevirtual #154                // Method org/apache/activemq/command/WireFormatInfo.getVersion:()I
      14: iconst_2
      15: if_icmpgt     23
      18: aload_1
      19: iconst_1
      20: invokevirtual #275                // Method org/apache/activemq/command/ConnectionInfo.setClientMaster:(Z)V
      23: aload_0
      24: getfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
      27: dup
      28: astore_3
      29: monitorenter
      30: aload_0
      31: getfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
      34: aload_1
      35: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      38: invokeinterface #277,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #168                // class org/apache/activemq/broker/TransportConnectionState
      46: astore_2
      47: aload_2
      48: ifnonnull     76
      51: new           #168                // class org/apache/activemq/broker/TransportConnectionState
      54: dup
      55: aload_1
      56: aload_0
      57: invokespecial #278                // Method org/apache/activemq/broker/TransportConnectionState."<init>":(Lorg/apache/activemq/command/ConnectionInfo;Lorg/apache/activemq/broker/TransportConnection;)V
      60: astore_2
      61: aload_0
      62: getfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
      65: aload_1
      66: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      69: aload_2
      70: invokeinterface #279,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload_2
      77: invokevirtual #280                // Method org/apache/activemq/broker/TransportConnectionState.incrementReference:()I
      80: pop
      81: aload_3
      82: monitorexit
      83: goto          93
      86: astore        4
      88: aload_3
      89: monitorexit
      90: aload         4
      92: athrow
      93: aload_2
      94: invokevirtual #281                // Method org/apache/activemq/broker/TransportConnectionState.getConnectionMutex:()Ljava/lang/Object;
      97: dup
      98: astore_3
      99: monitorenter
     100: aload_2
     101: invokevirtual #282                // Method org/apache/activemq/broker/TransportConnectionState.getConnection:()Lorg/apache/activemq/broker/TransportConnection;
     104: aload_0
     105: if_acmpeq     165
     108: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     111: ldc_w         #283                // String Killing previous stale connection: {}
     114: aload_2
     115: invokevirtual #282                // Method org/apache/activemq/broker/TransportConnectionState.getConnection:()Lorg/apache/activemq/broker/TransportConnection;
     118: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
     121: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     126: aload_2
     127: invokevirtual #282                // Method org/apache/activemq/broker/TransportConnectionState.getConnection:()Lorg/apache/activemq/broker/TransportConnection;
     130: invokevirtual #286                // Method stop:()V
     133: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     136: ldc_w         #287                // String Connection {} taking over previous connection: {}
     139: aload_0
     140: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
     143: aload_2
     144: invokevirtual #282                // Method org/apache/activemq/broker/TransportConnectionState.getConnection:()Lorg/apache/activemq/broker/TransportConnection;
     147: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
     150: invokeinterface #288,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     155: aload_2
     156: aload_0
     157: invokevirtual #289                // Method org/apache/activemq/broker/TransportConnectionState.setConnection:(Lorg/apache/activemq/broker/TransportConnection;)V
     160: aload_2
     161: aload_1
     162: invokevirtual #290                // Method org/apache/activemq/broker/TransportConnectionState.reset:(Lorg/apache/activemq/command/ConnectionInfo;)V
     165: aload_3
     166: monitorexit
     167: goto          177
     170: astore        5
     172: aload_3
     173: monitorexit
     174: aload         5
     176: athrow
     177: aload_0
     178: aload_1
     179: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     182: aload_2
     183: invokevirtual #291                // Method registerConnectionState:(Lorg/apache/activemq/command/ConnectionId;Lorg/apache/activemq/broker/TransportConnectionState;)Lorg/apache/activemq/broker/TransportConnectionState;
     186: pop
     187: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     190: ldc_w         #292                // String Setting up new connection id: {}, address: {}, info: {}
     193: iconst_3
     194: anewarray     #293                // class java/lang/Object
     197: dup
     198: iconst_0
     199: aload_1
     200: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     203: aastore
     204: dup
     205: iconst_1
     206: aload_0
     207: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
     210: aastore
     211: dup
     212: iconst_2
     213: aload_1
     214: aastore
     215: invokeinterface #294,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     220: aload_0
     221: aload_1
     222: invokevirtual #295                // Method org/apache/activemq/command/ConnectionInfo.isFaultTolerant:()Z
     225: putfield      #296                // Field faultTolerantConnection:Z
     228: aload_1
     229: invokevirtual #297                // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
     232: astore_3
     233: aload_0
     234: new           #298                // class org/apache/activemq/broker/ConnectionContext
     237: dup
     238: invokespecial #299                // Method org/apache/activemq/broker/ConnectionContext."<init>":()V
     241: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     244: aload_0
     245: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     248: aload_0
     249: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     252: invokevirtual #300                // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
     255: aload_0
     256: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     259: aload_3
     260: invokevirtual #301                // Method org/apache/activemq/broker/ConnectionContext.setClientId:(Ljava/lang/String;)V
     263: aload_0
     264: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     267: aload_1
     268: invokevirtual #302                // Method org/apache/activemq/command/ConnectionInfo.isClientMaster:()Z
     271: invokevirtual #303                // Method org/apache/activemq/broker/ConnectionContext.setClientMaster:(Z)V
     274: aload_0
     275: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     278: aload_0
     279: invokevirtual #304                // Method org/apache/activemq/broker/ConnectionContext.setConnection:(Lorg/apache/activemq/broker/Connection;)V
     282: aload_0
     283: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     286: aload_1
     287: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     290: invokevirtual #305                // Method org/apache/activemq/broker/ConnectionContext.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
     293: aload_0
     294: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     297: aload_0
     298: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     301: invokevirtual #306                // Method org/apache/activemq/broker/ConnectionContext.setConnector:(Lorg/apache/activemq/broker/Connector;)V
     304: aload_0
     305: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     308: aload_0
     309: invokevirtual #307                // Method getMessageAuthorizationPolicy:()Lorg/apache/activemq/security/MessageAuthorizationPolicy;
     312: invokevirtual #308                // Method org/apache/activemq/broker/ConnectionContext.setMessageAuthorizationPolicy:(Lorg/apache/activemq/security/MessageAuthorizationPolicy;)V
     315: aload_0
     316: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     319: aload_0
     320: getfield      #309                // Field networkConnection:Z
     323: invokevirtual #310                // Method org/apache/activemq/broker/ConnectionContext.setNetworkConnection:(Z)V
     326: aload_0
     327: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     330: aload_0
     331: getfield      #296                // Field faultTolerantConnection:Z
     334: invokevirtual #311                // Method org/apache/activemq/broker/ConnectionContext.setFaultTolerant:(Z)V
     337: aload_0
     338: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     341: new           #312                // class java/util/concurrent/ConcurrentHashMap
     344: dup
     345: invokespecial #313                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     348: invokevirtual #314                // Method org/apache/activemq/broker/ConnectionContext.setTransactions:(Ljava/util/concurrent/ConcurrentHashMap;)V
     351: aload_0
     352: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     355: aload_1
     356: invokevirtual #315                // Method org/apache/activemq/command/ConnectionInfo.getUserName:()Ljava/lang/String;
     359: invokevirtual #316                // Method org/apache/activemq/broker/ConnectionContext.setUserName:(Ljava/lang/String;)V
     362: aload_0
     363: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     366: aload_0
     367: getfield      #153                // Field wireFormatInfo:Lorg/apache/activemq/command/WireFormatInfo;
     370: invokevirtual #317                // Method org/apache/activemq/broker/ConnectionContext.setWireFormatInfo:(Lorg/apache/activemq/command/WireFormatInfo;)V
     373: aload_0
     374: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     377: aload_1
     378: invokevirtual #318                // Method org/apache/activemq/command/ConnectionInfo.isFailoverReconnect:()Z
     381: invokevirtual #319                // Method org/apache/activemq/broker/ConnectionContext.setReconnect:(Z)V
     384: aload_0
     385: aload_1
     386: invokevirtual #320                // Method org/apache/activemq/command/ConnectionInfo.isManageable:()Z
     389: putfield      #321                // Field manageable:Z
     392: aload_0
     393: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     396: aload_2
     397: invokevirtual #322                // Method org/apache/activemq/broker/ConnectionContext.setConnectionState:(Lorg/apache/activemq/state/ConnectionState;)V
     400: aload_2
     401: aload_0
     402: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     405: invokevirtual #323                // Method org/apache/activemq/broker/TransportConnectionState.setContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
     408: aload_2
     409: aload_0
     410: invokevirtual #289                // Method org/apache/activemq/broker/TransportConnectionState.setConnection:(Lorg/apache/activemq/broker/TransportConnection;)V
     413: aload_1
     414: invokevirtual #324                // Method org/apache/activemq/command/ConnectionInfo.getClientIp:()Ljava/lang/String;
     417: ifnonnull     428
     420: aload_1
     421: aload_0
     422: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
     425: invokevirtual #325                // Method org/apache/activemq/command/ConnectionInfo.setClientIp:(Ljava/lang/String;)V
     428: aload_0
     429: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     432: aload_0
     433: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     436: aload_1
     437: invokeinterface #326,  3          // InterfaceMethod org/apache/activemq/broker/Broker.addConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;)V
     442: goto          553
     445: astore        4
     447: aload_0
     448: getfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
     451: dup
     452: astore        5
     454: monitorenter
     455: aload_0
     456: getfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
     459: aload_1
     460: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     463: invokeinterface #327,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     468: pop
     469: aload         5
     471: monitorexit
     472: goto          483
     475: astore        6
     477: aload         5
     479: monitorexit
     480: aload         6
     482: athrow
     483: aload_0
     484: aload_1
     485: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     488: invokevirtual #328                // Method unregisterConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
     491: pop
     492: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     495: ldc_w         #329                // String Failed to add Connection {}
     498: aload_1
     499: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     502: aload         4
     504: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     509: aload         4
     511: instanceof    #137                // class java/lang/SecurityException
     514: ifeq          550
     517: aload_0
     518: sipush        2000
     521: new           #73                 // class java/lang/StringBuilder
     524: dup
     525: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     528: ldc_w         #330                // String Failed with SecurityException:
     531: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     534: aload         4
     536: invokevirtual #331                // Method java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
     539: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     545: aload         4
     547: invokevirtual #332                // Method delayedStop:(ILjava/lang/String;Ljava/lang/Throwable;)V
     550: aload         4
     552: athrow
     553: aload_1
     554: invokevirtual #320                // Method org/apache/activemq/command/ConnectionInfo.isManageable:()Z
     557: ifeq          602
     560: aload_0
     561: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     564: invokevirtual #333                // Method org/apache/activemq/broker/TransportConnector.getConnectionControl:()Lorg/apache/activemq/command/ConnectionControl;
     567: astore        4
     569: aload         4
     571: aload_0
     572: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     575: invokeinterface #334,  1          // InterfaceMethod org/apache/activemq/broker/Broker.isFaultTolerantConfiguration:()Z
     580: invokevirtual #335                // Method org/apache/activemq/command/ConnectionControl.setFaultTolerant:(Z)V
     583: aload_1
     584: invokevirtual #318                // Method org/apache/activemq/command/ConnectionInfo.isFailoverReconnect:()Z
     587: ifeq          596
     590: aload         4
     592: iconst_0
     593: invokevirtual #336                // Method org/apache/activemq/command/ConnectionControl.setRebalanceConnection:(Z)V
     596: aload_0
     597: aload         4
     599: invokevirtual #116                // Method dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     602: aconst_null
     603: areturn
    Exception table:
       from    to  target type
          30    83    86   any
          86    90    86   any
         100   167   170   any
         170   174   170   any
         428   442   445   Class java/lang/Exception
         455   472   475   any
         475   480   475   any

  public synchronized org.apache.activemq.command.Response processRemoveConnection(org.apache.activemq.command.ConnectionId, long) throws java.lang.InterruptedException;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #337                // String remove connection id: {}
       6: aload_1
       7: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      17: astore        4
      19: aload         4
      21: ifnull        277
      24: aload         4
      26: invokevirtual #338                // Method org/apache/activemq/broker/TransportConnectionState.shutdown:()V
      29: aload         4
      31: invokevirtual #258                // Method org/apache/activemq/broker/TransportConnectionState.getSessionIds:()Ljava/util/Set;
      34: invokeinterface #266,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore        5
      41: aload         5
      43: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          94
      51: aload         5
      53: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #339                // class org/apache/activemq/command/SessionId
      61: astore        6
      63: aload_0
      64: aload         6
      66: lload_2
      67: invokevirtual #340                // Method processRemoveSession:(Lorg/apache/activemq/command/SessionId;J)Lorg/apache/activemq/command/Response;
      70: pop
      71: goto          91
      74: astore        7
      76: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
      79: ldc_w         #341                // String Failed to remove session {}
      82: aload         6
      84: aload         7
      86: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      91: goto          41
      94: aload         4
      96: invokevirtual #342                // Method org/apache/activemq/broker/TransportConnectionState.getTempDestinations:()Ljava/util/List;
      99: invokeinterface #343,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     104: astore        5
     106: aload         5
     108: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          181
     116: aload         5
     118: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #344                // class org/apache/activemq/command/DestinationInfo
     126: astore        6
     128: aload_0
     129: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     132: aload         4
     134: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     137: aload         6
     139: invokevirtual #208                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     142: lconst_0
     143: invokeinterface #345,  5          // InterfaceMethod org/apache/activemq/broker/Broker.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
     148: goto          171
     151: astore        7
     153: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
     156: ldc_w         #346                // String Failed to remove tmp destination {}
     159: aload         6
     161: invokevirtual #208                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     164: aload         7
     166: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     171: aload         5
     173: invokeinterface #347,  1          // InterfaceMethod java/util/Iterator.remove:()V
     178: goto          106
     181: aload_0
     182: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     185: aload         4
     187: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     190: aload         4
     192: invokevirtual #348                // Method org/apache/activemq/broker/TransportConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
     195: aconst_null
     196: invokeinterface #349,  4          // InterfaceMethod org/apache/activemq/broker/Broker.removeConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;Ljava/lang/Throwable;)V
     201: goto          224
     204: astore        5
     206: getstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
     209: ldc_w         #350                // String Failed to remove connection {}
     212: aload         4
     214: invokevirtual #348                // Method org/apache/activemq/broker/TransportConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
     217: aload         5
     219: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     224: aload_0
     225: aload_1
     226: invokevirtual #328                // Method unregisterConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
     229: astore        5
     231: aload         5
     233: ifnull        277
     236: aload_0
     237: getfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
     240: dup
     241: astore        6
     243: monitorenter
     244: aload         5
     246: invokevirtual #351                // Method org/apache/activemq/broker/TransportConnectionState.decrementReference:()I
     249: ifne          263
     252: aload_0
     253: getfield      #41                 // Field brokerConnectionStates:Ljava/util/Map;
     256: aload_1
     257: invokeinterface #327,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     262: pop
     263: aload         6
     265: monitorexit
     266: goto          277
     269: astore        8
     271: aload         6
     273: monitorexit
     274: aload         8
     276: athrow
     277: aconst_null
     278: areturn
    Exception table:
       from    to  target type
          63    71    74   Class java/lang/Throwable
         128   148   151   Class java/lang/Throwable
         181   201   204   Class java/lang/Throwable
         244   266   269   any
         269   274   269   any

  public org.apache.activemq.command.Response processProducerAck(org.apache.activemq.command.ProducerAck) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.broker.Connector getConnector();
    Code:
       0: aload_0
       1: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
       4: areturn

  public void dispatchSync(org.apache.activemq.command.Command);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #352                // Method processDispatch:(Lorg/apache/activemq/command/Command;)V
       5: goto          14
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #353                // Method serviceExceptionAsync:(Ljava/io/IOException;)V
      14: return
    Exception table:
       from    to  target type
           0     5     8   Class java/io/IOException

  public void dispatchAsync(org.apache.activemq.command.Command);
    Code:
       0: aload_0
       1: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          75
      10: aload_0
      11: getfield      #354                // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      14: ifnonnull     25
      17: aload_0
      18: aload_1
      19: invokevirtual #107                // Method dispatchSync:(Lorg/apache/activemq/command/Command;)V
      22: goto          114
      25: aload_0
      26: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
      29: dup
      30: astore_2
      31: monitorenter
      32: aload_0
      33: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
      36: aload_1
      37: invokeinterface #355,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_2
      44: monitorexit
      45: goto          53
      48: astore_3
      49: aload_2
      50: monitorexit
      51: aload_3
      52: athrow
      53: aload_0
      54: getfield      #354                // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      57: invokeinterface #356,  1          // InterfaceMethod org/apache/activemq/thread/TaskRunner.wakeup:()V
      62: goto          114
      65: astore_2
      66: invokestatic  #112                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      69: invokevirtual #113                // Method java/lang/Thread.interrupt:()V
      72: goto          114
      75: aload_1
      76: invokeinterface #357,  1          // InterfaceMethod org/apache/activemq/command/Command.isMessageDispatch:()Z
      81: ifeq          114
      84: aload_1
      85: checkcast     #358                // class org/apache/activemq/command/MessageDispatch
      88: astore_2
      89: aload_2
      90: invokevirtual #359                // Method org/apache/activemq/command/MessageDispatch.getTransmitCallback:()Lorg/apache/activemq/transport/TransmitCallback;
      93: astore_3
      94: aload_0
      95: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      98: aload_2
      99: invokeinterface #360,  2          // InterfaceMethod org/apache/activemq/broker/Broker.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
     104: aload_3
     105: ifnull        114
     108: aload_3
     109: invokeinterface #361,  1          // InterfaceMethod org/apache/activemq/transport/TransmitCallback.onFailure:()V
     114: return
    Exception table:
       from    to  target type
          32    45    48   any
          48    51    48   any
          53    62    65   Class java/lang/InterruptedException

  protected void processDispatch(org.apache.activemq.command.Command) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #357,  1          // InterfaceMethod org/apache/activemq/command/Command.isMessageDispatch:()Z
       6: ifeq          13
       9: aload_1
      10: goto          14
      13: aconst_null
      14: checkcast     #358                // class org/apache/activemq/command/MessageDispatch
      17: checkcast     #358                // class org/apache/activemq/command/MessageDispatch
      20: astore_2
      21: aload_0
      22: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      25: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      28: ifne          50
      31: aload_2
      32: ifnull        45
      35: aload_0
      36: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      39: aload_2
      40: invokeinterface #362,  2          // InterfaceMethod org/apache/activemq/broker/Broker.preProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      45: aload_0
      46: aload_1
      47: invokevirtual #363                // Method dispatch:(Lorg/apache/activemq/command/Command;)V
      50: aload_2
      51: ifnull        188
      54: aload_2
      55: invokevirtual #359                // Method org/apache/activemq/command/MessageDispatch.getTransmitCallback:()Lorg/apache/activemq/transport/TransmitCallback;
      58: astore_3
      59: aload_0
      60: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      63: aload_2
      64: invokeinterface #360,  2          // InterfaceMethod org/apache/activemq/broker/Broker.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      69: aload_3
      70: ifnull        79
      73: aload_3
      74: invokeinterface #364,  1          // InterfaceMethod org/apache/activemq/transport/TransmitCallback.onSuccess:()V
      79: goto          188
      82: astore_3
      83: aload_2
      84: ifnull        119
      87: aload_2
      88: invokevirtual #359                // Method org/apache/activemq/command/MessageDispatch.getTransmitCallback:()Lorg/apache/activemq/transport/TransmitCallback;
      91: astore        4
      93: aload_0
      94: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      97: aload_2
      98: invokeinterface #360,  2          // InterfaceMethod org/apache/activemq/broker/Broker.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
     103: aload         4
     105: ifnull        115
     108: aload         4
     110: invokeinterface #361,  1          // InterfaceMethod org/apache/activemq/transport/TransmitCallback.onFailure:()V
     115: aconst_null
     116: astore_2
     117: aload_3
     118: athrow
     119: aload_2
     120: ifnull        188
     123: aload_2
     124: invokevirtual #359                // Method org/apache/activemq/command/MessageDispatch.getTransmitCallback:()Lorg/apache/activemq/transport/TransmitCallback;
     127: astore_3
     128: aload_0
     129: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     132: aload_2
     133: invokeinterface #360,  2          // InterfaceMethod org/apache/activemq/broker/Broker.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
     138: aload_3
     139: ifnull        148
     142: aload_3
     143: invokeinterface #364,  1          // InterfaceMethod org/apache/activemq/transport/TransmitCallback.onSuccess:()V
     148: goto          188
     151: astore        5
     153: aload_2
     154: ifnull        185
     157: aload_2
     158: invokevirtual #359                // Method org/apache/activemq/command/MessageDispatch.getTransmitCallback:()Lorg/apache/activemq/transport/TransmitCallback;
     161: astore        6
     163: aload_0
     164: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     167: aload_2
     168: invokeinterface #360,  2          // InterfaceMethod org/apache/activemq/broker/Broker.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
     173: aload         6
     175: ifnull        185
     178: aload         6
     180: invokeinterface #364,  1          // InterfaceMethod org/apache/activemq/transport/TransmitCallback.onSuccess:()V
     185: aload         5
     187: athrow
     188: return
    Exception table:
       from    to  target type
          21    50    82   Class java/io/IOException
          21    50   151   any
          82   119   151   any
         151   153   151   any

  public boolean iterate();
    Code:
       0: aload_0
       1: getfield      #69                 // Field pendingStop:Z
       4: ifne          17
       7: aload_0
       8: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifeq          63
      17: aload_0
      18: getfield      #14                 // Field dispatchStopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: iconst_0
      22: iconst_1
      23: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      26: ifeq          61
      29: aload_0
      30: getfield      #11                 // Field transportException:Ljava/util/concurrent/atomic/AtomicReference;
      33: invokevirtual #365                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      36: ifnonnull     54
      39: aload_0
      40: new           #366                // class org/apache/activemq/command/ShutdownInfo
      43: dup
      44: invokespecial #367                // Method org/apache/activemq/command/ShutdownInfo."<init>":()V
      47: invokevirtual #363                // Method dispatch:(Lorg/apache/activemq/command/Command;)V
      50: goto          54
      53: astore_1
      54: aload_0
      55: getfield      #26                 // Field dispatchStoppedLatch:Ljava/util/concurrent/CountDownLatch;
      58: invokevirtual #368                // Method java/util/concurrent/CountDownLatch.countDown:()V
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #14                 // Field dispatchStopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      67: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      70: ifne          129
      73: aconst_null
      74: astore_1
      75: aload_0
      76: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
      79: dup
      80: astore_2
      81: monitorenter
      82: aload_0
      83: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
      86: invokeinterface #369,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      91: ifeq          98
      94: iconst_0
      95: aload_2
      96: monitorexit
      97: ireturn
      98: aload_0
      99: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
     102: iconst_0
     103: invokeinterface #370,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     108: checkcast     #371                // class org/apache/activemq/command/Command
     111: astore_1
     112: aload_2
     113: monitorexit
     114: goto          122
     117: astore_3
     118: aload_2
     119: monitorexit
     120: aload_3
     121: athrow
     122: aload_0
     123: aload_1
     124: invokevirtual #352                // Method processDispatch:(Lorg/apache/activemq/command/Command;)V
     127: iconst_1
     128: ireturn
     129: iconst_0
     130: ireturn
     131: astore_1
     132: aload_0
     133: getfield      #14                 // Field dispatchStopped:Ljava/util/concurrent/atomic/AtomicBoolean;
     136: iconst_0
     137: iconst_1
     138: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     141: ifeq          151
     144: aload_0
     145: getfield      #26                 // Field dispatchStoppedLatch:Ljava/util/concurrent/CountDownLatch;
     148: invokevirtual #368                // Method java/util/concurrent/CountDownLatch.countDown:()V
     151: aload_0
     152: aload_1
     153: invokevirtual #353                // Method serviceExceptionAsync:(Ljava/io/IOException;)V
     156: iconst_0
     157: ireturn
    Exception table:
       from    to  target type
          39    50    53   Class java/lang/Throwable
          82    97   117   any
          98   114   117   any
         117   120   117   any
           0    62   131   Class java/io/IOException
          63    97   131   Class java/io/IOException
          98   128   131   Class java/io/IOException
         129   130   131   Class java/io/IOException

  public org.apache.activemq.broker.region.ConnectionStatistics getStatistics();
    Code:
       0: aload_0
       1: getfield      #17                 // Field statistics:Lorg/apache/activemq/broker/region/ConnectionStatistics;
       4: areturn

  public org.apache.activemq.security.MessageAuthorizationPolicy getMessageAuthorizationPolicy();
    Code:
       0: aload_0
       1: getfield      #45                 // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
       4: areturn

  public void setMessageAuthorizationPolicy(org.apache.activemq.security.MessageAuthorizationPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
       5: return

  public boolean isManageable();
    Code:
       0: aload_0
       1: getfield      #321                // Field manageable:Z
       4: ireturn

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: putfield      #372                // Field starting:Z
       9: aload_0
      10: getfield      #46                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      13: ifnull        54
      16: aload_0
      17: aload_0
      18: getfield      #46                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      21: aload_0
      22: new           #73                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc_w         #373                // String ActiveMQ Connection Dispatcher:
      32: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
      39: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #374                // Method org/apache/activemq/thread/TaskRunnerFactory.createTaskRunner:(Lorg/apache/activemq/thread/Task;Ljava/lang/String;)Lorg/apache/activemq/thread/TaskRunner;
      48: putfield      #354                // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      51: goto          59
      54: aload_0
      55: aconst_null
      56: putfield      #354                // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      59: aload_0
      60: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
      63: invokeinterface #375,  1          // InterfaceMethod org/apache/activemq/transport/Transport.start:()V
      68: aload_0
      69: iconst_1
      70: putfield      #376                // Field active:Z
      73: aload_0
      74: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
      77: invokevirtual #377                // Method org/apache/activemq/broker/TransportConnector.getBrokerInfo:()Lorg/apache/activemq/command/BrokerInfo;
      80: invokevirtual #378                // Method org/apache/activemq/command/BrokerInfo.copy:()Lorg/apache/activemq/command/BrokerInfo;
      83: astore_2
      84: aload_0
      85: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
      88: invokevirtual #379                // Method org/apache/activemq/broker/TransportConnector.isUpdateClusterClients:()Z
      91: ifeq          110
      94: aload_2
      95: aload_0
      96: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      99: invokeinterface #380,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getPeerBrokerInfos:()[Lorg/apache/activemq/command/BrokerInfo;
     104: invokevirtual #381                // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
     107: goto          115
     110: aload_2
     111: aconst_null
     112: invokevirtual #381                // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
     115: aload_0
     116: aload_2
     117: invokevirtual #116                // Method dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     120: aload_0
     121: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     124: aload_0
     125: invokevirtual #382                // Method org/apache/activemq/broker/TransportConnector.onStarted:(Lorg/apache/activemq/broker/TransportConnection;)V
     128: aload_1
     129: monitorexit
     130: goto          138
     133: astore_3
     134: aload_1
     135: monitorexit
     136: aload_3
     137: athrow
     138: aload_0
     139: iconst_0
     140: invokevirtual #383                // Method setStarting:(Z)V
     143: aload_0
     144: invokevirtual #384                // Method isPendingStop:()Z
     147: ifeq          210
     150: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     153: ldc_w         #385                // String Calling the delayed stop() after start() {}
     156: aload_0
     157: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     162: aload_0
     163: invokevirtual #286                // Method stop:()V
     166: goto          210
     169: astore_1
     170: aload_0
     171: iconst_1
     172: putfield      #69                 // Field pendingStop:Z
     175: aload_1
     176: athrow
     177: astore        4
     179: aload_0
     180: iconst_0
     181: invokevirtual #383                // Method setStarting:(Z)V
     184: aload_0
     185: invokevirtual #384                // Method isPendingStop:()Z
     188: ifeq          207
     191: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     194: ldc_w         #385                // String Calling the delayed stop() after start() {}
     197: aload_0
     198: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     203: aload_0
     204: invokevirtual #286                // Method stop:()V
     207: aload         4
     209: athrow
     210: return
    Exception table:
       from    to  target type
           4   130   133   any
         133   136   133   any
           0   138   169   Class java/lang/Exception
           0   138   177   any
         169   179   177   any

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method stopAsync:()V
       4: aload_0
       5: getfield      #1                  // Field stopped:Ljava/util/concurrent/CountDownLatch;
       8: ldc2_w        #386                // long 5l
      11: getstatic     #388                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      14: invokevirtual #389                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      17: ifne          43
      20: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      23: ldc_w         #390                // String The connection to \'{}\' is taking a long time to shutdown.
      26: aload_0
      27: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
      30: invokeinterface #391,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
      35: invokeinterface #392,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      40: goto          4
      43: return

  public void delayedStop(int, java.lang.String, java.lang.Throwable);
    Code:
       0: iload_1
       1: ifle          68
       4: aload_0
       5: dup
       6: astore        4
       8: monitorenter
       9: aload_0
      10: iconst_1
      11: putfield      #69                 // Field pendingStop:Z
      14: aload_0
      15: aload_3
      16: putfield      #35                 // Field stopError:Ljava/lang/Throwable;
      19: aload         4
      21: monitorexit
      22: goto          33
      25: astore        5
      27: aload         4
      29: monitorexit
      30: aload         5
      32: athrow
      33: aload_0
      34: getfield      #47                 // Field stopTaskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      37: new           #393                // class org/apache/activemq/broker/TransportConnection$3
      40: dup
      41: aload_0
      42: iload_1
      43: aload_2
      44: invokespecial #394                // Method org/apache/activemq/broker/TransportConnection$3."<init>":(Lorg/apache/activemq/broker/TransportConnection;ILjava/lang/String;)V
      47: invokevirtual #395                // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;)V
      50: goto          68
      53: astore        4
      55: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      58: ldc_w         #396                // String Cannot create stopAsync. This exception will be ignored.
      61: aload         4
      63: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      68: return
    Exception table:
       from    to  target type
           9    22    25   any
          25    30    25   any
          33    50    53   Class java/lang/Throwable

  public void stopAsync();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: putfield      #69                 // Field pendingStop:Z
       9: aload_0
      10: getfield      #372                // Field starting:Z
      13: ifeq          30
      16: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      19: ldc_w         #397                // String stopAsync() called in the middle of start(). Delaying till start completes..
      22: invokeinterface #103,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      27: aload_1
      28: monitorexit
      29: return
      30: aload_1
      31: monitorexit
      32: goto          40
      35: astore_2
      36: aload_1
      37: monitorexit
      38: aload_2
      39: athrow
      40: aload_0
      41: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: iconst_0
      45: iconst_1
      46: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      49: ifeq          144
      52: aload_0
      53: invokevirtual #398                // Method listConnectionStates:()Ljava/util/List;
      56: astore_1
      57: aload_1
      58: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: astore_2
      64: aload_2
      65: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          106
      73: aload_2
      74: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #168                // class org/apache/activemq/broker/TransportConnectionState
      82: astore_3
      83: aload_3
      84: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      87: astore        4
      89: aload         4
      91: ifnull        103
      94: aload         4
      96: invokevirtual #399                // Method org/apache/activemq/broker/ConnectionContext.getStopping:()Ljava/util/concurrent/atomic/AtomicBoolean;
      99: iconst_1
     100: invokevirtual #400                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     103: goto          64
     106: aload_0
     107: getfield      #47                 // Field stopTaskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     110: new           #401                // class org/apache/activemq/broker/TransportConnection$4
     113: dup
     114: aload_0
     115: invokespecial #402                // Method org/apache/activemq/broker/TransportConnection$4."<init>":(Lorg/apache/activemq/broker/TransportConnection;)V
     118: invokevirtual #395                // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;)V
     121: goto          144
     124: astore_2
     125: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     128: ldc_w         #403                // String Cannot create async transport stopper thread. This exception is ignored. Not waiting for stop to complete
     131: aload_2
     132: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     137: aload_0
     138: getfield      #1                  // Field stopped:Ljava/util/concurrent/CountDownLatch;
     141: invokevirtual #368                // Method java/util/concurrent/CountDownLatch.countDown:()V
     144: return
    Exception table:
       from    to  target type
           4    29    35   any
          30    32    35   any
          35    38    35   any
         106   121   124   Class java/lang/Throwable

  public java.lang.String toString();
    Code:
       0: new           #73                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #404                // String Transport Connection to:
      10: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
      17: invokeinterface #391,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
      22: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn

  protected void doStop() throws java.lang.Exception;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #405                // String Stopping connection: {}
       6: aload_0
       7: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
      10: invokeinterface #391,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
      15: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      20: aload_0
      21: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
      24: aload_0
      25: invokevirtual #406                // Method org/apache/activemq/broker/TransportConnector.onStopped:(Lorg/apache/activemq/broker/TransportConnection;)V
      28: aload_0
      29: dup
      30: astore_1
      31: monitorenter
      32: aload_0
      33: getfield      #407                // Field duplexBridge:Lorg/apache/activemq/network/DemandForwardingBridge;
      36: ifnull        46
      39: aload_0
      40: getfield      #407                // Field duplexBridge:Lorg/apache/activemq/network/DemandForwardingBridge;
      43: invokevirtual #408                // Method org/apache/activemq/network/DemandForwardingBridge.stop:()V
      46: aload_1
      47: monitorexit
      48: goto          56
      51: astore_2
      52: aload_1
      53: monitorexit
      54: aload_2
      55: athrow
      56: goto          72
      59: astore_1
      60: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      63: ldc_w         #409                // String Exception caught stopping. This exception is ignored.
      66: aload_1
      67: invokeinterface #410,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
      72: aload_0
      73: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
      76: invokeinterface #411,  1          // InterfaceMethod org/apache/activemq/transport/Transport.stop:()V
      81: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      84: ldc_w         #412                // String Stopped transport: {}
      87: aload_0
      88: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
      91: invokeinterface #391,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
      96: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     101: goto          126
     104: astore_1
     105: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     108: ldc_w         #413                // String Could not stop transport to {}. This exception is ignored.
     111: aload_0
     112: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
     115: invokeinterface #391,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
     120: aload_1
     121: invokeinterface #288,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     126: aload_0
     127: getfield      #354                // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
     130: ifnull        148
     133: aload_0
     134: getfield      #354                // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
     137: lconst_1
     138: invokeinterface #414,  3          // InterfaceMethod org/apache/activemq/thread/TaskRunner.shutdown:(J)V
     143: aload_0
     144: aconst_null
     145: putfield      #354                // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
     148: aload_0
     149: iconst_0
     150: putfield      #376                // Field active:Z
     153: aload_0
     154: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
     157: dup
     158: astore_1
     159: monitorenter
     160: aload_0
     161: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
     164: invokeinterface #343,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     169: astore_2
     170: aload_2
     171: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     176: ifeq          237
     179: aload_2
     180: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     185: checkcast     #371                // class org/apache/activemq/command/Command
     188: astore_3
     189: aload_3
     190: invokeinterface #357,  1          // InterfaceMethod org/apache/activemq/command/Command.isMessageDispatch:()Z
     195: ifeq          234
     198: aload_3
     199: checkcast     #358                // class org/apache/activemq/command/MessageDispatch
     202: astore        4
     204: aload         4
     206: invokevirtual #359                // Method org/apache/activemq/command/MessageDispatch.getTransmitCallback:()Lorg/apache/activemq/transport/TransmitCallback;
     209: astore        5
     211: aload_0
     212: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     215: aload         4
     217: invokeinterface #360,  2          // InterfaceMethod org/apache/activemq/broker/Broker.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
     222: aload         5
     224: ifnull        234
     227: aload         5
     229: invokeinterface #361,  1          // InterfaceMethod org/apache/activemq/transport/TransmitCallback.onFailure:()V
     234: goto          170
     237: aload_0
     238: getfield      #8                  // Field dispatchQueue:Ljava/util/List;
     241: invokeinterface #415,  1          // InterfaceMethod java/util/List.clear:()V
     246: aload_1
     247: monitorexit
     248: goto          258
     251: astore        6
     253: aload_1
     254: monitorexit
     255: aload         6
     257: athrow
     258: aload_0
     259: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     262: invokeinterface #416,  1          // InterfaceMethod org/apache/activemq/broker/Broker.isStopped:()Z
     267: ifne          358
     270: aload_0
     271: invokevirtual #398                // Method listConnectionStates:()Ljava/util/List;
     274: astore_1
     275: aload_0
     276: invokevirtual #398                // Method listConnectionStates:()Ljava/util/List;
     279: astore_1
     280: aload_1
     281: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     286: astore_2
     287: aload_2
     288: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     293: ifeq          358
     296: aload_2
     297: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     302: checkcast     #168                // class org/apache/activemq/broker/TransportConnectionState
     305: astore_3
     306: aload_3
     307: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     310: invokevirtual #399                // Method org/apache/activemq/broker/ConnectionContext.getStopping:()Ljava/util/concurrent/atomic/AtomicBoolean;
     313: iconst_1
     314: invokevirtual #400                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     317: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     320: ldc_w         #417                // String Cleaning up connection resources: {}
     323: aload_0
     324: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
     327: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     332: aload_0
     333: aload_3
     334: invokevirtual #348                // Method org/apache/activemq/broker/TransportConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
     337: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     340: lconst_0
     341: invokevirtual #418                // Method processRemoveConnection:(Lorg/apache/activemq/command/ConnectionId;J)Lorg/apache/activemq/command/Response;
     344: pop
     345: goto          355
     348: astore        4
     350: aload         4
     352: invokevirtual #419                // Method java/lang/Throwable.printStackTrace:()V
     355: goto          287
     358: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     361: ldc_w         #420                // String Connection Stopped: {}
     364: aload_0
     365: invokevirtual #284                // Method getRemoteAddress:()Ljava/lang/String;
     368: invokeinterface #285,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     373: return
    Exception table:
       from    to  target type
          32    48    51   any
          51    54    51   any
          28    56    59   Class java/lang/Exception
          72   101   104   Class java/lang/Exception
         160   248   251   any
         251   255   251   any
         317   345   348   Class java/lang/Throwable

  public boolean isBlockedCandidate();
    Code:
       0: aload_0
       1: getfield      #421                // Field blockedCandidate:Z
       4: ireturn

  public void setBlockedCandidate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #421                // Field blockedCandidate:Z
       5: return

  public boolean isMarkedCandidate();
    Code:
       0: aload_0
       1: getfield      #422                // Field markedCandidate:Z
       4: ireturn

  public void setMarkedCandidate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #422                // Field markedCandidate:Z
       5: iload_1
       6: ifne          19
       9: aload_0
      10: lconst_0
      11: putfield      #423                // Field timeStamp:J
      14: aload_0
      15: iconst_0
      16: putfield      #421                // Field blockedCandidate:Z
      19: return

  public void setSlow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #424                // Field slow:Z
       5: return

  public boolean isSlow();
    Code:
       0: aload_0
       1: getfield      #424                // Field slow:Z
       4: ireturn

  public boolean isMarkedBlockedCandidate();
    Code:
       0: aload_0
       1: getfield      #422                // Field markedCandidate:Z
       4: ireturn

  public void doMark();
    Code:
       0: aload_0
       1: getfield      #423                // Field timeStamp:J
       4: lconst_0
       5: lcmp
       6: ifne          16
       9: aload_0
      10: invokestatic  #173                // Method java/lang/System.currentTimeMillis:()J
      13: putfield      #423                // Field timeStamp:J
      16: return

  public boolean isBlocked();
    Code:
       0: aload_0
       1: getfield      #425                // Field blocked:Z
       4: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #54                 // Field connected:Z
       4: ireturn

  public void setBlocked(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #425                // Field blocked:Z
       5: return

  public void setConnected(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #54                 // Field connected:Z
       5: return

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #376                // Field active:Z
       4: ireturn

  public void setActive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #376                // Field active:Z
       5: return

  public synchronized boolean isStarting();
    Code:
       0: aload_0
       1: getfield      #372                // Field starting:Z
       4: ireturn

  public synchronized boolean isNetworkConnection();
    Code:
       0: aload_0
       1: getfield      #309                // Field networkConnection:Z
       4: ireturn

  public boolean isFaultTolerantConnection();
    Code:
       0: aload_0
       1: getfield      #296                // Field faultTolerantConnection:Z
       4: ireturn

  protected synchronized void setStarting(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #372                // Field starting:Z
       5: return

  public synchronized boolean isPendingStop();
    Code:
       0: aload_0
       1: getfield      #69                 // Field pendingStop:Z
       4: ireturn

  protected synchronized void setPendingStop(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field pendingStop:Z
       5: return

  public org.apache.activemq.command.Response processBrokerInfo(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method org/apache/activemq/command/BrokerInfo.isSlaveBroker:()Z
       4: ifeq          25
       7: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      10: ldc_w         #426                // String  Slave Brokers are no longer supported - slave trying to attach is: {}
      13: aload_1
      14: invokevirtual #427                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      17: invokeinterface #428,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      22: goto          454
      25: aload_1
      26: invokevirtual #429                // Method org/apache/activemq/command/BrokerInfo.isNetworkConnection:()Z
      29: ifeq          454
      32: aload_1
      33: invokevirtual #430                // Method org/apache/activemq/command/BrokerInfo.isDuplexConnection:()Z
      36: ifeq          454
      39: aload_1
      40: invokevirtual #431                // Method org/apache/activemq/command/BrokerInfo.getNetworkProperties:()Ljava/lang/String;
      43: invokestatic  #432                // Method org/apache/activemq/util/MarshallingSupport.stringToProperties:(Ljava/lang/String;)Ljava/util/Properties;
      46: astore_2
      47: aload_0
      48: aload_2
      49: invokespecial #433                // Method createMap:(Ljava/util/Properties;)Ljava/util/HashMap;
      52: astore_3
      53: new           #434                // class org/apache/activemq/network/NetworkBridgeConfiguration
      56: dup
      57: invokespecial #435                // Method org/apache/activemq/network/NetworkBridgeConfiguration."<init>":()V
      60: astore        4
      62: aload         4
      64: aload_3
      65: ldc_w         #436                // String
      68: invokestatic  #437                // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)Z
      71: pop
      72: aload         4
      74: aload_0
      75: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      78: invokeinterface #239,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerName:()Ljava/lang/String;
      83: invokevirtual #438                // Method org/apache/activemq/network/NetworkBridgeConfiguration.setBrokerName:(Ljava/lang/String;)V
      86: new           #73                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      93: aload         4
      95: invokevirtual #439                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getName:()Ljava/lang/String;
      98: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc_w         #440                // String @
     104: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #441                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
     111: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     114: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: astore        5
     119: aload_0
     120: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
     123: invokevirtual #442                // Method org/apache/activemq/broker/TransportConnector.getConnections:()Ljava/util/concurrent/CopyOnWriteArrayList;
     126: astore        6
     128: aload         6
     130: dup
     131: astore        7
     133: monitorenter
     134: aload         6
     136: invokevirtual #443                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
     139: astore        8
     141: aload         8
     143: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     148: ifeq          218
     151: aload         8
     153: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     158: checkcast     #444                // class org/apache/activemq/broker/TransportConnection
     161: astore        9
     163: aload         9
     165: aload_0
     166: if_acmpeq     215
     169: aload         5
     171: aload         9
     173: invokevirtual #445                // Method getDuplexNetworkConnectorId:()Ljava/lang/String;
     176: invokevirtual #446                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     179: ifeq          215
     182: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     185: ldc_w         #447                // String Stopping an existing active duplex connection [{}] for network connector ({}).
     188: aload         9
     190: aload         5
     192: invokeinterface #201,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     197: aload         9
     199: invokevirtual #83                 // Method stopAsync:()V
     202: aload         9
     204: invokevirtual #448                // Method getStopped:()Ljava/util/concurrent/CountDownLatch;
     207: lconst_1
     208: getstatic     #388                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     211: invokevirtual #389                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
     214: pop
     215: goto          141
     218: aload_0
     219: aload         5
     221: invokevirtual #449                // Method setDuplexNetworkConnectorId:(Ljava/lang/String;)V
     224: aload         7
     226: monitorexit
     227: goto          238
     230: astore        10
     232: aload         7
     234: monitorexit
     235: aload         10
     237: athrow
     238: aload_0
     239: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     242: invokestatic  #450                // Method org/apache/activemq/network/NetworkBridgeFactory.createLocalTransport:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/transport/Transport;
     245: astore        7
     247: aload_0
     248: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
     251: astore        8
     253: aload         8
     255: instanceof    #451                // class org/apache/activemq/transport/ResponseCorrelator
     258: ifne          272
     261: new           #451                // class org/apache/activemq/transport/ResponseCorrelator
     264: dup
     265: aload         8
     267: invokespecial #452                // Method org/apache/activemq/transport/ResponseCorrelator."<init>":(Lorg/apache/activemq/transport/Transport;)V
     270: astore        8
     272: aload         7
     274: invokevirtual #453                // Method java/lang/Object.toString:()Ljava/lang/String;
     277: astore        9
     279: aload         9
     281: ldc_w         #454                // String #
     284: invokevirtual #455                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     287: ifeq          305
     290: aload         9
     292: aload         9
     294: ldc_w         #454                // String #
     297: invokevirtual #456                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
     300: invokevirtual #457                // Method java/lang/String.substring:(I)Ljava/lang/String;
     303: astore        9
     305: new           #458                // class org/apache/activemq/network/MBeanNetworkListener
     308: dup
     309: aload_0
     310: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     313: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
     318: aload         4
     320: aload_0
     321: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     324: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
     329: aload         9
     331: invokevirtual #459                // Method org/apache/activemq/broker/BrokerService.createDuplexNetworkConnectorObjectName:(Ljava/lang/String;)Ljavax/management/ObjectName;
     334: invokespecial #460                // Method org/apache/activemq/network/MBeanNetworkListener."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/network/NetworkBridgeConfiguration;Ljavax/management/ObjectName;)V
     337: astore        10
     339: aload         10
     341: iconst_1
     342: invokevirtual #461                // Method org/apache/activemq/network/MBeanNetworkListener.setCreatedByDuplex:(Z)V
     345: aload_0
     346: aload         4
     348: aload         7
     350: aload         8
     352: aload         10
     354: invokestatic  #462                // Method org/apache/activemq/network/NetworkBridgeFactory.createBridge:(Lorg/apache/activemq/network/NetworkBridgeConfiguration;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/network/NetworkBridgeListener;)Lorg/apache/activemq/network/DemandForwardingBridge;
     357: putfield      #407                // Field duplexBridge:Lorg/apache/activemq/network/DemandForwardingBridge;
     360: aload_0
     361: getfield      #407                // Field duplexBridge:Lorg/apache/activemq/network/DemandForwardingBridge;
     364: aload_0
     365: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
     368: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
     373: invokevirtual #463                // Method org/apache/activemq/network/DemandForwardingBridge.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
     376: aload_1
     377: iconst_0
     378: invokevirtual #464                // Method org/apache/activemq/command/BrokerInfo.setDuplexConnection:(Z)V
     381: aload_0
     382: getfield      #407                // Field duplexBridge:Lorg/apache/activemq/network/DemandForwardingBridge;
     385: iconst_1
     386: invokevirtual #465                // Method org/apache/activemq/network/DemandForwardingBridge.setCreatedByDuplex:(Z)V
     389: aload_0
     390: getfield      #407                // Field duplexBridge:Lorg/apache/activemq/network/DemandForwardingBridge;
     393: aload_0
     394: aload_0
     395: getfield      #58                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     398: aload_1
     399: invokevirtual #466                // Method org/apache/activemq/network/DemandForwardingBridge.duplexStart:(Lorg/apache/activemq/broker/TransportConnection;Lorg/apache/activemq/command/BrokerInfo;Lorg/apache/activemq/command/BrokerInfo;)V
     402: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     405: ldc_w         #467                // String Started responder end of duplex bridge {}
     408: aload         5
     410: invokeinterface #392,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     415: aconst_null
     416: areturn
     417: astore_2
     418: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     421: ldc_w         #469                // String Duplex bridge {} was stopped before it was correctly started.
     424: aload_0
     425: getfield      #470                // Field duplexNetworkConnectorId:Ljava/lang/String;
     428: invokeinterface #140,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     433: aconst_null
     434: areturn
     435: astore_2
     436: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     439: ldc_w         #471                // String Failed to create responder end of duplex network bridge {}
     442: aload_0
     443: getfield      #470                // Field duplexNetworkConnectorId:Ljava/lang/String;
     446: aload_2
     447: invokeinterface #62,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     452: aconst_null
     453: areturn
     454: aload_0
     455: getfield      #58                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     458: ifnull        473
     461: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     464: ldc_w         #472                // String Unexpected extra broker info command received: {}
     467: aload_1
     468: invokeinterface #140,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     473: aload_0
     474: aload_1
     475: putfield      #58                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     478: aload_0
     479: iconst_1
     480: putfield      #309                // Field networkConnection:Z
     483: aload_0
     484: invokevirtual #398                // Method listConnectionStates:()Ljava/util/List;
     487: astore_2
     488: aload_2
     489: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     494: astore_3
     495: aload_3
     496: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     501: ifeq          527
     504: aload_3
     505: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     510: checkcast     #168                // class org/apache/activemq/broker/TransportConnectionState
     513: astore        4
     515: aload         4
     517: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
     520: iconst_1
     521: invokevirtual #310                // Method org/apache/activemq/broker/ConnectionContext.setNetworkConnection:(Z)V
     524: goto          495
     527: aconst_null
     528: areturn
    Exception table:
       from    to  target type
         134   227   230   any
         230   235   230   any
          39   416   417   Class org/apache/activemq/transport/TransportDisposedIOException
          39   416   435   Class java/lang/Exception

  private java.util.HashMap<java.lang.String, java.lang.String> createMap(java.util.Properties);
    Code:
       0: new           #22                 // class java/util/HashMap
       3: dup
       4: aload_1
       5: invokespecial #473                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  protected void dispatch(org.apache.activemq.command.Command) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #474                // Method setMarkedCandidate:(Z)V
       5: aload_0
       6: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
       9: aload_1
      10: invokeinterface #475,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      15: aload_0
      16: iconst_0
      17: invokevirtual #474                // Method setMarkedCandidate:(Z)V
      20: goto          31
      23: astore_2
      24: aload_0
      25: iconst_0
      26: invokevirtual #474                // Method setMarkedCandidate:(Z)V
      29: aload_2
      30: athrow
      31: return
    Exception table:
       from    to  target type
           0    15    23   any
          23    24    23   any

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #391,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
       9: areturn

  public org.apache.activemq.transport.Transport getTransport();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
       4: areturn

  public java.lang.String getConnectionId();
    Code:
       0: aload_0
       1: invokevirtual #398                // Method listConnectionStates:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          60
      21: aload_2
      22: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #168                // class org/apache/activemq/broker/TransportConnectionState
      30: astore_3
      31: aload_3
      32: invokevirtual #348                // Method org/apache/activemq/broker/TransportConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      35: invokevirtual #297                // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
      38: ifnull        49
      41: aload_3
      42: invokevirtual #348                // Method org/apache/activemq/broker/TransportConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      45: invokevirtual #297                // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
      48: areturn
      49: aload_3
      50: invokevirtual #348                // Method org/apache/activemq/broker/TransportConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      53: invokevirtual #276                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      56: invokevirtual #476                // Method org/apache/activemq/command/ConnectionId.toString:()Ljava/lang/String;
      59: areturn
      60: aconst_null
      61: areturn

  public void updateClient(org.apache.activemq.command.ConnectionControl);
    Code:
       0: aload_0
       1: invokevirtual #477                // Method isActive:()Z
       4: ifeq          45
       7: aload_0
       8: invokevirtual #478                // Method isBlocked:()Z
      11: ifne          45
      14: aload_0
      15: invokevirtual #479                // Method isFaultTolerantConnection:()Z
      18: ifeq          45
      21: aload_0
      22: getfield      #153                // Field wireFormatInfo:Lorg/apache/activemq/command/WireFormatInfo;
      25: ifnull        45
      28: aload_0
      29: getfield      #153                // Field wireFormatInfo:Lorg/apache/activemq/command/WireFormatInfo;
      32: invokevirtual #154                // Method org/apache/activemq/command/WireFormatInfo.getVersion:()I
      35: bipush        6
      37: if_icmplt     45
      40: aload_0
      41: aload_1
      42: invokevirtual #116                // Method dispatchAsync:(Lorg/apache/activemq/command/Command;)V
      45: return

  public org.apache.activemq.broker.ProducerBrokerExchange getProducerBrokerExchangeIfExists(org.apache.activemq.command.ProducerInfo);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        49
       6: aload_1
       7: invokevirtual #213                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      10: ifnull        49
      13: aload_0
      14: getfield      #24                 // Field producerExchanges:Ljava/util/Map;
      17: dup
      18: astore_3
      19: monitorenter
      20: aload_0
      21: getfield      #24                 // Field producerExchanges:Ljava/util/Map;
      24: aload_1
      25: invokevirtual #213                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      28: invokeinterface #277,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #480                // class org/apache/activemq/broker/ProducerBrokerExchange
      36: astore_2
      37: aload_3
      38: monitorexit
      39: goto          49
      42: astore        4
      44: aload_3
      45: monitorexit
      46: aload         4
      48: athrow
      49: aload_2
      50: areturn
    Exception table:
       from    to  target type
          20    39    42   any
          42    46    42   any

  private org.apache.activemq.broker.ProducerBrokerExchange getProducerBrokerExchange(org.apache.activemq.command.ProducerId) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field producerExchanges:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #277,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #480                // class org/apache/activemq/broker/ProducerBrokerExchange
      13: astore_2
      14: aload_2
      15: ifnonnull     218
      18: aload_0
      19: getfield      #24                 // Field producerExchanges:Ljava/util/Map;
      22: dup
      23: astore_3
      24: monitorenter
      25: new           #480                // class org/apache/activemq/broker/ProducerBrokerExchange
      28: dup
      29: invokespecial #481                // Method org/apache/activemq/broker/ProducerBrokerExchange."<init>":()V
      32: astore_2
      33: aload_0
      34: aload_1
      35: invokevirtual #482                // Method lookupConnectionState:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/broker/TransportConnectionState;
      38: astore        4
      40: aload_0
      41: aload         4
      43: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      46: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      49: aload_2
      50: aload_0
      51: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      54: invokevirtual #483                // Method org/apache/activemq/broker/ProducerBrokerExchange.setConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
      57: aload_0
      58: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      61: invokevirtual #484                // Method org/apache/activemq/broker/ConnectionContext.isReconnect:()Z
      64: ifne          87
      67: aload_0
      68: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      71: invokevirtual #485                // Method org/apache/activemq/broker/ConnectionContext.isNetworkConnection:()Z
      74: ifeq          109
      77: aload_0
      78: getfield      #36                 // Field connector:Lorg/apache/activemq/broker/TransportConnector;
      81: invokevirtual #486                // Method org/apache/activemq/broker/TransportConnector.isAuditNetworkProducers:()Z
      84: ifeq          109
      87: aload_2
      88: aload_0
      89: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      92: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      97: invokevirtual #487                // Method org/apache/activemq/broker/BrokerService.getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
     100: aload_1
     101: invokeinterface #488,  2          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.getLastProducerSequenceId:(Lorg/apache/activemq/command/ProducerId;)J
     106: invokevirtual #489                // Method org/apache/activemq/broker/ProducerBrokerExchange.setLastStoredSequenceId:(J)V
     109: aload         4
     111: aload_1
     112: invokevirtual #214                // Method org/apache/activemq/command/ProducerId.getParentId:()Lorg/apache/activemq/command/SessionId;
     115: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
     118: astore        5
     120: aload         5
     122: ifnull        191
     125: aload_2
     126: aload         5
     128: aload_1
     129: invokevirtual #490                // Method org/apache/activemq/state/SessionState.getProducerState:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/state/ProducerState;
     132: invokevirtual #491                // Method org/apache/activemq/broker/ProducerBrokerExchange.setProducerState:(Lorg/apache/activemq/state/ProducerState;)V
     135: aload         5
     137: aload_1
     138: invokevirtual #490                // Method org/apache/activemq/state/SessionState.getProducerState:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/state/ProducerState;
     141: astore        6
     143: aload         6
     145: ifnull        191
     148: aload         6
     150: invokevirtual #235                // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
     153: ifnull        191
     156: aload         6
     158: invokevirtual #235                // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
     161: astore        7
     163: aload_2
     164: aload         7
     166: invokevirtual #221                // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     169: ifnull        183
     172: aload         7
     174: invokevirtual #221                // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     177: invokevirtual #492                // Method org/apache/activemq/command/ActiveMQDestination.isComposite:()Z
     180: ifeq          187
     183: iconst_1
     184: goto          188
     187: iconst_0
     188: invokevirtual #493                // Method org/apache/activemq/broker/ProducerBrokerExchange.setMutable:(Z)V
     191: aload_0
     192: getfield      #24                 // Field producerExchanges:Ljava/util/Map;
     195: aload_1
     196: aload_2
     197: invokeinterface #279,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     202: pop
     203: aload_3
     204: monitorexit
     205: goto          215
     208: astore        8
     210: aload_3
     211: monitorexit
     212: aload         8
     214: athrow
     215: goto          226
     218: aload_0
     219: aload_2
     220: invokevirtual #494                // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
     223: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     226: aload_2
     227: areturn
    Exception table:
       from    to  target type
          25   205   208   any
         208   212   208   any

  private void removeProducerBrokerExchange(org.apache.activemq.command.ProducerId);
    Code:
       0: aload_0
       1: getfield      #24                 // Field producerExchanges:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #24                 // Field producerExchanges:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #327,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  private org.apache.activemq.broker.ConsumerBrokerExchange getConsumerBrokerExchange(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #25                 // Field consumerExchanges:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #277,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #495                // class org/apache/activemq/broker/ConsumerBrokerExchange
      13: astore_2
      14: aload_2
      15: areturn

  private org.apache.activemq.broker.ConsumerBrokerExchange addConsumerBrokerExchange(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #25                 // Field consumerExchanges:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #277,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #495                // class org/apache/activemq/broker/ConsumerBrokerExchange
      13: astore_2
      14: aload_2
      15: ifnonnull     146
      18: aload_0
      19: getfield      #25                 // Field consumerExchanges:Ljava/util/Map;
      22: dup
      23: astore_3
      24: monitorenter
      25: new           #495                // class org/apache/activemq/broker/ConsumerBrokerExchange
      28: dup
      29: invokespecial #496                // Method org/apache/activemq/broker/ConsumerBrokerExchange."<init>":()V
      32: astore_2
      33: aload_0
      34: aload_1
      35: invokevirtual #203                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/broker/TransportConnectionState;
      38: astore        4
      40: aload_0
      41: aload         4
      43: invokevirtual #151                // Method org/apache/activemq/broker/TransportConnectionState.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      46: putfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      49: aload_2
      50: aload_0
      51: getfield      #145                // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      54: invokevirtual #497                // Method org/apache/activemq/broker/ConsumerBrokerExchange.setConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
      57: aload         4
      59: aload_1
      60: invokevirtual #237                // Method org/apache/activemq/command/ConsumerId.getParentId:()Lorg/apache/activemq/command/SessionId;
      63: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      66: astore        5
      68: aload         5
      70: ifnull        122
      73: aload         5
      75: aload_1
      76: invokevirtual #498                // Method org/apache/activemq/state/SessionState.getConsumerState:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/state/ConsumerState;
      79: astore        6
      81: aload         6
      83: ifnull        122
      86: aload         6
      88: invokevirtual #254                // Method org/apache/activemq/state/ConsumerState.getInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      91: astore        7
      93: aload         7
      95: ifnull        122
      98: aload         7
     100: invokevirtual #242                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     103: ifnull        122
     106: aload         7
     108: invokevirtual #242                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     111: invokevirtual #499                // Method org/apache/activemq/command/ActiveMQDestination.isPattern:()Z
     114: ifeq          122
     117: aload_2
     118: iconst_1
     119: invokevirtual #500                // Method org/apache/activemq/broker/ConsumerBrokerExchange.setWildcard:(Z)V
     122: aload_0
     123: getfield      #25                 // Field consumerExchanges:Ljava/util/Map;
     126: aload_1
     127: aload_2
     128: invokeinterface #279,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: aload_3
     135: monitorexit
     136: goto          146
     139: astore        8
     141: aload_3
     142: monitorexit
     143: aload         8
     145: athrow
     146: aload_2
     147: areturn
    Exception table:
       from    to  target type
          25   136   139   any
         139   143   139   any

  private void removeConsumerBrokerExchange(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #25                 // Field consumerExchanges:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #25                 // Field consumerExchanges:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #327,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public int getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #29                 // Field protocolVersion:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #501                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public org.apache.activemq.command.Response processControlCommand(org.apache.activemq.command.ControlCommand) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.command.Response processMessageDispatch(org.apache.activemq.command.MessageDispatch) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.command.Response processConnectionControl(org.apache.activemq.command.ConnectionControl) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokevirtual #502                // Method org/apache/activemq/command/ConnectionControl.isFaultTolerant:()Z
       9: putfield      #296                // Field faultTolerantConnection:Z
      12: aconst_null
      13: areturn

  public org.apache.activemq.command.Response processConnectionError(org.apache.activemq.command.ConnectionError) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.command.Response processConsumerControl(org.apache.activemq.command.ConsumerControl) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #503                // Method org/apache/activemq/command/ConsumerControl.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       5: invokespecial #197                // Method getConsumerBrokerExchange:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/broker/ConsumerBrokerExchange;
       8: astore_2
       9: aload_0
      10: getfield      #37                 // Field broker:Lorg/apache/activemq/broker/Broker;
      13: aload_2
      14: aload_1
      15: invokeinterface #504,  3          // InterfaceMethod org/apache/activemq/broker/Broker.processConsumerControl:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/ConsumerControl;)V
      20: aconst_null
      21: areturn

  protected synchronized org.apache.activemq.broker.TransportConnectionState registerConnectionState(org.apache.activemq.command.ConnectionId, org.apache.activemq.broker.TransportConnectionState);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       6: invokeinterface #505,  1          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.isEmpty:()Z
      11: ifne          52
      14: aload_0
      15: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
      18: invokeinterface #506,  1          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.doesHandleMultipleConnectionStates:()Z
      23: ifne          52
      26: new           #507                // class org/apache/activemq/broker/MapTransportConnectionStateRegister
      29: dup
      30: invokespecial #508                // Method org/apache/activemq/broker/MapTransportConnectionStateRegister."<init>":()V
      33: astore        4
      35: aload         4
      37: aload_0
      38: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
      41: invokeinterface #509,  2          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.intialize:(Lorg/apache/activemq/broker/TransportConnectionStateRegister;)V
      46: aload_0
      47: aload         4
      49: putfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
      52: aload_0
      53: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
      56: aload_1
      57: aload_2
      58: invokeinterface #510,  3          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.registerConnectionState:(Lorg/apache/activemq/command/ConnectionId;Lorg/apache/activemq/broker/TransportConnectionState;)Lorg/apache/activemq/broker/TransportConnectionState;
      63: astore_3
      64: aload_3
      65: areturn

  protected synchronized org.apache.activemq.broker.TransportConnectionState unregisterConnectionState(org.apache.activemq.command.ConnectionId);
    Code:
       0: aload_0
       1: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       4: aload_1
       5: invokeinterface #511,  2          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.unregisterConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      10: areturn

  protected synchronized java.util.List<org.apache.activemq.broker.TransportConnectionState> listConnectionStates();
    Code:
       0: aload_0
       1: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       4: invokeinterface #164,  1          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.listConnectionStates:()Ljava/util/List;
       9: areturn

  protected synchronized org.apache.activemq.broker.TransportConnectionState lookupConnectionState(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       4: aload_1
       5: invokeinterface #512,  2          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.lookupConnectionState:(Ljava/lang/String;)Lorg/apache/activemq/broker/TransportConnectionState;
      10: areturn

  protected synchronized org.apache.activemq.broker.TransportConnectionState lookupConnectionState(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       4: aload_1
       5: invokeinterface #513,  2          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.lookupConnectionState:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/broker/TransportConnectionState;
      10: areturn

  protected synchronized org.apache.activemq.broker.TransportConnectionState lookupConnectionState(org.apache.activemq.command.ProducerId);
    Code:
       0: aload_0
       1: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       4: aload_1
       5: invokeinterface #514,  2          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.lookupConnectionState:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/broker/TransportConnectionState;
      10: areturn

  protected synchronized org.apache.activemq.broker.TransportConnectionState lookupConnectionState(org.apache.activemq.command.SessionId);
    Code:
       0: aload_0
       1: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       4: aload_1
       5: invokeinterface #515,  2          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.lookupConnectionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      10: areturn

  public synchronized org.apache.activemq.broker.TransportConnectionState lookupConnectionState(org.apache.activemq.command.ConnectionId);
    Code:
       0: aload_0
       1: getfield      #32                 // Field connectionStateRegister:Lorg/apache/activemq/broker/TransportConnectionStateRegister;
       4: aload_1
       5: invokeinterface #516,  2          // InterfaceMethod org/apache/activemq/broker/TransportConnectionStateRegister.lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
      10: areturn

  protected synchronized void setDuplexNetworkConnectorId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #470                // Field duplexNetworkConnectorId:Ljava/lang/String;
       5: return

  protected synchronized java.lang.String getDuplexNetworkConnectorId();
    Code:
       0: aload_0
       1: getfield      #470                // Field duplexNetworkConnectorId:Ljava/lang/String;
       4: areturn

  public boolean isStopping();
    Code:
       0: aload_0
       1: getfield      #18                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  protected java.util.concurrent.CountDownLatch getStopped();
    Code:
       0: aload_0
       1: getfield      #1                  // Field stopped:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  private int getProducerCount(org.apache.activemq.command.ConnectionId);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       7: astore_3
       8: aload_3
       9: ifnull        74
      12: aload_3
      13: invokevirtual #258                // Method org/apache/activemq/broker/TransportConnectionState.getSessionIds:()Ljava/util/Set;
      16: invokeinterface #266,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          74
      33: aload         4
      35: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #339                // class org/apache/activemq/command/SessionId
      43: astore        5
      45: aload_3
      46: aload         5
      48: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      51: astore        6
      53: aload         6
      55: ifnull        71
      58: iload_2
      59: aload         6
      61: invokevirtual #219                // Method org/apache/activemq/state/SessionState.getProducerIds:()Ljava/util/Set;
      64: invokeinterface #517,  1          // InterfaceMethod java/util/Set.size:()I
      69: iadd
      70: istore_2
      71: goto          23
      74: iload_2
      75: ireturn

  private int getConsumerCount(org.apache.activemq.command.ConnectionId);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: invokevirtual #150                // Method lookupConnectionState:(Lorg/apache/activemq/command/ConnectionId;)Lorg/apache/activemq/broker/TransportConnectionState;
       7: astore_3
       8: aload_3
       9: ifnull        74
      12: aload_3
      13: invokevirtual #258                // Method org/apache/activemq/broker/TransportConnectionState.getSessionIds:()Ljava/util/Set;
      16: invokeinterface #266,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          74
      33: aload         4
      35: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #339                // class org/apache/activemq/command/SessionId
      43: astore        5
      45: aload_3
      46: aload         5
      48: invokevirtual #217                // Method org/apache/activemq/broker/TransportConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      51: astore        6
      53: aload         6
      55: ifnull        71
      58: iload_2
      59: aload         6
      61: invokevirtual #241                // Method org/apache/activemq/state/SessionState.getConsumerIds:()Ljava/util/Set;
      64: invokeinterface #517,  1          // InterfaceMethod java/util/Set.size:()I
      69: iadd
      70: istore_2
      71: goto          23
      74: iload_2
      75: ireturn

  public org.apache.activemq.command.WireFormatInfo getRemoteWireFormatInfo();
    Code:
       0: aload_0
       1: getfield      #153                // Field wireFormatInfo:Lorg/apache/activemq/command/WireFormatInfo;
       4: areturn

  static java.util.concurrent.locks.ReentrantReadWriteLock access$000(org.apache.activemq.broker.TransportConnection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: areturn

  static org.apache.activemq.transport.Transport access$100(org.apache.activemq.broker.TransportConnection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field transport:Lorg/apache/activemq/transport/Transport;
       4: areturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.concurrent.CountDownLatch access$300(org.apache.activemq.broker.TransportConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field stopped:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  static {};
    Code:
       0: ldc_w         #444                // class org/apache/activemq/broker/TransportConnection
       3: invokestatic  #518                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       9: new           #73                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc_w         #444                // class org/apache/activemq/broker/TransportConnection
      19: invokevirtual #519                // Method java/lang/Class.getName:()Ljava/lang/String;
      22: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc_w         #520                // String .Transport
      28: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokestatic  #521                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      37: putstatic     #71                 // Field TRANSPORTLOG:Lorg/slf4j/Logger;
      40: new           #73                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc_w         #444                // class org/apache/activemq/broker/TransportConnection
      50: invokevirtual #519                // Method java/lang/Class.getName:()Ljava/lang/String;
      53: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc_w         #522                // String .Service
      59: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokestatic  #521                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      68: putstatic     #101                // Field SERVICELOG:Lorg/slf4j/Logger;
      71: return
}
