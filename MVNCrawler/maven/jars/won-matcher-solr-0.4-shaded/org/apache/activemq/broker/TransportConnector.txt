Compiled from "TransportConnector.java"
public class org.apache.activemq.broker.TransportConnector implements org.apache.activemq.broker.Connector,org.apache.activemq.broker.BrokerServiceAware {
  final org.slf4j.Logger LOG;

  protected final java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.broker.TransportConnection> connections;

  protected org.apache.activemq.broker.TransportStatusDetector statusDector;

  private org.apache.activemq.broker.BrokerService brokerService;

  private org.apache.activemq.transport.TransportServer server;

  private java.net.URI uri;

  private org.apache.activemq.command.BrokerInfo brokerInfo;

  private org.apache.activemq.thread.TaskRunnerFactory taskRunnerFactory;

  private org.apache.activemq.security.MessageAuthorizationPolicy messageAuthorizationPolicy;

  private org.apache.activemq.transport.discovery.DiscoveryAgent discoveryAgent;

  private final org.apache.activemq.broker.region.ConnectorStatistics statistics;

  private java.net.URI discoveryUri;

  private java.lang.String name;

  private boolean disableAsyncDispatch;

  private boolean enableStatusMonitor;

  private org.apache.activemq.broker.Broker broker;

  private boolean updateClusterClients;

  private boolean rebalanceClusterClients;

  private boolean updateClusterClientsOnRemove;

  private java.lang.String updateClusterFilter;

  private boolean auditNetworkProducers;

  private int maximumProducersAllowedPerConnection;

  private int maximumConsumersAllowedPerConnection;

  private org.apache.activemq.broker.PublishedAddressPolicy publishedAddressPolicy;

  private boolean allowLinkStealing;

  java.util.LinkedList<java.lang.String> peerBrokers;

  public org.apache.activemq.broker.TransportConnector();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc_w         #3                  // class org/apache/activemq/broker/TransportConnector
       8: invokestatic  #4                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #5                  // Field LOG:Lorg/slf4j/Logger;
      14: aload_0
      15: new           #6                  // class java/util/concurrent/CopyOnWriteArrayList
      18: dup
      19: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      22: putfield      #8                  // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
      25: aload_0
      26: new           #9                  // class org/apache/activemq/command/BrokerInfo
      29: dup
      30: invokespecial #10                 // Method org/apache/activemq/command/BrokerInfo."<init>":()V
      33: putfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      36: aload_0
      37: new           #12                 // class org/apache/activemq/broker/region/ConnectorStatistics
      40: dup
      41: invokespecial #13                 // Method org/apache/activemq/broker/region/ConnectorStatistics."<init>":()V
      44: putfield      #14                 // Field statistics:Lorg/apache/activemq/broker/region/ConnectorStatistics;
      47: aload_0
      48: iconst_0
      49: putfield      #15                 // Field enableStatusMonitor:Z
      52: aload_0
      53: iconst_0
      54: putfield      #16                 // Field updateClusterClients:Z
      57: aload_0
      58: iconst_0
      59: putfield      #17                 // Field updateClusterClientsOnRemove:Z
      62: aload_0
      63: iconst_0
      64: putfield      #18                 // Field auditNetworkProducers:Z
      67: aload_0
      68: ldc           #19                 // int 2147483647
      70: putfield      #20                 // Field maximumProducersAllowedPerConnection:I
      73: aload_0
      74: ldc           #19                 // int 2147483647
      76: putfield      #21                 // Field maximumConsumersAllowedPerConnection:I
      79: aload_0
      80: new           #22                 // class org/apache/activemq/broker/PublishedAddressPolicy
      83: dup
      84: invokespecial #23                 // Method org/apache/activemq/broker/PublishedAddressPolicy."<init>":()V
      87: putfield      #24                 // Field publishedAddressPolicy:Lorg/apache/activemq/broker/PublishedAddressPolicy;
      90: aload_0
      91: new           #25                 // class java/util/LinkedList
      94: dup
      95: invokespecial #26                 // Method java/util/LinkedList."<init>":()V
      98: putfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
     101: return

  public org.apache.activemq.broker.TransportConnector(org.apache.activemq.transport.TransportServer);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method setServer:(Lorg/apache/activemq/transport/TransportServer;)V
       9: aload_1
      10: ifnull        50
      13: aload_1
      14: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/transport/TransportServer.getConnectURI:()Ljava/net/URI;
      19: ifnull        50
      22: aload_1
      23: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/transport/TransportServer.getConnectURI:()Ljava/net/URI;
      28: astore_2
      29: aload_2
      30: ifnull        50
      33: aload_2
      34: invokevirtual #31                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      37: ldc           #32                 // String vm
      39: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          50
      45: aload_0
      46: iconst_0
      47: invokevirtual #34                 // Method setEnableStatusMonitor:(Z)V
      50: aload_1
      51: ifnull        64
      54: aload_0
      55: aload_1
      56: invokeinterface #35,  1           // InterfaceMethod org/apache/activemq/transport/TransportServer.isAllowLinkStealing:()Z
      61: invokevirtual #36                 // Method setAllowLinkStealing:(Z)V
      64: return

  public java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.broker.TransportConnection> getConnections();
    Code:
       0: aload_0
       1: getfield      #8                  // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  public org.apache.activemq.broker.jmx.ManagedTransportConnector asManagedConnector(org.apache.activemq.broker.jmx.ManagementContext, javax.management.ObjectName) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: new           #37                 // class org/apache/activemq/broker/jmx/ManagedTransportConnector
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: invokevirtual #38                 // Method getServer:()Lorg/apache/activemq/transport/TransportServer;
      10: invokespecial #39                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector."<init>":(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljavax/management/ObjectName;Lorg/apache/activemq/transport/TransportServer;)V
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokevirtual #40                 // Method getBrokerInfo:()Lorg/apache/activemq/command/BrokerInfo;
      19: invokevirtual #41                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setBrokerInfo:(Lorg/apache/activemq/command/BrokerInfo;)V
      22: aload_3
      23: aload_0
      24: invokevirtual #42                 // Method isDisableAsyncDispatch:()Z
      27: invokevirtual #43                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setDisableAsyncDispatch:(Z)V
      30: aload_3
      31: aload_0
      32: invokevirtual #44                 // Method getDiscoveryAgent:()Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      35: invokevirtual #45                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setDiscoveryAgent:(Lorg/apache/activemq/transport/discovery/DiscoveryAgent;)V
      38: aload_3
      39: aload_0
      40: invokevirtual #46                 // Method getDiscoveryUri:()Ljava/net/URI;
      43: invokevirtual #47                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setDiscoveryUri:(Ljava/net/URI;)V
      46: aload_3
      47: aload_0
      48: invokevirtual #48                 // Method isEnableStatusMonitor:()Z
      51: invokevirtual #49                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setEnableStatusMonitor:(Z)V
      54: aload_3
      55: aload_0
      56: invokevirtual #50                 // Method getMessageAuthorizationPolicy:()Lorg/apache/activemq/security/MessageAuthorizationPolicy;
      59: invokevirtual #51                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setMessageAuthorizationPolicy:(Lorg/apache/activemq/security/MessageAuthorizationPolicy;)V
      62: aload_3
      63: aload_0
      64: invokevirtual #52                 // Method getName:()Ljava/lang/String;
      67: invokevirtual #53                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setName:(Ljava/lang/String;)V
      70: aload_3
      71: aload_0
      72: invokevirtual #54                 // Method getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
      75: invokevirtual #55                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setTaskRunnerFactory:(Lorg/apache/activemq/thread/TaskRunnerFactory;)V
      78: aload_3
      79: aload_0
      80: invokevirtual #56                 // Method getUri:()Ljava/net/URI;
      83: invokevirtual #57                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setUri:(Ljava/net/URI;)V
      86: aload_3
      87: aload_0
      88: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      91: invokevirtual #58                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
      94: aload_3
      95: aload_0
      96: invokevirtual #59                 // Method isUpdateClusterClients:()Z
      99: invokevirtual #60                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setUpdateClusterClients:(Z)V
     102: aload_3
     103: aload_0
     104: invokevirtual #61                 // Method isRebalanceClusterClients:()Z
     107: invokevirtual #62                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setRebalanceClusterClients:(Z)V
     110: aload_3
     111: aload_0
     112: invokevirtual #63                 // Method getUpdateClusterFilter:()Ljava/lang/String;
     115: invokevirtual #64                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setUpdateClusterFilter:(Ljava/lang/String;)V
     118: aload_3
     119: aload_0
     120: invokevirtual #65                 // Method isUpdateClusterClientsOnRemove:()Z
     123: invokevirtual #66                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setUpdateClusterClientsOnRemove:(Z)V
     126: aload_3
     127: aload_0
     128: invokevirtual #67                 // Method isAuditNetworkProducers:()Z
     131: invokevirtual #68                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setAuditNetworkProducers:(Z)V
     134: aload_3
     135: aload_0
     136: invokevirtual #69                 // Method getMaximumConsumersAllowedPerConnection:()I
     139: invokevirtual #70                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setMaximumConsumersAllowedPerConnection:(I)V
     142: aload_3
     143: aload_0
     144: invokevirtual #71                 // Method getMaximumProducersAllowedPerConnection:()I
     147: invokevirtual #72                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setMaximumProducersAllowedPerConnection:(I)V
     150: aload_3
     151: aload_0
     152: invokevirtual #73                 // Method getPublishedAddressPolicy:()Lorg/apache/activemq/broker/PublishedAddressPolicy;
     155: invokevirtual #74                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setPublishedAddressPolicy:(Lorg/apache/activemq/broker/PublishedAddressPolicy;)V
     158: aload_3
     159: aload_0
     160: invokevirtual #75                 // Method isAllowLinkStealing:()Z
     163: invokevirtual #76                 // Method org/apache/activemq/broker/jmx/ManagedTransportConnector.setAllowLinkStealing:(Z)V
     166: aload_3
     167: areturn

  public org.apache.activemq.command.BrokerInfo getBrokerInfo();
    Code:
       0: aload_0
       1: getfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       4: areturn

  public void setBrokerInfo(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       5: return

  public org.apache.activemq.transport.TransportServer getServer() throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: getfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #78                 // Method createTransportServer:()Lorg/apache/activemq/transport/TransportServer;
      12: invokevirtual #29                 // Method setServer:(Lorg/apache/activemq/transport/TransportServer;)V
      15: aload_0
      16: getfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
      19: areturn

  public void setServer(org.apache.activemq.transport.TransportServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
       5: return

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #79                 // Field uri:Ljava/net/URI;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #80                 // Method getConnectUri:()Ljava/net/URI;
      12: putfield      #79                 // Field uri:Ljava/net/URI;
      15: goto          19
      18: astore_1
      19: aload_0
      20: getfield      #79                 // Field uri:Ljava/net/URI;
      23: areturn
    Exception table:
       from    to  target type
           7    15    18   Class java/lang/Throwable

  public void setUri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field uri:Ljava/net/URI;
       5: return

  public org.apache.activemq.thread.TaskRunnerFactory getTaskRunnerFactory();
    Code:
       0: aload_0
       1: getfield      #82                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
       4: areturn

  public void setTaskRunnerFactory(org.apache.activemq.thread.TaskRunnerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
       5: return

  public org.apache.activemq.broker.region.ConnectorStatistics getStatistics();
    Code:
       0: aload_0
       1: getfield      #14                 // Field statistics:Lorg/apache/activemq/broker/region/ConnectorStatistics;
       4: areturn

  public org.apache.activemq.security.MessageAuthorizationPolicy getMessageAuthorizationPolicy();
    Code:
       0: aload_0
       1: getfield      #83                 // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
       4: areturn

  public void setMessageAuthorizationPolicy(org.apache.activemq.security.MessageAuthorizationPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
       5: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       5: invokevirtual #84                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
       8: putfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
      11: aload_0
      12: getfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      15: aload_0
      16: getfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
      19: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerName:()Ljava/lang/String;
      24: invokevirtual #87                 // Method org/apache/activemq/command/BrokerInfo.setBrokerName:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      31: aload_0
      32: getfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
      35: invokeinterface #88,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      40: invokevirtual #89                 // Method org/apache/activemq/command/BrokerInfo.setBrokerId:(Lorg/apache/activemq/command/BrokerId;)V
      43: aload_0
      44: getfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      47: aload_0
      48: getfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
      51: invokeinterface #90,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getPeerBrokerInfos:()[Lorg/apache/activemq/command/BrokerInfo;
      56: invokevirtual #91                 // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
      59: aload_0
      60: getfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      63: aload_0
      64: getfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
      67: invokeinterface #92,  1           // InterfaceMethod org/apache/activemq/broker/Broker.isFaultTolerantConfiguration:()Z
      72: invokevirtual #93                 // Method org/apache/activemq/command/BrokerInfo.setFaultTolerantConfiguration:(Z)V
      75: aload_0
      76: getfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      79: aload_0
      80: getfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
      83: invokeinterface #94,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      88: invokevirtual #95                 // Method org/apache/activemq/broker/BrokerService.getDefaultSocketURIString:()Ljava/lang/String;
      91: invokevirtual #96                 // Method org/apache/activemq/command/BrokerInfo.setBrokerURL:(Ljava/lang/String;)V
      94: aload_0
      95: invokevirtual #38                 // Method getServer:()Lorg/apache/activemq/transport/TransportServer;
      98: new           #97                 // class org/apache/activemq/broker/TransportConnector$1
     101: dup
     102: aload_0
     103: invokespecial #98                 // Method org/apache/activemq/broker/TransportConnector$1."<init>":(Lorg/apache/activemq/broker/TransportConnector;)V
     106: invokeinterface #99,  2           // InterfaceMethod org/apache/activemq/transport/TransportServer.setAcceptListener:(Lorg/apache/activemq/transport/TransportAcceptListener;)V
     111: aload_0
     112: invokevirtual #38                 // Method getServer:()Lorg/apache/activemq/transport/TransportServer;
     115: aload_0
     116: getfield      #11                 // Field brokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     119: invokeinterface #100,  2          // InterfaceMethod org/apache/activemq/transport/TransportServer.setBrokerInfo:(Lorg/apache/activemq/command/BrokerInfo;)V
     124: aload_0
     125: invokevirtual #38                 // Method getServer:()Lorg/apache/activemq/transport/TransportServer;
     128: invokeinterface #101,  1          // InterfaceMethod org/apache/activemq/transport/TransportServer.start:()V
     133: aload_0
     134: invokevirtual #44                 // Method getDiscoveryAgent:()Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
     137: astore_1
     138: aload_1
     139: ifnull        158
     142: aload_1
     143: aload_0
     144: invokevirtual #102                // Method getPublishableConnectString:()Ljava/lang/String;
     147: invokeinterface #103,  2          // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryAgent.registerService:(Ljava/lang/String;)V
     152: aload_1
     153: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryAgent.start:()V
     158: aload_0
     159: getfield      #15                 // Field enableStatusMonitor:Z
     162: ifeq          184
     165: aload_0
     166: new           #105                // class org/apache/activemq/broker/TransportStatusDetector
     169: dup
     170: aload_0
     171: invokespecial #106                // Method org/apache/activemq/broker/TransportStatusDetector."<init>":(Lorg/apache/activemq/broker/TransportConnector;)V
     174: putfield      #107                // Field statusDector:Lorg/apache/activemq/broker/TransportStatusDetector;
     177: aload_0
     178: getfield      #107                // Field statusDector:Lorg/apache/activemq/broker/TransportStatusDetector;
     181: invokevirtual #108                // Method org/apache/activemq/broker/TransportStatusDetector.start:()V
     184: aload_0
     185: getfield      #5                  // Field LOG:Lorg/slf4j/Logger;
     188: ldc           #109                // String Connector {} started
     190: aload_0
     191: invokevirtual #52                 // Method getName:()Ljava/lang/String;
     194: invokeinterface #110,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     199: return

  public java.lang.String getPublishableConnectString() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #24                 // Field publishedAddressPolicy:Lorg/apache/activemq/broker/PublishedAddressPolicy;
       4: aload_0
       5: invokevirtual #111                // Method org/apache/activemq/broker/PublishedAddressPolicy.getPublishableConnectString:(Lorg/apache/activemq/broker/TransportConnector;)Ljava/lang/String;
       8: astore_1
       9: aload_0
      10: getfield      #5                  // Field LOG:Lorg/slf4j/Logger;
      13: ldc           #112                // String Publishing: {} for broker transport URI: {}
      15: aload_1
      16: aload_0
      17: invokevirtual #80                 // Method getConnectUri:()Ljava/net/URI;
      20: invokeinterface #113,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      25: aload_1
      26: areturn

  public java.net.URI getPublishableConnectURI() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #24                 // Field publishedAddressPolicy:Lorg/apache/activemq/broker/PublishedAddressPolicy;
       4: aload_0
       5: invokevirtual #114                // Method org/apache/activemq/broker/PublishedAddressPolicy.getPublishableConnectURI:(Lorg/apache/activemq/broker/TransportConnector;)Ljava/net/URI;
       8: areturn

  public void stop() throws java.lang.Exception;
    Code:
       0: new           #115                // class org/apache/activemq/util/ServiceStopper
       3: dup
       4: invokespecial #116                // Method org/apache/activemq/util/ServiceStopper."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #117                // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      12: ifnull        23
      15: aload_1
      16: aload_0
      17: getfield      #117                // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      20: invokevirtual #118                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      23: aload_0
      24: getfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
      27: ifnull        38
      30: aload_1
      31: aload_0
      32: getfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
      35: invokevirtual #118                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      38: aload_0
      39: getfield      #107                // Field statusDector:Lorg/apache/activemq/broker/TransportStatusDetector;
      42: ifnull        52
      45: aload_0
      46: getfield      #107                // Field statusDector:Lorg/apache/activemq/broker/TransportStatusDetector;
      49: invokevirtual #119                // Method org/apache/activemq/broker/TransportStatusDetector.stop:()V
      52: aload_0
      53: getfield      #8                  // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
      56: invokevirtual #120                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      59: astore_2
      60: aload_2
      61: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          87
      69: aload_2
      70: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #123                // class org/apache/activemq/broker/TransportConnection
      78: astore_3
      79: aload_1
      80: aload_3
      81: invokevirtual #118                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      84: goto          60
      87: aload_0
      88: aconst_null
      89: putfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
      92: aload_1
      93: invokevirtual #124                // Method org/apache/activemq/util/ServiceStopper.throwFirstException:()V
      96: aload_0
      97: getfield      #5                  // Field LOG:Lorg/slf4j/Logger;
     100: ldc           #125                // String Connector {} stopped
     102: aload_0
     103: invokevirtual #52                 // Method getName:()Ljava/lang/String;
     106: invokeinterface #110,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     111: return

  protected org.apache.activemq.broker.Connection createConnection(org.apache.activemq.transport.Transport) throws java.io.IOException;
    Code:
       0: new           #123                // class org/apache/activemq/broker/TransportConnection
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
      10: aload_0
      11: getfield      #126                // Field disableAsyncDispatch:Z
      14: ifeq          21
      17: aconst_null
      18: goto          25
      21: aload_0
      22: getfield      #82                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      25: aload_0
      26: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      29: invokevirtual #127                // Method org/apache/activemq/broker/BrokerService.getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
      32: invokespecial #128                // Method org/apache/activemq/broker/TransportConnection."<init>":(Lorg/apache/activemq/broker/TransportConnector;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/broker/Broker;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/thread/TaskRunnerFactory;)V
      35: astore_2
      36: aload_0
      37: invokevirtual #129                // Method getStatistics:()Lorg/apache/activemq/broker/region/ConnectorStatistics;
      40: invokevirtual #130                // Method org/apache/activemq/broker/region/ConnectorStatistics.isEnabled:()Z
      43: istore_3
      44: aload_2
      45: invokevirtual #131                // Method org/apache/activemq/broker/TransportConnection.getStatistics:()Lorg/apache/activemq/broker/region/ConnectionStatistics;
      48: iload_3
      49: invokevirtual #132                // Method org/apache/activemq/broker/region/ConnectionStatistics.setEnabled:(Z)V
      52: aload_2
      53: aload_0
      54: getfield      #83                 // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
      57: invokevirtual #133                // Method org/apache/activemq/broker/TransportConnection.setMessageAuthorizationPolicy:(Lorg/apache/activemq/security/MessageAuthorizationPolicy;)V
      60: aload_2
      61: areturn

  protected org.apache.activemq.transport.TransportServer createTransportServer() throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: getfield      #79                 // Field uri:Ljava/net/URI;
       4: ifnonnull     17
       7: new           #134                // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #135                // String You must specify either a server or uri property
      13: invokespecial #136                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      21: ifnonnull     34
      24: new           #134                // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #137                // String You must specify the brokerService property. Maybe this connector should be added to a broker?
      30: invokespecial #136                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      38: aload_0
      39: getfield      #79                 // Field uri:Ljava/net/URI;
      42: invokestatic  #138                // Method org/apache/activemq/transport/TransportFactorySupport.bind:(Lorg/apache/activemq/broker/BrokerService;Ljava/net/URI;)Lorg/apache/activemq/transport/TransportServer;
      45: areturn

  public org.apache.activemq.transport.discovery.DiscoveryAgent getDiscoveryAgent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #117                // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #139                // Method createDiscoveryAgent:()Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      12: putfield      #117                // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      15: aload_0
      16: getfield      #117                // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      19: areturn

  protected org.apache.activemq.transport.discovery.DiscoveryAgent createDiscoveryAgent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #140                // Field discoveryUri:Ljava/net/URI;
       4: ifnull        41
       7: aload_0
       8: getfield      #140                // Field discoveryUri:Ljava/net/URI;
      11: invokestatic  #141                // Method org/apache/activemq/transport/discovery/DiscoveryAgentFactory.createDiscoveryAgent:(Ljava/net/URI;)Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      14: astore_1
      15: aload_1
      16: ifnull        39
      19: aload_1
      20: instanceof    #142                // class org/apache/activemq/broker/BrokerServiceAware
      23: ifeq          39
      26: aload_1
      27: checkcast     #142                // class org/apache/activemq/broker/BrokerServiceAware
      30: aload_0
      31: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      34: invokeinterface #143,  2          // InterfaceMethod org/apache/activemq/broker/BrokerServiceAware.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
      39: aload_1
      40: areturn
      41: aconst_null
      42: areturn

  public void setDiscoveryAgent(org.apache.activemq.transport.discovery.DiscoveryAgent);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
       5: return

  public java.net.URI getDiscoveryUri();
    Code:
       0: aload_0
       1: getfield      #140                // Field discoveryUri:Ljava/net/URI;
       4: areturn

  public void setDiscoveryUri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #140                // Field discoveryUri:Ljava/net/URI;
       5: return

  public java.net.URI getConnectUri() throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: getfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
       4: ifnull        17
       7: aload_0
       8: getfield      #77                 // Field server:Lorg/apache/activemq/transport/TransportServer;
      11: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/transport/TransportServer.getConnectURI:()Ljava/net/URI;
      16: areturn
      17: aload_0
      18: getfield      #79                 // Field uri:Ljava/net/URI;
      21: areturn

  public void onStarted(org.apache.activemq.broker.TransportConnection);
    Code:
       0: aload_0
       1: getfield      #8                  // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #144                // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void onStopped(org.apache.activemq.broker.TransportConnection);
    Code:
       0: aload_0
       1: getfield      #8                  // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #145                // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #146                // Field name:Ljava/lang/String;
       4: ifnonnull     33
       7: aload_0
       8: aload_0
       9: invokevirtual #56                 // Method getUri:()Ljava/net/URI;
      12: putfield      #79                 // Field uri:Ljava/net/URI;
      15: aload_0
      16: getfield      #79                 // Field uri:Ljava/net/URI;
      19: ifnull        33
      22: aload_0
      23: aload_0
      24: getfield      #79                 // Field uri:Ljava/net/URI;
      27: invokevirtual #147                // Method java/net/URI.toString:()Ljava/lang/String;
      30: putfield      #146                // Field name:Ljava/lang/String;
      33: aload_0
      34: getfield      #146                // Field name:Ljava/lang/String;
      37: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #146                // Field name:Ljava/lang/String;
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: aload_0
      10: invokespecial #148                // Method java/lang/Object.toString:()Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: areturn

  protected org.apache.activemq.command.ConnectionControl getConnectionControl();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method isRebalanceClusterClients:()Z
       4: istore_1
       5: ldc           #149                // String
       7: astore_2
       8: ldc           #149                // String
      10: astore_3
      11: aload_0
      12: invokevirtual #59                 // Method isUpdateClusterClients:()Z
      15: ifeq          126
      18: aload_0
      19: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
      22: dup
      23: astore        4
      25: monitorenter
      26: aload_0
      27: invokevirtual #150                // Method getPeerBrokers:()Ljava/util/LinkedList;
      30: invokevirtual #151                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      33: astore        5
      35: aload         5
      37: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          87
      45: aload         5
      47: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #152                // class java/lang/String
      55: astore        6
      57: new           #153                // class java/lang/StringBuilder
      60: dup
      61: invokespecial #154                // Method java/lang/StringBuilder."<init>":()V
      64: aload_2
      65: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload         6
      74: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #156                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: astore_2
      81: ldc           #157                // String ,
      83: astore_3
      84: goto          35
      87: iload_1
      88: ifeq          112
      91: aload_0
      92: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
      95: invokevirtual #158                // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
      98: checkcast     #152                // class java/lang/String
     101: astore        5
     103: aload_0
     104: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
     107: aload         5
     109: invokevirtual #159                // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
     112: aload         4
     114: monitorexit
     115: goto          126
     118: astore        7
     120: aload         4
     122: monitorexit
     123: aload         7
     125: athrow
     126: new           #160                // class org/apache/activemq/command/ConnectionControl
     129: dup
     130: invokespecial #161                // Method org/apache/activemq/command/ConnectionControl."<init>":()V
     133: astore        4
     135: aload         4
     137: aload_2
     138: invokevirtual #162                // Method org/apache/activemq/command/ConnectionControl.setConnectedBrokers:(Ljava/lang/String;)V
     141: aload         4
     143: iload_1
     144: invokevirtual #163                // Method org/apache/activemq/command/ConnectionControl.setRebalanceConnection:(Z)V
     147: aload         4
     149: areturn
    Exception table:
       from    to  target type
          26   115   118   any
         118   123   118   any

  public void addPeerBroker(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #164                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
       5: invokespecial #165                // Method isMatchesClusterFilter:(Ljava/lang/String;)Z
       8: ifeq          39
      11: aload_0
      12: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: invokevirtual #150                // Method getPeerBrokers:()Ljava/util/LinkedList;
      22: aload_1
      23: invokevirtual #166                // Method org/apache/activemq/command/BrokerInfo.getBrokerURL:()Ljava/lang/String;
      26: invokevirtual #159                // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      29: aload_2
      30: monitorexit
      31: goto          39
      34: astore_3
      35: aload_2
      36: monitorexit
      37: aload_3
      38: athrow
      39: return
    Exception table:
       from    to  target type
          18    31    34   any
          34    37    34   any

  public void removePeerBroker(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: invokevirtual #150                // Method getPeerBrokers:()Ljava/util/LinkedList;
      11: aload_1
      12: invokevirtual #166                // Method org/apache/activemq/command/BrokerInfo.getBrokerURL:()Ljava/lang/String;
      15: invokevirtual #167                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  public java.util.LinkedList<java.lang.String> getPeerBrokers();
    Code:
       0: aload_0
       1: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
      11: invokevirtual #168                // Method java/util/LinkedList.isEmpty:()Z
      14: ifeq          32
      17: aload_0
      18: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
      21: aload_0
      22: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      25: invokevirtual #95                 // Method org/apache/activemq/broker/BrokerService.getDefaultSocketURIString:()Ljava/lang/String;
      28: invokevirtual #169                // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_0
      33: getfield      #27                 // Field peerBrokers:Ljava/util/LinkedList;
      36: aload_1
      37: monitorexit
      38: areturn
      39: astore_2
      40: aload_1
      41: monitorexit
      42: aload_2
      43: athrow
    Exception table:
       from    to  target type
           7    38    39   any
          39    42    39   any

  public void updateClientClusterInfo();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method isRebalanceClusterClients:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #59                 // Method isUpdateClusterClients:()Z
      11: ifeq          68
      14: aload_0
      15: invokevirtual #170                // Method getConnectionControl:()Lorg/apache/activemq/command/ConnectionControl;
      18: astore_1
      19: aload_0
      20: getfield      #8                  // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
      23: invokevirtual #120                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          68
      36: aload_2
      37: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #171                // class org/apache/activemq/broker/Connection
      45: astore_3
      46: aload_3
      47: aload_1
      48: invokeinterface #172,  2          // InterfaceMethod org/apache/activemq/broker/Connection.updateClient:(Lorg/apache/activemq/command/ConnectionControl;)V
      53: aload_0
      54: invokevirtual #61                 // Method isRebalanceClusterClients:()Z
      57: ifeq          65
      60: aload_0
      61: invokevirtual #170                // Method getConnectionControl:()Lorg/apache/activemq/command/ConnectionControl;
      64: astore_1
      65: goto          27
      68: return

  private boolean isMatchesClusterFilter(java.lang.String);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: invokevirtual #63                 // Method getUpdateClusterFilter:()Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnull        65
      11: aload_3
      12: invokevirtual #173                // Method java/lang/String.trim:()Ljava/lang/String;
      15: astore_3
      16: aload_3
      17: invokevirtual #174                // Method java/lang/String.length:()I
      20: ifle          65
      23: new           #175                // class java/util/StringTokenizer
      26: dup
      27: aload_3
      28: ldc           #157                // String ,
      30: invokespecial #176                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      33: astore        4
      35: iload_2
      36: ifeq          65
      39: aload         4
      41: invokevirtual #177                // Method java/util/StringTokenizer.hasMoreTokens:()Z
      44: ifeq          65
      47: aload         4
      49: invokevirtual #178                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      52: astore        5
      54: aload_0
      55: aload_1
      56: aload         5
      58: invokespecial #179                // Method isMatchesClusterFilter:(Ljava/lang/String;Ljava/lang/String;)Z
      61: istore_2
      62: goto          35
      65: iload_2
      66: ireturn

  private boolean isMatchesClusterFilter(java.lang.String, java.lang.String);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_1
       3: ifnull        30
       6: aload_2
       7: ifnull        30
      10: aload_1
      11: invokevirtual #174                // Method java/lang/String.length:()I
      14: ifle          30
      17: aload_2
      18: invokevirtual #174                // Method java/lang/String.length:()I
      21: ifle          30
      24: aload_2
      25: aload_1
      26: invokestatic  #180                // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
      29: istore_3
      30: iload_3
      31: ireturn

  public boolean isDisableAsyncDispatch();
    Code:
       0: aload_0
       1: getfield      #126                // Field disableAsyncDispatch:Z
       4: ireturn

  public void setDisableAsyncDispatch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #126                // Field disableAsyncDispatch:Z
       5: return

  public boolean isEnableStatusMonitor();
    Code:
       0: aload_0
       1: getfield      #15                 // Field enableStatusMonitor:Z
       4: ireturn

  public void setEnableStatusMonitor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field enableStatusMonitor:Z
       5: return

  public void setBrokerService(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       5: return

  public org.apache.activemq.broker.Broker getBroker();
    Code:
       0: aload_0
       1: getfield      #85                 // Field broker:Lorg/apache/activemq/broker/Broker;
       4: areturn

  public org.apache.activemq.broker.BrokerService getBrokerService();
    Code:
       0: aload_0
       1: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: areturn

  public boolean isUpdateClusterClients();
    Code:
       0: aload_0
       1: getfield      #16                 // Field updateClusterClients:Z
       4: ireturn

  public void setUpdateClusterClients(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field updateClusterClients:Z
       5: return

  public boolean isRebalanceClusterClients();
    Code:
       0: aload_0
       1: getfield      #181                // Field rebalanceClusterClients:Z
       4: ireturn

  public void setRebalanceClusterClients(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #181                // Field rebalanceClusterClients:Z
       5: return

  public boolean isUpdateClusterClientsOnRemove();
    Code:
       0: aload_0
       1: getfield      #17                 // Field updateClusterClientsOnRemove:Z
       4: ireturn

  public void setUpdateClusterClientsOnRemove(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field updateClusterClientsOnRemove:Z
       5: return

  public java.lang.String getUpdateClusterFilter();
    Code:
       0: aload_0
       1: getfield      #182                // Field updateClusterFilter:Ljava/lang/String;
       4: areturn

  public void setUpdateClusterFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #182                // Field updateClusterFilter:Ljava/lang/String;
       5: return

  public int connectionCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #183                // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
       7: ireturn

  public boolean isAllowLinkStealing();
    Code:
       0: aload_0
       1: getfield      #184                // Field allowLinkStealing:Z
       4: ireturn

  public void setAllowLinkStealing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #184                // Field allowLinkStealing:Z
       5: return

  public boolean isAuditNetworkProducers();
    Code:
       0: aload_0
       1: getfield      #18                 // Field auditNetworkProducers:Z
       4: ireturn

  public void setAuditNetworkProducers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field auditNetworkProducers:Z
       5: return

  public int getMaximumProducersAllowedPerConnection();
    Code:
       0: aload_0
       1: getfield      #20                 // Field maximumProducersAllowedPerConnection:I
       4: ireturn

  public void setMaximumProducersAllowedPerConnection(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field maximumProducersAllowedPerConnection:I
       5: return

  public int getMaximumConsumersAllowedPerConnection();
    Code:
       0: aload_0
       1: getfield      #21                 // Field maximumConsumersAllowedPerConnection:I
       4: ireturn

  public void setMaximumConsumersAllowedPerConnection(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field maximumConsumersAllowedPerConnection:I
       5: return

  public org.apache.activemq.broker.PublishedAddressPolicy getPublishedAddressPolicy();
    Code:
       0: aload_0
       1: getfield      #24                 // Field publishedAddressPolicy:Lorg/apache/activemq/broker/PublishedAddressPolicy;
       4: areturn

  public void setPublishedAddressPolicy(org.apache.activemq.broker.PublishedAddressPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field publishedAddressPolicy:Lorg/apache/activemq/broker/PublishedAddressPolicy;
       5: return

  static org.apache.activemq.broker.BrokerService access$000(org.apache.activemq.broker.TransportConnector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: areturn
}
