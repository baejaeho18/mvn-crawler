Compiled from "Topic.java"
public class org.apache.activemq.broker.region.Topic extends org.apache.activemq.broker.region.BaseDestination implements org.apache.activemq.thread.Task {
  protected static final org.slf4j.Logger LOG;

  private final org.apache.activemq.store.TopicMessageStore topicStore;

  protected final java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.broker.region.Subscription> consumers;

  private final java.util.concurrent.locks.ReentrantReadWriteLock dispatchLock;

  private org.apache.activemq.broker.region.policy.DispatchPolicy dispatchPolicy;

  private org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy subscriptionRecoveryPolicy;

  private final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.util.SubscriptionKey, org.apache.activemq.broker.region.DurableTopicSubscription> durableSubscribers;

  private final org.apache.activemq.thread.TaskRunner taskRunner;

  private final java.util.LinkedList<java.lang.Runnable> messagesWaitingForSpace;

  private final java.lang.Runnable sendMessagesWaitingForSpaceTask;

  private final java.lang.Runnable expireMessagesTask;

  public org.apache.activemq.broker.region.Topic(org.apache.activemq.broker.BrokerService, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.store.TopicMessageStore, org.apache.activemq.broker.region.DestinationStatistics, org.apache.activemq.thread.TaskRunnerFactory) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: aload         4
       6: invokespecial #3                  // Method org/apache/activemq/broker/region/BaseDestination."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/store/MessageStore;Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/broker/region/DestinationStatistics;)V
       9: aload_0
      10: new           #4                  // class java/util/concurrent/CopyOnWriteArrayList
      13: dup
      14: invokespecial #5                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      17: putfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      20: aload_0
      21: new           #7                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      24: dup
      25: invokespecial #8                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      28: putfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: aload_0
      32: new           #10                 // class org/apache/activemq/broker/region/policy/SimpleDispatchPolicy
      35: dup
      36: invokespecial #11                 // Method org/apache/activemq/broker/region/policy/SimpleDispatchPolicy."<init>":()V
      39: putfield      #12                 // Field dispatchPolicy:Lorg/apache/activemq/broker/region/policy/DispatchPolicy;
      42: aload_0
      43: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      46: dup
      47: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      50: putfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
      53: aload_0
      54: new           #16                 // class java/util/LinkedList
      57: dup
      58: invokespecial #17                 // Method java/util/LinkedList."<init>":()V
      61: putfield      #18                 // Field messagesWaitingForSpace:Ljava/util/LinkedList;
      64: aload_0
      65: new           #19                 // class org/apache/activemq/broker/region/Topic$1
      68: dup
      69: aload_0
      70: invokespecial #20                 // Method org/apache/activemq/broker/region/Topic$1."<init>":(Lorg/apache/activemq/broker/region/Topic;)V
      73: putfield      #21                 // Field sendMessagesWaitingForSpaceTask:Ljava/lang/Runnable;
      76: aload_0
      77: new           #22                 // class org/apache/activemq/broker/region/Topic$6
      80: dup
      81: aload_0
      82: invokespecial #23                 // Method org/apache/activemq/broker/region/Topic$6."<init>":(Lorg/apache/activemq/broker/region/Topic;)V
      85: putfield      #24                 // Field expireMessagesTask:Ljava/lang/Runnable;
      88: aload_0
      89: aload_3
      90: putfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      93: aload_2
      94: invokestatic  #26                 // Method org/apache/activemq/advisory/AdvisorySupport.isMasterBrokerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      97: ifeq          119
     100: aload_0
     101: new           #27                 // class org/apache/activemq/broker/region/policy/LastImageSubscriptionRecoveryPolicy
     104: dup
     105: invokespecial #28                 // Method org/apache/activemq/broker/region/policy/LastImageSubscriptionRecoveryPolicy."<init>":()V
     108: putfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
     111: aload_0
     112: iconst_1
     113: invokevirtual #30                 // Method setAlwaysRetroactive:(Z)V
     116: goto          131
     119: aload_0
     120: new           #31                 // class org/apache/activemq/broker/region/policy/RetainedMessageSubscriptionRecoveryPolicy
     123: dup
     124: aconst_null
     125: invokespecial #32                 // Method org/apache/activemq/broker/region/policy/RetainedMessageSubscriptionRecoveryPolicy."<init>":(Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;)V
     128: putfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
     131: aload_0
     132: aload         5
     134: aload_0
     135: new           #33                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #35                 // String Topic
     144: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_2
     148: invokevirtual #37                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
     151: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokevirtual #39                 // Method org/apache/activemq/thread/TaskRunnerFactory.createTaskRunner:(Lorg/apache/activemq/thread/Task;Ljava/lang/String;)Lorg/apache/activemq/thread/TaskRunner;
     160: putfield      #2                  // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
     163: return

  public void initialize() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #40                 // Method org/apache/activemq/broker/region/BaseDestination.initialize:()V
       4: aload_0
       5: getfield      #41                 // Field store:Lorg/apache/activemq/store/MessageStore;
       8: ifnull        11
      11: return

  public java.util.List<org.apache.activemq.broker.region.Subscription> getConsumers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #42                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      15: invokespecial #43                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: aload_1
      19: monitorexit
      20: areturn
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
    Exception table:
       from    to  target type
           7    20    21   any
          21    24    21   any

  public boolean lock(org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.LockOwner);
    Code:
       0: iconst_1
       1: ireturn

  public void addSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       6: invokevirtual #45                 // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
       9: ifne          204
      12: aload_2
      13: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      18: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.isRetroactive:()Z
      21: ifne          31
      24: aload_0
      25: invokevirtual #47                 // Method isAlwaysRetroactive:()Z
      28: ifeq          148
      31: aload_0
      32: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      35: invokevirtual #48                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      38: invokevirtual #49                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      41: iconst_0
      42: istore_3
      43: aload_0
      44: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      47: dup
      48: astore        4
      50: monitorenter
      51: aload_0
      52: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      55: aload_2
      56: invokevirtual #50                 // Method java/util/concurrent/CopyOnWriteArrayList.contains:(Ljava/lang/Object;)Z
      59: ifne          87
      62: aload_2
      63: aload_1
      64: aload_0
      65: invokeinterface #51,  3           // InterfaceMethod org/apache/activemq/broker/region/Subscription.add:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;)V
      70: aload_0
      71: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      74: aload_2
      75: invokevirtual #52                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
      78: pop
      79: iconst_1
      80: istore_3
      81: aload_0
      82: aload_1
      83: aload_2
      84: invokespecial #53                 // Method org/apache/activemq/broker/region/BaseDestination.addSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;)V
      87: aload         4
      89: monitorexit
      90: goto          101
      93: astore        5
      95: aload         4
      97: monitorexit
      98: aload         5
     100: athrow
     101: iload_3
     102: ifeq          117
     105: aload_0
     106: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
     109: aload_1
     110: aload_0
     111: aload_2
     112: invokeinterface #54,  4           // InterfaceMethod org/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy.recover:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Topic;Lorg/apache/activemq/broker/region/SubscriptionRecovery;)V
     117: aload_0
     118: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     121: invokevirtual #48                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     124: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     127: goto          145
     130: astore        6
     132: aload_0
     133: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     136: invokevirtual #48                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     139: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     142: aload         6
     144: athrow
     145: goto          373
     148: aload_0
     149: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     152: dup
     153: astore_3
     154: monitorenter
     155: aload_0
     156: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     159: aload_2
     160: invokevirtual #50                 // Method java/util/concurrent/CopyOnWriteArrayList.contains:(Ljava/lang/Object;)Z
     163: ifne          189
     166: aload_2
     167: aload_1
     168: aload_0
     169: invokeinterface #51,  3           // InterfaceMethod org/apache/activemq/broker/region/Subscription.add:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;)V
     174: aload_0
     175: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     178: aload_2
     179: invokevirtual #52                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
     182: pop
     183: aload_0
     184: aload_1
     185: aload_2
     186: invokespecial #53                 // Method org/apache/activemq/broker/region/BaseDestination.addSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;)V
     189: aload_3
     190: monitorexit
     191: goto          201
     194: astore        7
     196: aload_3
     197: monitorexit
     198: aload         7
     200: athrow
     201: goto          373
     204: aload_2
     205: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
     208: astore_3
     209: aload_0
     210: aload_1
     211: aload_2
     212: invokespecial #53                 // Method org/apache/activemq/broker/region/BaseDestination.addSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;)V
     215: aload_2
     216: aload_1
     217: aload_0
     218: invokeinterface #51,  3           // InterfaceMethod org/apache/activemq/broker/region/Subscription.add:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;)V
     223: aload_3
     224: invokevirtual #57                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.isActive:()Z
     227: ifeq          360
     230: aload_0
     231: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     234: dup
     235: astore        4
     237: monitorenter
     238: iconst_0
     239: istore        5
     241: aload_0
     242: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     245: invokevirtual #58                 // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
     248: ifne          257
     251: iconst_0
     252: istore        5
     254: goto          332
     257: aload_0
     258: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     261: invokevirtual #59                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
     264: astore        6
     266: aload         6
     268: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     273: ifeq          332
     276: aload         6
     278: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     283: checkcast     #62                 // class org/apache/activemq/broker/region/Subscription
     286: astore        7
     288: aload         7
     290: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     295: invokevirtual #45                 // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
     298: ifeq          329
     301: aload         7
     303: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
     306: astore        8
     308: aload         8
     310: invokevirtual #63                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getSubscriptionKey:()Lorg/apache/activemq/util/SubscriptionKey;
     313: aload_3
     314: invokevirtual #63                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getSubscriptionKey:()Lorg/apache/activemq/util/SubscriptionKey;
     317: invokevirtual #64                 // Method org/apache/activemq/util/SubscriptionKey.equals:(Ljava/lang/Object;)Z
     320: ifeq          329
     323: iconst_1
     324: istore        5
     326: goto          332
     329: goto          266
     332: iload         5
     334: ifne          346
     337: aload_0
     338: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     341: aload_2
     342: invokevirtual #52                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
     345: pop
     346: aload         4
     348: monitorexit
     349: goto          360
     352: astore        9
     354: aload         4
     356: monitorexit
     357: aload         9
     359: athrow
     360: aload_0
     361: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
     364: aload_3
     365: invokevirtual #63                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getSubscriptionKey:()Lorg/apache/activemq/util/SubscriptionKey;
     368: aload_3
     369: invokevirtual #65                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     372: pop
     373: return
    Exception table:
       from    to  target type
          51    90    93   any
          93    98    93   any
          41   117   130   any
         130   132   130   any
         155   191   194   any
         194   198   194   any
         238   349   352   any
         352   357   352   any

  public void removeSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, long) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       6: invokevirtual #45                 // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
       9: ifne          50
      12: aload_0
      13: aload_1
      14: aload_2
      15: lload_3
      16: invokespecial #66                 // Method org/apache/activemq/broker/region/BaseDestination.removeSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;J)V
      19: aload_0
      20: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      23: dup
      24: astore        5
      26: monitorenter
      27: aload_0
      28: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      31: aload_2
      32: invokevirtual #67                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      35: pop
      36: aload         5
      38: monitorexit
      39: goto          50
      42: astore        6
      44: aload         5
      46: monitorexit
      47: aload         6
      49: athrow
      50: aload_2
      51: aload_1
      52: aload_0
      53: invokeinterface #68,  3           // InterfaceMethod org/apache/activemq/broker/region/Subscription.remove:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;)Ljava/util/List;
      58: pop
      59: return
    Exception table:
       from    to  target type
          27    39    42   any
          42    47    42   any

  public void deleteSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.util.SubscriptionKey) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
       4: ifnull        64
       7: aload_0
       8: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      11: aload_2
      12: getfield      #69                 // Field org/apache/activemq/util/SubscriptionKey.clientId:Ljava/lang/String;
      15: aload_2
      16: getfield      #70                 // Field org/apache/activemq/util/SubscriptionKey.subscriptionName:Ljava/lang/String;
      19: invokeinterface #71,  3           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.deleteSubscription:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_0
      25: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
      28: aload_2
      29: invokevirtual #72                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
      35: astore_3
      36: aload_3
      37: ifnull        64
      40: aload_0
      41: getfield      #73                 // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
      44: invokevirtual #74                 // Method org/apache/activemq/broker/region/DestinationStatistics.getConsumers:()Lorg/apache/activemq/management/CountStatisticImpl;
      47: invokevirtual #75                 // Method org/apache/activemq/management/CountStatisticImpl.decrement:()V
      50: aload_3
      51: iconst_0
      52: invokevirtual #76                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.deactivate:(Z)V
      55: aload_0
      56: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      59: aload_3
      60: invokevirtual #67                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      63: pop
      64: return

  public void activate(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.DurableTopicSubscription) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #48                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #49                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_0
      11: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      14: ifnonnull     28
      17: aload_0
      18: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      21: invokevirtual #48                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      24: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      27: return
      28: aload_2
      29: invokevirtual #63                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getSubscriptionKey:()Lorg/apache/activemq/util/SubscriptionKey;
      32: invokevirtual #77                 // Method org/apache/activemq/util/SubscriptionKey.getClientId:()Ljava/lang/String;
      35: astore_3
      36: aload_2
      37: invokevirtual #63                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getSubscriptionKey:()Lorg/apache/activemq/util/SubscriptionKey;
      40: invokevirtual #78                 // Method org/apache/activemq/util/SubscriptionKey.getSubscriptionName:()Ljava/lang/String;
      43: astore        4
      45: aload_2
      46: invokevirtual #79                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      49: invokevirtual #80                 // Method org/apache/activemq/command/ConsumerInfo.getSelector:()Ljava/lang/String;
      52: astore        5
      54: aload_0
      55: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      58: aload_3
      59: aload         4
      61: invokeinterface #81,  3           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.lookupSubscription:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/activemq/command/SubscriptionInfo;
      66: astore        6
      68: aload         6
      70: ifnull        210
      73: aload         6
      75: invokevirtual #82                 // Method org/apache/activemq/command/SubscriptionInfo.getSelector:()Ljava/lang/String;
      78: astore        7
      80: aload         7
      82: ifnonnull     89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: aload         5
      92: ifnonnull     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ixor
     101: ifne          119
     104: aload         7
     106: ifnull        168
     109: aload         7
     111: aload         5
     113: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     116: ifne          168
     119: aload_0
     120: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
     123: aload_3
     124: aload         4
     126: invokeinterface #71,  3           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.deleteSubscription:(Ljava/lang/String;Ljava/lang/String;)V
     131: aconst_null
     132: astore        6
     134: aload_0
     135: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     138: dup
     139: astore        8
     141: monitorenter
     142: aload_0
     143: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     146: aload_2
     147: invokevirtual #67                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
     150: pop
     151: aload         8
     153: monitorexit
     154: goto          165
     157: astore        9
     159: aload         8
     161: monitorexit
     162: aload         9
     164: athrow
     165: goto          210
     168: aload_0
     169: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     172: dup
     173: astore        8
     175: monitorenter
     176: aload_0
     177: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     180: aload_2
     181: invokevirtual #50                 // Method java/util/concurrent/CopyOnWriteArrayList.contains:(Ljava/lang/Object;)Z
     184: ifne          196
     187: aload_0
     188: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     191: aload_2
     192: invokevirtual #52                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
     195: pop
     196: aload         8
     198: monitorexit
     199: goto          210
     202: astore        10
     204: aload         8
     206: monitorexit
     207: aload         10
     209: athrow
     210: aload         6
     212: ifnonnull     314
     215: new           #84                 // class org/apache/activemq/command/SubscriptionInfo
     218: dup
     219: invokespecial #85                 // Method org/apache/activemq/command/SubscriptionInfo."<init>":()V
     222: astore        6
     224: aload         6
     226: aload_3
     227: invokevirtual #86                 // Method org/apache/activemq/command/SubscriptionInfo.setClientId:(Ljava/lang/String;)V
     230: aload         6
     232: aload         5
     234: invokevirtual #87                 // Method org/apache/activemq/command/SubscriptionInfo.setSelector:(Ljava/lang/String;)V
     237: aload         6
     239: aload         4
     241: invokevirtual #88                 // Method org/apache/activemq/command/SubscriptionInfo.setSubscriptionName:(Ljava/lang/String;)V
     244: aload         6
     246: aload_0
     247: invokevirtual #89                 // Method getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     250: invokevirtual #90                 // Method org/apache/activemq/command/SubscriptionInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     253: aload         6
     255: aload_2
     256: invokevirtual #79                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     259: invokevirtual #91                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     262: invokevirtual #92                 // Method org/apache/activemq/command/SubscriptionInfo.setSubscribedDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     265: aload_0
     266: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     269: dup
     270: astore        7
     272: monitorenter
     273: aload_0
     274: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     277: aload_2
     278: invokevirtual #52                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
     281: pop
     282: aload_0
     283: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
     286: aload         6
     288: aload_2
     289: invokevirtual #79                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     292: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.isRetroactive:()Z
     295: invokeinterface #93,  3           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.addSubscription:(Lorg/apache/activemq/command/SubscriptionInfo;Z)V
     300: aload         7
     302: monitorexit
     303: goto          314
     306: astore        11
     308: aload         7
     310: monitorexit
     311: aload         11
     313: athrow
     314: new           #94                 // class org/apache/activemq/filter/NonCachedMessageEvaluationContext
     317: dup
     318: invokespecial #95                 // Method org/apache/activemq/filter/NonCachedMessageEvaluationContext."<init>":()V
     321: astore        7
     323: aload         7
     325: aload_0
     326: getfield      #96                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
     329: invokevirtual #97                 // Method org/apache/activemq/filter/MessageEvaluationContext.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     332: aload_2
     333: invokevirtual #98                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.isRecoveryRequired:()Z
     336: ifeq          362
     339: aload_0
     340: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
     343: aload_3
     344: aload         4
     346: new           #99                 // class org/apache/activemq/broker/region/Topic$2
     349: dup
     350: aload_0
     351: aload         7
     353: aload_2
     354: invokespecial #100                // Method org/apache/activemq/broker/region/Topic$2."<init>":(Lorg/apache/activemq/broker/region/Topic;Lorg/apache/activemq/filter/MessageEvaluationContext;Lorg/apache/activemq/broker/region/DurableTopicSubscription;)V
     357: invokeinterface #101,  4          // InterfaceMethod org/apache/activemq/store/TopicMessageStore.recoverSubscription:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/store/MessageRecoveryListener;)V
     362: aload_0
     363: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     366: invokevirtual #48                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     369: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     372: goto          390
     375: astore        12
     377: aload_0
     378: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     381: invokevirtual #48                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     384: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     387: aload         12
     389: athrow
     390: return
    Exception table:
       from    to  target type
         142   154   157   any
         157   162   157   any
         176   199   202   any
         202   207   202   any
         273   303   306   any
         306   311   306   any
          10    17   375   any
          28   362   375   any
         375   377   375   any

  public void deactivate(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.DurableTopicSubscription, java.util.List<org.apache.activemq.broker.region.MessageReference>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      12: aload_2
      13: invokevirtual #67                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      16: pop
      17: aload         4
      19: monitorexit
      20: goto          31
      23: astore        5
      25: aload         4
      27: monitorexit
      28: aload         5
      30: athrow
      31: aload_2
      32: aload_1
      33: aload_0
      34: aload_3
      35: invokevirtual #102                // Method org/apache/activemq/broker/region/DurableTopicSubscription.remove:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;Ljava/util/List;)Ljava/util/List;
      38: pop
      39: return
    Exception table:
       from    to  target type
           8    20    23   any
          23    28    23   any

  public void recoverRetroactiveMessages(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       6: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.isRetroactive:()Z
       9: ifeq          24
      12: aload_0
      13: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
      16: aload_1
      17: aload_0
      18: aload_2
      19: invokeinterface #54,  4           // InterfaceMethod org/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy.recover:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Topic;Lorg/apache/activemq/broker/region/SubscriptionRecovery;)V
      24: return

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #103                // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       4: astore_3
       5: aload_1
       6: invokevirtual #104                // Method org/apache/activemq/broker/ProducerBrokerExchange.getProducerState:()Lorg/apache/activemq/state/ProducerState;
       9: invokevirtual #105                // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
      12: astore        4
      14: aload_1
      15: invokevirtual #106                // Method org/apache/activemq/broker/ProducerBrokerExchange.incrementSend:()V
      18: aload_2
      19: invokevirtual #107                // Method org/apache/activemq/command/Message.isResponseRequired:()Z
      22: ifne          44
      25: aload         4
      27: invokevirtual #108                // Method org/apache/activemq/command/ProducerInfo.getWindowSize:()I
      30: ifle          44
      33: aload_3
      34: invokevirtual #109                // Method org/apache/activemq/broker/ConnectionContext.isInRecoveryMode:()Z
      37: ifne          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: istore        5
      47: aload_2
      48: invokevirtual #110                // Method org/apache/activemq/command/Message.isExpired:()Z
      51: ifeq          111
      54: aload_0
      55: getfield      #111                // Field broker:Lorg/apache/activemq/broker/Broker;
      58: aload_3
      59: aload_2
      60: aconst_null
      61: invokeinterface #112,  4          // InterfaceMethod org/apache/activemq/broker/Broker.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;)V
      66: aload_0
      67: invokevirtual #113                // Method getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
      70: invokevirtual #114                // Method org/apache/activemq/broker/region/DestinationStatistics.getExpired:()Lorg/apache/activemq/management/CountStatisticImpl;
      73: invokevirtual #115                // Method org/apache/activemq/management/CountStatisticImpl.increment:()V
      76: iload         5
      78: ifeq          110
      81: new           #116                // class org/apache/activemq/command/ProducerAck
      84: dup
      85: aload         4
      87: invokevirtual #117                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      90: aload_2
      91: invokevirtual #118                // Method org/apache/activemq/command/Message.getSize:()I
      94: invokespecial #119                // Method org/apache/activemq/command/ProducerAck."<init>":(Lorg/apache/activemq/command/ProducerId;I)V
      97: astore        6
      99: aload_3
     100: invokevirtual #120                // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     103: aload         6
     105: invokeinterface #121,  2          // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     110: return
     111: aload_0
     112: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     115: invokevirtual #123                // Method org/apache/activemq/usage/MemoryUsage.isFull:()Z
     118: ifeq          533
     121: aload_0
     122: aload_3
     123: aload_0
     124: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     127: invokevirtual #124                // Method isFull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/usage/Usage;)V
     130: aload_0
     131: aload_3
     132: aload         4
     134: invokevirtual #125                // Method fastProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
     137: aload_0
     138: invokevirtual #126                // Method isProducerFlowControl:()Z
     141: ifeq          533
     144: aload_3
     145: invokevirtual #127                // Method org/apache/activemq/broker/ConnectionContext.isProducerFlowControl:()Z
     148: ifeq          533
     151: aload_0
     152: getfield      #128                // Field warnOnProducerFlowControl:Z
     155: ifeq          190
     158: aload_0
     159: iconst_0
     160: putfield      #128                // Field warnOnProducerFlowControl:Z
     163: getstatic     #129                // Field LOG:Lorg/slf4j/Logger;
     166: ldc           #130                // String {}, Usage Manager memory limit reached {}. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info.
     168: aload_0
     169: invokevirtual #89                 // Method getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     172: invokevirtual #131                // Method org/apache/activemq/command/ActiveMQDestination.getQualifiedName:()Ljava/lang/String;
     175: aload_0
     176: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     179: invokevirtual #132                // Method org/apache/activemq/usage/MemoryUsage.getLimit:()J
     182: invokestatic  #133                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     185: invokeinterface #134,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     190: aload_3
     191: invokevirtual #135                // Method org/apache/activemq/broker/ConnectionContext.isNetworkConnection:()Z
     194: ifne          277
     197: aload_0
     198: getfield      #136                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     201: invokevirtual #137                // Method org/apache/activemq/usage/SystemUsage.isSendFailIfNoSpace:()Z
     204: ifeq          277
     207: new           #138                // class javax/jms/ResourceAllocationException
     210: dup
     211: new           #33                 // class java/lang/StringBuilder
     214: dup
     215: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     218: ldc           #139                // String Usage Manager memory limit (
     220: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: aload_0
     224: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     227: invokevirtual #132                // Method org/apache/activemq/usage/MemoryUsage.getLimit:()J
     230: invokevirtual #140                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     233: ldc           #141                // String ) reached. Rejecting send for producer (
     235: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload_2
     239: invokevirtual #142                // Method org/apache/activemq/command/Message.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     242: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     245: ldc           #144                // String ) to prevent flooding
     247: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: aload_0
     251: invokevirtual #89                 // Method getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     254: invokevirtual #131                // Method org/apache/activemq/command/ActiveMQDestination.getQualifiedName:()Ljava/lang/String;
     257: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     260: ldc           #145                // String .
     262: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: ldc           #146                // String  See http://activemq.apache.org/producer-flow-control.html for more info
     267: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: invokespecial #147                // Method javax/jms/ResourceAllocationException."<init>":(Ljava/lang/String;)V
     276: athrow
     277: aload         4
     279: invokevirtual #108                // Method org/apache/activemq/command/ProducerInfo.getWindowSize:()I
     282: ifgt          292
     285: aload_2
     286: invokevirtual #107                // Method org/apache/activemq/command/Message.isResponseRequired:()Z
     289: ifeq          344
     292: aload_0
     293: getfield      #18                 // Field messagesWaitingForSpace:Ljava/util/LinkedList;
     296: dup
     297: astore        6
     299: monitorenter
     300: aload_0
     301: getfield      #18                 // Field messagesWaitingForSpace:Ljava/util/LinkedList;
     304: new           #148                // class org/apache/activemq/broker/region/Topic$3
     307: dup
     308: aload_0
     309: aload_2
     310: aload_3
     311: aload_1
     312: iload         5
     314: aload         4
     316: invokespecial #149                // Method org/apache/activemq/broker/region/Topic$3."<init>":(Lorg/apache/activemq/broker/region/Topic;Lorg/apache/activemq/command/Message;Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/ProducerBrokerExchange;ZLorg/apache/activemq/command/ProducerInfo;)V
     319: invokevirtual #150                // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     322: pop
     323: aload_0
     324: invokespecial #151                // Method registerCallbackForNotFullNotification:()V
     327: aload_3
     328: iconst_1
     329: invokevirtual #152                // Method org/apache/activemq/broker/ConnectionContext.setDontSendReponse:(Z)V
     332: aload         6
     334: monitorexit
     335: return
     336: astore        7
     338: aload         6
     340: monitorexit
     341: aload         7
     343: athrow
     344: aload_0
     345: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     348: invokevirtual #123                // Method org/apache/activemq/usage/MemoryUsage.isFull:()Z
     351: ifeq          504
     354: aload_3
     355: invokevirtual #153                // Method org/apache/activemq/broker/ConnectionContext.isInTransaction:()Z
     358: ifeq          447
     361: iconst_0
     362: istore        6
     364: aload_0
     365: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     368: ldc2_w        #154                // long 1000l
     371: invokevirtual #156                // Method org/apache/activemq/usage/MemoryUsage.waitForSpace:(J)Z
     374: ifne          444
     377: aload_3
     378: invokevirtual #157                // Method org/apache/activemq/broker/ConnectionContext.getStopping:()Ljava/util/concurrent/atomic/AtomicBoolean;
     381: invokevirtual #158                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     384: ifeq          397
     387: new           #159                // class java/io/IOException
     390: dup
     391: ldc           #160                // String Connection closed, send aborted.
     393: invokespecial #161                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     396: athrow
     397: iload         6
     399: iconst_2
     400: if_icmple     438
     403: aload_3
     404: invokevirtual #153                // Method org/apache/activemq/broker/ConnectionContext.isInTransaction:()Z
     407: ifeq          438
     410: iconst_0
     411: istore        6
     413: aload_3
     414: invokevirtual #162                // Method org/apache/activemq/broker/ConnectionContext.getTransaction:()Lorg/apache/activemq/transaction/Transaction;
     417: invokevirtual #163                // Method org/apache/activemq/transaction/Transaction.size:()I
     420: istore        7
     422: getstatic     #129                // Field LOG:Lorg/slf4j/Logger;
     425: ldc           #164                // String Waiting for space to send transacted message - transaction elements = {} need more space to commit. Message = {}
     427: iload         7
     429: invokestatic  #165                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     432: aload_2
     433: invokeinterface #166,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     438: iinc          6, 1
     441: goto          364
     444: goto          504
     447: aload_0
     448: aload_3
     449: aload_1
     450: aload_0
     451: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     454: new           #33                 // class java/lang/StringBuilder
     457: dup
     458: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     461: ldc           #167                // String Usage Manager Memory Usage limit reached. Stopping producer (
     463: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     466: aload_2
     467: invokevirtual #142                // Method org/apache/activemq/command/Message.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     470: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     473: ldc           #144                // String ) to prevent flooding
     475: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     478: aload_0
     479: invokevirtual #89                 // Method getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     482: invokevirtual #131                // Method org/apache/activemq/command/ActiveMQDestination.getQualifiedName:()Ljava/lang/String;
     485: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     488: ldc           #145                // String .
     490: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     493: ldc           #146                // String  See http://activemq.apache.org/producer-flow-control.html for more info
     495: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     498: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     501: invokevirtual #168                // Method waitForSpace:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/usage/Usage;Ljava/lang/String;)V
     504: aload_2
     505: invokevirtual #110                // Method org/apache/activemq/command/Message.isExpired:()Z
     508: ifeq          533
     511: aload_0
     512: invokevirtual #113                // Method getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
     515: invokevirtual #114                // Method org/apache/activemq/broker/region/DestinationStatistics.getExpired:()Lorg/apache/activemq/management/CountStatisticImpl;
     518: invokevirtual #115                // Method org/apache/activemq/management/CountStatisticImpl.increment:()V
     521: getstatic     #129                // Field LOG:Lorg/slf4j/Logger;
     524: ldc           #169                // String Expired message: {}
     526: aload_2
     527: invokeinterface #170,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     532: return
     533: aload_0
     534: aload_1
     535: aload_2
     536: invokevirtual #171                // Method doMessageSend:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
     539: aload_0
     540: aload_3
     541: aload_2
     542: invokevirtual #172                // Method messageDelivered:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
     545: iload         5
     547: ifeq          579
     550: new           #116                // class org/apache/activemq/command/ProducerAck
     553: dup
     554: aload         4
     556: invokevirtual #117                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     559: aload_2
     560: invokevirtual #118                // Method org/apache/activemq/command/Message.getSize:()I
     563: invokespecial #119                // Method org/apache/activemq/command/ProducerAck."<init>":(Lorg/apache/activemq/command/ProducerId;I)V
     566: astore        6
     568: aload_3
     569: invokevirtual #120                // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     572: aload         6
     574: invokeinterface #121,  2          // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     579: return
    Exception table:
       from    to  target type
         300   335   336   any
         336   341   336   any

  synchronized void doMessageSend(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.io.IOException, java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #103                // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       4: astore_3
       5: aload_2
       6: aload_0
       7: invokevirtual #173                // Method org/apache/activemq/command/Message.setRegionDestination:(Lorg/apache/activemq/command/Message$MessageDestination;)V
      10: aload_2
      11: invokevirtual #174                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      14: aload_0
      15: invokevirtual #175                // Method getDestinationSequenceId:()J
      18: invokevirtual #176                // Method org/apache/activemq/command/MessageId.setBrokerSequenceId:(J)V
      21: aconst_null
      22: astore        4
      24: aload_0
      25: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      28: ifnull        204
      31: aload_2
      32: invokevirtual #177                // Method org/apache/activemq/command/Message.isPersistent:()Z
      35: ifeq          204
      38: aload_0
      39: invokespecial #178                // Method canOptimizeOutPersistence:()Z
      42: ifne          204
      45: aload_0
      46: getfield      #136                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      49: invokevirtual #179                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
      52: aload_0
      53: invokevirtual #180                // Method getStoreUsageHighWaterMark:()I
      56: invokevirtual #181                // Method org/apache/activemq/usage/StoreUsage.isFull:(I)Z
      59: ifeq          187
      62: new           #33                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #182                // String Persistent store is Full,
      71: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #180                // Method getStoreUsageHighWaterMark:()I
      78: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: ldc           #184                // String % of
      83: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #136                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      90: invokevirtual #179                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
      93: invokevirtual #185                // Method org/apache/activemq/usage/StoreUsage.getLimit:()J
      96: invokevirtual #140                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      99: ldc           #186                // String . Stopping producer (
     101: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_2
     105: invokevirtual #142                // Method org/apache/activemq/command/Message.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     108: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: ldc           #144                // String ) to prevent flooding
     113: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_0
     117: invokevirtual #89                 // Method getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     120: invokevirtual #131                // Method org/apache/activemq/command/ActiveMQDestination.getQualifiedName:()Ljava/lang/String;
     123: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #145                // String .
     128: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #146                // String  See http://activemq.apache.org/producer-flow-control.html for more info
     133: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: astore        5
     141: aload_3
     142: invokevirtual #135                // Method org/apache/activemq/broker/ConnectionContext.isNetworkConnection:()Z
     145: ifne          168
     148: aload_0
     149: getfield      #136                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     152: invokevirtual #137                // Method org/apache/activemq/usage/SystemUsage.isSendFailIfNoSpace:()Z
     155: ifeq          168
     158: new           #138                // class javax/jms/ResourceAllocationException
     161: dup
     162: aload         5
     164: invokespecial #147                // Method javax/jms/ResourceAllocationException."<init>":(Ljava/lang/String;)V
     167: athrow
     168: aload_0
     169: aload_3
     170: aload_1
     171: aload_0
     172: getfield      #136                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     175: invokevirtual #179                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
     178: aload_0
     179: invokevirtual #180                // Method getStoreUsageHighWaterMark:()I
     182: aload         5
     184: invokevirtual #187                // Method waitForSpace:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/usage/Usage;ILjava/lang/String;)V
     187: aload_0
     188: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
     191: aload_3
     192: aload_2
     193: aload_0
     194: invokevirtual #188                // Method isOptimizeStorage:()Z
     197: invokeinterface #189,  4          // InterfaceMethod org/apache/activemq/store/TopicMessageStore.asyncAddTopicMessage:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/Message;Z)Lorg/apache/activemq/store/ListenableFuture;
     202: astore        4
     204: aload_2
     205: invokevirtual #190                // Method org/apache/activemq/command/Message.incrementReferenceCount:()I
     208: pop
     209: aload_3
     210: invokevirtual #153                // Method org/apache/activemq/broker/ConnectionContext.isInTransaction:()Z
     213: ifeq          236
     216: aload_3
     217: invokevirtual #162                // Method org/apache/activemq/broker/ConnectionContext.getTransaction:()Lorg/apache/activemq/transaction/Transaction;
     220: new           #191                // class org/apache/activemq/broker/region/Topic$4
     223: dup
     224: aload_0
     225: aload_2
     226: aload_3
     227: invokespecial #192                // Method org/apache/activemq/broker/region/Topic$4."<init>":(Lorg/apache/activemq/broker/region/Topic;Lorg/apache/activemq/command/Message;Lorg/apache/activemq/broker/ConnectionContext;)V
     230: invokevirtual #193                // Method org/apache/activemq/transaction/Transaction.addSynchronization:(Lorg/apache/activemq/transaction/Synchronization;)V
     233: goto          260
     236: aload_0
     237: aload_3
     238: aload_2
     239: invokevirtual #194                // Method dispatch:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/Message;)V
     242: aload_2
     243: invokevirtual #195                // Method org/apache/activemq/command/Message.decrementReferenceCount:()I
     246: pop
     247: goto          260
     250: astore        6
     252: aload_2
     253: invokevirtual #195                // Method org/apache/activemq/command/Message.decrementReferenceCount:()I
     256: pop
     257: aload         6
     259: athrow
     260: aload         4
     262: ifnull        288
     265: aload         4
     267: invokeinterface #196,  1          // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
     272: ifne          288
     275: aload         4
     277: invokeinterface #197,  1          // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
     282: pop
     283: goto          288
     286: astore        5
     288: return
    Exception table:
       from    to  target type
         236   242   250   any
         250   252   250   any
         275   283   286   Class java/util/concurrent/CancellationException

  private boolean canOptimizeOutPersistence();
    Code:
       0: aload_0
       1: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #199                // Method java/util/concurrent/ConcurrentHashMap.size:()I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #200                // String Topic: destination=
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #96                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      16: invokevirtual #37                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      19: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #201                // String , subscriptions=
      24: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      31: invokevirtual #58                 // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
      34: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: areturn

  public void acknowledge(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.command.MessageAck, org.apache.activemq.broker.region.MessageReference) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
       4: ifnull        64
       7: aload         4
       9: invokeinterface #202,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isPersistent:()Z
      14: ifeq          64
      17: aload_2
      18: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
      21: astore        5
      23: aload         5
      25: invokevirtual #63                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getSubscriptionKey:()Lorg/apache/activemq/util/SubscriptionKey;
      28: astore        6
      30: aload_0
      31: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      34: aload_1
      35: aload         6
      37: invokevirtual #77                 // Method org/apache/activemq/util/SubscriptionKey.getClientId:()Ljava/lang/String;
      40: aload         6
      42: invokevirtual #78                 // Method org/apache/activemq/util/SubscriptionKey.getSubscriptionName:()Ljava/lang/String;
      45: aload         4
      47: invokeinterface #203,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
      52: aload_0
      53: aload_3
      54: aload         4
      56: invokevirtual #204                // Method convertToNonRangedAck:(Lorg/apache/activemq/command/MessageAck;Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/command/MessageAck;
      59: invokeinterface #205,  6          // InterfaceMethod org/apache/activemq/store/TopicMessageStore.acknowledge:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/command/MessageId;Lorg/apache/activemq/command/MessageAck;)V
      64: aload_0
      65: aload_1
      66: aload         4
      68: invokevirtual #206                // Method messageConsumed:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
      71: return

  public void gc();
    Code:
       0: return

  public org.apache.activemq.command.Message loadMessage(org.apache.activemq.command.MessageId) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
       4: ifnull        20
       7: aload_0
       8: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      11: aload_1
      12: invokeinterface #207,  2          // InterfaceMethod org/apache/activemq/store/TopicMessageStore.getMessage:(Lorg/apache/activemq/command/MessageId;)Lorg/apache/activemq/command/Message;
      17: goto          21
      20: aconst_null
      21: areturn

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
       4: invokeinterface #208,  1          // InterfaceMethod org/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy.start:()V
       9: aload_0
      10: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      13: ifnull        23
      16: aload_0
      17: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      20: invokevirtual #209                // Method org/apache/activemq/usage/MemoryUsage.start:()V
      23: aload_0
      24: invokevirtual #210                // Method getExpireMessagesPeriod:()J
      27: lconst_0
      28: lcmp
      29: ifle          47
      32: aload_0
      33: getfield      #211                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      36: aload_0
      37: getfield      #24                 // Field expireMessagesTask:Ljava/lang/Runnable;
      40: aload_0
      41: invokevirtual #210                // Method getExpireMessagesPeriod:()J
      44: invokevirtual #212                // Method org/apache/activemq/thread/Scheduler.executePeriodically:(Ljava/lang/Runnable;J)V
      47: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
       4: ifnull        16
       7: aload_0
       8: getfield      #2                  // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      11: invokeinterface #213,  1          // InterfaceMethod org/apache/activemq/thread/TaskRunner.shutdown:()V
      16: aload_0
      17: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
      20: invokeinterface #214,  1          // InterfaceMethod org/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy.stop:()V
      25: aload_0
      26: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      29: ifnull        39
      32: aload_0
      33: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      36: invokevirtual #215                // Method org/apache/activemq/usage/MemoryUsage.stop:()V
      39: aload_0
      40: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      43: ifnull        55
      46: aload_0
      47: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      50: invokeinterface #216,  1          // InterfaceMethod org/apache/activemq/store/TopicMessageStore.stop:()V
      55: aload_0
      56: getfield      #211                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      59: aload_0
      60: getfield      #24                 // Field expireMessagesTask:Ljava/lang/Runnable;
      63: invokevirtual #217                // Method org/apache/activemq/thread/Scheduler.cancel:(Ljava/lang/Runnable;)V
      66: return

  public org.apache.activemq.command.Message[] browse();
    Code:
       0: new           #42                 // class java/util/ArrayList
       3: dup
       4: invokespecial #218                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_0
      11: invokevirtual #219                // Method getMaxBrowsePageSize:()I
      14: invokespecial #1                  // Method doBrowse:(Ljava/util/List;I)V
      17: aload_1
      18: aload_1
      19: invokeinterface #220,  1          // InterfaceMethod java/util/List.size:()I
      24: anewarray     #221                // class org/apache/activemq/command/Message
      27: invokeinterface #222,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      32: checkcast     #223                // class "[Lorg/apache/activemq/command/Message;"
      35: areturn

  private void doBrowse(java.util.List<org.apache.activemq.command.Message>, int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
       4: ifnull        190
       7: new           #42                 // class java/util/ArrayList
      10: dup
      11: invokespecial #218                // Method java/util/ArrayList."<init>":()V
      14: astore_3
      15: aload_0
      16: getfield      #25                 // Field topicStore:Lorg/apache/activemq/store/TopicMessageStore;
      19: new           #224                // class org/apache/activemq/broker/region/Topic$5
      22: dup
      23: aload_0
      24: aload_3
      25: aload_1
      26: iload_2
      27: invokespecial #225                // Method org/apache/activemq/broker/region/Topic$5."<init>":(Lorg/apache/activemq/broker/region/Topic;Ljava/util/List;Ljava/util/List;I)V
      30: invokeinterface #226,  2          // InterfaceMethod org/apache/activemq/store/TopicMessageStore.recover:(Lorg/apache/activemq/store/MessageRecoveryListener;)V
      35: aload_0
      36: invokevirtual #227                // Method createConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
      39: astore        4
      41: aload_3
      42: invokeinterface #228,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore        5
      49: aload         5
      51: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          131
      59: aload         5
      61: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #221                // class org/apache/activemq/command/Message
      69: astore        6
      71: aload_0
      72: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
      75: invokevirtual #229                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      78: invokeinterface #230,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      83: astore        7
      85: aload         7
      87: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          128
      95: aload         7
      97: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
     105: astore        8
     107: aload         8
     109: invokevirtual #57                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.isActive:()Z
     112: ifne          125
     115: aload_0
     116: aload         4
     118: aload         8
     120: aload         6
     122: invokevirtual #231                // Method messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
     125: goto          85
     128: goto          49
     131: aload_0
     132: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
     135: aload_0
     136: invokevirtual #89                 // Method getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     139: invokeinterface #232,  2          // InterfaceMethod org/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy.browse:(Lorg/apache/activemq/command/ActiveMQDestination;)[Lorg/apache/activemq/command/Message;
     144: astore        5
     146: aload         5
     148: ifnull        190
     151: iconst_0
     152: istore        6
     154: iload         6
     156: aload         5
     158: arraylength
     159: if_icmpge     190
     162: aload_1
     163: invokeinterface #220,  1          // InterfaceMethod java/util/List.size:()I
     168: iload_2
     169: if_icmpge     190
     172: aload_1
     173: aload         5
     175: iload         6
     177: aaload
     178: invokeinterface #233,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     183: pop
     184: iinc          6, 1
     187: goto          154
     190: goto          212
     193: astore_3
     194: getstatic     #129                // Field LOG:Lorg/slf4j/Logger;
     197: ldc           #235                // String Failed to browse Topic: {}
     199: aload_0
     200: invokevirtual #89                 // Method getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     203: invokevirtual #37                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
     206: aload_3
     207: invokeinterface #166,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     212: return
    Exception table:
       from    to  target type
           0   190   193   Class java/lang/Throwable

  public boolean iterate();
    Code:
       0: aload_0
       1: getfield      #18                 // Field messagesWaitingForSpace:Ljava/util/LinkedList;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      11: invokevirtual #123                // Method org/apache/activemq/usage/MemoryUsage.isFull:()Z
      14: ifne          47
      17: aload_0
      18: getfield      #18                 // Field messagesWaitingForSpace:Ljava/util/LinkedList;
      21: invokevirtual #236                // Method java/util/LinkedList.isEmpty:()Z
      24: ifne          47
      27: aload_0
      28: getfield      #18                 // Field messagesWaitingForSpace:Ljava/util/LinkedList;
      31: invokevirtual #237                // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
      34: checkcast     #238                // class java/lang/Runnable
      37: astore_2
      38: aload_2
      39: invokeinterface #239,  1          // InterfaceMethod java/lang/Runnable.run:()V
      44: goto          7
      47: aload_0
      48: getfield      #18                 // Field messagesWaitingForSpace:Ljava/util/LinkedList;
      51: invokevirtual #236                // Method java/util/LinkedList.isEmpty:()Z
      54: ifne          61
      57: aload_0
      58: invokespecial #151                // Method registerCallbackForNotFullNotification:()V
      61: aload_1
      62: monitorexit
      63: goto          71
      66: astore_3
      67: aload_1
      68: monitorexit
      69: aload_3
      70: athrow
      71: iconst_0
      72: ireturn
    Exception table:
       from    to  target type
           7    63    66   any
          66    69    66   any

  private void registerCallbackForNotFullNotification();
    Code:
       0: aload_0
       1: getfield      #122                // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
       4: aload_0
       5: getfield      #21                 // Field sendMessagesWaitingForSpaceTask:Ljava/lang/Runnable;
       8: invokevirtual #240                // Method org/apache/activemq/usage/MemoryUsage.notifyCallbackWhenNotFull:(Ljava/lang/Runnable;)Z
      11: ifne          23
      14: aload_0
      15: getfield      #21                 // Field sendMessagesWaitingForSpaceTask:Ljava/lang/Runnable;
      18: invokeinterface #239,  1          // InterfaceMethod java/lang/Runnable.run:()V
      23: return

  public org.apache.activemq.broker.region.policy.DispatchPolicy getDispatchPolicy();
    Code:
       0: aload_0
       1: getfield      #12                 // Field dispatchPolicy:Lorg/apache/activemq/broker/region/policy/DispatchPolicy;
       4: areturn

  public void setDispatchPolicy(org.apache.activemq.broker.region.policy.DispatchPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field dispatchPolicy:Lorg/apache/activemq/broker/region/policy/DispatchPolicy;
       5: return

  public org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy getSubscriptionRecoveryPolicy();
    Code:
       0: aload_0
       1: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
       4: areturn

  public void setSubscriptionRecoveryPolicy(org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy);
    Code:
       0: aload_0
       1: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
       4: ifnull        33
       7: aload_0
       8: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
      11: instanceof    #31                 // class org/apache/activemq/broker/region/policy/RetainedMessageSubscriptionRecoveryPolicy
      14: ifeq          33
      17: aload_0
      18: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
      21: checkcast     #31                 // class org/apache/activemq/broker/region/policy/RetainedMessageSubscriptionRecoveryPolicy
      24: astore_2
      25: aload_2
      26: aload_1
      27: invokevirtual #241                // Method org/apache/activemq/broker/region/policy/RetainedMessageSubscriptionRecoveryPolicy.setWrapped:(Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;)V
      30: goto          38
      33: aload_0
      34: aload_1
      35: putfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
      38: return

  public final void wakeup();
    Code:
       0: return

  protected void dispatch(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #73                 // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
       4: invokevirtual #242                // Method org/apache/activemq/broker/region/DestinationStatistics.getEnqueues:()Lorg/apache/activemq/management/CountStatisticImpl;
       7: invokevirtual #115                // Method org/apache/activemq/management/CountStatisticImpl.increment:()V
      10: aload_0
      11: getfield      #73                 // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
      14: invokevirtual #243                // Method org/apache/activemq/broker/region/DestinationStatistics.getMessageSize:()Lorg/apache/activemq/management/SizeStatisticImpl;
      17: aload_2
      18: invokevirtual #118                // Method org/apache/activemq/command/Message.getSize:()I
      21: i2l
      22: invokevirtual #244                // Method org/apache/activemq/management/SizeStatisticImpl.addSize:(J)V
      25: aconst_null
      26: astore_3
      27: aload_0
      28: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      34: invokevirtual #246                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      37: aload_0
      38: getfield      #29                 // Field subscriptionRecoveryPolicy:Lorg/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy;
      41: aload_1
      42: aload_2
      43: invokeinterface #247,  3          // InterfaceMethod org/apache/activemq/broker/region/policy/SubscriptionRecoveryPolicy.add:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)Z
      48: ifne          70
      51: aload_0
      52: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      55: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      58: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      61: aload_3
      62: ifnull        69
      65: aload_3
      66: invokevirtual #249                // Method org/apache/activemq/filter/MessageEvaluationContext.clear:()V
      69: return
      70: aload_0
      71: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      74: dup
      75: astore        4
      77: monitorenter
      78: aload_0
      79: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
      82: invokevirtual #250                // Method java/util/concurrent/CopyOnWriteArrayList.isEmpty:()Z
      85: ifeq          116
      88: aload_0
      89: aload_1
      90: aload_2
      91: invokevirtual #251                // Method onMessageWithNoConsumers:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/Message;)V
      94: aload         4
      96: monitorexit
      97: aload_0
      98: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     101: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     104: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     107: aload_3
     108: ifnull        115
     111: aload_3
     112: invokevirtual #249                // Method org/apache/activemq/filter/MessageEvaluationContext.clear:()V
     115: return
     116: aload         4
     118: monitorexit
     119: goto          130
     122: astore        5
     124: aload         4
     126: monitorexit
     127: aload         5
     129: athrow
     130: aload_1
     131: invokevirtual #252                // Method org/apache/activemq/broker/ConnectionContext.getMessageEvaluationContext:()Lorg/apache/activemq/filter/MessageEvaluationContext;
     134: astore_3
     135: aload_3
     136: aload_0
     137: getfield      #96                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
     140: invokevirtual #97                 // Method org/apache/activemq/filter/MessageEvaluationContext.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     143: aload_3
     144: aload_2
     145: invokevirtual #253                // Method org/apache/activemq/filter/MessageEvaluationContext.setMessageReference:(Lorg/apache/activemq/broker/region/MessageReference;)V
     148: aload_0
     149: getfield      #12                 // Field dispatchPolicy:Lorg/apache/activemq/broker/region/policy/DispatchPolicy;
     152: aload_2
     153: aload_3
     154: aload_0
     155: getfield      #6                  // Field consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
     158: invokeinterface #254,  4          // InterfaceMethod org/apache/activemq/broker/region/policy/DispatchPolicy.dispatch:(Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/filter/MessageEvaluationContext;Ljava/util/List;)Z
     163: ifne          172
     166: aload_0
     167: aload_1
     168: aload_2
     169: invokevirtual #251                // Method onMessageWithNoConsumers:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/Message;)V
     172: aload_0
     173: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     176: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     179: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     182: aload_3
     183: ifnull        216
     186: aload_3
     187: invokevirtual #249                // Method org/apache/activemq/filter/MessageEvaluationContext.clear:()V
     190: goto          216
     193: astore        6
     195: aload_0
     196: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     199: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     202: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     205: aload_3
     206: ifnull        213
     209: aload_3
     210: invokevirtual #249                // Method org/apache/activemq/filter/MessageEvaluationContext.clear:()V
     213: aload         6
     215: athrow
     216: return
    Exception table:
       from    to  target type
          78    97   122   any
         116   119   122   any
         122   127   122   any
          37    51   193   any
          70    97   193   any
         116   172   193   any
         193   195   193   any

  public void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #111                // Field broker:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_3
       6: aload_2
       7: invokeinterface #112,  4          // InterfaceMethod org/apache/activemq/broker/Broker.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;)V
      12: aload_0
      13: getfield      #73                 // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
      16: invokevirtual #114                // Method org/apache/activemq/broker/region/DestinationStatistics.getExpired:()Lorg/apache/activemq/management/CountStatisticImpl;
      19: invokevirtual #115                // Method org/apache/activemq/management/CountStatisticImpl.increment:()V
      22: new           #255                // class org/apache/activemq/command/MessageAck
      25: dup
      26: invokespecial #256                // Method org/apache/activemq/command/MessageAck."<init>":()V
      29: astore        4
      31: aload         4
      33: iconst_2
      34: invokevirtual #257                // Method org/apache/activemq/command/MessageAck.setAckType:(B)V
      37: aload         4
      39: aload_0
      40: getfield      #96                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      43: invokevirtual #258                // Method org/apache/activemq/command/MessageAck.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      46: aload         4
      48: aload_3
      49: invokeinterface #203,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
      54: invokevirtual #259                // Method org/apache/activemq/command/MessageAck.setMessageID:(Lorg/apache/activemq/command/MessageId;)V
      57: aload_2
      58: instanceof    #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
      61: ifeq          72
      64: aload_2
      65: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
      68: aload_3
      69: invokevirtual #260                // Method org/apache/activemq/broker/region/DurableTopicSubscription.removePending:(Lorg/apache/activemq/broker/region/MessageReference;)V
      72: aload_0
      73: aload_1
      74: aload_2
      75: aload         4
      77: aload_3
      78: invokevirtual #261                // Method acknowledge:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/command/MessageAck;Lorg/apache/activemq/broker/region/MessageReference;)V
      81: goto          99
      84: astore        5
      86: getstatic     #129                // Field LOG:Lorg/slf4j/Logger;
      89: ldc_w         #263                // String Failed to remove expired Message from the store
      92: aload         5
      94: invokeinterface #264,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      99: return
    Exception table:
       from    to  target type
          57    81    84   Class java/lang/Exception

  protected org.slf4j.Logger getLog();
    Code:
       0: getstatic     #129                // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  protected boolean isOptimizeStorage();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #265                // Method isDoOptimzeMessageStorage:()Z
       6: ifeq          108
       9: aload_0
      10: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
      13: invokevirtual #266                // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      16: ifne          108
      19: iconst_1
      20: istore_1
      21: aload_0
      22: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
      25: invokevirtual #229                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      28: invokeinterface #230,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          108
      43: aload_2
      44: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
      52: astore_3
      53: aload_3
      54: invokevirtual #57                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.isActive:()Z
      57: ifne          65
      60: iconst_0
      61: istore_1
      62: goto          108
      65: aload_3
      66: invokevirtual #267                // Method org/apache/activemq/broker/region/DurableTopicSubscription.getPrefetchSize:()I
      69: ifne          77
      72: iconst_0
      73: istore_1
      74: goto          108
      77: aload_3
      78: invokevirtual #268                // Method org/apache/activemq/broker/region/DurableTopicSubscription.isSlowConsumer:()Z
      81: ifeq          89
      84: iconst_0
      85: istore_1
      86: goto          108
      89: aload_3
      90: invokevirtual #269                // Method org/apache/activemq/broker/region/DurableTopicSubscription.getInFlightUsage:()I
      93: aload_0
      94: invokevirtual #270                // Method getOptimizeMessageStoreInFlightLimit:()I
      97: if_icmple     105
     100: iconst_0
     101: istore_1
     102: goto          108
     105: goto          34
     108: iload_1
     109: ireturn

  public void clearPendingMessages();
    Code:
       0: aload_0
       1: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #246                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
      14: invokevirtual #229                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      17: invokeinterface #230,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          50
      32: aload_1
      33: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
      41: astore_2
      42: aload_0
      43: aload_2
      44: invokespecial #271                // Method clearPendingAndDispatch:(Lorg/apache/activemq/broker/region/DurableTopicSubscription;)V
      47: goto          23
      50: aload_0
      51: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      54: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      57: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      60: goto          76
      63: astore_3
      64: aload_0
      65: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      68: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      71: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      74: aload_3
      75: athrow
      76: return
    Exception table:
       from    to  target type
          10    50    63   any
          63    64    63   any

  private void clearPendingAndDispatch(org.apache.activemq.broker.region.DurableTopicSubscription);
    Code:
       0: aload_1
       1: getfield      #272                // Field org/apache/activemq/broker/region/DurableTopicSubscription.pendingLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_1
       8: getfield      #273                // Field org/apache/activemq/broker/region/DurableTopicSubscription.pending:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: invokeinterface #274,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.clear:()V
      16: aload_1
      17: invokevirtual #275                // Method org/apache/activemq/broker/region/DurableTopicSubscription.dispatchPending:()V
      20: goto          58
      23: astore_3
      24: getstatic     #129                // Field LOG:Lorg/slf4j/Logger;
      27: ldc_w         #276                // String After clear of pending, failed to dispatch to: {}, for: {}, pending: {}
      30: iconst_3
      31: anewarray     #277                // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: dup
      39: iconst_1
      40: aload_0
      41: getfield      #96                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      44: aastore
      45: dup
      46: iconst_2
      47: aload_1
      48: getfield      #273                // Field org/apache/activemq/broker/region/DurableTopicSubscription.pending:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      51: aastore
      52: aload_3
      53: invokeinterface #166,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      58: aload_2
      59: monitorexit
      60: goto          70
      63: astore        4
      65: aload_2
      66: monitorexit
      67: aload         4
      69: athrow
      70: return
    Exception table:
       from    to  target type
          16    20    23   Class java/io/IOException
           7    60    63   any
          63    67    63   any

  private void rollback(org.apache.activemq.command.MessageId);
    Code:
       0: aload_0
       1: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #246                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
      14: invokevirtual #229                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      17: invokeinterface #230,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          55
      32: aload_2
      33: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #56                 // class org/apache/activemq/broker/region/DurableTopicSubscription
      41: astore_3
      42: aload_3
      43: invokevirtual #278                // Method org/apache/activemq/broker/region/DurableTopicSubscription.getPending:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      46: aload_1
      47: invokeinterface #279,  2          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.rollback:(Lorg/apache/activemq/command/MessageId;)V
      52: goto          23
      55: aload_0
      56: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      59: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      62: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      65: goto          83
      68: astore        4
      70: aload_0
      71: getfield      #9                  // Field dispatchLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      74: invokevirtual #245                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      77: invokevirtual #248                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      80: aload         4
      82: athrow
      83: return
    Exception table:
       from    to  target type
          10    55    68   any
          68    70    68   any

  public java.util.Map<org.apache.activemq.util.SubscriptionKey, org.apache.activemq.broker.region.DurableTopicSubscription> getDurableTopicSubs();
    Code:
       0: aload_0
       1: getfield      #15                 // Field durableSubscribers:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  static org.apache.activemq.thread.TaskRunner access$000(org.apache.activemq.broker.region.Topic);
    Code:
       0: aload_0
       1: getfield      #2                  // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
       4: areturn

  static void access$100(org.apache.activemq.broker.region.Topic, java.util.List, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method doBrowse:(Ljava/util/List;I)V
       6: return

  static {};
    Code:
       0: ldc_w         #280                // class org/apache/activemq/broker/region/Topic
       3: invokestatic  #281                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #129                // Field LOG:Lorg/slf4j/Logger;
       9: return
}
