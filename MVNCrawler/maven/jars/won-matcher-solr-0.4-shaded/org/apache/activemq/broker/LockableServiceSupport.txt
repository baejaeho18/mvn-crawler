Compiled from "LockableServiceSupport.java"
public abstract class org.apache.activemq.broker.LockableServiceSupport extends org.apache.activemq.util.ServiceSupport implements org.apache.activemq.broker.Lockable,org.apache.activemq.broker.BrokerServiceAware {
  private static final org.slf4j.Logger LOG;

  boolean useLock;

  org.apache.activemq.broker.Locker locker;

  long lockKeepAlivePeriod;

  private java.util.concurrent.ScheduledFuture<?> keepAliveTicket;

  private java.util.concurrent.ScheduledThreadPoolExecutor clockDaemon;

  protected org.apache.activemq.broker.BrokerService brokerService;

  public org.apache.activemq.broker.LockableServiceSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/util/ServiceSupport."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field useLock:Z
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field lockKeepAlivePeriod:J
      14: return

  public abstract void init() throws java.lang.Exception;

  public void setUseLock(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field useLock:Z
       5: return

  public boolean isUseLock();
    Code:
       0: aload_0
       1: getfield      #2                  // Field useLock:Z
       4: ireturn

  public void setLocker(org.apache.activemq.broker.Locker) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field locker:Lorg/apache/activemq/broker/Locker;
       5: aload_1
       6: aload_0
       7: invokeinterface #5,  2            // InterfaceMethod org/apache/activemq/broker/Locker.setLockable:(Lorg/apache/activemq/broker/LockableServiceSupport;)V
      12: aload_0
      13: instanceof    #6                  // class org/apache/activemq/store/PersistenceAdapter
      16: ifeq          32
      19: aload_0
      20: getfield      #4                  // Field locker:Lorg/apache/activemq/broker/Locker;
      23: aload_0
      24: checkcast     #6                  // class org/apache/activemq/store/PersistenceAdapter
      27: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/broker/Locker.configure:(Lorg/apache/activemq/store/PersistenceAdapter;)V
      32: return

  public org.apache.activemq.broker.Locker getLocker() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field locker:Lorg/apache/activemq/broker/Locker;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #8                  // Method createDefaultLocker:()Lorg/apache/activemq/broker/Locker;
      12: invokevirtual #9                  // Method setLocker:(Lorg/apache/activemq/broker/Locker;)V
      15: aload_0
      16: getfield      #4                  // Field locker:Lorg/apache/activemq/broker/Locker;
      19: areturn

  public void setLockKeepAlivePeriod(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #3                  // Field lockKeepAlivePeriod:J
       5: return

  public long getLockKeepAlivePeriod();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lockKeepAlivePeriod:J
       4: lreturn

  public void preStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method init:()V
       4: aload_0
       5: getfield      #2                  // Field useLock:Z
       8: ifeq          79
      11: aload_0
      12: invokevirtual #11                 // Method getLocker:()Lorg/apache/activemq/broker/Locker;
      15: ifnonnull     31
      18: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      21: ldc           #13                 // String No locker configured
      23: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      28: goto          79
      31: aload_0
      32: invokevirtual #11                 // Method getLocker:()Lorg/apache/activemq/broker/Locker;
      35: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/broker/Locker.start:()V
      40: aload_0
      41: getfield      #3                  // Field lockKeepAlivePeriod:J
      44: lconst_0
      45: lcmp
      46: ifle          79
      49: aload_0
      50: aload_0
      51: invokevirtual #16                 // Method getScheduledThreadPoolExecutor:()Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      54: new           #17                 // class org/apache/activemq/broker/LockableServiceSupport$1
      57: dup
      58: aload_0
      59: invokespecial #18                 // Method org/apache/activemq/broker/LockableServiceSupport$1."<init>":(Lorg/apache/activemq/broker/LockableServiceSupport;)V
      62: aload_0
      63: getfield      #3                  // Field lockKeepAlivePeriod:J
      66: aload_0
      67: getfield      #3                  // Field lockKeepAlivePeriod:J
      70: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      73: invokevirtual #20                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      76: putfield      #21                 // Field keepAliveTicket:Ljava/util/concurrent/ScheduledFuture;
      79: return

  public void postStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field useLock:Z
       4: ifeq          53
       7: aload_0
       8: getfield      #21                 // Field keepAliveTicket:Ljava/util/concurrent/ScheduledFuture;
      11: ifnull        30
      14: aload_0
      15: getfield      #21                 // Field keepAliveTicket:Ljava/util/concurrent/ScheduledFuture;
      18: iconst_0
      19: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      24: pop
      25: aload_0
      26: aconst_null
      27: putfield      #21                 // Field keepAliveTicket:Ljava/util/concurrent/ScheduledFuture;
      30: aload_0
      31: getfield      #4                  // Field locker:Lorg/apache/activemq/broker/Locker;
      34: ifnull        46
      37: aload_0
      38: invokevirtual #11                 // Method getLocker:()Lorg/apache/activemq/broker/Locker;
      41: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/broker/Locker.stop:()V
      46: aload_0
      47: getfield      #24                 // Field clockDaemon:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      50: invokestatic  #25                 // Method org/apache/activemq/util/ThreadPoolUtils.shutdown:(Ljava/util/concurrent/ExecutorService;)V
      53: return

  protected void keepLockAlive();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #11                 // Method getLocker:()Lorg/apache/activemq/broker/Locker;
       6: astore_2
       7: aload_2
       8: ifnull        22
      11: aload_2
      12: invokeinterface #26,  1           // InterfaceMethod org/apache/activemq/broker/Locker.keepAlive:()Z
      17: ifne          22
      20: iconst_1
      21: istore_1
      22: goto          52
      25: astore_2
      26: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #28                 // String locker keepAlive resulted in
      31: aload_2
      32: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: goto          52
      40: astore_2
      41: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      44: ldc           #28                 // String locker keepAlive resulted in
      46: aload_2
      47: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: iload_1
      53: ifeq          60
      56: aload_0
      57: invokevirtual #31                 // Method stopBroker:()V
      60: return
    Exception table:
       from    to  target type
           2    22    25   Class org/apache/activemq/broker/SuppressReplyException
           2    22    40   Class java/io/IOException

  protected void stopBroker();
    Code:
       0: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #32                 // String {}, no longer able to keep the exclusive lock so giving up being a master
       5: aload_0
       6: getfield      #33                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       9: invokevirtual #34                 // Method org/apache/activemq/broker/BrokerService.getBrokerName:()Ljava/lang/String;
      12: invokeinterface #35,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #33                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      21: invokevirtual #36                 // Method org/apache/activemq/broker/BrokerService.isRestartAllowed:()Z
      24: ifeq          34
      27: aload_0
      28: getfield      #33                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      31: invokevirtual #37                 // Method org/apache/activemq/broker/BrokerService.requestRestart:()V
      34: aload_0
      35: getfield      #33                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      38: invokevirtual #38                 // Method org/apache/activemq/broker/BrokerService.stop:()V
      41: goto          55
      44: astore_1
      45: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      48: ldc           #40                 // String Failure occurred while stopping broker
      50: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      55: return
    Exception table:
       from    to  target type
          17    41    44   Class java/lang/Exception

  public java.util.concurrent.ScheduledThreadPoolExecutor getScheduledThreadPoolExecutor();
    Code:
       0: aload_0
       1: getfield      #24                 // Field clockDaemon:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: ifnonnull     27
       7: aload_0
       8: new           #41                 // class java/util/concurrent/ScheduledThreadPoolExecutor
      11: dup
      12: iconst_5
      13: new           #42                 // class org/apache/activemq/broker/LockableServiceSupport$2
      16: dup
      17: aload_0
      18: invokespecial #43                 // Method org/apache/activemq/broker/LockableServiceSupport$2."<init>":(Lorg/apache/activemq/broker/LockableServiceSupport;)V
      21: invokespecial #44                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      24: putfield      #24                 // Field clockDaemon:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      27: aload_0
      28: getfield      #24                 // Field clockDaemon:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      31: areturn

  public void setBrokerService(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       5: return

  public org.apache.activemq.broker.BrokerService getBrokerService();
    Code:
       0: aload_0
       1: getfield      #33                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: areturn

  static {};
    Code:
       0: ldc_w         #45                 // class org/apache/activemq/broker/LockableServiceSupport
       3: invokestatic  #46                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
