Compiled from "DestinationView.java"
public class org.apache.activemq.broker.jmx.DestinationView implements org.apache.activemq.broker.jmx.DestinationViewMBean {
  private static final org.slf4j.Logger LOG;

  protected final org.apache.activemq.broker.region.Destination destination;

  protected final org.apache.activemq.broker.jmx.ManagedRegionBroker broker;

  public org.apache.activemq.broker.jmx.DestinationView(org.apache.activemq.broker.jmx.ManagedRegionBroker, org.apache.activemq.broker.region.Destination);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      14: return

  public void gc();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.gc:()V
       9: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getName:()Ljava/lang/String;
       9: areturn

  public void resetStatistics();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #7                  // Method org/apache/activemq/broker/region/DestinationStatistics.reset:()V
      12: return

  public long getEnqueueCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #8                  // Method org/apache/activemq/broker/region/DestinationStatistics.getEnqueues:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getDequeueCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #10                 // Method org/apache/activemq/broker/region/DestinationStatistics.getDequeues:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getForwardCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #11                 // Method org/apache/activemq/broker/region/DestinationStatistics.getForwards:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getDispatchCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #12                 // Method org/apache/activemq/broker/region/DestinationStatistics.getDispatched:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getInFlightCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #13                 // Method org/apache/activemq/broker/region/DestinationStatistics.getInflight:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getExpiredCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #14                 // Method org/apache/activemq/broker/region/DestinationStatistics.getExpired:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getConsumerCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #15                 // Method org/apache/activemq/broker/region/DestinationStatistics.getConsumers:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getQueueSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #16                 // Method org/apache/activemq/broker/region/DestinationStatistics.getMessages:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public long getMessagesCached();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #17                 // Method org/apache/activemq/broker/region/DestinationStatistics.getMessagesCached:()Lorg/apache/activemq/management/PollCountStatisticImpl;
      12: invokevirtual #18                 // Method org/apache/activemq/management/PollCountStatisticImpl.getCount:()J
      15: lreturn

  public int getMemoryPercentUsage();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: invokevirtual #20                 // Method org/apache/activemq/usage/MemoryUsage.getPercentUsage:()I
      12: ireturn

  public long getMemoryUsageByteCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: invokevirtual #21                 // Method org/apache/activemq/usage/MemoryUsage.getUsage:()J
      12: lreturn

  public long getMemoryLimit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: invokevirtual #22                 // Method org/apache/activemq/usage/MemoryUsage.getLimit:()J
      12: lreturn

  public void setMemoryLimit(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: lload_1
      10: invokevirtual #23                 // Method org/apache/activemq/usage/MemoryUsage.setLimit:(J)V
      13: return

  public double getAverageEnqueueTime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #24                 // Method org/apache/activemq/broker/region/DestinationStatistics.getProcessTime:()Lorg/apache/activemq/management/TimeStatisticImpl;
      12: invokevirtual #25                 // Method org/apache/activemq/management/TimeStatisticImpl.getAverageTime:()D
      15: dreturn

  public long getMaxEnqueueTime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #24                 // Method org/apache/activemq/broker/region/DestinationStatistics.getProcessTime:()Lorg/apache/activemq/management/TimeStatisticImpl;
      12: invokevirtual #26                 // Method org/apache/activemq/management/TimeStatisticImpl.getMaxTime:()J
      15: lreturn

  public long getMinEnqueueTime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #24                 // Method org/apache/activemq/broker/region/DestinationStatistics.getProcessTime:()Lorg/apache/activemq/management/TimeStatisticImpl;
      12: invokevirtual #27                 // Method org/apache/activemq/management/TimeStatisticImpl.getMinTime:()J
      15: lreturn

  public double getAverageMessageSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #28                 // Method org/apache/activemq/broker/region/DestinationStatistics.getMessageSize:()Lorg/apache/activemq/management/SizeStatisticImpl;
      12: invokevirtual #29                 // Method org/apache/activemq/management/SizeStatisticImpl.getAverageSize:()D
      15: dreturn

  public long getMaxMessageSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #28                 // Method org/apache/activemq/broker/region/DestinationStatistics.getMessageSize:()Lorg/apache/activemq/management/SizeStatisticImpl;
      12: invokevirtual #30                 // Method org/apache/activemq/management/SizeStatisticImpl.getMaxSize:()J
      15: lreturn

  public long getMinMessageSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #28                 // Method org/apache/activemq/broker/region/DestinationStatistics.getMessageSize:()Lorg/apache/activemq/management/SizeStatisticImpl;
      12: invokevirtual #31                 // Method org/apache/activemq/management/SizeStatisticImpl.getMinSize:()J
      15: lreturn

  public boolean isPrioritizedMessages();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isPrioritizedMessages:()Z
       9: ireturn

  public javax.management.openmbean.CompositeData[] browse() throws javax.management.openmbean.OpenDataException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #33                 // Method browse:(Ljava/lang/String;)[Ljavax/management/openmbean/CompositeData;
       5: areturn
       6: astore_1
       7: new           #35                 // class java/lang/RuntimeException
      10: dup
      11: aload_1
      12: invokespecial #36                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      15: athrow
    Exception table:
       from    to  target type
           0     5     6   Class javax/jms/InvalidSelectorException

  public javax.management.openmbean.CompositeData[] browse(java.lang.String) throws javax.management.openmbean.OpenDataException, javax.jms.InvalidSelectorException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.browse:()[Lorg/apache/activemq/command/Message;
       9: astore_2
      10: new           #38                 // class java/util/ArrayList
      13: dup
      14: invokespecial #39                 // Method java/util/ArrayList."<init>":()V
      17: astore_3
      18: new           #40                 // class org/apache/activemq/filter/MessageEvaluationContext
      21: dup
      22: invokespecial #41                 // Method org/apache/activemq/filter/MessageEvaluationContext."<init>":()V
      25: astore        4
      27: aload         4
      29: aload_0
      30: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      33: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      38: invokevirtual #43                 // Method org/apache/activemq/filter/MessageEvaluationContext.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      41: aload_1
      42: ifnonnull     49
      45: aconst_null
      46: goto          53
      49: aload_1
      50: invokestatic  #44                 // Method org/apache/activemq/selector/SelectorParser.parse:(Ljava/lang/String;)Lorg/apache/activemq/filter/BooleanExpression;
      53: astore        5
      55: iconst_0
      56: istore        6
      58: iload         6
      60: aload_2
      61: arraylength
      62: if_icmpge     154
      65: aload         5
      67: ifnonnull     85
      70: aload_3
      71: aload_2
      72: iload         6
      74: aaload
      75: invokestatic  #45                 // Method org/apache/activemq/broker/jmx/OpenTypeSupport.convert:(Ljava/lang/Object;)Ljavax/management/openmbean/CompositeData;
      78: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          118
      85: aload         4
      87: aload_2
      88: iload         6
      90: aaload
      91: invokevirtual #47                 // Method org/apache/activemq/filter/MessageEvaluationContext.setMessageReference:(Lorg/apache/activemq/broker/region/MessageReference;)V
      94: aload         5
      96: aload         4
      98: invokeinterface #48,  2           // InterfaceMethod org/apache/activemq/filter/BooleanExpression.matches:(Lorg/apache/activemq/filter/MessageEvaluationContext;)Z
     103: ifeq          118
     106: aload_3
     107: aload_2
     108: iload         6
     110: aaload
     111: invokestatic  #45                 // Method org/apache/activemq/broker/jmx/OpenTypeSupport.convert:(Ljava/lang/Object;)Ljavax/management/openmbean/CompositeData;
     114: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     117: pop
     118: goto          148
     121: astore        7
     123: getstatic     #50                 // Field java/lang/System.out:Ljava/io/PrintStream;
     126: aload         7
     128: invokevirtual #51                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
     131: aload         7
     133: invokevirtual #52                 // Method java/lang/Throwable.printStackTrace:()V
     136: getstatic     #53                 // Field LOG:Lorg/slf4j/Logger;
     139: ldc           #54                 // String exception browsing destination
     141: aload         7
     143: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     148: iinc          6, 1
     151: goto          58
     154: aload_3
     155: invokevirtual #56                 // Method java/util/ArrayList.size:()I
     158: anewarray     #57                 // class javax/management/openmbean/CompositeData
     161: astore        6
     163: aload_3
     164: aload         6
     166: invokevirtual #58                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     169: pop
     170: aload         6
     172: areturn
    Exception table:
       from    to  target type
          65   118   121   Class java/lang/Throwable

  public java.util.List<java.lang.Object> browseMessages() throws javax.jms.InvalidSelectorException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #59                 // Method browseMessages:(Ljava/lang/String;)Ljava/util/List;
       5: areturn

  public java.util.List<java.lang.Object> browseMessages(java.lang.String) throws javax.jms.InvalidSelectorException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.browse:()[Lorg/apache/activemq/command/Message;
       9: astore_2
      10: new           #38                 // class java/util/ArrayList
      13: dup
      14: invokespecial #39                 // Method java/util/ArrayList."<init>":()V
      17: astore_3
      18: new           #40                 // class org/apache/activemq/filter/MessageEvaluationContext
      21: dup
      22: invokespecial #41                 // Method org/apache/activemq/filter/MessageEvaluationContext."<init>":()V
      25: astore        4
      27: aload         4
      29: aload_0
      30: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      33: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      38: invokevirtual #43                 // Method org/apache/activemq/filter/MessageEvaluationContext.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      41: aload_1
      42: ifnonnull     49
      45: aconst_null
      46: goto          53
      49: aload_1
      50: invokestatic  #44                 // Method org/apache/activemq/selector/SelectorParser.parse:(Ljava/lang/String;)Lorg/apache/activemq/filter/BooleanExpression;
      53: astore        5
      55: iconst_0
      56: istore        6
      58: iload         6
      60: aload_2
      61: arraylength
      62: if_icmpge     141
      65: aload_2
      66: iload         6
      68: aaload
      69: astore        7
      71: aload         7
      73: iconst_1
      74: invokevirtual #60                 // Method org/apache/activemq/command/Message.setReadOnlyBody:(Z)V
      77: aload         5
      79: ifnonnull     92
      82: aload_3
      83: aload         7
      85: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      88: pop
      89: goto          118
      92: aload         4
      94: aload         7
      96: invokevirtual #47                 // Method org/apache/activemq/filter/MessageEvaluationContext.setMessageReference:(Lorg/apache/activemq/broker/region/MessageReference;)V
      99: aload         5
     101: aload         4
     103: invokeinterface #48,  2           // InterfaceMethod org/apache/activemq/filter/BooleanExpression.matches:(Lorg/apache/activemq/filter/MessageEvaluationContext;)Z
     108: ifeq          118
     111: aload_3
     112: aload         7
     114: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     117: pop
     118: goto          135
     121: astore        7
     123: getstatic     #53                 // Field LOG:Lorg/slf4j/Logger;
     126: ldc           #54                 // String exception browsing destination
     128: aload         7
     130: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     135: iinc          6, 1
     138: goto          58
     141: aload_3
     142: areturn
    Exception table:
       from    to  target type
          65   118   121   Class java/lang/Throwable

  public javax.management.openmbean.TabularData browseAsTable() throws javax.management.openmbean.OpenDataException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #61                 // Method browseAsTable:(Ljava/lang/String;)Ljavax/management/openmbean/TabularData;
       5: areturn
       6: astore_1
       7: new           #35                 // class java/lang/RuntimeException
      10: dup
      11: aload_1
      12: invokespecial #36                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      15: athrow
    Exception table:
       from    to  target type
           0     5     6   Class javax/jms/InvalidSelectorException

  public javax.management.openmbean.TabularData browseAsTable(java.lang.String) throws javax.management.openmbean.OpenDataException, javax.jms.InvalidSelectorException;
    Code:
       0: ldc_w         #62                 // class org/apache/activemq/command/ActiveMQMessage
       3: invokestatic  #63                 // Method org/apache/activemq/broker/jmx/OpenTypeSupport.getFactory:(Ljava/lang/Class;)Lorg/apache/activemq/broker/jmx/OpenTypeSupport$OpenTypeFactory;
       6: astore_2
       7: aload_0
       8: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      11: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.browse:()[Lorg/apache/activemq/command/Message;
      16: astore_3
      17: aload_2
      18: invokeinterface #64,  1           // InterfaceMethod org/apache/activemq/broker/jmx/OpenTypeSupport$OpenTypeFactory.getCompositeType:()Ljavax/management/openmbean/CompositeType;
      23: astore        4
      25: new           #65                 // class javax/management/openmbean/TabularType
      28: dup
      29: ldc           #66                 // String MessageList
      31: ldc           #66                 // String MessageList
      33: aload         4
      35: iconst_1
      36: anewarray     #67                 // class java/lang/String
      39: dup
      40: iconst_0
      41: ldc           #68                 // String JMSMessageID
      43: aastore
      44: invokespecial #69                 // Method javax/management/openmbean/TabularType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljavax/management/openmbean/CompositeType;[Ljava/lang/String;)V
      47: astore        5
      49: new           #70                 // class javax/management/openmbean/TabularDataSupport
      52: dup
      53: aload         5
      55: invokespecial #71                 // Method javax/management/openmbean/TabularDataSupport."<init>":(Ljavax/management/openmbean/TabularType;)V
      58: astore        6
      60: new           #40                 // class org/apache/activemq/filter/MessageEvaluationContext
      63: dup
      64: invokespecial #41                 // Method org/apache/activemq/filter/MessageEvaluationContext."<init>":()V
      67: astore        7
      69: aload         7
      71: aload_0
      72: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      75: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      80: invokevirtual #43                 // Method org/apache/activemq/filter/MessageEvaluationContext.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      83: aload_1
      84: ifnonnull     91
      87: aconst_null
      88: goto          95
      91: aload_1
      92: invokestatic  #44                 // Method org/apache/activemq/selector/SelectorParser.parse:(Ljava/lang/String;)Lorg/apache/activemq/filter/BooleanExpression;
      95: astore        8
      97: iconst_0
      98: istore        9
     100: iload         9
     102: aload_3
     103: arraylength
     104: if_icmpge     207
     107: aload         8
     109: ifnonnull     139
     112: aload         6
     114: new           #72                 // class javax/management/openmbean/CompositeDataSupport
     117: dup
     118: aload         4
     120: aload_2
     121: aload_3
     122: iload         9
     124: aaload
     125: invokeinterface #73,  2           // InterfaceMethod org/apache/activemq/broker/jmx/OpenTypeSupport$OpenTypeFactory.getFields:(Ljava/lang/Object;)Ljava/util/Map;
     130: invokespecial #74                 // Method javax/management/openmbean/CompositeDataSupport."<init>":(Ljavax/management/openmbean/CompositeType;Ljava/util/Map;)V
     133: invokevirtual #75                 // Method javax/management/openmbean/TabularDataSupport.put:(Ljavax/management/openmbean/CompositeData;)V
     136: goto          184
     139: aload         7
     141: aload_3
     142: iload         9
     144: aaload
     145: invokevirtual #47                 // Method org/apache/activemq/filter/MessageEvaluationContext.setMessageReference:(Lorg/apache/activemq/broker/region/MessageReference;)V
     148: aload         8
     150: aload         7
     152: invokeinterface #48,  2           // InterfaceMethod org/apache/activemq/filter/BooleanExpression.matches:(Lorg/apache/activemq/filter/MessageEvaluationContext;)Z
     157: ifeq          184
     160: aload         6
     162: new           #72                 // class javax/management/openmbean/CompositeDataSupport
     165: dup
     166: aload         4
     168: aload_2
     169: aload_3
     170: iload         9
     172: aaload
     173: invokeinterface #73,  2           // InterfaceMethod org/apache/activemq/broker/jmx/OpenTypeSupport$OpenTypeFactory.getFields:(Ljava/lang/Object;)Ljava/util/Map;
     178: invokespecial #74                 // Method javax/management/openmbean/CompositeDataSupport."<init>":(Ljavax/management/openmbean/CompositeType;Ljava/util/Map;)V
     181: invokevirtual #75                 // Method javax/management/openmbean/TabularDataSupport.put:(Ljavax/management/openmbean/CompositeData;)V
     184: goto          201
     187: astore        10
     189: getstatic     #53                 // Field LOG:Lorg/slf4j/Logger;
     192: ldc           #54                 // String exception browsing destination
     194: aload         10
     196: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     201: iinc          9, 1
     204: goto          100
     207: aload         6
     209: areturn
    Exception table:
       from    to  target type
         107   184   187   Class java/lang/Throwable

  public java.lang.String sendTextMessageWithProperties(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #76                 // String ,
       3: invokevirtual #77                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: new           #78                 // class java/util/HashMap
      10: dup
      11: invokespecial #79                 // Method java/util/HashMap."<init>":()V
      14: astore_3
      15: aload_2
      16: astore        4
      18: aload         4
      20: arraylength
      21: istore        5
      23: iconst_0
      24: istore        6
      26: iload         6
      28: iload         5
      30: if_icmpge     77
      33: aload         4
      35: iload         6
      37: aaload
      38: astore        7
      40: aload         7
      42: ldc           #80                 // String =
      44: invokevirtual #77                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      47: astore        8
      49: aload         8
      51: arraylength
      52: iconst_2
      53: if_icmpne     71
      56: aload_3
      57: aload         8
      59: iconst_0
      60: aaload
      61: aload         8
      63: iconst_1
      64: aaload
      65: invokeinterface #81,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: iinc          6, 1
      74: goto          26
      77: aload_0
      78: aload_3
      79: aload_3
      80: ldc           #82                 // String body
      82: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #67                 // class java/lang/String
      90: aload_3
      91: ldc           #84                 // String username
      93: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #67                 // class java/lang/String
     101: aload_3
     102: ldc           #85                 // String password
     104: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     109: checkcast     #67                 // class java/lang/String
     112: invokevirtual #86                 // Method sendTextMessage:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     115: areturn

  public java.lang.String sendTextMessage(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #87                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #88                 // Method sendTextMessage:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String sendTextMessage(java.util.Map, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokevirtual #86                 // Method sendTextMessage:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String sendTextMessage(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #87                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #86                 // Method sendTextMessage:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.lang.String sendTextMessage(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: new           #89                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #91                 // String vm://
       9: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
      16: invokevirtual #93                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getBrokerName:()Ljava/lang/String;
      19: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: astore        5
      27: aload_0
      28: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      31: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      36: astore        6
      38: new           #95                 // class org/apache/activemq/ActiveMQConnectionFactory
      41: dup
      42: aload         5
      44: invokespecial #96                 // Method org/apache/activemq/ActiveMQConnectionFactory."<init>":(Ljava/lang/String;)V
      47: astore        7
      49: aconst_null
      50: astore        8
      52: aload         7
      54: aload_3
      55: aload         4
      57: invokevirtual #97                 // Method org/apache/activemq/ActiveMQConnectionFactory.createConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/Connection;
      60: astore        8
      62: aload         8
      64: iconst_0
      65: iconst_1
      66: invokeinterface #98,  3           // InterfaceMethod javax/jms/Connection.createSession:(ZI)Ljavax/jms/Session;
      71: astore        9
      73: aload         9
      75: aload         6
      77: invokeinterface #99,  2           // InterfaceMethod javax/jms/Session.createProducer:(Ljavax/jms/Destination;)Ljavax/jms/MessageProducer;
      82: astore        10
      84: aload         9
      86: aload_2
      87: invokeinterface #100,  2          // InterfaceMethod javax/jms/Session.createTextMessage:(Ljava/lang/String;)Ljavax/jms/TextMessage;
      92: checkcast     #101                // class org/apache/activemq/command/ActiveMQTextMessage
      95: astore        11
      97: aload_1
      98: invokeinterface #102,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     103: invokeinterface #103,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     108: astore        12
     110: aload         12
     112: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     117: ifeq          157
     120: aload         12
     122: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     127: checkcast     #106                // class java/util/Map$Entry
     130: astore        13
     132: aload         11
     134: aload         13
     136: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     141: checkcast     #67                 // class java/lang/String
     144: aload         13
     146: invokeinterface #108,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     151: invokevirtual #109                // Method org/apache/activemq/command/ActiveMQTextMessage.setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     154: goto          110
     157: aload         10
     159: aload         11
     161: invokevirtual #110                // Method org/apache/activemq/command/ActiveMQTextMessage.getJMSDeliveryMode:()I
     164: invokeinterface #111,  2          // InterfaceMethod javax/jms/MessageProducer.setDeliveryMode:(I)V
     169: aload         10
     171: aload         11
     173: invokevirtual #112                // Method org/apache/activemq/command/ActiveMQTextMessage.getPriority:()B
     176: invokeinterface #113,  2          // InterfaceMethod javax/jms/MessageProducer.setPriority:(I)V
     181: lconst_0
     182: lstore        12
     184: aload         11
     186: invokevirtual #114                // Method org/apache/activemq/command/ActiveMQTextMessage.getExpiration:()J
     189: lconst_0
     190: lcmp
     191: ifeq          208
     194: aload         11
     196: invokevirtual #114                // Method org/apache/activemq/command/ActiveMQTextMessage.getExpiration:()J
     199: invokestatic  #115                // Method java/lang/System.currentTimeMillis:()J
     202: lsub
     203: lstore        12
     205: goto          237
     208: aload_1
     209: ldc           #116                // String timeToLive
     211: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     216: checkcast     #67                 // class java/lang/String
     219: astore        14
     221: aload         14
     223: ifnull        237
     226: aload         14
     228: invokestatic  #118                // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     231: invokevirtual #119                // Method java/lang/Integer.intValue:()I
     234: i2l
     235: lstore        12
     237: aload         10
     239: lload         12
     241: lconst_0
     242: lcmp
     243: ifle          251
     246: lload         12
     248: goto          252
     251: lconst_0
     252: invokeinterface #120,  3          // InterfaceMethod javax/jms/MessageProducer.setTimeToLive:(J)V
     257: aload         10
     259: aload         11
     261: invokeinterface #121,  2          // InterfaceMethod javax/jms/MessageProducer.send:(Ljavax/jms/Message;)V
     266: aload         11
     268: invokevirtual #122                // Method org/apache/activemq/command/ActiveMQTextMessage.getJMSMessageID:()Ljava/lang/String;
     271: astore        14
     273: aload         8
     275: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
     280: aload         14
     282: areturn
     283: astore        15
     285: aload         8
     287: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
     292: aload         15
     294: athrow
    Exception table:
       from    to  target type
          52   273   283   any
         283   285   283   any

  public int getMaxAuditDepth();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxAuditDepth:()I
       9: ireturn

  public int getMaxProducersToAudit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #125,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxProducersToAudit:()I
       9: ireturn

  public boolean isEnableAudit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #126,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.isEnableAudit:()Z
       9: ireturn

  public void setEnableAudit(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #127,  2          // InterfaceMethod org/apache/activemq/broker/region/Destination.setEnableAudit:(Z)V
      10: return

  public void setMaxAuditDepth(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #128,  2          // InterfaceMethod org/apache/activemq/broker/region/Destination.setMaxAuditDepth:(I)V
      10: return

  public void setMaxProducersToAudit(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #129,  2          // InterfaceMethod org/apache/activemq/broker/region/Destination.setMaxProducersToAudit:(I)V
      10: return

  public float getMemoryUsagePortion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: invokevirtual #130                // Method org/apache/activemq/usage/MemoryUsage.getUsagePortion:()F
      12: freturn

  public long getProducerCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #131                // Method org/apache/activemq/broker/region/DestinationStatistics.getProducers:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public boolean isProducerFlowControl();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #132,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.isProducerFlowControl:()Z
       9: ireturn

  public void setMemoryUsagePortion(float);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: fload_1
      10: invokevirtual #133                // Method org/apache/activemq/usage/MemoryUsage.setUsagePortion:(F)V
      13: return

  public void setProducerFlowControl(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #134,  2          // InterfaceMethod org/apache/activemq/broker/region/Destination.setProducerFlowControl:(Z)V
      10: return

  public boolean isAlwaysRetroactive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #135,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.isAlwaysRetroactive:()Z
       9: ireturn

  public void setAlwaysRetroactive(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #136,  2          // InterfaceMethod org/apache/activemq/broker/region/Destination.setAlwaysRetroactive:(Z)V
      10: return

  public void setBlockedProducerWarningInterval(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: lload_1
       5: invokeinterface #137,  3          // InterfaceMethod org/apache/activemq/broker/region/Destination.setBlockedProducerWarningInterval:(J)V
      10: return

  public long getBlockedProducerWarningInterval();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #138,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getBlockedProducerWarningInterval:()J
       9: lreturn

  public int getMaxPageSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #139,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxPageSize:()I
       9: ireturn

  public void setMaxPageSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #140,  2          // InterfaceMethod org/apache/activemq/broker/region/Destination.setMaxPageSize:(I)V
      10: return

  public boolean isUseCache();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #141,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.isUseCache:()Z
       9: ireturn

  public void setUseCache(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #142,  2          // InterfaceMethod org/apache/activemq/broker/region/Destination.setUseCache:(Z)V
      10: return

  public javax.management.ObjectName[] getSubscriptions() throws java.io.IOException, javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #143,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getConsumers:()Ljava/util/List;
       9: astore_1
      10: aload_1
      11: invokeinterface #144,  1          // InterfaceMethod java/util/List.size:()I
      16: anewarray     #145                // class javax/management/ObjectName
      19: astore_2
      20: aload_0
      21: getfield      #2                  // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
      24: invokevirtual #146                // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      27: invokevirtual #147                // Method org/apache/activemq/broker/BrokerService.getBrokerObjectName:()Ljavax/management/ObjectName;
      30: astore_3
      31: iconst_0
      32: istore        4
      34: aload_1
      35: invokeinterface #148,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        5
      42: aload         5
      44: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          99
      52: aload         5
      54: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #149                // class org/apache/activemq/broker/region/Subscription
      62: astore        6
      64: aload         6
      66: invokeinterface #150,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getContext:()Lorg/apache/activemq/broker/ConnectionContext;
      71: invokevirtual #151                // Method org/apache/activemq/broker/ConnectionContext.getClientId:()Ljava/lang/String;
      74: astore        7
      76: aload_2
      77: iload         4
      79: iinc          4, 1
      82: aload_3
      83: aload         7
      85: aload         6
      87: invokeinterface #152,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      92: invokestatic  #153                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createSubscriptionName:(Ljavax/management/ObjectName;Ljava/lang/String;Lorg/apache/activemq/command/ConsumerInfo;)Ljavax/management/ObjectName;
      95: aastore
      96: goto          42
      99: aload_2
     100: areturn

  public javax.management.ObjectName getSlowConsumerStrategy() throws java.io.IOException, javax.management.MalformedObjectNameException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       6: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getSlowConsumerStrategy:()Lorg/apache/activemq/broker/region/policy/SlowConsumerStrategy;
      11: astore_2
      12: aload_2
      13: ifnull        35
      16: aload_2
      17: instanceof    #155                // class org/apache/activemq/broker/region/policy/AbortSlowConsumerStrategy
      20: ifeq          35
      23: aload_0
      24: getfield      #2                  // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
      27: aload_2
      28: checkcast     #155                // class org/apache/activemq/broker/region/policy/AbortSlowConsumerStrategy
      31: invokevirtual #156                // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.registerSlowConsumerStrategy:(Lorg/apache/activemq/broker/region/policy/AbortSlowConsumerStrategy;)Ljavax/management/ObjectName;
      34: astore_1
      35: aload_1
      36: areturn

  public java.lang.String getOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       9: invokevirtual #157                // Method org/apache/activemq/command/ActiveMQDestination.getOptions:()Ljava/util/Map;
      12: astore_1
      13: ldc           #158                // String
      15: astore_2
      16: aload_1
      17: ifnull        25
      20: aload_1
      21: invokestatic  #159                // Method org/apache/activemq/util/URISupport.createQueryString:(Ljava/util/Map;)Ljava/lang/String;
      24: astore_2
      25: goto          29
      28: astore_3
      29: aload_2
      30: areturn
    Exception table:
       from    to  target type
          16    25    28   Class java/net/URISyntaxException

  public boolean isDLQ();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #161,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.isDLQ:()Z
       9: ireturn

  public long getBlockedSends();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #162                // Method org/apache/activemq/broker/region/DestinationStatistics.getBlockedSends:()Lorg/apache/activemq/management/CountStatisticImpl;
      12: invokevirtual #9                  // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
      15: lreturn

  public double getAverageBlockedTime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #163                // Method org/apache/activemq/broker/region/DestinationStatistics.getBlockedTime:()Lorg/apache/activemq/management/TimeStatisticImpl;
      12: invokevirtual #25                 // Method org/apache/activemq/management/TimeStatisticImpl.getAverageTime:()D
      15: dreturn

  public long getTotalBlockedTime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: invokevirtual #163                // Method org/apache/activemq/broker/region/DestinationStatistics.getBlockedTime:()Lorg/apache/activemq/management/TimeStatisticImpl;
      12: invokevirtual #164                // Method org/apache/activemq/management/TimeStatisticImpl.getTotalTime:()J
      15: lreturn

  static {};
    Code:
       0: ldc_w         #165                // class org/apache/activemq/broker/jmx/DestinationViewMBean
       3: invokestatic  #166                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #53                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
