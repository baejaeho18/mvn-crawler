Compiled from "VirtualTopicInterceptor.java"
public class org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor extends org.apache.activemq.broker.region.DestinationFilter {
  private final java.lang.String prefix;

  private final java.lang.String postfix;

  private final boolean local;

  private final org.apache.activemq.util.LRUCache<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.ActiveMQQueue> cache;

  public org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor(org.apache.activemq.broker.region.Destination, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/broker/region/DestinationFilter."<init>":(Lorg/apache/activemq/broker/region/Destination;)V
       5: aload_0
       6: new           #2                  // class org/apache/activemq/util/LRUCache
       9: dup
      10: invokespecial #3                  // Method org/apache/activemq/util/LRUCache."<init>":()V
      13: putfield      #4                  // Field cache:Lorg/apache/activemq/util/LRUCache;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field prefix:Ljava/lang/String;
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field postfix:Ljava/lang/String;
      26: aload_0
      27: iload         4
      29: putfield      #7                  // Field local:Z
      32: return

  public org.apache.activemq.broker.region.Topic getTopic();
    Code:
       0: aload_0
       1: getfield      #8                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #9                  // class org/apache/activemq/broker/region/Topic
       7: areturn

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #10                 // Method org/apache/activemq/command/Message.isAdvisory:()Z
       4: ifne          37
       7: aload_0
       8: getfield      #7                  // Field local:Z
      11: ifeq          21
      14: aload_2
      15: invokevirtual #11                 // Method org/apache/activemq/command/Message.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      18: ifnonnull     37
      21: aload_0
      22: aload_2
      23: invokevirtual #12                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      26: invokevirtual #13                 // Method getQueueConsumersWildcard:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQDestination;
      29: astore_3
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokevirtual #14                 // Method send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;Lorg/apache/activemq/command/ActiveMQDestination;)V
      37: aload_0
      38: aload_1
      39: aload_2
      40: invokespecial #15                 // Method org/apache/activemq/broker/region/DestinationFilter.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      43: return

  protected org.apache.activemq.command.ActiveMQDestination getQueueConsumersWildcard(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lorg/apache/activemq/util/LRUCache;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field cache:Lorg/apache/activemq/util/LRUCache;
      11: aload_1
      12: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #17                 // class org/apache/activemq/command/ActiveMQQueue
      18: astore_2
      19: aload_2
      20: ifnonnull     72
      23: new           #17                 // class org/apache/activemq/command/ActiveMQQueue
      26: dup
      27: new           #18                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      34: aload_0
      35: getfield      #5                  // Field prefix:Ljava/lang/String;
      38: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #21                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      45: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #6                  // Field postfix:Ljava/lang/String;
      52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #23                 // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
      61: astore_2
      62: aload_0
      63: getfield      #4                  // Field cache:Lorg/apache/activemq/util/LRUCache;
      66: aload_1
      67: aload_2
      68: invokevirtual #24                 // Method org/apache/activemq/util/LRUCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload_3
      73: monitorexit
      74: goto          84
      77: astore        4
      79: aload_3
      80: monitorexit
      81: aload         4
      83: athrow
      84: aload_2
      85: areturn
    Exception table:
       from    to  target type
           7    74    77   any
          77    81    77   any
}
