Compiled from "FilePendingMessageCursor.java"
public class org.apache.activemq.broker.region.cursors.FilePendingMessageCursor extends org.apache.activemq.broker.region.cursors.AbstractPendingMessageCursor implements org.apache.activemq.usage.UsageListener {
  static final org.slf4j.Logger LOG;

  private static final java.util.concurrent.atomic.AtomicLong NAME_COUNT;

  protected org.apache.activemq.broker.Broker broker;

  private final org.apache.activemq.store.PListStore store;

  private final java.lang.String name;

  private org.apache.activemq.broker.region.cursors.PendingList memoryList;

  private org.apache.activemq.store.PList diskList;

  private java.util.Iterator<org.apache.activemq.broker.region.MessageReference> iter;

  private org.apache.activemq.broker.region.Destination regionDestination;

  private boolean iterating;

  private boolean flushRequired;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private final org.apache.activemq.wireformat.WireFormat wireFormat;

  public org.apache.activemq.broker.region.cursors.FilePendingMessageCursor(org.apache.activemq.broker.Broker, java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #1                  // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor."<init>":(Z)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      13: putfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #5                  // class org/apache/activemq/openwire/OpenWireFormat
      20: dup
      21: invokespecial #6                  // Method org/apache/activemq/openwire/OpenWireFormat."<init>":()V
      24: putfield      #7                  // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
      27: aload_0
      28: getfield      #8                  // Field prioritizedMessages:Z
      31: ifeq          48
      34: aload_0
      35: new           #9                  // class org/apache/activemq/broker/region/cursors/PrioritizedPendingList
      38: dup
      39: invokespecial #10                 // Method org/apache/activemq/broker/region/cursors/PrioritizedPendingList."<init>":()V
      42: putfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      45: goto          59
      48: aload_0
      49: new           #12                 // class org/apache/activemq/broker/region/cursors/OrderedPendingList
      52: dup
      53: invokespecial #13                 // Method org/apache/activemq/broker/region/cursors/OrderedPendingList."<init>":()V
      56: putfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      59: aload_0
      60: aload_1
      61: putfield      #14                 // Field broker:Lorg/apache/activemq/broker/Broker;
      64: aload_0
      65: aload_1
      66: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getTempDataStore:()Lorg/apache/activemq/store/PListStore;
      71: putfield      #16                 // Field store:Lorg/apache/activemq/store/PListStore;
      74: aload_0
      75: new           #17                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      82: getstatic     #19                 // Field NAME_COUNT:Ljava/util/concurrent/atomic/AtomicLong;
      85: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      88: invokevirtual #21                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      91: ldc           #22                 // String _
      93: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_2
      97: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: putfield      #25                 // Field name:Ljava/lang/String;
     106: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          62
      12: aload_0
      13: getfield      #14                 // Field broker:Lorg/apache/activemq/broker/Broker;
      16: ifnull        40
      19: aload_0
      20: getfield      #7                  // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
      23: aload_0
      24: getfield      #14                 // Field broker:Lorg/apache/activemq/broker/Broker;
      27: invokeinterface #27,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      32: invokevirtual #28                 // Method org/apache/activemq/broker/BrokerService.getStoreOpenWireVersion:()I
      35: invokeinterface #29,  2           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.setVersion:(I)V
      40: aload_0
      41: invokespecial #30                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.start:()V
      44: aload_0
      45: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      48: ifnull        62
      51: aload_0
      52: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      55: invokevirtual #32                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      58: aload_0
      59: invokevirtual #33                 // Method org/apache/activemq/usage/MemoryUsage.addUsageListener:(Lorg/apache/activemq/usage/UsageListener;)V
      62: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          34
      12: aload_0
      13: invokespecial #34                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.stop:()V
      16: aload_0
      17: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      20: ifnull        34
      23: aload_0
      24: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      27: invokevirtual #32                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      30: aload_0
      31: invokevirtual #35                 // Method org/apache/activemq/usage/MemoryUsage.removeUsageListener:(Lorg/apache/activemq/usage/UsageListener;)V
      34: return

  public synchronized boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
       9: ifeq          21
      12: aload_0
      13: invokevirtual #37                 // Method isDiskListEmpty:()Z
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      25: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      30: astore_1
      31: aload_1
      32: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          80
      40: aload_1
      41: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #41                 // class org/apache/activemq/broker/region/MessageReference
      49: astore_2
      50: aload_2
      51: getstatic     #42                 // Field org/apache/activemq/broker/region/QueueMessageReference.NULL_MESSAGE:Lorg/apache/activemq/broker/region/QueueMessageReference;
      54: if_acmpne     60
      57: goto          31
      60: aload_2
      61: invokeinterface #43,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isDropped:()Z
      66: ifne          71
      69: iconst_0
      70: ireturn
      71: aload_1
      72: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.remove:()V
      77: goto          31
      80: aload_0
      81: invokevirtual #37                 // Method isDiskListEmpty:()Z
      84: ireturn

  public synchronized void reset();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #45                 // Field iterating:Z
       5: aload_0
       6: aconst_null
       7: putfield      #46                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      10: aload_0
      11: invokevirtual #37                 // Method isDiskListEmpty:()Z
      14: ifeq          33
      17: aload_0
      18: aload_0
      19: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      22: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      27: putfield      #47                 // Field iter:Ljava/util/Iterator;
      30: goto          45
      33: aload_0
      34: new           #48                 // class org/apache/activemq/broker/region/cursors/FilePendingMessageCursor$DiskIterator
      37: dup
      38: aload_0
      39: invokespecial #49                 // Method org/apache/activemq/broker/region/cursors/FilePendingMessageCursor$DiskIterator."<init>":(Lorg/apache/activemq/broker/region/cursors/FilePendingMessageCursor;)V
      42: putfield      #47                 // Field iter:Ljava/util/Iterator;
      45: return

  public synchronized void release();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #45                 // Field iterating:Z
       5: aload_0
       6: getfield      #47                 // Field iter:Ljava/util/Iterator;
       9: instanceof    #48                 // class org/apache/activemq/broker/region/cursors/FilePendingMessageCursor$DiskIterator
      12: ifeq          25
      15: aload_0
      16: getfield      #47                 // Field iter:Ljava/util/Iterator;
      19: checkcast     #48                 // class org/apache/activemq/broker/region/cursors/FilePendingMessageCursor$DiskIterator
      22: invokevirtual #50                 // Method org/apache/activemq/broker/region/cursors/FilePendingMessageCursor$DiskIterator.release:()V
      25: aload_0
      26: getfield      #51                 // Field flushRequired:Z
      29: ifeq          48
      32: aload_0
      33: iconst_0
      34: putfield      #51                 // Field flushRequired:Z
      37: aload_0
      38: invokevirtual #52                 // Method hasSpace:()Z
      41: ifne          48
      44: aload_0
      45: invokevirtual #53                 // Method flushToDisk:()V
      48: aload_0
      49: aconst_null
      50: putfield      #47                 // Field iter:Ljava/util/Iterator;
      53: return

  public synchronized void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method stop:()V
       4: aload_0
       5: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       8: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      13: astore_1
      14: aload_1
      15: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          43
      23: aload_1
      24: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #41                 // class org/apache/activemq/broker/region/MessageReference
      32: astore_2
      33: aload_2
      34: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      39: pop
      40: goto          14
      43: aload_0
      44: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      47: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.clear:()V
      52: aload_0
      53: invokespecial #57                 // Method destroyDiskList:()V
      56: return

  private void destroyDiskList() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #58                 // Field diskList:Lorg/apache/activemq/store/PList;
       4: ifnull        26
       7: aload_0
       8: getfield      #16                 // Field store:Lorg/apache/activemq/store/PListStore;
      11: aload_0
      12: getfield      #25                 // Field name:Ljava/lang/String;
      15: invokeinterface #59,  2           // InterfaceMethod org/apache/activemq/store/PListStore.removePList:(Ljava/lang/String;)Z
      20: pop
      21: aload_0
      22: aconst_null
      23: putfield      #58                 // Field diskList:Lorg/apache/activemq/store/PList;
      26: return

  public synchronized java.util.LinkedList<org.apache.activemq.broker.region.MessageReference> pageInList(int);
    Code:
       0: new           #60                 // class java/util/LinkedList
       3: dup
       4: invokespecial #61                 // Method java/util/LinkedList."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_0
      11: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      14: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          69
      31: iload_3
      32: iload_1
      33: if_icmpge     69
      36: aload         4
      38: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #41                 // class org/apache/activemq/broker/region/MessageReference
      46: astore        5
      48: aload         5
      50: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
      55: pop
      56: aload_2
      57: aload         5
      59: invokevirtual #63                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      62: pop
      63: iinc          3, 1
      66: goto          21
      69: iload_3
      70: iload_1
      71: if_icmpge     158
      74: aload_0
      75: invokevirtual #37                 // Method isDiskListEmpty:()Z
      78: ifne          158
      81: new           #48                 // class org/apache/activemq/broker/region/cursors/FilePendingMessageCursor$DiskIterator
      84: dup
      85: aload_0
      86: invokespecial #49                 // Method org/apache/activemq/broker/region/cursors/FilePendingMessageCursor$DiskIterator."<init>":(Lorg/apache/activemq/broker/region/cursors/FilePendingMessageCursor;)V
      89: astore        4
      91: aload         4
      93: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          158
     101: iload_3
     102: iload_1
     103: if_icmpge     158
     106: aload         4
     108: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #64                 // class org/apache/activemq/command/Message
     116: astore        5
     118: aload         5
     120: aload_0
     121: getfield      #65                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
     124: invokevirtual #66                 // Method org/apache/activemq/command/Message.setRegionDestination:(Lorg/apache/activemq/command/Message$MessageDestination;)V
     127: aload         5
     129: aload_0
     130: invokevirtual #67                 // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
     133: invokevirtual #32                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
     136: invokevirtual #68                 // Method org/apache/activemq/command/Message.setMemoryUsage:(Lorg/apache/activemq/usage/MemoryUsage;)V
     139: aload         5
     141: invokevirtual #69                 // Method org/apache/activemq/command/Message.incrementReferenceCount:()I
     144: pop
     145: aload_2
     146: aload         5
     148: invokevirtual #63                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     151: pop
     152: iinc          3, 1
     155: goto          91
     158: aload_2
     159: areturn

  public synchronized void addMessageLast(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: invokevirtual #70                 // Method tryAddMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;J)Z
       6: pop
       7: return

  public synchronized boolean tryAddMessageLast(org.apache.activemq.broker.region.MessageReference, long) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isExpired:()Z
       6: ifne          196
       9: aload_0
      10: aload_1
      11: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      16: invokevirtual #73                 // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      19: checkcast     #74                 // class org/apache/activemq/broker/region/Destination
      22: putfield      #65                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      25: aload_0
      26: invokevirtual #37                 // Method isDiskListEmpty:()Z
      29: ifeq          71
      32: aload_0
      33: invokevirtual #52                 // Method hasSpace:()Z
      36: ifne          46
      39: aload_0
      40: getfield      #16                 // Field store:Lorg/apache/activemq/store/PListStore;
      43: ifnonnull     71
      46: aload_0
      47: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      50: aload_1
      51: invokeinterface #75,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      56: pop
      57: aload_1
      58: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
      63: pop
      64: aload_0
      65: iconst_1
      66: invokevirtual #76                 // Method setCacheEnabled:(Z)V
      69: iconst_1
      70: ireturn
      71: aload_0
      72: invokevirtual #52                 // Method hasSpace:()Z
      75: ifne          120
      78: aload_0
      79: invokevirtual #37                 // Method isDiskListEmpty:()Z
      82: ifeq          120
      85: aload_0
      86: invokevirtual #77                 // Method expireOldMessages:()V
      89: aload_0
      90: invokevirtual #52                 // Method hasSpace:()Z
      93: ifeq          116
      96: aload_0
      97: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
     100: aload_1
     101: invokeinterface #75,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
     106: pop
     107: aload_1
     108: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
     113: pop
     114: iconst_1
     115: ireturn
     116: aload_0
     117: invokevirtual #53                 // Method flushToDisk:()V
     120: aload_0
     121: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     124: invokevirtual #78                 // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
     127: lload_2
     128: invokevirtual #79                 // Method org/apache/activemq/usage/TempUsage.waitForSpace:(J)Z
     131: ifeq          169
     134: aload_0
     135: aload_1
     136: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
     141: invokevirtual #80                 // Method getByteSequence:(Lorg/apache/activemq/command/Message;)Lorg/apache/activemq/util/ByteSequence;
     144: astore        4
     146: aload_0
     147: invokevirtual #81                 // Method getDiskList:()Lorg/apache/activemq/store/PList;
     150: aload_1
     151: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
     156: invokevirtual #83                 // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
     159: aload         4
     161: invokeinterface #84,  3           // InterfaceMethod org/apache/activemq/store/PList.addLast:(Ljava/lang/String;Lorg/apache/activemq/util/ByteSequence;)Ljava/lang/Object;
     166: pop
     167: iconst_1
     168: ireturn
     169: iconst_0
     170: ireturn
     171: astore        4
     173: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
     176: ldc           #87                 // String Caught an Exception adding a message: {} first to FilePendingMessageCursor
     178: aload_1
     179: aload         4
     181: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     186: new           #89                 // class java/lang/RuntimeException
     189: dup
     190: aload         4
     192: invokespecial #90                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     195: athrow
     196: aload_0
     197: aload_1
     198: invokespecial #91                 // Method discardExpiredMessage:(Lorg/apache/activemq/broker/region/MessageReference;)V
     201: iconst_1
     202: ireturn
    Exception table:
       from    to  target type
           9    70   171   Class java/lang/Exception
          71   115   171   Class java/lang/Exception
         116   168   171   Class java/lang/Exception
         169   170   171   Class java/lang/Exception

  public synchronized void addMessageFirst(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_1
       1: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isExpired:()Z
       6: ifne          194
       9: aload_0
      10: aload_1
      11: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      16: invokevirtual #73                 // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      19: checkcast     #74                 // class org/apache/activemq/broker/region/Destination
      22: putfield      #65                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      25: aload_0
      26: invokevirtual #37                 // Method isDiskListEmpty:()Z
      29: ifeq          63
      32: aload_0
      33: invokevirtual #52                 // Method hasSpace:()Z
      36: ifeq          63
      39: aload_0
      40: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      43: aload_1
      44: invokeinterface #92,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      49: pop
      50: aload_1
      51: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
      56: pop
      57: aload_0
      58: iconst_1
      59: invokevirtual #76                 // Method setCacheEnabled:(Z)V
      62: return
      63: aload_0
      64: invokevirtual #52                 // Method hasSpace:()Z
      67: ifne          111
      70: aload_0
      71: invokevirtual #37                 // Method isDiskListEmpty:()Z
      74: ifeq          111
      77: aload_0
      78: invokevirtual #77                 // Method expireOldMessages:()V
      81: aload_0
      82: invokevirtual #52                 // Method hasSpace:()Z
      85: ifeq          107
      88: aload_0
      89: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      92: aload_1
      93: invokeinterface #92,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      98: pop
      99: aload_1
     100: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
     105: pop
     106: return
     107: aload_0
     108: invokevirtual #53                 // Method flushToDisk:()V
     111: aload_0
     112: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     115: invokevirtual #78                 // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
     118: invokevirtual #93                 // Method org/apache/activemq/usage/TempUsage.waitForSpace:()V
     121: aload_1
     122: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
     127: pop
     128: aload_0
     129: aload_1
     130: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
     135: invokevirtual #80                 // Method getByteSequence:(Lorg/apache/activemq/command/Message;)Lorg/apache/activemq/util/ByteSequence;
     138: astore_2
     139: aload_0
     140: invokevirtual #81                 // Method getDiskList:()Lorg/apache/activemq/store/PList;
     143: aload_1
     144: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
     149: invokevirtual #83                 // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
     152: aload_2
     153: invokeinterface #94,  3           // InterfaceMethod org/apache/activemq/store/PList.addFirst:(Ljava/lang/String;Lorg/apache/activemq/util/ByteSequence;)Ljava/lang/Object;
     158: astore_3
     159: aload_1
     160: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
     165: aload_3
     166: invokevirtual #95                 // Method org/apache/activemq/command/MessageId.setPlistLocator:(Ljava/lang/Object;)V
     169: goto          199
     172: astore_2
     173: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
     176: ldc           #87                 // String Caught an Exception adding a message: {} first to FilePendingMessageCursor
     178: aload_1
     179: aload_2
     180: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     185: new           #89                 // class java/lang/RuntimeException
     188: dup
     189: aload_2
     190: invokespecial #90                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     193: athrow
     194: aload_0
     195: aload_1
     196: invokespecial #91                 // Method discardExpiredMessage:(Lorg/apache/activemq/broker/region/MessageReference;)V
     199: return
    Exception table:
       from    to  target type
           9    62   172   Class java/lang/Exception
          63   106   172   Class java/lang/Exception
         107   169   172   Class java/lang/Exception

  public synchronized boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #47                 // Field iter:Ljava/util/Iterator;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public synchronized org.apache.activemq.broker.region.MessageReference next();
    Code:
       0: aload_0
       1: getfield      #47                 // Field iter:Ljava/util/Iterator;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #41                 // class org/apache/activemq/broker/region/MessageReference
      12: astore_1
      13: aload_0
      14: aload_1
      15: putfield      #46                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      18: aload_0
      19: invokevirtual #37                 // Method isDiskListEmpty:()Z
      22: ifne          54
      25: aload_1
      26: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      31: aload_0
      32: getfield      #65                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      35: invokevirtual #66                 // Method org/apache/activemq/command/Message.setRegionDestination:(Lorg/apache/activemq/command/Message$MessageDestination;)V
      38: aload_1
      39: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      44: aload_0
      45: invokevirtual #67                 // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      48: invokevirtual #32                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      51: invokevirtual #68                 // Method org/apache/activemq/command/Message.setMemoryUsage:(Lorg/apache/activemq/usage/MemoryUsage;)V
      54: aload_1
      55: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
      60: pop
      61: aload_1
      62: areturn

  public synchronized void remove();
    Code:
       0: aload_0
       1: getfield      #47                 // Field iter:Ljava/util/Iterator;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.remove:()V
       9: aload_0
      10: getfield      #46                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      13: ifnull        26
      16: aload_0
      17: getfield      #46                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      20: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      25: pop
      26: return

  public synchronized void remove(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: aload_1
       5: invokeinterface #96,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.remove:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      10: ifnull        20
      13: aload_1
      14: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      19: pop
      20: aload_0
      21: invokevirtual #37                 // Method isDiskListEmpty:()Z
      24: ifne          59
      27: aload_0
      28: invokevirtual #81                 // Method getDiskList:()Lorg/apache/activemq/store/PList;
      31: aload_1
      32: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
      37: invokevirtual #97                 // Method org/apache/activemq/command/MessageId.getPlistLocator:()Ljava/lang/Object;
      40: invokeinterface #98,  2           // InterfaceMethod org/apache/activemq/store/PList.remove:(Ljava/lang/Object;)Z
      45: pop
      46: goto          59
      49: astore_2
      50: new           #89                 // class java/lang/RuntimeException
      53: dup
      54: aload_2
      55: invokespecial #90                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      58: athrow
      59: return
    Exception table:
       from    to  target type
          27    46    49   Class java/io/IOException

  public synchronized int size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.size:()I
       9: aload_0
      10: invokevirtual #37                 // Method isDiskListEmpty:()Z
      13: ifeq          20
      16: iconst_0
      17: goto          30
      20: aload_0
      21: invokevirtual #81                 // Method getDiskList:()Lorg/apache/activemq/store/PList;
      24: invokeinterface #101,  1          // InterfaceMethod org/apache/activemq/store/PList.size:()J
      29: l2i
      30: iadd
      31: ireturn

  public synchronized void clear();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.clear:()V
       9: aload_0
      10: invokevirtual #37                 // Method isDiskListEmpty:()Z
      13: ifne          38
      16: aload_0
      17: invokevirtual #81                 // Method getDiskList:()Lorg/apache/activemq/store/PList;
      20: invokeinterface #102,  1          // InterfaceMethod org/apache/activemq/store/PList.destroy:()V
      25: goto          38
      28: astore_1
      29: new           #89                 // class java/lang/RuntimeException
      32: dup
      33: aload_1
      34: invokespecial #90                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: aload_0
      39: aconst_null
      40: putfield      #46                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      43: return
    Exception table:
       from    to  target type
          16    25    28   Class java/io/IOException

  public synchronized boolean isFull();
    Code:
       0: aload_0
       1: invokespecial #103                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.isFull:()Z
       4: ifne          34
       7: aload_0
       8: invokevirtual #37                 // Method isDiskListEmpty:()Z
      11: ifne          38
      14: aload_0
      15: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      18: ifnull        38
      21: aload_0
      22: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      25: invokevirtual #78                 // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
      28: invokevirtual #104                // Method org/apache/activemq/usage/TempUsage.isFull:()Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean hasMessagesBufferedToDeliver();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method isEmpty:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setSystemUsage(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
       5: return

  public void onUsageChanged(org.apache.activemq.usage.Usage, int, int);
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #107                // Method getMemoryUsageHighWaterMark:()I
       5: if_icmplt     73
       8: aload_0
       9: dup
      10: astore        4
      12: monitorenter
      13: aload_0
      14: getfield      #51                 // Field flushRequired:Z
      17: ifne          59
      20: aload_0
      21: invokevirtual #108                // Method size:()I
      24: ifeq          59
      27: aload_0
      28: iconst_1
      29: putfield      #51                 // Field flushRequired:Z
      32: aload_0
      33: getfield      #45                 // Field iterating:Z
      36: ifne          59
      39: aload_0
      40: invokevirtual #77                 // Method expireOldMessages:()V
      43: aload_0
      44: invokevirtual #52                 // Method hasSpace:()Z
      47: ifne          59
      50: aload_0
      51: invokevirtual #53                 // Method flushToDisk:()V
      54: aload_0
      55: iconst_0
      56: putfield      #51                 // Field flushRequired:Z
      59: aload         4
      61: monitorexit
      62: goto          73
      65: astore        5
      67: aload         4
      69: monitorexit
      70: aload         5
      72: athrow
      73: return
    Exception table:
       from    to  target type
          13    62    65   any
          65    70    65   any

  public boolean isTransient();
    Code:
       0: iconst_1
       1: ireturn

  protected synchronized void expireOldMessages();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
       9: ifne          71
      12: aload_0
      13: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      16: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          71
      31: aload_1
      32: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #41                 // class org/apache/activemq/broker/region/MessageReference
      40: astore_2
      41: aload_2
      42: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isExpired:()Z
      47: ifeq          68
      50: aload_2
      51: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      56: pop
      57: aload_0
      58: aload_2
      59: invokespecial #91                 // Method discardExpiredMessage:(Lorg/apache/activemq/broker/region/MessageReference;)V
      62: aload_1
      63: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.remove:()V
      68: goto          22
      71: return

  protected synchronized void flushToDisk();
    Code:
       0: aload_0
       1: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
       9: ifne          265
      12: aload_0
      13: getfield      #16                 // Field store:Lorg/apache/activemq/store/PListStore;
      16: ifnull        265
      19: lconst_0
      20: lstore_1
      21: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
      24: invokeinterface #109,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      29: ifeq          94
      32: invokestatic  #110                // Method java/lang/System.currentTimeMillis:()J
      35: lstore_1
      36: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #111                // String {}, flushToDisk() mem list size: {} {}
      41: iconst_3
      42: anewarray     #112                // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload_0
      48: getfield      #25                 // Field name:Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_0
      55: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      58: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.size:()I
      63: invokestatic  #113                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: aastore
      67: dup
      68: iconst_2
      69: aload_0
      70: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      73: ifnull        86
      76: aload_0
      77: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      80: invokevirtual #32                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      83: goto          88
      86: ldc           #114                // String
      88: aastore
      89: invokeinterface #115,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      94: aload_0
      95: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      98: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
     103: astore_3
     104: aload_3
     105: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          197
     113: aload_3
     114: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #41                 // class org/apache/activemq/broker/region/MessageReference
     122: astore        4
     124: aload         4
     126: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
     131: pop
     132: aload_0
     133: aload         4
     135: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
     140: invokevirtual #80                 // Method getByteSequence:(Lorg/apache/activemq/command/Message;)Lorg/apache/activemq/util/ByteSequence;
     143: astore        5
     145: aload_0
     146: invokevirtual #81                 // Method getDiskList:()Lorg/apache/activemq/store/PList;
     149: aload         4
     151: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
     156: invokevirtual #83                 // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
     159: aload         5
     161: invokeinterface #84,  3           // InterfaceMethod org/apache/activemq/store/PList.addLast:(Ljava/lang/String;Lorg/apache/activemq/util/ByteSequence;)Ljava/lang/Object;
     166: pop
     167: goto          194
     170: astore        6
     172: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
     175: ldc           #116                // String Failed to write to disk list
     177: aload         6
     179: invokeinterface #117,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     184: new           #89                 // class java/lang/RuntimeException
     187: dup
     188: aload         6
     190: invokespecial #90                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     193: athrow
     194: goto          104
     197: aload_0
     198: getfield      #11                 // Field memoryList:Lorg/apache/activemq/broker/region/cursors/PendingList;
     201: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.clear:()V
     206: aload_0
     207: iconst_0
     208: invokevirtual #76                 // Method setCacheEnabled:(Z)V
     211: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
     214: ldc           #118                // String {}, flushToDisk() done - {} ms {}
     216: iconst_3
     217: anewarray     #112                // class java/lang/Object
     220: dup
     221: iconst_0
     222: aload_0
     223: getfield      #25                 // Field name:Ljava/lang/String;
     226: aastore
     227: dup
     228: iconst_1
     229: invokestatic  #110                // Method java/lang/System.currentTimeMillis:()J
     232: lload_1
     233: lsub
     234: invokestatic  #119                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     237: aastore
     238: dup
     239: iconst_2
     240: aload_0
     241: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     244: ifnull        257
     247: aload_0
     248: getfield      #31                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     251: invokevirtual #32                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
     254: goto          259
     257: ldc           #114                // String
     259: aastore
     260: invokeinterface #115,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     265: return
    Exception table:
       from    to  target type
         132   167   170   Class java/io/IOException

  protected boolean isDiskListEmpty();
    Code:
       0: aload_0
       1: getfield      #58                 // Field diskList:Lorg/apache/activemq/store/PList;
       4: ifnull        19
       7: aload_0
       8: getfield      #58                 // Field diskList:Lorg/apache/activemq/store/PList;
      11: invokeinterface #120,  1          // InterfaceMethod org/apache/activemq/store/PList.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public org.apache.activemq.store.PList getDiskList();
    Code:
       0: aload_0
       1: getfield      #58                 // Field diskList:Lorg/apache/activemq/store/PList;
       4: ifnonnull     52
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field store:Lorg/apache/activemq/store/PListStore;
      12: aload_0
      13: getfield      #25                 // Field name:Ljava/lang/String;
      16: invokeinterface #121,  2          // InterfaceMethod org/apache/activemq/store/PListStore.getPList:(Ljava/lang/String;)Lorg/apache/activemq/store/PList;
      21: putfield      #58                 // Field diskList:Lorg/apache/activemq/store/PList;
      24: goto          52
      27: astore_1
      28: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
      31: ldc           #122                // String Caught an IO Exception getting the DiskList {}
      33: aload_0
      34: getfield      #25                 // Field name:Ljava/lang/String;
      37: aload_1
      38: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      43: new           #89                 // class java/lang/RuntimeException
      46: dup
      47: aload_1
      48: invokespecial #90                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      51: athrow
      52: aload_0
      53: getfield      #58                 // Field diskList:Lorg/apache/activemq/store/PList;
      56: areturn
    Exception table:
       from    to  target type
           7    24    27   Class java/lang/Exception

  private void discardExpiredMessage(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: getstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #123                // String Discarding expired message {}
       5: aload_1
       6: invokeinterface #124,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #14                 // Field broker:Lorg/apache/activemq/broker/Broker;
      15: aload_1
      16: invokeinterface #125,  2          // InterfaceMethod org/apache/activemq/broker/Broker.isExpired:(Lorg/apache/activemq/broker/region/MessageReference;)Z
      21: ifeq          76
      24: new           #126                // class org/apache/activemq/broker/ConnectionContext
      27: dup
      28: new           #127                // class org/apache/activemq/filter/NonCachedMessageEvaluationContext
      31: dup
      32: invokespecial #128                // Method org/apache/activemq/filter/NonCachedMessageEvaluationContext."<init>":()V
      35: invokespecial #129                // Method org/apache/activemq/broker/ConnectionContext."<init>":(Lorg/apache/activemq/filter/MessageEvaluationContext;)V
      38: astore_2
      39: aload_2
      40: aload_0
      41: getfield      #14                 // Field broker:Lorg/apache/activemq/broker/Broker;
      44: invokevirtual #130                // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
      47: aload_1
      48: invokeinterface #131,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      53: checkcast     #74                 // class org/apache/activemq/broker/region/Destination
      56: aload_2
      57: aconst_null
      58: new           #132                // class org/apache/activemq/broker/region/IndirectMessageReference
      61: dup
      62: aload_1
      63: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      68: invokespecial #133                // Method org/apache/activemq/broker/region/IndirectMessageReference."<init>":(Lorg/apache/activemq/command/Message;)V
      71: invokeinterface #134,  4          // InterfaceMethod org/apache/activemq/broker/region/Destination.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
      76: return

  protected org.apache.activemq.util.ByteSequence getByteSequence(org.apache.activemq.command.Message) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
       4: aload_1
       5: invokeinterface #135,  2          // InterfaceMethod org/apache/activemq/wireformat/WireFormat.marshal:(Ljava/lang/Object;)Lorg/apache/activemq/util/ByteSequence;
      10: astore_2
      11: new           #136                // class org/apache/activemq/util/ByteSequence
      14: dup
      15: aload_2
      16: getfield      #137                // Field org/apache/activemq/util/ByteSequence.data:[B
      19: aload_2
      20: getfield      #138                // Field org/apache/activemq/util/ByteSequence.offset:I
      23: aload_2
      24: getfield      #139                // Field org/apache/activemq/util/ByteSequence.length:I
      27: invokespecial #140                // Method org/apache/activemq/util/ByteSequence."<init>":([BII)V
      30: areturn

  protected org.apache.activemq.command.Message getMessage(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: new           #136                // class org/apache/activemq/util/ByteSequence
       3: dup
       4: aload_1
       5: invokevirtual #141                // Method org/apache/activemq/util/ByteSequence.getData:()[B
       8: aload_1
       9: invokevirtual #142                // Method org/apache/activemq/util/ByteSequence.getOffset:()I
      12: aload_1
      13: invokevirtual #143                // Method org/apache/activemq/util/ByteSequence.getLength:()I
      16: invokespecial #140                // Method org/apache/activemq/util/ByteSequence."<init>":([BII)V
      19: astore_2
      20: aload_0
      21: getfield      #7                  // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
      24: aload_2
      25: invokeinterface #144,  2          // InterfaceMethod org/apache/activemq/wireformat/WireFormat.unmarshal:(Lorg/apache/activemq/util/ByteSequence;)Ljava/lang/Object;
      30: checkcast     #64                 // class org/apache/activemq/command/Message
      33: areturn

  static {};
    Code:
       0: ldc_w         #145                // class org/apache/activemq/broker/region/cursors/FilePendingMessageCursor
       3: invokestatic  #146                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #86                 // Field LOG:Lorg/slf4j/Logger;
       9: new           #147                // class java/util/concurrent/atomic/AtomicLong
      12: dup
      13: invokespecial #148                // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      16: putstatic     #19                 // Field NAME_COUNT:Ljava/util/concurrent/atomic/AtomicLong;
      19: return
}
