Compiled from "DestinationDotFileInterceptor.java"
public class org.apache.activemq.broker.view.DestinationDotFileInterceptor extends org.apache.activemq.broker.view.DotFileInterceptorSupport {
  protected static final java.lang.String ID_SEPARATOR;

  public org.apache.activemq.broker.view.DestinationDotFileInterceptor(org.apache.activemq.broker.Broker, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/activemq/broker/view/DotFileInterceptorSupport."<init>":(Lorg/apache/activemq/broker/Broker;Ljava/lang/String;)V
       6: return

  public org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #2                  // Method org/apache/activemq/broker/view/DotFileInterceptorSupport.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
       7: astore        4
       9: aload_0
      10: invokevirtual #3                  // Method generateFile:()V
      13: aload         4
      15: areturn

  public void removeDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: invokespecial #4                  // Method org/apache/activemq/broker/view/DotFileInterceptorSupport.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
       7: aload_0
       8: invokevirtual #3                  // Method generateFile:()V
      11: return

  protected void generateFile(java.io.PrintWriter) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getDestinations:()[Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_2
       5: new           #6                  // class org/apache/activemq/filter/DestinationMap
       8: dup
       9: invokespecial #7                  // Method org/apache/activemq/filter/DestinationMap."<init>":()V
      12: astore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: aload_2
      19: arraylength
      20: if_icmpge     43
      23: aload_2
      24: iload         4
      26: aaload
      27: astore        5
      29: aload_3
      30: aload         5
      32: aload         5
      34: invokevirtual #8                  // Method org/apache/activemq/filter/DestinationMap.put:(Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/Object;)V
      37: iinc          4, 1
      40: goto          16
      43: aload_1
      44: ldc           #9                  // String digraph \"ActiveMQ Destinations\" {
      46: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      49: aload_1
      50: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
      53: aload_1
      54: ldc           #12                 // String node [style = \"rounded,filled\", fontname=\"Helvetica-Oblique\"];
      56: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      59: aload_1
      60: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
      63: aload_1
      64: ldc           #13                 // String topic_root [fillcolor = deepskyblue, label = \"Topics\" ];
      66: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      69: aload_1
      70: ldc           #14                 // String queue_root [fillcolor = deepskyblue, label = \"Queues\" ];
      72: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      75: aload_1
      76: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
      79: aload_1
      80: ldc           #15                 // String subgraph queues {
      82: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      85: aload_1
      86: ldc           #16                 // String   node [fillcolor=red];
      88: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      91: aload_1
      92: ldc           #17                 // String   label = \"Queues\"
      94: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      97: aload_1
      98: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     101: aload_0
     102: aload_1
     103: aload_3
     104: invokevirtual #18                 // Method org/apache/activemq/filter/DestinationMap.getQueueRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     107: ldc           #19                 // String queue
     109: invokevirtual #20                 // Method printNodeLinks:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     112: aload_1
     113: ldc           #21                 // String }
     115: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     118: aload_1
     119: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     122: aload_1
     123: ldc           #22                 // String subgraph temp queues {
     125: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     128: aload_1
     129: ldc           #16                 // String   node [fillcolor=red];
     131: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     134: aload_1
     135: ldc           #23                 // String   label = \"TempQueues\"
     137: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     140: aload_1
     141: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     144: aload_0
     145: aload_1
     146: aload_3
     147: invokevirtual #24                 // Method org/apache/activemq/filter/DestinationMap.getTempQueueRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     150: ldc           #25                 // String tempqueue
     152: invokevirtual #20                 // Method printNodeLinks:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     155: aload_1
     156: ldc           #21                 // String }
     158: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     161: aload_1
     162: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     165: aload_1
     166: ldc           #26                 // String subgraph topics {
     168: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     171: aload_1
     172: ldc           #27                 // String   node [fillcolor=green];
     174: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     177: aload_1
     178: ldc           #28                 // String   label = \"Topics\"
     180: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     183: aload_1
     184: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     187: aload_0
     188: aload_1
     189: aload_3
     190: invokevirtual #29                 // Method org/apache/activemq/filter/DestinationMap.getTopicRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     193: ldc           #30                 // String topic
     195: invokevirtual #20                 // Method printNodeLinks:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     198: aload_1
     199: ldc           #21                 // String }
     201: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     204: aload_1
     205: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     208: aload_1
     209: ldc           #31                 // String subgraph temp topics {
     211: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     214: aload_1
     215: ldc           #27                 // String   node [fillcolor=green];
     217: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     220: aload_1
     221: ldc           #32                 // String   label = \"TempTopics\"
     223: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     226: aload_1
     227: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     230: aload_0
     231: aload_1
     232: aload_3
     233: invokevirtual #33                 // Method org/apache/activemq/filter/DestinationMap.getTempTopicRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     236: ldc           #34                 // String temptopic
     238: invokevirtual #20                 // Method printNodeLinks:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     241: aload_1
     242: ldc           #21                 // String }
     244: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     247: aload_1
     248: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     251: aload_0
     252: aload_1
     253: aload_3
     254: invokevirtual #18                 // Method org/apache/activemq/filter/DestinationMap.getQueueRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     257: ldc           #19                 // String queue
     259: invokevirtual #35                 // Method printNodes:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     262: aload_1
     263: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     266: aload_0
     267: aload_1
     268: aload_3
     269: invokevirtual #24                 // Method org/apache/activemq/filter/DestinationMap.getTempQueueRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     272: ldc           #25                 // String tempqueue
     274: invokevirtual #35                 // Method printNodes:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     277: aload_1
     278: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     281: aload_0
     282: aload_1
     283: aload_3
     284: invokevirtual #29                 // Method org/apache/activemq/filter/DestinationMap.getTopicRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     287: ldc           #30                 // String topic
     289: invokevirtual #35                 // Method printNodes:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     292: aload_1
     293: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     296: aload_0
     297: aload_1
     298: aload_3
     299: invokevirtual #33                 // Method org/apache/activemq/filter/DestinationMap.getTempTopicRootNode:()Lorg/apache/activemq/filter/DestinationMapNode;
     302: ldc           #34                 // String temptopic
     304: invokevirtual #35                 // Method printNodes:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     307: aload_1
     308: invokevirtual #11                 // Method java/io/PrintWriter.println:()V
     311: aload_1
     312: ldc           #21                 // String }
     314: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     317: return

  protected void printNodes(java.io.PrintWriter, org.apache.activemq.filter.DestinationMapNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #36                 // Method getPath:(Lorg/apache/activemq/filter/DestinationMapNode;)Ljava/lang/String;
       5: astore        4
       7: aload_1
       8: ldc           #37                 // String
      10: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      13: aload_1
      14: aload_3
      15: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      18: aload_1
      19: ldc           #39                 // String _
      21: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      24: aload_1
      25: aload         4
      27: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      30: aload         4
      32: astore        5
      34: aload_3
      35: ldc           #30                 // String topic
      37: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          50
      43: ldc           #41                 // String Topics
      45: astore        5
      47: goto          63
      50: aload_3
      51: ldc           #19                 // String queue
      53: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          63
      59: ldc           #42                 // String Queues
      61: astore        5
      63: aload_1
      64: ldc           #43                 // String [ label = \"
      66: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      69: aload_1
      70: aload         5
      72: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      75: aload_1
      76: ldc           #44                 // String \" ];
      78: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      81: aload_2
      82: invokevirtual #45                 // Method org/apache/activemq/filter/DestinationMapNode.getChildren:()Ljava/util/Collection;
      85: astore        6
      87: aload         6
      89: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      94: astore        7
      96: aload         7
      98: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          152
     106: aload         7
     108: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #49                 // class org/apache/activemq/filter/DestinationMapNode
     116: astore        8
     118: aload_0
     119: aload_1
     120: aload         8
     122: new           #50                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     129: aload_3
     130: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #39                 // String _
     135: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload         4
     140: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokevirtual #35                 // Method printNodes:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     149: goto          96
     152: return

  protected void printNodeLinks(java.io.PrintWriter, org.apache.activemq.filter.DestinationMapNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #36                 // Method getPath:(Lorg/apache/activemq/filter/DestinationMapNode;)Ljava/lang/String;
       5: astore        4
       7: aload_2
       8: invokevirtual #45                 // Method org/apache/activemq/filter/DestinationMapNode.getChildren:()Ljava/util/Collection;
      11: astore        5
      13: aload         5
      15: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore        6
      22: aload         6
      24: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          146
      32: aload         6
      34: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #49                 // class org/apache/activemq/filter/DestinationMapNode
      42: astore        7
      44: aload_1
      45: ldc           #37                 // String
      47: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      50: aload_1
      51: aload_3
      52: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      55: aload_1
      56: ldc           #39                 // String _
      58: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      61: aload_1
      62: aload         4
      64: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      67: aload_1
      68: ldc           #54                 // String  ->
      70: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      73: aload_1
      74: aload_3
      75: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      78: aload_1
      79: ldc           #39                 // String _
      81: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      84: aload_1
      85: aload         4
      87: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      90: aload_1
      91: ldc           #39                 // String _
      93: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      96: aload_1
      97: aload_0
      98: aload         7
     100: invokevirtual #36                 // Method getPath:(Lorg/apache/activemq/filter/DestinationMapNode;)Ljava/lang/String;
     103: invokevirtual #38                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
     106: aload_1
     107: ldc           #55                 // String ;
     109: invokevirtual #10                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     112: aload_0
     113: aload_1
     114: aload         7
     116: new           #50                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     123: aload_3
     124: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #39                 // String _
     129: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload         4
     134: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokevirtual #20                 // Method printNodeLinks:(Ljava/io/PrintWriter;Lorg/apache/activemq/filter/DestinationMapNode;Ljava/lang/String;)V
     143: goto          22
     146: return

  protected java.lang.String getPath(org.apache.activemq.filter.DestinationMapNode);
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method org/apache/activemq/filter/DestinationMapNode.getPath:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #57                 // String *
       8: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifeq          17
      14: ldc           #58                 // String root
      16: areturn
      17: aload_2
      18: areturn
}
