Compiled from "QueueView.java"
public class org.apache.activemq.broker.jmx.QueueView extends org.apache.activemq.broker.jmx.DestinationView implements org.apache.activemq.broker.jmx.QueueViewMBean {
  public org.apache.activemq.broker.jmx.QueueView(org.apache.activemq.broker.jmx.ManagedRegionBroker, org.apache.activemq.broker.region.Queue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/activemq/broker/jmx/DestinationView."<init>":(Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;Lorg/apache/activemq/broker/region/Destination;)V
       6: return

  public javax.management.openmbean.CompositeData getMessage(java.lang.String) throws javax.management.openmbean.OpenDataException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       6: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       9: aload_1
      10: invokevirtual #4                  // Method org/apache/activemq/broker/region/Queue.getMessage:(Ljava/lang/String;)Lorg/apache/activemq/broker/region/QueueMessageReference;
      13: astore_3
      14: aload_3
      15: ifnull        39
      18: aload_3
      19: invokeinterface #5,  1            // InterfaceMethod org/apache/activemq/broker/region/QueueMessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      24: astore        4
      26: aload         4
      28: ifnonnull     33
      31: aconst_null
      32: areturn
      33: aload         4
      35: invokestatic  #6                  // Method org/apache/activemq/broker/jmx/OpenTypeSupport.convert:(Ljava/lang/Object;)Ljavax/management/openmbean/CompositeData;
      38: astore_2
      39: aload_2
      40: areturn

  public void purge() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: invokevirtual #7                  // Method org/apache/activemq/broker/region/Queue.purge:()V
      10: return

  public boolean removeMessage(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: aload_1
       8: invokevirtual #8                  // Method org/apache/activemq/broker/region/Queue.removeMessage:(Ljava/lang/String;)Z
      11: ireturn

  public int removeMatchingMessages(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: aload_1
       8: invokevirtual #9                  // Method org/apache/activemq/broker/region/Queue.removeMatchingMessages:(Ljava/lang/String;)I
      11: ireturn

  public int removeMatchingMessages(java.lang.String, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: aload_1
       8: iload_2
       9: invokevirtual #10                 // Method org/apache/activemq/broker/region/Queue.removeMatchingMessages:(Ljava/lang/String;I)I
      12: ireturn

  public boolean copyMessageTo(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       4: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
       7: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      10: astore_3
      11: aload_2
      12: iconst_1
      13: invokestatic  #14                 // Method org/apache/activemq/command/ActiveMQDestination.createDestination:(Ljava/lang/String;B)Lorg/apache/activemq/command/ActiveMQDestination;
      16: astore        4
      18: aload_0
      19: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      22: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
      25: aload_3
      26: aload_1
      27: aload         4
      29: invokevirtual #15                 // Method org/apache/activemq/broker/region/Queue.copyMessageTo:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Lorg/apache/activemq/command/ActiveMQDestination;)Z
      32: ireturn

  public int copyMatchingMessagesTo(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       4: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
       7: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      10: astore_3
      11: aload_2
      12: iconst_1
      13: invokestatic  #14                 // Method org/apache/activemq/command/ActiveMQDestination.createDestination:(Ljava/lang/String;B)Lorg/apache/activemq/command/ActiveMQDestination;
      16: astore        4
      18: aload_0
      19: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      22: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
      25: aload_3
      26: aload_1
      27: aload         4
      29: invokevirtual #16                 // Method org/apache/activemq/broker/region/Queue.copyMatchingMessagesTo:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Lorg/apache/activemq/command/ActiveMQDestination;)I
      32: ireturn

  public int copyMatchingMessagesTo(java.lang.String, java.lang.String, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       4: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
       7: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      10: astore        4
      12: aload_2
      13: iconst_1
      14: invokestatic  #14                 // Method org/apache/activemq/command/ActiveMQDestination.createDestination:(Ljava/lang/String;B)Lorg/apache/activemq/command/ActiveMQDestination;
      17: astore        5
      19: aload_0
      20: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      23: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
      26: aload         4
      28: aload_1
      29: aload         5
      31: iload_3
      32: invokevirtual #17                 // Method org/apache/activemq/broker/region/Queue.copyMatchingMessagesTo:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Lorg/apache/activemq/command/ActiveMQDestination;I)I
      35: ireturn

  public boolean moveMessageTo(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       4: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
       7: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      10: astore_3
      11: aload_2
      12: iconst_1
      13: invokestatic  #14                 // Method org/apache/activemq/command/ActiveMQDestination.createDestination:(Ljava/lang/String;B)Lorg/apache/activemq/command/ActiveMQDestination;
      16: astore        4
      18: aload_0
      19: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      22: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
      25: aload_3
      26: aload_1
      27: aload         4
      29: invokevirtual #18                 // Method org/apache/activemq/broker/region/Queue.moveMessageTo:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Lorg/apache/activemq/command/ActiveMQDestination;)Z
      32: ireturn

  public int moveMatchingMessagesTo(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       4: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
       7: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      10: astore_3
      11: aload_2
      12: iconst_1
      13: invokestatic  #14                 // Method org/apache/activemq/command/ActiveMQDestination.createDestination:(Ljava/lang/String;B)Lorg/apache/activemq/command/ActiveMQDestination;
      16: astore        4
      18: aload_0
      19: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      22: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
      25: aload_3
      26: aload_1
      27: aload         4
      29: invokevirtual #19                 // Method org/apache/activemq/broker/region/Queue.moveMatchingMessagesTo:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Lorg/apache/activemq/command/ActiveMQDestination;)I
      32: ireturn

  public int moveMatchingMessagesTo(java.lang.String, java.lang.String, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       4: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
       7: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      10: astore        4
      12: aload_2
      13: iconst_1
      14: invokestatic  #14                 // Method org/apache/activemq/command/ActiveMQDestination.createDestination:(Ljava/lang/String;B)Lorg/apache/activemq/command/ActiveMQDestination;
      17: astore        5
      19: aload_0
      20: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      23: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
      26: aload         4
      28: aload_1
      29: aload         5
      31: iload_3
      32: invokevirtual #20                 // Method org/apache/activemq/broker/region/Queue.moveMatchingMessagesTo:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Lorg/apache/activemq/command/ActiveMQDestination;I)I
      35: ireturn

  public int retryMessages() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
       4: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
       7: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      10: astore_1
      11: aload_0
      12: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
      15: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
      18: aload_1
      19: ldc           #21                 // int 2147483647
      21: invokevirtual #22                 // Method org/apache/activemq/broker/region/Queue.retryMessages:(Lorg/apache/activemq/broker/ConnectionContext;I)I
      24: ireturn

  public boolean retryMessage(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #4                  // Method org/apache/activemq/broker/region/Queue.getMessage:(Ljava/lang/String;)Lorg/apache/activemq/broker/region/QueueMessageReference;
      13: astore_3
      14: aload_3
      15: invokeinterface #5,  1            // InterfaceMethod org/apache/activemq/broker/region/QueueMessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      20: astore        4
      22: aload         4
      24: ifnull        88
      27: aload         4
      29: invokevirtual #23                 // Method org/apache/activemq/command/Message.getOriginalDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      32: astore        5
      34: aload         5
      36: ifnull        61
      39: aload_0
      40: getfield      #11                 // Field broker:Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;
      43: invokevirtual #12                 // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.getContextBroker:()Lorg/apache/activemq/broker/Broker;
      46: invokestatic  #13                 // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
      49: astore        6
      51: aload_2
      52: aload         6
      54: aload_3
      55: aload         5
      57: invokevirtual #24                 // Method org/apache/activemq/broker/region/Queue.moveMessageTo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/QueueMessageReference;Lorg/apache/activemq/command/ActiveMQDestination;)Z
      60: ireturn
      61: new           #25                 // class javax/jms/JMSException
      64: dup
      65: new           #26                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #28                 // String No original destination for message:
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_1
      78: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #31                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: new           #25                 // class javax/jms/JMSException
      91: dup
      92: new           #26                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #32                 // String Could not find message:
     101: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_1
     105: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokespecial #31                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     114: athrow

  public int cursorSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        25
      15: aload_1
      16: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #34,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.size:()I
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean doesCursorHaveMessagesBuffered();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        25
      15: aload_1
      16: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #35,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.hasMessagesBufferedToDeliver:()Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean doesCursorHaveSpace();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        25
      15: aload_1
      16: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.hasSpace:()Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public long getCursorMemoryUsage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        43
      15: aload_1
      16: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      24: ifnull        43
      27: aload_1
      28: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      36: invokevirtual #38                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      39: invokevirtual #39                 // Method org/apache/activemq/usage/MemoryUsage.getUsage:()J
      42: lreturn
      43: lconst_0
      44: lreturn

  public int getCursorPercentUsage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        43
      15: aload_1
      16: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      24: ifnull        43
      27: aload_1
      28: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      36: invokevirtual #38                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      39: invokevirtual #40                 // Method org/apache/activemq/usage/MemoryUsage.getPercentUsage:()I
      42: ireturn
      43: iconst_0
      44: ireturn

  public boolean isCursorFull();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        25
      15: aload_1
      16: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #41,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.isFull:()Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean isCacheEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        25
      15: aload_1
      16: invokevirtual #33                 // Method org/apache/activemq/broker/region/Queue.getMessages:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.isCacheEnabled:()Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public java.util.Map<java.lang.String, java.lang.String> getMessageGroups();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #43                 // Method org/apache/activemq/broker/region/Queue.getMessageGroupOwners:()Lorg/apache/activemq/broker/region/group/MessageGroupMap;
      12: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/region/group/MessageGroupMap.getGroups:()Ljava/util/Map;
      17: areturn

  public java.lang.String getMessageGroupType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #43                 // Method org/apache/activemq/broker/region/Queue.getMessageGroupOwners:()Lorg/apache/activemq/broker/region/group/MessageGroupMap;
      12: invokeinterface #45,  1           // InterfaceMethod org/apache/activemq/broker/region/group/MessageGroupMap.getType:()Ljava/lang/String;
      17: areturn

  public void removeMessageGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_2
       8: aload_2
       9: invokevirtual #43                 // Method org/apache/activemq/broker/region/Queue.getMessageGroupOwners:()Lorg/apache/activemq/broker/region/group/MessageGroupMap;
      12: aload_1
      13: invokeinterface #46,  2           // InterfaceMethod org/apache/activemq/broker/region/group/MessageGroupMap.removeGroup:(Ljava/lang/String;)Lorg/apache/activemq/command/ConsumerId;
      18: pop
      19: return

  public void removeAllMessageGroups();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destination:Lorg/apache/activemq/broker/region/Destination;
       4: checkcast     #3                  // class org/apache/activemq/broker/region/Queue
       7: astore_1
       8: aload_1
       9: invokevirtual #43                 // Method org/apache/activemq/broker/region/Queue.getMessageGroupOwners:()Lorg/apache/activemq/broker/region/group/MessageGroupMap;
      12: invokeinterface #47,  1           // InterfaceMethod org/apache/activemq/broker/region/group/MessageGroupMap.removeAll:()V
      17: return
}
