Compiled from "BrokerFilter.java"
public class org.apache.activemq.broker.BrokerFilter implements org.apache.activemq.broker.Broker {
  protected final org.apache.activemq.broker.Broker next;

  public org.apache.activemq.broker.BrokerFilter(org.apache.activemq.broker.Broker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       9: return

  public org.apache.activemq.broker.Broker getAdaptor(java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #3                  // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: aload_0
       9: areturn
      10: aload_0
      11: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
      14: aload_1
      15: invokeinterface #4,  2            // InterfaceMethod org/apache/activemq/broker/Broker.getAdaptor:(Ljava/lang/Class;)Lorg/apache/activemq/broker/Broker;
      20: areturn

  public java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.region.Destination> getDestinationMap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/activemq/broker/Broker.getDestinationMap:()Ljava/util/Map;
       9: areturn

  public java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.region.Destination> getDestinationMap(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/apache/activemq/broker/Broker.getDestinationMap:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Map;
      10: areturn

  public java.util.Set<org.apache.activemq.broker.region.Destination> getDestinations(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/broker/Broker.getDestinations:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      10: areturn

  public void acknowledge(org.apache.activemq.broker.ConsumerBrokerExchange, org.apache.activemq.command.MessageAck) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #8,  3            // InterfaceMethod org/apache/activemq/broker/Broker.acknowledge:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/MessageAck;)V
      11: return

  public org.apache.activemq.command.Response messagePull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.MessagePull) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #9,  3            // InterfaceMethod org/apache/activemq/broker/Broker.messagePull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/MessagePull;)Lorg/apache/activemq/command/Response;
      11: areturn

  public void addConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #10,  3           // InterfaceMethod org/apache/activemq/broker/Broker.addConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;)V
      11: return

  public org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod org/apache/activemq/broker/Broker.addConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/broker/region/Subscription;
      11: areturn

  public void addProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod org/apache/activemq/broker/Broker.addProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      11: return

  public void commitTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #13,  4           // InterfaceMethod org/apache/activemq/broker/Broker.commitTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)V
      12: return

  public void removeSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.RemoveSubscriptionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #14,  3           // InterfaceMethod org/apache/activemq/broker/Broker.removeSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/RemoveSubscriptionInfo;)V
      11: return

  public org.apache.activemq.command.TransactionId[] getPreparedTransactions(org.apache.activemq.broker.ConnectionContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/broker/Broker.getPreparedTransactions:(Lorg/apache/activemq/broker/ConnectionContext;)[Lorg/apache/activemq/command/TransactionId;
      10: areturn

  public int prepareTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  3           // InterfaceMethod org/apache/activemq/broker/Broker.prepareTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)I
      11: ireturn

  public void removeConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #17,  4           // InterfaceMethod org/apache/activemq/broker/Broker.removeConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;Ljava/lang/Throwable;)V
      12: return

  public void removeConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  3           // InterfaceMethod org/apache/activemq/broker/Broker.removeConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)V
      11: return

  public void removeProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod org/apache/activemq/broker/Broker.removeProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      11: return

  public void rollbackTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #20,  3           // InterfaceMethod org/apache/activemq/broker/Broker.rollbackTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      11: return

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #21,  3           // InterfaceMethod org/apache/activemq/broker/Broker.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      11: return

  public void beginTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod org/apache/activemq/broker/Broker.beginTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      11: return

  public void forgetTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod org/apache/activemq/broker/Broker.forgetTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      11: return

  public org.apache.activemq.broker.Connection[] getClients() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #24,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getClients:()[Lorg/apache/activemq/broker/Connection;
       9: areturn

  public org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #25,  4           // InterfaceMethod org/apache/activemq/broker/Broker.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      12: areturn

  public void removeDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #26,  5           // InterfaceMethod org/apache/activemq/broker/Broker.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
      12: return

  public org.apache.activemq.command.ActiveMQDestination[] getDestinations() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #27,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getDestinations:()[Lorg/apache/activemq/command/ActiveMQDestination;
       9: areturn

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #28,  1           // InterfaceMethod org/apache/activemq/broker/Broker.start:()V
       9: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/broker/Broker.stop:()V
       9: return

  public void addSession(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.SessionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #30,  3           // InterfaceMethod org/apache/activemq/broker/Broker.addSession:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/SessionInfo;)V
      11: return

  public void removeSession(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.SessionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #31,  3           // InterfaceMethod org/apache/activemq/broker/Broker.removeSession:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/SessionInfo;)V
      11: return

  public org.apache.activemq.command.BrokerId getBrokerId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
       9: areturn

  public java.lang.String getBrokerName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #33,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerName:()Ljava/lang/String;
       9: areturn

  public void gc();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #34,  1           // InterfaceMethod org/apache/activemq/broker/Broker.gc:()V
       9: return

  public void addBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #35,  3           // InterfaceMethod org/apache/activemq/broker/Broker.addBroker:(Lorg/apache/activemq/broker/Connection;Lorg/apache/activemq/command/BrokerInfo;)V
      11: return

  public void removeBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #36,  3           // InterfaceMethod org/apache/activemq/broker/Broker.removeBroker:(Lorg/apache/activemq/broker/Connection;Lorg/apache/activemq/command/BrokerInfo;)V
      11: return

  public org.apache.activemq.command.BrokerInfo[] getPeerBrokerInfos();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getPeerBrokerInfos:()[Lorg/apache/activemq/command/BrokerInfo;
       9: areturn

  public void preProcessDispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod org/apache/activemq/broker/Broker.preProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      10: return

  public void postProcessDispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod org/apache/activemq/broker/Broker.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      10: return

  public void processDispatchNotification(org.apache.activemq.command.MessageDispatchNotification) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod org/apache/activemq/broker/Broker.processDispatchNotification:(Lorg/apache/activemq/command/MessageDispatchNotification;)V
      10: return

  public boolean isStopped();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #41,  1           // InterfaceMethod org/apache/activemq/broker/Broker.isStopped:()Z
       9: ireturn

  public java.util.Set<org.apache.activemq.command.ActiveMQDestination> getDurableDestinations();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getDurableDestinations:()Ljava/util/Set;
       9: areturn

  public void addDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #43,  3           // InterfaceMethod org/apache/activemq/broker/Broker.addDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
      11: return

  public void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #44,  3           // InterfaceMethod org/apache/activemq/broker/Broker.removeDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
      11: return

  public boolean isFaultTolerantConfiguration();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #45,  1           // InterfaceMethod org/apache/activemq/broker/Broker.isFaultTolerantConfiguration:()Z
       9: ireturn

  public org.apache.activemq.broker.ConnectionContext getAdminConnectionContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getAdminConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       9: areturn

  public void setAdminConnectionContext(org.apache.activemq.broker.ConnectionContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/broker/Broker.setAdminConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
      10: return

  public org.apache.activemq.store.PListStore getTempDataStore();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getTempDataStore:()Lorg/apache/activemq/store/PListStore;
       9: areturn

  public java.net.URI getVmConnectorURI();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getVmConnectorURI:()Ljava/net/URI;
       9: areturn

  public void brokerServiceStarted();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #50,  1           // InterfaceMethod org/apache/activemq/broker/Broker.brokerServiceStarted:()V
       9: return

  public org.apache.activemq.broker.BrokerService getBrokerService();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #51,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       9: areturn

  public boolean isExpired(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/broker/Broker.isExpired:(Lorg/apache/activemq/broker/region/MessageReference;)Z
      10: ireturn

  public void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #53,  4           // InterfaceMethod org/apache/activemq/broker/Broker.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;)V
      12: return

  public boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #54,  5           // InterfaceMethod org/apache/activemq/broker/Broker.sendToDeadLetterQueue:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;Ljava/lang/Throwable;)Z
      14: ireturn

  public org.apache.activemq.broker.Broker getRoot();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getRoot:()Lorg/apache/activemq/broker/Broker;
       9: areturn

  public long getBrokerSequenceId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerSequenceId:()J
       9: lreturn

  public void fastProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo, org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #57,  4           // InterfaceMethod org/apache/activemq/broker/Broker.fastProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;Lorg/apache/activemq/command/ActiveMQDestination;)V
      12: return

  public void isFull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.usage.Usage);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #58,  4           // InterfaceMethod org/apache/activemq/broker/Broker.isFull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/usage/Usage;)V
      12: return

  public void messageConsumed(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #59,  3           // InterfaceMethod org/apache/activemq/broker/Broker.messageConsumed:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
      11: return

  public void messageDelivered(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #60,  3           // InterfaceMethod org/apache/activemq/broker/Broker.messageDelivered:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
      11: return

  public void messageDiscarded(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #61,  4           // InterfaceMethod org/apache/activemq/broker/Broker.messageDiscarded:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
      12: return

  public void slowConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #62,  4           // InterfaceMethod org/apache/activemq/broker/Broker.slowConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/broker/region/Subscription;)V
      12: return

  public void nowMasterBroker();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/broker/Broker.nowMasterBroker:()V
       9: return

  public void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange, org.apache.activemq.command.ConsumerControl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: invokeinterface #64,  3           // InterfaceMethod org/apache/activemq/broker/Broker.processConsumerControl:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/ConsumerControl;)V
      11: return

  public void reapplyInterceptor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #65,  1           // InterfaceMethod org/apache/activemq/broker/Broker.reapplyInterceptor:()V
       9: return

  public org.apache.activemq.thread.Scheduler getScheduler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getScheduler:()Lorg/apache/activemq/thread/Scheduler;
       9: areturn

  public java.util.concurrent.ThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
       9: areturn

  public void networkBridgeStarted(org.apache.activemq.command.BrokerInfo, boolean, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokeinterface #68,  4           // InterfaceMethod org/apache/activemq/broker/Broker.networkBridgeStarted:(Lorg/apache/activemq/command/BrokerInfo;ZLjava/lang/String;)V
      12: return

  public void networkBridgeStopped(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: invokeinterface #69,  2           // InterfaceMethod org/apache/activemq/broker/Broker.networkBridgeStopped:(Lorg/apache/activemq/command/BrokerInfo;)V
      10: return
}
