Compiled from "FixedCountSubscriptionRecoveryPolicy.java"
public class org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy implements org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy {
  private volatile org.apache.activemq.broker.region.MessageReference[] messages;

  private int maximumSize;

  private int tail;

  public org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        100
       7: putfield      #2                  // Field maximumSize:I
      10: return

  public org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy copy();
    Code:
       0: new           #3                  // class org/apache/activemq/broker/region/policy/FixedCountSubscriptionRecoveryPolicy
       3: dup
       4: invokespecial #4                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field maximumSize:I
      13: invokevirtual #5                  // Method setMaximumSize:(I)V
      16: aload_1
      17: areturn

  public synchronized boolean add(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
       4: aload_0
       5: dup
       6: getfield      #7                  // Field tail:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #7                  // Field tail:I
      15: aload_2
      16: aastore
      17: aload_0
      18: getfield      #7                  // Field tail:I
      21: aload_0
      22: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      25: arraylength
      26: if_icmplt     34
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field tail:I
      34: iconst_1
      35: ireturn

  public synchronized void recover(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Topic, org.apache.activemq.broker.region.SubscriptionRecovery) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field tail:I
       4: istore        4
       6: aload_0
       7: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      10: iload         4
      12: aaload
      13: ifnonnull     19
      16: iconst_0
      17: istore        4
      19: aload_0
      20: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      23: iload         4
      25: aaload
      26: ifnonnull     30
      29: return
      30: aload_0
      31: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      34: iload         4
      36: aaload
      37: astore        5
      39: aload_3
      40: aload_1
      41: aload         5
      43: invokeinterface #8,  3            // InterfaceMethod org/apache/activemq/broker/region/SubscriptionRecovery.addRecoveredMessage:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)Z
      48: pop
      49: iinc          4, 1
      52: iload         4
      54: aload_0
      55: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      58: arraylength
      59: if_icmplt     65
      62: iconst_0
      63: istore        4
      65: iload         4
      67: aload_0
      68: getfield      #7                  // Field tail:I
      71: if_icmpne     30
      74: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field maximumSize:I
       5: anewarray     #9                  // class org/apache/activemq/broker/region/MessageReference
       8: putfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      11: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
       5: return

  public int getMaximumSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maximumSize:I
       4: ireturn

  public void setMaximumSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maximumSize:I
       5: return

  public synchronized org.apache.activemq.command.Message[] browse(org.apache.activemq.command.ActiveMQDestination) throws java.lang.Exception;
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokestatic  #12                 // Method org/apache/activemq/filter/DestinationFilter.parseFilter:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/filter/DestinationFilter;
      12: astore_3
      13: aload_0
      14: getfield      #7                  // Field tail:I
      17: istore        4
      19: aload_0
      20: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      23: iload         4
      25: aaload
      26: ifnonnull     32
      29: iconst_0
      30: istore        4
      32: aload_0
      33: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      36: iload         4
      38: aaload
      39: ifnull        106
      42: aload_0
      43: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      46: iload         4
      48: aaload
      49: astore        5
      51: aload         5
      53: invokeinterface #13,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      58: astore        6
      60: aload_3
      61: aload         6
      63: invokevirtual #14                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      66: invokevirtual #15                 // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      69: ifeq          81
      72: aload_2
      73: aload         6
      75: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      80: pop
      81: iinc          4, 1
      84: iload         4
      86: aload_0
      87: getfield      #6                  // Field messages:[Lorg/apache/activemq/broker/region/MessageReference;
      90: arraylength
      91: if_icmplt     97
      94: iconst_0
      95: istore        4
      97: iload         4
      99: aload_0
     100: getfield      #7                  // Field tail:I
     103: if_icmpne     42
     106: aload_2
     107: aload_2
     108: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     113: anewarray     #18                 // class org/apache/activemq/command/Message
     116: invokeinterface #19,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     121: checkcast     #20                 // class "[Lorg/apache/activemq/command/Message;"
     124: areturn

  public void setBroker(org.apache.activemq.broker.Broker);
    Code:
       0: return
}
