Compiled from "AbstractStoreCursor.java"
public abstract class org.apache.activemq.broker.region.cursors.AbstractStoreCursor extends org.apache.activemq.broker.region.cursors.AbstractPendingMessageCursor implements org.apache.activemq.store.MessageRecoveryListener {
  private static final org.slf4j.Logger LOG;

  protected final org.apache.activemq.broker.region.Destination regionDestination;

  protected final org.apache.activemq.broker.region.cursors.PendingList batchList;

  private java.util.Iterator<org.apache.activemq.broker.region.MessageReference> iterator;

  protected boolean batchResetNeeded;

  private boolean storeHasMessages;

  protected int size;

  private org.apache.activemq.command.MessageId lastCachedId;

  private org.apache.activemq.command.TransactionId lastTx;

  protected boolean hadSpace;

  final java.util.LinkedList<org.apache.activemq.command.Message> duplicatesFromStore;

  protected org.apache.activemq.broker.region.cursors.AbstractStoreCursor(org.apache.activemq.broker.region.Destination);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        14
       5: aload_1
       6: invokeinterface #1,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.isPrioritizedMessages:()Z
      11: goto          15
      14: iconst_0
      15: invokespecial #2                  // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor."<init>":(Z)V
      18: aload_0
      19: aconst_null
      20: putfield      #3                  // Field iterator:Ljava/util/Iterator;
      23: aload_0
      24: iconst_0
      25: putfield      #4                  // Field batchResetNeeded:Z
      28: aload_0
      29: iconst_0
      30: putfield      #5                  // Field storeHasMessages:Z
      33: aload_0
      34: iconst_0
      35: putfield      #6                  // Field hadSpace:Z
      38: aload_0
      39: new           #7                  // class java/util/LinkedList
      42: dup
      43: invokespecial #8                  // Method java/util/LinkedList."<init>":()V
      46: putfield      #9                  // Field duplicatesFromStore:Ljava/util/LinkedList;
      49: aload_0
      50: aload_1
      51: putfield      #10                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      54: aload_0
      55: getfield      #11                 // Field prioritizedMessages:Z
      58: ifeq          75
      61: aload_0
      62: new           #12                 // class org/apache/activemq/broker/region/cursors/PrioritizedPendingList
      65: dup
      66: invokespecial #13                 // Method org/apache/activemq/broker/region/cursors/PrioritizedPendingList."<init>":()V
      69: putfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      72: goto          86
      75: aload_0
      76: new           #15                 // class org/apache/activemq/broker/region/cursors/OrderedPendingList
      79: dup
      80: invokespecial #16                 // Method org/apache/activemq/broker/region/cursors/OrderedPendingList."<init>":()V
      83: putfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      86: return

  public final synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method isStarted:()Z
       4: ifne          42
       7: aload_0
       8: invokespecial #18                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.start:()V
      11: aload_0
      12: invokevirtual #19                 // Method resetBatch:()V
      15: aload_0
      16: invokevirtual #20                 // Method resetSize:()V
      19: aload_0
      20: aload_0
      21: getfield      #5                  // Field storeHasMessages:Z
      24: ifne          38
      27: aload_0
      28: getfield      #21                 // Field useCache:Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokevirtual #22                 // Method setCacheEnabled:(Z)V
      42: return

  protected void resetSize();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getStoreSize:()I
       5: putfield      #24                 // Field size:I
       8: aload_0
       9: aload_0
      10: getfield      #24                 // Field size:I
      13: ifle          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: putfield      #5                  // Field storeHasMessages:Z
      24: return

  public void rebase();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method resetSize:()V
       4: return

  public final synchronized void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method resetBatch:()V
       4: aload_0
       5: invokespecial #25                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.stop:()V
       8: aload_0
       9: invokevirtual #26                 // Method gc:()V
      12: return

  public final boolean recoverMessage(org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #27                 // Method recoverMessage:(Lorg/apache/activemq/command/Message;Z)Z
       6: ireturn

  public synchronized boolean recoverMessage(org.apache.activemq.command.Message, boolean) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: aload_1
       4: invokevirtual #28                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
       7: invokevirtual #29                 // Method recordUniqueId:(Lorg/apache/activemq/command/MessageId;)Z
      10: ifeq          74
      13: iload_2
      14: ifne          43
      17: aload_1
      18: aload_0
      19: getfield      #10                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      22: invokevirtual #30                 // Method org/apache/activemq/command/Message.setRegionDestination:(Lorg/apache/activemq/command/Message$MessageDestination;)V
      25: aload_1
      26: invokevirtual #31                 // Method org/apache/activemq/command/Message.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      29: ifnonnull     43
      32: aload_1
      33: aload_0
      34: invokevirtual #32                 // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      37: invokevirtual #33                 // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      40: invokevirtual #34                 // Method org/apache/activemq/command/Message.setMemoryUsage:(Lorg/apache/activemq/usage/MemoryUsage;)V
      43: aload_1
      44: invokevirtual #35                 // Method org/apache/activemq/command/Message.incrementReferenceCount:()I
      47: pop
      48: aload_0
      49: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      52: aload_1
      53: invokeinterface #36,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      58: pop
      59: aload_0
      60: iconst_1
      61: invokespecial #37                 // Method clearIterator:(Z)V
      64: iconst_1
      65: istore_3
      66: aload_0
      67: iconst_1
      68: putfield      #5                  // Field storeHasMessages:Z
      71: goto          194
      74: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
      77: invokeinterface #39,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      82: ifeq          152
      85: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
      88: new           #40                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      95: aload_0
      96: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      99: ldc           #43                 // String  - cursor got duplicate:
     101: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_1
     105: invokevirtual #28                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     108: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: ldc           #45                 // String ,
     113: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_1
     117: invokevirtual #46                 // Method org/apache/activemq/command/Message.getPriority:()B
     120: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     123: ldc           #48                 // String , cached=
     125: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: iload_2
     129: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     132: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: new           #51                 // class java/lang/Throwable
     138: dup
     139: ldc           #52                 // String duplicate message detected
     141: invokespecial #53                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
     144: invokeinterface #54,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     149: goto          175
     152: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
     155: ldc           #55                 // String {} - cursor got duplicate {}
     157: aload_0
     158: getfield      #10                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
     161: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     166: aload_1
     167: invokevirtual #28                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     170: invokeinterface #57,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     175: iload_2
     176: ifeq          189
     179: aload_1
     180: invokevirtual #28                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     183: invokevirtual #58                 // Method org/apache/activemq/command/MessageId.getEntryLocator:()Ljava/lang/Object;
     186: ifnull        194
     189: aload_0
     190: aload_1
     191: invokespecial #59                 // Method duplicate:(Lorg/apache/activemq/command/Message;)V
     194: iload_3
     195: ireturn

  private void duplicate(org.apache.activemq.command.Message);
    Code:
       0: aload_0
       1: getfield      #9                  // Field duplicatesFromStore:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #60                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  void dealWithDuplicates();
    Code:
       0: aload_0
       1: getfield      #9                  // Field duplicatesFromStore:Ljava/util/LinkedList;
       4: invokevirtual #61                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          44
      17: aload_1
      18: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #64                 // class org/apache/activemq/command/Message
      26: astore_2
      27: aload_0
      28: getfield      #10                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      31: aload_2
      32: aload_0
      33: invokevirtual #65                 // Method getSubscription:()Lorg/apache/activemq/broker/region/Subscription;
      36: invokeinterface #66,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.duplicateFromStore:(Lorg/apache/activemq/command/Message;Lorg/apache/activemq/broker/region/Subscription;)V
      41: goto          8
      44: aload_0
      45: getfield      #9                  // Field duplicatesFromStore:Ljava/util/LinkedList;
      48: invokevirtual #67                 // Method java/util/LinkedList.clear:()V
      51: return

  public final synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
       9: ifeq          41
      12: aload_0
      13: invokevirtual #69                 // Method fillBatch:()V
      16: goto          41
      19: astore_1
      20: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
      23: ldc           #71                 // String {} - Failed to fill batch
      25: aload_0
      26: aload_1
      27: invokeinterface #72,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: new           #73                 // class java/lang/RuntimeException
      35: dup
      36: aload_1
      37: invokespecial #74                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: iconst_1
      43: invokespecial #37                 // Method clearIterator:(Z)V
      46: aload_0
      47: invokevirtual #75                 // Method size:()I
      50: pop
      51: return
    Exception table:
       from    to  target type
          12    16    19   Class java/lang/Exception

  public synchronized void release();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #37                 // Method clearIterator:(Z)V
       5: return

  private synchronized void clearIterator(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iterator:Ljava/util/Iterator;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_2
      13: aload_0
      14: aconst_null
      15: putfield      #3                  // Field iterator:Ljava/util/Iterator;
      18: iload_2
      19: ifeq          30
      22: iload_1
      23: ifeq          30
      26: aload_0
      27: invokespecial #76                 // Method ensureIterator:()V
      30: return

  private synchronized void ensureIterator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iterator:Ljava/util/Iterator;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      12: invokeinterface #77,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
      17: putfield      #3                  // Field iterator:Ljava/util/Iterator;
      20: return

  public final void finished();
    Code:
       0: return

  public final synchronized boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
       9: ifeq          41
      12: aload_0
      13: invokevirtual #69                 // Method fillBatch:()V
      16: goto          41
      19: astore_1
      20: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
      23: ldc           #71                 // String {} - Failed to fill batch
      25: aload_0
      26: aload_1
      27: invokeinterface #72,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: new           #73                 // class java/lang/RuntimeException
      35: dup
      36: aload_1
      37: invokespecial #74                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: invokespecial #76                 // Method ensureIterator:()V
      45: aload_0
      46: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      49: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ireturn
    Exception table:
       from    to  target type
          12    16    19   Class java/lang/Exception

  public final synchronized org.apache.activemq.broker.region.MessageReference next();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       6: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
      11: ifne          39
      14: aload_0
      15: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      18: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          39
      26: aload_0
      27: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      30: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #78                 // class org/apache/activemq/broker/region/MessageReference
      38: astore_1
      39: aload_0
      40: aload_1
      41: putfield      #79                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      44: aload_1
      45: ifnull        55
      48: aload_1
      49: invokeinterface #80,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.incrementReferenceCount:()I
      54: pop
      55: aload_1
      56: areturn

  public final synchronized void addMessageLast(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #81                 // Method hasSpace:()Z
       6: ifeq          111
       9: aload_0
      10: invokevirtual #82                 // Method isCacheEnabled:()Z
      13: ifne          59
      16: aload_0
      17: getfield      #24                 // Field size:I
      20: ifne          59
      23: aload_0
      24: invokevirtual #17                 // Method isStarted:()Z
      27: ifeq          59
      30: aload_0
      31: getfield      #21                 // Field useCache:Z
      34: ifeq          59
      37: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
      40: ldc           #83                 // String {} - enabling cache for empty store {}
      42: aload_0
      43: aload_1
      44: invokeinterface #84,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
      49: invokeinterface #85,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      54: aload_0
      55: iconst_1
      56: invokevirtual #22                 // Method setCacheEnabled:(Z)V
      59: aload_0
      60: invokevirtual #82                 // Method isCacheEnabled:()Z
      63: ifeq          113
      66: aload_0
      67: aload_1
      68: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      73: iconst_1
      74: invokevirtual #27                 // Method recoverMessage:(Lorg/apache/activemq/command/Message;Z)Z
      77: ifeq          106
      80: aload_0
      81: aload_1
      82: invokeinterface #84,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
      87: putfield      #87                 // Field lastCachedId:Lorg/apache/activemq/command/MessageId;
      90: aload_0
      91: aload_1
      92: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      97: invokevirtual #88                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     100: putfield      #89                 // Field lastTx:Lorg/apache/activemq/command/TransactionId;
     103: goto          113
     106: aload_0
     107: invokevirtual #90                 // Method dealWithDuplicates:()V
     110: return
     111: iconst_1
     112: istore_2
     113: iload_2
     114: ifeq          223
     117: aload_0
     118: invokevirtual #82                 // Method isCacheEnabled:()Z
     121: ifeq          223
     124: aload_0
     125: iconst_0
     126: invokevirtual #22                 // Method setCacheEnabled:(Z)V
     129: aload_0
     130: getfield      #87                 // Field lastCachedId:Lorg/apache/activemq/command/MessageId;
     133: ifnull        223
     136: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
     139: ldc           #91                 // String {} - disabling cache, lastCachedId: {} last-tx: {} current node Id: {} node-tx: {} batchList size: {}
     141: bipush        6
     143: anewarray     #92                 // class java/lang/Object
     146: dup
     147: iconst_0
     148: aload_0
     149: aastore
     150: dup
     151: iconst_1
     152: aload_0
     153: getfield      #87                 // Field lastCachedId:Lorg/apache/activemq/command/MessageId;
     156: aastore
     157: dup
     158: iconst_2
     159: aload_0
     160: getfield      #89                 // Field lastTx:Lorg/apache/activemq/command/TransactionId;
     163: aastore
     164: dup
     165: iconst_3
     166: aload_1
     167: invokeinterface #84,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
     172: aastore
     173: dup
     174: iconst_4
     175: aload_1
     176: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
     181: invokevirtual #88                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     184: aastore
     185: dup
     186: iconst_5
     187: aload_0
     188: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
     191: invokeinterface #93,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.size:()I
     196: invokestatic  #94                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     199: aastore
     200: invokeinterface #95,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     205: aload_0
     206: aload_0
     207: getfield      #87                 // Field lastCachedId:Lorg/apache/activemq/command/MessageId;
     210: invokevirtual #96                 // Method setBatch:(Lorg/apache/activemq/command/MessageId;)V
     213: aload_0
     214: aconst_null
     215: putfield      #87                 // Field lastCachedId:Lorg/apache/activemq/command/MessageId;
     218: aload_0
     219: aconst_null
     220: putfield      #89                 // Field lastTx:Lorg/apache/activemq/command/TransactionId;
     223: aload_0
     224: iconst_1
     225: putfield      #5                  // Field storeHasMessages:Z
     228: aload_0
     229: dup
     230: getfield      #24                 // Field size:I
     233: iconst_1
     234: iadd
     235: putfield      #24                 // Field size:I
     238: return

  protected void setBatch(org.apache.activemq.command.MessageId) throws java.lang.Exception;
    Code:
       0: return

  public synchronized void addMessageFirst(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #22                 // Method setCacheEnabled:(Z)V
       5: aload_0
       6: dup
       7: getfield      #24                 // Field size:I
      10: iconst_1
      11: iadd
      12: putfield      #24                 // Field size:I
      15: return

  public final synchronized void remove();
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field size:I
       5: iconst_1
       6: isub
       7: putfield      #24                 // Field size:I
      10: aload_0
      11: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      14: ifnull        26
      17: aload_0
      18: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      21: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.remove:()V
      26: aload_0
      27: getfield      #79                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      30: ifnull        43
      33: aload_0
      34: getfield      #79                 // Field last:Lorg/apache/activemq/broker/region/MessageReference;
      37: invokeinterface #98,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      42: pop
      43: return

  public final synchronized void remove(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: aload_1
       5: invokeinterface #99,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.remove:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      10: ifnull        28
      13: aload_0
      14: dup
      15: getfield      #24                 // Field size:I
      18: iconst_1
      19: isub
      20: putfield      #24                 // Field size:I
      23: aload_0
      24: iconst_0
      25: invokevirtual #22                 // Method setCacheEnabled:(Z)V
      28: return

  public final synchronized void clear();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method gc:()V
       4: return

  public synchronized void gc();
    Code:
       0: aload_0
       1: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #77,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          49
      19: aload_1
      20: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #78                 // class org/apache/activemq/broker/region/MessageReference
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokeinterface #84,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
      36: invokevirtual #100                // Method rollback:(Lorg/apache/activemq/command/MessageId;)V
      39: aload_2
      40: invokeinterface #98,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.decrementReferenceCount:()I
      45: pop
      46: goto          10
      49: aload_0
      50: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      53: invokeinterface #101,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.clear:()V
      58: aload_0
      59: iconst_0
      60: invokespecial #37                 // Method clearIterator:(Z)V
      63: aload_0
      64: iconst_1
      65: putfield      #4                  // Field batchResetNeeded:Z
      68: aload_0
      69: iconst_0
      70: invokevirtual #22                 // Method setCacheEnabled:(Z)V
      73: return

  protected final synchronized void fillBatch();
    Code:
       0: aload_0
       1: getfield      #4                  // Field batchResetNeeded:Z
       4: ifeq          40
       7: aload_0
       8: invokevirtual #20                 // Method resetSize:()V
      11: aload_0
      12: aload_0
      13: getfield      #10                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      16: invokeinterface #102,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxPageSize:()I
      21: aload_0
      22: getfield      #24                 // Field size:I
      25: invokestatic  #103                // Method java/lang/Math.min:(II)I
      28: invokevirtual #104                // Method setMaxBatchSize:(I)V
      31: aload_0
      32: invokevirtual #19                 // Method resetBatch:()V
      35: aload_0
      36: iconst_0
      37: putfield      #4                  // Field batchResetNeeded:Z
      40: aload_0
      41: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      44: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
      49: ifeq          123
      52: aload_0
      53: getfield      #5                  // Field storeHasMessages:Z
      56: ifeq          123
      59: aload_0
      60: getfield      #24                 // Field size:I
      63: ifle          123
      66: aload_0
      67: invokevirtual #105                // Method doFillBatch:()V
      70: goto          95
      73: astore_1
      74: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
      77: ldc           #71                 // String {} - Failed to fill batch
      79: aload_0
      80: aload_1
      81: invokeinterface #72,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      86: new           #73                 // class java/lang/RuntimeException
      89: dup
      90: aload_1
      91: invokespecial #74                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      94: athrow
      95: aload_0
      96: aload_0
      97: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
     100: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
     105: ifeq          115
     108: aload_0
     109: getfield      #6                  // Field hadSpace:Z
     112: ifne          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: putfield      #5                  // Field storeHasMessages:Z
     123: return
    Exception table:
       from    to  target type
          66    70    73   Class java/lang/Exception

  public final synchronized boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #24                 // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final synchronized boolean hasMessagesBufferedToDeliver();
    Code:
       0: aload_0
       1: getfield      #14                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public final synchronized int size();
    Code:
       0: aload_0
       1: getfield      #24                 // Field size:I
       4: ifge          15
       7: aload_0
       8: aload_0
       9: invokevirtual #23                 // Method getStoreSize:()I
      12: putfield      #24                 // Field size:I
      15: aload_0
      16: getfield      #24                 // Field size:I
      19: ireturn

  public java.lang.String toString();
    Code:
       0: new           #40                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #106                // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #107                // String :
      16: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #10                 // Field regionDestination:Lorg/apache/activemq/broker/region/Destination;
      23: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      28: invokevirtual #108                // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      31: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #109                // String ,batchResetNeeded=
      36: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #4                  // Field batchResetNeeded:Z
      43: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      46: ldc           #110                // String ,storeHasMessages=
      48: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #5                  // Field storeHasMessages:Z
      55: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      58: ldc           #111                // String ,size=
      60: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #24                 // Field size:I
      67: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: ldc           #112                // String ,cacheEnabled=
      72: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #82                 // Method isCacheEnabled:()Z
      79: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      82: ldc           #113                // String ,maxBatchSize:
      84: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #114                // Field maxBatchSize:I
      91: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: ldc           #115                // String ,hasSpace:
      96: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: invokevirtual #81                 // Method hasSpace:()Z
     103: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     106: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: areturn

  protected abstract void doFillBatch() throws java.lang.Exception;

  protected abstract void resetBatch();

  protected abstract int getStoreSize();

  protected abstract boolean isStoreEmpty();

  public org.apache.activemq.broker.region.Subscription getSubscription();
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: ldc_w         #116                // class org/apache/activemq/broker/region/cursors/AbstractStoreCursor
       3: invokestatic  #117                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
