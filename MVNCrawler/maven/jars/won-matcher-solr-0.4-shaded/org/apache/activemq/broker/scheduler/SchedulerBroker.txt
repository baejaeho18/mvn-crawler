Compiled from "SchedulerBroker.java"
public class org.apache.activemq.broker.scheduler.SchedulerBroker extends org.apache.activemq.broker.BrokerFilter implements org.apache.activemq.broker.scheduler.JobListener {
  private static final org.slf4j.Logger LOG;

  private static final org.apache.activemq.util.IdGenerator ID_GENERATOR;

  private final org.apache.activemq.util.LongSequenceGenerator messageIdGenerator;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private final org.apache.activemq.wireformat.WireFormat wireFormat;

  private final org.apache.activemq.broker.ConnectionContext context;

  private final org.apache.activemq.command.ProducerId producerId;

  private final org.apache.activemq.usage.SystemUsage systemUsage;

  private final org.apache.activemq.broker.scheduler.JobSchedulerStore store;

  private org.apache.activemq.broker.scheduler.JobScheduler scheduler;

  public org.apache.activemq.broker.scheduler.SchedulerBroker(org.apache.activemq.broker.BrokerService, org.apache.activemq.broker.Broker, org.apache.activemq.broker.scheduler.JobSchedulerStore) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #2                  // Method org/apache/activemq/broker/BrokerFilter."<init>":(Lorg/apache/activemq/broker/Broker;)V
       5: aload_0
       6: new           #3                  // class org/apache/activemq/util/LongSequenceGenerator
       9: dup
      10: invokespecial #4                  // Method org/apache/activemq/util/LongSequenceGenerator."<init>":()V
      13: putfield      #5                  // Field messageIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      16: aload_0
      17: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      24: putfield      #8                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: new           #9                  // class org/apache/activemq/openwire/OpenWireFormat
      31: dup
      32: invokespecial #10                 // Method org/apache/activemq/openwire/OpenWireFormat."<init>":()V
      35: putfield      #11                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
      38: aload_0
      39: new           #12                 // class org/apache/activemq/broker/ConnectionContext
      42: dup
      43: invokespecial #13                 // Method org/apache/activemq/broker/ConnectionContext."<init>":()V
      46: putfield      #14                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      49: aload_0
      50: new           #15                 // class org/apache/activemq/command/ProducerId
      53: dup
      54: invokespecial #16                 // Method org/apache/activemq/command/ProducerId."<init>":()V
      57: putfield      #17                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
      60: aload_0
      61: aload_3
      62: putfield      #18                 // Field store:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      65: aload_0
      66: getfield      #17                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
      69: getstatic     #19                 // Field ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
      72: invokevirtual #20                 // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      75: invokevirtual #21                 // Method org/apache/activemq/command/ProducerId.setConnectionId:(Ljava/lang/String;)V
      78: aload_0
      79: getfield      #14                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      82: getstatic     #22                 // Field org/apache/activemq/security/SecurityContext.BROKER_SECURITY_CONTEXT:Lorg/apache/activemq/security/SecurityContext;
      85: invokevirtual #23                 // Method org/apache/activemq/broker/ConnectionContext.setSecurityContext:(Lorg/apache/activemq/security/SecurityContext;)V
      88: aload_0
      89: getfield      #14                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      92: aload_2
      93: invokevirtual #24                 // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
      96: aload_0
      97: aload_1
      98: invokevirtual #25                 // Method org/apache/activemq/broker/BrokerService.getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
     101: putfield      #26                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     104: aload_0
     105: getfield      #11                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
     108: aload_1
     109: invokevirtual #27                 // Method org/apache/activemq/broker/BrokerService.getStoreOpenWireVersion:()I
     112: invokeinterface #28,  2           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.setVersion:(I)V
     117: return

  public synchronized org.apache.activemq.broker.scheduler.JobScheduler getJobScheduler() throws java.lang.Exception;
    Code:
       0: new           #29                 // class org/apache/activemq/broker/scheduler/JobSchedulerFacade
       3: dup
       4: aload_0
       5: invokespecial #30                 // Method org/apache/activemq/broker/scheduler/JobSchedulerFacade."<init>":(Lorg/apache/activemq/broker/scheduler/SchedulerBroker;)V
       8: areturn

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: invokevirtual #32                 // Method getInternalScheduler:()Lorg/apache/activemq/broker/scheduler/JobScheduler;
      12: pop
      13: aload_0
      14: invokespecial #33                 // Method org/apache/activemq/broker/BrokerFilter.start:()V
      17: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          50
      12: aload_0
      13: getfield      #18                 // Field store:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      16: ifnull        28
      19: aload_0
      20: getfield      #18                 // Field store:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      23: invokeinterface #35,  1           // InterfaceMethod org/apache/activemq/broker/scheduler/JobSchedulerStore.stop:()V
      28: aload_0
      29: getfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      32: ifnull        50
      35: aload_0
      36: getfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      39: aload_0
      40: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.removeListener:(Lorg/apache/activemq/broker/scheduler/JobListener;)V
      45: aload_0
      46: aconst_null
      47: putfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      50: aload_0
      51: invokespecial #38                 // Method org/apache/activemq/broker/BrokerFilter.stop:()V
      54: return

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       4: astore_3
       5: aload_2
       6: ldc           #40                 // String scheduledJobId
       8: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #42                 // class java/lang/String
      14: astore        4
      16: aload_2
      17: ldc           #43                 // String AMQ_SCHEDULED_CRON
      19: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      22: astore        5
      24: aload_2
      25: ldc           #44                 // String AMQ_SCHEDULED_PERIOD
      27: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      30: astore        6
      32: aload_2
      33: ldc           #45                 // String AMQ_SCHEDULED_DELAY
      35: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      38: astore        7
      40: aload_2
      41: invokevirtual #46                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      44: invokevirtual #47                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      47: astore        8
      49: aload         8
      51: iconst_1
      52: iconst_0
      53: ldc           #48                 // String ActiveMQ.Scheduler.Management
      55: iconst_0
      56: ldc           #48                 // String ActiveMQ.Scheduler.Management
      58: invokevirtual #49                 // Method java/lang/String.length:()I
      61: invokevirtual #50                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      64: istore        9
      66: iload         9
      68: iconst_1
      69: if_icmpne     385
      72: aload_0
      73: invokevirtual #32                 // Method getInternalScheduler:()Lorg/apache/activemq/broker/scheduler/JobScheduler;
      76: astore        10
      78: aload_2
      79: invokevirtual #51                 // Method org/apache/activemq/command/Message.getReplyTo:()Lorg/apache/activemq/command/ActiveMQDestination;
      82: astore        11
      84: aload_2
      85: ldc           #52                 // String AMQ_SCHEDULER_ACTION
      87: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      90: checkcast     #42                 // class java/lang/String
      93: astore        12
      95: aload         12
      97: ifnull        382
     100: aload_2
     101: ldc           #53                 // String ACTION_START_TIME
     103: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
     106: astore        13
     108: aload_2
     109: ldc           #54                 // String ACTION_END_TIME
     111: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
     114: astore        14
     116: aload         11
     118: ifnull        282
     121: aload         12
     123: ldc           #55                 // String BROWSE
     125: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifeq          282
     131: aload         13
     133: ifnull        231
     136: aload         14
     138: ifnull        231
     141: aload         13
     143: ldc_w         #57                 // class java/lang/Long
     146: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     149: checkcast     #57                 // class java/lang/Long
     152: invokevirtual #59                 // Method java/lang/Long.longValue:()J
     155: lstore        15
     157: aload         14
     159: ldc_w         #57                 // class java/lang/Long
     162: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     165: checkcast     #57                 // class java/lang/Long
     168: invokevirtual #59                 // Method java/lang/Long.longValue:()J
     171: lstore        17
     173: aload         10
     175: lload         15
     177: lload         17
     179: invokeinterface #60,  5           // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.getAllJobs:(JJ)Ljava/util/List;
     184: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     189: astore        19
     191: aload         19
     193: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     198: ifeq          228
     201: aload         19
     203: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     208: checkcast     #64                 // class org/apache/activemq/broker/scheduler/Job
     211: astore        20
     213: aload_0
     214: aload_1
     215: invokevirtual #39                 // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
     218: aload         20
     220: aload         11
     222: invokevirtual #65                 // Method sendScheduledJob:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/scheduler/Job;Lorg/apache/activemq/command/ActiveMQDestination;)V
     225: goto          191
     228: goto          282
     231: aload         10
     233: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.getAllJobs:()Ljava/util/List;
     238: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     243: astore        15
     245: aload         15
     247: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     252: ifeq          282
     255: aload         15
     257: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     262: checkcast     #64                 // class org/apache/activemq/broker/scheduler/Job
     265: astore        16
     267: aload_0
     268: aload_1
     269: invokevirtual #39                 // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
     272: aload         16
     274: aload         11
     276: invokevirtual #65                 // Method sendScheduledJob:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/scheduler/Job;Lorg/apache/activemq/command/ActiveMQDestination;)V
     279: goto          245
     282: aload         4
     284: ifnull        309
     287: aload         12
     289: ldc           #67                 // String REMOVE
     291: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     294: ifeq          309
     297: aload         10
     299: aload         4
     301: invokeinterface #68,  2           // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.remove:(Ljava/lang/String;)V
     306: goto          382
     309: aload         12
     311: ldc           #69                 // String REMOVEALL
     313: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     316: ifeq          382
     319: aload         13
     321: ifnull        375
     324: aload         14
     326: ifnull        375
     329: aload         13
     331: ldc_w         #57                 // class java/lang/Long
     334: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     337: checkcast     #57                 // class java/lang/Long
     340: invokevirtual #59                 // Method java/lang/Long.longValue:()J
     343: lstore        15
     345: aload         14
     347: ldc_w         #57                 // class java/lang/Long
     350: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     353: checkcast     #57                 // class java/lang/Long
     356: invokevirtual #59                 // Method java/lang/Long.longValue:()J
     359: lstore        17
     361: aload         10
     363: lload         15
     365: lload         17
     367: invokeinterface #70,  5           // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.removeAllJobs:(JJ)V
     372: goto          382
     375: aload         10
     377: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.removeAllJobs:()V
     382: goto          457
     385: aload         5
     387: ifnonnull     400
     390: aload         6
     392: ifnonnull     400
     395: aload         7
     397: ifnull        451
     400: aload         4
     402: ifnonnull     451
     405: aload_3
     406: invokevirtual #72                 // Method org/apache/activemq/broker/ConnectionContext.isInTransaction:()Z
     409: ifeq          437
     412: aload_3
     413: invokevirtual #73                 // Method org/apache/activemq/broker/ConnectionContext.getTransaction:()Lorg/apache/activemq/transaction/Transaction;
     416: new           #74                 // class org/apache/activemq/broker/scheduler/SchedulerBroker$1
     419: dup
     420: aload_0
     421: aload_2
     422: aload         5
     424: aload         6
     426: aload         7
     428: invokespecial #75                 // Method org/apache/activemq/broker/scheduler/SchedulerBroker$1."<init>":(Lorg/apache/activemq/broker/scheduler/SchedulerBroker;Lorg/apache/activemq/command/Message;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     431: invokevirtual #76                 // Method org/apache/activemq/transaction/Transaction.addSynchronization:(Lorg/apache/activemq/transaction/Synchronization;)V
     434: goto          457
     437: aload_0
     438: aload_2
     439: aload         5
     441: aload         6
     443: aload         7
     445: invokespecial #1                  // Method doSchedule:(Lorg/apache/activemq/command/Message;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     448: goto          457
     451: aload_0
     452: aload_1
     453: aload_2
     454: invokespecial #77                 // Method org/apache/activemq/broker/BrokerFilter.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
     457: return

  private void doSchedule(org.apache.activemq.command.Message, java.lang.Object, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: lconst_0
       1: lstore        5
       3: lconst_0
       4: lstore        7
       6: iconst_0
       7: istore        9
       9: ldc           #78                 // String
      11: astore        10
      13: aload_1
      14: invokevirtual #79                 // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      17: astore        11
      19: aload         11
      21: aconst_null
      22: invokevirtual #80                 // Method org/apache/activemq/command/Message.setTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      25: aload_0
      26: getfield      #11                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
      29: aload         11
      31: invokeinterface #81,  2           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.marshal:(Ljava/lang/Object;)Lorg/apache/activemq/util/ByteSequence;
      36: astore        12
      38: aload_2
      39: ifnull        48
      42: aload_2
      43: invokevirtual #82                 // Method java/lang/Object.toString:()Ljava/lang/String;
      46: astore        10
      48: aload_3
      49: ifnull        67
      52: aload_3
      53: ldc_w         #57                 // class java/lang/Long
      56: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      59: checkcast     #57                 // class java/lang/Long
      62: invokevirtual #59                 // Method java/lang/Long.longValue:()J
      65: lstore        7
      67: aload         4
      69: ifnull        88
      72: aload         4
      74: ldc_w         #57                 // class java/lang/Long
      77: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      80: checkcast     #57                 // class java/lang/Long
      83: invokevirtual #59                 // Method java/lang/Long.longValue:()J
      86: lstore        5
      88: aload         11
      90: ldc           #83                 // String AMQ_SCHEDULED_REPEAT
      92: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      95: astore        13
      97: aload         13
      99: ifnull        118
     102: aload         13
     104: ldc_w         #84                 // class java/lang/Integer
     107: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     110: checkcast     #84                 // class java/lang/Integer
     113: invokevirtual #85                 // Method java/lang/Integer.intValue:()I
     116: istore        9
     118: aload_0
     119: invokevirtual #32                 // Method getInternalScheduler:()Lorg/apache/activemq/broker/scheduler/JobScheduler;
     122: aload         11
     124: invokevirtual #86                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     127: invokevirtual #87                 // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
     130: new           #88                 // class org/apache/activemq/util/ByteSequence
     133: dup
     134: aload         12
     136: getfield      #89                 // Field org/apache/activemq/util/ByteSequence.data:[B
     139: aload         12
     141: getfield      #90                 // Field org/apache/activemq/util/ByteSequence.offset:I
     144: aload         12
     146: getfield      #91                 // Field org/apache/activemq/util/ByteSequence.length:I
     149: invokespecial #92                 // Method org/apache/activemq/util/ByteSequence."<init>":([BII)V
     152: aload         10
     154: lload         5
     156: lload         7
     158: iload         9
     160: invokeinterface #93,  9           // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.schedule:(Ljava/lang/String;Lorg/apache/activemq/util/ByteSequence;Ljava/lang/String;JJI)V
     165: return

  public void scheduledJob(java.lang.String, org.apache.activemq.util.ByteSequence);
    Code:
       0: new           #88                 // class org/apache/activemq/util/ByteSequence
       3: dup
       4: aload_2
       5: invokevirtual #94                 // Method org/apache/activemq/util/ByteSequence.getData:()[B
       8: aload_2
       9: invokevirtual #95                 // Method org/apache/activemq/util/ByteSequence.getOffset:()I
      12: aload_2
      13: invokevirtual #96                 // Method org/apache/activemq/util/ByteSequence.getLength:()I
      16: invokespecial #92                 // Method org/apache/activemq/util/ByteSequence."<init>":([BII)V
      19: astore_3
      20: aload_0
      21: getfield      #11                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
      24: aload_3
      25: invokeinterface #97,  2           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.unmarshal:(Lorg/apache/activemq/util/ByteSequence;)Ljava/lang/Object;
      30: checkcast     #98                 // class org/apache/activemq/command/Message
      33: astore        4
      35: aload         4
      37: aconst_null
      38: invokevirtual #99                 // Method org/apache/activemq/command/Message.setOriginalTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      41: aload         4
      43: ldc           #83                 // String AMQ_SCHEDULED_REPEAT
      45: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      48: astore        5
      50: aload         4
      52: ldc           #43                 // String AMQ_SCHEDULED_CRON
      54: invokevirtual #41                 // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      57: astore        6
      59: aload         6
      61: ifnull        72
      64: aload         6
      66: invokevirtual #82                 // Method java/lang/Object.toString:()Ljava/lang/String;
      69: goto          73
      72: aconst_null
      73: astore        7
      75: iconst_0
      76: istore        8
      78: aload         5
      80: ifnull        99
      83: aload         5
      85: ldc_w         #84                 // class java/lang/Integer
      88: invokestatic  #58                 // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      91: checkcast     #84                 // class java/lang/Integer
      94: invokevirtual #85                 // Method java/lang/Integer.intValue:()I
      97: istore        8
      99: aload_0
     100: getfield      #26                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     103: invokevirtual #100                // Method org/apache/activemq/usage/SystemUsage.getJobSchedulerUsage:()Lorg/apache/activemq/usage/JobSchedulerUsage;
     106: ifnull        314
     109: aload_0
     110: getfield      #26                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     113: invokevirtual #100                // Method org/apache/activemq/usage/SystemUsage.getJobSchedulerUsage:()Lorg/apache/activemq/usage/JobSchedulerUsage;
     116: astore        9
     118: aload         9
     120: invokevirtual #101                // Method org/apache/activemq/usage/JobSchedulerUsage.isFull:()Z
     123: ifeq          314
     126: new           #102                // class java/lang/StringBuilder
     129: dup
     130: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #104                // String Job Scheduler Store is Full (
     135: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload         9
     140: invokevirtual #106                // Method org/apache/activemq/usage/JobSchedulerUsage.getPercentUsage:()I
     143: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     146: ldc           #108                // String % of
     148: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload         9
     153: invokevirtual #109                // Method org/apache/activemq/usage/JobSchedulerUsage.getLimit:()J
     156: invokevirtual #110                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     159: ldc           #111                // String ). Stopping producer (
     161: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload         4
     166: invokevirtual #112                // Method org/apache/activemq/command/Message.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     169: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     172: ldc           #114                // String ) to prevent flooding of the job scheduler store.
     174: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: ldc           #115                // String  See http://activemq.apache.org/producer-flow-control.html for more info
     179: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: astore        10
     187: invokestatic  #117                // Method java/lang/System.currentTimeMillis:()J
     190: lstore        11
     192: lload         11
     194: lstore        13
     196: aload         9
     198: ldc2_w        #118                // long 1000l
     201: invokevirtual #120                // Method org/apache/activemq/usage/JobSchedulerUsage.waitForSpace:(J)Z
     204: ifne          314
     207: aload_0
     208: getfield      #14                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     211: invokevirtual #121                // Method org/apache/activemq/broker/ConnectionContext.getStopping:()Ljava/util/concurrent/atomic/AtomicBoolean;
     214: invokevirtual #122                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     217: ifeq          230
     220: new           #123                // class java/io/IOException
     223: dup
     224: ldc           #124                // String Connection closed, send aborted.
     226: invokespecial #125                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     229: athrow
     230: invokestatic  #117                // Method java/lang/System.currentTimeMillis:()J
     233: lstore        15
     235: lload         15
     237: lload         13
     239: lcmp
     240: iflt          311
     243: getstatic     #126                // Field LOG:Lorg/slf4j/Logger;
     246: new           #102                // class java/lang/StringBuilder
     249: dup
     250: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
     253: ldc           #78                 // String
     255: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: aload         9
     260: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     263: ldc           #127                // String :
     265: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload         10
     270: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: ldc           #128                // String  (blocking for:
     275: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: lload         15
     280: lload         11
     282: lsub
     283: ldc2_w        #118                // long 1000l
     286: ldiv
     287: invokevirtual #110                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     290: ldc           #129                // String s)
     292: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: invokeinterface #130,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     303: lload         15
     305: ldc2_w        #131                // long 30000l
     308: ladd
     309: lstore        13
     311: goto          196
     314: iload         8
     316: ifne          332
     319: aload         7
     321: ifnull        355
     324: aload         7
     326: invokevirtual #49                 // Method java/lang/String.length:()I
     329: ifle          355
     332: aload         4
     334: new           #133                // class org/apache/activemq/command/MessageId
     337: dup
     338: aload_0
     339: getfield      #17                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
     342: aload_0
     343: getfield      #5                  // Field messageIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
     346: invokevirtual #134                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
     349: invokespecial #135                // Method org/apache/activemq/command/MessageId."<init>":(Lorg/apache/activemq/command/ProducerId;J)V
     352: invokevirtual #136                // Method org/apache/activemq/command/Message.setMessageId:(Lorg/apache/activemq/command/MessageId;)V
     355: aload         4
     357: ldc           #40                 // String scheduledJobId
     359: aload_1
     360: invokevirtual #137                // Method org/apache/activemq/command/Message.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     363: aload         4
     365: ldc           #44                 // String AMQ_SCHEDULED_PERIOD
     367: invokevirtual #138                // Method org/apache/activemq/command/Message.removeProperty:(Ljava/lang/String;)V
     370: aload         4
     372: ldc           #45                 // String AMQ_SCHEDULED_DELAY
     374: invokevirtual #138                // Method org/apache/activemq/command/Message.removeProperty:(Ljava/lang/String;)V
     377: aload         4
     379: ldc           #83                 // String AMQ_SCHEDULED_REPEAT
     381: invokevirtual #138                // Method org/apache/activemq/command/Message.removeProperty:(Ljava/lang/String;)V
     384: aload         4
     386: ldc           #43                 // String AMQ_SCHEDULED_CRON
     388: invokevirtual #138                // Method org/apache/activemq/command/Message.removeProperty:(Ljava/lang/String;)V
     391: aload         4
     393: invokevirtual #139                // Method org/apache/activemq/command/Message.getTimestamp:()J
     396: lconst_0
     397: lcmp
     398: ifle          528
     401: aload         4
     403: invokevirtual #140                // Method org/apache/activemq/command/Message.getExpiration:()J
     406: lconst_0
     407: lcmp
     408: ifle          528
     411: aload         4
     413: invokevirtual #140                // Method org/apache/activemq/command/Message.getExpiration:()J
     416: lstore        9
     418: invokestatic  #117                // Method java/lang/System.currentTimeMillis:()J
     421: lstore        11
     423: lconst_0
     424: lstore        13
     426: aload         4
     428: invokevirtual #139                // Method org/apache/activemq/command/Message.getTimestamp:()J
     431: lstore        15
     433: lload         9
     435: lconst_0
     436: lcmp
     437: ifle          447
     440: lload         9
     442: lload         15
     444: lsub
     445: lstore        13
     447: lload         13
     449: lload         11
     451: ladd
     452: lstore        17
     454: lload         17
     456: lload         9
     458: lcmp
     459: ifle          528
     462: lload         13
     464: lconst_0
     465: lcmp
     466: ifle          483
     469: lload         17
     471: lconst_0
     472: lcmp
     473: ifle          483
     476: aload         4
     478: lload         17
     480: invokevirtual #141                // Method org/apache/activemq/command/Message.setExpiration:(J)V
     483: aload         4
     485: lload         11
     487: invokevirtual #142                // Method org/apache/activemq/command/Message.setTimestamp:(J)V
     490: getstatic     #126                // Field LOG:Lorg/slf4j/Logger;
     493: ldc           #143                // String Set message {} timestamp from {} to {}
     495: iconst_3
     496: anewarray     #144                // class java/lang/Object
     499: dup
     500: iconst_0
     501: aload         4
     503: invokevirtual #86                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     506: aastore
     507: dup
     508: iconst_1
     509: lload         15
     511: invokestatic  #145                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     514: aastore
     515: dup
     516: iconst_2
     517: lload         11
     519: invokestatic  #145                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     522: aastore
     523: invokeinterface #146,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     528: new           #147                // class org/apache/activemq/broker/ProducerBrokerExchange
     531: dup
     532: invokespecial #148                // Method org/apache/activemq/broker/ProducerBrokerExchange."<init>":()V
     535: astore        9
     537: aload         9
     539: aload_0
     540: getfield      #14                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
     543: invokevirtual #149                // Method org/apache/activemq/broker/ProducerBrokerExchange.setConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
     546: aload         9
     548: iconst_1
     549: invokevirtual #150                // Method org/apache/activemq/broker/ProducerBrokerExchange.setMutable:(Z)V
     552: aload         9
     554: new           #151                // class org/apache/activemq/state/ProducerState
     557: dup
     558: new           #152                // class org/apache/activemq/command/ProducerInfo
     561: dup
     562: invokespecial #153                // Method org/apache/activemq/command/ProducerInfo."<init>":()V
     565: invokespecial #154                // Method org/apache/activemq/state/ProducerState."<init>":(Lorg/apache/activemq/command/ProducerInfo;)V
     568: invokevirtual #155                // Method org/apache/activemq/broker/ProducerBrokerExchange.setProducerState:(Lorg/apache/activemq/state/ProducerState;)V
     571: aload_0
     572: aload         9
     574: aload         4
     576: invokespecial #77                 // Method org/apache/activemq/broker/BrokerFilter.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
     579: goto          597
     582: astore        4
     584: getstatic     #126                // Field LOG:Lorg/slf4j/Logger;
     587: ldc           #157                // String Failed to send scheduled message {}
     589: aload_1
     590: aload         4
     592: invokeinterface #158,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     597: return
    Exception table:
       from    to  target type
          20   579   582   Class java/lang/Exception

  protected synchronized org.apache.activemq.broker.scheduler.JobScheduler getInternalScheduler() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #122                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          63
      10: aload_0
      11: getfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      14: ifnonnull     58
      17: aload_0
      18: getfield      #18                 // Field store:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      21: ifnull        58
      24: aload_0
      25: aload_0
      26: getfield      #18                 // Field store:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      29: ldc           #159                // String JMS
      31: invokeinterface #160,  2          // InterfaceMethod org/apache/activemq/broker/scheduler/JobSchedulerStore.getJobScheduler:(Ljava/lang/String;)Lorg/apache/activemq/broker/scheduler/JobScheduler;
      36: putfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      39: aload_0
      40: getfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      43: aload_0
      44: invokeinterface #161,  2          // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.addListener:(Lorg/apache/activemq/broker/scheduler/JobListener;)V
      49: aload_0
      50: getfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      53: invokeinterface #162,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/JobScheduler.startDispatching:()V
      58: aload_0
      59: getfield      #36                 // Field scheduler:Lorg/apache/activemq/broker/scheduler/JobScheduler;
      62: areturn
      63: aconst_null
      64: areturn

  protected void sendScheduledJob(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.scheduler.Job, org.apache.activemq.command.ActiveMQDestination) throws java.lang.Exception;
    Code:
       0: new           #88                 // class org/apache/activemq/util/ByteSequence
       3: dup
       4: aload_2
       5: invokeinterface #163,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/Job.getPayload:()[B
      10: invokespecial #164                // Method org/apache/activemq/util/ByteSequence."<init>":([B)V
      13: astore        4
      15: aload_0
      16: getfield      #11                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
      19: aload         4
      21: invokeinterface #97,  2           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.unmarshal:(Lorg/apache/activemq/util/ByteSequence;)Ljava/lang/Object;
      26: checkcast     #98                 // class org/apache/activemq/command/Message
      29: astore        5
      31: aload         5
      33: aconst_null
      34: invokevirtual #99                 // Method org/apache/activemq/command/Message.setOriginalTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      37: aload         5
      39: iconst_0
      40: invokevirtual #165                // Method org/apache/activemq/command/Message.setPersistent:(Z)V
      43: aload         5
      45: ldc           #166                // String Advisory
      47: invokevirtual #167                // Method org/apache/activemq/command/Message.setType:(Ljava/lang/String;)V
      50: aload         5
      52: new           #133                // class org/apache/activemq/command/MessageId
      55: dup
      56: aload_0
      57: getfield      #17                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
      60: aload_0
      61: getfield      #5                  // Field messageIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      64: invokevirtual #134                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
      67: invokespecial #135                // Method org/apache/activemq/command/MessageId."<init>":(Lorg/apache/activemq/command/ProducerId;J)V
      70: invokevirtual #136                // Method org/apache/activemq/command/Message.setMessageId:(Lorg/apache/activemq/command/MessageId;)V
      73: aload         5
      75: aload_3
      76: invokevirtual #168                // Method org/apache/activemq/command/Message.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      79: aload         5
      81: iconst_0
      82: invokevirtual #169                // Method org/apache/activemq/command/Message.setResponseRequired:(Z)V
      85: aload         5
      87: aload_0
      88: getfield      #17                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
      91: invokevirtual #170                // Method org/apache/activemq/command/Message.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
      94: aload         5
      96: ldc           #40                 // String scheduledJobId
      98: aload_2
      99: invokeinterface #171,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/Job.getJobId:()Ljava/lang/String;
     104: invokevirtual #137                // Method org/apache/activemq/command/Message.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     107: aload_1
     108: invokevirtual #172                // Method org/apache/activemq/broker/ConnectionContext.isProducerFlowControl:()Z
     111: istore        6
     113: new           #147                // class org/apache/activemq/broker/ProducerBrokerExchange
     116: dup
     117: invokespecial #148                // Method org/apache/activemq/broker/ProducerBrokerExchange."<init>":()V
     120: astore        7
     122: aload         7
     124: aload_1
     125: invokevirtual #149                // Method org/apache/activemq/broker/ProducerBrokerExchange.setConnectionContext:(Lorg/apache/activemq/broker/ConnectionContext;)V
     128: aload         7
     130: iconst_1
     131: invokevirtual #150                // Method org/apache/activemq/broker/ProducerBrokerExchange.setMutable:(Z)V
     134: aload         7
     136: new           #151                // class org/apache/activemq/state/ProducerState
     139: dup
     140: new           #152                // class org/apache/activemq/command/ProducerInfo
     143: dup
     144: invokespecial #153                // Method org/apache/activemq/command/ProducerInfo."<init>":()V
     147: invokespecial #154                // Method org/apache/activemq/state/ProducerState."<init>":(Lorg/apache/activemq/command/ProducerInfo;)V
     150: invokevirtual #155                // Method org/apache/activemq/broker/ProducerBrokerExchange.setProducerState:(Lorg/apache/activemq/state/ProducerState;)V
     153: aload_1
     154: iconst_0
     155: invokevirtual #173                // Method org/apache/activemq/broker/ConnectionContext.setProducerFlowControl:(Z)V
     158: aload_0
     159: getfield      #174                // Field next:Lorg/apache/activemq/broker/Broker;
     162: aload         7
     164: aload         5
     166: invokeinterface #175,  3          // InterfaceMethod org/apache/activemq/broker/Broker.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
     171: aload_1
     172: iload         6
     174: invokevirtual #173                // Method org/apache/activemq/broker/ConnectionContext.setProducerFlowControl:(Z)V
     177: goto          191
     180: astore        8
     182: aload_1
     183: iload         6
     185: invokevirtual #173                // Method org/apache/activemq/broker/ConnectionContext.setProducerFlowControl:(Z)V
     188: aload         8
     190: athrow
     191: goto          214
     194: astore        5
     196: getstatic     #126                // Field LOG:Lorg/slf4j/Logger;
     199: ldc           #157                // String Failed to send scheduled message {}
     201: aload_2
     202: invokeinterface #171,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/Job.getJobId:()Ljava/lang/String;
     207: aload         5
     209: invokeinterface #158,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     214: return
    Exception table:
       from    to  target type
         153   171   180   any
         180   182   180   any
          15   191   194   Class java/lang/Exception

  static void access$000(org.apache.activemq.broker.scheduler.SchedulerBroker, org.apache.activemq.command.Message, java.lang.Object, java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method doSchedule:(Lorg/apache/activemq/command/Message;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  static {};
    Code:
       0: ldc_w         #176                // class org/apache/activemq/broker/scheduler/SchedulerBroker
       3: invokestatic  #177                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #126                // Field LOG:Lorg/slf4j/Logger;
       9: new           #178                // class org/apache/activemq/util/IdGenerator
      12: dup
      13: invokespecial #179                // Method org/apache/activemq/util/IdGenerator."<init>":()V
      16: putstatic     #19                 // Field ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
      19: return
}
