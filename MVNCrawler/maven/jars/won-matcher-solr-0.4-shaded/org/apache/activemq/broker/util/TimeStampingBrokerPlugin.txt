Compiled from "TimeStampingBrokerPlugin.java"
public class org.apache.activemq.broker.util.TimeStampingBrokerPlugin extends org.apache.activemq.broker.BrokerPluginSupport {
  private static final org.slf4j.Logger LOG;

  long zeroExpirationOverride;

  long ttlCeiling;

  boolean futureOnly;

  boolean processNetworkMessages;

  public org.apache.activemq.broker.util.TimeStampingBrokerPlugin();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/broker/BrokerPluginSupport."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field zeroExpirationOverride:J
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field ttlCeiling:J
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field futureOnly:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field processNetworkMessages:Z
      24: return

  public void setZeroExpirationOverride(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field zeroExpirationOverride:J
       5: return

  public void setTtlCeiling(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #3                  // Field ttlCeiling:J
       5: return

  public void setFutureOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field futureOnly:Z
       5: return

  public void setProcessNetworkMessages(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
       5: putfield      #5                  // Field processNetworkMessages:Z
       8: return

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #7                  // Method org/apache/activemq/command/Message.getTimestamp:()J
       4: lconst_0
       5: lcmp
       6: ifle          189
       9: aload_0
      10: aload_2
      11: invokespecial #8                  // Method isDestinationDLQ:(Lorg/apache/activemq/command/Message;)Z
      14: ifne          189
      17: aload_0
      18: getfield      #5                  // Field processNetworkMessages:Z
      21: ifne          39
      24: aload_2
      25: invokevirtual #9                  // Method org/apache/activemq/command/Message.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      28: ifnull        39
      31: aload_2
      32: invokevirtual #9                  // Method org/apache/activemq/command/Message.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      35: arraylength
      36: ifne          189
      39: aload_2
      40: invokevirtual #10                 // Method org/apache/activemq/command/Message.getExpiration:()J
      43: lstore_3
      44: invokestatic  #11                 // Method java/lang/System.currentTimeMillis:()J
      47: lstore        5
      49: aload_0
      50: getfield      #2                  // Field zeroExpirationOverride:J
      53: lstore        7
      55: aload_2
      56: invokevirtual #7                  // Method org/apache/activemq/command/Message.getTimestamp:()J
      59: lstore        9
      61: lload_3
      62: lconst_0
      63: lcmp
      64: ifle          73
      67: lload_3
      68: lload         9
      70: lsub
      71: lstore        7
      73: lload         7
      75: lconst_0
      76: lcmp
      77: ifle          105
      80: aload_0
      81: getfield      #3                  // Field ttlCeiling:J
      84: lconst_0
      85: lcmp
      86: ifle          105
      89: lload         7
      91: aload_0
      92: getfield      #3                  // Field ttlCeiling:J
      95: lcmp
      96: ifle          105
      99: aload_0
     100: getfield      #3                  // Field ttlCeiling:J
     103: lstore        7
     105: lload         7
     107: lload         5
     109: ladd
     110: lstore        11
     112: aload_0
     113: getfield      #4                  // Field futureOnly:Z
     116: ifeq          126
     119: lload         11
     121: lload_3
     122: lcmp
     123: ifle          189
     126: lload         7
     128: lconst_0
     129: lcmp
     130: ifle          146
     133: lload         11
     135: lconst_0
     136: lcmp
     137: ifle          146
     140: aload_2
     141: lload         11
     143: invokevirtual #12                 // Method org/apache/activemq/command/Message.setExpiration:(J)V
     146: aload_2
     147: lload         5
     149: invokevirtual #13                 // Method org/apache/activemq/command/Message.setTimestamp:(J)V
     152: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
     155: ldc           #15                 // String Set message {} timestamp from {} to {}
     157: iconst_3
     158: anewarray     #16                 // class java/lang/Object
     161: dup
     162: iconst_0
     163: aload_2
     164: invokevirtual #17                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     167: aastore
     168: dup
     169: iconst_1
     170: lload         9
     172: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     175: aastore
     176: dup
     177: iconst_2
     178: lload         5
     180: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     183: aastore
     184: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     189: aload_0
     190: aload_1
     191: aload_2
     192: invokespecial #20                 // Method org/apache/activemq/broker/BrokerPluginSupport.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
     195: return

  private boolean isDestinationDLQ(org.apache.activemq.command.Message);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
       4: checkcast     #22                 // class org/apache/activemq/broker/region/Destination
       7: astore        4
       9: aload_1
      10: ifnull        83
      13: aload         4
      15: ifnull        83
      18: aload         4
      20: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getDeadLetterStrategy:()Lorg/apache/activemq/broker/region/policy/DeadLetterStrategy;
      25: astore_2
      26: aload_2
      27: ifnull        83
      30: aload_1
      31: invokevirtual #24                 // Method org/apache/activemq/command/Message.getOriginalDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      34: ifnull        83
      37: new           #25                 // class org/apache/activemq/command/ActiveMQMessage
      40: dup
      41: invokespecial #26                 // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      44: astore_3
      45: aload_3
      46: aload_1
      47: invokevirtual #24                 // Method org/apache/activemq/command/Message.getOriginalDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      50: invokevirtual #27                 // Method org/apache/activemq/command/Message.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      53: aload_3
      54: aload         4
      56: invokevirtual #28                 // Method org/apache/activemq/command/Message.setRegionDestination:(Lorg/apache/activemq/command/Message$MessageDestination;)V
      59: aload_2
      60: aload_3
      61: aconst_null
      62: invokeinterface #29,  3           // InterfaceMethod org/apache/activemq/broker/region/policy/DeadLetterStrategy.getDeadLetterQueueFor:(Lorg/apache/activemq/command/Message;Lorg/apache/activemq/broker/region/Subscription;)Lorg/apache/activemq/command/ActiveMQDestination;
      67: astore        5
      69: aload         5
      71: aload_1
      72: invokevirtual #30                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      75: invokevirtual #31                 // Method org/apache/activemq/command/ActiveMQDestination.equals:(Ljava/lang/Object;)Z
      78: ifeq          83
      81: iconst_1
      82: ireturn
      83: iconst_0
      84: ireturn

  static {};
    Code:
       0: ldc_w         #32                 // class org/apache/activemq/broker/util/TimeStampingBrokerPlugin
       3: invokestatic  #33                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
