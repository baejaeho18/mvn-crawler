Compiled from "Broker.java"
public interface org.apache.activemq.broker.Broker extends org.apache.activemq.broker.region.Region,org.apache.activemq.Service {
  public abstract org.apache.activemq.broker.Broker getAdaptor(java.lang.Class);

  public abstract org.apache.activemq.command.BrokerId getBrokerId();

  public abstract java.lang.String getBrokerName();

  public abstract void addBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);

  public abstract void removeBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);

  public abstract void addConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo) throws java.lang.Exception;

  public abstract void removeConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo, java.lang.Throwable) throws java.lang.Exception;

  public abstract void addSession(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.SessionInfo) throws java.lang.Exception;

  public abstract void removeSession(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.SessionInfo) throws java.lang.Exception;

  public abstract void addProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;

  public abstract void removeProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;

  public abstract org.apache.activemq.broker.Connection[] getClients() throws java.lang.Exception;

  public abstract org.apache.activemq.command.ActiveMQDestination[] getDestinations() throws java.lang.Exception;

  public abstract java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.region.Destination> getDestinationMap(org.apache.activemq.command.ActiveMQDestination);

  public abstract org.apache.activemq.command.TransactionId[] getPreparedTransactions(org.apache.activemq.broker.ConnectionContext) throws java.lang.Exception;

  public abstract void beginTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;

  public abstract int prepareTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;

  public abstract void rollbackTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;

  public abstract void commitTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId, boolean) throws java.lang.Exception;

  public abstract void forgetTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;

  public abstract org.apache.activemq.command.BrokerInfo[] getPeerBrokerInfos();

  public abstract void preProcessDispatch(org.apache.activemq.command.MessageDispatch);

  public abstract void postProcessDispatch(org.apache.activemq.command.MessageDispatch);

  public abstract boolean isStopped();

  public abstract java.util.Set<org.apache.activemq.command.ActiveMQDestination> getDurableDestinations();

  public abstract void addDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;

  public abstract void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;

  public abstract boolean isFaultTolerantConfiguration();

  public abstract org.apache.activemq.broker.ConnectionContext getAdminConnectionContext();

  public abstract void setAdminConnectionContext(org.apache.activemq.broker.ConnectionContext);

  public abstract org.apache.activemq.store.PListStore getTempDataStore();

  public abstract java.net.URI getVmConnectorURI();

  public abstract void brokerServiceStarted();

  public abstract org.apache.activemq.broker.BrokerService getBrokerService();

  public abstract org.apache.activemq.broker.Broker getRoot();

  public abstract boolean isExpired(org.apache.activemq.broker.region.MessageReference);

  public abstract void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription);

  public abstract boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription, java.lang.Throwable);

  public abstract long getBrokerSequenceId();

  public abstract void messageConsumed(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);

  public abstract void messageDelivered(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);

  public abstract void messageDiscarded(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.MessageReference);

  public abstract void slowConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.broker.region.Subscription);

  public abstract void fastProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo, org.apache.activemq.command.ActiveMQDestination);

  public abstract void isFull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.usage.Usage);

  public abstract void nowMasterBroker();

  public abstract org.apache.activemq.thread.Scheduler getScheduler();

  public abstract java.util.concurrent.ThreadPoolExecutor getExecutor();

  public abstract void networkBridgeStarted(org.apache.activemq.command.BrokerInfo, boolean, java.lang.String);

  public abstract void networkBridgeStopped(org.apache.activemq.command.BrokerInfo);
}
