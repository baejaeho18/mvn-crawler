Compiled from "NetworkConnectorView.java"
public class org.apache.activemq.broker.jmx.NetworkConnectorView implements org.apache.activemq.broker.jmx.NetworkConnectorViewMBean {
  private final org.apache.activemq.network.NetworkConnector connector;

  public org.apache.activemq.broker.jmx.NetworkConnectorView(org.apache.activemq.network.NetworkConnector);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       9: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #3                  // Method org/apache/activemq/network/NetworkConnector.start:()V
       7: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #4                  // Method org/apache/activemq/network/NetworkConnector.stop:()V
       7: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #5                  // Method org/apache/activemq/network/NetworkConnector.getName:()Ljava/lang/String;
       7: areturn

  public int getMessageTTL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #6                  // Method org/apache/activemq/network/NetworkConnector.getMessageTTL:()I
       7: ireturn

  public int getConsumerTTL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #7                  // Method org/apache/activemq/network/NetworkConnector.getConsumerTTL:()I
       7: ireturn

  public int getPrefetchSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #8                  // Method org/apache/activemq/network/NetworkConnector.getPrefetchSize:()I
       7: ireturn

  public java.lang.String getUserName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #9                  // Method org/apache/activemq/network/NetworkConnector.getUserName:()Ljava/lang/String;
       7: areturn

  public boolean isBridgeTempDestinations();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #10                 // Method org/apache/activemq/network/NetworkConnector.isBridgeTempDestinations:()Z
       7: ireturn

  public boolean isConduitSubscriptions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #11                 // Method org/apache/activemq/network/NetworkConnector.isConduitSubscriptions:()Z
       7: ireturn

  public boolean isDecreaseNetworkConsumerPriority();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #12                 // Method org/apache/activemq/network/NetworkConnector.isDecreaseNetworkConsumerPriority:()Z
       7: ireturn

  public boolean isDispatchAsync();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #13                 // Method org/apache/activemq/network/NetworkConnector.isDispatchAsync:()Z
       7: ireturn

  public boolean isDynamicOnly();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #14                 // Method org/apache/activemq/network/NetworkConnector.isDynamicOnly:()Z
       7: ireturn

  public boolean isDuplex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #15                 // Method org/apache/activemq/network/NetworkConnector.isDuplex:()Z
       7: ireturn

  public boolean isSuppressDuplicateQueueSubscriptions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #16                 // Method org/apache/activemq/network/NetworkConnector.isSuppressDuplicateQueueSubscriptions:()Z
       7: ireturn

  public boolean isSuppressDuplicateTopicSubscriptions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #17                 // Method org/apache/activemq/network/NetworkConnector.isSuppressDuplicateTopicSubscriptions:()Z
       7: ireturn

  public void setBridgeTempDestinations(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #18                 // Method org/apache/activemq/network/NetworkConnector.setBridgeTempDestinations:(Z)V
       8: return

  public void setConduitSubscriptions(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #19                 // Method org/apache/activemq/network/NetworkConnector.setConduitSubscriptions:(Z)V
       8: return

  public void setDispatchAsync(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #20                 // Method org/apache/activemq/network/NetworkConnector.setDispatchAsync:(Z)V
       8: return

  public void setDynamicOnly(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #21                 // Method org/apache/activemq/network/NetworkConnector.setDynamicOnly:(Z)V
       8: return

  public void setMessageTTL(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #22                 // Method org/apache/activemq/network/NetworkConnector.setMessageTTL:(I)V
       8: return

  public void setConsumerTTL(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #23                 // Method org/apache/activemq/network/NetworkConnector.setConsumerTTL:(I)V
       8: return

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: aload_1
       5: invokevirtual #24                 // Method org/apache/activemq/network/NetworkConnector.setPassword:(Ljava/lang/String;)V
       8: return

  public void setPrefetchSize(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #25                 // Method org/apache/activemq/network/NetworkConnector.setPrefetchSize:(I)V
       8: return

  public void setUserName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: aload_1
       5: invokevirtual #26                 // Method org/apache/activemq/network/NetworkConnector.setUserName:(Ljava/lang/String;)V
       8: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: invokevirtual #27                 // Method org/apache/activemq/network/NetworkConnector.getPassword:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ifnull        21
      12: aload_1
      13: ldc           #28                 // String .
      15: ldc           #29                 // String *
      17: invokevirtual #30                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      20: astore_1
      21: aload_1
      22: areturn

  public void setDecreaseNetworkConsumerPriority(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #31                 // Method org/apache/activemq/network/NetworkConnector.setDecreaseNetworkConsumerPriority:(Z)V
       8: return

  public void setSuppressDuplicateQueueSubscriptions(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #32                 // Method org/apache/activemq/network/NetworkConnector.setSuppressDuplicateQueueSubscriptions:(Z)V
       8: return

  public void setSuppressDuplicateTopicSubscriptions(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connector:Lorg/apache/activemq/network/NetworkConnector;
       4: iload_1
       5: invokevirtual #33                 // Method org/apache/activemq/network/NetworkConnector.setSuppressDuplicateTopicSubscriptions:(Z)V
       8: return
}
