Compiled from "DestinationFilter.java"
public class org.apache.activemq.broker.region.DestinationFilter implements org.apache.activemq.broker.region.Destination {
  protected final org.apache.activemq.broker.region.Destination next;

  public org.apache.activemq.broker.region.DestinationFilter(org.apache.activemq.broker.region.Destination);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       9: return

  public void acknowledge(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.command.MessageAck, org.apache.activemq.broker.region.MessageReference) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #3,  5            // InterfaceMethod org/apache/activemq/broker/region/Destination.acknowledge:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/command/MessageAck;Lorg/apache/activemq/broker/region/MessageReference;)V
      14: return

  public void addSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #4,  3            // InterfaceMethod org/apache/activemq/broker/region/Destination.addSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;)V
      11: return

  public org.apache.activemq.command.Message[] browse();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.browse:()[Lorg/apache/activemq/command/Message;
       9: areturn

  public void dispose(org.apache.activemq.broker.ConnectionContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/apache/activemq/broker/region/Destination.dispose:(Lorg/apache/activemq/broker/ConnectionContext;)V
      10: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.isDisposed:()Z
       9: ireturn

  public void gc();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #8,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.gc:()V
       9: return

  public void markForGC(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: lload_1
       5: invokeinterface #9,  3            // InterfaceMethod org/apache/activemq/broker/region/Destination.markForGC:(J)V
      10: return

  public boolean canGC();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.canGC:()Z
       9: ireturn

  public long getInactiveTimoutBeforeGC();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getInactiveTimoutBeforeGC:()J
       9: lreturn

  public org.apache.activemq.command.ActiveMQDestination getActiveMQDestination();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       9: areturn

  public org.apache.activemq.broker.region.policy.DeadLetterStrategy getDeadLetterStrategy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getDeadLetterStrategy:()Lorg/apache/activemq/broker/region/policy/DeadLetterStrategy;
       9: areturn

  public org.apache.activemq.broker.region.DestinationStatistics getDestinationStatistics();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getName:()Ljava/lang/String;
       9: areturn

  public org.apache.activemq.usage.MemoryUsage getMemoryUsage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: areturn

  public void setMemoryUsage(org.apache.activemq.usage.MemoryUsage);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setMemoryUsage:(Lorg/apache/activemq/usage/MemoryUsage;)V
      10: return

  public void removeSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #18,  5           // InterfaceMethod org/apache/activemq/broker/region/Destination.removeSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;J)V
      12: return

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      11: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.start:()V
       9: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.stop:()V
       9: return

  public java.util.List<org.apache.activemq.broker.region.Subscription> getConsumers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getConsumers:()Ljava/util/List;
       9: areturn

  protected void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message, org.apache.activemq.command.ActiveMQDestination) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       4: invokevirtual #24                 // Method org/apache/activemq/broker/ConnectionContext.getBroker:()Lorg/apache/activemq/broker/Broker;
       7: astore        4
       9: aload         4
      11: aload_3
      12: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/broker/Broker.getDestinations:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      17: astore        5
      19: aload         5
      21: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore        6
      28: aload         6
      30: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          65
      38: aload         6
      40: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #29                 // class org/apache/activemq/broker/region/Destination
      48: astore        7
      50: aload         7
      52: aload_1
      53: aload_2
      54: invokevirtual #30                 // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      57: invokeinterface #19,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      62: goto          28
      65: return

  public org.apache.activemq.store.MessageStore getMessageStore();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMessageStore:()Lorg/apache/activemq/store/MessageStore;
       9: areturn

  public boolean isProducerFlowControl();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isProducerFlowControl:()Z
       9: ireturn

  public void setProducerFlowControl(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #33,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setProducerFlowControl:(Z)V
      10: return

  public boolean isAlwaysRetroactive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #34,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isAlwaysRetroactive:()Z
       9: ireturn

  public void setAlwaysRetroactive(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #35,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setAlwaysRetroactive:(Z)V
      10: return

  public void setBlockedProducerWarningInterval(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: lload_1
       5: invokeinterface #36,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.setBlockedProducerWarningInterval:(J)V
      10: return

  public long getBlockedProducerWarningInterval();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getBlockedProducerWarningInterval:()J
       9: lreturn

  public void addProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #38,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.addProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      11: return

  public void removeProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #39,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.removeProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      11: return

  public int getMaxAuditDepth();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #40,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxAuditDepth:()I
       9: ireturn

  public int getMaxProducersToAudit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #41,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxProducersToAudit:()I
       9: ireturn

  public boolean isEnableAudit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isEnableAudit:()Z
       9: ireturn

  public void setEnableAudit(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #43,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setEnableAudit:(Z)V
      10: return

  public void setMaxAuditDepth(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #44,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setMaxAuditDepth:(I)V
      10: return

  public void setMaxProducersToAudit(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #45,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setMaxProducersToAudit:(I)V
      10: return

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isActive:()Z
       9: ireturn

  public int getMaxPageSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #47,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxPageSize:()I
       9: ireturn

  public void setMaxPageSize(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #48,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setMaxPageSize:(I)V
      10: return

  public boolean isUseCache();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isUseCache:()Z
       9: ireturn

  public void setUseCache(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #50,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setUseCache:(Z)V
      10: return

  public int getMinimumMessageSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #51,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMinimumMessageSize:()I
       9: ireturn

  public void setMinimumMessageSize(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setMinimumMessageSize:(I)V
      10: return

  public void wakeup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #53,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.wakeup:()V
       9: return

  public boolean isLazyDispatch();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #54,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isLazyDispatch:()Z
       9: ireturn

  public void setLazyDispatch(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #55,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setLazyDispatch:(Z)V
      10: return

  public void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.PrefetchSubscription, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #56,  4           // InterfaceMethod org/apache/activemq/broker/region/Destination.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
      12: return

  public boolean iterate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #57,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.iterate:()Z
       9: ireturn

  public void fastProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #58,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.fastProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      11: return

  public void isFull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.usage.Usage<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #59,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.isFull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/usage/Usage;)V
      11: return

  public void messageConsumed(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #60,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.messageConsumed:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
      11: return

  public void messageDelivered(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #61,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.messageDelivered:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
      11: return

  public void messageDiscarded(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #62,  4           // InterfaceMethod org/apache/activemq/broker/region/Destination.messageDiscarded:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
      12: return

  public void slowConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #63,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.slowConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;)V
      11: return

  public void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #56,  4           // InterfaceMethod org/apache/activemq/broker/region/Destination.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
      12: return

  public int getMaxBrowsePageSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #64,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxBrowsePageSize:()I
       9: ireturn

  public void setMaxBrowsePageSize(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setMaxBrowsePageSize:(I)V
      10: return

  public void processDispatchNotification(org.apache.activemq.command.MessageDispatchNotification) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.processDispatchNotification:(Lorg/apache/activemq/command/MessageDispatchNotification;)V
      10: return

  public int getCursorMemoryHighWaterMark();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getCursorMemoryHighWaterMark:()I
       9: ireturn

  public void setCursorMemoryHighWaterMark(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #68,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setCursorMemoryHighWaterMark:(I)V
      10: return

  public boolean isPrioritizedMessages();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isPrioritizedMessages:()Z
       9: ireturn

  public org.apache.activemq.broker.region.policy.SlowConsumerStrategy getSlowConsumerStrategy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #70,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getSlowConsumerStrategy:()Lorg/apache/activemq/broker/region/policy/SlowConsumerStrategy;
       9: areturn

  public boolean isDoOptimzeMessageStorage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isDoOptimzeMessageStorage:()Z
       9: ireturn

  public void setDoOptimzeMessageStorage(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: iload_1
       5: invokeinterface #72,  2           // InterfaceMethod org/apache/activemq/broker/region/Destination.setDoOptimzeMessageStorage:(Z)V
      10: return

  public void clearPendingMessages();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #73,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.clearPendingMessages:()V
       9: return

  public boolean isDLQ();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: invokeinterface #74,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.isDLQ:()Z
       9: ireturn

  public void duplicateFromStore(org.apache.activemq.command.Message, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: aload_1
       5: aload_2
       6: invokeinterface #75,  3           // InterfaceMethod org/apache/activemq/broker/region/Destination.duplicateFromStore:(Lorg/apache/activemq/command/Message;Lorg/apache/activemq/broker/region/Subscription;)V
      11: return

  public void deleteSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.util.SubscriptionKey) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: instanceof    #76                 // class org/apache/activemq/broker/region/DestinationFilter
       7: ifeq          27
      10: aload_0
      11: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
      14: checkcast     #76                 // class org/apache/activemq/broker/region/DestinationFilter
      17: astore_3
      18: aload_3
      19: aload_1
      20: aload_2
      21: invokevirtual #77                 // Method deleteSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/util/SubscriptionKey;)V
      24: goto          51
      27: aload_0
      28: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
      31: instanceof    #78                 // class org/apache/activemq/broker/region/Topic
      34: ifeq          51
      37: aload_0
      38: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
      41: checkcast     #78                 // class org/apache/activemq/broker/region/Topic
      44: astore_3
      45: aload_3
      46: aload_1
      47: aload_2
      48: invokevirtual #79                 // Method org/apache/activemq/broker/region/Topic.deleteSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/util/SubscriptionKey;)V
      51: return

  public org.apache.activemq.broker.region.Destination getNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/broker/region/Destination;
       4: areturn
}
