Compiled from "PublishedAddressPolicy.java"
public class org.apache.activemq.broker.PublishedAddressPolicy {
  private java.lang.String clusterClientUriQuery;

  private org.apache.activemq.broker.PublishedAddressPolicy$PublishedHostStrategy publishedHostStrategy;

  private java.util.HashMap<java.lang.Integer, java.lang.Integer> portMapping;

  public org.apache.activemq.broker.PublishedAddressPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.DEFAULT:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
       8: putfield      #3                  // Field publishedHostStrategy:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
      11: aload_0
      12: new           #4                  // class java/util/HashMap
      15: dup
      16: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      19: putfield      #6                  // Field portMapping:Ljava/util/HashMap;
      22: return

  public java.net.URI getPublishableConnectURI(org.apache.activemq.broker.TransportConnector) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/apache/activemq/broker/TransportConnector.getConnectUri:()Ljava/net/URI;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_2
      12: invokevirtual #8                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      15: astore_3
      16: aload_0
      17: aload_2
      18: invokevirtual #9                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      21: invokevirtual #10                 // Method getPublishedUserInfoValue:(Ljava/lang/String;)Ljava/lang/String;
      24: astore        4
      26: aload_0
      27: aload_2
      28: invokevirtual #11                 // Method java/net/URI.getHost:()Ljava/lang/String;
      31: invokevirtual #12                 // Method getPublishedHostValue:(Ljava/lang/String;)Ljava/lang/String;
      34: astore        5
      36: aload_2
      37: invokevirtual #13                 // Method java/net/URI.getPort:()I
      40: istore        6
      42: aload_0
      43: getfield      #6                  // Field portMapping:Ljava/util/HashMap;
      46: iload         6
      48: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: invokevirtual #15                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      54: ifeq          77
      57: aload_0
      58: getfield      #6                  // Field portMapping:Ljava/util/HashMap;
      61: iload         6
      63: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: invokevirtual #16                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #17                 // class java/lang/Integer
      72: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      75: istore        6
      77: aload_0
      78: aload_2
      79: invokevirtual #19                 // Method java/net/URI.getPath:()Ljava/lang/String;
      82: invokevirtual #20                 // Method getPublishedPathValue:(Ljava/lang/String;)Ljava/lang/String;
      85: astore        7
      87: aload_0
      88: aload_2
      89: invokevirtual #21                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      92: invokevirtual #22                 // Method getPublishedFragmentValue:(Ljava/lang/String;)Ljava/lang/String;
      95: astore        8
      97: new           #23                 // class java/net/URI
     100: dup
     101: aload_3
     102: aload         4
     104: aload         5
     106: iload         6
     108: aload         7
     110: aload_0
     111: invokevirtual #24                 // Method getClusterClientUriQuery:()Ljava/lang/String;
     114: aload         8
     116: invokespecial #25                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     119: astore        9
     121: aload         9
     123: areturn

  public java.lang.String getPublishableConnectString(org.apache.activemq.broker.TransportConnector) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method getPublishableConnectURI:(Lorg/apache/activemq/broker/TransportConnector;)Ljava/net/URI;
       5: invokevirtual #27                 // Method java/net/URI.toString:()Ljava/lang/String;
       8: areturn

  protected java.lang.String getPublishedHostValue(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: getfield      #3                  // Field publishedHostStrategy:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
       6: getstatic     #28                 // Field org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.IPADDRESS:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
       9: invokevirtual #29                 // Method org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.equals:(Ljava/lang/Object;)Z
      12: ifeq          28
      15: aload_1
      16: invokestatic  #30                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      19: astore_3
      20: aload_3
      21: invokevirtual #31                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      24: astore_2
      25: goto          105
      28: aload_0
      29: getfield      #3                  // Field publishedHostStrategy:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
      32: getstatic     #32                 // Field org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.HOSTNAME:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
      35: invokevirtual #29                 // Method org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.equals:(Ljava/lang/Object;)Z
      38: ifeq          68
      41: aload_1
      42: invokestatic  #30                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      45: astore_3
      46: aload_3
      47: invokevirtual #33                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
      50: ifeq          60
      53: invokestatic  #34                 // Method org/apache/activemq/util/InetAddressUtil.getLocalHostName:()Ljava/lang/String;
      56: astore_2
      57: goto          65
      60: aload_3
      61: invokevirtual #35                 // Method java/net/InetAddress.getHostName:()Ljava/lang/String;
      64: astore_2
      65: goto          105
      68: aload_0
      69: getfield      #3                  // Field publishedHostStrategy:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
      72: getstatic     #36                 // Field org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.FQDN:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
      75: invokevirtual #29                 // Method org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.equals:(Ljava/lang/Object;)Z
      78: ifeq          105
      81: aload_1
      82: invokestatic  #30                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      85: astore_3
      86: aload_3
      87: invokevirtual #33                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
      90: ifeq          100
      93: invokestatic  #34                 // Method org/apache/activemq/util/InetAddressUtil.getLocalHostName:()Ljava/lang/String;
      96: astore_2
      97: goto          105
     100: aload_3
     101: invokevirtual #37                 // Method java/net/InetAddress.getCanonicalHostName:()Ljava/lang/String;
     104: astore_2
     105: aload_2
     106: areturn

  protected java.lang.String getPublishedPathValue(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  protected java.lang.String getPublishedFragmentValue(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  protected java.lang.String getPublishedUserInfoValue(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  public java.lang.String getClusterClientUriQuery();
    Code:
       0: aload_0
       1: getfield      #38                 // Field clusterClientUriQuery:Ljava/lang/String;
       4: areturn

  public void setClusterClientUriQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field clusterClientUriQuery:Ljava/lang/String;
       5: return

  public org.apache.activemq.broker.PublishedAddressPolicy$PublishedHostStrategy getPublishedHostStrategy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field publishedHostStrategy:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
       4: areturn

  public void setPublishedHostStrategy(org.apache.activemq.broker.PublishedAddressPolicy$PublishedHostStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field publishedHostStrategy:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
       5: return

  public void setPublishedHostStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method org/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy.getValue:(Ljava/lang/String;)Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
       5: putfield      #3                  // Field publishedHostStrategy:Lorg/apache/activemq/broker/PublishedAddressPolicy$PublishedHostStrategy;
       8: return

  public void setPortMapping(java.util.HashMap<java.lang.Integer, java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field portMapping:Ljava/util/HashMap;
       5: return
}
