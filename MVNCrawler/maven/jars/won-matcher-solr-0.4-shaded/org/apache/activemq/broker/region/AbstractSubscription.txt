Compiled from "AbstractSubscription.java"
public abstract class org.apache.activemq.broker.region.AbstractSubscription implements org.apache.activemq.broker.region.Subscription {
  private static final org.slf4j.Logger LOG;

  protected org.apache.activemq.broker.Broker broker;

  protected org.apache.activemq.broker.ConnectionContext context;

  protected org.apache.activemq.command.ConsumerInfo info;

  protected final org.apache.activemq.filter.DestinationFilter destinationFilter;

  protected final java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.broker.region.Destination> destinations;

  private org.apache.activemq.filter.BooleanExpression selectorExpression;

  private javax.management.ObjectName objectName;

  private int cursorMemoryHighWaterMark;

  private boolean slowConsumer;

  private long lastAckTime;

  private java.util.concurrent.atomic.AtomicLong consumedCount;

  public org.apache.activemq.broker.region.AbstractSubscription(org.apache.activemq.broker.Broker, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws javax.jms.InvalidSelectorException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field destinations:Ljava/util/concurrent/CopyOnWriteArrayList;
      15: aload_0
      16: bipush        70
      18: putfield      #5                  // Field cursorMemoryHighWaterMark:I
      21: aload_0
      22: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      25: dup
      26: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      29: putfield      #8                  // Field consumedCount:Ljava/util/concurrent/atomic/AtomicLong;
      32: aload_0
      33: aload_1
      34: putfield      #9                  // Field broker:Lorg/apache/activemq/broker/Broker;
      37: aload_0
      38: aload_2
      39: putfield      #10                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      42: aload_0
      43: aload_3
      44: putfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      47: aload_0
      48: aload_3
      49: invokevirtual #12                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      52: invokestatic  #13                 // Method org/apache/activemq/filter/DestinationFilter.parseFilter:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/filter/DestinationFilter;
      55: putfield      #14                 // Field destinationFilter:Lorg/apache/activemq/filter/DestinationFilter;
      58: aload_0
      59: aload_3
      60: invokestatic  #15                 // Method parseSelector:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/filter/BooleanExpression;
      63: putfield      #16                 // Field selectorExpression:Lorg/apache/activemq/filter/BooleanExpression;
      66: aload_0
      67: invokestatic  #17                 // Method java/lang/System.currentTimeMillis:()J
      70: putfield      #18                 // Field lastAckTime:J
      73: return

  private static org.apache.activemq.filter.BooleanExpression parseSelector(org.apache.activemq.command.ConsumerInfo) throws javax.jms.InvalidSelectorException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #19                 // Method org/apache/activemq/command/ConsumerInfo.getSelector:()Ljava/lang/String;
       6: ifnull        17
       9: aload_0
      10: invokevirtual #19                 // Method org/apache/activemq/command/ConsumerInfo.getSelector:()Ljava/lang/String;
      13: invokestatic  #20                 // Method org/apache/activemq/selector/SelectorParser.parse:(Ljava/lang/String;)Lorg/apache/activemq/filter/BooleanExpression;
      16: astore_1
      17: aload_0
      18: invokevirtual #21                 // Method org/apache/activemq/command/ConsumerInfo.isNoLocal:()Z
      21: ifeq          65
      24: aload_1
      25: ifnonnull     46
      28: new           #22                 // class org/apache/activemq/filter/NoLocalExpression
      31: dup
      32: aload_0
      33: invokevirtual #23                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      36: invokevirtual #24                 // Method org/apache/activemq/command/ConsumerId.getConnectionId:()Ljava/lang/String;
      39: invokespecial #25                 // Method org/apache/activemq/filter/NoLocalExpression."<init>":(Ljava/lang/String;)V
      42: astore_1
      43: goto          65
      46: new           #22                 // class org/apache/activemq/filter/NoLocalExpression
      49: dup
      50: aload_0
      51: invokevirtual #23                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      54: invokevirtual #24                 // Method org/apache/activemq/command/ConsumerId.getConnectionId:()Ljava/lang/String;
      57: invokespecial #25                 // Method org/apache/activemq/filter/NoLocalExpression."<init>":(Ljava/lang/String;)V
      60: aload_1
      61: invokestatic  #26                 // Method org/apache/activemq/filter/LogicExpression.createAND:(Lorg/apache/activemq/filter/BooleanExpression;Lorg/apache/activemq/filter/BooleanExpression;)Lorg/apache/activemq/filter/BooleanExpression;
      64: astore_1
      65: aload_0
      66: invokevirtual #27                 // Method org/apache/activemq/command/ConsumerInfo.getAdditionalPredicate:()Lorg/apache/activemq/filter/BooleanExpression;
      69: ifnull        93
      72: aload_1
      73: ifnonnull     84
      76: aload_0
      77: invokevirtual #27                 // Method org/apache/activemq/command/ConsumerInfo.getAdditionalPredicate:()Lorg/apache/activemq/filter/BooleanExpression;
      80: astore_1
      81: goto          93
      84: aload_0
      85: invokevirtual #27                 // Method org/apache/activemq/command/ConsumerInfo.getAdditionalPredicate:()Lorg/apache/activemq/filter/BooleanExpression;
      88: aload_1
      89: invokestatic  #26                 // Method org/apache/activemq/filter/LogicExpression.createAND:(Lorg/apache/activemq/filter/BooleanExpression;Lorg/apache/activemq/filter/BooleanExpression;)Lorg/apache/activemq/filter/BooleanExpression;
      92: astore_1
      93: aload_1
      94: areturn

  public synchronized void acknowledge(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.MessageAck) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #18                 // Field lastAckTime:J
       7: aload_0
       8: getfield      #8                  // Field consumedCount:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      14: pop2
      15: return

  public boolean matches(org.apache.activemq.broker.region.MessageReference, org.apache.activemq.filter.MessageEvaluationContext) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getTargetConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       6: astore_3
       7: aload_3
       8: ifnull        27
      11: aload_3
      12: aload_0
      13: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      16: invokevirtual #23                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      19: invokevirtual #30                 // Method org/apache/activemq/command/ConsumerId.equals:(Ljava/lang/Object;)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #16                 // Field selectorExpression:Lorg/apache/activemq/filter/BooleanExpression;
      31: ifnull        47
      34: aload_0
      35: getfield      #16                 // Field selectorExpression:Lorg/apache/activemq/filter/BooleanExpression;
      38: aload_2
      39: invokeinterface #31,  2           // InterfaceMethod org/apache/activemq/filter/BooleanExpression.matches:(Lorg/apache/activemq/filter/MessageEvaluationContext;)Z
      44: ifeq          62
      47: aload_0
      48: getfield      #10                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
      51: aload_1
      52: invokevirtual #32                 // Method org/apache/activemq/broker/ConnectionContext.isAllowedToConsume:(Lorg/apache/activemq/broker/region/MessageReference;)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn
      64: astore        4
      66: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      69: ldc           #35                 // String Selector failed to evaluate: {}
      71: aload         4
      73: invokevirtual #36                 // Method javax/jms/JMSException.getMessage:()Ljava/lang/String;
      76: aload         4
      78: invokeinterface #37,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      83: iconst_0
      84: ireturn
    Exception table:
       from    to  target type
          27    63    64   Class javax/jms/JMSException

  public boolean isWildcard();
    Code:
       0: aload_0
       1: getfield      #14                 // Field destinationFilter:Lorg/apache/activemq/filter/DestinationFilter;
       4: invokevirtual #38                 // Method org/apache/activemq/filter/DestinationFilter.isWildcard:()Z
       7: ireturn

  public boolean matches(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #14                 // Field destinationFilter:Lorg/apache/activemq/filter/DestinationFilter;
       4: aload_1
       5: invokevirtual #39                 // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
       8: ireturn

  public void add(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field destinations:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_2
       5: invokevirtual #40                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public java.util.List<org.apache.activemq.broker.region.MessageReference> remove(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field destinations:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_2
       5: invokevirtual #41                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: getstatic     #42                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      12: areturn

  public org.apache.activemq.command.ConsumerInfo getConsumerInfo();
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: areturn

  public void gc();
    Code:
       0: return

  public org.apache.activemq.broker.ConnectionContext getContext();
    Code:
       0: aload_0
       1: getfield      #10                 // Field context:Lorg/apache/activemq/broker/ConnectionContext;
       4: areturn

  public org.apache.activemq.command.ConsumerInfo getInfo();
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: areturn

  public org.apache.activemq.filter.BooleanExpression getSelectorExpression();
    Code:
       0: aload_0
       1: getfield      #16                 // Field selectorExpression:Lorg/apache/activemq/filter/BooleanExpression;
       4: areturn

  public java.lang.String getSelector();
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: invokevirtual #19                 // Method org/apache/activemq/command/ConsumerInfo.getSelector:()Ljava/lang/String;
       7: areturn

  public void setSelector(java.lang.String) throws javax.jms.InvalidSelectorException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: invokevirtual #43                 // Method org/apache/activemq/command/ConsumerInfo.copy:()Lorg/apache/activemq/command/ConsumerInfo;
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #44                 // Method org/apache/activemq/command/ConsumerInfo.setSelector:(Ljava/lang/String;)V
      13: aload_2
      14: invokestatic  #15                 // Method parseSelector:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/filter/BooleanExpression;
      17: astore_3
      18: aload_0
      19: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      22: aload_1
      23: invokevirtual #44                 // Method org/apache/activemq/command/ConsumerInfo.setSelector:(Ljava/lang/String;)V
      26: aload_0
      27: aload_3
      28: putfield      #16                 // Field selectorExpression:Lorg/apache/activemq/filter/BooleanExpression;
      31: return

  public javax.management.ObjectName getObjectName();
    Code:
       0: aload_0
       1: getfield      #45                 // Field objectName:Ljavax/management/ObjectName;
       4: areturn

  public void setObjectName(javax.management.ObjectName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field objectName:Ljavax/management/ObjectName;
       5: return

  public int getPrefetchSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
       7: ireturn

  public void setPrefetchSize(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: iload_1
       5: invokevirtual #47                 // Method org/apache/activemq/command/ConsumerInfo.setPrefetchSize:(I)V
       8: return

  public boolean isRecoveryRequired();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSlowConsumer();
    Code:
       0: aload_0
       1: getfield      #48                 // Field slowConsumer:Z
       4: ireturn

  public void setSlowConsumer(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field slowConsumer:Z
       5: return

  public boolean addRecoveredMessage(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokevirtual #49                 // Method org/apache/activemq/broker/ConnectionContext.getMessageEvaluationContext:()Lorg/apache/activemq/filter/MessageEvaluationContext;
       6: astore        4
       8: aload_2
       9: invokeinterface #50,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      14: checkcast     #51                 // class org/apache/activemq/broker/region/Destination
      17: astore        5
      19: aload         4
      21: aload         5
      23: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      28: invokevirtual #53                 // Method org/apache/activemq/filter/MessageEvaluationContext.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      31: aload         4
      33: aload_2
      34: invokevirtual #54                 // Method org/apache/activemq/filter/MessageEvaluationContext.setMessageReference:(Lorg/apache/activemq/broker/region/MessageReference;)V
      37: aload_0
      38: aload_2
      39: aload         4
      41: invokevirtual #55                 // Method matches:(Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/filter/MessageEvaluationContext;)Z
      44: istore_3
      45: iload_3
      46: ifeq          54
      49: aload_0
      50: aload_2
      51: invokevirtual #56                 // Method doAddRecoveredMessage:(Lorg/apache/activemq/broker/region/MessageReference;)V
      54: aload         4
      56: invokevirtual #57                 // Method org/apache/activemq/filter/MessageEvaluationContext.clear:()V
      59: goto          72
      62: astore        6
      64: aload         4
      66: invokevirtual #57                 // Method org/apache/activemq/filter/MessageEvaluationContext.clear:()V
      69: aload         6
      71: athrow
      72: iload_3
      73: ireturn
    Exception table:
       from    to  target type
           8    54    62   any
          62    64    62   any

  public org.apache.activemq.command.ActiveMQDestination getActiveMQDestination();
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      11: invokevirtual #12                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      14: goto          18
      17: aconst_null
      18: areturn

  public boolean isBrowser();
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: ifnull        21
       7: aload_0
       8: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      11: invokevirtual #58                 // Method org/apache/activemq/command/ConsumerInfo.isBrowser:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public int getInFlightUsage();
    Code:
       0: aload_0
       1: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       4: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
       7: ifle          26
      10: aload_0
      11: invokevirtual #59                 // Method getInFlightSize:()I
      14: bipush        100
      16: imul
      17: aload_0
      18: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      21: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
      24: idiv
      25: ireturn
      26: ldc           #60                 // int 2147483647
      28: ireturn

  public void addDestination(org.apache.activemq.broker.region.Destination);
    Code:
       0: return

  public void removeDestination(org.apache.activemq.broker.region.Destination);
    Code:
       0: return

  public int getCursorMemoryHighWaterMark();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cursorMemoryHighWaterMark:I
       4: ireturn

  public void setCursorMemoryHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field cursorMemoryHighWaterMark:I
       5: return

  public int countBeforeFull();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getDispatchedQueueSize:()I
       4: aload_0
       5: getfield      #11                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
       8: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
      11: isub
      12: ireturn

  public void unmatched(org.apache.activemq.broker.region.MessageReference) throws java.io.IOException;
    Code:
       0: return

  protected void doAddRecoveredMessage(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method add:(Lorg/apache/activemq/broker/region/MessageReference;)V
       5: return

  public long getTimeOfLastMessageAck();
    Code:
       0: aload_0
       1: getfield      #18                 // Field lastAckTime:J
       4: lreturn

  public void setTimeOfLastMessageAck(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #18                 // Field lastAckTime:J
       5: return

  public long getConsumedCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field consumedCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void incrementConsumedCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field consumedCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public void resetConsumedCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field consumedCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  static {};
    Code:
       0: ldc_w         #65                 // class org/apache/activemq/broker/region/AbstractSubscription
       3: invokestatic  #66                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
