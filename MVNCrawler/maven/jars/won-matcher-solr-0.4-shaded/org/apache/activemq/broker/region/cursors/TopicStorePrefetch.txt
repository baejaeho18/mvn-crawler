Compiled from "TopicStorePrefetch.java"
class org.apache.activemq.broker.region.cursors.TopicStorePrefetch extends org.apache.activemq.broker.region.cursors.AbstractStoreCursor {
  private static final org.slf4j.Logger LOG;

  private final org.apache.activemq.store.TopicMessageStore store;

  private final java.lang.String clientId;

  private final java.lang.String subscriberName;

  private final org.apache.activemq.broker.region.Subscription subscription;

  private byte lastRecoveredPriority;

  public org.apache.activemq.broker.region.cursors.TopicStorePrefetch(org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.Topic, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/apache/activemq/broker/region/cursors/AbstractStoreCursor."<init>":(Lorg/apache/activemq/broker/region/Destination;)V
       5: aload_0
       6: bipush        9
       8: putfield      #2                  // Field lastRecoveredPriority:B
      11: aload_0
      12: aload_1
      13: putfield      #3                  // Field subscription:Lorg/apache/activemq/broker/region/Subscription;
      16: aload_0
      17: aload_2
      18: invokevirtual #4                  // Method org/apache/activemq/broker/region/Topic.getMessageStore:()Lorg/apache/activemq/store/MessageStore;
      21: checkcast     #5                  // class org/apache/activemq/store/TopicMessageStore
      24: putfield      #6                  // Field store:Lorg/apache/activemq/store/TopicMessageStore;
      27: aload_0
      28: aload_3
      29: putfield      #7                  // Field clientId:Ljava/lang/String;
      32: aload_0
      33: aload         4
      35: putfield      #8                  // Field subscriberName:Ljava/lang/String;
      38: aload_0
      39: bipush        32
      41: putfield      #9                  // Field maxProducersToAudit:I
      44: aload_0
      45: sipush        10000
      48: putfield      #10                 // Field maxAuditDepth:I
      51: aload_0
      52: invokevirtual #11                 // Method resetSize:()V
      55: return

  public boolean recoverMessageReference(org.apache.activemq.command.MessageId) throws java.lang.Exception;
    Code:
       0: new           #12                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #13                 // String Not supported
       6: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized void addMessageFirst(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)Lorg/apache/activemq/broker/region/cursors/PendingNode;
      10: pop
      11: aload_0
      12: dup
      13: getfield      #17                 // Field size:I
      16: iconst_1
      17: iadd
      18: putfield      #17                 // Field size:I
      21: return

  public synchronized boolean recoverMessage(org.apache.activemq.command.Message, boolean) throws java.lang.Exception;
    Code:
       0: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #19                 // String {} recover: {}, priority: {}
       5: iconst_3
       6: anewarray     #20                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: invokevirtual #21                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_1
      23: invokevirtual #22                 // Method org/apache/activemq/command/Message.getPriority:()B
      26: invokestatic  #23                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      29: aastore
      30: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      35: iconst_0
      36: istore_3
      37: new           #25                 // class org/apache/activemq/filter/NonCachedMessageEvaluationContext
      40: dup
      41: invokespecial #26                 // Method org/apache/activemq/filter/NonCachedMessageEvaluationContext."<init>":()V
      44: astore        4
      46: aload         4
      48: aload_1
      49: invokevirtual #27                 // Method org/apache/activemq/filter/MessageEvaluationContext.setMessageReference:(Lorg/apache/activemq/broker/region/MessageReference;)V
      52: aload_0
      53: getfield      #3                  // Field subscription:Lorg/apache/activemq/broker/region/Subscription;
      56: aload_1
      57: aload         4
      59: invokeinterface #28,  3           // InterfaceMethod org/apache/activemq/broker/region/Subscription.matches:(Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/filter/MessageEvaluationContext;)Z
      64: ifeq          90
      67: aload_0
      68: aload_1
      69: iload_2
      70: invokespecial #29                 // Method org/apache/activemq/broker/region/cursors/AbstractStoreCursor.recoverMessage:(Lorg/apache/activemq/command/Message;Z)Z
      73: istore_3
      74: iload_3
      75: ifeq          90
      78: iload_2
      79: ifne          90
      82: aload_0
      83: aload_1
      84: invokevirtual #22                 // Method org/apache/activemq/command/Message.getPriority:()B
      87: putfield      #2                  // Field lastRecoveredPriority:B
      90: iload_3
      91: ireturn

  protected synchronized int getStoreSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/activemq/store/TopicMessageStore;
       4: aload_0
       5: getfield      #7                  // Field clientId:Ljava/lang/String;
       8: aload_0
       9: getfield      #8                  // Field subscriberName:Ljava/lang/String;
      12: invokeinterface #30,  3           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.getMessageCount:(Ljava/lang/String;Ljava/lang/String;)I
      17: ireturn
      18: astore_1
      19: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #32                 // String {} Failed to get the outstanding message count from the store
      24: aload_0
      25: aload_1
      26: invokeinterface #33,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      31: new           #12                 // class java/lang/RuntimeException
      34: dup
      35: aload_1
      36: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      39: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Exception

  protected synchronized boolean isStoreEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/activemq/store/TopicMessageStore;
       4: invokeinterface #35,  1           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.isEmpty:()Z
       9: ireturn
      10: astore_1
      11: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #36                 // String Failed to determine if store is empty
      16: aload_1
      17: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: new           #12                 // class java/lang/RuntimeException
      25: dup
      26: aload_1
      27: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  protected void resetBatch();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/activemq/store/TopicMessageStore;
       4: aload_0
       5: getfield      #7                  // Field clientId:Ljava/lang/String;
       8: aload_0
       9: getfield      #8                  // Field subscriberName:Ljava/lang/String;
      12: invokeinterface #38,  3           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.resetBatching:(Ljava/lang/String;Ljava/lang/String;)V
      17: return

  protected void doFillBatch() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/activemq/store/TopicMessageStore;
       4: aload_0
       5: getfield      #7                  // Field clientId:Ljava/lang/String;
       8: aload_0
       9: getfield      #8                  // Field subscriberName:Ljava/lang/String;
      12: aload_0
      13: getfield      #39                 // Field maxBatchSize:I
      16: aload_0
      17: invokeinterface #40,  5           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.recoverNextMessages:(Ljava/lang/String;Ljava/lang/String;ILorg/apache/activemq/store/MessageRecoveryListener;)V
      22: return

  public byte getLastRecoveredPriority();
    Code:
       0: aload_0
       1: getfield      #2                  // Field lastRecoveredPriority:B
       4: ireturn

  public final boolean isPaging();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method isCacheEnabled:()Z
       4: ifne          23
       7: aload_0
       8: getfield      #15                 // Field batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
      11: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public org.apache.activemq.broker.region.Subscription getSubscription();
    Code:
       0: aload_0
       1: getfield      #3                  // Field subscription:Lorg/apache/activemq/broker/region/Subscription;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #45                 // String TopicStorePrefetch(
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field clientId:Ljava/lang/String;
      16: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #47                 // String ,
      21: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #8                  // Field subscriberName:Ljava/lang/String;
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #48                 // String )
      33: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #3                  // Field subscription:Lorg/apache/activemq/broker/region/Subscription;
      40: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      45: invokevirtual #50                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      48: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: ldc           #52                 // String  -
      53: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokespecial #53                 // Method org/apache/activemq/broker/region/cursors/AbstractStoreCursor.toString:()Ljava/lang/String;
      60: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  static {};
    Code:
       0: ldc_w         #55                 // class org/apache/activemq/broker/region/cursors/TopicStorePrefetch
       3: invokestatic  #56                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
