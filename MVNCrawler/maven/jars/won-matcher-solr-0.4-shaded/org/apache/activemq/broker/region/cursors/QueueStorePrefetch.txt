Compiled from "QueueStorePrefetch.java"
class org.apache.activemq.broker.region.cursors.QueueStorePrefetch extends org.apache.activemq.broker.region.cursors.AbstractStoreCursor {
  private static final org.slf4j.Logger LOG;

  private final org.apache.activemq.store.MessageStore store;

  private final org.apache.activemq.broker.Broker broker;

  public org.apache.activemq.broker.region.cursors.QueueStorePrefetch(org.apache.activemq.broker.region.Queue, org.apache.activemq.broker.Broker);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/broker/region/cursors/AbstractStoreCursor."<init>":(Lorg/apache/activemq/broker/region/Destination;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method org/apache/activemq/broker/region/Queue.getMessageStore:()Lorg/apache/activemq/store/MessageStore;
      10: putfield      #3                  // Field store:Lorg/apache/activemq/store/MessageStore;
      13: aload_0
      14: aload_2
      15: putfield      #4                  // Field broker:Lorg/apache/activemq/broker/Broker;
      18: return

  public boolean recoverMessageReference(org.apache.activemq.command.MessageId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field store:Lorg/apache/activemq/store/MessageStore;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/apache/activemq/store/MessageStore.getMessage:(Lorg/apache/activemq/command/MessageId;)Lorg/apache/activemq/command/Message;
      10: astore_2
      11: aload_2
      12: ifnull        21
      15: aload_0
      16: aload_2
      17: invokevirtual #6                  // Method recoverMessage:(Lorg/apache/activemq/command/Message;)Z
      20: ireturn
      21: new           #7                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #9                  // String Failed to retrieve message for id:
      30: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: astore_3
      41: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      44: aload_3
      45: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      50: new           #15                 // class java/io/IOException
      53: dup
      54: aload_3
      55: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      58: athrow

  protected synchronized int getStoreSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field store:Lorg/apache/activemq/store/MessageStore;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/activemq/store/MessageStore.getMessageCount:()I
       9: istore_1
      10: iload_1
      11: ireturn
      12: astore_1
      13: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      16: ldc           #18                 // String Failed to get message count
      18: aload_1
      19: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: new           #20                 // class java/lang/RuntimeException
      27: dup
      28: aload_1
      29: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      32: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/io/IOException

  protected synchronized boolean isStoreEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field store:Lorg/apache/activemq/store/MessageStore;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/store/MessageStore.isEmpty:()Z
       9: ireturn
      10: astore_1
      11: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #18                 // String Failed to get message count
      16: aload_1
      17: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: new           #20                 // class java/lang/RuntimeException
      25: dup
      26: aload_1
      27: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  protected void resetBatch();
    Code:
       0: aload_0
       1: getfield      #3                  // Field store:Lorg/apache/activemq/store/MessageStore;
       4: invokeinterface #24,  1           // InterfaceMethod org/apache/activemq/store/MessageStore.resetBatching:()V
       9: return

  protected void setBatch(org.apache.activemq.command.MessageId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field store:Lorg/apache/activemq/store/MessageStore;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/store/MessageStore.setBatch:(Lorg/apache/activemq/command/MessageId;)V
      10: aload_0
      11: iconst_0
      12: putfield      #26                 // Field batchResetNeeded:Z
      15: return

  protected void doFillBatch() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #27                 // Method hasSpace:()Z
       5: putfield      #28                 // Field hadSpace:Z
       8: aload_0
       9: getfield      #4                  // Field broker:Lorg/apache/activemq/broker/Broker;
      12: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      17: invokevirtual #30                 // Method org/apache/activemq/broker/BrokerService.isPersistent:()Z
      20: ifeq          30
      23: aload_0
      24: getfield      #28                 // Field hadSpace:Z
      27: ifeq          48
      30: aload_0
      31: getfield      #3                  // Field store:Lorg/apache/activemq/store/MessageStore;
      34: aload_0
      35: getfield      #31                 // Field maxBatchSize:I
      38: aload_0
      39: invokeinterface #32,  3           // InterfaceMethod org/apache/activemq/store/MessageStore.recoverNextMessages:(ILorg/apache/activemq/store/MessageRecoveryListener;)V
      44: aload_0
      45: invokevirtual #33                 // Method dealWithDuplicates:()V
      48: return

  static {};
    Code:
       0: ldc_w         #34                 // class org/apache/activemq/broker/region/cursors/QueueStorePrefetch
       3: invokestatic  #35                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
