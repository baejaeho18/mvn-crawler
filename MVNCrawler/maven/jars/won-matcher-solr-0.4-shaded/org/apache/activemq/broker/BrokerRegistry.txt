Compiled from "BrokerRegistry.java"
public class org.apache.activemq.broker.BrokerRegistry {
  private static final org.slf4j.Logger LOG;

  private static final org.apache.activemq.broker.BrokerRegistry INSTANCE;

  private final java.lang.Object mutex;

  private final java.util.Map<java.lang.String, org.apache.activemq.broker.BrokerService> brokers;

  public org.apache.activemq.broker.BrokerRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #1                  // Method java/lang/Object."<init>":()V
      12: putfield      #3                  // Field mutex:Ljava/lang/Object;
      15: aload_0
      16: new           #4                  // class java/util/HashMap
      19: dup
      20: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field brokers:Ljava/util/Map;
      26: return

  public static org.apache.activemq.broker.BrokerRegistry getInstance();
    Code:
       0: getstatic     #7                  // Field INSTANCE:Lorg/apache/activemq/broker/BrokerRegistry;
       3: areturn

  public org.apache.activemq.broker.BrokerService lookup(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #3                  // Field mutex:Ljava/lang/Object;
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_0
      10: getfield      #6                  // Field brokers:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #9                  // class org/apache/activemq/broker/BrokerService
      22: astore_2
      23: aload_2
      24: ifnonnull     63
      27: aload_1
      28: ifnull        63
      31: aload_1
      32: ldc           #10                 // String localhost
      34: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          63
      40: aload_0
      41: invokevirtual #12                 // Method findFirst:()Lorg/apache/activemq/broker/BrokerService;
      44: astore_2
      45: aload_2
      46: ifnull        63
      49: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      52: ldc           #14                 // String Broker localhost not started so using {} instead
      54: aload_2
      55: invokevirtual #15                 // Method org/apache/activemq/broker/BrokerService.getBrokerName:()Ljava/lang/String;
      58: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      63: aload_2
      64: ifnonnull     92
      67: aload_1
      68: ifnull        87
      71: aload_1
      72: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z
      75: ifne          87
      78: aload_1
      79: ldc           #18                 // String null
      81: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifeq          92
      87: aload_0
      88: invokevirtual #12                 // Method findFirst:()Lorg/apache/activemq/broker/BrokerService;
      91: astore_2
      92: aload_3
      93: monitorexit
      94: goto          104
      97: astore        4
      99: aload_3
     100: monitorexit
     101: aload         4
     103: athrow
     104: aload_2
     105: areturn
    Exception table:
       from    to  target type
           9    94    97   any
          97   101    97   any

  public org.apache.activemq.broker.BrokerService findFirst();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mutex:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field brokers:Ljava/util/Map;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          43
      31: aload_2
      32: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #9                  // class org/apache/activemq/broker/BrokerService
      40: aload_1
      41: monitorexit
      42: areturn
      43: aconst_null
      44: aload_1
      45: monitorexit
      46: areturn
      47: astore_3
      48: aload_1
      49: monitorexit
      50: aload_3
      51: athrow
    Exception table:
       from    to  target type
           7    42    47   any
          43    46    47   any
          47    50    47   any

  public void bind(java.lang.String, org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mutex:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field brokers:Ljava/util/Map;
      11: aload_1
      12: aload_2
      13: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #3                  // Field mutex:Ljava/lang/Object;
      23: invokevirtual #24                 // Method java/lang/Object.notifyAll:()V
      26: aload_3
      27: monitorexit
      28: goto          38
      31: astore        4
      33: aload_3
      34: monitorexit
      35: aload         4
      37: athrow
      38: return
    Exception table:
       from    to  target type
           7    28    31   any
          31    35    31   any

  public void unbind(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mutex:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field brokers:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #25,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public java.lang.Object getRegistryMutext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mutex:Ljava/lang/Object;
       4: areturn

  public java.util.Map<java.lang.String, org.apache.activemq.broker.BrokerService> getBrokers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field brokers:Ljava/util/Map;
       4: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  static {};
    Code:
       0: ldc_w         #27                 // class org/apache/activemq/broker/BrokerRegistry
       3: invokestatic  #28                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
       9: new           #27                 // class org/apache/activemq/broker/BrokerRegistry
      12: dup
      13: invokespecial #29                 // Method "<init>":()V
      16: putstatic     #7                  // Field INSTANCE:Lorg/apache/activemq/broker/BrokerRegistry;
      19: return
}
