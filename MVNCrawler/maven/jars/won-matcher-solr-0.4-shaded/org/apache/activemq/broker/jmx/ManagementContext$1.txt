Compiled from "ManagementContext.java"
class org.apache.activemq.broker.jmx.ManagementContext$1 extends java.lang.Thread {
  final org.apache.activemq.broker.jmx.ManagementContext this$0;

  org.apache.activemq.broker.jmx.ManagementContext$1(org.apache.activemq.broker.jmx.ManagementContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
      10: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
       4: invokestatic  #3                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$000:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/lang/String;
       7: ifnull        22
      10: ldc           #4                  // String activemq.broker
      12: aload_0
      13: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
      16: invokestatic  #3                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$000:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/lang/String;
      19: invokestatic  #5                  // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
      22: aload_0
      23: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
      26: invokestatic  #6                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$100:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljavax/management/remote/JMXConnectorServer;
      29: astore_1
      30: aload_0
      31: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
      34: invokestatic  #7                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$200:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/util/concurrent/atomic/AtomicBoolean;
      37: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      40: ifeq          163
      43: aload_1
      44: ifnull        163
      47: invokestatic  #9                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$300:()Lorg/slf4j/Logger;
      50: ldc           #10                 // String Starting JMXConnectorServer...
      52: invokeinterface #11,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      57: aload_0
      58: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
      61: invokestatic  #12                 // Method org/apache/activemq/broker/jmx/ManagementContext.access$400:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/util/concurrent/atomic/AtomicBoolean;
      64: iconst_1
      65: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      68: ldc           #4                  // String activemq.broker
      70: invokestatic  #14                 // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
      73: aload_1
      74: invokevirtual #15                 // Method javax/management/remote/JMXConnectorServer.start:()V
      77: aload_0
      78: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
      81: invokestatic  #3                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$000:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/lang/String;
      84: ifnull        99
      87: ldc           #4                  // String activemq.broker
      89: aload_0
      90: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
      93: invokestatic  #3                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$000:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/lang/String;
      96: invokestatic  #5                  // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
      99: aload_0
     100: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
     103: invokestatic  #12                 // Method org/apache/activemq/broker/jmx/ManagementContext.access$400:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/util/concurrent/atomic/AtomicBoolean;
     106: iconst_0
     107: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     110: goto          149
     113: astore_2
     114: aload_0
     115: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
     118: invokestatic  #3                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$000:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/lang/String;
     121: ifnull        136
     124: ldc           #4                  // String activemq.broker
     126: aload_0
     127: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
     130: invokestatic  #3                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$000:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/lang/String;
     133: invokestatic  #5                  // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
     136: aload_0
     137: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/jmx/ManagementContext;
     140: invokestatic  #12                 // Method org/apache/activemq/broker/jmx/ManagementContext.access$400:(Lorg/apache/activemq/broker/jmx/ManagementContext;)Ljava/util/concurrent/atomic/AtomicBoolean;
     143: iconst_0
     144: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     147: aload_2
     148: athrow
     149: invokestatic  #9                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$300:()Lorg/slf4j/Logger;
     152: ldc           #16                 // String JMX consoles can connect to {}
     154: aload_1
     155: invokevirtual #17                 // Method javax/management/remote/JMXConnectorServer.getAddress:()Ljavax/management/remote/JMXServiceURL;
     158: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     163: ldc           #4                  // String activemq.broker
     165: invokestatic  #14                 // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
     168: goto          213
     171: astore_1
     172: invokestatic  #9                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$300:()Lorg/slf4j/Logger;
     175: ldc           #20                 // String Failed to start JMX connector {}. Will restart management to re-create JMX connector, trying to remedy this issue.
     177: aload_1
     178: invokevirtual #21                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     181: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     186: invokestatic  #9                  // Method org/apache/activemq/broker/jmx/ManagementContext.access$300:()Lorg/slf4j/Logger;
     189: ldc           #23                 // String Reason for failed JMX connector start
     191: aload_1
     192: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     197: ldc           #4                  // String activemq.broker
     199: invokestatic  #14                 // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
     202: goto          213
     205: astore_3
     206: ldc           #4                  // String activemq.broker
     208: invokestatic  #14                 // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
     211: aload_3
     212: athrow
     213: return
    Exception table:
       from    to  target type
          68    77   113   any
         113   114   113   any
          22   163   171   Class java/io/IOException
          22   163   205   any
         171   197   205   any
         205   206   205   any
}
