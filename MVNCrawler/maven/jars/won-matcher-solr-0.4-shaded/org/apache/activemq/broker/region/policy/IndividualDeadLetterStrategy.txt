Compiled from "IndividualDeadLetterStrategy.java"
public class org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy extends org.apache.activemq.broker.region.policy.AbstractDeadLetterStrategy {
  private java.lang.String topicPrefix;

  private java.lang.String queuePrefix;

  private java.lang.String topicSuffix;

  private java.lang.String queueSuffix;

  private boolean useQueueForQueueMessages;

  private boolean useQueueForTopicMessages;

  private boolean destinationPerDurableSubscriber;

  public org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/broker/region/policy/AbstractDeadLetterStrategy."<init>":()V
       4: aload_0
       5: ldc           #2                  // String ActiveMQ.DLQ.Topic.
       7: putfield      #3                  // Field topicPrefix:Ljava/lang/String;
      10: aload_0
      11: ldc           #4                  // String ActiveMQ.DLQ.Queue.
      13: putfield      #5                  // Field queuePrefix:Ljava/lang/String;
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field useQueueForQueueMessages:Z
      21: aload_0
      22: iconst_1
      23: putfield      #7                  // Field useQueueForTopicMessages:Z
      26: return

  public org.apache.activemq.command.ActiveMQDestination getDeadLetterQueueFor(org.apache.activemq.command.Message, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: invokevirtual #9                  // Method org/apache/activemq/command/ActiveMQDestination.isQueue:()Z
       7: ifeq          29
      10: aload_0
      11: aload_1
      12: aload_0
      13: getfield      #5                  // Field queuePrefix:Ljava/lang/String;
      16: aload_0
      17: getfield      #10                 // Field queueSuffix:Ljava/lang/String;
      20: aload_0
      21: getfield      #6                  // Field useQueueForQueueMessages:Z
      24: aload_2
      25: invokevirtual #11                 // Method createDestination:(Lorg/apache/activemq/command/Message;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/activemq/broker/region/Subscription;)Lorg/apache/activemq/command/ActiveMQDestination;
      28: areturn
      29: aload_0
      30: aload_1
      31: aload_0
      32: getfield      #3                  // Field topicPrefix:Ljava/lang/String;
      35: aload_0
      36: getfield      #12                 // Field topicSuffix:Ljava/lang/String;
      39: aload_0
      40: getfield      #7                  // Field useQueueForTopicMessages:Z
      43: aload_2
      44: invokevirtual #11                 // Method createDestination:(Lorg/apache/activemq/command/Message;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/activemq/broker/region/Subscription;)Lorg/apache/activemq/command/ActiveMQDestination;
      47: areturn

  public java.lang.String getQueuePrefix();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queuePrefix:Ljava/lang/String;
       4: areturn

  public void setQueuePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field queuePrefix:Ljava/lang/String;
       5: return

  public java.lang.String getTopicPrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field topicPrefix:Ljava/lang/String;
       4: areturn

  public void setTopicPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field topicPrefix:Ljava/lang/String;
       5: return

  public java.lang.String getQueueSuffix();
    Code:
       0: aload_0
       1: getfield      #10                 // Field queueSuffix:Ljava/lang/String;
       4: areturn

  public void setQueueSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field queueSuffix:Ljava/lang/String;
       5: return

  public java.lang.String getTopicSuffix();
    Code:
       0: aload_0
       1: getfield      #12                 // Field topicSuffix:Ljava/lang/String;
       4: areturn

  public void setTopicSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field topicSuffix:Ljava/lang/String;
       5: return

  public boolean isUseQueueForQueueMessages();
    Code:
       0: aload_0
       1: getfield      #6                  // Field useQueueForQueueMessages:Z
       4: ireturn

  public void setUseQueueForQueueMessages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field useQueueForQueueMessages:Z
       5: return

  public boolean isUseQueueForTopicMessages();
    Code:
       0: aload_0
       1: getfield      #7                  // Field useQueueForTopicMessages:Z
       4: ireturn

  public void setUseQueueForTopicMessages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field useQueueForTopicMessages:Z
       5: return

  public boolean isDestinationPerDurableSubscriber();
    Code:
       0: aload_0
       1: getfield      #13                 // Field destinationPerDurableSubscriber:Z
       4: ireturn

  public void setDestinationPerDurableSubscriber(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field destinationPerDurableSubscriber:Z
       5: return

  protected org.apache.activemq.command.ActiveMQDestination createDestination(org.apache.activemq.command.Message, java.lang.String, java.lang.String, boolean, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aconst_null
       1: astore        6
       3: aload_1
       4: invokevirtual #14                 // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
       7: checkcast     #15                 // class org/apache/activemq/broker/region/Destination
      10: astore        7
      12: aload         7
      14: ifnull        88
      17: aload         7
      19: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      24: ifnull        88
      27: aload         7
      29: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      34: invokevirtual #17                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      37: ifnull        88
      40: aload         7
      42: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      47: invokevirtual #17                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      50: invokevirtual #18                 // Method java/lang/String.isEmpty:()Z
      53: ifne          88
      56: new           #19                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_2
      64: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload         7
      69: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      74: invokevirtual #17                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      77: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: astore        6
      85: goto          114
      88: new           #19                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      95: aload_2
      96: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_1
     100: invokevirtual #8                  // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     103: invokevirtual #17                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
     106: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: astore        6
     114: aload_0
     115: getfield      #13                 // Field destinationPerDurableSubscriber:Z
     118: ifeq          162
     121: aload         5
     123: instanceof    #23                 // class org/apache/activemq/broker/region/DurableTopicSubscription
     126: ifeq          162
     129: new           #19                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     136: aload         6
     138: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #24                 // String .
     143: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload         5
     148: checkcast     #23                 // class org/apache/activemq/broker/region/DurableTopicSubscription
     151: invokevirtual #25                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.getSubscriptionKey:()Lorg/apache/activemq/util/SubscriptionKey;
     154: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     157: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: astore        6
     162: aload_3
     163: ifnull        194
     166: aload_3
     167: invokevirtual #18                 // Method java/lang/String.isEmpty:()Z
     170: ifne          194
     173: new           #19                 // class java/lang/StringBuilder
     176: dup
     177: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     180: aload         6
     182: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_3
     186: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: astore        6
     194: iload         4
     196: ifeq          209
     199: new           #27                 // class org/apache/activemq/command/ActiveMQQueue
     202: dup
     203: aload         6
     205: invokespecial #28                 // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
     208: areturn
     209: new           #29                 // class org/apache/activemq/command/ActiveMQTopic
     212: dup
     213: aload         6
     215: invokespecial #30                 // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
     218: areturn

  public boolean isDLQ(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #9                  // Method org/apache/activemq/command/ActiveMQDestination.isQueue:()Z
       9: ifeq          50
      12: aload_0
      13: getfield      #5                  // Field queuePrefix:Ljava/lang/String;
      16: ifnull        30
      19: aload_2
      20: aload_0
      21: getfield      #5                  // Field queuePrefix:Ljava/lang/String;
      24: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      27: ifne          48
      30: aload_0
      31: getfield      #10                 // Field queueSuffix:Ljava/lang/String;
      34: ifnull        88
      37: aload_2
      38: aload_0
      39: getfield      #10                 // Field queueSuffix:Ljava/lang/String;
      42: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      45: ifeq          88
      48: iconst_1
      49: ireturn
      50: aload_0
      51: getfield      #3                  // Field topicPrefix:Ljava/lang/String;
      54: ifnull        68
      57: aload_2
      58: aload_0
      59: getfield      #3                  // Field topicPrefix:Ljava/lang/String;
      62: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      65: ifne          86
      68: aload_0
      69: getfield      #12                 // Field topicSuffix:Ljava/lang/String;
      72: ifnull        88
      75: aload_2
      76: aload_0
      77: getfield      #12                 // Field topicSuffix:Ljava/lang/String;
      80: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      83: ifeq          88
      86: iconst_1
      87: ireturn
      88: iconst_0
      89: ireturn
}
