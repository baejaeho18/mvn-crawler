Compiled from "CompositeDestination.java"
public abstract class org.apache.activemq.broker.region.virtual.CompositeDestination implements org.apache.activemq.broker.region.virtual.VirtualDestination {
  private java.lang.String name;

  private java.util.Collection forwardTo;

  private boolean forwardOnly;

  private boolean copyMessage;

  private boolean concurrentSend;

  public org.apache.activemq.broker.region.virtual.CompositeDestination();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field forwardOnly:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field copyMessage:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field concurrentSend:Z
      19: return

  public org.apache.activemq.broker.region.Destination intercept(org.apache.activemq.broker.region.Destination);
    Code:
       0: new           #5                  // class org/apache/activemq/broker/region/virtual/CompositeDestinationFilter
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #6                  // Method getForwardTo:()Ljava/util/Collection;
       9: aload_0
      10: invokevirtual #7                  // Method isForwardOnly:()Z
      13: aload_0
      14: invokevirtual #8                  // Method isCopyMessage:()Z
      17: aload_0
      18: invokevirtual #9                  // Method isConcurrentSend:()Z
      21: invokespecial #10                 // Method org/apache/activemq/broker/region/virtual/CompositeDestinationFilter."<init>":(Lorg/apache/activemq/broker/region/Destination;Ljava/util/Collection;ZZZ)V
      24: areturn

  public void create(org.apache.activemq.broker.Broker, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: return

  public void remove(org.apache.activemq.broker.region.Destination);
    Code:
       0: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field name:Ljava/lang/String;
       5: return

  public java.util.Collection getForwardTo();
    Code:
       0: aload_0
       1: getfield      #12                 // Field forwardTo:Ljava/util/Collection;
       4: areturn

  public void setForwardTo(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field forwardTo:Ljava/util/Collection;
       5: return

  public boolean isForwardOnly();
    Code:
       0: aload_0
       1: getfield      #2                  // Field forwardOnly:Z
       4: ireturn

  public void setForwardOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field forwardOnly:Z
       5: return

  public boolean isCopyMessage();
    Code:
       0: aload_0
       1: getfield      #3                  // Field copyMessage:Z
       4: ireturn

  public void setCopyMessage(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field copyMessage:Z
       5: return

  public void setConcurrentSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field concurrentSend:Z
       5: return

  public boolean isConcurrentSend();
    Code:
       0: aload_0
       1: getfield      #4                  // Field concurrentSend:Z
       4: ireturn
}
