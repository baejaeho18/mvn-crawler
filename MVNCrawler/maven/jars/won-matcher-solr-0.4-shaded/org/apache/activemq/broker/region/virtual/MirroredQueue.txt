Compiled from "MirroredQueue.java"
public class org.apache.activemq.broker.region.virtual.MirroredQueue implements org.apache.activemq.broker.region.DestinationInterceptor,org.apache.activemq.broker.BrokerServiceAware {
  private static final transient org.slf4j.Logger LOG;

  private java.lang.String prefix;

  private java.lang.String postfix;

  private boolean copyMessage;

  private org.apache.activemq.broker.BrokerService brokerService;

  public org.apache.activemq.broker.region.virtual.MirroredQueue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String VirtualTopic.Mirror.
       7: putfield      #3                  // Field prefix:Ljava/lang/String;
      10: aload_0
      11: ldc           #4                  // String
      13: putfield      #5                  // Field postfix:Ljava/lang/String;
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field copyMessage:Z
      21: return

  public org.apache.activemq.broker.region.Destination intercept(org.apache.activemq.broker.region.Destination);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       6: invokevirtual #8                  // Method org/apache/activemq/command/ActiveMQDestination.isQueue:()Z
       9: ifeq          72
      12: aload_1
      13: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      18: invokevirtual #9                  // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      21: ifeq          34
      24: aload_0
      25: getfield      #10                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      28: invokevirtual #11                 // Method org/apache/activemq/broker/BrokerService.isUseTempMirroredQueues:()Z
      31: ifeq          72
      34: aload_0
      35: aload_1
      36: invokevirtual #12                 // Method getMirrorDestination:(Lorg/apache/activemq/broker/region/Destination;)Lorg/apache/activemq/broker/region/Destination;
      39: astore_2
      40: aload_2
      41: ifnull        56
      44: new           #13                 // class org/apache/activemq/broker/region/virtual/MirroredQueue$1
      47: dup
      48: aload_0
      49: aload_1
      50: aload_2
      51: aload_1
      52: invokespecial #14                 // Method org/apache/activemq/broker/region/virtual/MirroredQueue$1."<init>":(Lorg/apache/activemq/broker/region/virtual/MirroredQueue;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/broker/region/Destination;)V
      55: areturn
      56: goto          72
      59: astore_2
      60: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      63: ldc           #17                 // String Failed to lookup the mirror destination for: {}
      65: aload_1
      66: aload_2
      67: invokeinterface #18,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      72: aload_1
      73: areturn
    Exception table:
       from    to  target type
          34    55    59   Class java/lang/Exception

  public void remove(org.apache.activemq.broker.region.Destination);
    Code:
       0: aload_0
       1: getfield      #10                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: ifnonnull     17
       7: new           #19                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #20                 // String No brokerService injected!
      13: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      24: invokevirtual #22                 // Method getMirrorTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQDestination;
      27: astore_2
      28: aload_2
      29: ifnull        56
      32: aload_0
      33: getfield      #10                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      36: aload_2
      37: invokevirtual #23                 // Method org/apache/activemq/broker/BrokerService.removeDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      40: goto          56
      43: astore_3
      44: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #24                 // String Failed to remove mirror destination for {}
      49: aload_1
      50: aload_3
      51: invokeinterface #18,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      56: return
    Exception table:
       from    to  target type
          32    40    43   Class java/lang/Exception

  public void create(org.apache.activemq.broker.Broker, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: return

  public java.lang.String getPostfix();
    Code:
       0: aload_0
       1: getfield      #5                  // Field postfix:Ljava/lang/String;
       4: areturn

  public void setPostfix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field postfix:Ljava/lang/String;
       5: return

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefix:Ljava/lang/String;
       4: areturn

  public void setPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field prefix:Ljava/lang/String;
       5: return

  public boolean isCopyMessage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field copyMessage:Z
       4: ireturn

  public void setCopyMessage(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field copyMessage:Z
       5: return

  public void setBrokerService(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       5: return

  protected org.apache.activemq.broker.region.Destination getMirrorDestination(org.apache.activemq.broker.region.Destination) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: ifnonnull     17
       7: new           #19                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #20                 // String No brokerService injected!
      13: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      24: invokevirtual #22                 // Method getMirrorTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/command/ActiveMQDestination;
      27: astore_2
      28: aload_0
      29: getfield      #10                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      32: aload_2
      33: invokevirtual #25                 // Method org/apache/activemq/broker/BrokerService.getDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Destination;
      36: areturn

  protected org.apache.activemq.command.ActiveMQDestination getMirrorTopic(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: new           #26                 // class org/apache/activemq/command/ActiveMQTopic
       3: dup
       4: new           #27                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: getfield      #3                  // Field prefix:Ljava/lang/String;
      15: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_1
      19: invokevirtual #30                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      22: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #5                  // Field postfix:Ljava/lang/String;
      29: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #32                 // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
      38: areturn

  static {};
    Code:
       0: ldc_w         #33                 // class org/apache/activemq/broker/region/virtual/MirroredQueue
       3: invokestatic  #34                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
