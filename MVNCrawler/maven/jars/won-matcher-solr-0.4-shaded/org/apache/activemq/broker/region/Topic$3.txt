Compiled from "Topic.java"
class org.apache.activemq.broker.region.Topic$3 implements java.lang.Runnable {
  final org.apache.activemq.command.Message val$message;

  final org.apache.activemq.broker.ConnectionContext val$context;

  final org.apache.activemq.broker.ProducerBrokerExchange val$producerExchange;

  final boolean val$sendProducerAck;

  final org.apache.activemq.command.ProducerInfo val$producerInfo;

  final org.apache.activemq.broker.region.Topic this$0;

  org.apache.activemq.broker.region.Topic$3(org.apache.activemq.broker.region.Topic, org.apache.activemq.command.Message, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.ProducerBrokerExchange, boolean, org.apache.activemq.command.ProducerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Topic;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$producerExchange:Lorg/apache/activemq/broker/ProducerBrokerExchange;
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field val$sendProducerAck:Z
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$producerInfo:Lorg/apache/activemq/command/ProducerInfo;
      33: aload_0
      34: invokespecial #7                  // Method java/lang/Object."<init>":()V
      37: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
       4: invokevirtual #8                  // Method org/apache/activemq/command/Message.isExpired:()Z
       7: ifeq          47
      10: aload_0
      11: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Topic;
      14: getfield      #9                  // Field org/apache/activemq/broker/region/Topic.broker:Lorg/apache/activemq/broker/Broker;
      17: aload_0
      18: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
      21: aload_0
      22: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      25: aconst_null
      26: invokeinterface #10,  4           // InterfaceMethod org/apache/activemq/broker/Broker.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;)V
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Topic;
      35: invokevirtual #11                 // Method org/apache/activemq/broker/region/Topic.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
      38: invokevirtual #12                 // Method org/apache/activemq/broker/region/DestinationStatistics.getExpired:()Lorg/apache/activemq/management/CountStatisticImpl;
      41: invokevirtual #13                 // Method org/apache/activemq/management/CountStatisticImpl.increment:()V
      44: goto          62
      47: aload_0
      48: getfield      #1                  // Field this$0:Lorg/apache/activemq/broker/region/Topic;
      51: aload_0
      52: getfield      #4                  // Field val$producerExchange:Lorg/apache/activemq/broker/ProducerBrokerExchange;
      55: aload_0
      56: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      59: invokevirtual #14                 // Method org/apache/activemq/broker/region/Topic.doMessageSend:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      62: aload_0
      63: getfield      #5                  // Field val$sendProducerAck:Z
      66: ifeq          107
      69: new           #15                 // class org/apache/activemq/command/ProducerAck
      72: dup
      73: aload_0
      74: getfield      #6                  // Field val$producerInfo:Lorg/apache/activemq/command/ProducerInfo;
      77: invokevirtual #16                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      80: aload_0
      81: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
      84: invokevirtual #17                 // Method org/apache/activemq/command/Message.getSize:()I
      87: invokespecial #18                 // Method org/apache/activemq/command/ProducerAck."<init>":(Lorg/apache/activemq/command/ProducerId;I)V
      90: astore_1
      91: aload_0
      92: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
      95: invokevirtual #19                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
      98: aload_1
      99: invokeinterface #20,  2           // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     104: goto          139
     107: new           #21                 // class org/apache/activemq/command/Response
     110: dup
     111: invokespecial #22                 // Method org/apache/activemq/command/Response."<init>":()V
     114: astore_1
     115: aload_1
     116: aload_0
     117: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
     120: invokevirtual #23                 // Method org/apache/activemq/command/Message.getCommandId:()I
     123: invokevirtual #24                 // Method org/apache/activemq/command/Response.setCorrelationId:(I)V
     126: aload_0
     127: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
     130: invokevirtual #19                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     133: aload_1
     134: invokeinterface #20,  2           // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     139: goto          193
     142: astore_1
     143: aload_0
     144: getfield      #5                  // Field val$sendProducerAck:Z
     147: ifne          193
     150: aload_0
     151: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
     154: invokevirtual #26                 // Method org/apache/activemq/broker/ConnectionContext.isInRecoveryMode:()Z
     157: ifne          193
     160: new           #27                 // class org/apache/activemq/command/ExceptionResponse
     163: dup
     164: aload_1
     165: invokespecial #28                 // Method org/apache/activemq/command/ExceptionResponse."<init>":(Ljava/lang/Throwable;)V
     168: astore_2
     169: aload_2
     170: aload_0
     171: getfield      #2                  // Field val$message:Lorg/apache/activemq/command/Message;
     174: invokevirtual #23                 // Method org/apache/activemq/command/Message.getCommandId:()I
     177: invokevirtual #29                 // Method org/apache/activemq/command/ExceptionResponse.setCorrelationId:(I)V
     180: aload_0
     181: getfield      #3                  // Field val$context:Lorg/apache/activemq/broker/ConnectionContext;
     184: invokevirtual #19                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     187: aload_2
     188: invokeinterface #20,  2           // InterfaceMethod org/apache/activemq/broker/Connection.dispatchAsync:(Lorg/apache/activemq/command/Command;)V
     193: return
    Exception table:
       from    to  target type
           0   139   142   Class java/lang/Exception
}
