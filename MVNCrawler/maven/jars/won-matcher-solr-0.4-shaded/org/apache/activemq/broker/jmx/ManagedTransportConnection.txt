Compiled from "ManagedTransportConnection.java"
public class org.apache.activemq.broker.jmx.ManagedTransportConnection extends org.apache.activemq.broker.TransportConnection {
  private static final org.slf4j.Logger LOG;

  private final org.apache.activemq.broker.jmx.ManagementContext managementContext;

  private final javax.management.ObjectName connectorName;

  private final org.apache.activemq.broker.jmx.ConnectionViewMBean mbean;

  private javax.management.ObjectName byClientIdName;

  private javax.management.ObjectName byAddressName;

  private final boolean populateUserName;

  public org.apache.activemq.broker.jmx.ManagedTransportConnection(org.apache.activemq.broker.TransportConnector, org.apache.activemq.transport.Transport, org.apache.activemq.broker.Broker, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.broker.jmx.ManagementContext, javax.management.ObjectName) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method org/apache/activemq/broker/TransportConnection."<init>":(Lorg/apache/activemq/broker/TransportConnector;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/broker/Broker;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/thread/TaskRunnerFactory;)V
      11: aload_0
      12: aload         6
      14: putfield      #2                  // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
      17: aload_0
      18: aload         7
      20: putfield      #3                  // Field connectorName:Ljavax/management/ObjectName;
      23: aload_0
      24: new           #4                  // class org/apache/activemq/broker/jmx/ConnectionView
      27: dup
      28: aload_0
      29: aload_0
      30: getfield      #2                  // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
      33: invokespecial #5                  // Method org/apache/activemq/broker/jmx/ConnectionView."<init>":(Lorg/apache/activemq/broker/Connection;Lorg/apache/activemq/broker/jmx/ManagementContext;)V
      36: putfield      #6                  // Field mbean:Lorg/apache/activemq/broker/jmx/ConnectionViewMBean;
      39: aload_0
      40: aload_3
      41: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      46: invokevirtual #8                  // Method org/apache/activemq/broker/BrokerService.isPopulateUserNameInMBeans:()Z
      49: putfield      #9                  // Field populateUserName:Z
      52: aload_0
      53: getfield      #2                  // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
      56: invokevirtual #10                 // Method org/apache/activemq/broker/jmx/ManagementContext.isAllowRemoteAddressInMBeanNames:()Z
      59: ifeq          86
      62: aload_0
      63: aload_0
      64: ldc           #11                 // String remoteAddress
      66: aload_2
      67: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
      72: invokevirtual #13                 // Method createObjectName:(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      75: putfield      #14                 // Field byAddressName:Ljavax/management/ObjectName;
      78: aload_0
      79: aload_0
      80: getfield      #14                 // Field byAddressName:Ljavax/management/ObjectName;
      83: invokevirtual #15                 // Method registerMBean:(Ljavax/management/ObjectName;)V
      86: return

  public void stopAsync();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isStopping:()Z
       4: ifne          47
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: aload_0
      13: getfield      #17                 // Field byClientIdName:Ljavax/management/ObjectName;
      16: invokevirtual #18                 // Method unregisterMBean:(Ljavax/management/ObjectName;)V
      19: aload_0
      20: aload_0
      21: getfield      #14                 // Field byAddressName:Ljavax/management/ObjectName;
      24: invokevirtual #18                 // Method unregisterMBean:(Ljavax/management/ObjectName;)V
      27: aload_0
      28: aconst_null
      29: putfield      #17                 // Field byClientIdName:Ljavax/management/ObjectName;
      32: aload_0
      33: aconst_null
      34: putfield      #14                 // Field byAddressName:Ljavax/management/ObjectName;
      37: aload_1
      38: monitorexit
      39: goto          47
      42: astore_2
      43: aload_1
      44: monitorexit
      45: aload_2
      46: athrow
      47: aload_0
      48: invokespecial #19                 // Method org/apache/activemq/broker/TransportConnection.stopAsync:()V
      51: return
    Exception table:
       from    to  target type
          11    39    42   any
          42    45    42   any

  public org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method org/apache/activemq/broker/TransportConnection.processAddConnection:(Lorg/apache/activemq/command/ConnectionInfo;)Lorg/apache/activemq/command/Response;
       5: astore_2
       6: aload_1
       7: invokevirtual #21                 // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: getfield      #9                  // Field populateUserName:Z
      15: ifeq          32
      18: aload_0
      19: getfield      #6                  // Field mbean:Lorg/apache/activemq/broker/jmx/ConnectionViewMBean;
      22: checkcast     #4                  // class org/apache/activemq/broker/jmx/ConnectionView
      25: aload_1
      26: invokevirtual #22                 // Method org/apache/activemq/command/ConnectionInfo.getUserName:()Ljava/lang/String;
      29: invokevirtual #23                 // Method org/apache/activemq/broker/jmx/ConnectionView.setUserName:(Ljava/lang/String;)V
      32: aload_3
      33: ifnull        62
      36: aload_0
      37: getfield      #17                 // Field byClientIdName:Ljavax/management/ObjectName;
      40: ifnonnull     62
      43: aload_0
      44: aload_0
      45: ldc           #24                 // String clientId
      47: aload_3
      48: invokevirtual #13                 // Method createObjectName:(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      51: putfield      #17                 // Field byClientIdName:Ljavax/management/ObjectName;
      54: aload_0
      55: aload_0
      56: getfield      #17                 // Field byClientIdName:Ljavax/management/ObjectName;
      59: invokevirtual #15                 // Method registerMBean:(Ljavax/management/ObjectName;)V
      62: aload_2
      63: areturn

  protected void registerMBean(javax.management.ObjectName);
    Code:
       0: aload_1
       1: ifnull        42
       4: aload_0
       5: getfield      #2                  // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
       8: aload_0
       9: getfield      #6                  // Field mbean:Lorg/apache/activemq/broker/jmx/ConnectionViewMBean;
      12: aload_1
      13: invokestatic  #25                 // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      16: goto          42
      19: astore_2
      20: getstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
      23: ldc           #28                 // String Failed to register MBean {}
      25: aload_1
      26: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      31: getstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
      34: ldc           #30                 // String Failure reason:
      36: aload_2
      37: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: return
    Exception table:
       from    to  target type
           4    16    19   Class java/lang/Throwable

  protected void unregisterMBean(javax.management.ObjectName);
    Code:
       0: aload_1
       1: ifnull        38
       4: aload_0
       5: getfield      #2                  // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
       8: aload_1
       9: invokevirtual #32                 // Method org/apache/activemq/broker/jmx/ManagementContext.unregisterMBean:(Ljavax/management/ObjectName;)V
      12: goto          38
      15: astore_2
      16: getstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
      19: ldc           #33                 // String Failed to unregister MBean {}
      21: aload_1
      22: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      27: getstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #30                 // String Failure reason:
      32: aload_2
      33: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: return
    Exception table:
       from    to  target type
           4    12    15   Class java/lang/Throwable

  protected javax.management.ObjectName createObjectName(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectorName:Ljavax/management/ObjectName;
       4: aload_1
       5: aload_2
       6: invokestatic  #34                 // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createConnectionViewByType:(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
       9: areturn
      10: astore_3
      11: aload_3
      12: invokestatic  #35                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Throwable;)Ljava/io/IOException;
      15: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable

  static {};
    Code:
       0: ldc_w         #36                 // class org/apache/activemq/broker/jmx/ManagedTransportConnection
       3: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
