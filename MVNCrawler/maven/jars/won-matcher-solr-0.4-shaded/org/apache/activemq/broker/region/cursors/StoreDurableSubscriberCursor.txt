Compiled from "StoreDurableSubscriberCursor.java"
public class org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor extends org.apache.activemq.broker.region.cursors.AbstractPendingMessageCursor {
  private static final org.slf4j.Logger LOG;

  private final java.lang.String clientId;

  private final java.lang.String subscriberName;

  private final java.util.Map<org.apache.activemq.broker.region.Destination, org.apache.activemq.broker.region.cursors.TopicStorePrefetch> topics;

  private final java.util.List<org.apache.activemq.broker.region.cursors.PendingMessageCursor> storePrefetches;

  private final org.apache.activemq.broker.region.cursors.PendingMessageCursor nonPersistent;

  private org.apache.activemq.broker.region.cursors.PendingMessageCursor currentCursor;

  private final org.apache.activemq.broker.region.DurableTopicSubscription subscription;

  private boolean immediatePriorityDispatch;

  public org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor(org.apache.activemq.broker.Broker, java.lang.String, java.lang.String, int, org.apache.activemq.broker.region.DurableTopicSubscription);
    Code:
       0: aload_0
       1: aload_1
       2: aload         5
       4: invokestatic  #1                  // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.isPrioritizedMessageSubscriber:(Lorg/apache/activemq/broker/Broker;Lorg/apache/activemq/broker/region/Subscription;)Z
       7: invokespecial #2                  // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor."<init>":(Z)V
      10: aload_0
      11: new           #3                  // class java/util/HashMap
      14: dup
      15: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      18: putfield      #5                  // Field topics:Ljava/util/Map;
      21: aload_0
      22: new           #6                  // class java/util/concurrent/CopyOnWriteArrayList
      25: dup
      26: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      29: putfield      #8                  // Field storePrefetches:Ljava/util/List;
      32: aload_0
      33: iconst_1
      34: putfield      #9                  // Field immediatePriorityDispatch:Z
      37: aload_0
      38: aload         5
      40: putfield      #10                 // Field subscription:Lorg/apache/activemq/broker/region/DurableTopicSubscription;
      43: aload_0
      44: aload_2
      45: putfield      #11                 // Field clientId:Ljava/lang/String;
      48: aload_0
      49: aload_3
      50: putfield      #12                 // Field subscriberName:Ljava/lang/String;
      53: aload_1
      54: invokeinterface #13,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      59: invokevirtual #14                 // Method org/apache/activemq/broker/BrokerService.isPersistent:()Z
      62: ifeq          102
      65: aload_0
      66: new           #15                 // class org/apache/activemq/broker/region/cursors/FilePendingMessageCursor
      69: dup
      70: aload_1
      71: new           #16                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      78: aload_2
      79: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_3
      83: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_0
      90: getfield      #20                 // Field prioritizedMessages:Z
      93: invokespecial #21                 // Method org/apache/activemq/broker/region/cursors/FilePendingMessageCursor."<init>":(Lorg/apache/activemq/broker/Broker;Ljava/lang/String;Z)V
      96: putfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      99: goto          117
     102: aload_0
     103: new           #23                 // class org/apache/activemq/broker/region/cursors/VMPendingMessageCursor
     106: dup
     107: aload_0
     108: getfield      #20                 // Field prioritizedMessages:Z
     111: invokespecial #24                 // Method org/apache/activemq/broker/region/cursors/VMPendingMessageCursor."<init>":(Z)V
     114: putfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     117: aload_0
     118: getfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     121: iload         4
     123: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxBatchSize:(I)V
     128: aload_0
     129: getfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     132: aload_0
     133: getfield      #26                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     136: invokeinterface #27,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
     141: aload_0
     142: getfield      #8                  // Field storePrefetches:Ljava/util/List;
     145: aload_0
     146: getfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     149: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     154: pop
     155: aload_0
     156: getfield      #20                 // Field prioritizedMessages:Z
     159: ifeq          173
     162: aload_0
     163: bipush        10
     165: aload_0
     166: invokevirtual #29                 // Method getMaxAuditDepth:()I
     169: imul
     170: invokevirtual #30                 // Method setMaxAuditDepth:(I)V
     173: return

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method isStarted:()Z
       4: ifne          59
       7: aload_0
       8: invokespecial #32                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.start:()V
      11: aload_0
      12: getfield      #8                  // Field storePrefetches:Ljava/util/List;
      15: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_1
      21: aload_1
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          59
      30: aload_1
      31: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      39: astore_2
      40: aload_2
      41: aload_0
      42: invokevirtual #37                 // Method getMessageAudit:()Lorg/apache/activemq/ActiveMQMessageAudit;
      45: invokeinterface #38,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMessageAudit:(Lorg/apache/activemq/ActiveMQMessageAudit;)V
      50: aload_2
      51: invokeinterface #39,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.start:()V
      56: goto          21
      59: return

  public synchronized void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method isStarted:()Z
       4: ifeq          111
       7: aload_0
       8: getfield      #10                 // Field subscription:Lorg/apache/activemq/broker/region/DurableTopicSubscription;
      11: invokevirtual #40                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.isKeepDurableSubsActive:()Z
      14: ifeq          62
      17: aload_0
      18: invokespecial #41                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.gc:()V
      21: aload_0
      22: getfield      #8                  // Field storePrefetches:Ljava/util/List;
      25: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore_1
      31: aload_1
      32: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          59
      40: aload_1
      41: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      49: astore_2
      50: aload_2
      51: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.gc:()V
      56: goto          31
      59: goto          111
      62: aload_0
      63: invokespecial #43                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.stop:()V
      66: aload_0
      67: getfield      #8                  // Field storePrefetches:Ljava/util/List;
      70: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore_1
      76: aload_1
      77: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          104
      85: aload_1
      86: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      94: astore_2
      95: aload_2
      96: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.stop:()V
     101: goto          76
     104: aload_0
     105: invokevirtual #37                 // Method getMessageAudit:()Lorg/apache/activemq/ActiveMQMessageAudit;
     108: invokevirtual #45                 // Method org/apache/activemq/ActiveMQMessageAudit.clear:()V
     111: return

  public synchronized void add(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        147
       4: aload_2
       5: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      10: invokestatic  #47                 // Method org/apache/activemq/advisory/AdvisorySupport.isAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      13: ifne          147
      16: new           #48                 // class org/apache/activemq/broker/region/cursors/TopicStorePrefetch
      19: dup
      20: aload_0
      21: getfield      #10                 // Field subscription:Lorg/apache/activemq/broker/region/DurableTopicSubscription;
      24: aload_2
      25: checkcast     #49                 // class org/apache/activemq/broker/region/Topic
      28: aload_0
      29: getfield      #11                 // Field clientId:Ljava/lang/String;
      32: aload_0
      33: getfield      #12                 // Field subscriberName:Ljava/lang/String;
      36: invokespecial #50                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch."<init>":(Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/Topic;Ljava/lang/String;Ljava/lang/String;)V
      39: astore_3
      40: aload_3
      41: aload_2
      42: invokeinterface #51,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getMaxPageSize:()I
      47: invokevirtual #52                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.setMaxBatchSize:(I)V
      50: aload_3
      51: aload_0
      52: getfield      #26                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      55: invokevirtual #53                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
      58: aload_3
      59: aload_0
      60: invokevirtual #37                 // Method getMessageAudit:()Lorg/apache/activemq/ActiveMQMessageAudit;
      63: invokevirtual #54                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.setMessageAudit:(Lorg/apache/activemq/ActiveMQMessageAudit;)V
      66: aload_3
      67: aload_0
      68: invokevirtual #55                 // Method isEnableAudit:()Z
      71: invokevirtual #56                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.setEnableAudit:(Z)V
      74: aload_3
      75: aload_0
      76: invokevirtual #57                 // Method getMemoryUsageHighWaterMark:()I
      79: invokevirtual #58                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.setMemoryUsageHighWaterMark:(I)V
      82: aload_3
      83: aload_0
      84: invokevirtual #59                 // Method isUseCache:()Z
      87: invokevirtual #60                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.setUseCache:(Z)V
      90: aload_3
      91: aload_0
      92: invokevirtual #59                 // Method isUseCache:()Z
      95: ifeq          109
      98: aload_3
      99: invokevirtual #61                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.isEmpty:()Z
     102: ifeq          109
     105: iconst_1
     106: goto          110
     109: iconst_0
     110: invokevirtual #62                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.setCacheEnabled:(Z)V
     113: aload_0
     114: getfield      #5                  // Field topics:Ljava/util/Map;
     117: aload_2
     118: aload_3
     119: invokeinterface #63,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: aload_0
     126: getfield      #8                  // Field storePrefetches:Ljava/util/List;
     129: aload_3
     130: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     135: pop
     136: aload_0
     137: invokevirtual #31                 // Method isStarted:()Z
     140: ifeq          147
     143: aload_3
     144: invokevirtual #64                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.start:()V
     147: return

  public synchronized java.util.List<org.apache.activemq.broker.region.MessageReference> remove(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field topics:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #65,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      13: astore_3
      14: aload_3
      15: ifnull        29
      18: aload_0
      19: getfield      #8                  // Field storePrefetches:Ljava/util/List;
      22: aload_3
      23: invokeinterface #66,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      28: pop
      29: getstatic     #67                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      32: areturn

  public synchronized boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_1
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      28: astore_2
      29: aload_2
      30: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.isEmpty:()Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: goto          10
      43: iconst_1
      44: ireturn

  public synchronized boolean isEmpty(org.apache.activemq.broker.region.Destination);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #5                  // Field topics:Ljava/util/Map;
       6: aload_1
       7: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #48                 // class org/apache/activemq/broker/region/cursors/TopicStorePrefetch
      15: astore_3
      16: aload_3
      17: ifnull        25
      20: aload_3
      21: invokevirtual #61                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.isEmpty:()Z
      24: istore_2
      25: iload_2
      26: ireturn

  public boolean isRecoveryRequired();
    Code:
       0: iconst_0
       1: ireturn

  public synchronized void addMessageLast(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        181
       4: aload_1
       5: invokeinterface #70,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      10: astore_2
      11: aload_0
      12: invokevirtual #31                 // Method isStarted:()Z
      15: ifeq          35
      18: aload_2
      19: invokevirtual #71                 // Method org/apache/activemq/command/Message.isPersistent:()Z
      22: ifne          35
      25: aload_0
      26: getfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      29: aload_1
      30: invokeinterface #72,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)V
      35: aload_2
      36: invokevirtual #71                 // Method org/apache/activemq/command/Message.isPersistent:()Z
      39: ifeq          181
      42: aload_2
      43: invokevirtual #73                 // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      46: checkcast     #74                 // class org/apache/activemq/broker/region/Destination
      49: astore_3
      50: aload_0
      51: getfield      #5                  // Field topics:Ljava/util/Map;
      54: aload_3
      55: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #48                 // class org/apache/activemq/broker/region/cursors/TopicStorePrefetch
      63: astore        4
      65: aload         4
      67: ifnull        181
      70: aload         4
      72: aload_1
      73: invokevirtual #75                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)V
      76: aload_0
      77: getfield      #20                 // Field prioritizedMessages:Z
      80: ifeq          181
      83: aload_0
      84: getfield      #9                  // Field immediatePriorityDispatch:Z
      87: ifeq          181
      90: aload         4
      92: invokevirtual #76                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.isPaging:()Z
      95: ifeq          181
      98: aload_2
      99: invokevirtual #77                 // Method org/apache/activemq/command/Message.getPriority:()B
     102: aload         4
     104: invokevirtual #78                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.getLastRecoveredPriority:()B
     107: if_icmple     181
     110: aload         4
     112: aload_1
     113: invokeinterface #70,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
     118: iconst_1
     119: invokevirtual #79                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.recoverMessage:(Lorg/apache/activemq/command/Message;Z)Z
     122: pop
     123: getstatic     #80                 // Field LOG:Lorg/slf4j/Logger;
     126: ldc           #81                 // String cached high priority ({} message: {}, current paged batch priority: {}, cache size: {}
     128: iconst_4
     129: anewarray     #82                 // class java/lang/Object
     132: dup
     133: iconst_0
     134: aload_2
     135: invokevirtual #77                 // Method org/apache/activemq/command/Message.getPriority:()B
     138: invokestatic  #83                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     141: aastore
     142: dup
     143: iconst_1
     144: aload_2
     145: invokevirtual #84                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     148: aastore
     149: dup
     150: iconst_2
     151: aload         4
     153: invokevirtual #78                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.getLastRecoveredPriority:()B
     156: invokestatic  #83                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     159: aastore
     160: dup
     161: iconst_3
     162: aload         4
     164: getfield      #85                 // Field org/apache/activemq/broker/region/cursors/TopicStorePrefetch.batchList:Lorg/apache/activemq/broker/region/cursors/PendingList;
     167: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingList.size:()I
     172: invokestatic  #87                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     175: aastore
     176: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     181: return

  public boolean isTransient();
    Code:
       0: aload_0
       1: getfield      #10                 // Field subscription:Lorg/apache/activemq/broker/region/DurableTopicSubscription;
       4: invokevirtual #40                 // Method org/apache/activemq/broker/region/DurableTopicSubscription.isKeepDurableSubsActive:()Z
       7: ireturn

  public void addMessageFirst(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        65
       4: aload_1
       5: invokeinterface #70,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      10: astore_2
      11: aload_2
      12: invokevirtual #71                 // Method org/apache/activemq/command/Message.isPersistent:()Z
      15: ifne          31
      18: aload_0
      19: getfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      22: aload_1
      23: invokeinterface #89,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)V
      28: goto          65
      31: aload_2
      32: invokevirtual #73                 // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      35: checkcast     #74                 // class org/apache/activemq/broker/region/Destination
      38: astore_3
      39: aload_0
      40: getfield      #5                  // Field topics:Ljava/util/Map;
      43: aload_3
      44: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #48                 // class org/apache/activemq/broker/region/cursors/TopicStorePrefetch
      52: astore        4
      54: aload         4
      56: ifnull        65
      59: aload         4
      61: aload_1
      62: invokevirtual #90                 // Method org/apache/activemq/broker/region/cursors/TopicStorePrefetch.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)V
      65: return

  public synchronized void addRecoveredMessage(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #22                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)V
      10: return

  public synchronized void clear();
    Code:
       0: aload_0
       1: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          38
      19: aload_1
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      28: astore_2
      29: aload_2
      30: invokeinterface #91,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.clear:()V
      35: goto          10
      38: return

  public synchronized boolean hasNext();
    Code:
       0: iconst_1
       1: istore_1
       2: iload_1
       3: ifeq          59
       6: aload_0
       7: aload_0
       8: invokevirtual #92                 // Method getNextCursor:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: putfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      14: goto          38
      17: astore_2
      18: getstatic     #80                 // Field LOG:Lorg/slf4j/Logger;
      21: ldc           #95                 // String Failed to get current cursor
      23: aload_2
      24: invokeinterface #96,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      29: new           #97                 // class java/lang/RuntimeException
      32: dup
      33: aload_2
      34: invokespecial #98                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: aload_0
      39: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      42: ifnull        57
      45: aload_0
      46: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      49: invokeinterface #99,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.hasNext:()Z
      54: goto          58
      57: iconst_0
      58: istore_1
      59: iload_1
      60: ireturn
    Exception table:
       from    to  target type
           6    14    17   Class java/lang/Exception

  public synchronized org.apache.activemq.broker.region.MessageReference next();
    Code:
       0: aload_0
       1: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: ifnull        19
       7: aload_0
       8: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.next:()Lorg/apache/activemq/broker/region/MessageReference;
      16: goto          20
      19: aconst_null
      20: astore_1
      21: aload_1
      22: areturn

  public synchronized void remove();
    Code:
       0: aload_0
       1: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: ifnull        16
       7: aload_0
       8: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: invokeinterface #101,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.remove:()V
      16: return

  public synchronized void remove(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #102,  2          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.remove:(Lorg/apache/activemq/broker/region/MessageReference;)V
      36: goto          10
      39: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          38
      19: aload_1
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      28: astore_2
      29: aload_2
      30: invokeinterface #103,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.reset:()V
      35: goto          10
      38: return

  public synchronized void release();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       5: aload_0
       6: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          43
      24: aload_1
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      33: astore_2
      34: aload_2
      35: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.release:()V
      40: goto          15
      43: return

  public synchronized int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       6: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          43
      21: aload_2
      22: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      30: astore_3
      31: iload_1
      32: aload_3
      33: invokeinterface #105,  1          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.size:()I
      38: iadd
      39: istore_1
      40: goto          12
      43: iload_1
      44: ireturn

  public void setMaxBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      28: astore_3
      29: aload_3
      30: iload_1
      31: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxBatchSize:(I)V
      36: goto          10
      39: aload_0
      40: iload_1
      41: invokespecial #106                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMaxBatchSize:(I)V
      44: return

  public synchronized void gc();
    Code:
       0: aload_0
       1: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          38
      19: aload_1
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      28: astore_2
      29: aload_2
      30: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.gc:()V
      35: goto          10
      38: return

  public void setSystemUsage(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #107                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
       5: aload_0
       6: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokeinterface #27,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
      41: goto          15
      44: return

  public void setMemoryUsageHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #108                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMemoryUsageHighWaterMark:(I)V
       5: aload_0
       6: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      33: astore_3
      34: aload_3
      35: iload_1
      36: invokeinterface #109,  2          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMemoryUsageHighWaterMark:(I)V
      41: goto          15
      44: return

  public void setMaxProducersToAudit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #110                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMaxProducersToAudit:(I)V
       5: aload_0
       6: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          47
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      33: astore_3
      34: aload_3
      35: aload_0
      36: getfield      #111                // Field maxAuditDepth:I
      39: invokeinterface #112,  2          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxAuditDepth:(I)V
      44: goto          15
      47: return

  public void setMaxAuditDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #113                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMaxAuditDepth:(I)V
       5: aload_0
       6: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      33: astore_3
      34: aload_3
      35: iload_1
      36: invokeinterface #112,  2          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxAuditDepth:(I)V
      41: goto          15
      44: return

  public void setEnableAudit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #114                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setEnableAudit:(Z)V
       5: aload_0
       6: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      33: astore_3
      34: aload_3
      35: iload_1
      36: invokeinterface #115,  2          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setEnableAudit:(Z)V
      41: goto          15
      44: return

  public void setUseCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #116                // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setUseCache:(Z)V
       5: aload_0
       6: getfield      #8                  // Field storePrefetches:Ljava/util/List;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      33: astore_3
      34: aload_3
      35: iload_1
      36: invokeinterface #117,  2          // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setUseCache:(Z)V
      41: goto          15
      44: return

  protected synchronized org.apache.activemq.broker.region.cursors.PendingMessageCursor getNextCursor() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: ifnull        19
       7: aload_0
       8: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.isEmpty:()Z
      16: ifeq          111
      19: aload_0
      20: aconst_null
      21: putfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: aload_0
      25: getfield      #8                  // Field storePrefetches:Ljava/util/List;
      28: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore_1
      34: aload_1
      35: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          73
      43: aload_1
      44: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      52: astore_2
      53: aload_2
      54: invokeinterface #99,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.hasNext:()Z
      59: ifeq          70
      62: aload_0
      63: aload_2
      64: putfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      67: goto          73
      70: goto          34
      73: aload_0
      74: getfield      #8                  // Field storePrefetches:Ljava/util/List;
      77: invokeinterface #118,  1          // InterfaceMethod java/util/List.size:()I
      82: iconst_1
      83: if_icmple     111
      86: aload_0
      87: getfield      #8                  // Field storePrefetches:Ljava/util/List;
      90: iconst_0
      91: invokeinterface #119,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      96: checkcast     #36                 // class org/apache/activemq/broker/region/cursors/PendingMessageCursor
      99: astore_1
     100: aload_0
     101: getfield      #8                  // Field storePrefetches:Ljava/util/List;
     104: aload_1
     105: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     110: pop
     111: aload_0
     112: getfield      #93                 // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     115: areturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #120                // String StoreDurableSubscriber(
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #11                 // Field clientId:Ljava/lang/String;
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #121                // String :
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #12                 // Field subscriberName:Ljava/lang/String;
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #122                // String )
      33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public boolean isImmediatePriorityDispatch();
    Code:
       0: aload_0
       1: getfield      #9                  // Field immediatePriorityDispatch:Z
       4: ireturn

  public void setImmediatePriorityDispatch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field immediatePriorityDispatch:Z
       5: return

  static {};
    Code:
       0: ldc_w         #123                // class org/apache/activemq/broker/region/cursors/StoreDurableSubscriberCursor
       3: invokestatic  #124                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #80                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
