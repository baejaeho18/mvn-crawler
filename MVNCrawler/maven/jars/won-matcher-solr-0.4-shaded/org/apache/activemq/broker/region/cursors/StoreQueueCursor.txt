Compiled from "StoreQueueCursor.java"
public class org.apache.activemq.broker.region.cursors.StoreQueueCursor extends org.apache.activemq.broker.region.cursors.AbstractPendingMessageCursor {
  private static final org.slf4j.Logger LOG;

  private final org.apache.activemq.broker.Broker broker;

  private int pendingCount;

  private final org.apache.activemq.broker.region.Queue queue;

  private org.apache.activemq.broker.region.cursors.PendingMessageCursor nonPersistent;

  private final org.apache.activemq.broker.region.cursors.QueueStorePrefetch persistent;

  private boolean started;

  private org.apache.activemq.broker.region.cursors.PendingMessageCursor currentCursor;

  public org.apache.activemq.broker.region.cursors.StoreQueueCursor(org.apache.activemq.broker.Broker, org.apache.activemq.broker.region.Queue);
    Code:
       0: aload_0
       1: aload_2
       2: ifnull        12
       5: aload_2
       6: invokevirtual #1                  // Method org/apache/activemq/broker/region/Queue.isPrioritizedMessages:()Z
       9: goto          13
      12: iconst_0
      13: invokespecial #2                  // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor."<init>":(Z)V
      16: aload_0
      17: aload_1
      18: putfield      #3                  // Field broker:Lorg/apache/activemq/broker/Broker;
      21: aload_0
      22: aload_2
      23: putfield      #4                  // Field queue:Lorg/apache/activemq/broker/region/Queue;
      26: aload_0
      27: new           #5                  // class org/apache/activemq/broker/region/cursors/QueueStorePrefetch
      30: dup
      31: aload_2
      32: aload_1
      33: invokespecial #6                  // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch."<init>":(Lorg/apache/activemq/broker/region/Queue;Lorg/apache/activemq/broker/Broker;)V
      36: putfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      39: aload_0
      40: aload_0
      41: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      44: putfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      47: return

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field started:Z
       5: aload_0
       6: invokespecial #10                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.start:()V
       9: aload_0
      10: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      13: ifnonnull     140
      16: aload_0
      17: getfield      #3                  // Field broker:Lorg/apache/activemq/broker/Broker;
      20: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      25: invokevirtual #13                 // Method org/apache/activemq/broker/BrokerService.isPersistent:()Z
      28: ifeq          60
      31: aload_0
      32: new           #14                 // class org/apache/activemq/broker/region/cursors/FilePendingMessageCursor
      35: dup
      36: aload_0
      37: getfield      #3                  // Field broker:Lorg/apache/activemq/broker/Broker;
      40: aload_0
      41: getfield      #4                  // Field queue:Lorg/apache/activemq/broker/region/Queue;
      44: invokevirtual #15                 // Method org/apache/activemq/broker/region/Queue.getName:()Ljava/lang/String;
      47: aload_0
      48: getfield      #16                 // Field prioritizedMessages:Z
      51: invokespecial #17                 // Method org/apache/activemq/broker/region/cursors/FilePendingMessageCursor."<init>":(Lorg/apache/activemq/broker/Broker;Ljava/lang/String;Z)V
      54: putfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      57: goto          75
      60: aload_0
      61: new           #18                 // class org/apache/activemq/broker/region/cursors/VMPendingMessageCursor
      64: dup
      65: aload_0
      66: getfield      #16                 // Field prioritizedMessages:Z
      69: invokespecial #19                 // Method org/apache/activemq/broker/region/cursors/VMPendingMessageCursor."<init>":(Z)V
      72: putfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      75: aload_0
      76: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      79: aload_0
      80: invokevirtual #20                 // Method getMaxBatchSize:()I
      83: invokeinterface #21,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxBatchSize:(I)V
      88: aload_0
      89: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      92: aload_0
      93: getfield      #22                 // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      96: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
     101: aload_0
     102: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     105: aload_0
     106: invokevirtual #24                 // Method isEnableAudit:()Z
     109: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setEnableAudit:(Z)V
     114: aload_0
     115: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     118: aload_0
     119: invokevirtual #26                 // Method getMaxAuditDepth:()I
     122: invokeinterface #27,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxAuditDepth:(I)V
     127: aload_0
     128: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     131: aload_0
     132: invokevirtual #28                 // Method getMaxProducersToAudit:()I
     135: invokeinterface #29,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxProducersToAudit:(I)V
     140: aload_0
     141: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     144: aload_0
     145: invokevirtual #30                 // Method getMessageAudit:()Lorg/apache/activemq/ActiveMQMessageAudit;
     148: invokeinterface #31,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMessageAudit:(Lorg/apache/activemq/ActiveMQMessageAudit;)V
     153: aload_0
     154: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     157: invokeinterface #32,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.start:()V
     162: aload_0
     163: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
     166: aload_0
     167: invokevirtual #30                 // Method getMessageAudit:()Lorg/apache/activemq/ActiveMQMessageAudit;
     170: invokevirtual #33                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setMessageAudit:(Lorg/apache/activemq/ActiveMQMessageAudit;)V
     173: aload_0
     174: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
     177: invokevirtual #34                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.start:()V
     180: aload_0
     181: aload_0
     182: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
     185: invokevirtual #35                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.size:()I
     188: aload_0
     189: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
     192: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.size:()I
     197: iadd
     198: putfield      #37                 // Field pendingCount:I
     201: return

  public synchronized void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #9                  // Field started:Z
       5: aload_0
       6: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       9: ifnull        21
      12: aload_0
      13: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      16: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.destroy:()V
      21: aload_0
      22: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      25: invokevirtual #39                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.stop:()V
      28: aload_0
      29: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      32: invokevirtual #40                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.gc:()V
      35: aload_0
      36: invokespecial #41                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.stop:()V
      39: aload_0
      40: iconst_0
      41: putfield      #37                 // Field pendingCount:I
      44: return

  public synchronized void addMessageLast(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        60
       4: aload_1
       5: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      10: astore_2
      11: aload_0
      12: getfield      #9                  // Field started:Z
      15: ifeq          45
      18: aload_0
      19: dup
      20: getfield      #37                 // Field pendingCount:I
      23: iconst_1
      24: iadd
      25: putfield      #37                 // Field pendingCount:I
      28: aload_2
      29: invokevirtual #43                 // Method org/apache/activemq/command/Message.isPersistent:()Z
      32: ifne          45
      35: aload_0
      36: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      39: aload_1
      40: invokeinterface #44,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)V
      45: aload_2
      46: invokevirtual #43                 // Method org/apache/activemq/command/Message.isPersistent:()Z
      49: ifeq          60
      52: aload_0
      53: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      56: aload_1
      57: invokevirtual #45                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.addMessageLast:(Lorg/apache/activemq/broker/region/MessageReference;)V
      60: return

  public synchronized void addMessageFirst(org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        60
       4: aload_1
       5: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      10: astore_2
      11: aload_0
      12: getfield      #9                  // Field started:Z
      15: ifeq          45
      18: aload_0
      19: dup
      20: getfield      #37                 // Field pendingCount:I
      23: iconst_1
      24: iadd
      25: putfield      #37                 // Field pendingCount:I
      28: aload_2
      29: invokevirtual #43                 // Method org/apache/activemq/command/Message.isPersistent:()Z
      32: ifne          45
      35: aload_0
      36: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      39: aload_1
      40: invokeinterface #46,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)V
      45: aload_2
      46: invokevirtual #43                 // Method org/apache/activemq/command/Message.isPersistent:()Z
      49: ifeq          60
      52: aload_0
      53: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      56: aload_1
      57: invokevirtual #47                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.addMessageFirst:(Lorg/apache/activemq/broker/region/MessageReference;)V
      60: return

  public synchronized void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #37                 // Field pendingCount:I
       5: return

  public synchronized boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getNextCursor:()Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: pop
       5: goto          29
       8: astore_1
       9: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      12: ldc           #51                 // String Failed to get current cursor
      14: aload_1
      15: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      20: new           #53                 // class java/lang/RuntimeException
      23: dup
      24: aload_1
      25: invokespecial #54                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
      29: aload_0
      30: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      33: ifnull        48
      36: aload_0
      37: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      40: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.hasNext:()Z
      45: goto          49
      48: iconst_0
      49: ireturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Exception

  public synchronized org.apache.activemq.broker.region.MessageReference next();
    Code:
       0: aload_0
       1: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: ifnull        19
       7: aload_0
       8: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.next:()Lorg/apache/activemq/broker/region/MessageReference;
      16: goto          20
      19: aconst_null
      20: astore_1
      21: aload_1
      22: areturn

  public synchronized void remove();
    Code:
       0: aload_0
       1: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: ifnull        16
       7: aload_0
       8: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: invokeinterface #57,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.remove:()V
      16: aload_0
      17: dup
      18: getfield      #37                 // Field pendingCount:I
      21: iconst_1
      22: isub
      23: putfield      #37                 // Field pendingCount:I
      26: return

  public synchronized void remove(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_1
       1: invokeinterface #58,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isPersistent:()Z
       6: ifne          22
       9: aload_0
      10: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      13: aload_1
      14: invokeinterface #59,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.remove:(Lorg/apache/activemq/broker/region/MessageReference;)V
      19: goto          30
      22: aload_0
      23: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      26: aload_1
      27: invokevirtual #60                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.remove:(Lorg/apache/activemq/broker/region/MessageReference;)V
      30: aload_0
      31: dup
      32: getfield      #37                 // Field pendingCount:I
      35: iconst_1
      36: isub
      37: putfield      #37                 // Field pendingCount:I
      40: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.reset:()V
       9: aload_0
      10: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      13: invokevirtual #62                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.reset:()V
      16: aload_0
      17: aload_0
      18: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      21: invokevirtual #35                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.size:()I
      24: aload_0
      25: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      28: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.size:()I
      33: iadd
      34: putfield      #37                 // Field pendingCount:I
      37: return

  public void release();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.release:()V
       9: aload_0
      10: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      13: invokevirtual #64                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.release:()V
      16: return

  public synchronized int size();
    Code:
       0: aload_0
       1: getfield      #37                 // Field pendingCount:I
       4: ifge          28
       7: aload_0
       8: aload_0
       9: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      12: invokevirtual #35                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.size:()I
      15: aload_0
      16: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.size:()I
      24: iadd
      25: putfield      #37                 // Field pendingCount:I
      28: aload_0
      29: getfield      #37                 // Field pendingCount:I
      32: ireturn

  public synchronized boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #37                 // Field pendingCount:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isRecoveryRequired();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.activemq.broker.region.cursors.PendingMessageCursor getNonPersistent();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: areturn

  public void setNonPersistent(org.apache.activemq.broker.region.cursors.PendingMessageCursor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       5: return

  public void setMaxBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       4: iload_1
       5: invokevirtual #65                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setMaxBatchSize:(I)V
       8: aload_0
       9: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      12: ifnull        25
      15: aload_0
      16: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      19: iload_1
      20: invokeinterface #21,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxBatchSize:(I)V
      25: aload_0
      26: iload_1
      27: invokespecial #66                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMaxBatchSize:(I)V
      30: return

  public void setMaxProducersToAudit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #67                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMaxProducersToAudit:(I)V
       5: aload_0
       6: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       9: ifnull        20
      12: aload_0
      13: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      16: iload_1
      17: invokevirtual #68                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setMaxProducersToAudit:(I)V
      20: aload_0
      21: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: ifnull        37
      27: aload_0
      28: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: iload_1
      32: invokeinterface #29,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxProducersToAudit:(I)V
      37: return

  public void setMaxAuditDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #69                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMaxAuditDepth:(I)V
       5: aload_0
       6: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       9: ifnull        20
      12: aload_0
      13: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      16: iload_1
      17: invokevirtual #70                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setMaxAuditDepth:(I)V
      20: aload_0
      21: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: ifnull        37
      27: aload_0
      28: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: iload_1
      32: invokeinterface #27,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMaxAuditDepth:(I)V
      37: return

  public void setEnableAudit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #71                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setEnableAudit:(Z)V
       5: aload_0
       6: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       9: ifnull        20
      12: aload_0
      13: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      16: iload_1
      17: invokevirtual #72                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setEnableAudit:(Z)V
      20: aload_0
      21: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: ifnull        37
      27: aload_0
      28: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: iload_1
      32: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setEnableAudit:(Z)V
      37: return

  public void setUseCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #73                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setUseCache:(Z)V
       5: aload_0
       6: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       9: ifnull        20
      12: aload_0
      13: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      16: iload_1
      17: invokevirtual #74                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setUseCache:(Z)V
      20: aload_0
      21: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: ifnull        37
      27: aload_0
      28: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: iload_1
      32: invokeinterface #75,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setUseCache:(Z)V
      37: return

  public void setMemoryUsageHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #76                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setMemoryUsageHighWaterMark:(I)V
       5: aload_0
       6: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       9: ifnull        20
      12: aload_0
      13: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      16: iload_1
      17: invokevirtual #77                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setMemoryUsageHighWaterMark:(I)V
      20: aload_0
      21: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: ifnull        37
      27: aload_0
      28: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: iload_1
      32: invokeinterface #78,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setMemoryUsageHighWaterMark:(I)V
      37: return

  public synchronized void gc();
    Code:
       0: aload_0
       1: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       4: ifnull        14
       7: aload_0
       8: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      11: invokevirtual #40                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.gc:()V
      14: aload_0
      15: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      18: ifnull        30
      21: aload_0
      22: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      25: invokeinterface #79,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.gc:()V
      30: aload_0
      31: aload_0
      32: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      35: invokevirtual #35                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.size:()I
      38: aload_0
      39: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      42: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.size:()I
      47: iadd
      48: putfield      #37                 // Field pendingCount:I
      51: return

  public void setSystemUsage(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #80                 // Method org/apache/activemq/broker/region/cursors/AbstractPendingMessageCursor.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
       5: aload_0
       6: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       9: ifnull        20
      12: aload_0
      13: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      16: aload_1
      17: invokevirtual #81                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
      20: aload_0
      21: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: ifnull        37
      27: aload_0
      28: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      31: aload_1
      32: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.setSystemUsage:(Lorg/apache/activemq/usage/SystemUsage;)V
      37: return

  protected synchronized org.apache.activemq.broker.region.cursors.PendingMessageCursor getNextCursor() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
       4: ifnull        19
       7: aload_0
       8: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      11: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.hasMessagesBufferedToDeliver:()Z
      16: ifne          83
      19: aload_0
      20: aload_0
      21: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      24: aload_0
      25: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      28: if_acmpne     38
      31: aload_0
      32: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      35: goto          42
      38: aload_0
      39: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      42: putfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      45: aload_0
      46: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      49: invokeinterface #83,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.isEmpty:()Z
      54: ifeq          83
      57: aload_0
      58: aload_0
      59: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      62: aload_0
      63: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      66: if_acmpne     76
      69: aload_0
      70: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      73: goto          80
      76: aload_0
      77: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      80: putfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      83: aload_0
      84: getfield      #8                  // Field currentCursor:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      87: areturn

  public boolean isCacheEnabled();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method isUseCache:()Z
       4: istore_1
       5: iload_1
       6: ifeq          50
       9: aload_0
      10: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      13: ifnull        26
      16: iload_1
      17: aload_0
      18: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
      21: invokevirtual #85                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.isCacheEnabled:()Z
      24: iand
      25: istore_1
      26: aload_0
      27: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      30: ifnull        45
      33: iload_1
      34: aload_0
      35: getfield      #11                 // Field nonPersistent:Lorg/apache/activemq/broker/region/cursors/PendingMessageCursor;
      38: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/broker/region/cursors/PendingMessageCursor.isCacheEnabled:()Z
      43: iand
      44: istore_1
      45: aload_0
      46: iload_1
      47: invokevirtual #87                 // Method setCacheEnabled:(Z)V
      50: iload_1
      51: ireturn

  public void rebase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field persistent:Lorg/apache/activemq/broker/region/cursors/QueueStorePrefetch;
       4: invokevirtual #88                 // Method org/apache/activemq/broker/region/cursors/QueueStorePrefetch.rebase:()V
       7: aload_0
       8: invokevirtual #89                 // Method reset:()V
      11: return

  static {};
    Code:
       0: ldc_w         #90                 // class org/apache/activemq/broker/region/cursors/StoreQueueCursor
       3: invokestatic  #91                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
