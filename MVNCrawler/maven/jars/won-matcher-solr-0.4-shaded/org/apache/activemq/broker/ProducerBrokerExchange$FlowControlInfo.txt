Compiled from "ProducerBrokerExchange.java"
public class org.apache.activemq.broker.ProducerBrokerExchange$FlowControlInfo {
  private java.util.concurrent.atomic.AtomicBoolean blockingOnFlowControl;

  private java.util.concurrent.atomic.AtomicLong totalSends;

  private java.util.concurrent.atomic.AtomicLong sendsBlocked;

  private java.util.concurrent.atomic.AtomicLong totalTimeBlocked;

  public org.apache.activemq.broker.ProducerBrokerExchange$FlowControlInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #4                  // Field blockingOnFlowControl:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #7                  // Field totalSends:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      30: dup
      31: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      34: putfield      #8                  // Field sendsBlocked:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      41: dup
      42: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      45: putfield      #9                  // Field totalTimeBlocked:Ljava/util/concurrent/atomic/AtomicLong;
      48: return

  public boolean isBlockingOnFlowControl();
    Code:
       0: aload_0
       1: getfield      #4                  // Field blockingOnFlowControl:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setBlockingOnFlowControl(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field blockingOnFlowControl:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: iload_1
       9: ifeq          16
      12: aload_0
      13: invokevirtual #12                 // Method incrementSendBlocked:()V
      16: return

  public long getTotalSends();
    Code:
       0: aload_0
       1: getfield      #7                  // Field totalSends:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void incrementSend();
    Code:
       0: aload_0
       1: getfield      #7                  // Field totalSends:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public long getSendsBlocked();
    Code:
       0: aload_0
       1: getfield      #8                  // Field sendsBlocked:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void incrementSendBlocked();
    Code:
       0: aload_0
       1: getfield      #8                  // Field sendsBlocked:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public long getTotalTimeBlocked();
    Code:
       0: aload_0
       1: getfield      #9                  // Field totalTimeBlocked:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void incrementTimeBlocked(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field totalTimeBlocked:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
       8: pop2
       9: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field blockingOnFlowControl:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #7                  // Field totalSends:Ljava/util/concurrent/atomic/AtomicLong;
      12: lconst_0
      13: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      16: aload_0
      17: getfield      #8                  // Field sendsBlocked:Ljava/util/concurrent/atomic/AtomicLong;
      20: lconst_0
      21: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      24: aload_0
      25: getfield      #9                  // Field totalTimeBlocked:Ljava/util/concurrent/atomic/AtomicLong;
      28: lconst_0
      29: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      32: return
}
