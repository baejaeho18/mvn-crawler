Compiled from "BrokerViewMBean.java"
public interface org.apache.activemq.broker.jmx.BrokerViewMBean extends org.apache.activemq.Service {
  public abstract java.lang.String getBrokerId();

  public abstract java.lang.String getBrokerName();

  public abstract java.lang.String getBrokerVersion();

  public abstract java.lang.String getUptime();

  public abstract int getCurrentConnectionsCount();

  public abstract long getTotalConnectionsCount();

  public abstract void gc() throws java.lang.Exception;

  public abstract void resetStatistics();

  public abstract void enableStatistics();

  public abstract void disableStatistics();

  public abstract boolean isStatisticsEnabled();

  public abstract long getTotalEnqueueCount();

  public abstract long getTotalDequeueCount();

  public abstract long getTotalConsumerCount();

  public abstract long getTotalProducerCount();

  public abstract long getTotalMessageCount();

  public abstract long getAverageMessageSize();

  public abstract long getMaxMessageSize();

  public abstract long getMinMessageSize();

  public abstract int getMemoryPercentUsage();

  public abstract long getMemoryLimit();

  public abstract void setMemoryLimit(long);

  public abstract int getStorePercentUsage();

  public abstract long getStoreLimit();

  public abstract void setStoreLimit(long);

  public abstract int getTempPercentUsage();

  public abstract long getTempLimit();

  public abstract void setTempLimit(long);

  public abstract int getJobSchedulerStorePercentUsage();

  public abstract long getJobSchedulerStoreLimit();

  public abstract void setJobSchedulerStoreLimit(long);

  public abstract boolean isPersistent();

  public abstract boolean isSlave();

  public abstract void terminateJVM(int);

  public abstract void stop() throws java.lang.Exception;

  public abstract void restart() throws java.lang.Exception;

  public abstract void stopGracefully(java.lang.String, java.lang.String, long, long) throws java.lang.Exception;

  public abstract javax.management.ObjectName[] getTopics();

  public abstract javax.management.ObjectName[] getQueues();

  public abstract javax.management.ObjectName[] getTemporaryTopics();

  public abstract javax.management.ObjectName[] getTemporaryQueues();

  public abstract javax.management.ObjectName[] getTopicSubscribers();

  public abstract javax.management.ObjectName[] getDurableTopicSubscribers();

  public abstract javax.management.ObjectName[] getInactiveDurableTopicSubscribers();

  public abstract javax.management.ObjectName[] getQueueSubscribers();

  public abstract javax.management.ObjectName[] getTemporaryTopicSubscribers();

  public abstract javax.management.ObjectName[] getTemporaryQueueSubscribers();

  public abstract javax.management.ObjectName[] getTopicProducers();

  public abstract javax.management.ObjectName[] getQueueProducers();

  public abstract javax.management.ObjectName[] getTemporaryTopicProducers();

  public abstract javax.management.ObjectName[] getTemporaryQueueProducers();

  public abstract javax.management.ObjectName[] getDynamicDestinationProducers();

  public abstract java.lang.String addConnector(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String addNetworkConnector(java.lang.String) throws java.lang.Exception;

  public abstract boolean removeConnector(java.lang.String) throws java.lang.Exception;

  public abstract boolean removeNetworkConnector(java.lang.String) throws java.lang.Exception;

  public abstract void addTopic(java.lang.String) throws java.lang.Exception;

  public abstract void addQueue(java.lang.String) throws java.lang.Exception;

  public abstract void removeTopic(java.lang.String) throws java.lang.Exception;

  public abstract void removeQueue(java.lang.String) throws java.lang.Exception;

  public abstract javax.management.ObjectName createDurableSubscriber(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract void destroyDurableSubscriber(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract void reloadLog4jProperties() throws java.lang.Throwable;

  public abstract java.lang.String getOpenWireURL();

  public abstract java.lang.String getStompURL();

  public abstract java.lang.String getSslURL();

  public abstract java.lang.String getStompSslURL();

  public abstract java.lang.String getVMURL();

  public abstract java.util.Map<java.lang.String, java.lang.String> getTransportConnectors();

  public abstract java.lang.String getTransportConnectorByType(java.lang.String);

  public abstract java.lang.String getDataDirectory();

  public abstract javax.management.ObjectName getJMSJobScheduler();
}
