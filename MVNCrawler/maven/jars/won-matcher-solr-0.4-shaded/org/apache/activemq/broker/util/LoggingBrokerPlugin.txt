Compiled from "LoggingBrokerPlugin.java"
public class org.apache.activemq.broker.util.LoggingBrokerPlugin extends org.apache.activemq.broker.BrokerPluginSupport {
  private static final org.slf4j.Logger LOG;

  private boolean logAll;

  private boolean logMessageEvents;

  private boolean logConnectionEvents;

  private boolean logSessionEvents;

  private boolean logTransactionEvents;

  private boolean logConsumerEvents;

  private boolean logProducerEvents;

  private boolean logInternalEvents;

  private boolean perDestinationLogger;

  public org.apache.activemq.broker.util.LoggingBrokerPlugin();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/broker/BrokerPluginSupport."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field logAll:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field logMessageEvents:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field logConnectionEvents:Z
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field logSessionEvents:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field logTransactionEvents:Z
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field logConsumerEvents:Z
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field logProducerEvents:Z
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field logInternalEvents:Z
      44: aload_0
      45: iconst_0
      46: putfield      #10                 // Field perDestinationLogger:Z
      49: return

  private void postConstruct();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method afterPropertiesSet:()V
       4: goto          17
       7: astore_1
       8: new           #13                 // class java/lang/RuntimeException
      11: dup
      12: aload_1
      13: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #16                 // String Created LoggingBrokerPlugin: {}
       5: aload_0
       6: invokevirtual #17                 // Method toString:()Ljava/lang/String;
       9: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public boolean isLogAll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logAll:Z
       4: ireturn

  public void setLogAll(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field logAll:Z
       5: return

  public boolean isLogMessageEvents();
    Code:
       0: aload_0
       1: getfield      #3                  // Field logMessageEvents:Z
       4: ireturn

  public void setLogMessageEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field logMessageEvents:Z
       5: return

  public boolean isLogConnectionEvents();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logConnectionEvents:Z
       4: ireturn

  public void setLogConnectionEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field logConnectionEvents:Z
       5: return

  public boolean isLogSessionEvents();
    Code:
       0: aload_0
       1: getfield      #5                  // Field logSessionEvents:Z
       4: ireturn

  public void setLogSessionEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field logSessionEvents:Z
       5: return

  public boolean isLogTransactionEvents();
    Code:
       0: aload_0
       1: getfield      #6                  // Field logTransactionEvents:Z
       4: ireturn

  public void setLogTransactionEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field logTransactionEvents:Z
       5: return

  public boolean isLogConsumerEvents();
    Code:
       0: aload_0
       1: getfield      #7                  // Field logConsumerEvents:Z
       4: ireturn

  public void setLogConsumerEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field logConsumerEvents:Z
       5: return

  public boolean isLogProducerEvents();
    Code:
       0: aload_0
       1: getfield      #8                  // Field logProducerEvents:Z
       4: ireturn

  public void setLogProducerEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field logProducerEvents:Z
       5: return

  public boolean isLogInternalEvents();
    Code:
       0: aload_0
       1: getfield      #9                  // Field logInternalEvents:Z
       4: ireturn

  public void setLogInternalEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field logInternalEvents:Z
       5: return

  public void acknowledge(org.apache.activemq.broker.ConsumerBrokerExchange, org.apache.activemq.command.MessageAck) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifeq          112
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #21                 // String Acknowledging message for client ID: {}{}
      19: aload_1
      20: invokevirtual #22                 // Method org/apache/activemq/broker/ConsumerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
      23: invokevirtual #23                 // Method org/apache/activemq/broker/ConnectionContext.getClientId:()Ljava/lang/String;
      26: aload_2
      27: invokevirtual #24                 // Method org/apache/activemq/command/MessageAck.getMessageCount:()I
      30: iconst_1
      31: if_icmpne     59
      34: new           #25                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #27                 // String ,
      43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #29                 // Method org/apache/activemq/command/MessageAck.getLastMessageId:()Lorg/apache/activemq/command/MessageId;
      50: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: goto          61
      59: ldc           #32                 // String
      61: invokeinterface #33,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      66: aload_2
      67: invokevirtual #24                 // Method org/apache/activemq/command/MessageAck.getMessageCount:()I
      70: iconst_1
      71: if_icmple     112
      74: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      77: ldc           #34                 // String Message count: {}, First Message Id: {}, Last Message Id: {}
      79: iconst_3
      80: anewarray     #35                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: aload_2
      86: invokevirtual #24                 // Method org/apache/activemq/command/MessageAck.getMessageCount:()I
      89: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      92: aastore
      93: dup
      94: iconst_1
      95: aload_2
      96: invokevirtual #37                 // Method org/apache/activemq/command/MessageAck.getFirstMessageId:()Lorg/apache/activemq/command/MessageId;
      99: aastore
     100: dup
     101: iconst_2
     102: aload_2
     103: invokevirtual #29                 // Method org/apache/activemq/command/MessageAck.getLastMessageId:()Lorg/apache/activemq/command/MessageId;
     106: aastore
     107: invokeinterface #38,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     112: aload_0
     113: aload_1
     114: aload_2
     115: invokespecial #39                 // Method org/apache/activemq/broker/BrokerPluginSupport.acknowledge:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/MessageAck;)V
     118: return

  public org.apache.activemq.command.Response messagePull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.MessagePull) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifeq          35
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #40                 // String Message Pull from: {} on {}
      19: aload_1
      20: invokevirtual #23                 // Method org/apache/activemq/broker/ConnectionContext.getClientId:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #41                 // Method org/apache/activemq/command/MessagePull.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      27: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      30: invokeinterface #33,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokespecial #43                 // Method org/apache/activemq/broker/BrokerPluginSupport.messagePull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/MessagePull;)Lorg/apache/activemq/command/Response;
      41: areturn

  public void addConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #44                 // Method isLogConnectionEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #45                 // String Adding Connection: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #46                 // Method org/apache/activemq/broker/BrokerPluginSupport.addConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;)V
      31: return

  public org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #47                 // String Adding Consumer: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #48                 // Method org/apache/activemq/broker/BrokerPluginSupport.addConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/broker/region/Subscription;
      31: areturn

  public void addProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #49                 // Method isLogProducerEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #50                 // String Adding Producer: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #51                 // Method org/apache/activemq/broker/BrokerPluginSupport.addProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      31: return

  public void commitTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #52                 // Method isLogTransactionEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #53                 // String Committing transaction: {}
      19: aload_2
      20: invokevirtual #54                 // Method org/apache/activemq/command/TransactionId.getTransactionKey:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: aload_2
      31: iload_3
      32: invokespecial #55                 // Method org/apache/activemq/broker/BrokerPluginSupport.commitTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;Z)V
      35: return

  public void removeSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.RemoveSubscriptionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #56                 // String Removing subscription: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #57                 // Method org/apache/activemq/broker/BrokerPluginSupport.removeSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/RemoveSubscriptionInfo;)V
      31: return

  public org.apache.activemq.command.TransactionId[] getPreparedTransactions(org.apache.activemq.broker.ConnectionContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #58                 // Method org/apache/activemq/broker/BrokerPluginSupport.getPreparedTransactions:(Lorg/apache/activemq/broker/ConnectionContext;)[Lorg/apache/activemq/command/TransactionId;
       5: astore_2
       6: aload_0
       7: invokevirtual #19                 // Method isLogAll:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #52                 // Method isLogTransactionEvents:()Z
      17: ifeq          98
      20: aload_2
      21: ifnull        98
      24: new           #59                 // class java/lang/StringBuffer
      27: dup
      28: invokespecial #60                 // Method java/lang/StringBuffer."<init>":()V
      31: astore_3
      32: aload_2
      33: astore        4
      35: aload         4
      37: arraylength
      38: istore        5
      40: iconst_0
      41: istore        6
      43: iload         6
      45: iload         5
      47: if_icmpge     87
      50: aload         4
      52: iload         6
      54: aaload
      55: astore        7
      57: aload_3
      58: invokevirtual #61                 // Method java/lang/StringBuffer.length:()I
      61: ifle          71
      64: aload_3
      65: ldc           #27                 // String ,
      67: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: pop
      71: aload_3
      72: aload         7
      74: invokevirtual #54                 // Method org/apache/activemq/command/TransactionId.getTransactionKey:()Ljava/lang/String;
      77: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      80: pop
      81: iinc          6, 1
      84: goto          43
      87: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      90: ldc           #63                 // String Prepared transactions: {}
      92: aload_3
      93: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      98: aload_2
      99: areturn

  public int prepareTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #52                 // Method isLogTransactionEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #64                 // String Preparing transaction: {}
      19: aload_2
      20: invokevirtual #54                 // Method org/apache/activemq/command/TransactionId.getTransactionKey:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #65                 // Method org/apache/activemq/broker/BrokerPluginSupport.prepareTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)I
      34: ireturn

  public void removeConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #44                 // Method isLogConnectionEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #66                 // String Removing Connection: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokespecial #67                 // Method org/apache/activemq/broker/BrokerPluginSupport.removeConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;Ljava/lang/Throwable;)V
      32: return

  public void removeConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #68                 // String Removing Consumer: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #69                 // Method org/apache/activemq/broker/BrokerPluginSupport.removeConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)V
      31: return

  public void removeProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #49                 // Method isLogProducerEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #70                 // String Removing Producer: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #71                 // Method org/apache/activemq/broker/BrokerPluginSupport.removeProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      31: return

  public void rollbackTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #52                 // Method isLogTransactionEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #72                 // String Rolling back Transaction: {}
      19: aload_2
      20: invokevirtual #54                 // Method org/apache/activemq/command/TransactionId.getTransactionKey:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #73                 // Method org/apache/activemq/broker/BrokerPluginSupport.rollbackTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      34: return

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #49                 // Method isLogProducerEvents:()Z
      11: ifeq          22
      14: aload_0
      15: aload_2
      16: invokevirtual #74                 // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      19: invokespecial #75                 // Method logSend:(Lorg/apache/activemq/command/Message;)V
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokespecial #76                 // Method org/apache/activemq/broker/BrokerPluginSupport.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      28: return

  private void logSend(org.apache.activemq.command.Message);
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: astore_2
       4: aload_0
       5: invokevirtual #77                 // Method isPerDestinationLogger:()Z
       8: ifeq          65
      11: aload_1
      12: invokevirtual #78                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      15: astore_3
      16: new           #25                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      23: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      26: invokeinterface #79,  1           // InterfaceMethod org/slf4j/Logger.getName:()Ljava/lang/String;
      31: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #80                 // String .
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_3
      40: invokevirtual #81                 // Method org/apache/activemq/command/ActiveMQDestination.getDestinationTypeAsString:()Ljava/lang/String;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #80                 // String .
      48: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_3
      52: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      55: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokestatic  #82                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      64: astore_2
      65: aload_2
      66: ldc           #83                 // String Sending message: {}
      68: aload_1
      69: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      74: return

  public void beginTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #52                 // Method isLogTransactionEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #84                 // String Beginning transaction: {}
      19: aload_2
      20: invokevirtual #54                 // Method org/apache/activemq/command/TransactionId.getTransactionKey:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #85                 // Method org/apache/activemq/broker/BrokerPluginSupport.beginTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      34: return

  public void forgetTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #52                 // Method isLogTransactionEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #86                 // String Forgetting transaction: {}
      19: aload_2
      20: invokevirtual #54                 // Method org/apache/activemq/command/TransactionId.getTransactionKey:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #87                 // Method org/apache/activemq/broker/BrokerPluginSupport.forgetTransaction:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/TransactionId;)V
      34: return

  public org.apache.activemq.broker.Connection[] getClients() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #88                 // Method org/apache/activemq/broker/BrokerPluginSupport.getClients:()[Lorg/apache/activemq/broker/Connection;
       4: astore_1
       5: aload_0
       6: invokevirtual #19                 // Method isLogAll:()Z
       9: ifne          19
      12: aload_0
      13: invokevirtual #89                 // Method isLogInternalEvents:()Z
      16: ifeq          114
      19: aload_1
      20: ifnonnull     36
      23: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #90                 // String Get Clients returned empty list.
      28: invokeinterface #91,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: goto          114
      36: new           #59                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #60                 // Method java/lang/StringBuffer."<init>":()V
      43: astore_2
      44: aload_1
      45: astore_3
      46: aload_3
      47: arraylength
      48: istore        4
      50: iconst_0
      51: istore        5
      53: iload         5
      55: iload         4
      57: if_icmpge     103
      60: aload_3
      61: iload         5
      63: aaload
      64: astore        6
      66: aload_2
      67: aload_2
      68: invokevirtual #61                 // Method java/lang/StringBuffer.length:()I
      71: ifle          79
      74: ldc           #27                 // String ,
      76: goto          81
      79: ldc           #32                 // String
      81: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: pop
      85: aload_2
      86: aload         6
      88: invokeinterface #92,  1           // InterfaceMethod org/apache/activemq/broker/Connection.getConnectionId:()Ljava/lang/String;
      93: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      96: pop
      97: iinc          5, 1
     100: goto          53
     103: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     106: ldc           #93                 // String Connected clients: {}
     108: aload_2
     109: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     114: aload_0
     115: invokespecial #88                 // Method org/apache/activemq/broker/BrokerPluginSupport.getClients:()[Lorg/apache/activemq/broker/Connection;
     118: areturn

  public org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          32
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #94                 // String Adding destination: {}:{}
      19: aload_2
      20: invokevirtual #81                 // Method org/apache/activemq/command/ActiveMQDestination.getDestinationTypeAsString:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      27: invokeinterface #33,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: aload_2
      35: iload_3
      36: invokespecial #95                 // Method org/apache/activemq/broker/BrokerPluginSupport.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      39: areturn

  public void removeDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          32
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #96                 // String Removing destination: {}:{}
      19: aload_2
      20: invokevirtual #81                 // Method org/apache/activemq/command/ActiveMQDestination.getDestinationTypeAsString:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      27: invokeinterface #33,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: aload_2
      35: lload_3
      36: invokespecial #97                 // Method org/apache/activemq/broker/BrokerPluginSupport.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
      39: return

  public org.apache.activemq.command.ActiveMQDestination[] getDestinations() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #98                 // Method org/apache/activemq/broker/BrokerPluginSupport.getDestinations:()[Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_1
       5: aload_0
       6: invokevirtual #19                 // Method isLogAll:()Z
       9: ifne          19
      12: aload_0
      13: invokevirtual #89                 // Method isLogInternalEvents:()Z
      16: ifeq          112
      19: aload_1
      20: ifnonnull     36
      23: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #99                 // String Get Destinations returned empty list.
      28: invokeinterface #91,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: goto          112
      36: new           #59                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #60                 // Method java/lang/StringBuffer."<init>":()V
      43: astore_2
      44: aload_1
      45: astore_3
      46: aload_3
      47: arraylength
      48: istore        4
      50: iconst_0
      51: istore        5
      53: iload         5
      55: iload         4
      57: if_icmpge     101
      60: aload_3
      61: iload         5
      63: aaload
      64: astore        6
      66: aload_2
      67: aload_2
      68: invokevirtual #61                 // Method java/lang/StringBuffer.length:()I
      71: ifle          79
      74: ldc           #27                 // String ,
      76: goto          81
      79: ldc           #32                 // String
      81: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: pop
      85: aload_2
      86: aload         6
      88: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      91: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: iinc          5, 1
      98: goto          53
     101: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     104: ldc           #100                // String Get Destinations: {}
     106: aload_2
     107: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     112: aload_1
     113: areturn

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #101                // String Starting {}
      19: aload_0
      20: invokevirtual #102                // Method getBrokerName:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: invokespecial #103                // Method org/apache/activemq/broker/BrokerPluginSupport.start:()V
      32: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #104                // String Stopping {}
      19: aload_0
      20: invokevirtual #102                // Method getBrokerName:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: invokespecial #105                // Method org/apache/activemq/broker/BrokerPluginSupport.stop:()V
      32: return

  public void addSession(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.SessionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #106                // Method isLogSessionEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #107                // String Adding Session: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #108                // Method org/apache/activemq/broker/BrokerPluginSupport.addSession:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/SessionInfo;)V
      31: return

  public void removeSession(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.SessionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #106                // Method isLogSessionEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #109                // String Removing Session: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #110                // Method org/apache/activemq/broker/BrokerPluginSupport.removeSession:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/SessionInfo;)V
      31: return

  public void addBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #111                // String Adding Broker {}
      19: aload_2
      20: invokevirtual #112                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #113                // Method org/apache/activemq/broker/BrokerPluginSupport.addBroker:(Lorg/apache/activemq/broker/Connection;Lorg/apache/activemq/command/BrokerInfo;)V
      34: return

  public void removeBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #114                // String Removing Broker {}
      19: aload_2
      20: invokevirtual #112                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #115                // Method org/apache/activemq/broker/BrokerPluginSupport.removeBroker:(Lorg/apache/activemq/broker/Connection;Lorg/apache/activemq/command/BrokerInfo;)V
      34: return

  public org.apache.activemq.command.BrokerInfo[] getPeerBrokerInfos();
    Code:
       0: aload_0
       1: invokespecial #116                // Method org/apache/activemq/broker/BrokerPluginSupport.getPeerBrokerInfos:()[Lorg/apache/activemq/command/BrokerInfo;
       4: astore_1
       5: aload_0
       6: invokevirtual #19                 // Method isLogAll:()Z
       9: ifne          19
      12: aload_0
      13: invokevirtual #89                 // Method isLogInternalEvents:()Z
      16: ifeq          112
      19: aload_1
      20: ifnonnull     36
      23: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #117                // String Get Peer Broker Infos returned empty list.
      28: invokeinterface #91,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: goto          112
      36: new           #59                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #60                 // Method java/lang/StringBuffer."<init>":()V
      43: astore_2
      44: aload_1
      45: astore_3
      46: aload_3
      47: arraylength
      48: istore        4
      50: iconst_0
      51: istore        5
      53: iload         5
      55: iload         4
      57: if_icmpge     101
      60: aload_3
      61: iload         5
      63: aaload
      64: astore        6
      66: aload_2
      67: aload_2
      68: invokevirtual #61                 // Method java/lang/StringBuffer.length:()I
      71: ifle          79
      74: ldc           #27                 // String ,
      76: goto          81
      79: ldc           #32                 // String
      81: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: pop
      85: aload_2
      86: aload         6
      88: invokevirtual #112                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      91: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: iinc          5, 1
      98: goto          53
     101: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     104: ldc           #118                // String Get Peer Broker Infos: {}
     106: aload_2
     107: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     112: aload_1
     113: areturn

  public void preProcessDispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      18: ifeq          32
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #119                // String preProcessDispatch: {}
      26: aload_1
      27: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: invokespecial #120                // Method org/apache/activemq/broker/BrokerPluginSupport.preProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      37: return

  public void postProcessDispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      18: ifeq          32
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #121                // String postProcessDispatch: {}
      26: aload_1
      27: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: invokespecial #122                // Method org/apache/activemq/broker/BrokerPluginSupport.postProcessDispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      37: return

  public void processDispatchNotification(org.apache.activemq.command.MessageDispatchNotification) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      18: ifeq          32
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #123                // String ProcessDispatchNotification: {}
      26: aload_1
      27: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: invokespecial #124                // Method org/apache/activemq/broker/BrokerPluginSupport.processDispatchNotification:(Lorg/apache/activemq/command/MessageDispatchNotification;)V
      37: return

  public java.util.Set<org.apache.activemq.command.ActiveMQDestination> getDurableDestinations();
    Code:
       0: aload_0
       1: invokespecial #125                // Method org/apache/activemq/broker/BrokerPluginSupport.getDurableDestinations:()Ljava/util/Set;
       4: astore_1
       5: aload_0
       6: invokevirtual #19                 // Method isLogAll:()Z
       9: ifne          19
      12: aload_0
      13: invokevirtual #89                 // Method isLogInternalEvents:()Z
      16: ifeq          114
      19: aload_1
      20: ifnonnull     36
      23: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #126                // String Get Durable Destinations returned empty list.
      28: invokeinterface #91,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: goto          114
      36: new           #59                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #60                 // Method java/lang/StringBuffer."<init>":()V
      43: astore_2
      44: aload_1
      45: invokeinterface #127,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      50: astore_3
      51: aload_3
      52: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          103
      60: aload_3
      61: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #130                // class org/apache/activemq/command/ActiveMQDestination
      69: astore        4
      71: aload_2
      72: aload_2
      73: invokevirtual #61                 // Method java/lang/StringBuffer.length:()I
      76: ifle          84
      79: ldc           #27                 // String ,
      81: goto          86
      84: ldc           #32                 // String
      86: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      89: pop
      90: aload_2
      91: aload         4
      93: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      96: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      99: pop
     100: goto          51
     103: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     106: ldc           #131                // String Get Durable Destinations: {}
     108: aload_2
     109: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     114: aload_1
     115: areturn

  public void addDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #132                // String Adding destination info: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #133                // Method org/apache/activemq/broker/BrokerPluginSupport.addDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
      31: return

  public void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          25
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #134                // String Removing destination info: {}
      19: aload_2
      20: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #135                // Method org/apache/activemq/broker/BrokerPluginSupport.removeDestinationInfo:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/DestinationInfo;)V
      31: return

  public void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          41
      14: ldc           #136                // String Unable to display message.
      16: astore        4
      18: aload_2
      19: invokeinterface #137,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      24: invokevirtual #138                // Method org/apache/activemq/command/Message.toString:()Ljava/lang/String;
      27: astore        4
      29: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      32: ldc           #139                // String Message has expired: {}
      34: aload         4
      36: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: aload_3
      45: invokespecial #140                // Method org/apache/activemq/broker/BrokerPluginSupport.messageExpired:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;)V
      48: return

  public boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          41
      14: ldc           #136                // String Unable to display message.
      16: astore        5
      18: aload_2
      19: invokeinterface #137,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      24: invokevirtual #138                // Method org/apache/activemq/command/Message.toString:()Ljava/lang/String;
      27: astore        5
      29: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      32: ldc           #141                // String Sending to DLQ: {}
      34: aload         5
      36: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: aload_3
      45: aload         4
      47: invokespecial #142                // Method org/apache/activemq/broker/BrokerPluginSupport.sendToDeadLetterQueue:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;Ljava/lang/Throwable;)Z
      50: ireturn

  public void fastProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo, org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #49                 // Method isLogProducerEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #89                 // Method isLogInternalEvents:()Z
      18: ifeq          32
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #143                // String Fast Producer: {}
      26: aload_2
      27: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: aload_2
      35: aload_3
      36: invokespecial #144                // Method org/apache/activemq/broker/BrokerPluginSupport.fastProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;Lorg/apache/activemq/command/ActiveMQDestination;)V
      39: return

  public void isFull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.usage.Usage);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #49                 // Method isLogProducerEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #89                 // Method isLogInternalEvents:()Z
      18: ifeq          37
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #145                // String Destination is full: {}
      26: aload_2
      27: invokeinterface #146,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getName:()Ljava/lang/String;
      32: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      37: aload_0
      38: aload_1
      39: aload_2
      40: aload_3
      41: invokespecial #147                // Method org/apache/activemq/broker/BrokerPluginSupport.isFull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/usage/Usage;)V
      44: return

  public void messageConsumed(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #89                 // Method isLogInternalEvents:()Z
      18: ifeq          45
      21: ldc           #136                // String Unable to display message.
      23: astore_3
      24: aload_2
      25: invokeinterface #137,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      30: invokevirtual #138                // Method org/apache/activemq/command/Message.toString:()Ljava/lang/String;
      33: astore_3
      34: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      37: ldc           #148                // String Message consumed: {}
      39: aload_3
      40: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokespecial #149                // Method org/apache/activemq/broker/BrokerPluginSupport.messageConsumed:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
      51: return

  public void messageDelivered(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #89                 // Method isLogInternalEvents:()Z
      18: ifeq          45
      21: ldc           #136                // String Unable to display message.
      23: astore_3
      24: aload_2
      25: invokeinterface #137,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      30: invokevirtual #138                // Method org/apache/activemq/command/Message.toString:()Ljava/lang/String;
      33: astore_3
      34: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      37: ldc           #150                // String Message delivered: {}
      39: aload_3
      40: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokespecial #151                // Method org/apache/activemq/broker/BrokerPluginSupport.messageDelivered:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)V
      51: return

  public void messageDiscarded(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Subscription, org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          41
      14: ldc           #136                // String Unable to display message.
      16: astore        4
      18: aload_3
      19: invokeinterface #137,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      24: invokevirtual #138                // Method org/apache/activemq/command/Message.toString:()Ljava/lang/String;
      27: astore        4
      29: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      32: ldc           #152                // String Message discarded: {}
      34: aload         4
      36: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: aload_3
      45: invokespecial #153                // Method org/apache/activemq/broker/BrokerPluginSupport.messageDiscarded:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/broker/region/MessageReference;)V
      48: return

  public void slowConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Destination, org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #89                 // Method isLogInternalEvents:()Z
      18: ifeq          113
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #154                // String Detected slow consumer on {}
      26: aload_2
      27: invokeinterface #146,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getName:()Ljava/lang/String;
      32: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      37: new           #59                 // class java/lang/StringBuffer
      40: dup
      41: ldc           #155                // String Connection(
      43: invokespecial #156                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      46: astore        4
      48: aload         4
      50: aload_3
      51: invokeinterface #157,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      56: invokevirtual #158                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      59: invokevirtual #159                // Method org/apache/activemq/command/ConsumerId.getConnectionId:()Ljava/lang/String;
      62: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      65: pop
      66: aload         4
      68: ldc           #160                // String ) Session(
      70: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      73: pop
      74: aload         4
      76: aload_3
      77: invokeinterface #157,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      82: invokevirtual #158                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      85: invokevirtual #161                // Method org/apache/activemq/command/ConsumerId.getSessionId:()J
      88: invokevirtual #162                // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      91: pop
      92: aload         4
      94: ldc           #163                // String )
      96: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      99: pop
     100: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     103: aload         4
     105: invokevirtual #164                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     108: invokeinterface #91,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     113: aload_0
     114: aload_1
     115: aload_2
     116: aload_3
     117: invokespecial #165                // Method org/apache/activemq/broker/BrokerPluginSupport.slowConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/Destination;Lorg/apache/activemq/broker/region/Subscription;)V
     120: return

  public void nowMasterBroker();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isLogAll:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #89                 // Method isLogInternalEvents:()Z
      11: ifeq          28
      14: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #166                // String Is now the master broker: {}
      19: aload_0
      20: invokevirtual #102                // Method getBrokerName:()Ljava/lang/String;
      23: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: invokespecial #167                // Method org/apache/activemq/broker/BrokerPluginSupport.nowMasterBroker:()V
      32: return

  public java.lang.String toString();
    Code:
       0: new           #59                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #60                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #168                // String LoggingBrokerPlugin(
      11: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_1
      16: ldc           #169                // String logAll=
      18: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      21: pop
      22: aload_1
      23: aload_0
      24: invokevirtual #19                 // Method isLogAll:()Z
      27: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      30: pop
      31: aload_1
      32: ldc           #171                // String , logConnectionEvents=
      34: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: pop
      38: aload_1
      39: aload_0
      40: invokevirtual #44                 // Method isLogConnectionEvents:()Z
      43: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      46: pop
      47: aload_1
      48: ldc           #172                // String , logSessionEvents=
      50: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: pop
      54: aload_1
      55: aload_0
      56: invokevirtual #106                // Method isLogSessionEvents:()Z
      59: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      62: pop
      63: aload_1
      64: ldc           #173                // String , logConsumerEvents=
      66: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      69: pop
      70: aload_1
      71: aload_0
      72: invokevirtual #20                 // Method isLogConsumerEvents:()Z
      75: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      78: pop
      79: aload_1
      80: ldc           #174                // String , logProducerEvents=
      82: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      85: pop
      86: aload_1
      87: aload_0
      88: invokevirtual #49                 // Method isLogProducerEvents:()Z
      91: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      94: pop
      95: aload_1
      96: ldc           #175                // String , logMessageEvents=
      98: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     101: pop
     102: aload_1
     103: aload_0
     104: invokevirtual #176                // Method isLogMessageEvents:()Z
     107: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     110: pop
     111: aload_1
     112: ldc           #177                // String , logTransactionEvents=
     114: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     117: pop
     118: aload_1
     119: aload_0
     120: invokevirtual #52                 // Method isLogTransactionEvents:()Z
     123: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     126: pop
     127: aload_1
     128: ldc           #178                // String , logInternalEvents=
     130: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     133: pop
     134: aload_1
     135: aload_0
     136: invokevirtual #89                 // Method isLogInternalEvents:()Z
     139: invokevirtual #170                // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     142: pop
     143: aload_1
     144: ldc           #163                // String )
     146: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     149: pop
     150: aload_1
     151: invokevirtual #164                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     154: areturn

  public void setPerDestinationLogger(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field perDestinationLogger:Z
       5: return

  public boolean isPerDestinationLogger();
    Code:
       0: aload_0
       1: getfield      #10                 // Field perDestinationLogger:Z
       4: ireturn

  static {};
    Code:
       0: ldc_w         #179                // class org/apache/activemq/broker/util/LoggingBrokerPlugin
       3: invokestatic  #180                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
