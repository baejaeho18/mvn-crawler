Compiled from "QueryBasedSubscriptionRecoveryPolicy.java"
public class org.apache.activemq.broker.region.policy.QueryBasedSubscriptionRecoveryPolicy implements org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy {
  private static final org.slf4j.Logger LOG;

  private org.apache.activemq.broker.region.policy.MessageQuery query;

  private final java.util.concurrent.atomic.AtomicLong messageSequence;

  private final org.apache.activemq.util.IdGenerator idGenerator;

  private final org.apache.activemq.command.ProducerId producerId;

  public org.apache.activemq.broker.region.policy.QueryBasedSubscriptionRecoveryPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #5                  // class org/apache/activemq/util/IdGenerator
      20: dup
      21: invokespecial #6                  // Method org/apache/activemq/util/IdGenerator."<init>":()V
      24: putfield      #7                  // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
      27: aload_0
      28: aload_0
      29: invokevirtual #8                  // Method createProducerId:()Lorg/apache/activemq/command/ProducerId;
      32: putfield      #9                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
      35: return

  public org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy copy();
    Code:
       0: new           #10                 // class org/apache/activemq/broker/region/policy/QueryBasedSubscriptionRecoveryPolicy
       3: dup
       4: invokespecial #11                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #12                 // Field query:Lorg/apache/activemq/broker/region/policy/MessageQuery;
      13: invokevirtual #13                 // Method setQuery:(Lorg/apache/activemq/broker/region/policy/MessageQuery;)V
      16: aload_1
      17: areturn

  public boolean add(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #12                 // Field query:Lorg/apache/activemq/broker/region/policy/MessageQuery;
       4: aload_2
       5: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      10: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/broker/region/policy/MessageQuery.validateUpdate:(Lorg/apache/activemq/command/Message;)Z
      15: ireturn

  public void recover(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.Topic, org.apache.activemq.broker.region.SubscriptionRecovery) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #12                 // Field query:Lorg/apache/activemq/broker/region/policy/MessageQuery;
       4: ifnull        37
       7: aload_3
       8: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/broker/region/SubscriptionRecovery.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      13: astore        4
      15: aload_0
      16: getfield      #12                 // Field query:Lorg/apache/activemq/broker/region/policy/MessageQuery;
      19: aload         4
      21: new           #17                 // class org/apache/activemq/broker/region/policy/QueryBasedSubscriptionRecoveryPolicy$1
      24: dup
      25: aload_0
      26: aload_2
      27: aload_1
      28: aload_3
      29: invokespecial #18                 // Method org/apache/activemq/broker/region/policy/QueryBasedSubscriptionRecoveryPolicy$1."<init>":(Lorg/apache/activemq/broker/region/policy/QueryBasedSubscriptionRecoveryPolicy;Lorg/apache/activemq/broker/region/Topic;Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/SubscriptionRecovery;)V
      32: invokeinterface #19,  3           // InterfaceMethod org/apache/activemq/broker/region/policy/MessageQuery.execute:(Lorg/apache/activemq/command/ActiveMQDestination;Ljavax/jms/MessageListener;)V
      37: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #12                 // Field query:Lorg/apache/activemq/broker/region/policy/MessageQuery;
       4: ifnonnull     17
       7: new           #20                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #21                 // String No query property configured
      13: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void stop() throws java.lang.Exception;
    Code:
       0: return

  public org.apache.activemq.broker.region.policy.MessageQuery getQuery();
    Code:
       0: aload_0
       1: getfield      #12                 // Field query:Lorg/apache/activemq/broker/region/policy/MessageQuery;
       4: areturn

  public void setQuery(org.apache.activemq.broker.region.policy.MessageQuery);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field query:Lorg/apache/activemq/broker/region/policy/MessageQuery;
       5: return

  public org.apache.activemq.command.Message[] browse(org.apache.activemq.command.ActiveMQDestination) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: anewarray     #23                 // class org/apache/activemq/command/Message
       4: areturn

  public void setBroker(org.apache.activemq.broker.Broker);
    Code:
       0: return

  protected void dispatchInitialMessage(javax.jms.Message, org.apache.activemq.broker.region.Destination, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.SubscriptionRecovery);
    Code:
       0: aload_1
       1: aconst_null
       2: invokestatic  #24                 // Method org/apache/activemq/ActiveMQMessageTransformation.transformMessage:(Ljavax/jms/Message;Lorg/apache/activemq/ActiveMQConnection;)Lorg/apache/activemq/command/ActiveMQMessage;
       5: astore        5
       7: aload         5
       9: invokevirtual #25                 // Method org/apache/activemq/command/ActiveMQMessage.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      12: astore        6
      14: aload         6
      16: ifnonnull     35
      19: aload         4
      21: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/broker/region/SubscriptionRecovery.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      26: astore        6
      28: aload         5
      30: aload         6
      32: invokevirtual #26                 // Method org/apache/activemq/command/ActiveMQMessage.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      35: aload         5
      37: aload_2
      38: invokevirtual #27                 // Method org/apache/activemq/command/ActiveMQMessage.setRegionDestination:(Lorg/apache/activemq/command/Message$MessageDestination;)V
      41: aload_0
      42: aload         5
      44: invokevirtual #28                 // Method configure:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      47: aload         4
      49: aload_3
      50: aload         5
      52: invokeinterface #29,  3           // InterfaceMethod org/apache/activemq/broker/region/SubscriptionRecovery.addRecoveredMessage:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;)Z
      57: pop
      58: goto          76
      61: astore        5
      63: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      66: ldc           #32                 // String Failed to dispatch initial message: {} into subscription. Reason:
      68: aload_1
      69: aload         5
      71: invokeinterface #33,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      76: return
    Exception table:
       from    to  target type
           0    58    61   Class java/lang/Throwable

  protected void configure(org.apache.activemq.command.ActiveMQMessage) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: lstore_2
       8: aload_1
       9: new           #35                 // class org/apache/activemq/command/MessageId
      12: dup
      13: aload_0
      14: getfield      #9                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
      17: lload_2
      18: invokespecial #36                 // Method org/apache/activemq/command/MessageId."<init>":(Lorg/apache/activemq/command/ProducerId;J)V
      21: invokevirtual #37                 // Method org/apache/activemq/command/ActiveMQMessage.setMessageId:(Lorg/apache/activemq/command/MessageId;)V
      24: aload_1
      25: invokevirtual #38                 // Method org/apache/activemq/command/ActiveMQMessage.onSend:()V
      28: aload_1
      29: aload_0
      30: getfield      #9                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
      33: invokevirtual #39                 // Method org/apache/activemq/command/ActiveMQMessage.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
      36: return

  protected org.apache.activemq.command.ProducerId createProducerId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
       4: invokevirtual #40                 // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
       7: astore_1
       8: new           #41                 // class org/apache/activemq/command/ConnectionId
      11: dup
      12: aload_1
      13: invokespecial #42                 // Method org/apache/activemq/command/ConnectionId."<init>":(Ljava/lang/String;)V
      16: astore_2
      17: new           #43                 // class org/apache/activemq/command/SessionId
      20: dup
      21: aload_2
      22: lconst_1
      23: invokespecial #44                 // Method org/apache/activemq/command/SessionId."<init>":(Lorg/apache/activemq/command/ConnectionId;J)V
      26: astore_3
      27: new           #45                 // class org/apache/activemq/command/ProducerId
      30: dup
      31: aload_3
      32: lconst_1
      33: invokespecial #46                 // Method org/apache/activemq/command/ProducerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      36: areturn

  static {};
    Code:
       0: ldc_w         #10                 // class org/apache/activemq/broker/region/policy/QueryBasedSubscriptionRecoveryPolicy
       3: invokestatic  #47                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
