Compiled from "BrokerService.java"
public class org.apache.activemq.broker.BrokerService implements org.apache.activemq.Service {
  public static final java.lang.String DEFAULT_PORT;

  public static final java.lang.String LOCAL_HOST_NAME;

  public static final java.lang.String BROKER_VERSION;

  public static final java.lang.String DEFAULT_BROKER_NAME;

  public static final int DEFAULT_MAX_FILE_LENGTH;

  public static final long DEFAULT_START_TIMEOUT;

  private static final org.slf4j.Logger LOG;

  private static final long serialVersionUID;

  private boolean useJmx;

  private boolean enableStatistics;

  private boolean persistent;

  private boolean populateJMSXUserID;

  private boolean useAuthenticatedPrincipalForJMSXUserID;

  private boolean populateUserNameInMBeans;

  private long mbeanInvocationTimeout;

  private boolean useShutdownHook;

  private boolean useLoggingForShutdownErrors;

  private boolean shutdownOnMasterFailure;

  private boolean shutdownOnSlaveFailure;

  private boolean waitForSlave;

  private long waitForSlaveTimeout;

  private boolean passiveSlave;

  private java.lang.String brokerName;

  private java.io.File dataDirectoryFile;

  private java.io.File tmpDataDirectory;

  private org.apache.activemq.broker.Broker broker;

  private org.apache.activemq.broker.jmx.BrokerView adminView;

  private org.apache.activemq.broker.jmx.ManagementContext managementContext;

  private javax.management.ObjectName brokerObjectName;

  private org.apache.activemq.thread.TaskRunnerFactory taskRunnerFactory;

  private org.apache.activemq.thread.TaskRunnerFactory persistenceTaskRunnerFactory;

  private org.apache.activemq.usage.SystemUsage systemUsage;

  private org.apache.activemq.usage.SystemUsage producerSystemUsage;

  private org.apache.activemq.usage.SystemUsage consumerSystemUsaage;

  private org.apache.activemq.store.PersistenceAdapter persistenceAdapter;

  private org.apache.activemq.store.PersistenceAdapterFactory persistenceFactory;

  protected org.apache.activemq.broker.region.DestinationFactory destinationFactory;

  private org.apache.activemq.security.MessageAuthorizationPolicy messageAuthorizationPolicy;

  private final java.util.List<org.apache.activemq.broker.TransportConnector> transportConnectors;

  private final java.util.List<org.apache.activemq.network.NetworkConnector> networkConnectors;

  private final java.util.List<org.apache.activemq.proxy.ProxyConnector> proxyConnectors;

  private final java.util.List<org.apache.activemq.network.jms.JmsConnector> jmsConnectors;

  private final java.util.List<org.apache.activemq.Service> services;

  private transient java.lang.Thread shutdownHook;

  private java.lang.String[] transportConnectorURIs;

  private java.lang.String[] networkConnectorURIs;

  private org.apache.activemq.network.jms.JmsConnector[] jmsBridgeConnectors;

  private boolean deleteAllMessagesOnStartup;

  private boolean advisorySupport;

  private java.net.URI vmConnectorURI;

  private java.lang.String defaultSocketURIString;

  private org.apache.activemq.broker.region.policy.PolicyMap destinationPolicy;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private final java.util.concurrent.atomic.AtomicBoolean stopped;

  private final java.util.concurrent.atomic.AtomicBoolean stopping;

  private org.apache.activemq.broker.BrokerPlugin[] plugins;

  private boolean keepDurableSubsActive;

  private boolean useVirtualTopics;

  private boolean useMirroredQueues;

  private boolean useTempMirroredQueues;

  private org.apache.activemq.command.BrokerId brokerId;

  private volatile org.apache.activemq.broker.region.DestinationInterceptor[] destinationInterceptors;

  private org.apache.activemq.command.ActiveMQDestination[] destinations;

  private org.apache.activemq.store.PListStore tempDataStore;

  private int persistenceThreadPriority;

  private boolean useLocalHostBrokerName;

  private final java.util.concurrent.CountDownLatch stoppedLatch;

  private final java.util.concurrent.CountDownLatch startedLatch;

  private boolean supportFailOver;

  private org.apache.activemq.broker.Broker regionBroker;

  private int producerSystemUsagePortion;

  private int consumerSystemUsagePortion;

  private boolean splitSystemUsageForProducersConsumers;

  private boolean monitorConnectionSplits;

  private int taskRunnerPriority;

  private boolean dedicatedTaskRunner;

  private boolean cacheTempDestinations;

  private int timeBeforePurgeTempDestinations;

  private final java.util.List<java.lang.Runnable> shutdownHooks;

  private boolean systemExitOnShutdown;

  private int systemExitOnShutdownExitCode;

  private org.apache.activemq.broker.SslContext sslContext;

  private boolean forceStart;

  private org.apache.activemq.util.IOExceptionHandler ioExceptionHandler;

  private boolean schedulerSupport;

  private java.io.File schedulerDirectoryFile;

  private org.apache.activemq.thread.Scheduler scheduler;

  private java.util.concurrent.ThreadPoolExecutor executor;

  private int schedulePeriodForDestinationPurge;

  private int maxPurgedDestinationsPerSweep;

  private org.apache.activemq.broker.BrokerContext brokerContext;

  private boolean networkConnectorStartAsync;

  private boolean allowTempAutoCreationOnSend;

  private org.apache.activemq.broker.scheduler.JobSchedulerStore jobSchedulerStore;

  private final java.util.concurrent.atomic.AtomicLong totalConnections;

  private final java.util.concurrent.atomic.AtomicInteger currentConnections;

  private long offlineDurableSubscriberTimeout;

  private long offlineDurableSubscriberTaskSchedule;

  private org.apache.activemq.filter.DestinationFilter virtualConsumerDestinationFilter;

  private final java.lang.Object persistenceAdapterLock;

  private java.lang.Throwable startException;

  private boolean startAsync;

  private java.util.Date startDate;

  private boolean slave;

  private boolean restartAllowed;

  private boolean restartRequested;

  private int storeOpenWireVersion;

  public org.apache.activemq.broker.BrokerService();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #9                  // Field useJmx:Z
       9: aload_0
      10: iconst_1
      11: putfield      #10                 // Field enableStatistics:Z
      14: aload_0
      15: iconst_1
      16: putfield      #11                 // Field persistent:Z
      19: aload_0
      20: lconst_0
      21: putfield      #12                 // Field mbeanInvocationTimeout:J
      24: aload_0
      25: iconst_1
      26: putfield      #13                 // Field useShutdownHook:Z
      29: aload_0
      30: ldc2_w        #14                 // long 600000l
      33: putfield      #16                 // Field waitForSlaveTimeout:J
      36: aload_0
      37: ldc           #17                 // String localhost
      39: putfield      #18                 // Field brokerName:Ljava/lang/String;
      42: aload_0
      43: new           #19                 // class java/util/concurrent/CopyOnWriteArrayList
      46: dup
      47: invokespecial #20                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      50: putfield      #21                 // Field transportConnectors:Ljava/util/List;
      53: aload_0
      54: new           #19                 // class java/util/concurrent/CopyOnWriteArrayList
      57: dup
      58: invokespecial #20                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      61: putfield      #22                 // Field networkConnectors:Ljava/util/List;
      64: aload_0
      65: new           #19                 // class java/util/concurrent/CopyOnWriteArrayList
      68: dup
      69: invokespecial #20                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      72: putfield      #23                 // Field proxyConnectors:Ljava/util/List;
      75: aload_0
      76: new           #19                 // class java/util/concurrent/CopyOnWriteArrayList
      79: dup
      80: invokespecial #20                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      83: putfield      #24                 // Field jmsConnectors:Ljava/util/List;
      86: aload_0
      87: new           #25                 // class java/util/ArrayList
      90: dup
      91: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      94: putfield      #27                 // Field services:Ljava/util/List;
      97: aload_0
      98: iconst_1
      99: putfield      #28                 // Field advisorySupport:Z
     102: aload_0
     103: new           #29                 // class java/util/concurrent/atomic/AtomicBoolean
     106: dup
     107: iconst_0
     108: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     111: putfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     114: aload_0
     115: new           #29                 // class java/util/concurrent/atomic/AtomicBoolean
     118: dup
     119: iconst_0
     120: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     123: putfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
     126: aload_0
     127: new           #29                 // class java/util/concurrent/atomic/AtomicBoolean
     130: dup
     131: iconst_0
     132: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     135: putfield      #33                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
     138: aload_0
     139: iconst_1
     140: putfield      #34                 // Field keepDurableSubsActive:Z
     143: aload_0
     144: iconst_1
     145: putfield      #35                 // Field useVirtualTopics:Z
     148: aload_0
     149: iconst_0
     150: putfield      #36                 // Field useMirroredQueues:Z
     153: aload_0
     154: iconst_1
     155: putfield      #37                 // Field useTempMirroredQueues:Z
     158: aload_0
     159: bipush        10
     161: putfield      #38                 // Field persistenceThreadPriority:I
     164: aload_0
     165: new           #39                 // class java/util/concurrent/CountDownLatch
     168: dup
     169: iconst_1
     170: invokespecial #40                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     173: putfield      #41                 // Field stoppedLatch:Ljava/util/concurrent/CountDownLatch;
     176: aload_0
     177: new           #39                 // class java/util/concurrent/CountDownLatch
     180: dup
     181: iconst_1
     182: invokespecial #40                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     185: putfield      #42                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     188: aload_0
     189: bipush        60
     191: putfield      #43                 // Field producerSystemUsagePortion:I
     194: aload_0
     195: bipush        40
     197: putfield      #44                 // Field consumerSystemUsagePortion:I
     200: aload_0
     201: iconst_0
     202: putfield      #45                 // Field monitorConnectionSplits:Z
     205: aload_0
     206: iconst_5
     207: putfield      #46                 // Field taskRunnerPriority:I
     210: aload_0
     211: iconst_0
     212: putfield      #47                 // Field cacheTempDestinations:Z
     215: aload_0
     216: sipush        5000
     219: putfield      #48                 // Field timeBeforePurgeTempDestinations:I
     222: aload_0
     223: new           #25                 // class java/util/ArrayList
     226: dup
     227: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
     230: putfield      #49                 // Field shutdownHooks:Ljava/util/List;
     233: aload_0
     234: iconst_0
     235: putfield      #2                  // Field forceStart:Z
     238: aload_0
     239: iconst_0
     240: putfield      #50                 // Field schedulerSupport:Z
     243: aload_0
     244: iconst_0
     245: putfield      #51                 // Field schedulePeriodForDestinationPurge:I
     248: aload_0
     249: iconst_0
     250: putfield      #52                 // Field maxPurgedDestinationsPerSweep:I
     253: aload_0
     254: iconst_0
     255: putfield      #53                 // Field networkConnectorStartAsync:Z
     258: aload_0
     259: new           #54                 // class java/util/concurrent/atomic/AtomicLong
     262: dup
     263: invokespecial #55                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
     266: putfield      #56                 // Field totalConnections:Ljava/util/concurrent/atomic/AtomicLong;
     269: aload_0
     270: new           #57                 // class java/util/concurrent/atomic/AtomicInteger
     273: dup
     274: invokespecial #58                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
     277: putfield      #59                 // Field currentConnections:Ljava/util/concurrent/atomic/AtomicInteger;
     280: aload_0
     281: ldc2_w        #60                 // long -1l
     284: putfield      #62                 // Field offlineDurableSubscriberTimeout:J
     287: aload_0
     288: ldc2_w        #63                 // long 300000l
     291: putfield      #65                 // Field offlineDurableSubscriberTaskSchedule:J
     294: aload_0
     295: new           #66                 // class java/lang/Object
     298: dup
     299: invokespecial #8                  // Method java/lang/Object."<init>":()V
     302: putfield      #5                  // Field persistenceAdapterLock:Ljava/lang/Object;
     305: aload_0
     306: aconst_null
     307: putfield      #6                  // Field startException:Ljava/lang/Throwable;
     310: aload_0
     311: iconst_0
     312: putfield      #67                 // Field startAsync:Z
     315: aload_0
     316: iconst_1
     317: putfield      #68                 // Field slave:Z
     320: aload_0
     321: iconst_1
     322: putfield      #69                 // Field restartAllowed:Z
     325: aload_0
     326: iconst_0
     327: putfield      #70                 // Field restartRequested:Z
     330: aload_0
     331: bipush        6
     333: putfield      #71                 // Field storeOpenWireVersion:I
     336: return

  public java.lang.String toString();
    Code:
       0: new           #72                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #74                 // String BrokerService[
       9: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      16: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #77                 // String ]
      21: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private java.lang.String getBrokerVersion();
    Code:
       0: getstatic     #79                 // Field org/apache/activemq/ActiveMQConnectionMetaData.PROVIDER_VERSION:Ljava/lang/String;
       3: astore_1
       4: aload_1
       5: ifnonnull     12
       8: getstatic     #80                 // Field BROKER_VERSION:Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: areturn

  public org.apache.activemq.broker.TransportConnector addConnector(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #81                 // class java/net/URI
       4: dup
       5: aload_1
       6: invokespecial #82                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
       9: invokevirtual #83                 // Method addConnector:(Ljava/net/URI;)Lorg/apache/activemq/broker/TransportConnector;
      12: areturn

  public org.apache.activemq.broker.TransportConnector addConnector(java.net.URI) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #84                 // Method createTransportConnector:(Ljava/net/URI;)Lorg/apache/activemq/broker/TransportConnector;
       6: invokevirtual #85                 // Method addConnector:(Lorg/apache/activemq/broker/TransportConnector;)Lorg/apache/activemq/broker/TransportConnector;
       9: areturn

  public org.apache.activemq.broker.TransportConnector addConnector(org.apache.activemq.transport.TransportServer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #86                 // class org/apache/activemq/broker/TransportConnector
       4: dup
       5: aload_1
       6: invokespecial #87                 // Method org/apache/activemq/broker/TransportConnector."<init>":(Lorg/apache/activemq/transport/TransportServer;)V
       9: invokevirtual #85                 // Method addConnector:(Lorg/apache/activemq/broker/TransportConnector;)Lorg/apache/activemq/broker/TransportConnector;
      12: areturn

  public org.apache.activemq.broker.TransportConnector addConnector(org.apache.activemq.broker.TransportConnector) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field transportConnectors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: areturn

  public boolean removeConnector(org.apache.activemq.broker.TransportConnector) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field transportConnectors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: istore_2
      11: iload_2
      12: ifeq          20
      15: aload_0
      16: aload_1
      17: invokevirtual #90                 // Method unregisterConnectorMBean:(Lorg/apache/activemq/broker/TransportConnector;)V
      20: iload_2
      21: ireturn

  public org.apache.activemq.network.NetworkConnector addNetworkConnector(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #81                 // class java/net/URI
       4: dup
       5: aload_1
       6: invokespecial #82                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
       9: invokevirtual #91                 // Method addNetworkConnector:(Ljava/net/URI;)Lorg/apache/activemq/network/NetworkConnector;
      12: areturn

  public org.apache.activemq.proxy.ProxyConnector addProxyConnector(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #81                 // class java/net/URI
       4: dup
       5: aload_1
       6: invokespecial #82                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
       9: invokevirtual #92                 // Method addProxyConnector:(Ljava/net/URI;)Lorg/apache/activemq/proxy/ProxyConnector;
      12: areturn

  public org.apache.activemq.network.NetworkConnector addNetworkConnector(java.net.URI) throws java.lang.Exception;
    Code:
       0: new           #93                 // class org/apache/activemq/network/DiscoveryNetworkConnector
       3: dup
       4: aload_1
       5: invokespecial #94                 // Method org/apache/activemq/network/DiscoveryNetworkConnector."<init>":(Ljava/net/URI;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #95                 // Method addNetworkConnector:(Lorg/apache/activemq/network/NetworkConnector;)Lorg/apache/activemq/network/NetworkConnector;
      14: areturn

  public org.apache.activemq.proxy.ProxyConnector addProxyConnector(java.net.URI) throws java.lang.Exception;
    Code:
       0: new           #96                 // class org/apache/activemq/proxy/ProxyConnector
       3: dup
       4: invokespecial #97                 // Method org/apache/activemq/proxy/ProxyConnector."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #98                 // Method org/apache/activemq/proxy/ProxyConnector.setBind:(Ljava/net/URI;)V
      13: aload_2
      14: new           #81                 // class java/net/URI
      17: dup
      18: ldc           #99                 // String fanout:multicast://default
      20: invokespecial #82                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      23: invokevirtual #100                // Method org/apache/activemq/proxy/ProxyConnector.setRemote:(Ljava/net/URI;)V
      26: aload_0
      27: aload_2
      28: invokevirtual #101                // Method addProxyConnector:(Lorg/apache/activemq/proxy/ProxyConnector;)Lorg/apache/activemq/proxy/ProxyConnector;
      31: areturn

  public org.apache.activemq.network.NetworkConnector addNetworkConnector(org.apache.activemq.network.NetworkConnector) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #102                // Method org/apache/activemq/network/NetworkConnector.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
       5: aload_0
       6: invokevirtual #103                // Method getVmConnectorURI:()Ljava/net/URI;
       9: astore_2
      10: new           #104                // class java/util/HashMap
      13: dup
      14: aload_2
      15: invokestatic  #105                // Method org/apache/activemq/util/URISupport.parseParameters:(Ljava/net/URI;)Ljava/util/Map;
      18: invokespecial #106                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      21: astore_3
      22: aload_3
      23: ldc           #107                // String network
      25: ldc           #108                // String true
      27: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_2
      34: aload_3
      35: invokestatic  #110                // Method org/apache/activemq/util/URISupport.createQueryString:(Ljava/util/Map;)Ljava/lang/String;
      38: invokestatic  #111                // Method org/apache/activemq/util/URISupport.createURIWithQuery:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;
      41: astore_2
      42: aload_1
      43: aload_2
      44: invokevirtual #112                // Method org/apache/activemq/network/NetworkConnector.setLocalUri:(Ljava/net/URI;)V
      47: aload_1
      48: new           #113                // class org/apache/activemq/broker/BrokerService$1
      51: dup
      52: aload_0
      53: invokespecial #114                // Method org/apache/activemq/broker/BrokerService$1."<init>":(Lorg/apache/activemq/broker/BrokerService;)V
      56: invokevirtual #115                // Method org/apache/activemq/network/NetworkConnector.setConnectionFilter:(Lorg/apache/activemq/network/ConnectionFilter;)V
      59: aload_0
      60: getfield      #22                 // Field networkConnectors:Ljava/util/List;
      63: aload_1
      64: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: aload_1
      71: areturn

  public boolean removeNetworkConnector(org.apache.activemq.network.NetworkConnector);
    Code:
       0: aload_0
       1: getfield      #22                 // Field networkConnectors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: istore_2
      11: iload_2
      12: ifeq          20
      15: aload_0
      16: aload_1
      17: invokevirtual #116                // Method unregisterNetworkConnectorMBean:(Lorg/apache/activemq/network/NetworkConnector;)V
      20: iload_2
      21: ireturn

  public org.apache.activemq.proxy.ProxyConnector addProxyConnector(org.apache.activemq.proxy.ProxyConnector) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #103                // Method getVmConnectorURI:()Ljava/net/URI;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #117                // Method org/apache/activemq/proxy/ProxyConnector.setLocalUri:(Ljava/net/URI;)V
      10: aload_0
      11: getfield      #23                 // Field proxyConnectors:Ljava/util/List;
      14: aload_1
      15: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_0
      22: invokevirtual #118                // Method isUseJmx:()Z
      25: ifeq          33
      28: aload_0
      29: aload_1
      30: invokevirtual #119                // Method registerProxyConnectorMBean:(Lorg/apache/activemq/proxy/ProxyConnector;)V
      33: aload_1
      34: areturn

  public org.apache.activemq.network.jms.JmsConnector addJmsConnector(org.apache.activemq.network.jms.JmsConnector) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #120                // Method org/apache/activemq/network/jms/JmsConnector.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
       5: aload_0
       6: getfield      #24                 // Field jmsConnectors:Ljava/util/List;
       9: aload_1
      10: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: invokevirtual #118                // Method isUseJmx:()Z
      20: ifeq          28
      23: aload_0
      24: aload_1
      25: invokevirtual #121                // Method registerJmsConnectorMBean:(Lorg/apache/activemq/network/jms/JmsConnector;)V
      28: aload_1
      29: areturn

  public org.apache.activemq.network.jms.JmsConnector removeJmsConnector(org.apache.activemq.network.jms.JmsConnector);
    Code:
       0: aload_0
       1: getfield      #24                 // Field jmsConnectors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ifeq          15
      13: aload_1
      14: areturn
      15: aconst_null
      16: areturn

  public void masterFailed();
    Code:
       0: aload_0
       1: getfield      #122                // Field shutdownOnMasterFailure:Z
       4: ifeq          39
       7: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      10: ldc           #123                // String The Master has failed ... shutting down
      12: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      17: aload_0
      18: invokevirtual #125                // Method stop:()V
      21: goto          77
      24: astore_1
      25: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      28: ldc           #127                // String Failed to stop for master failure
      30: aload_1
      31: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: goto          77
      39: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      42: ldc           #129                // String Master Failed - starting all connectors
      44: invokeinterface #130,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      49: aload_0
      50: invokevirtual #131                // Method startAllConnectors:()V
      53: aload_0
      54: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
      57: invokeinterface #133,  1          // InterfaceMethod org/apache/activemq/broker/Broker.nowMasterBroker:()V
      62: goto          77
      65: astore_1
      66: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      69: ldc           #134                // String Failed to startAllConnectors
      71: aload_1
      72: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      77: return
    Exception table:
       from    to  target type
          17    21    24   Class java/lang/Exception
          49    62    65   Class java/lang/Exception

  public java.lang.String getUptime();
    Code:
       0: aload_0
       1: getfield      #135                // Field startDate:Ljava/util/Date;
       4: ifnonnull     10
       7: ldc           #136                // String not started
       9: areturn
      10: new           #137                // class java/util/Date
      13: dup
      14: invokespecial #138                // Method java/util/Date."<init>":()V
      17: invokevirtual #139                // Method java/util/Date.getTime:()J
      20: aload_0
      21: getfield      #135                // Field startDate:Ljava/util/Date;
      24: invokevirtual #139                // Method java/util/Date.getTime:()J
      27: lsub
      28: lstore_1
      29: lload_1
      30: l2d
      31: invokestatic  #140                // Method org/apache/activemq/util/TimeUtils.printDuration:(D)Ljava/lang/String;
      34: areturn

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          26
      10: aload_0
      11: getfield      #42                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
      14: invokevirtual #142                // Method java/util/concurrent/CountDownLatch.getCount:()J
      17: lconst_0
      18: lcmp
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public void start(boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field forceStart:Z
       5: aload_0
       6: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       9: iconst_0
      10: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      13: aload_0
      14: getfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: iconst_0
      18: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      21: aload_0
      22: invokevirtual #144                // Method start:()V
      25: return

  protected boolean shouldAutostart();
    Code:
       0: iconst_1
       1: ireturn

  private void postConstruct();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method autoStart:()V
       4: goto          17
       7: astore_1
       8: new           #146                // class java/lang/RuntimeException
      11: dup
      12: aload_1
      13: invokespecial #147                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception

  public void autoStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #148                // Method shouldAutostart:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #144                // Method start:()V
      11: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          22
      10: aload_0
      11: getfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: iconst_0
      15: iconst_1
      16: invokevirtual #149                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      19: ifne          23
      22: return
      23: aload_0
      24: getfield      #33                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: iconst_0
      28: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      31: aload_0
      32: new           #137                // class java/util/Date
      35: dup
      36: invokespecial #138                // Method java/util/Date."<init>":()V
      39: putfield      #135                // Field startDate:Ljava/util/Date;
      42: ldc           #150                // String activemq.broker
      44: aload_0
      45: getfield      #18                 // Field brokerName:Ljava/lang/String;
      48: invokestatic  #151                // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
      51: aload_0
      52: getfield      #152                // Field systemExitOnShutdown:Z
      55: ifeq          75
      58: aload_0
      59: getfield      #13                 // Field useShutdownHook:Z
      62: ifeq          75
      65: new           #153                // class org/apache/activemq/ConfigurationException
      68: dup
      69: ldc           #154                // String \'useShutdownHook\' property cannot be be used with \'systemExitOnShutdown\', please turn it off (useShutdownHook=false)
      71: invokespecial #155                // Method org/apache/activemq/ConfigurationException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: invokevirtual #156                // Method processHelperProperties:()V
      79: aload_0
      80: invokevirtual #118                // Method isUseJmx:()Z
      83: ifeq          156
      86: ldc           #150                // String activemq.broker
      88: invokestatic  #157                // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
      91: aload_0
      92: invokevirtual #158                // Method startManagementContext:()V
      95: aload_0
      96: invokevirtual #159                // Method getNetworkConnectors:()Ljava/util/List;
      99: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     104: astore_1
     105: aload_1
     106: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          132
     114: aload_1
     115: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #163                // class org/apache/activemq/network/NetworkConnector
     123: astore_2
     124: aload_0
     125: aload_2
     126: invokevirtual #164                // Method registerNetworkConnectorMBean:(Lorg/apache/activemq/network/NetworkConnector;)V
     129: goto          105
     132: ldc           #150                // String activemq.broker
     134: aload_0
     135: getfield      #18                 // Field brokerName:Ljava/lang/String;
     138: invokestatic  #151                // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
     141: goto          156
     144: astore_3
     145: ldc           #150                // String activemq.broker
     147: aload_0
     148: getfield      #18                 // Field brokerName:Ljava/lang/String;
     151: invokestatic  #151                // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
     154: aload_3
     155: athrow
     156: invokestatic  #165                // Method org/apache/activemq/broker/BrokerRegistry.getInstance:()Lorg/apache/activemq/broker/BrokerRegistry;
     159: astore_1
     160: aload_1
     161: aload_0
     162: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     165: invokevirtual #166                // Method org/apache/activemq/broker/BrokerRegistry.lookup:(Ljava/lang/String;)Lorg/apache/activemq/broker/BrokerService;
     168: ifnonnull     180
     171: aload_1
     172: aload_0
     173: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     176: aload_0
     177: invokevirtual #167                // Method org/apache/activemq/broker/BrokerRegistry.bind:(Ljava/lang/String;Lorg/apache/activemq/broker/BrokerService;)V
     180: aload_0
     181: aload_0
     182: getfield      #67                 // Field startAsync:Z
     185: invokespecial #168                // Method startPersistenceAdapter:(Z)V
     188: aload_0
     189: aload_0
     190: getfield      #67                 // Field startAsync:Z
     193: invokespecial #169                // Method startBroker:(Z)V
     196: aload_1
     197: aload_0
     198: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     201: aload_0
     202: invokevirtual #167                // Method org/apache/activemq/broker/BrokerRegistry.bind:(Ljava/lang/String;Lorg/apache/activemq/broker/BrokerService;)V
     205: ldc           #150                // String activemq.broker
     207: invokestatic  #157                // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
     210: goto          284
     213: astore_1
     214: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     217: ldc           #170                // String Failed to start Apache ActiveMQ ({}, {})
     219: iconst_2
     220: anewarray     #66                 // class java/lang/Object
     223: dup
     224: iconst_0
     225: aload_0
     226: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     229: aastore
     230: dup
     231: iconst_1
     232: aload_0
     233: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
     236: aastore
     237: aload_1
     238: invokeinterface #172,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     243: aload_0
     244: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
     247: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     250: ifne          257
     253: aload_0
     254: invokevirtual #125                // Method stop:()V
     257: goto          272
     260: astore_2
     261: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     264: ldc           #173                // String Failed to stop broker after failure in start. This exception will be ignored.
     266: aload_2
     267: invokeinterface #174,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     272: aload_1
     273: athrow
     274: astore        4
     276: ldc           #150                // String activemq.broker
     278: invokestatic  #157                // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
     281: aload         4
     283: athrow
     284: return
    Exception table:
       from    to  target type
          91   132   144   any
         144   145   144   any
          51   205   213   Class java/lang/Exception
         243   257   260   Class java/lang/Exception
          51   205   274   any
         213   276   274   any

  private void startPersistenceAdapter(boolean) throws java.lang.Exception;
    Code:
       0: iload_1
       1: ifeq          20
       4: new           #175                // class org/apache/activemq/broker/BrokerService$2
       7: dup
       8: aload_0
       9: ldc           #176                // String Persistence Adapter Starting Thread
      11: invokespecial #177                // Method org/apache/activemq/broker/BrokerService$2."<init>":(Lorg/apache/activemq/broker/BrokerService;Ljava/lang/String;)V
      14: invokevirtual #178                // Method org/apache/activemq/broker/BrokerService$2.start:()V
      17: goto          24
      20: aload_0
      21: invokespecial #7                  // Method doStartPersistenceAdapter:()V
      24: return

  private void doStartPersistenceAdapter() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
       4: aload_0
       5: invokevirtual #180                // Method getProducerSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
       8: invokeinterface #181,  2          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.setUsageManager:(Lorg/apache/activemq/usage/SystemUsage;)V
      13: aload_0
      14: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      17: aload_0
      18: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      21: invokeinterface #182,  2          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.setBrokerName:(Ljava/lang/String;)V
      26: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #183                // String Using Persistence Adapter: {}
      31: aload_0
      32: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      35: invokeinterface #184,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #185                // Field deleteAllMessagesOnStartup:Z
      44: ifeq          51
      47: aload_0
      48: invokevirtual #186                // Method deleteAllMessages:()V
      51: aload_0
      52: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      55: invokeinterface #187,  1          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.start:()V
      60: return

  private void startBroker(boolean) throws java.lang.Exception;
    Code:
       0: iload_1
       1: ifeq          20
       4: new           #188                // class org/apache/activemq/broker/BrokerService$3
       7: dup
       8: aload_0
       9: ldc           #189                // String Broker Starting Thread
      11: invokespecial #190                // Method org/apache/activemq/broker/BrokerService$3."<init>":(Lorg/apache/activemq/broker/BrokerService;Ljava/lang/String;)V
      14: invokevirtual #191                // Method org/apache/activemq/broker/BrokerService$3.start:()V
      17: goto          24
      20: aload_0
      21: invokespecial #4                  // Method doStartBroker:()V
      24: return

  private void doStartBroker() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field startException:Ljava/lang/Throwable;
       4: ifnull        8
       7: return
       8: aload_0
       9: invokevirtual #192                // Method startDestinations:()V
      12: aload_0
      13: invokevirtual #193                // Method addShutdownHook:()V
      16: aload_0
      17: aload_0
      18: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
      21: putfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
      24: aload_0
      25: aload_0
      26: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
      29: invokeinterface #195,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      34: putfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      37: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      40: ldc           #196                // String Apache ActiveMQ {} ({}, {}) is starting
      42: iconst_3
      43: anewarray     #66                 // class java/lang/Object
      46: dup
      47: iconst_0
      48: aload_0
      49: invokespecial #197                // Method getBrokerVersion:()Ljava/lang/String;
      52: aastore
      53: dup
      54: iconst_1
      55: aload_0
      56: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      59: aastore
      60: dup
      61: iconst_2
      62: aload_0
      63: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      66: aastore
      67: invokeinterface #198,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      72: aload_0
      73: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
      76: invokeinterface #199,  1          // InterfaceMethod org/apache/activemq/broker/Broker.start:()V
      81: aload_0
      82: invokevirtual #118                // Method isUseJmx:()Z
      85: ifeq          143
      88: aload_0
      89: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      92: invokevirtual #201                // Method org/apache/activemq/broker/jmx/ManagementContext.isCreateConnector:()Z
      95: ifeq          119
      98: aload_0
      99: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
     102: invokevirtual #202                // Method org/apache/activemq/broker/jmx/ManagementContext.isConnectorStarted:()Z
     105: ifne          119
     108: aload_0
     109: getfield      #203                // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
     112: invokevirtual #204                // Method org/apache/activemq/broker/jmx/ManagementContext.stop:()V
     115: aload_0
     116: invokevirtual #158                // Method startManagementContext:()V
     119: aload_0
     120: getfield      #205                // Field regionBroker:Lorg/apache/activemq/broker/Broker;
     123: checkcast     #206                // class org/apache/activemq/broker/jmx/ManagedRegionBroker
     126: astore_1
     127: aload_1
     128: aload_0
     129: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
     132: invokevirtual #207                // Method org/apache/activemq/broker/jmx/ManagedRegionBroker.setContextBroker:(Lorg/apache/activemq/broker/Broker;)V
     135: aload_0
     136: getfield      #208                // Field adminView:Lorg/apache/activemq/broker/jmx/BrokerView;
     139: aload_1
     140: invokevirtual #209                // Method org/apache/activemq/broker/jmx/BrokerView.setBroker:(Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;)V
     143: aload_0
     144: getfield      #210                // Field ioExceptionHandler:Lorg/apache/activemq/util/IOExceptionHandler;
     147: ifnonnull     161
     150: aload_0
     151: new           #211                // class org/apache/activemq/util/DefaultIOExceptionHandler
     154: dup
     155: invokespecial #212                // Method org/apache/activemq/util/DefaultIOExceptionHandler."<init>":()V
     158: invokevirtual #213                // Method setIoExceptionHandler:(Lorg/apache/activemq/util/IOExceptionHandler;)V
     161: aload_0
     162: invokevirtual #131                // Method startAllConnectors:()V
     165: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     168: ldc           #214                // String Apache ActiveMQ {} ({}, {}) started
     170: iconst_3
     171: anewarray     #66                 // class java/lang/Object
     174: dup
     175: iconst_0
     176: aload_0
     177: invokespecial #197                // Method getBrokerVersion:()Ljava/lang/String;
     180: aastore
     181: dup
     182: iconst_1
     183: aload_0
     184: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     187: aastore
     188: dup
     189: iconst_2
     190: aload_0
     191: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
     194: aastore
     195: invokeinterface #198,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     200: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     203: ldc           #215                // String For help or more information please see: http://activemq.apache.org
     205: invokeinterface #216,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     210: aload_0
     211: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
     214: invokeinterface #217,  1          // InterfaceMethod org/apache/activemq/broker/Broker.brokerServiceStarted:()V
     219: aload_0
     220: invokevirtual #218                // Method checkSystemUsageLimits:()V
     223: aload_0
     224: getfield      #42                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     227: invokevirtual #219                // Method java/util/concurrent/CountDownLatch.countDown:()V
     230: aload_0
     231: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
     234: invokeinterface #133,  1          // InterfaceMethod org/apache/activemq/broker/Broker.nowMasterBroker:()V
     239: return

  private void preDestroy();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method stop:()V
       4: goto          16
       7: astore_1
       8: new           #146                // class java/lang/RuntimeException
      11: dup
      12: invokespecial #220                // Method java/lang/RuntimeException."<init>":()V
      15: athrow
      16: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #33                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #149                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          23
      12: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #221                // String Broker already stopping/stopped
      17: invokeinterface #222,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      22: return
      23: ldc           #150                // String activemq.broker
      25: aload_0
      26: getfield      #18                 // Field brokerName:Ljava/lang/String;
      29: invokestatic  #151                // Method org/slf4j/MDC.put:(Ljava/lang/String;Ljava/lang/String;)V
      32: aload_0
      33: getfield      #152                // Field systemExitOnShutdown:Z
      36: ifeq          50
      39: new           #223                // class org/apache/activemq/broker/BrokerService$4
      42: dup
      43: aload_0
      44: invokespecial #224                // Method org/apache/activemq/broker/BrokerService$4."<init>":(Lorg/apache/activemq/broker/BrokerService;)V
      47: invokevirtual #225                // Method org/apache/activemq/broker/BrokerService$4.start:()V
      50: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      53: ldc           #226                // String Apache ActiveMQ {} ({}, {}) is shutting down
      55: iconst_3
      56: anewarray     #66                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_0
      62: invokespecial #197                // Method getBrokerVersion:()Ljava/lang/String;
      65: aastore
      66: dup
      67: iconst_1
      68: aload_0
      69: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      72: aastore
      73: dup
      74: iconst_2
      75: aload_0
      76: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      79: aastore
      80: invokeinterface #198,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      85: aload_0
      86: invokevirtual #227                // Method removeShutdownHook:()V
      89: aload_0
      90: getfield      #228                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      93: ifnull        108
      96: aload_0
      97: getfield      #228                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
     100: invokevirtual #229                // Method org/apache/activemq/thread/Scheduler.stop:()V
     103: aload_0
     104: aconst_null
     105: putfield      #228                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
     108: new           #230                // class org/apache/activemq/util/ServiceStopper
     111: dup
     112: invokespecial #231                // Method org/apache/activemq/util/ServiceStopper."<init>":()V
     115: astore_1
     116: aload_0
     117: getfield      #27                 // Field services:Ljava/util/List;
     120: ifnull        160
     123: aload_0
     124: getfield      #27                 // Field services:Ljava/util/List;
     127: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     132: astore_2
     133: aload_2
     134: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     139: ifeq          160
     142: aload_2
     143: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #232                // class org/apache/activemq/Service
     151: astore_3
     152: aload_1
     153: aload_3
     154: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     157: goto          133
     160: aload_0
     161: aload_1
     162: invokevirtual #234                // Method stopAllConnectors:(Lorg/apache/activemq/util/ServiceStopper;)V
     165: aload_0
     166: iconst_1
     167: putfield      #68                 // Field slave:Z
     170: invokestatic  #165                // Method org/apache/activemq/broker/BrokerRegistry.getInstance:()Lorg/apache/activemq/broker/BrokerRegistry;
     173: aload_0
     174: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     177: invokevirtual #235                // Method org/apache/activemq/broker/BrokerRegistry.unbind:(Ljava/lang/String;)V
     180: aload_0
     181: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     184: invokestatic  #236                // Method org/apache/activemq/transport/vm/VMTransportFactory.stopped:(Ljava/lang/String;)V
     187: aload_0
     188: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
     191: ifnull        207
     194: aload_1
     195: aload_0
     196: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
     199: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     202: aload_0
     203: aconst_null
     204: putfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
     207: aload_0
     208: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     211: ifnull        228
     214: aload_0
     215: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     218: invokeinterface #238,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/JobSchedulerStore.stop:()V
     223: aload_0
     224: aconst_null
     225: putfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     228: aload_0
     229: getfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     232: ifnull        249
     235: aload_0
     236: getfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     239: invokeinterface #240,  1          // InterfaceMethod org/apache/activemq/store/PListStore.stop:()V
     244: aload_0
     245: aconst_null
     246: putfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     249: aload_1
     250: aload_0
     251: getfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
     254: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     257: aload_0
     258: aconst_null
     259: putfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
     262: aload_0
     263: invokevirtual #118                // Method isUseJmx:()Z
     266: ifeq          282
     269: aload_1
     270: aload_0
     271: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
     274: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     277: aload_0
     278: aconst_null
     279: putfield      #203                // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
     282: invokestatic  #242                // Method org/apache/activemq/selector/SelectorParser.clearCache:()V
     285: aload_0
     286: getfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     289: iconst_0
     290: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     293: aload_0
     294: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
     297: iconst_1
     298: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     301: aload_0
     302: getfield      #41                 // Field stoppedLatch:Ljava/util/concurrent/CountDownLatch;
     305: invokevirtual #219                // Method java/util/concurrent/CountDownLatch.countDown:()V
     308: goto          339
     311: astore        4
     313: aload_0
     314: getfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     317: iconst_0
     318: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     321: aload_0
     322: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
     325: iconst_1
     326: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     329: aload_0
     330: getfield      #41                 // Field stoppedLatch:Ljava/util/concurrent/CountDownLatch;
     333: invokevirtual #219                // Method java/util/concurrent/CountDownLatch.countDown:()V
     336: aload         4
     338: athrow
     339: aload_0
     340: getfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     343: ifnull        358
     346: aload_0
     347: getfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     350: invokevirtual #244                // Method org/apache/activemq/thread/TaskRunnerFactory.shutdown:()V
     353: aload_0
     354: aconst_null
     355: putfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     358: aload_0
     359: getfield      #245                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     362: ifnull        378
     365: aload_0
     366: getfield      #245                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     369: invokestatic  #246                // Method org/apache/activemq/util/ThreadPoolUtils.shutdownNow:(Ljava/util/concurrent/ExecutorService;)Ljava/util/List;
     372: pop
     373: aload_0
     374: aconst_null
     375: putfield      #245                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     378: aload_0
     379: aconst_null
     380: putfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
     383: aload_0
     384: aconst_null
     385: putfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
     388: aload_0
     389: getfield      #135                // Field startDate:Ljava/util/Date;
     392: ifnull        437
     395: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     398: ldc           #249                // String Apache ActiveMQ {} ({}, {}) uptime {}
     400: iconst_4
     401: anewarray     #66                 // class java/lang/Object
     404: dup
     405: iconst_0
     406: aload_0
     407: invokespecial #197                // Method getBrokerVersion:()Ljava/lang/String;
     410: aastore
     411: dup
     412: iconst_1
     413: aload_0
     414: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     417: aastore
     418: dup
     419: iconst_2
     420: aload_0
     421: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
     424: aastore
     425: dup
     426: iconst_3
     427: aload_0
     428: invokevirtual #250                // Method getUptime:()Ljava/lang/String;
     431: aastore
     432: invokeinterface #198,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     437: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     440: ldc           #251                // String Apache ActiveMQ {} ({}, {}) is shutdown
     442: iconst_3
     443: anewarray     #66                 // class java/lang/Object
     446: dup
     447: iconst_0
     448: aload_0
     449: invokespecial #197                // Method getBrokerVersion:()Ljava/lang/String;
     452: aastore
     453: dup
     454: iconst_1
     455: aload_0
     456: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     459: aastore
     460: dup
     461: iconst_2
     462: aload_0
     463: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
     466: aastore
     467: invokeinterface #198,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     472: aload_0
     473: getfield      #49                 // Field shutdownHooks:Ljava/util/List;
     476: dup
     477: astore_2
     478: monitorenter
     479: aload_0
     480: getfield      #49                 // Field shutdownHooks:Ljava/util/List;
     483: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     488: astore_3
     489: aload_3
     490: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     495: ifeq          532
     498: aload_3
     499: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     504: checkcast     #252                // class java/lang/Runnable
     507: astore        4
     509: aload         4
     511: invokeinterface #253,  1          // InterfaceMethod java/lang/Runnable.run:()V
     516: goto          529
     519: astore        5
     521: aload_1
     522: aload         4
     524: aload         5
     526: invokevirtual #255                // Method org/apache/activemq/util/ServiceStopper.onException:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     529: goto          489
     532: aload_2
     533: monitorexit
     534: goto          544
     537: astore        6
     539: aload_2
     540: monitorexit
     541: aload         6
     543: athrow
     544: ldc           #150                // String activemq.broker
     546: invokestatic  #157                // Method org/slf4j/MDC.remove:(Ljava/lang/String;)V
     549: aload_0
     550: aconst_null
     551: putfield      #135                // Field startDate:Ljava/util/Date;
     554: aload_1
     555: invokevirtual #256                // Method org/apache/activemq/util/ServiceStopper.throwFirstException:()V
     558: return
    Exception table:
       from    to  target type
         249   285   311   any
         311   313   311   any
         509   516   519   Class java/lang/Throwable
         479   534   537   any
         537   541   537   any

  public boolean checkQueueSize(java.lang.String);
    Code:
       0: lconst_0
       1: lstore_2
       2: lconst_0
       3: lstore        4
       5: aload_0
       6: getfield      #205                // Field regionBroker:Lorg/apache/activemq/broker/Broker;
       9: invokeinterface #257,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getDestinationMap:()Ljava/util/Map;
      14: astore        6
      16: aload         6
      18: invokeinterface #258,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #259,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore        7
      30: aload         7
      32: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          159
      40: aload         7
      42: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #260                // class java/util/Map$Entry
      50: astore        8
      52: aload         8
      54: invokeinterface #261,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: checkcast     #262                // class org/apache/activemq/command/ActiveMQDestination
      62: invokevirtual #263                // Method org/apache/activemq/command/ActiveMQDestination.isQueue:()Z
      65: ifeq          156
      68: aload         8
      70: invokeinterface #264,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #265                // class org/apache/activemq/broker/region/Destination
      78: invokeinterface #266,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getName:()Ljava/lang/String;
      83: aload_1
      84: invokevirtual #267                // Method java/lang/String.matches:(Ljava/lang/String;)Z
      87: ifeq          156
      90: aload         8
      92: invokeinterface #264,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      97: checkcast     #265                // class org/apache/activemq/broker/region/Destination
     100: invokeinterface #268,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
     105: invokevirtual #269                // Method org/apache/activemq/broker/region/DestinationStatistics.getMessages:()Lorg/apache/activemq/management/CountStatisticImpl;
     108: invokevirtual #270                // Method org/apache/activemq/management/CountStatisticImpl.getCount:()J
     111: lstore        4
     113: lload_2
     114: lload         4
     116: ladd
     117: lstore_2
     118: lload         4
     120: lconst_0
     121: lcmp
     122: ifle          156
     125: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     128: ldc_w         #271                // String Queue has pending message: {} queueSize is: {}
     131: aload         8
     133: invokeinterface #264,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     138: checkcast     #265                // class org/apache/activemq/broker/region/Destination
     141: invokeinterface #266,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getName:()Ljava/lang/String;
     146: lload         4
     148: invokestatic  #272                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     151: invokeinterface #273,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     156: goto          30
     159: lload_2
     160: lconst_0
     161: lcmp
     162: ifne          169
     165: iconst_1
     166: goto          170
     169: iconst_0
     170: ireturn

  public void stopGracefully(java.lang.String, java.lang.String, long, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #118                // Method isUseJmx:()Z
       4: ifeq          233
       7: aload_1
       8: ifnull        21
      11: aload_2
      12: ifnull        21
      15: lload_3
      16: lconst_0
      17: lcmp
      18: ifgt          32
      21: new           #126                // class java/lang/Exception
      24: dup
      25: ldc_w         #274                // String connectorName and queueName cannot be null and timeout should be >0 for stopGracefully.
      28: invokespecial #275                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload         5
      34: lconst_0
      35: lcmp
      36: ifgt          44
      39: ldc2_w        #276                // long 30l
      42: lstore        5
      44: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      47: ldc_w         #278                // String Stop gracefully with connectorName: {} queueName: {} timeout: {} pollInterval: {}
      50: iconst_4
      51: anewarray     #66                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_1
      57: aastore
      58: dup
      59: iconst_1
      60: aload_2
      61: aastore
      62: dup
      63: iconst_2
      64: lload_3
      65: invokestatic  #272                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      68: aastore
      69: dup
      70: iconst_3
      71: lload         5
      73: invokestatic  #272                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      76: aastore
      77: invokeinterface #198,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      82: iconst_0
      83: istore        8
      85: iload         8
      87: aload_0
      88: getfield      #21                 // Field transportConnectors:Ljava/util/List;
      91: invokeinterface #279,  1          // InterfaceMethod java/util/List.size:()I
      96: if_icmpge     151
      99: aload_0
     100: getfield      #21                 // Field transportConnectors:Ljava/util/List;
     103: iload         8
     105: invokeinterface #280,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     110: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
     113: astore        7
     115: aload         7
     117: ifnull        145
     120: aload         7
     122: invokevirtual #281                // Method org/apache/activemq/broker/TransportConnector.getName:()Ljava/lang/String;
     125: ifnull        145
     128: aload         7
     130: invokevirtual #281                // Method org/apache/activemq/broker/TransportConnector.getName:()Ljava/lang/String;
     133: aload_1
     134: invokevirtual #267                // Method java/lang/String.matches:(Ljava/lang/String;)Z
     137: ifeq          145
     140: aload         7
     142: invokevirtual #282                // Method org/apache/activemq/broker/TransportConnector.stop:()V
     145: iinc          8, 1
     148: goto          85
     151: invokestatic  #283                // Method java/lang/System.currentTimeMillis:()J
     154: lstore        8
     156: invokestatic  #283                // Method java/lang/System.currentTimeMillis:()J
     159: lload         8
     161: lsub
     162: lload_3
     163: ldc2_w        #284                // long 1000l
     166: lmul
     167: lcmp
     168: ifge          198
     171: aload_0
     172: aload_2
     173: invokevirtual #286                // Method checkQueueSize:(Ljava/lang/String;)Z
     176: ifeq          186
     179: aload_0
     180: invokevirtual #125                // Method stop:()V
     183: goto          198
     186: lload         5
     188: ldc2_w        #284                // long 1000l
     191: lmul
     192: invokestatic  #287                // Method java/lang/Thread.sleep:(J)V
     195: goto          156
     198: aload_0
     199: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
     202: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     205: ifeq          222
     208: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     211: ldc_w         #288                // String Successfully stop the broker.
     214: invokeinterface #216,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     219: goto          233
     222: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     225: ldc_w         #289                // String There is still pending message on the queue. Please check and stop the broker manually.
     228: invokeinterface #216,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     233: return

  public void waitUntilStopped();
    Code:
       0: aload_0
       1: invokevirtual #290                // Method isStarted:()Z
       4: ifeq          31
       7: aload_0
       8: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifne          31
      17: aload_0
      18: getfield      #41                 // Field stoppedLatch:Ljava/util/concurrent/CountDownLatch;
      21: invokevirtual #291                // Method java/util/concurrent/CountDownLatch.await:()V
      24: goto          0
      27: astore_1
      28: goto          0
      31: return
    Exception table:
       from    to  target type
          17    24    27   Class java/lang/InterruptedException

  public boolean isStopped();
    Code:
       0: aload_0
       1: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean waitUntilStarted();
    Code:
       0: aload_0
       1: ldc2_w        #14                 // long 600000l
       4: invokevirtual #293                // Method waitUntilStarted:(J)Z
       7: ireturn

  public boolean waitUntilStarted(long);
    Code:
       0: aload_0
       1: invokevirtual #290                // Method isStarted:()Z
       4: istore_3
       5: lconst_0
       6: lload_1
       7: invokestatic  #283                // Method java/lang/System.currentTimeMillis:()J
      10: ladd
      11: invokestatic  #294                // Method java/lang/Math.max:(JJ)J
      14: lstore        4
      16: aload_0
      17: invokevirtual #290                // Method isStarted:()Z
      20: ifne          77
      23: aload_0
      24: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      30: ifne          77
      33: iload_3
      34: ifne          77
      37: lload         4
      39: invokestatic  #283                // Method java/lang/System.currentTimeMillis:()J
      42: lcmp
      43: ifle          77
      46: aload_0
      47: getfield      #6                  // Field startException:Ljava/lang/Throwable;
      50: ifnull        55
      53: iload_3
      54: ireturn
      55: aload_0
      56: getfield      #42                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
      59: ldc2_w        #295                // long 100l
      62: getstatic     #297                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      65: invokevirtual #298                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      68: istore_3
      69: goto          16
      72: astore        6
      74: goto          16
      77: iload_3
      78: ireturn
    Exception table:
       from    to  target type
          46    54    72   Class java/lang/InterruptedException
          55    69    72   Class java/lang/InterruptedException

  public org.apache.activemq.broker.Broker getBroker() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #299                // Method createBroker:()Lorg/apache/activemq/broker/Broker;
      12: putfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
      15: aload_0
      16: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
      19: areturn

  public org.apache.activemq.broker.jmx.BrokerView getAdminView() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #208                // Field adminView:Lorg/apache/activemq/broker/jmx/BrokerView;
       4: ifnonnull     12
       7: aload_0
       8: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
      11: pop
      12: aload_0
      13: getfield      #208                // Field adminView:Lorg/apache/activemq/broker/jmx/BrokerView;
      16: areturn

  public void setAdminView(org.apache.activemq.broker.jmx.BrokerView);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #208                // Field adminView:Lorg/apache/activemq/broker/jmx/BrokerView;
       5: return

  public java.lang.String getBrokerName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field brokerName:Ljava/lang/String;
       4: areturn

  public void setBrokerName(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #300                // class java/lang/NullPointerException
       7: dup
       8: ldc_w         #301                // String The broker name cannot be null
      11: invokespecial #302                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_1
      16: ldc_w         #303                // String [^a-zA-Z0-9\\.\\_\\-\\:]
      19: ldc_w         #304                // String _
      22: invokevirtual #305                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      25: astore_2
      26: aload_2
      27: aload_1
      28: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifne          47
      34: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      37: ldc_w         #307                // String Broker Name: {} contained illegal characters - replaced with {}
      40: aload_1
      41: aload_2
      42: invokeinterface #172,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      47: aload_0
      48: aload_2
      49: invokevirtual #308                // Method java/lang/String.trim:()Ljava/lang/String;
      52: putfield      #18                 // Field brokerName:Ljava/lang/String;
      55: return

  public org.apache.activemq.store.PersistenceAdapterFactory getPersistenceFactory();
    Code:
       0: aload_0
       1: getfield      #309                // Field persistenceFactory:Lorg/apache/activemq/store/PersistenceAdapterFactory;
       4: areturn

  public java.io.File getDataDirectoryFile();
    Code:
       0: aload_0
       1: getfield      #310                // Field dataDirectoryFile:Ljava/io/File;
       4: ifnonnull     21
       7: aload_0
       8: new           #311                // class java/io/File
      11: dup
      12: invokestatic  #312                // Method org/apache/activemq/util/IOHelper.getDefaultDataDirectory:()Ljava/lang/String;
      15: invokespecial #313                // Method java/io/File."<init>":(Ljava/lang/String;)V
      18: putfield      #310                // Field dataDirectoryFile:Ljava/io/File;
      21: aload_0
      22: getfield      #310                // Field dataDirectoryFile:Ljava/io/File;
      25: areturn

  public java.io.File getBrokerDataDirectory();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
       4: astore_1
       5: new           #311                // class java/io/File
       8: dup
       9: aload_0
      10: invokevirtual #314                // Method getDataDirectoryFile:()Ljava/io/File;
      13: aload_1
      14: invokespecial #315                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      17: areturn

  public void setDataDirectory(java.lang.String);
    Code:
       0: aload_0
       1: new           #311                // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #313                // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: invokevirtual #316                // Method setDataDirectoryFile:(Ljava/io/File;)V
      12: return

  public void setDataDirectoryFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #310                // Field dataDirectoryFile:Ljava/io/File;
       5: return

  public java.io.File getTmpDataDirectory();
    Code:
       0: aload_0
       1: getfield      #317                // Field tmpDataDirectory:Ljava/io/File;
       4: ifnonnull     25
       7: aload_0
       8: new           #311                // class java/io/File
      11: dup
      12: aload_0
      13: invokevirtual #318                // Method getBrokerDataDirectory:()Ljava/io/File;
      16: ldc_w         #319                // String tmp_storage
      19: invokespecial #315                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      22: putfield      #317                // Field tmpDataDirectory:Ljava/io/File;
      25: aload_0
      26: getfield      #317                // Field tmpDataDirectory:Ljava/io/File;
      29: areturn

  public void setTmpDataDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #317                // Field tmpDataDirectory:Ljava/io/File;
       5: return

  public void setPersistenceFactory(org.apache.activemq.store.PersistenceAdapterFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #309                // Field persistenceFactory:Lorg/apache/activemq/store/PersistenceAdapterFactory;
       5: return

  public void setDestinationFactory(org.apache.activemq.broker.region.DestinationFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
       5: return

  public boolean isPersistent();
    Code:
       0: aload_0
       1: getfield      #11                 // Field persistent:Z
       4: ireturn

  public void setPersistent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field persistent:Z
       5: return

  public boolean isPopulateJMSXUserID();
    Code:
       0: aload_0
       1: getfield      #320                // Field populateJMSXUserID:Z
       4: ireturn

  public void setPopulateJMSXUserID(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #320                // Field populateJMSXUserID:Z
       5: return

  public org.apache.activemq.usage.SystemUsage getSystemUsage();
    Code:
       0: aload_0
       1: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnonnull     104
       7: aload_0
       8: new           #322                // class org/apache/activemq/usage/SystemUsage
      11: dup
      12: ldc_w         #323                // String Main
      15: aload_0
      16: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      19: aload_0
      20: invokevirtual #324                // Method getTempDataStore:()Lorg/apache/activemq/store/PListStore;
      23: aload_0
      24: invokevirtual #325                // Method getJobSchedulerStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      27: invokespecial #326                // Method org/apache/activemq/usage/SystemUsage."<init>":(Ljava/lang/String;Lorg/apache/activemq/store/PersistenceAdapter;Lorg/apache/activemq/store/PListStore;Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;)V
      30: putfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      33: aload_0
      34: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      37: aload_0
      38: invokevirtual #327                // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      41: invokevirtual #328                // Method org/apache/activemq/usage/SystemUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      44: aload_0
      45: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      48: invokevirtual #329                // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      51: ldc2_w        #330                // long 1073741824l
      54: invokevirtual #332                // Method org/apache/activemq/usage/MemoryUsage.setLimit:(J)V
      57: aload_0
      58: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      61: invokevirtual #333                // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
      64: ldc2_w        #334                // long 53687091200l
      67: invokevirtual #336                // Method org/apache/activemq/usage/TempUsage.setLimit:(J)V
      70: aload_0
      71: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      74: invokevirtual #337                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
      77: ldc2_w        #338                // long 107374182400l
      80: invokevirtual #340                // Method org/apache/activemq/usage/StoreUsage.setLimit:(J)V
      83: aload_0
      84: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      87: invokevirtual #341                // Method org/apache/activemq/usage/SystemUsage.getJobSchedulerUsage:()Lorg/apache/activemq/usage/JobSchedulerUsage;
      90: ldc2_w        #334                // long 53687091200l
      93: invokevirtual #342                // Method org/apache/activemq/usage/JobSchedulerUsage.setLimit:(J)V
      96: aload_0
      97: aload_0
      98: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     101: invokevirtual #343                // Method addService:(Lorg/apache/activemq/Service;)V
     104: aload_0
     105: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
     108: areturn
     109: astore_1
     110: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     113: ldc_w         #345                // String Cannot create SystemUsage
     116: aload_1
     117: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     122: new           #146                // class java/lang/RuntimeException
     125: dup
     126: new           #72                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc_w         #346                // String Fatally failed to create SystemUsage
     136: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload_1
     140: invokevirtual #347                // Method java/io/IOException.getMessage:()Ljava/lang/String;
     143: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: aload_1
     150: invokespecial #348                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     153: athrow
    Exception table:
       from    to  target type
           0   108   109   Class java/io/IOException

  public void setSystemUsage(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnull        15
       7: aload_0
       8: aload_0
       9: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      12: invokevirtual #349                // Method removeService:(Lorg/apache/activemq/Service;)V
      15: aload_0
      16: aload_1
      17: putfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      20: aload_0
      21: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      24: invokevirtual #350                // Method org/apache/activemq/usage/SystemUsage.getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      27: ifnonnull     41
      30: aload_0
      31: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      34: aload_0
      35: invokevirtual #327                // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      38: invokevirtual #328                // Method org/apache/activemq/usage/SystemUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      41: aload_0
      42: aload_0
      43: getfield      #321                // Field systemUsage:Lorg/apache/activemq/usage/SystemUsage;
      46: invokevirtual #343                // Method addService:(Lorg/apache/activemq/Service;)V
      49: return

  public org.apache.activemq.usage.SystemUsage getConsumerSystemUsage() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnonnull     72
       7: aload_0
       8: getfield      #352                // Field splitSystemUsageForProducersConsumers:Z
      11: ifeq          64
      14: aload_0
      15: new           #322                // class org/apache/activemq/usage/SystemUsage
      18: dup
      19: aload_0
      20: invokevirtual #353                // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      23: ldc_w         #354                // String Consumer
      26: invokespecial #355                // Method org/apache/activemq/usage/SystemUsage."<init>":(Lorg/apache/activemq/usage/SystemUsage;Ljava/lang/String;)V
      29: putfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      32: aload_0
      33: getfield      #44                 // Field consumerSystemUsagePortion:I
      36: i2f
      37: ldc_w         #356                // float 100.0f
      40: fdiv
      41: fstore_1
      42: aload_0
      43: getfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      46: invokevirtual #329                // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      49: fload_1
      50: invokevirtual #357                // Method org/apache/activemq/usage/MemoryUsage.setUsagePortion:(F)V
      53: aload_0
      54: aload_0
      55: getfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      58: invokevirtual #343                // Method addService:(Lorg/apache/activemq/Service;)V
      61: goto          72
      64: aload_0
      65: aload_0
      66: invokevirtual #353                // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      69: putfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      72: aload_0
      73: getfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      76: areturn

  public void setConsumerSystemUsage(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: getfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnull        15
       7: aload_0
       8: aload_0
       9: getfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      12: invokevirtual #349                // Method removeService:(Lorg/apache/activemq/Service;)V
      15: aload_0
      16: aload_1
      17: putfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      20: aload_0
      21: aload_0
      22: getfield      #351                // Field consumerSystemUsaage:Lorg/apache/activemq/usage/SystemUsage;
      25: invokevirtual #343                // Method addService:(Lorg/apache/activemq/Service;)V
      28: return

  public org.apache.activemq.usage.SystemUsage getProducerSystemUsage() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnonnull     72
       7: aload_0
       8: getfield      #352                // Field splitSystemUsageForProducersConsumers:Z
      11: ifeq          64
      14: aload_0
      15: new           #322                // class org/apache/activemq/usage/SystemUsage
      18: dup
      19: aload_0
      20: invokevirtual #353                // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      23: ldc_w         #359                // String Producer
      26: invokespecial #355                // Method org/apache/activemq/usage/SystemUsage."<init>":(Lorg/apache/activemq/usage/SystemUsage;Ljava/lang/String;)V
      29: putfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      32: aload_0
      33: getfield      #43                 // Field producerSystemUsagePortion:I
      36: i2f
      37: ldc_w         #356                // float 100.0f
      40: fdiv
      41: fstore_1
      42: aload_0
      43: getfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      46: invokevirtual #329                // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      49: fload_1
      50: invokevirtual #357                // Method org/apache/activemq/usage/MemoryUsage.setUsagePortion:(F)V
      53: aload_0
      54: aload_0
      55: getfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      58: invokevirtual #343                // Method addService:(Lorg/apache/activemq/Service;)V
      61: goto          72
      64: aload_0
      65: aload_0
      66: invokevirtual #353                // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      69: putfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      72: aload_0
      73: getfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      76: areturn

  public void setProducerSystemUsage(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: getfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnull        15
       7: aload_0
       8: aload_0
       9: getfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      12: invokevirtual #349                // Method removeService:(Lorg/apache/activemq/Service;)V
      15: aload_0
      16: aload_1
      17: putfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      20: aload_0
      21: aload_0
      22: getfield      #358                // Field producerSystemUsage:Lorg/apache/activemq/usage/SystemUsage;
      25: invokevirtual #343                // Method addService:(Lorg/apache/activemq/Service;)V
      28: return

  public org.apache.activemq.store.PersistenceAdapter getPersistenceAdapter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
       4: ifnonnull     35
       7: aload_0
       8: aload_0
       9: invokevirtual #360                // Method createPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      12: putfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      15: aload_0
      16: aload_0
      17: getfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      20: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
      23: aload_0
      24: aload_0
      25: aload_0
      26: getfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      29: invokevirtual #362                // Method registerPersistenceAdapterMBean:(Lorg/apache/activemq/store/PersistenceAdapter;)Lorg/apache/activemq/store/PersistenceAdapter;
      32: putfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      35: aload_0
      36: getfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      39: areturn

  public void setPersistenceAdapter(org.apache.activemq.store.PersistenceAdapter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #363                // Method isPersistent:()Z
       4: ifne          27
       7: aload_1
       8: instanceof    #364                // class org/apache/activemq/store/memory/MemoryPersistenceAdapter
      11: ifne          27
      14: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      17: ldc_w         #365                // String persistent=\"false\", ignoring configured persistenceAdapter: {}
      20: aload_1
      21: invokeinterface #366,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      26: return
      27: aload_0
      28: aload_1
      29: putfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      32: aload_0
      33: aload_0
      34: getfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      37: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
      40: aload_0
      41: aload_0
      42: aload_1
      43: invokevirtual #362                // Method registerPersistenceAdapterMBean:(Lorg/apache/activemq/store/PersistenceAdapter;)Lorg/apache/activemq/store/PersistenceAdapter;
      46: putfield      #241                // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      49: return

  public org.apache.activemq.thread.TaskRunnerFactory getTaskRunnerFactory();
    Code:
       0: aload_0
       1: getfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
       4: ifnonnull     59
       7: aload_0
       8: new           #367                // class org/apache/activemq/thread/TaskRunnerFactory
      11: dup
      12: new           #72                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc_w         #368                // String ActiveMQ BrokerService[
      22: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      29: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc_w         #369                // String ] Task
      35: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: aload_0
      42: invokevirtual #370                // Method getTaskRunnerPriority:()I
      45: iconst_1
      46: sipush        1000
      49: aload_0
      50: invokevirtual #371                // Method isDedicatedTaskRunner:()Z
      53: invokespecial #372                // Method org/apache/activemq/thread/TaskRunnerFactory."<init>":(Ljava/lang/String;IZIZ)V
      56: putfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      59: aload_0
      60: getfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      63: areturn

  public void setTaskRunnerFactory(org.apache.activemq.thread.TaskRunnerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
       5: return

  public org.apache.activemq.thread.TaskRunnerFactory getPersistenceTaskRunnerFactory();
    Code:
       0: aload_0
       1: getfield      #243                // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
       4: ifnonnull     33
       7: aload_0
       8: new           #367                // class org/apache/activemq/thread/TaskRunnerFactory
      11: dup
      12: ldc_w         #373                // String Persistence Adaptor Task
      15: aload_0
      16: getfield      #38                 // Field persistenceThreadPriority:I
      19: iconst_1
      20: sipush        1000
      23: aload_0
      24: invokevirtual #371                // Method isDedicatedTaskRunner:()Z
      27: invokespecial #372                // Method org/apache/activemq/thread/TaskRunnerFactory."<init>":(Ljava/lang/String;IZIZ)V
      30: putfield      #374                // Field persistenceTaskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      33: aload_0
      34: getfield      #374                // Field persistenceTaskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      37: areturn

  public void setPersistenceTaskRunnerFactory(org.apache.activemq.thread.TaskRunnerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #374                // Field persistenceTaskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
       5: return

  public boolean isUseJmx();
    Code:
       0: aload_0
       1: getfield      #9                  // Field useJmx:Z
       4: ireturn

  public boolean isEnableStatistics();
    Code:
       0: aload_0
       1: getfield      #10                 // Field enableStatistics:Z
       4: ireturn

  public void setEnableStatistics(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field enableStatistics:Z
       5: return

  public void setUseJmx(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field useJmx:Z
       5: return

  public javax.management.ObjectName getBrokerObjectName() throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: getfield      #375                // Field brokerObjectName:Ljavax/management/ObjectName;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #376                // Method createBrokerObjectName:()Ljavax/management/ObjectName;
      12: putfield      #375                // Field brokerObjectName:Ljavax/management/ObjectName;
      15: aload_0
      16: getfield      #375                // Field brokerObjectName:Ljavax/management/ObjectName;
      19: areturn

  public void setBrokerObjectName(javax.management.ObjectName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #375                // Field brokerObjectName:Ljavax/management/ObjectName;
       5: return

  public org.apache.activemq.broker.jmx.ManagementContext getManagementContext();
    Code:
       0: aload_0
       1: getfield      #203                // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
       4: ifnonnull     18
       7: aload_0
       8: new           #377                // class org/apache/activemq/broker/jmx/ManagementContext
      11: dup
      12: invokespecial #378                // Method org/apache/activemq/broker/jmx/ManagementContext."<init>":()V
      15: putfield      #203                // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
      18: aload_0
      19: getfield      #203                // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
      22: areturn

  public void setManagementContext(org.apache.activemq.broker.jmx.ManagementContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #203                // Field managementContext:Lorg/apache/activemq/broker/jmx/ManagementContext;
       5: return

  public org.apache.activemq.network.NetworkConnector getNetworkConnectorByName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field networkConnectors:Ljava/util/List;
       4: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #163                // class org/apache/activemq/network/NetworkConnector
      28: astore_3
      29: aload_3
      30: invokevirtual #379                // Method org/apache/activemq/network/NetworkConnector.getName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: aconst_null
      46: areturn

  public java.lang.String[] getNetworkConnectorURIs();
    Code:
       0: aload_0
       1: getfield      #380                // Field networkConnectorURIs:[Ljava/lang/String;
       4: areturn

  public void setNetworkConnectorURIs(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #380                // Field networkConnectorURIs:[Ljava/lang/String;
       5: return

  public org.apache.activemq.broker.TransportConnector getConnectorByName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field transportConnectors:Ljava/util/List;
       4: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      28: astore_3
      29: aload_3
      30: invokevirtual #281                // Method org/apache/activemq/broker/TransportConnector.getName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: aconst_null
      46: areturn

  public java.util.Map<java.lang.String, java.lang.String> getTransportConnectorURIsAsMap();
    Code:
       0: new           #104                // class java/util/HashMap
       3: dup
       4: invokespecial #381                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #21                 // Field transportConnectors:Ljava/util/List;
      12: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          101
      27: aload_2
      28: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      36: astore_3
      37: aload_3
      38: invokevirtual #382                // Method org/apache/activemq/broker/TransportConnector.getConnectUri:()Ljava/net/URI;
      41: astore        4
      43: aload         4
      45: ifnull        80
      48: aload         4
      50: invokevirtual #383                // Method java/net/URI.getScheme:()Ljava/lang/String;
      53: astore        5
      55: aload         5
      57: ifnull        80
      60: aload_1
      61: aload         5
      63: getstatic     #384                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      66: invokevirtual #385                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      69: aload         4
      71: invokevirtual #386                // Method java/net/URI.toString:()Ljava/lang/String;
      74: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          98
      83: astore        4
      85: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      88: ldc_w         #387                // String Failed to read URI to build transportURIsAsMap
      91: aload         4
      93: invokeinterface #388,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: goto          18
     101: aload_1
     102: areturn
    Exception table:
       from    to  target type
          37    80    83   Class java/lang/Exception

  public org.apache.activemq.broker.ProducerBrokerExchange getProducerBrokerExchange(org.apache.activemq.command.ProducerInfo);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #21                 // Field transportConnectors:Ljava/util/List;
       6: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          83
      21: aload_3
      22: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      30: astore        4
      32: aload         4
      34: invokevirtual #389                // Method org/apache/activemq/broker/TransportConnector.getConnections:()Ljava/util/concurrent/CopyOnWriteArrayList;
      37: invokevirtual #390                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      40: astore        5
      42: aload         5
      44: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          80
      52: aload         5
      54: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #391                // class org/apache/activemq/broker/TransportConnection
      62: astore        6
      64: aload         6
      66: aload_1
      67: invokevirtual #392                // Method org/apache/activemq/broker/TransportConnection.getProducerBrokerExchangeIfExists:(Lorg/apache/activemq/command/ProducerInfo;)Lorg/apache/activemq/broker/ProducerBrokerExchange;
      70: astore_2
      71: aload_2
      72: ifnull        77
      75: aload_2
      76: areturn
      77: goto          42
      80: goto          12
      83: aload_2
      84: areturn

  public java.lang.String[] getTransportConnectorURIs();
    Code:
       0: aload_0
       1: getfield      #393                // Field transportConnectorURIs:[Ljava/lang/String;
       4: areturn

  public void setTransportConnectorURIs(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #393                // Field transportConnectorURIs:[Ljava/lang/String;
       5: return

  public org.apache.activemq.network.jms.JmsConnector[] getJmsBridgeConnectors();
    Code:
       0: aload_0
       1: getfield      #394                // Field jmsBridgeConnectors:[Lorg/apache/activemq/network/jms/JmsConnector;
       4: areturn

  public void setJmsBridgeConnectors(org.apache.activemq.network.jms.JmsConnector[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #394                // Field jmsBridgeConnectors:[Lorg/apache/activemq/network/jms/JmsConnector;
       5: return

  public org.apache.activemq.Service[] getServices();
    Code:
       0: aload_0
       1: getfield      #27                 // Field services:Ljava/util/List;
       4: iconst_0
       5: anewarray     #232                // class org/apache/activemq/Service
       8: invokeinterface #395,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      13: checkcast     #396                // class "[Lorg/apache/activemq/Service;"
      16: areturn

  public void setServices(org.apache.activemq.Service[]);
    Code:
       0: aload_0
       1: getfield      #27                 // Field services:Ljava/util/List;
       4: invokeinterface #397,  1          // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        40
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_1
      17: arraylength
      18: if_icmpge     40
      21: aload_0
      22: getfield      #27                 // Field services:Ljava/util/List;
      25: aload_1
      26: iload_2
      27: aaload
      28: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: iinc          2, 1
      37: goto          15
      40: return

  public void addService(org.apache.activemq.Service);
    Code:
       0: aload_0
       1: getfield      #27                 // Field services:Ljava/util/List;
       4: aload_1
       5: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeService(org.apache.activemq.Service);
    Code:
       0: aload_0
       1: getfield      #27                 // Field services:Ljava/util/List;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean isUseLoggingForShutdownErrors();
    Code:
       0: aload_0
       1: getfield      #398                // Field useLoggingForShutdownErrors:Z
       4: ireturn

  public void setUseLoggingForShutdownErrors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #398                // Field useLoggingForShutdownErrors:Z
       5: return

  public boolean isUseShutdownHook();
    Code:
       0: aload_0
       1: getfield      #13                 // Field useShutdownHook:Z
       4: ireturn

  public void setUseShutdownHook(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field useShutdownHook:Z
       5: return

  public boolean isAdvisorySupport();
    Code:
       0: aload_0
       1: getfield      #28                 // Field advisorySupport:Z
       4: ireturn

  public void setAdvisorySupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field advisorySupport:Z
       5: return

  public java.util.List<org.apache.activemq.broker.TransportConnector> getTransportConnectors();
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #21                 // Field transportConnectors:Ljava/util/List;
       8: invokespecial #399                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  public void setTransportConnectors(java.util.List<org.apache.activemq.broker.TransportConnector>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #85                 // Method addConnector:(Lorg/apache/activemq/broker/TransportConnector;)Lorg/apache/activemq/broker/TransportConnector;
      31: pop
      32: goto          7
      35: return

  public org.apache.activemq.broker.TransportConnector getTransportConnectorByName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field transportConnectors:Ljava/util/List;
       4: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #281                // Method org/apache/activemq/broker/TransportConnector.getName:()Ljava/lang/String;
      34: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: aconst_null
      46: areturn

  public org.apache.activemq.broker.TransportConnector getTransportConnectorByScheme(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field transportConnectors:Ljava/util/List;
       4: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          48
      19: aload_2
      20: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #400                // Method org/apache/activemq/broker/TransportConnector.getUri:()Ljava/net/URI;
      34: invokevirtual #383                // Method java/net/URI.getScheme:()Ljava/lang/String;
      37: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          45
      43: aload_3
      44: areturn
      45: goto          10
      48: aconst_null
      49: areturn

  public java.util.List<org.apache.activemq.network.NetworkConnector> getNetworkConnectors();
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #22                 // Field networkConnectors:Ljava/util/List;
       8: invokespecial #399                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  public java.util.List<org.apache.activemq.proxy.ProxyConnector> getProxyConnectors();
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #23                 // Field proxyConnectors:Ljava/util/List;
       8: invokespecial #399                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  public void setNetworkConnectors(java.util.List<?>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: aload_3
      25: checkcast     #163                // class org/apache/activemq/network/NetworkConnector
      28: invokevirtual #95                 // Method addNetworkConnector:(Lorg/apache/activemq/network/NetworkConnector;)Lorg/apache/activemq/network/NetworkConnector;
      31: pop
      32: goto          7
      35: return

  public void setProxyConnectors(java.util.List<?>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: aload_3
      25: checkcast     #96                 // class org/apache/activemq/proxy/ProxyConnector
      28: invokevirtual #101                // Method addProxyConnector:(Lorg/apache/activemq/proxy/ProxyConnector;)Lorg/apache/activemq/proxy/ProxyConnector;
      31: pop
      32: goto          7
      35: return

  public org.apache.activemq.broker.region.policy.PolicyMap getDestinationPolicy();
    Code:
       0: aload_0
       1: getfield      #401                // Field destinationPolicy:Lorg/apache/activemq/broker/region/policy/PolicyMap;
       4: areturn

  public void setDestinationPolicy(org.apache.activemq.broker.region.policy.PolicyMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #401                // Field destinationPolicy:Lorg/apache/activemq/broker/region/policy/PolicyMap;
       5: return

  public org.apache.activemq.broker.BrokerPlugin[] getPlugins();
    Code:
       0: aload_0
       1: getfield      #402                // Field plugins:[Lorg/apache/activemq/broker/BrokerPlugin;
       4: areturn

  public void setPlugins(org.apache.activemq.broker.BrokerPlugin[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #402                // Field plugins:[Lorg/apache/activemq/broker/BrokerPlugin;
       5: return

  public org.apache.activemq.security.MessageAuthorizationPolicy getMessageAuthorizationPolicy();
    Code:
       0: aload_0
       1: getfield      #403                // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
       4: areturn

  public void setMessageAuthorizationPolicy(org.apache.activemq.security.MessageAuthorizationPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #403                // Field messageAuthorizationPolicy:Lorg/apache/activemq/security/MessageAuthorizationPolicy;
       5: return

  public void deleteAllMessages() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
       4: invokeinterface #404,  1          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.deleteAllMessages:()V
       9: return

  public boolean isDeleteAllMessagesOnStartup();
    Code:
       0: aload_0
       1: getfield      #185                // Field deleteAllMessagesOnStartup:Z
       4: ireturn

  public void setDeleteAllMessagesOnStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #185                // Field deleteAllMessagesOnStartup:Z
       5: return

  public java.net.URI getVmConnectorURI();
    Code:
       0: aload_0
       1: getfield      #405                // Field vmConnectorURI:Ljava/net/URI;
       4: ifnonnull     70
       7: aload_0
       8: new           #81                 // class java/net/URI
      11: dup
      12: new           #72                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc_w         #406                // String vm://
      22: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      29: ldc_w         #407                // String [^a-zA-Z0-9\\.\\_\\-]
      32: ldc_w         #304                // String _
      35: invokevirtual #305                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      38: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #82                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      47: putfield      #405                // Field vmConnectorURI:Ljava/net/URI;
      50: goto          70
      53: astore_1
      54: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      57: ldc_w         #409                // String Badly formed URI from {}
      60: aload_0
      61: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      64: aload_1
      65: invokeinterface #172,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      70: aload_0
      71: getfield      #405                // Field vmConnectorURI:Ljava/net/URI;
      74: areturn
    Exception table:
       from    to  target type
           7    50    53   Class java/net/URISyntaxException

  public void setVmConnectorURI(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #405                // Field vmConnectorURI:Ljava/net/URI;
       5: return

  public java.lang.String getDefaultSocketURIString();
    Code:
       0: aload_0
       1: getfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          118
      10: aload_0
      11: getfield      #410                // Field defaultSocketURIString:Ljava/lang/String;
      14: ifnonnull     113
      17: aload_0
      18: getfield      #21                 // Field transportConnectors:Ljava/util/List;
      21: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_1
      27: aload_1
      28: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          113
      36: aload_1
      37: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      45: astore_2
      46: aconst_null
      47: astore_3
      48: aload_2
      49: invokevirtual #411                // Method org/apache/activemq/broker/TransportConnector.getPublishableConnectString:()Ljava/lang/String;
      52: astore_3
      53: goto          72
      56: astore        4
      58: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      61: ldc_w         #412                // String Failed to get the ConnectURI for {}
      64: aload_2
      65: aload         4
      67: invokeinterface #413,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      72: aload_3
      73: ifnull        110
      76: aload_2
      77: invokevirtual #414                // Method org/apache/activemq/broker/TransportConnector.isUpdateClusterClients:()Z
      80: ifne          90
      83: aload_2
      84: invokevirtual #415                // Method org/apache/activemq/broker/TransportConnector.isRebalanceClusterClients:()Z
      87: ifeq          98
      90: aload_0
      91: aload_3
      92: putfield      #410                // Field defaultSocketURIString:Ljava/lang/String;
      95: goto          113
      98: aload_0
      99: getfield      #410                // Field defaultSocketURIString:Ljava/lang/String;
     102: ifnonnull     110
     105: aload_0
     106: aload_3
     107: putfield      #410                // Field defaultSocketURIString:Ljava/lang/String;
     110: goto          27
     113: aload_0
     114: getfield      #410                // Field defaultSocketURIString:Ljava/lang/String;
     117: areturn
     118: aconst_null
     119: areturn
    Exception table:
       from    to  target type
          48    53    56   Class java/lang/Exception

  public boolean isShutdownOnMasterFailure();
    Code:
       0: aload_0
       1: getfield      #122                // Field shutdownOnMasterFailure:Z
       4: ireturn

  public void setShutdownOnMasterFailure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #122                // Field shutdownOnMasterFailure:Z
       5: return

  public boolean isKeepDurableSubsActive();
    Code:
       0: aload_0
       1: getfield      #34                 // Field keepDurableSubsActive:Z
       4: ireturn

  public void setKeepDurableSubsActive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field keepDurableSubsActive:Z
       5: return

  public boolean isUseVirtualTopics();
    Code:
       0: aload_0
       1: getfield      #35                 // Field useVirtualTopics:Z
       4: ireturn

  public void setUseVirtualTopics(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field useVirtualTopics:Z
       5: return

  public org.apache.activemq.broker.region.DestinationInterceptor[] getDestinationInterceptors();
    Code:
       0: aload_0
       1: getfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
       4: areturn

  public boolean isUseMirroredQueues();
    Code:
       0: aload_0
       1: getfield      #36                 // Field useMirroredQueues:Z
       4: ireturn

  public void setUseMirroredQueues(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field useMirroredQueues:Z
       5: return

  public void setDestinationInterceptors(org.apache.activemq.broker.region.DestinationInterceptor[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
       5: return

  public org.apache.activemq.command.ActiveMQDestination[] getDestinations();
    Code:
       0: aload_0
       1: getfield      #416                // Field destinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setDestinations(org.apache.activemq.command.ActiveMQDestination[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #416                // Field destinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public synchronized org.apache.activemq.store.PListStore getTempDataStore();
    Code:
       0: aload_0
       1: getfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
       4: ifnonnull     234
       7: aload_0
       8: invokevirtual #363                // Method isPersistent:()Z
      11: ifne          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      20: astore_1
      21: aload_1
      22: ifnull        37
      25: aload_1
      26: instanceof    #417                // class org/apache/activemq/store/PListStore
      29: ifeq          37
      32: aload_1
      33: checkcast     #417                // class org/apache/activemq/store/PListStore
      36: areturn
      37: goto          50
      40: astore_1
      41: new           #146                // class java/lang/RuntimeException
      44: dup
      45: aload_1
      46: invokespecial #147                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      49: athrow
      50: iconst_1
      51: istore_1
      52: iconst_1
      53: istore_2
      54: aload_0
      55: invokevirtual #418                // Method getTmpDataDirectory:()Ljava/io/File;
      58: astore_3
      59: aload_3
      60: invokevirtual #419                // Method java/io/File.exists:()Z
      63: ifeq          132
      66: aload_3
      67: invokevirtual #420                // Method java/io/File.isDirectory:()Z
      70: ifeq          132
      73: aload_3
      74: invokevirtual #421                // Method java/io/File.listFiles:()[Ljava/io/File;
      77: astore        4
      79: aload         4
      81: ifnull        132
      84: aload         4
      86: arraylength
      87: ifle          132
      90: iconst_0
      91: istore_2
      92: iconst_0
      93: istore        5
      95: iload         5
      97: aload         4
      99: arraylength
     100: if_icmpge     132
     103: aload         4
     105: iload         5
     107: aaload
     108: astore        6
     110: aload         6
     112: invokevirtual #420                // Method java/io/File.isDirectory:()Z
     115: ifne          126
     118: iload_1
     119: aload         6
     121: invokevirtual #422                // Method java/io/File.delete:()Z
     124: iand
     125: istore_1
     126: iinc          5, 1
     129: goto          95
     132: iload_2
     133: ifne          164
     136: iload_1
     137: ifeq          146
     140: ldc_w         #423                // String Successfully deleted
     143: goto          149
     146: ldc_w         #424                // String Failed to delete
     149: astore        4
     151: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     154: ldc_w         #425                // String {} temporary storage
     157: aload         4
     159: invokeinterface #184,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     164: ldc_w         #426                // String org.apache.activemq.store.kahadb.plist.PListStoreImpl
     167: astore        4
     169: aload_0
     170: aload_0
     171: invokevirtual #427                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     174: invokevirtual #428                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     177: aload         4
     179: invokevirtual #429                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     182: invokevirtual #430                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     185: checkcast     #417                // class org/apache/activemq/store/PListStore
     188: putfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     191: aload_0
     192: getfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     195: aload_0
     196: invokevirtual #418                // Method getTmpDataDirectory:()Ljava/io/File;
     199: invokeinterface #431,  2          // InterfaceMethod org/apache/activemq/store/PListStore.setDirectory:(Ljava/io/File;)V
     204: aload_0
     205: aload_0
     206: getfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     209: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
     212: aload_0
     213: getfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     216: invokeinterface #432,  1          // InterfaceMethod org/apache/activemq/store/PListStore.start:()V
     221: goto          234
     224: astore_3
     225: new           #146                // class java/lang/RuntimeException
     228: dup
     229: aload_3
     230: invokespecial #147                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     233: athrow
     234: aload_0
     235: getfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
     238: areturn
    Exception table:
       from    to  target type
          16    36    40   Class java/io/IOException
          54   221   224   Class java/lang/Exception

  public void setTempDataStore(org.apache.activemq.store.PListStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #239                // Field tempDataStore:Lorg/apache/activemq/store/PListStore;
       5: aload_0
       6: aload_1
       7: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
      10: aload_1
      11: invokeinterface #432,  1          // InterfaceMethod org/apache/activemq/store/PListStore.start:()V
      16: goto          64
      19: astore_2
      20: new           #146                // class java/lang/RuntimeException
      23: dup
      24: new           #72                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc_w         #433                // String Failed to start provided temp data store:
      34: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: aload_2
      45: invokespecial #348                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: astore_3
      49: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      52: aload_3
      53: invokevirtual #435                // Method java/lang/RuntimeException.getLocalizedMessage:()Ljava/lang/String;
      56: aload_2
      57: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: aload_3
      63: athrow
      64: return
    Exception table:
       from    to  target type
          10    16    19   Class java/lang/Exception

  public int getPersistenceThreadPriority();
    Code:
       0: aload_0
       1: getfield      #38                 // Field persistenceThreadPriority:I
       4: ireturn

  public void setPersistenceThreadPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field persistenceThreadPriority:I
       5: return

  public boolean isUseLocalHostBrokerName();
    Code:
       0: aload_0
       1: getfield      #436                // Field useLocalHostBrokerName:Z
       4: ireturn

  public void setUseLocalHostBrokerName(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #436                // Field useLocalHostBrokerName:Z
       5: iload_1
       6: ifeq          26
       9: aload_0
      10: getfield      #31                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      13: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      16: ifne          26
      19: aload_0
      20: getfield      #18                 // Field brokerName:Ljava/lang/String;
      23: ifnull        35
      26: aload_0
      27: getfield      #18                 // Field brokerName:Ljava/lang/String;
      30: ldc           #17                 // String localhost
      32: if_acmpne     42
      35: aload_0
      36: getstatic     #437                // Field LOCAL_HOST_NAME:Ljava/lang/String;
      39: putfield      #18                 // Field brokerName:Ljava/lang/String;
      42: return

  public boolean isSupportFailOver();
    Code:
       0: aload_0
       1: getfield      #438                // Field supportFailOver:Z
       4: ireturn

  public void setSupportFailOver(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #438                // Field supportFailOver:Z
       5: return

  public org.apache.activemq.broker.region.Destination getDestination(org.apache.activemq.command.ActiveMQDestination) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
       4: aload_0
       5: invokevirtual #439                // Method getAdminConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       8: aload_1
       9: iconst_0
      10: invokeinterface #440,  4          // InterfaceMethod org/apache/activemq/broker/Broker.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      15: areturn

  public void removeDestination(org.apache.activemq.command.ActiveMQDestination) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
       4: aload_0
       5: invokevirtual #439                // Method getAdminConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       8: aload_1
       9: lconst_0
      10: invokeinterface #441,  5          // InterfaceMethod org/apache/activemq/broker/Broker.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
      15: return

  public int getProducerSystemUsagePortion();
    Code:
       0: aload_0
       1: getfield      #43                 // Field producerSystemUsagePortion:I
       4: ireturn

  public void setProducerSystemUsagePortion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field producerSystemUsagePortion:I
       5: return

  public int getConsumerSystemUsagePortion();
    Code:
       0: aload_0
       1: getfield      #44                 // Field consumerSystemUsagePortion:I
       4: ireturn

  public void setConsumerSystemUsagePortion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field consumerSystemUsagePortion:I
       5: return

  public boolean isSplitSystemUsageForProducersConsumers();
    Code:
       0: aload_0
       1: getfield      #352                // Field splitSystemUsageForProducersConsumers:Z
       4: ireturn

  public void setSplitSystemUsageForProducersConsumers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #352                // Field splitSystemUsageForProducersConsumers:Z
       5: return

  public boolean isMonitorConnectionSplits();
    Code:
       0: aload_0
       1: getfield      #45                 // Field monitorConnectionSplits:Z
       4: ireturn

  public void setMonitorConnectionSplits(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field monitorConnectionSplits:Z
       5: return

  public int getTaskRunnerPriority();
    Code:
       0: aload_0
       1: getfield      #46                 // Field taskRunnerPriority:I
       4: ireturn

  public void setTaskRunnerPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field taskRunnerPriority:I
       5: return

  public boolean isDedicatedTaskRunner();
    Code:
       0: aload_0
       1: getfield      #442                // Field dedicatedTaskRunner:Z
       4: ireturn

  public void setDedicatedTaskRunner(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #442                // Field dedicatedTaskRunner:Z
       5: return

  public boolean isCacheTempDestinations();
    Code:
       0: aload_0
       1: getfield      #47                 // Field cacheTempDestinations:Z
       4: ireturn

  public void setCacheTempDestinations(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field cacheTempDestinations:Z
       5: return

  public int getTimeBeforePurgeTempDestinations();
    Code:
       0: aload_0
       1: getfield      #48                 // Field timeBeforePurgeTempDestinations:I
       4: ireturn

  public void setTimeBeforePurgeTempDestinations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field timeBeforePurgeTempDestinations:I
       5: return

  public boolean isUseTempMirroredQueues();
    Code:
       0: aload_0
       1: getfield      #37                 // Field useTempMirroredQueues:Z
       4: ireturn

  public void setUseTempMirroredQueues(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field useTempMirroredQueues:Z
       5: return

  public synchronized org.apache.activemq.broker.scheduler.JobSchedulerStore getJobSchedulerStore();
    Code:
       0: aload_0
       1: invokevirtual #443                // Method isSchedulerSupport:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      13: ifnonnull     158
      16: aload_0
      17: invokevirtual #363                // Method isPersistent:()Z
      20: ifne          25
      23: aconst_null
      24: areturn
      25: aload_0
      26: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      29: astore_1
      30: aload_1
      31: ifnull        62
      34: aload_1
      35: instanceof    #444                // class org/apache/activemq/broker/scheduler/JobSchedulerStore
      38: ifeq          62
      41: aload_0
      42: aload_1
      43: checkcast     #444                // class org/apache/activemq/broker/scheduler/JobSchedulerStore
      46: putfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      49: aload_0
      50: aload_0
      51: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      54: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
      57: aload_0
      58: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      61: areturn
      62: goto          75
      65: astore_1
      66: new           #146                // class java/lang/RuntimeException
      69: dup
      70: aload_1
      71: invokespecial #147                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
      75: ldc_w         #445                // String org.apache.activemq.store.kahadb.scheduler.JobSchedulerStoreImpl
      78: astore_1
      79: aload_0
      80: aload_0
      81: invokevirtual #427                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      84: invokevirtual #428                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      87: aload_1
      88: invokevirtual #429                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      91: invokevirtual #430                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      94: checkcast     #444                // class org/apache/activemq/broker/scheduler/JobSchedulerStore
      97: putfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     100: aload_0
     101: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     104: aload_0
     105: invokevirtual #446                // Method getSchedulerDirectoryFile:()Ljava/io/File;
     108: invokeinterface #447,  2          // InterfaceMethod org/apache/activemq/broker/scheduler/JobSchedulerStore.setDirectory:(Ljava/io/File;)V
     113: aload_0
     114: aload_0
     115: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     118: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
     121: aload_0
     122: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     125: invokeinterface #448,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/JobSchedulerStore.start:()V
     130: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     133: ldc_w         #449                // String JobScheduler using directory: {}
     136: aload_0
     137: invokevirtual #446                // Method getSchedulerDirectoryFile:()Ljava/io/File;
     140: invokeinterface #184,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     145: goto          158
     148: astore_1
     149: new           #146                // class java/lang/RuntimeException
     152: dup
     153: aload_1
     154: invokespecial #147                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     157: athrow
     158: aload_0
     159: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     162: areturn
    Exception table:
       from    to  target type
          25    61    65   Class java/io/IOException
          75   145   148   Class java/lang/Exception

  public void setJobSchedulerStore(org.apache.activemq.broker.scheduler.JobSchedulerStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
       5: aload_0
       6: aload_1
       7: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
      10: aload_1
      11: invokeinterface #448,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/JobSchedulerStore.start:()V
      16: goto          64
      19: astore_2
      20: new           #146                // class java/lang/RuntimeException
      23: dup
      24: new           #72                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc_w         #450                // String Failed to start provided job scheduler store:
      34: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: aload_2
      45: invokespecial #348                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: astore_3
      49: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      52: aload_3
      53: invokevirtual #435                // Method java/lang/RuntimeException.getLocalizedMessage:()Ljava/lang/String;
      56: aload_2
      57: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: aload_3
      63: athrow
      64: return
    Exception table:
       from    to  target type
          10    16    19   Class java/lang/Exception

  protected void processHelperProperties() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #393                // Field transportConnectorURIs:[Ljava/lang/String;
       4: ifnull        37
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #393                // Field transportConnectorURIs:[Ljava/lang/String;
      14: arraylength
      15: if_icmpge     37
      18: aload_0
      19: getfield      #393                // Field transportConnectorURIs:[Ljava/lang/String;
      22: iload_1
      23: aaload
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokevirtual #451                // Method addConnector:(Ljava/lang/String;)Lorg/apache/activemq/broker/TransportConnector;
      30: pop
      31: iinc          1, 1
      34: goto          9
      37: aload_0
      38: getfield      #380                // Field networkConnectorURIs:[Ljava/lang/String;
      41: ifnull        74
      44: iconst_0
      45: istore_1
      46: iload_1
      47: aload_0
      48: getfield      #380                // Field networkConnectorURIs:[Ljava/lang/String;
      51: arraylength
      52: if_icmpge     74
      55: aload_0
      56: getfield      #380                // Field networkConnectorURIs:[Ljava/lang/String;
      59: iload_1
      60: aaload
      61: astore_2
      62: aload_0
      63: aload_2
      64: invokevirtual #452                // Method addNetworkConnector:(Ljava/lang/String;)Lorg/apache/activemq/network/NetworkConnector;
      67: pop
      68: iinc          1, 1
      71: goto          46
      74: aload_0
      75: getfield      #394                // Field jmsBridgeConnectors:[Lorg/apache/activemq/network/jms/JmsConnector;
      78: ifnull        109
      81: iconst_0
      82: istore_1
      83: iload_1
      84: aload_0
      85: getfield      #394                // Field jmsBridgeConnectors:[Lorg/apache/activemq/network/jms/JmsConnector;
      88: arraylength
      89: if_icmpge     109
      92: aload_0
      93: aload_0
      94: getfield      #394                // Field jmsBridgeConnectors:[Lorg/apache/activemq/network/jms/JmsConnector;
      97: iload_1
      98: aaload
      99: invokevirtual #453                // Method addJmsConnector:(Lorg/apache/activemq/network/jms/JmsConnector;)Lorg/apache/activemq/network/jms/JmsConnector;
     102: pop
     103: iinc          1, 1
     106: goto          83
     109: return

  protected void checkSystemUsageLimits() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #353                // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
       4: astore_1
       5: aload_1
       6: invokevirtual #329                // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
       9: invokevirtual #454                // Method org/apache/activemq/usage/MemoryUsage.getLimit:()J
      12: lstore_2
      13: invokestatic  #455                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      16: invokevirtual #456                // Method java/lang/Runtime.maxMemory:()J
      19: lstore        4
      21: lload_2
      22: lload         4
      24: lcmp
      25: ifle          110
      28: aload_1
      29: invokevirtual #329                // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      32: bipush        70
      34: invokevirtual #457                // Method org/apache/activemq/usage/MemoryUsage.setPercentOfJvmHeap:(I)V
      37: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      40: new           #72                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc_w         #458                // String Memory Usage for the Broker (
      50: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: lload_2
      54: ldc2_w        #459                // long 1048576l
      57: ldiv
      58: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      61: ldc_w         #462                // String  mb) is more than the maximum available for the JVM:
      64: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: lload         4
      69: ldc2_w        #459                // long 1048576l
      72: ldiv
      73: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      76: ldc_w         #463                // String  mb - resetting to 70% of maximum available:
      79: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #329                // Method org/apache/activemq/usage/SystemUsage.getMemoryUsage:()Lorg/apache/activemq/usage/MemoryUsage;
      86: invokevirtual #454                // Method org/apache/activemq/usage/MemoryUsage.getLimit:()J
      89: ldc2_w        #459                // long 1048576l
      92: ldiv
      93: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      96: ldc_w         #464                // String  mb
      99: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     110: aload_0
     111: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
     114: ifnull        436
     117: aload_0
     118: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
     121: astore        6
     123: aload         6
     125: invokeinterface #465,  1          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.getDirectory:()Ljava/io/File;
     130: astore        7
     132: aload         7
     134: ifnull        335
     137: aload         7
     139: invokevirtual #466                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     142: astore        8
     144: aload         7
     146: invokevirtual #467                // Method java/io/File.isAbsolute:()Z
     149: ifne          163
     152: new           #311                // class java/io/File
     155: dup
     156: aload         8
     158: invokespecial #313                // Method java/io/File."<init>":(Ljava/lang/String;)V
     161: astore        7
     163: aload         7
     165: ifnull        186
     168: aload         7
     170: invokevirtual #420                // Method java/io/File.isDirectory:()Z
     173: ifne          186
     176: aload         7
     178: invokevirtual #468                // Method java/io/File.getParentFile:()Ljava/io/File;
     181: astore        7
     183: goto          163
     186: aload_1
     187: invokevirtual #337                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
     190: invokevirtual #469                // Method org/apache/activemq/usage/StoreUsage.getLimit:()J
     193: lstore        9
     195: aload_1
     196: invokevirtual #337                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
     199: invokevirtual #470                // Method org/apache/activemq/usage/StoreUsage.getUsage:()J
     202: lstore        11
     204: aload         7
     206: invokevirtual #471                // Method java/io/File.getUsableSpace:()J
     209: lstore        13
     211: lload         9
     213: lload         13
     215: lload         11
     217: ladd
     218: lcmp
     219: ifle          335
     222: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     225: new           #72                 // class java/lang/StringBuilder
     228: dup
     229: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     232: ldc_w         #472                // String Store limit is
     235: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: lload         9
     240: ldc2_w        #459                // long 1048576l
     243: ldiv
     244: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     247: ldc_w         #473                // String  mb (current store usage is
     250: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: lload         11
     255: ldc2_w        #459                // long 1048576l
     258: ldiv
     259: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     262: ldc_w         #474                // String  mb). The data directory:
     265: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload         7
     270: invokevirtual #466                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     273: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc_w         #475                // String  only has
     279: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: lload         13
     284: ldc2_w        #459                // long 1048576l
     287: ldiv
     288: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     291: ldc_w         #476                // String  mb of usable space - resetting to maximum available disk space:
     294: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: lload         13
     299: lload         11
     301: ladd
     302: ldc2_w        #459                // long 1048576l
     305: ldiv
     306: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     309: ldc_w         #464                // String  mb
     312: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     318: invokeinterface #130,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     323: aload_1
     324: invokevirtual #337                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
     327: lload         13
     329: lload         11
     331: ladd
     332: invokevirtual #340                // Method org/apache/activemq/usage/StoreUsage.setLimit:(J)V
     335: lconst_0
     336: lstore        8
     338: aload_1
     339: invokevirtual #337                // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
     342: invokevirtual #469                // Method org/apache/activemq/usage/StoreUsage.getLimit:()J
     345: lstore        10
     347: aload         6
     349: instanceof    #477                // class org/apache/activemq/store/JournaledStore
     352: ifeq          368
     355: aload         6
     357: checkcast     #477                // class org/apache/activemq/store/JournaledStore
     360: invokeinterface #478,  1          // InterfaceMethod org/apache/activemq/store/JournaledStore.getJournalMaxFileLength:()I
     365: i2l
     366: lstore        8
     368: lload         10
     370: lload         8
     372: lcmp
     373: ifge          436
     376: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     379: new           #72                 // class java/lang/StringBuilder
     382: dup
     383: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     386: ldc_w         #472                // String Store limit is
     389: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     392: lload         10
     394: ldc2_w        #459                // long 1048576l
     397: ldiv
     398: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     401: ldc_w         #479                // String  mb, whilst the max journal file size for the store is:
     404: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     407: lload         8
     409: ldc2_w        #459                // long 1048576l
     412: ldiv
     413: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     416: ldc_w         #480                // String  mb,
     419: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     422: ldc_w         #481                // String the store will not accept any data when used.
     425: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     428: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     431: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     436: aload_0
     437: invokevirtual #418                // Method getTmpDataDirectory:()Ljava/io/File;
     440: astore        6
     442: aload         6
     444: ifnull        727
     447: aload         6
     449: invokevirtual #466                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     452: astore        7
     454: aload         6
     456: invokevirtual #467                // Method java/io/File.isAbsolute:()Z
     459: ifne          473
     462: new           #311                // class java/io/File
     465: dup
     466: aload         7
     468: invokespecial #313                // Method java/io/File."<init>":(Ljava/lang/String;)V
     471: astore        6
     473: aload_1
     474: invokevirtual #333                // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
     477: invokevirtual #482                // Method org/apache/activemq/usage/TempUsage.getLimit:()J
     480: lstore        8
     482: aload         6
     484: ifnull        505
     487: aload         6
     489: invokevirtual #420                // Method java/io/File.isDirectory:()Z
     492: ifne          505
     495: aload         6
     497: invokevirtual #468                // Method java/io/File.getParentFile:()Ljava/io/File;
     500: astore        6
     502: goto          482
     505: aload         6
     507: invokevirtual #471                // Method java/io/File.getUsableSpace:()J
     510: lstore        10
     512: lload         8
     514: lload         10
     516: lcmp
     517: ifle          609
     520: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     523: new           #72                 // class java/lang/StringBuilder
     526: dup
     527: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     530: ldc_w         #483                // String Temporary Store limit is
     533: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     536: lload         8
     538: ldc2_w        #459                // long 1048576l
     541: ldiv
     542: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     545: ldc_w         #484                // String  mb, whilst the temporary data directory:
     548: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     551: aload         7
     553: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     556: ldc_w         #475                // String  only has
     559: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     562: lload         10
     564: ldc2_w        #459                // long 1048576l
     567: ldiv
     568: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     571: ldc_w         #485                // String  mb of usable space - resetting to maximum available
     574: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     577: lload         10
     579: ldc2_w        #459                // long 1048576l
     582: ldiv
     583: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     586: ldc_w         #486                // String  mb.
     589: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     592: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     595: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     600: aload_1
     601: invokevirtual #333                // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
     604: lload         10
     606: invokevirtual #336                // Method org/apache/activemq/usage/TempUsage.setLimit:(J)V
     609: aload_0
     610: invokevirtual #363                // Method isPersistent:()Z
     613: ifeq          727
     616: aload_1
     617: invokevirtual #333                // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
     620: invokevirtual #487                // Method org/apache/activemq/usage/TempUsage.getStore:()Lorg/apache/activemq/store/PListStore;
     623: astore        14
     625: aload         14
     627: ifnull        654
     630: aload         14
     632: instanceof    #477                // class org/apache/activemq/store/JournaledStore
     635: ifeq          654
     638: aload         14
     640: checkcast     #477                // class org/apache/activemq/store/JournaledStore
     643: invokeinterface #478,  1          // InterfaceMethod org/apache/activemq/store/JournaledStore.getJournalMaxFileLength:()I
     648: i2l
     649: lstore        12
     651: goto          659
     654: ldc2_w        #488                // long 33554432l
     657: lstore        12
     659: lload         8
     661: lload         12
     663: lcmp
     664: ifge          727
     667: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     670: new           #72                 // class java/lang/StringBuilder
     673: dup
     674: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     677: ldc_w         #483                // String Temporary Store limit is
     680: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     683: lload         8
     685: ldc2_w        #459                // long 1048576l
     688: ldiv
     689: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     692: ldc_w         #490                // String  mb, whilst the max journal file size for the temporary store is:
     695: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: lload         12
     700: ldc2_w        #459                // long 1048576l
     703: ldiv
     704: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     707: ldc_w         #480                // String  mb,
     710: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     713: ldc_w         #491                // String the temp store will not accept any data when used.
     716: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     719: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     722: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     727: aload_0
     728: invokevirtual #325                // Method getJobSchedulerStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     731: ifnull        919
     734: aload_0
     735: invokevirtual #325                // Method getJobSchedulerStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
     738: astore        7
     740: aload         7
     742: invokeinterface #492,  1          // InterfaceMethod org/apache/activemq/broker/scheduler/JobSchedulerStore.getDirectory:()Ljava/io/File;
     747: astore        8
     749: aload         8
     751: ifnull        919
     754: aload         8
     756: invokevirtual #466                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     759: astore        9
     761: aload         8
     763: invokevirtual #467                // Method java/io/File.isAbsolute:()Z
     766: ifne          780
     769: new           #311                // class java/io/File
     772: dup
     773: aload         9
     775: invokespecial #313                // Method java/io/File."<init>":(Ljava/lang/String;)V
     778: astore        8
     780: aload         8
     782: ifnull        803
     785: aload         8
     787: invokevirtual #420                // Method java/io/File.isDirectory:()Z
     790: ifne          803
     793: aload         8
     795: invokevirtual #468                // Method java/io/File.getParentFile:()Ljava/io/File;
     798: astore        8
     800: goto          780
     803: aload_1
     804: invokevirtual #341                // Method org/apache/activemq/usage/SystemUsage.getJobSchedulerUsage:()Lorg/apache/activemq/usage/JobSchedulerUsage;
     807: invokevirtual #493                // Method org/apache/activemq/usage/JobSchedulerUsage.getLimit:()J
     810: lstore        10
     812: aload         8
     814: invokevirtual #471                // Method java/io/File.getUsableSpace:()J
     817: lstore        12
     819: lload         10
     821: lload         12
     823: lcmp
     824: ifle          919
     827: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     830: new           #72                 // class java/lang/StringBuilder
     833: dup
     834: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     837: ldc_w         #494                // String Job Scheduler Store limit is
     840: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     843: lload         10
     845: ldc2_w        #459                // long 1048576l
     848: ldiv
     849: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     852: ldc_w         #495                // String  mb, whilst the data directory:
     855: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     858: aload         8
     860: invokevirtual #466                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     863: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     866: ldc_w         #475                // String  only has
     869: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     872: lload         12
     874: ldc2_w        #459                // long 1048576l
     877: ldiv
     878: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     881: ldc_w         #496                // String  mb of usable space - resetting to
     884: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     887: lload         12
     889: ldc2_w        #459                // long 1048576l
     892: ldiv
     893: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     896: ldc_w         #486                // String  mb.
     899: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     902: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     905: invokeinterface #130,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     910: aload_1
     911: invokevirtual #341                // Method org/apache/activemq/usage/SystemUsage.getJobSchedulerUsage:()Lorg/apache/activemq/usage/JobSchedulerUsage;
     914: lload         12
     916: invokevirtual #342                // Method org/apache/activemq/usage/JobSchedulerUsage.setLimit:(J)V
     919: return

  public void stopAllConnectors(org.apache.activemq.util.ServiceStopper);
    Code:
       0: aload_0
       1: invokevirtual #159                // Method getNetworkConnectors:()Ljava/util/List;
       4: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #163                // class org/apache/activemq/network/NetworkConnector
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokevirtual #116                // Method unregisterNetworkConnectorMBean:(Lorg/apache/activemq/network/NetworkConnector;)V
      34: aload_1
      35: aload_3
      36: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      39: goto          10
      42: aload_0
      43: invokevirtual #498                // Method getProxyConnectors:()Ljava/util/List;
      46: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_2
      52: aload_2
      53: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          79
      61: aload_2
      62: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #96                 // class org/apache/activemq/proxy/ProxyConnector
      70: astore_3
      71: aload_1
      72: aload_3
      73: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      76: goto          52
      79: aload_0
      80: getfield      #24                 // Field jmsConnectors:Ljava/util/List;
      83: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      88: astore_2
      89: aload_2
      90: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          116
      98: aload_2
      99: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #499                // class org/apache/activemq/network/jms/JmsConnector
     107: astore_3
     108: aload_1
     109: aload_3
     110: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     113: goto          89
     116: aload_0
     117: invokevirtual #500                // Method getTransportConnectors:()Ljava/util/List;
     120: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     125: astore_2
     126: aload_2
     127: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     132: ifeq          163
     135: aload_2
     136: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     141: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
     144: astore_3
     145: aload_0
     146: aload_3
     147: invokevirtual #90                 // Method unregisterConnectorMBean:(Lorg/apache/activemq/broker/TransportConnector;)V
     150: goto          155
     153: astore        4
     155: aload_1
     156: aload_3
     157: invokevirtual #233                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     160: goto          126
     163: return
    Exception table:
       from    to  target type
         145   150   153   Class java/io/IOException

  protected org.apache.activemq.broker.TransportConnector registerConnectorMBean(org.apache.activemq.broker.TransportConnector) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #501                // Method createConnectorObjectName:(Lorg/apache/activemq/broker/TransportConnector;)Ljavax/management/ObjectName;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      11: aload_2
      12: invokevirtual #502                // Method org/apache/activemq/broker/TransportConnector.asManagedConnector:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljavax/management/ObjectName;)Lorg/apache/activemq/broker/jmx/ManagedTransportConnector;
      15: astore_1
      16: new           #503                // class org/apache/activemq/broker/jmx/ConnectorView
      19: dup
      20: aload_1
      21: invokespecial #504                // Method org/apache/activemq/broker/jmx/ConnectorView."<init>":(Lorg/apache/activemq/broker/Connector;)V
      24: astore_3
      25: aload_0
      26: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      29: aload_3
      30: aload_2
      31: invokestatic  #505                // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      34: aload_1
      35: areturn
      36: astore_2
      37: new           #72                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc_w         #506                // String Transport Connector could not be registered in JMX:
      47: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: invokevirtual #507                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      54: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: aload_2
      61: invokestatic  #508                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
      64: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/lang/Throwable

  protected void unregisterConnectorMBean(org.apache.activemq.broker.TransportConnector) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #118                // Method isUseJmx:()Z
       4: ifeq          53
       7: aload_0
       8: aload_1
       9: invokespecial #501                // Method createConnectorObjectName:(Lorg/apache/activemq/broker/TransportConnector;)Ljavax/management/ObjectName;
      12: astore_2
      13: aload_0
      14: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      17: aload_2
      18: invokevirtual #509                // Method org/apache/activemq/broker/jmx/ManagementContext.unregisterMBean:(Ljavax/management/ObjectName;)V
      21: goto          53
      24: astore_2
      25: new           #72                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc_w         #510                // String Transport Connector could not be unregistered in JMX:
      35: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #507                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      42: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: aload_2
      49: invokestatic  #508                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
      52: athrow
      53: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Throwable

  protected org.apache.activemq.store.PersistenceAdapter registerPersistenceAdapterMBean(org.apache.activemq.store.PersistenceAdapter) throws java.io.IOException;
    Code:
       0: aload_1
       1: areturn

  protected void unregisterPersistenceAdapterMBean(org.apache.activemq.store.PersistenceAdapter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #118                // Method isUseJmx:()Z
       4: ifeq          7
       7: return

  private javax.management.ObjectName createConnectorObjectName(org.apache.activemq.broker.TransportConnector) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
       4: ldc_w         #512                // String clientConnectors
       7: aload_1
       8: invokevirtual #281                // Method org/apache/activemq/broker/TransportConnector.getName:()Ljava/lang/String;
      11: invokestatic  #513                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createConnectorName:(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      14: areturn

  public void registerNetworkConnectorMBean(org.apache.activemq.network.NetworkConnector) throws java.io.IOException;
    Code:
       0: new           #514                // class org/apache/activemq/broker/jmx/NetworkConnectorView
       3: dup
       4: aload_1
       5: invokespecial #515                // Method org/apache/activemq/broker/jmx/NetworkConnectorView."<init>":(Lorg/apache/activemq/network/NetworkConnector;)V
       8: astore_2
       9: aload_0
      10: aload_1
      11: invokevirtual #516                // Method createNetworkConnectorObjectName:(Lorg/apache/activemq/network/NetworkConnector;)Ljavax/management/ObjectName;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokevirtual #517                // Method org/apache/activemq/network/NetworkConnector.setObjectName:(Ljavax/management/ObjectName;)V
      20: aload_0
      21: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      24: aload_2
      25: aload_3
      26: invokestatic  #505                // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      29: goto          61
      32: astore_3
      33: new           #72                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc_w         #518                // String Network Connector could not be registered in JMX:
      43: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: invokevirtual #507                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      50: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: aload_3
      57: invokestatic  #508                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
      60: athrow
      61: return
    Exception table:
       from    to  target type
           9    29    32   Class java/lang/Throwable

  protected javax.management.ObjectName createNetworkConnectorObjectName(org.apache.activemq.network.NetworkConnector) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
       4: ldc_w         #519                // String networkConnectors
       7: aload_1
       8: invokevirtual #379                // Method org/apache/activemq/network/NetworkConnector.getName:()Ljava/lang/String;
      11: invokestatic  #520                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createNetworkConnectorName:(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      14: areturn

  public javax.management.ObjectName createDuplexNetworkConnectorObjectName(java.lang.String) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
       4: ldc_w         #521                // String duplexNetworkConnectors
       7: aload_1
       8: invokestatic  #520                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createNetworkConnectorName:(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      11: areturn

  protected void unregisterNetworkConnectorMBean(org.apache.activemq.network.NetworkConnector);
    Code:
       0: aload_0
       1: invokevirtual #118                // Method isUseJmx:()Z
       4: ifeq          63
       7: aload_0
       8: aload_1
       9: invokevirtual #516                // Method createNetworkConnectorObjectName:(Lorg/apache/activemq/network/NetworkConnector;)Ljavax/management/ObjectName;
      12: astore_2
      13: aload_0
      14: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      17: aload_2
      18: invokevirtual #509                // Method org/apache/activemq/broker/jmx/ManagementContext.unregisterMBean:(Ljavax/management/ObjectName;)V
      21: goto          63
      24: astore_2
      25: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      28: new           #72                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc_w         #522                // String Network Connector could not be unregistered from JMX due
      38: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_2
      42: invokevirtual #523                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      45: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc_w         #524                // String . This exception is ignored.
      51: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload_2
      58: invokeinterface #174,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Exception

  protected void registerProxyConnectorMBean(org.apache.activemq.proxy.ProxyConnector) throws java.io.IOException;
    Code:
       0: new           #525                // class org/apache/activemq/broker/jmx/ProxyConnectorView
       3: dup
       4: aload_1
       5: invokespecial #526                // Method org/apache/activemq/broker/jmx/ProxyConnectorView."<init>":(Lorg/apache/activemq/proxy/ProxyConnector;)V
       8: astore_2
       9: aload_0
      10: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
      13: ldc_w         #527                // String proxyConnectors
      16: aload_1
      17: invokevirtual #528                // Method org/apache/activemq/proxy/ProxyConnector.getName:()Ljava/lang/String;
      20: invokestatic  #520                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createNetworkConnectorName:(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      23: astore_3
      24: aload_0
      25: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      28: aload_2
      29: aload_3
      30: invokestatic  #505                // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      33: goto          65
      36: astore_3
      37: new           #72                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc_w         #529                // String Broker could not be registered in JMX:
      47: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_3
      51: invokevirtual #507                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      54: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: aload_3
      61: invokestatic  #508                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
      64: athrow
      65: return
    Exception table:
       from    to  target type
           9    33    36   Class java/lang/Throwable

  protected void registerJmsConnectorMBean(org.apache.activemq.network.jms.JmsConnector) throws java.io.IOException;
    Code:
       0: new           #530                // class org/apache/activemq/broker/jmx/JmsConnectorView
       3: dup
       4: aload_1
       5: invokespecial #531                // Method org/apache/activemq/broker/jmx/JmsConnectorView."<init>":(Lorg/apache/activemq/network/jms/JmsConnector;)V
       8: astore_2
       9: aload_0
      10: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
      13: ldc_w         #532                // String jmsConnectors
      16: aload_1
      17: invokevirtual #533                // Method org/apache/activemq/network/jms/JmsConnector.getName:()Ljava/lang/String;
      20: invokestatic  #520                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createNetworkConnectorName:(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      23: astore_3
      24: aload_0
      25: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      28: aload_2
      29: aload_3
      30: invokestatic  #505                // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      33: goto          65
      36: astore_3
      37: new           #72                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc_w         #529                // String Broker could not be registered in JMX:
      47: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_3
      51: invokevirtual #507                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      54: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: aload_3
      61: invokestatic  #508                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
      64: athrow
      65: return
    Exception table:
       from    to  target type
           9    33    36   Class java/lang/Throwable

  protected org.apache.activemq.broker.Broker createBroker() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #534                // Method createRegionBroker:()Lorg/apache/activemq/broker/Broker;
       5: putfield      #205                // Field regionBroker:Lorg/apache/activemq/broker/Broker;
       8: aload_0
       9: aload_0
      10: getfield      #205                // Field regionBroker:Lorg/apache/activemq/broker/Broker;
      13: invokevirtual #535                // Method addInterceptors:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/Broker;
      16: astore_1
      17: new           #536                // class org/apache/activemq/broker/BrokerService$5
      20: dup
      21: aload_0
      22: aload_1
      23: invokespecial #537                // Method org/apache/activemq/broker/BrokerService$5."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/broker/Broker;)V
      26: astore_1
      27: aload_1
      28: areturn

  protected org.apache.activemq.broker.Broker createRegionBroker() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #538                // Method createDefaultDestinationInterceptor:()[Lorg/apache/activemq/broker/region/DestinationInterceptor;
      12: putfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
      15: aload_0
      16: aload_0
      17: getfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
      20: invokevirtual #539                // Method configureServices:([Ljava/lang/Object;)V
      23: new           #540                // class org/apache/activemq/broker/region/CompositeDestinationInterceptor
      26: dup
      27: aload_0
      28: getfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
      31: invokespecial #541                // Method org/apache/activemq/broker/region/CompositeDestinationInterceptor."<init>":([Lorg/apache/activemq/broker/region/DestinationInterceptor;)V
      34: astore_1
      35: aload_0
      36: getfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
      39: ifnonnull     62
      42: aload_0
      43: new           #542                // class org/apache/activemq/broker/region/DestinationFactoryImpl
      46: dup
      47: aload_0
      48: aload_0
      49: invokevirtual #543                // Method getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
      52: aload_0
      53: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      56: invokespecial #544                // Method org/apache/activemq/broker/region/DestinationFactoryImpl."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/store/PersistenceAdapter;)V
      59: putfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
      62: aload_0
      63: aload_1
      64: invokevirtual #545                // Method createRegionBroker:(Lorg/apache/activemq/broker/region/DestinationInterceptor;)Lorg/apache/activemq/broker/Broker;
      67: areturn

  protected org.apache.activemq.broker.Broker createRegionBroker(org.apache.activemq.broker.region.DestinationInterceptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #118                // Method isUseJmx:()Z
       4: ifeq          90
       7: new           #206                // class org/apache/activemq/broker/jmx/ManagedRegionBroker
      10: dup
      11: aload_0
      12: aload_0
      13: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      16: aload_0
      17: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
      20: aload_0
      21: invokevirtual #543                // Method getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
      24: aload_0
      25: invokevirtual #546                // Method getConsumerSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
      28: aload_0
      29: getfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
      32: aload_1
      33: aload_0
      34: invokevirtual #547                // Method getScheduler:()Lorg/apache/activemq/thread/Scheduler;
      37: aload_0
      38: invokevirtual #327                // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      41: invokespecial #548                // Method org/apache/activemq/broker/jmx/ManagedRegionBroker."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/broker/jmx/ManagementContext;Ljavax/management/ObjectName;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/broker/region/DestinationFactory;Lorg/apache/activemq/broker/region/DestinationInterceptor;Lorg/apache/activemq/thread/Scheduler;Ljava/util/concurrent/ThreadPoolExecutor;)V
      44: astore_2
      45: goto          120
      48: astore_3
      49: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      52: new           #72                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc_w         #550                // String Cannot create ManagedRegionBroker due
      62: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_3
      66: invokevirtual #551                // Method javax/management/MalformedObjectNameException.getMessage:()Ljava/lang/String;
      69: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: aload_3
      76: invokeinterface #174,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      81: new           #344                // class java/io/IOException
      84: dup
      85: aload_3
      86: invokespecial #552                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      89: athrow
      90: new           #553                // class org/apache/activemq/broker/region/RegionBroker
      93: dup
      94: aload_0
      95: aload_0
      96: invokevirtual #543                // Method getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
      99: aload_0
     100: invokevirtual #546                // Method getConsumerSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
     103: aload_0
     104: getfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
     107: aload_1
     108: aload_0
     109: invokevirtual #547                // Method getScheduler:()Lorg/apache/activemq/thread/Scheduler;
     112: aload_0
     113: invokevirtual #327                // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     116: invokespecial #554                // Method org/apache/activemq/broker/region/RegionBroker."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/broker/region/DestinationFactory;Lorg/apache/activemq/broker/region/DestinationInterceptor;Lorg/apache/activemq/thread/Scheduler;Ljava/util/concurrent/ThreadPoolExecutor;)V
     119: astore_2
     120: aload_0
     121: getfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
     124: aload_2
     125: invokevirtual #555                // Method org/apache/activemq/broker/region/DestinationFactory.setRegionBroker:(Lorg/apache/activemq/broker/region/RegionBroker;)V
     128: aload_2
     129: aload_0
     130: getfield      #34                 // Field keepDurableSubsActive:Z
     133: invokevirtual #556                // Method org/apache/activemq/broker/region/RegionBroker.setKeepDurableSubsActive:(Z)V
     136: aload_2
     137: aload_0
     138: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     141: invokevirtual #557                // Method org/apache/activemq/broker/region/RegionBroker.setBrokerName:(Ljava/lang/String;)V
     144: aload_2
     145: invokevirtual #558                // Method org/apache/activemq/broker/region/RegionBroker.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
     148: aload_0
     149: getfield      #10                 // Field enableStatistics:Z
     152: invokevirtual #559                // Method org/apache/activemq/broker/region/DestinationStatistics.setEnabled:(Z)V
     155: aload_2
     156: aload_0
     157: invokevirtual #560                // Method isAllowTempAutoCreationOnSend:()Z
     160: invokevirtual #561                // Method org/apache/activemq/broker/region/RegionBroker.setAllowTempAutoCreationOnSend:(Z)V
     163: aload_0
     164: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
     167: ifnull        178
     170: aload_2
     171: aload_0
     172: getfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
     175: invokevirtual #562                // Method org/apache/activemq/broker/region/RegionBroker.setBrokerId:(Lorg/apache/activemq/command/BrokerId;)V
     178: aload_2
     179: areturn
    Exception table:
       from    to  target type
           7    45    48   Class javax/management/MalformedObjectNameException

  protected org.apache.activemq.broker.region.DestinationInterceptor[] createDefaultDestinationInterceptor();
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #563                // Method isUseVirtualTopics:()Z
      12: ifeq          62
      15: new           #564                // class org/apache/activemq/broker/region/virtual/VirtualDestinationInterceptor
      18: dup
      19: invokespecial #565                // Method org/apache/activemq/broker/region/virtual/VirtualDestinationInterceptor."<init>":()V
      22: astore_2
      23: new           #566                // class org/apache/activemq/broker/region/virtual/VirtualTopic
      26: dup
      27: invokespecial #567                // Method org/apache/activemq/broker/region/virtual/VirtualTopic."<init>":()V
      30: astore_3
      31: aload_3
      32: ldc_w         #568                // String VirtualTopic.>
      35: invokevirtual #569                // Method org/apache/activemq/broker/region/virtual/VirtualTopic.setName:(Ljava/lang/String;)V
      38: iconst_1
      39: anewarray     #570                // class org/apache/activemq/broker/region/virtual/VirtualDestination
      42: dup
      43: iconst_0
      44: aload_3
      45: aastore
      46: astore        4
      48: aload_2
      49: aload         4
      51: invokevirtual #571                // Method org/apache/activemq/broker/region/virtual/VirtualDestinationInterceptor.setVirtualDestinations:([Lorg/apache/activemq/broker/region/virtual/VirtualDestination;)V
      54: aload_1
      55: aload_2
      56: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_0
      63: invokevirtual #572                // Method isUseMirroredQueues:()Z
      66: ifeq          85
      69: new           #573                // class org/apache/activemq/broker/region/virtual/MirroredQueue
      72: dup
      73: invokespecial #574                // Method org/apache/activemq/broker/region/virtual/MirroredQueue."<init>":()V
      76: astore_2
      77: aload_1
      78: aload_2
      79: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_1
      86: invokeinterface #279,  1          // InterfaceMethod java/util/List.size:()I
      91: anewarray     #575                // class org/apache/activemq/broker/region/DestinationInterceptor
      94: astore_2
      95: aload_1
      96: aload_2
      97: invokeinterface #395,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     102: pop
     103: aload_2
     104: areturn

  protected org.apache.activemq.broker.Broker addInterceptors(org.apache.activemq.broker.Broker) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #443                // Method isSchedulerSupport:()Z
       4: ifeq          105
       7: new           #576                // class org/apache/activemq/broker/scheduler/SchedulerBroker
      10: dup
      11: aload_0
      12: aload_1
      13: aload_0
      14: invokevirtual #325                // Method getJobSchedulerStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      17: invokespecial #577                // Method org/apache/activemq/broker/scheduler/SchedulerBroker."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/broker/Broker;Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;)V
      20: astore_2
      21: aload_0
      22: invokevirtual #118                // Method isUseJmx:()Z
      25: ifeq          103
      28: new           #578                // class org/apache/activemq/broker/jmx/JobSchedulerView
      31: dup
      32: aload_2
      33: invokevirtual #579                // Method org/apache/activemq/broker/scheduler/SchedulerBroker.getJobScheduler:()Lorg/apache/activemq/broker/scheduler/JobScheduler;
      36: invokespecial #580                // Method org/apache/activemq/broker/jmx/JobSchedulerView."<init>":(Lorg/apache/activemq/broker/scheduler/JobScheduler;)V
      39: astore_3
      40: aload_0
      41: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
      44: invokestatic  #581                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createJobSchedulerServiceName:(Ljavax/management/ObjectName;)Ljavax/management/ObjectName;
      47: astore        4
      49: aload_0
      50: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      53: aload_3
      54: aload         4
      56: invokestatic  #505                // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      59: aload_0
      60: getfield      #208                // Field adminView:Lorg/apache/activemq/broker/jmx/BrokerView;
      63: aload         4
      65: invokevirtual #582                // Method org/apache/activemq/broker/jmx/BrokerView.setJMSJobScheduler:(Ljavax/management/ObjectName;)V
      68: goto          103
      71: astore        4
      73: new           #72                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc_w         #583                // String JobScheduler could not be registered in JMX:
      83: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload         4
      88: invokevirtual #507                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      91: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: aload         4
      99: invokestatic  #508                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
     102: athrow
     103: aload_2
     104: astore_1
     105: aload_0
     106: invokevirtual #118                // Method isUseJmx:()Z
     109: ifeq          176
     112: new           #584                // class org/apache/activemq/broker/jmx/HealthView
     115: dup
     116: aload_0
     117: invokevirtual #585                // Method getRegionBroker:()Lorg/apache/activemq/broker/Broker;
     120: checkcast     #206                // class org/apache/activemq/broker/jmx/ManagedRegionBroker
     123: invokespecial #586                // Method org/apache/activemq/broker/jmx/HealthView."<init>":(Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;)V
     126: astore_2
     127: aload_0
     128: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
     131: invokestatic  #587                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createHealthServiceName:(Ljavax/management/ObjectName;)Ljavax/management/ObjectName;
     134: astore_3
     135: aload_0
     136: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
     139: aload_2
     140: aload_3
     141: invokestatic  #505                // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
     144: goto          176
     147: astore_3
     148: new           #72                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc_w         #588                // String Status MBean could not be registered in JMX:
     158: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_3
     162: invokevirtual #507                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     165: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: aload_3
     172: invokestatic  #508                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/IOException;
     175: athrow
     176: aload_0
     177: invokevirtual #589                // Method isAdvisorySupport:()Z
     180: ifeq          192
     183: new           #590                // class org/apache/activemq/advisory/AdvisoryBroker
     186: dup
     187: aload_1
     188: invokespecial #591                // Method org/apache/activemq/advisory/AdvisoryBroker."<init>":(Lorg/apache/activemq/broker/Broker;)V
     191: astore_1
     192: new           #592                // class org/apache/activemq/broker/CompositeDestinationBroker
     195: dup
     196: aload_1
     197: invokespecial #593                // Method org/apache/activemq/broker/CompositeDestinationBroker."<init>":(Lorg/apache/activemq/broker/Broker;)V
     200: astore_1
     201: new           #594                // class org/apache/activemq/broker/TransactionBroker
     204: dup
     205: aload_1
     206: aload_0
     207: invokevirtual #179                // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
     210: invokeinterface #595,  1          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.createTransactionStore:()Lorg/apache/activemq/store/TransactionStore;
     215: invokespecial #596                // Method org/apache/activemq/broker/TransactionBroker."<init>":(Lorg/apache/activemq/broker/Broker;Lorg/apache/activemq/store/TransactionStore;)V
     218: astore_1
     219: aload_0
     220: invokevirtual #597                // Method isPopulateJMSXUserID:()Z
     223: ifeq          245
     226: new           #598                // class org/apache/activemq/broker/UserIDBroker
     229: dup
     230: aload_1
     231: invokespecial #599                // Method org/apache/activemq/broker/UserIDBroker."<init>":(Lorg/apache/activemq/broker/Broker;)V
     234: astore_2
     235: aload_2
     236: aload_0
     237: invokevirtual #600                // Method isUseAuthenticatedPrincipalForJMSXUserID:()Z
     240: invokevirtual #601                // Method org/apache/activemq/broker/UserIDBroker.setUseAuthenticatePrincipal:(Z)V
     243: aload_2
     244: astore_1
     245: aload_0
     246: invokevirtual #602                // Method isMonitorConnectionSplits:()Z
     249: ifeq          261
     252: new           #603                // class org/apache/activemq/broker/cluster/ConnectionSplitBroker
     255: dup
     256: aload_1
     257: invokespecial #604                // Method org/apache/activemq/broker/cluster/ConnectionSplitBroker."<init>":(Lorg/apache/activemq/broker/Broker;)V
     260: astore_1
     261: aload_0
     262: getfield      #402                // Field plugins:[Lorg/apache/activemq/broker/BrokerPlugin;
     265: ifnull        300
     268: iconst_0
     269: istore_2
     270: iload_2
     271: aload_0
     272: getfield      #402                // Field plugins:[Lorg/apache/activemq/broker/BrokerPlugin;
     275: arraylength
     276: if_icmpge     300
     279: aload_0
     280: getfield      #402                // Field plugins:[Lorg/apache/activemq/broker/BrokerPlugin;
     283: iload_2
     284: aaload
     285: astore_3
     286: aload_3
     287: aload_1
     288: invokeinterface #605,  2          // InterfaceMethod org/apache/activemq/broker/BrokerPlugin.installPlugin:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/Broker;
     293: astore_1
     294: iinc          2, 1
     297: goto          270
     300: aload_1
     301: areturn
    Exception table:
       from    to  target type
          40    68    71   Class java/lang/Throwable
         127   144   147   Class java/lang/Throwable

  protected org.apache.activemq.store.PersistenceAdapter createPersistenceAdapter() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #363                // Method isPersistent:()Z
       4: ifeq          77
       7: aload_0
       8: invokevirtual #606                // Method getPersistenceFactory:()Lorg/apache/activemq/store/PersistenceAdapterFactory;
      11: astore_1
      12: aload_1
      13: ifnull        23
      16: aload_1
      17: invokeinterface #607,  1          // InterfaceMethod org/apache/activemq/store/PersistenceAdapterFactory.createPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      22: areturn
      23: ldc_w         #608                // String org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter
      26: astore_2
      27: aload_0
      28: invokevirtual #427                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: invokevirtual #428                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      34: aload_2
      35: invokevirtual #429                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      38: invokevirtual #430                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      41: checkcast     #609                // class org/apache/activemq/store/PersistenceAdapter
      44: astore_3
      45: new           #311                // class java/io/File
      48: dup
      49: aload_0
      50: invokevirtual #318                // Method getBrokerDataDirectory:()Ljava/io/File;
      53: ldc_w         #610                // String KahaDB
      56: invokespecial #315                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      59: astore        4
      61: aload_3
      62: aload         4
      64: invokeinterface #611,  2          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.setDirectory:(Ljava/io/File;)V
      69: aload_3
      70: areturn
      71: astore_2
      72: aload_2
      73: invokestatic  #612                // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Throwable;)Ljava/io/IOException;
      76: athrow
      77: new           #364                // class org/apache/activemq/store/memory/MemoryPersistenceAdapter
      80: dup
      81: invokespecial #613                // Method org/apache/activemq/store/memory/MemoryPersistenceAdapter."<init>":()V
      84: areturn
    Exception table:
       from    to  target type
          23    70    71   Class java/lang/Throwable

  protected javax.management.ObjectName createBrokerObjectName() throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
       4: invokevirtual #614                // Method org/apache/activemq/broker/jmx/ManagementContext.getJmxDomainName:()Ljava/lang/String;
       7: aload_0
       8: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      11: invokestatic  #615                // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createBrokerObjectName:(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      14: areturn

  protected org.apache.activemq.broker.TransportConnector createTransportConnector(java.net.URI) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #616                // Method org/apache/activemq/transport/TransportFactorySupport.bind:(Lorg/apache/activemq/broker/BrokerService;Ljava/net/URI;)Lorg/apache/activemq/transport/TransportServer;
       5: astore_2
       6: new           #86                 // class org/apache/activemq/broker/TransportConnector
       9: dup
      10: aload_2
      11: invokespecial #87                 // Method org/apache/activemq/broker/TransportConnector."<init>":(Lorg/apache/activemq/transport/TransportServer;)V
      14: areturn

  protected java.lang.Object getPort(java.util.Map<?, ?>);
    Code:
       0: aload_1
       1: ldc_w         #617                // String port
       4: invokeinterface #618,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: ifnonnull     30
      14: ldc_w         #619                // String 61616
      17: astore_2
      18: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      21: ldc_w         #620                // String No port specified so defaulting to: {}
      24: aload_2
      25: invokeinterface #366,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      30: aload_2
      31: areturn

  protected void addShutdownHook();
    Code:
       0: aload_0
       1: getfield      #13                 // Field useShutdownHook:Z
       4: ifeq          32
       7: aload_0
       8: new           #621                // class org/apache/activemq/broker/BrokerService$6
      11: dup
      12: aload_0
      13: ldc_w         #622                // String ActiveMQ ShutdownHook
      16: invokespecial #623                // Method org/apache/activemq/broker/BrokerService$6."<init>":(Lorg/apache/activemq/broker/BrokerService;Ljava/lang/String;)V
      19: putfield      #624                // Field shutdownHook:Ljava/lang/Thread;
      22: invokestatic  #455                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      25: aload_0
      26: getfield      #624                // Field shutdownHook:Ljava/lang/Thread;
      29: invokevirtual #625                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      32: return

  protected void removeShutdownHook();
    Code:
       0: aload_0
       1: getfield      #624                // Field shutdownHook:Ljava/lang/Thread;
       4: ifnull        34
       7: invokestatic  #455                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      10: aload_0
      11: getfield      #624                // Field shutdownHook:Ljava/lang/Thread;
      14: invokevirtual #626                // Method java/lang/Runtime.removeShutdownHook:(Ljava/lang/Thread;)Z
      17: pop
      18: goto          34
      21: astore_1
      22: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      25: ldc_w         #627                // String Caught exception, must be shutting down. This exception is ignored.
      28: aload_1
      29: invokeinterface #388,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: return
    Exception table:
       from    to  target type
           7    18    21   Class java/lang/Exception

  public void setShutdownHooks(java.util.List<java.lang.Runnable>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #252                // class java/lang/Runnable
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #628                // Method addShutdownHook:(Ljava/lang/Runnable;)V
      31: goto          7
      34: return

  protected void containerShutdown();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method stop:()V
       4: goto          123
       7: astore_1
       8: aload_1
       9: invokevirtual #629                // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
      12: astore_2
      13: aload_2
      14: ifnull        55
      17: aload_0
      18: new           #72                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc_w         #630                // String Failed to shut down:
      28: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc_w         #631                // String . Reason:
      38: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_2
      42: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: aload_2
      49: invokevirtual #632                // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: goto          80
      55: aload_0
      56: new           #72                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc_w         #630                // String Failed to shut down:
      66: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload_1
      77: invokevirtual #632                // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: aload_0
      81: getfield      #398                // Field useLoggingForShutdownErrors:Z
      84: ifne          94
      87: aload_1
      88: getstatic     #633                // Field java/lang/System.err:Ljava/io/PrintStream;
      91: invokevirtual #634                // Method java/io/IOException.printStackTrace:(Ljava/io/PrintStream;)V
      94: goto          123
      97: astore_1
      98: aload_0
      99: new           #72                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc_w         #630                // String Failed to shut down:
     109: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_1
     113: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     116: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: aload_1
     120: invokevirtual #632                // Method logError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     123: return
    Exception table:
       from    to  target type
           0     4     7   Class java/io/IOException
           0     4    97   Class java/lang/Exception

  protected void logError(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #398                // Field useLoggingForShutdownErrors:Z
       4: ifeq          38
       7: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      10: new           #72                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc_w         #630                // String Failed to shut down:
      20: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      35: goto          64
      38: getstatic     #633                // Field java/lang/System.err:Ljava/io/PrintStream;
      41: new           #72                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc_w         #630                // String Failed to shut down:
      51: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_2
      55: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokevirtual #635                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      64: return

  protected void startDestinations() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #416                // Field destinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: ifnull        49
       7: aload_0
       8: invokevirtual #439                // Method getAdminConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: getfield      #416                // Field destinations:[Lorg/apache/activemq/command/ActiveMQDestination;
      19: arraylength
      20: if_icmpge     49
      23: aload_0
      24: getfield      #416                // Field destinations:[Lorg/apache/activemq/command/ActiveMQDestination;
      27: iload_2
      28: aaload
      29: astore_3
      30: aload_0
      31: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
      34: aload_1
      35: aload_3
      36: iconst_1
      37: invokeinterface #440,  4          // InterfaceMethod org/apache/activemq/broker/Broker.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      42: pop
      43: iinc          2, 1
      46: goto          14
      49: aload_0
      50: invokevirtual #563                // Method isUseVirtualTopics:()Z
      53: ifeq          60
      56: aload_0
      57: invokevirtual #636                // Method startVirtualConsumerDestinations:()V
      60: return

  public org.apache.activemq.broker.ConnectionContext getAdminConnectionContext() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
       4: invokestatic  #637                // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
       7: areturn

  protected void startManagementContext() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
       4: aload_0
       5: getfield      #18                 // Field brokerName:Ljava/lang/String;
       8: invokevirtual #638                // Method org/apache/activemq/broker/jmx/ManagementContext.setBrokerName:(Ljava/lang/String;)V
      11: aload_0
      12: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      15: invokevirtual #639                // Method org/apache/activemq/broker/jmx/ManagementContext.start:()V
      18: aload_0
      19: new           #640                // class org/apache/activemq/broker/jmx/BrokerView
      22: dup
      23: aload_0
      24: aconst_null
      25: invokespecial #641                // Method org/apache/activemq/broker/jmx/BrokerView."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/broker/jmx/ManagedRegionBroker;)V
      28: putfield      #208                // Field adminView:Lorg/apache/activemq/broker/jmx/BrokerView;
      31: aload_0
      32: invokevirtual #511                // Method getBrokerObjectName:()Ljavax/management/ObjectName;
      35: astore_1
      36: aload_0
      37: invokevirtual #200                // Method getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      40: aload_0
      41: getfield      #208                // Field adminView:Lorg/apache/activemq/broker/jmx/BrokerView;
      44: aload_1
      45: invokestatic  #505                // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      48: return

  public void startAllConnectors() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #194                // Method getBroker:()Lorg/apache/activemq/broker/Broker;
       4: invokeinterface #642,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getDurableDestinations:()Ljava/util/Set;
       9: astore_1
      10: new           #25                 // class java/util/ArrayList
      13: dup
      14: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      17: astore_2
      18: aload_0
      19: invokevirtual #500                // Method getTransportConnectors:()Ljava/util/List;
      22: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          70
      37: aload_3
      38: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #86                 // class org/apache/activemq/broker/TransportConnector
      46: astore        4
      48: aload         4
      50: aload_0
      51: invokevirtual #643                // Method org/apache/activemq/broker/TransportConnector.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
      54: aload_2
      55: aload_0
      56: aload         4
      58: invokevirtual #644                // Method startTransportConnector:(Lorg/apache/activemq/broker/TransportConnector;)Lorg/apache/activemq/broker/TransportConnector;
      61: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          28
      70: aload_2
      71: invokeinterface #279,  1          // InterfaceMethod java/util/List.size:()I
      76: ifle          93
      79: aload_0
      80: getfield      #21                 // Field transportConnectors:Ljava/util/List;
      83: invokeinterface #397,  1          // InterfaceMethod java/util/List.clear:()V
      88: aload_0
      89: aload_2
      90: invokevirtual #645                // Method setTransportConnectors:(Ljava/util/List;)V
      93: aload_0
      94: iconst_0
      95: putfield      #68                 // Field slave:Z
      98: aload_0
      99: invokevirtual #103                // Method getVmConnectorURI:()Ljava/net/URI;
     102: astore_3
     103: new           #104                // class java/util/HashMap
     106: dup
     107: aload_3
     108: invokestatic  #105                // Method org/apache/activemq/util/URISupport.parseParameters:(Ljava/net/URI;)Ljava/util/Map;
     111: invokespecial #106                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     114: astore        4
     116: aload         4
     118: ldc           #107                // String network
     120: ldc           #108                // String true
     122: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload         4
     130: ldc_w         #646                // String async
     133: ldc_w         #647                // String false
     136: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: pop
     142: aload_3
     143: aload         4
     145: invokestatic  #110                // Method org/apache/activemq/util/URISupport.createQueryString:(Ljava/util/Map;)Ljava/lang/String;
     148: invokestatic  #111                // Method org/apache/activemq/util/URISupport.createURIWithQuery:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;
     151: astore_3
     152: aload_0
     153: getfield      #32                 // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
     156: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     159: ifne          448
     162: aconst_null
     163: astore        5
     165: aload_0
     166: invokevirtual #648                // Method isNetworkConnectorStartAsync:()Z
     169: ifeq          206
     172: new           #649                // class java/util/concurrent/ThreadPoolExecutor
     175: dup
     176: iconst_0
     177: ldc_w         #650                // int 2147483647
     180: ldc2_w        #651                // long 10l
     183: getstatic     #653                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     186: new           #654                // class java/util/concurrent/SynchronousQueue
     189: dup
     190: invokespecial #655                // Method java/util/concurrent/SynchronousQueue."<init>":()V
     193: new           #656                // class org/apache/activemq/broker/BrokerService$7
     196: dup
     197: aload_0
     198: invokespecial #657                // Method org/apache/activemq/broker/BrokerService$7."<init>":(Lorg/apache/activemq/broker/BrokerService;)V
     201: invokespecial #658                // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
     204: astore        5
     206: aload_0
     207: invokevirtual #159                // Method getNetworkConnectors:()Ljava/util/List;
     210: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     215: astore        6
     217: aload         6
     219: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     224: ifeq          307
     227: aload         6
     229: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     234: checkcast     #163                // class org/apache/activemq/network/NetworkConnector
     237: astore        7
     239: aload         7
     241: aload_3
     242: invokevirtual #112                // Method org/apache/activemq/network/NetworkConnector.setLocalUri:(Ljava/net/URI;)V
     245: aload         7
     247: aload_0
     248: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
     251: invokevirtual #659                // Method org/apache/activemq/network/NetworkConnector.setBrokerName:(Ljava/lang/String;)V
     254: aload         7
     256: aload_1
     257: invokevirtual #660                // Method org/apache/activemq/network/NetworkConnector.setDurableDestinations:(Ljava/util/Set;)V
     260: aload_0
     261: invokevirtual #661                // Method getDefaultSocketURIString:()Ljava/lang/String;
     264: ifnull        276
     267: aload         7
     269: aload_0
     270: invokevirtual #661                // Method getDefaultSocketURIString:()Ljava/lang/String;
     273: invokevirtual #662                // Method org/apache/activemq/network/NetworkConnector.setBrokerURL:(Ljava/lang/String;)V
     276: aload         5
     278: ifnull        299
     281: aload         5
     283: new           #663                // class org/apache/activemq/broker/BrokerService$8
     286: dup
     287: aload_0
     288: aload         7
     290: invokespecial #664                // Method org/apache/activemq/broker/BrokerService$8."<init>":(Lorg/apache/activemq/broker/BrokerService;Lorg/apache/activemq/network/NetworkConnector;)V
     293: invokevirtual #665                // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     296: goto          304
     299: aload         7
     301: invokevirtual #666                // Method org/apache/activemq/network/NetworkConnector.start:()V
     304: goto          217
     307: aload         5
     309: ifnull        317
     312: aload         5
     314: invokestatic  #667                // Method org/apache/activemq/util/ThreadPoolUtils.shutdown:(Ljava/util/concurrent/ExecutorService;)V
     317: aload_0
     318: invokevirtual #498                // Method getProxyConnectors:()Ljava/util/List;
     321: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     326: astore        6
     328: aload         6
     330: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     335: ifeq          358
     338: aload         6
     340: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     345: checkcast     #96                 // class org/apache/activemq/proxy/ProxyConnector
     348: astore        7
     350: aload         7
     352: invokevirtual #668                // Method org/apache/activemq/proxy/ProxyConnector.start:()V
     355: goto          328
     358: aload_0
     359: getfield      #24                 // Field jmsConnectors:Ljava/util/List;
     362: invokeinterface #497,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     367: astore        6
     369: aload         6
     371: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     376: ifeq          399
     379: aload         6
     381: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     386: checkcast     #499                // class org/apache/activemq/network/jms/JmsConnector
     389: astore        7
     391: aload         7
     393: invokevirtual #669                // Method org/apache/activemq/network/jms/JmsConnector.start:()V
     396: goto          369
     399: aload_0
     400: getfield      #27                 // Field services:Ljava/util/List;
     403: invokeinterface #160,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     408: astore        6
     410: aload         6
     412: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     417: ifeq          448
     420: aload         6
     422: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     427: checkcast     #232                // class org/apache/activemq/Service
     430: astore        7
     432: aload_0
     433: aload         7
     435: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
     438: aload         7
     440: invokeinterface #670,  1          // InterfaceMethod org/apache/activemq/Service.start:()V
     445: goto          410
     448: return

  protected org.apache.activemq.broker.TransportConnector startTransportConnector(org.apache.activemq.broker.TransportConnector) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #543                // Method getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
       5: invokevirtual #671                // Method org/apache/activemq/broker/TransportConnector.setTaskRunnerFactory:(Lorg/apache/activemq/thread/TaskRunnerFactory;)V
       8: aload_0
       9: invokevirtual #672                // Method getMessageAuthorizationPolicy:()Lorg/apache/activemq/security/MessageAuthorizationPolicy;
      12: astore_2
      13: aload_2
      14: ifnull        22
      17: aload_1
      18: aload_2
      19: invokevirtual #673                // Method org/apache/activemq/broker/TransportConnector.setMessageAuthorizationPolicy:(Lorg/apache/activemq/security/MessageAuthorizationPolicy;)V
      22: aload_0
      23: invokevirtual #118                // Method isUseJmx:()Z
      26: ifeq          35
      29: aload_0
      30: aload_1
      31: invokevirtual #674                // Method registerConnectorMBean:(Lorg/apache/activemq/broker/TransportConnector;)Lorg/apache/activemq/broker/TransportConnector;
      34: astore_1
      35: aload_1
      36: invokevirtual #675                // Method org/apache/activemq/broker/TransportConnector.getStatistics:()Lorg/apache/activemq/broker/region/ConnectorStatistics;
      39: aload_0
      40: getfield      #10                 // Field enableStatistics:Z
      43: invokevirtual #676                // Method org/apache/activemq/broker/region/ConnectorStatistics.setEnabled:(Z)V
      46: aload_1
      47: invokevirtual #677                // Method org/apache/activemq/broker/TransportConnector.start:()V
      50: aload_1
      51: areturn

  protected void configureServices(java.lang.Object[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
      26: iinc          4, 1
      29: goto          8
      32: return

  protected void configureService(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #678                // class org/apache/activemq/broker/BrokerServiceAware
       4: ifeq          19
       7: aload_1
       8: checkcast     #678                // class org/apache/activemq/broker/BrokerServiceAware
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokeinterface #679,  2          // InterfaceMethod org/apache/activemq/broker/BrokerServiceAware.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
      19: return

  public void handleIOException(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #210                // Field ioExceptionHandler:Lorg/apache/activemq/util/IOExceptionHandler;
       4: ifnull        20
       7: aload_0
       8: getfield      #210                // Field ioExceptionHandler:Lorg/apache/activemq/util/IOExceptionHandler;
      11: aload_1
      12: invokeinterface #680,  2          // InterfaceMethod org/apache/activemq/util/IOExceptionHandler.handle:(Ljava/io/IOException;)V
      17: goto          32
      20: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      23: ldc_w         #681                // String No IOExceptionHandler registered, ignoring IO exception
      26: aload_1
      27: invokeinterface #682,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: return

  protected void startVirtualConsumerDestinations() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #439                // Method getAdminConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
       4: astore_1
       5: aload_0
       6: getfield      #248                // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
       9: invokevirtual #683                // Method org/apache/activemq/broker/region/DestinationFactory.getDestinations:()Ljava/util/Set;
      12: astore_2
      13: aload_0
      14: invokespecial #684                // Method getVirtualTopicConsumerDestinationFilter:()Lorg/apache/activemq/filter/DestinationFilter;
      17: astore_3
      18: aload_2
      19: invokeinterface #685,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      24: ifne          84
      27: aload_2
      28: invokeinterface #259,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore        4
      35: aload         4
      37: invokeinterface #161,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          84
      45: aload         4
      47: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #262                // class org/apache/activemq/command/ActiveMQDestination
      55: astore        5
      57: aload_3
      58: aload         5
      60: invokevirtual #686                // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      63: iconst_1
      64: if_icmpne     81
      67: aload_0
      68: getfield      #132                // Field broker:Lorg/apache/activemq/broker/Broker;
      71: aload_1
      72: aload         5
      74: iconst_0
      75: invokeinterface #440,  4          // InterfaceMethod org/apache/activemq/broker/Broker.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      80: pop
      81: goto          35
      84: return

  private org.apache.activemq.filter.DestinationFilter getVirtualTopicConsumerDestinationFilter();
    Code:
       0: aload_0
       1: getfield      #687                // Field virtualConsumerDestinationFilter:Lorg/apache/activemq/filter/DestinationFilter;
       4: ifnonnull     183
       7: new           #688                // class java/util/HashSet
      10: dup
      11: invokespecial #689                // Method java/util/HashSet."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
      19: ifnull        150
      22: aload_0
      23: getfield      #247                // Field destinationInterceptors:[Lorg/apache/activemq/broker/region/DestinationInterceptor;
      26: astore_2
      27: aload_2
      28: arraylength
      29: istore_3
      30: iconst_0
      31: istore        4
      33: iload         4
      35: iload_3
      36: if_icmpge     150
      39: aload_2
      40: iload         4
      42: aaload
      43: astore        5
      45: aload         5
      47: instanceof    #564                // class org/apache/activemq/broker/region/virtual/VirtualDestinationInterceptor
      50: ifeq          144
      53: aload         5
      55: checkcast     #564                // class org/apache/activemq/broker/region/virtual/VirtualDestinationInterceptor
      58: astore        6
      60: aload         6
      62: invokevirtual #690                // Method org/apache/activemq/broker/region/virtual/VirtualDestinationInterceptor.getVirtualDestinations:()[Lorg/apache/activemq/broker/region/virtual/VirtualDestination;
      65: astore        7
      67: aload         7
      69: arraylength
      70: istore        8
      72: iconst_0
      73: istore        9
      75: iload         9
      77: iload         8
      79: if_icmpge     144
      82: aload         7
      84: iload         9
      86: aaload
      87: astore        10
      89: aload         10
      91: instanceof    #566                // class org/apache/activemq/broker/region/virtual/VirtualTopic
      94: ifeq          138
      97: aload_1
      98: new           #691                // class org/apache/activemq/command/ActiveMQQueue
     101: dup
     102: new           #72                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     109: aload         10
     111: checkcast     #566                // class org/apache/activemq/broker/region/virtual/VirtualTopic
     114: invokevirtual #692                // Method org/apache/activemq/broker/region/virtual/VirtualTopic.getPrefix:()Ljava/lang/String;
     117: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc_w         #693                // String >
     123: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokespecial #694                // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
     132: invokeinterface #695,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     137: pop
     138: iinc          9, 1
     141: goto          75
     144: iinc          4, 1
     147: goto          33
     150: new           #691                // class org/apache/activemq/command/ActiveMQQueue
     153: dup
     154: invokespecial #696                // Method org/apache/activemq/command/ActiveMQQueue."<init>":()V
     157: astore_2
     158: aload_2
     159: aload_1
     160: iconst_0
     161: anewarray     #262                // class org/apache/activemq/command/ActiveMQDestination
     164: invokeinterface #697,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     169: checkcast     #698                // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
     172: invokevirtual #699                // Method org/apache/activemq/command/ActiveMQQueue.setCompositeDestinations:([Lorg/apache/activemq/command/ActiveMQDestination;)V
     175: aload_0
     176: aload_2
     177: invokestatic  #700                // Method org/apache/activemq/filter/DestinationFilter.parseFilter:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/filter/DestinationFilter;
     180: putfield      #687                // Field virtualConsumerDestinationFilter:Lorg/apache/activemq/filter/DestinationFilter;
     183: aload_0
     184: getfield      #687                // Field virtualConsumerDestinationFilter:Lorg/apache/activemq/filter/DestinationFilter;
     187: areturn

  protected synchronized java.util.concurrent.ThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #245                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     50
       7: aload_0
       8: new           #649                // class java/util/concurrent/ThreadPoolExecutor
      11: dup
      12: iconst_1
      13: bipush        10
      15: ldc2_w        #701                // long 60l
      18: getstatic     #653                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      21: new           #703                // class java/util/concurrent/LinkedBlockingQueue
      24: dup
      25: invokespecial #704                // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      28: new           #705                // class org/apache/activemq/broker/BrokerService$9
      31: dup
      32: aload_0
      33: invokespecial #706                // Method org/apache/activemq/broker/BrokerService$9."<init>":(Lorg/apache/activemq/broker/BrokerService;)V
      36: new           #707                // class org/apache/activemq/broker/BrokerService$10
      39: dup
      40: aload_0
      41: invokespecial #708                // Method org/apache/activemq/broker/BrokerService$10."<init>":(Lorg/apache/activemq/broker/BrokerService;)V
      44: invokespecial #709                // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      47: putfield      #245                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      50: aload_0
      51: getfield      #245                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      54: areturn

  public synchronized org.apache.activemq.thread.Scheduler getScheduler();
    Code:
       0: aload_0
       1: getfield      #228                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
       4: ifnonnull     70
       7: aload_0
       8: new           #710                // class org/apache/activemq/thread/Scheduler
      11: dup
      12: new           #72                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc_w         #711                // String ActiveMQ Broker[
      22: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #76                 // Method getBrokerName:()Ljava/lang/String;
      29: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc_w         #712                // String ] Scheduler
      35: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #713                // Method org/apache/activemq/thread/Scheduler."<init>":(Ljava/lang/String;)V
      44: putfield      #228                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      47: aload_0
      48: getfield      #228                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      51: invokevirtual #714                // Method org/apache/activemq/thread/Scheduler.start:()V
      54: goto          70
      57: astore_1
      58: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      61: ldc_w         #715                // String Failed to start Scheduler
      64: aload_1
      65: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: aload_0
      71: getfield      #228                // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      74: areturn
    Exception table:
       from    to  target type
          47    54    57   Class java/lang/Exception

  public org.apache.activemq.broker.Broker getRegionBroker();
    Code:
       0: aload_0
       1: getfield      #205                // Field regionBroker:Lorg/apache/activemq/broker/Broker;
       4: areturn

  public void setRegionBroker(org.apache.activemq.broker.Broker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #205                // Field regionBroker:Lorg/apache/activemq/broker/Broker;
       5: return

  public void addShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #49                 // Field shutdownHooks:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #49                 // Field shutdownHooks:Ljava/util/List;
      11: aload_1
      12: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public void removeShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #49                 // Field shutdownHooks:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #49                 // Field shutdownHooks:Ljava/util/List;
      11: aload_1
      12: invokeinterface #89,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public boolean isSystemExitOnShutdown();
    Code:
       0: aload_0
       1: getfield      #152                // Field systemExitOnShutdown:Z
       4: ireturn

  public void setSystemExitOnShutdown(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #152                // Field systemExitOnShutdown:Z
       5: return

  public int getSystemExitOnShutdownExitCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field systemExitOnShutdownExitCode:I
       4: ireturn

  public void setSystemExitOnShutdownExitCode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field systemExitOnShutdownExitCode:I
       5: return

  public org.apache.activemq.broker.SslContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #716                // Field sslContext:Lorg/apache/activemq/broker/SslContext;
       4: areturn

  public void setSslContext(org.apache.activemq.broker.SslContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #716                // Field sslContext:Lorg/apache/activemq/broker/SslContext;
       5: return

  public boolean isShutdownOnSlaveFailure();
    Code:
       0: aload_0
       1: getfield      #717                // Field shutdownOnSlaveFailure:Z
       4: ireturn

  public void setShutdownOnSlaveFailure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #717                // Field shutdownOnSlaveFailure:Z
       5: return

  public boolean isWaitForSlave();
    Code:
       0: aload_0
       1: getfield      #718                // Field waitForSlave:Z
       4: ireturn

  public void setWaitForSlave(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #718                // Field waitForSlave:Z
       5: return

  public long getWaitForSlaveTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field waitForSlaveTimeout:J
       4: lreturn

  public void setWaitForSlaveTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field waitForSlaveTimeout:J
       5: return

  public boolean isPassiveSlave();
    Code:
       0: aload_0
       1: getfield      #719                // Field passiveSlave:Z
       4: ireturn

  public void setPassiveSlave(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #719                // Field passiveSlave:Z
       5: return

  public void setIoExceptionHandler(org.apache.activemq.util.IOExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #361                // Method configureService:(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: putfield      #210                // Field ioExceptionHandler:Lorg/apache/activemq/util/IOExceptionHandler;
      10: return

  public org.apache.activemq.util.IOExceptionHandler getIoExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #210                // Field ioExceptionHandler:Lorg/apache/activemq/util/IOExceptionHandler;
       4: areturn

  public boolean isSchedulerSupport();
    Code:
       0: aload_0
       1: getfield      #50                 // Field schedulerSupport:Z
       4: ifeq          25
       7: aload_0
       8: invokevirtual #363                // Method isPersistent:()Z
      11: ifne          21
      14: aload_0
      15: getfield      #237                // Field jobSchedulerStore:Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void setSchedulerSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field schedulerSupport:Z
       5: return

  public java.io.File getSchedulerDirectoryFile();
    Code:
       0: aload_0
       1: getfield      #720                // Field schedulerDirectoryFile:Ljava/io/File;
       4: ifnonnull     25
       7: aload_0
       8: new           #311                // class java/io/File
      11: dup
      12: aload_0
      13: invokevirtual #318                // Method getBrokerDataDirectory:()Ljava/io/File;
      16: ldc_w         #721                // String scheduler
      19: invokespecial #315                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      22: putfield      #720                // Field schedulerDirectoryFile:Ljava/io/File;
      25: aload_0
      26: getfield      #720                // Field schedulerDirectoryFile:Ljava/io/File;
      29: areturn

  public void setSchedulerDirectoryFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #720                // Field schedulerDirectoryFile:Ljava/io/File;
       5: return

  public void setSchedulerDirectory(java.lang.String);
    Code:
       0: aload_0
       1: new           #311                // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #313                // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: invokevirtual #722                // Method setSchedulerDirectoryFile:(Ljava/io/File;)V
      12: return

  public int getSchedulePeriodForDestinationPurge();
    Code:
       0: aload_0
       1: getfield      #51                 // Field schedulePeriodForDestinationPurge:I
       4: ireturn

  public void setSchedulePeriodForDestinationPurge(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field schedulePeriodForDestinationPurge:I
       5: return

  public int getMaxPurgedDestinationsPerSweep();
    Code:
       0: aload_0
       1: getfield      #52                 // Field maxPurgedDestinationsPerSweep:I
       4: ireturn

  public void setMaxPurgedDestinationsPerSweep(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field maxPurgedDestinationsPerSweep:I
       5: return

  public org.apache.activemq.broker.BrokerContext getBrokerContext();
    Code:
       0: aload_0
       1: getfield      #723                // Field brokerContext:Lorg/apache/activemq/broker/BrokerContext;
       4: areturn

  public void setBrokerContext(org.apache.activemq.broker.BrokerContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #723                // Field brokerContext:Lorg/apache/activemq/broker/BrokerContext;
       5: return

  public void setBrokerId(java.lang.String);
    Code:
       0: aload_0
       1: new           #724                // class org/apache/activemq/command/BrokerId
       4: dup
       5: aload_1
       6: invokespecial #725                // Method org/apache/activemq/command/BrokerId."<init>":(Ljava/lang/String;)V
       9: putfield      #171                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      12: return

  public boolean isUseAuthenticatedPrincipalForJMSXUserID();
    Code:
       0: aload_0
       1: getfield      #726                // Field useAuthenticatedPrincipalForJMSXUserID:Z
       4: ireturn

  public void setUseAuthenticatedPrincipalForJMSXUserID(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #726                // Field useAuthenticatedPrincipalForJMSXUserID:Z
       5: return

  public boolean isPopulateUserNameInMBeans();
    Code:
       0: aload_0
       1: getfield      #727                // Field populateUserNameInMBeans:Z
       4: ireturn

  public void setPopulateUserNameInMBeans(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #727                // Field populateUserNameInMBeans:Z
       5: return

  public long getMbeanInvocationTimeout();
    Code:
       0: aload_0
       1: getfield      #12                 // Field mbeanInvocationTimeout:J
       4: lreturn

  public void setMbeanInvocationTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #12                 // Field mbeanInvocationTimeout:J
       5: return

  public boolean isNetworkConnectorStartAsync();
    Code:
       0: aload_0
       1: getfield      #53                 // Field networkConnectorStartAsync:Z
       4: ireturn

  public void setNetworkConnectorStartAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field networkConnectorStartAsync:Z
       5: return

  public boolean isAllowTempAutoCreationOnSend();
    Code:
       0: aload_0
       1: getfield      #728                // Field allowTempAutoCreationOnSend:Z
       4: ireturn

  public void setAllowTempAutoCreationOnSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #728                // Field allowTempAutoCreationOnSend:Z
       5: return

  public long getOfflineDurableSubscriberTimeout();
    Code:
       0: aload_0
       1: getfield      #62                 // Field offlineDurableSubscriberTimeout:J
       4: lreturn

  public void setOfflineDurableSubscriberTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #62                 // Field offlineDurableSubscriberTimeout:J
       5: return

  public long getOfflineDurableSubscriberTaskSchedule();
    Code:
       0: aload_0
       1: getfield      #65                 // Field offlineDurableSubscriberTaskSchedule:J
       4: lreturn

  public void setOfflineDurableSubscriberTaskSchedule(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #65                 // Field offlineDurableSubscriberTaskSchedule:J
       5: return

  public boolean shouldRecordVirtualDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: invokevirtual #563                // Method isUseVirtualTopics:()Z
       4: ifeq          29
       7: aload_1
       8: invokevirtual #263                // Method org/apache/activemq/command/ActiveMQDestination.isQueue:()Z
      11: ifeq          29
      14: aload_0
      15: invokespecial #684                // Method getVirtualTopicConsumerDestinationFilter:()Lorg/apache/activemq/filter/DestinationFilter;
      18: aload_1
      19: invokevirtual #686                // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public java.lang.Throwable getStartException();
    Code:
       0: aload_0
       1: getfield      #6                  // Field startException:Ljava/lang/Throwable;
       4: areturn

  public boolean isStartAsync();
    Code:
       0: aload_0
       1: getfield      #67                 // Field startAsync:Z
       4: ireturn

  public void setStartAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field startAsync:Z
       5: return

  public boolean isSlave();
    Code:
       0: aload_0
       1: getfield      #68                 // Field slave:Z
       4: ireturn

  public boolean isStopping();
    Code:
       0: aload_0
       1: getfield      #33                 // Field stopping:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean isRestartAllowed();
    Code:
       0: aload_0
       1: getfield      #69                 // Field restartAllowed:Z
       4: ireturn

  public void setRestartAllowed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field restartAllowed:Z
       5: return

  public boolean isRestartRequested();
    Code:
       0: aload_0
       1: getfield      #70                 // Field restartRequested:Z
       4: ireturn

  public void requestRestart();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #70                 // Field restartRequested:Z
       5: return

  public int getStoreOpenWireVersion();
    Code:
       0: aload_0
       1: getfield      #71                 // Field storeOpenWireVersion:I
       4: ireturn

  public void setStoreOpenWireVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field storeOpenWireVersion:I
       5: return

  public int getCurrentConnections();
    Code:
       0: aload_0
       1: getfield      #59                 // Field currentConnections:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #729                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public long getTotalConnections();
    Code:
       0: aload_0
       1: getfield      #56                 // Field totalConnections:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #730                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void incrementCurrentConnections();
    Code:
       0: aload_0
       1: getfield      #59                 // Field currentConnections:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #731                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void decrementCurrentConnections();
    Code:
       0: aload_0
       1: getfield      #59                 // Field currentConnections:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #732                // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: return

  public void incrementTotalConnections();
    Code:
       0: aload_0
       1: getfield      #56                 // Field totalConnections:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #733                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  static void access$000(org.apache.activemq.broker.BrokerService) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #7                  // Method doStartPersistenceAdapter:()V
       4: return

  static java.lang.Throwable access$102(org.apache.activemq.broker.BrokerService, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field startException:Ljava/lang/Throwable;
       6: areturn

  static java.lang.Object access$200(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: getfield      #5                  // Field persistenceAdapterLock:Ljava/lang/Object;
       4: areturn

  static void access$300(org.apache.activemq.broker.BrokerService) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method doStartBroker:()V
       4: return

  static int access$400(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: getfield      #3                  // Field systemExitOnShutdownExitCode:I
       4: ireturn

  static boolean access$500(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: getfield      #2                  // Field forceStart:Z
       4: ireturn

  static org.slf4j.Logger access$600();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #734                // class org/apache/activemq/broker/BrokerService
       3: invokestatic  #735                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: ldc_w         #734                // class org/apache/activemq/broker/BrokerService
      12: invokevirtual #428                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      15: astore_0
      16: aload_0
      17: ldc_w         #736                // String org.bouncycastle.jce.provider.BouncyCastleProvider
      20: invokevirtual #429                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      23: astore_1
      24: aload_1
      25: invokevirtual #430                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      28: checkcast     #737                // class java/security/Provider
      31: astore_2
      32: aload_2
      33: iconst_2
      34: invokestatic  #738                // Method java/security/Security.insertProviderAt:(Ljava/security/Provider;I)I
      37: pop
      38: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      41: ldc_w         #739                // String Loaded the Bouncy Castle security provider.
      44: invokeinterface #216,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      49: goto          53
      52: astore_0
      53: ldc           #17                 // String localhost
      55: astore_0
      56: invokestatic  #740                // Method org/apache/activemq/util/InetAddressUtil.getLocalHostName:()Ljava/lang/String;
      59: astore_0
      60: goto          75
      63: astore_1
      64: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      67: ldc_w         #742                // String Failed to resolve localhost
      70: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      75: aload_0
      76: putstatic     #437                // Field LOCAL_HOST_NAME:Ljava/lang/String;
      79: aconst_null
      80: astore_1
      81: aconst_null
      82: astore_2
      83: ldc_w         #734                // class org/apache/activemq/broker/BrokerService
      86: ldc_w         #743                // String /org/apache/activemq/version.txt
      89: invokevirtual #744                // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      92: dup
      93: astore_1
      94: ifnull        123
      97: new           #745                // class java/io/BufferedReader
     100: dup
     101: new           #746                // class java/io/InputStreamReader
     104: dup
     105: aload_1
     106: invokespecial #747                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
     109: invokespecial #748                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     112: astore_3
     113: aload_3
     114: invokevirtual #749                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     117: astore_2
     118: goto          123
     121: astore        4
     123: aload_2
     124: putstatic     #80                 // Field BROKER_VERSION:Ljava/lang/String;
     127: return
    Exception table:
       from    to  target type
           9    49    52   Class java/lang/Throwable
          56    60    63   Class java/net/UnknownHostException
         113   118   121   Class java/lang/Exception
}
