Compiled from "RegionBroker.java"
public class org.apache.activemq.broker.region.RegionBroker extends org.apache.activemq.broker.EmptyBroker {
  public static final java.lang.String ORIGINAL_EXPIRATION;

  private static final org.slf4j.Logger LOG;

  private static final org.apache.activemq.util.IdGenerator BROKER_ID_GENERATOR;

  protected final org.apache.activemq.broker.region.DestinationStatistics destinationStatistics;

  protected org.apache.activemq.broker.region.DestinationFactory destinationFactory;

  protected final java.util.Map<org.apache.activemq.command.ConnectionId, org.apache.activemq.state.ConnectionState> connectionStates;

  private final org.apache.activemq.broker.region.Region queueRegion;

  private final org.apache.activemq.broker.region.Region topicRegion;

  private final org.apache.activemq.broker.region.Region tempQueueRegion;

  private final org.apache.activemq.broker.region.Region tempTopicRegion;

  protected final org.apache.activemq.broker.BrokerService brokerService;

  private boolean started;

  private boolean keepDurableSubsActive;

  private final java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.broker.Connection> connections;

  private final java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.ActiveMQDestination> destinationGate;

  private final java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.region.Destination> destinations;

  private final java.util.Map<org.apache.activemq.command.BrokerId, org.apache.activemq.command.BrokerInfo> brokerInfos;

  private final org.apache.activemq.util.LongSequenceGenerator sequenceGenerator;

  private org.apache.activemq.command.BrokerId brokerId;

  private java.lang.String brokerName;

  private final java.util.Map<java.lang.String, org.apache.activemq.broker.ConnectionContext> clientIdSet;

  private final org.apache.activemq.broker.region.DestinationInterceptor destinationInterceptor;

  private org.apache.activemq.broker.ConnectionContext adminConnectionContext;

  private final org.apache.activemq.thread.Scheduler scheduler;

  private final java.util.concurrent.ThreadPoolExecutor executor;

  private boolean allowTempAutoCreationOnSend;

  private final java.util.concurrent.locks.ReentrantReadWriteLock inactiveDestinationsPurgeLock;

  private final java.lang.Runnable purgeInactiveDestinationsTask;

  public org.apache.activemq.broker.region.RegionBroker(org.apache.activemq.broker.BrokerService, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.usage.SystemUsage, org.apache.activemq.broker.region.DestinationFactory, org.apache.activemq.broker.region.DestinationInterceptor, org.apache.activemq.thread.Scheduler, java.util.concurrent.ThreadPoolExecutor) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/broker/EmptyBroker."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/activemq/broker/region/DestinationStatistics
       8: dup
       9: invokespecial #3                  // Method org/apache/activemq/broker/region/DestinationStatistics."<init>":()V
      12: putfield      #4                  // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: invokestatic  #7                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putfield      #8                  // Field connectionStates:Ljava/util/Map;
      29: aload_0
      30: new           #9                  // class java/util/concurrent/CopyOnWriteArrayList
      33: dup
      34: invokespecial #10                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      37: putfield      #11                 // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
      40: aload_0
      41: new           #5                  // class java/util/HashMap
      44: dup
      45: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      48: putfield      #12                 // Field destinationGate:Ljava/util/Map;
      51: aload_0
      52: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      55: dup
      56: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      59: putfield      #15                 // Field destinations:Ljava/util/Map;
      62: aload_0
      63: new           #5                  // class java/util/HashMap
      66: dup
      67: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      70: putfield      #16                 // Field brokerInfos:Ljava/util/Map;
      73: aload_0
      74: new           #17                 // class org/apache/activemq/util/LongSequenceGenerator
      77: dup
      78: invokespecial #18                 // Method org/apache/activemq/util/LongSequenceGenerator."<init>":()V
      81: putfield      #19                 // Field sequenceGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      84: aload_0
      85: new           #5                  // class java/util/HashMap
      88: dup
      89: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      92: putfield      #20                 // Field clientIdSet:Ljava/util/Map;
      95: aload_0
      96: new           #21                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      99: dup
     100: invokespecial #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
     103: putfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     106: aload_0
     107: new           #24                 // class org/apache/activemq/broker/region/RegionBroker$1
     110: dup
     111: aload_0
     112: invokespecial #25                 // Method org/apache/activemq/broker/region/RegionBroker$1."<init>":(Lorg/apache/activemq/broker/region/RegionBroker;)V
     115: putfield      #26                 // Field purgeInactiveDestinationsTask:Ljava/lang/Runnable;
     118: aload_0
     119: aload_1
     120: putfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     123: aload_0
     124: aload         7
     126: putfield      #28                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     129: aload_0
     130: aload         6
     132: putfield      #29                 // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
     135: aload         4
     137: ifnonnull     150
     140: new           #30                 // class java/lang/IllegalArgumentException
     143: dup
     144: ldc           #31                 // String null destinationFactory
     146: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: aload_0
     151: getfield      #19                 // Field sequenceGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
     154: aload         4
     156: invokevirtual #33                 // Method org/apache/activemq/broker/region/DestinationFactory.getLastMessageBrokerSequenceId:()J
     159: invokevirtual #34                 // Method org/apache/activemq/util/LongSequenceGenerator.setLastSequenceId:(J)V
     162: aload_0
     163: aload         4
     165: putfield      #35                 // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
     168: aload_0
     169: aload_0
     170: aload_3
     171: aload_2
     172: aload         4
     174: invokevirtual #36                 // Method createQueueRegion:(Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)Lorg/apache/activemq/broker/region/Region;
     177: putfield      #37                 // Field queueRegion:Lorg/apache/activemq/broker/region/Region;
     180: aload_0
     181: aload_0
     182: aload_3
     183: aload_2
     184: aload         4
     186: invokevirtual #38                 // Method createTopicRegion:(Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)Lorg/apache/activemq/broker/region/Region;
     189: putfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
     192: aload_0
     193: aload         5
     195: putfield      #40                 // Field destinationInterceptor:Lorg/apache/activemq/broker/region/DestinationInterceptor;
     198: aload_0
     199: aload_0
     200: aload_3
     201: aload_2
     202: aload         4
     204: invokevirtual #41                 // Method createTempQueueRegion:(Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)Lorg/apache/activemq/broker/region/Region;
     207: putfield      #42                 // Field tempQueueRegion:Lorg/apache/activemq/broker/region/Region;
     210: aload_0
     211: aload_0
     212: aload_3
     213: aload_2
     214: aload         4
     216: invokevirtual #43                 // Method createTempTopicRegion:(Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)Lorg/apache/activemq/broker/region/Region;
     219: putfield      #44                 // Field tempTopicRegion:Lorg/apache/activemq/broker/region/Region;
     222: return

  public java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.region.Destination> getDestinationMap();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokevirtual #45                 // Method getQueueRegion:()Lorg/apache/activemq/broker/region/Region;
       8: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.getDestinationMap:()Ljava/util/Map;
      13: invokespecial #47                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      16: astore_1
      17: aload_1
      18: aload_0
      19: invokevirtual #48                 // Method getTopicRegion:()Lorg/apache/activemq/broker/region/Region;
      22: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.getDestinationMap:()Ljava/util/Map;
      27: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      32: aload_1
      33: areturn

  public java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.region.Destination> getDestinationMap(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
       5: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.getDestinationMap:()Ljava/util/Map;
      10: areturn
      11: astore_2
      12: invokestatic  #52                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      15: areturn
    Exception table:
       from    to  target type
           0    10    11   Class javax/jms/JMSException

  public java.util.Set<org.apache.activemq.broker.region.Destination> getDestinations(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
       5: aload_1
       6: invokeinterface #53,  2           // InterfaceMethod org/apache/activemq/broker/region/Region.getDestinations:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      11: areturn
      12: astore_2
      13: invokestatic  #54                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      16: areturn
    Exception table:
       from    to  target type
           0    11    12   Class javax/jms/JMSException

  public org.apache.activemq.broker.Broker getAdaptor(java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #55                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: aload_0
       9: areturn
      10: aconst_null
      11: areturn

  public org.apache.activemq.broker.region.Region getQueueRegion();
    Code:
       0: aload_0
       1: getfield      #37                 // Field queueRegion:Lorg/apache/activemq/broker/region/Region;
       4: areturn

  public org.apache.activemq.broker.region.Region getTempQueueRegion();
    Code:
       0: aload_0
       1: getfield      #42                 // Field tempQueueRegion:Lorg/apache/activemq/broker/region/Region;
       4: areturn

  public org.apache.activemq.broker.region.Region getTempTopicRegion();
    Code:
       0: aload_0
       1: getfield      #44                 // Field tempTopicRegion:Lorg/apache/activemq/broker/region/Region;
       4: areturn

  public org.apache.activemq.broker.region.Region getTopicRegion();
    Code:
       0: aload_0
       1: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
       4: areturn

  protected org.apache.activemq.broker.region.Region createTempTopicRegion(org.apache.activemq.usage.SystemUsage, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.broker.region.DestinationFactory);
    Code:
       0: new           #56                 // class org/apache/activemq/broker/region/TempTopicRegion
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokespecial #57                 // Method org/apache/activemq/broker/region/TempTopicRegion."<init>":(Lorg/apache/activemq/broker/region/RegionBroker;Lorg/apache/activemq/broker/region/DestinationStatistics;Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)V
      15: areturn

  protected org.apache.activemq.broker.region.Region createTempQueueRegion(org.apache.activemq.usage.SystemUsage, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.broker.region.DestinationFactory);
    Code:
       0: new           #58                 // class org/apache/activemq/broker/region/TempQueueRegion
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokespecial #59                 // Method org/apache/activemq/broker/region/TempQueueRegion."<init>":(Lorg/apache/activemq/broker/region/RegionBroker;Lorg/apache/activemq/broker/region/DestinationStatistics;Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)V
      15: areturn

  protected org.apache.activemq.broker.region.Region createTopicRegion(org.apache.activemq.usage.SystemUsage, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.broker.region.DestinationFactory);
    Code:
       0: new           #60                 // class org/apache/activemq/broker/region/TopicRegion
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokespecial #61                 // Method org/apache/activemq/broker/region/TopicRegion."<init>":(Lorg/apache/activemq/broker/region/RegionBroker;Lorg/apache/activemq/broker/region/DestinationStatistics;Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)V
      15: areturn

  protected org.apache.activemq.broker.region.Region createQueueRegion(org.apache.activemq.usage.SystemUsage, org.apache.activemq.thread.TaskRunnerFactory, org.apache.activemq.broker.region.DestinationFactory);
    Code:
       0: new           #62                 // class org/apache/activemq/broker/region/QueueRegion
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokespecial #63                 // Method org/apache/activemq/broker/region/QueueRegion."<init>":(Lorg/apache/activemq/broker/region/RegionBroker;Lorg/apache/activemq/broker/region/DestinationStatistics;Lorg/apache/activemq/usage/SystemUsage;Lorg/apache/activemq/thread/TaskRunnerFactory;Lorg/apache/activemq/broker/region/DestinationFactory;)V
      15: areturn

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #64                 // Field started:Z
       5: aload_0
       6: getfield      #37                 // Field queueRegion:Lorg/apache/activemq/broker/region/Region;
       9: invokeinterface #65,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.start:()V
      14: aload_0
      15: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
      18: invokeinterface #65,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.start:()V
      23: aload_0
      24: getfield      #42                 // Field tempQueueRegion:Lorg/apache/activemq/broker/region/Region;
      27: invokeinterface #65,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.start:()V
      32: aload_0
      33: getfield      #44                 // Field tempTopicRegion:Lorg/apache/activemq/broker/region/Region;
      36: invokeinterface #65,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.start:()V
      41: aload_0
      42: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      45: invokevirtual #66                 // Method org/apache/activemq/broker/BrokerService.getSchedulePeriodForDestinationPurge:()I
      48: istore_1
      49: iload_1
      50: ifle          66
      53: aload_0
      54: getfield      #29                 // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      57: aload_0
      58: getfield      #26                 // Field purgeInactiveDestinationsTask:Ljava/lang/Runnable;
      61: iload_1
      62: i2l
      63: invokevirtual #67                 // Method org/apache/activemq/thread/Scheduler.executePeriodically:(Ljava/lang/Runnable;J)V
      66: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #64                 // Field started:Z
       5: aload_0
       6: getfield      #29                 // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
       9: aload_0
      10: getfield      #26                 // Field purgeInactiveDestinationsTask:Ljava/lang/Runnable;
      13: invokevirtual #68                 // Method org/apache/activemq/thread/Scheduler.cancel:(Ljava/lang/Runnable;)V
      16: new           #69                 // class org/apache/activemq/util/ServiceStopper
      19: dup
      20: invokespecial #70                 // Method org/apache/activemq/util/ServiceStopper."<init>":()V
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokevirtual #71                 // Method doStop:(Lorg/apache/activemq/util/ServiceStopper;)V
      29: aload_1
      30: invokevirtual #72                 // Method org/apache/activemq/util/ServiceStopper.throwFirstException:()V
      33: aload_0
      34: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
      37: invokeinterface #73,  1           // InterfaceMethod java/util/Map.clear:()V
      42: aload_0
      43: getfield      #11                 // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
      46: invokevirtual #74                 // Method java/util/concurrent/CopyOnWriteArrayList.clear:()V
      49: aload_0
      50: getfield      #15                 // Field destinations:Ljava/util/Map;
      53: invokeinterface #73,  1           // InterfaceMethod java/util/Map.clear:()V
      58: aload_0
      59: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
      62: invokeinterface #73,  1           // InterfaceMethod java/util/Map.clear:()V
      67: return

  public org.apache.activemq.broker.region.policy.PolicyMap getDestinationPolicy();
    Code:
       0: aload_0
       1: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: ifnull        17
       7: aload_0
       8: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      11: invokevirtual #75                 // Method org/apache/activemq/broker/BrokerService.getDestinationPolicy:()Lorg/apache/activemq/broker/region/policy/PolicyMap;
      14: goto          18
      17: aconst_null
      18: areturn

  public org.apache.activemq.broker.ConnectionContext getConnectionContext(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #77                 // class org/apache/activemq/broker/ConnectionContext
      13: areturn

  public void addConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #78                 // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ifnonnull     19
       9: new           #79                 // class javax/jms/InvalidClientIDException
      12: dup
      13: ldc           #80                 // String No clientID specified for connection request
      15: invokespecial #81                 // Method javax/jms/InvalidClientIDException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
      23: dup
      24: astore        4
      26: monitorenter
      27: aload_0
      28: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
      31: aload_3
      32: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #77                 // class org/apache/activemq/broker/ConnectionContext
      40: astore        5
      42: aload         5
      44: ifnull        201
      47: aload_1
      48: invokevirtual #82                 // Method org/apache/activemq/broker/ConnectionContext.isAllowLinkStealing:()Z
      51: ifeq          144
      54: aload_0
      55: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
      58: aload_3
      59: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload         5
      67: invokevirtual #84                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
      70: ifnull        129
      73: aload         5
      75: invokevirtual #84                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
      78: astore        6
      80: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
      83: ldc           #86                 // String Stealing link for clientId {} From Connection {}
      85: aload_3
      86: aload         5
      88: invokevirtual #84                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
      91: invokeinterface #87,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      96: aload         6
      98: instanceof    #88                 // class org/apache/activemq/broker/TransportConnection
     101: ifeq          119
     104: aload         6
     106: checkcast     #88                 // class org/apache/activemq/broker/TransportConnection
     109: astore        7
     111: aload         7
     113: invokevirtual #89                 // Method org/apache/activemq/broker/TransportConnection.stopAsync:()V
     116: goto          126
     119: aload         6
     121: invokeinterface #90,  1           // InterfaceMethod org/apache/activemq/broker/Connection.stop:()V
     126: goto          213
     129: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
     132: ldc           #91                 // String Not Connection for {}
     134: aload         5
     136: invokeinterface #92,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     141: goto          213
     144: new           #79                 // class javax/jms/InvalidClientIDException
     147: dup
     148: new           #93                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #95                 // String Broker:
     157: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_0
     161: invokevirtual #97                 // Method getBrokerName:()Ljava/lang/String;
     164: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: ldc           #98                 // String  - Client:
     169: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_3
     173: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: ldc           #99                 // String  already connected from
     178: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload         5
     183: invokevirtual #84                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     186: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/broker/Connection.getRemoteAddress:()Ljava/lang/String;
     191: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     197: invokespecial #81                 // Method javax/jms/InvalidClientIDException."<init>":(Ljava/lang/String;)V
     200: athrow
     201: aload_0
     202: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
     205: aload_3
     206: aload_1
     207: invokeinterface #102,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     212: pop
     213: aload         4
     215: monitorexit
     216: goto          227
     219: astore        8
     221: aload         4
     223: monitorexit
     224: aload         8
     226: athrow
     227: aload_0
     228: getfield      #11                 // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
     231: aload_1
     232: invokevirtual #84                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     235: invokevirtual #103                // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
     238: pop
     239: return
    Exception table:
       from    to  target type
          27   216   219   any
         219   224   219   any

  public void removeConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #78                 // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
       4: astore        4
       6: aload         4
       8: ifnonnull     21
      11: new           #79                 // class javax/jms/InvalidClientIDException
      14: dup
      15: ldc           #104                // String No clientID specified for connection disconnect request
      17: invokespecial #81                 // Method javax/jms/InvalidClientIDException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
      25: dup
      26: astore        5
      28: monitorenter
      29: aload_0
      30: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
      33: aload         4
      35: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #77                 // class org/apache/activemq/broker/ConnectionContext
      43: astore        6
      45: aload         6
      47: aload_1
      48: if_acmpne     79
      51: aload_0
      52: aload         6
      54: invokevirtual #105                // Method org/apache/activemq/broker/ConnectionContext.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      57: aload_2
      58: invokevirtual #106                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      61: invokevirtual #107                // Method isEqual:(Lorg/apache/activemq/command/ConnectionId;Lorg/apache/activemq/command/ConnectionId;)Z
      64: ifeq          79
      67: aload_0
      68: getfield      #20                 // Field clientIdSet:Ljava/util/Map;
      71: aload         4
      73: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload         5
      81: monitorexit
      82: goto          93
      85: astore        7
      87: aload         5
      89: monitorexit
      90: aload         7
      92: athrow
      93: aload_0
      94: getfield      #11                 // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
      97: aload_1
      98: invokevirtual #84                 // Method org/apache/activemq/broker/ConnectionContext.getConnection:()Lorg/apache/activemq/broker/Connection;
     101: invokevirtual #108                // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
     104: pop
     105: return
    Exception table:
       from    to  target type
          29    82    85   any
          85    90    85   any

  protected boolean isEqual(org.apache.activemq.command.ConnectionId, org.apache.activemq.command.ConnectionId);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpeq     17
       5: aload_1
       6: ifnull        21
       9: aload_1
      10: aload_2
      11: invokevirtual #109                // Method org/apache/activemq/command/ConnectionId.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.apache.activemq.broker.Connection[] getClients() throws java.lang.Exception;
    Code:
       0: new           #110                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #11                 // Field connections:Ljava/util/concurrent/CopyOnWriteArrayList;
       8: invokespecial #111                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_1
      13: invokevirtual #112                // Method java/util/ArrayList.size:()I
      16: anewarray     #113                // class org/apache/activemq/broker/Connection
      19: astore_2
      20: aload_1
      21: aload_2
      22: invokevirtual #114                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      25: pop
      26: aload_2
      27: areturn

  public org.apache.activemq.broker.region.Destination addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field destinations:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #115                // class org/apache/activemq/broker/region/Destination
      13: astore        4
      15: aload         4
      17: ifnull        23
      20: aload         4
      22: areturn
      23: aload_0
      24: getfield      #12                 // Field destinationGate:Ljava/util/Map;
      27: dup
      28: astore        5
      30: monitorenter
      31: aload_0
      32: getfield      #15                 // Field destinations:Ljava/util/Map;
      35: aload_2
      36: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #115                // class org/apache/activemq/broker/region/Destination
      44: astore        4
      46: aload         4
      48: ifnull        57
      51: aload         4
      53: aload         5
      55: monitorexit
      56: areturn
      57: aload_0
      58: getfield      #12                 // Field destinationGate:Ljava/util/Map;
      61: aload_2
      62: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: ifnull        131
      70: aload_0
      71: getfield      #12                 // Field destinationGate:Ljava/util/Map;
      74: aload_2
      75: invokeinterface #116,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      80: ifeq          93
      83: aload_0
      84: getfield      #12                 // Field destinationGate:Ljava/util/Map;
      87: invokevirtual #117                // Method java/lang/Object.wait:()V
      90: goto          70
      93: aload_0
      94: getfield      #15                 // Field destinations:Ljava/util/Map;
      97: aload_2
      98: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #115                // class org/apache/activemq/broker/region/Destination
     106: astore        4
     108: aload         4
     110: ifnull        119
     113: aload         4
     115: aload         5
     117: monitorexit
     118: areturn
     119: aload_0
     120: getfield      #12                 // Field destinationGate:Ljava/util/Map;
     123: aload_2
     124: aload_2
     125: invokeinterface #102,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload         5
     133: monitorexit
     134: goto          145
     137: astore        6
     139: aload         5
     141: monitorexit
     142: aload         6
     144: athrow
     145: iconst_1
     146: istore        5
     148: aload_2
     149: invokevirtual #118                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
     152: ifeq          158
     155: iload_3
     156: istore        5
     158: aload_0
     159: aload_2
     160: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
     163: aload_1
     164: aload_2
     165: iload         5
     167: invokeinterface #119,  4          // InterfaceMethod org/apache/activemq/broker/region/Region.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
     172: astore        4
     174: aload_0
     175: getfield      #15                 // Field destinations:Ljava/util/Map;
     178: aload_2
     179: aload         4
     181: invokeinterface #102,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     186: pop
     187: aload_0
     188: getfield      #12                 // Field destinationGate:Ljava/util/Map;
     191: dup
     192: astore        5
     194: monitorenter
     195: aload_0
     196: getfield      #12                 // Field destinationGate:Ljava/util/Map;
     199: aload_2
     200: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     205: pop
     206: aload_0
     207: getfield      #12                 // Field destinationGate:Ljava/util/Map;
     210: invokevirtual #120                // Method java/lang/Object.notifyAll:()V
     213: aload         5
     215: monitorexit
     216: goto          227
     219: astore        7
     221: aload         5
     223: monitorexit
     224: aload         7
     226: athrow
     227: goto          275
     230: astore        8
     232: aload_0
     233: getfield      #12                 // Field destinationGate:Ljava/util/Map;
     236: dup
     237: astore        9
     239: monitorenter
     240: aload_0
     241: getfield      #12                 // Field destinationGate:Ljava/util/Map;
     244: aload_2
     245: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     250: pop
     251: aload_0
     252: getfield      #12                 // Field destinationGate:Ljava/util/Map;
     255: invokevirtual #120                // Method java/lang/Object.notifyAll:()V
     258: aload         9
     260: monitorexit
     261: goto          272
     264: astore        10
     266: aload         9
     268: monitorexit
     269: aload         10
     271: athrow
     272: aload         8
     274: athrow
     275: aload         4
     277: areturn
    Exception table:
       from    to  target type
          31    56   137   any
          57   118   137   any
         119   134   137   any
         137   142   137   any
         195   216   219   any
         219   224   219   any
         145   187   230   any
         240   261   264   any
         264   269   264   any
         230   232   230   any

  public void removeDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field destinations:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #116,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          37
      13: aload_0
      14: aload_2
      15: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      18: aload_1
      19: aload_2
      20: lload_3
      21: invokeinterface #121,  5          // InterfaceMethod org/apache/activemq/broker/region/Region.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
      26: aload_0
      27: getfield      #15                 // Field destinations:Ljava/util/Map;
      30: aload_2
      31: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: return

  public void addDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #122                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       6: iconst_1
       7: invokevirtual #123                // Method addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      10: pop
      11: return

  public void removeDestinationInfo(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.DestinationInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #122                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       6: aload_2
       7: invokevirtual #124                // Method org/apache/activemq/command/DestinationInfo.getTimeout:()J
      10: invokevirtual #125                // Method removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
      13: return

  public org.apache.activemq.command.ActiveMQDestination[] getDestinations() throws java.lang.Exception;
    Code:
       0: new           #110                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #126                // Method getDestinationMap:()Ljava/util/Map;
       8: invokeinterface #127,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #111                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_1
      18: invokevirtual #112                // Method java/util/ArrayList.size:()I
      21: anewarray     #128                // class org/apache/activemq/command/ActiveMQDestination
      24: astore_2
      25: aload_1
      26: aload_2
      27: invokevirtual #114                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      30: pop
      31: aload_2
      32: areturn

  public void addProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #129                // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_3
       6: ifnull        75
       9: aload_0
      10: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      13: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      16: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      19: aload_1
      20: invokevirtual #132                // Method org/apache/activemq/broker/ConnectionContext.getBroker:()Lorg/apache/activemq/broker/Broker;
      23: aload_1
      24: aload_3
      25: aload_0
      26: invokevirtual #133                // Method isAllowTempAutoCreationOnSend:()Z
      29: invokeinterface #134,  4          // InterfaceMethod org/apache/activemq/broker/Broker.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      34: pop
      35: aload_0
      36: aload_3
      37: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      40: aload_1
      41: aload_2
      42: invokeinterface #135,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.addProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      47: aload_0
      48: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      51: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      54: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      57: goto          75
      60: astore        4
      62: aload_0
      63: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      66: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      69: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      72: aload         4
      74: athrow
      75: return
    Exception table:
       from    to  target type
          19    47    60   any
          60    62    60   any

  public void removeProducer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ProducerInfo) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #129                // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_3
       6: ifnull        59
       9: aload_0
      10: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      13: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      16: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      19: aload_0
      20: aload_3
      21: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      24: aload_1
      25: aload_2
      26: invokeinterface #137,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.removeProducer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ProducerInfo;)V
      31: aload_0
      32: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      35: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      38: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      41: goto          59
      44: astore        4
      46: aload_0
      47: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      50: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      53: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      56: aload         4
      58: athrow
      59: return
    Exception table:
       from    to  target type
          19    31    44   any
          44    46    44   any

  public org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #138                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_0
       6: getfield      #40                 // Field destinationInterceptor:Lorg/apache/activemq/broker/region/DestinationInterceptor;
       9: ifnull        24
      12: aload_0
      13: getfield      #40                 // Field destinationInterceptor:Lorg/apache/activemq/broker/region/DestinationInterceptor;
      16: aload_0
      17: aload_1
      18: aload_3
      19: invokeinterface #139,  4          // InterfaceMethod org/apache/activemq/broker/region/DestinationInterceptor.create:(Lorg/apache/activemq/broker/Broker;Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;)V
      24: aload_0
      25: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      28: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      31: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      34: aload_0
      35: aload_3
      36: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      39: aload_1
      40: aload_2
      41: invokeinterface #140,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.addConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/broker/region/Subscription;
      46: astore        4
      48: aload_0
      49: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      52: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      55: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      58: aload         4
      60: areturn
      61: astore        5
      63: aload_0
      64: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      67: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      70: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      73: aload         5
      75: athrow
    Exception table:
       from    to  target type
          34    48    61   any
          61    63    61   any

  public void removeConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #138                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_0
       6: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       9: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      12: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      15: aload_0
      16: aload_3
      17: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      20: aload_1
      21: aload_2
      22: invokeinterface #141,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.removeConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)V
      27: aload_0
      28: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      34: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      37: goto          55
      40: astore        4
      42: aload_0
      43: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      46: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      49: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      52: aload         4
      54: athrow
      55: return
    Exception table:
       from    to  target type
          15    27    40   any
          40    42    40   any

  public void removeSubscription(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.RemoveSubscriptionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #131                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
      14: aload_1
      15: aload_2
      16: invokeinterface #142,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.removeSubscription:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/RemoveSubscriptionInfo;)V
      21: aload_0
      22: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      25: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      28: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      31: goto          47
      34: astore_3
      35: aload_0
      36: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      39: invokevirtual #130                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      42: invokevirtual #136                // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      45: aload_3
      46: athrow
      47: return
    Exception table:
       from    to  target type
          10    21    34   any
          34    35    34   any

  public void send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #143                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_2
       6: invokestatic  #144                // Method java/lang/System.currentTimeMillis:()J
       9: invokevirtual #145                // Method org/apache/activemq/command/Message.setBrokerInTime:(J)V
      12: aload_1
      13: invokevirtual #146                // Method org/apache/activemq/broker/ProducerBrokerExchange.isMutable:()Z
      16: ifne          45
      19: aload_1
      20: invokevirtual #147                // Method org/apache/activemq/broker/ProducerBrokerExchange.getRegion:()Lorg/apache/activemq/broker/region/Region;
      23: ifnull        45
      26: aload_1
      27: invokevirtual #148                // Method org/apache/activemq/broker/ProducerBrokerExchange.getRegionDestination:()Lorg/apache/activemq/broker/region/Destination;
      30: ifnull        81
      33: aload_1
      34: invokevirtual #148                // Method org/apache/activemq/broker/ProducerBrokerExchange.getRegionDestination:()Lorg/apache/activemq/broker/region/Destination;
      37: invokeinterface #149,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.isDisposed:()Z
      42: ifeq          81
      45: aload_1
      46: invokevirtual #150                // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
      49: invokevirtual #132                // Method org/apache/activemq/broker/ConnectionContext.getBroker:()Lorg/apache/activemq/broker/Broker;
      52: aload_1
      53: invokevirtual #150                // Method org/apache/activemq/broker/ProducerBrokerExchange.getConnectionContext:()Lorg/apache/activemq/broker/ConnectionContext;
      56: aload_3
      57: aload_0
      58: invokevirtual #133                // Method isAllowTempAutoCreationOnSend:()Z
      61: invokeinterface #134,  4          // InterfaceMethod org/apache/activemq/broker/Broker.addDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;Z)Lorg/apache/activemq/broker/region/Destination;
      66: pop
      67: aload_1
      68: aload_0
      69: aload_3
      70: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      73: invokevirtual #151                // Method org/apache/activemq/broker/ProducerBrokerExchange.setRegion:(Lorg/apache/activemq/broker/region/Region;)V
      76: aload_1
      77: aconst_null
      78: invokevirtual #152                // Method org/apache/activemq/broker/ProducerBrokerExchange.setRegionDestination:(Lorg/apache/activemq/broker/region/Destination;)V
      81: aload_1
      82: invokevirtual #147                // Method org/apache/activemq/broker/ProducerBrokerExchange.getRegion:()Lorg/apache/activemq/broker/region/Region;
      85: aload_1
      86: aload_2
      87: invokeinterface #153,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.send:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      92: aload_1
      93: invokevirtual #146                // Method org/apache/activemq/broker/ProducerBrokerExchange.isMutable:()Z
      96: ifeq          109
      99: aload_1
     100: aconst_null
     101: invokevirtual #152                // Method org/apache/activemq/broker/ProducerBrokerExchange.setRegionDestination:(Lorg/apache/activemq/broker/region/Destination;)V
     104: aload_1
     105: aconst_null
     106: invokevirtual #151                // Method org/apache/activemq/broker/ProducerBrokerExchange.setRegion:(Lorg/apache/activemq/broker/region/Region;)V
     109: return

  public void acknowledge(org.apache.activemq.broker.ConsumerBrokerExchange, org.apache.activemq.command.MessageAck) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #154                // Method org/apache/activemq/broker/ConsumerBrokerExchange.isWildcard:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #155                // Method org/apache/activemq/broker/ConsumerBrokerExchange.getRegion:()Lorg/apache/activemq/broker/region/Region;
      11: ifnonnull     28
      14: aload_2
      15: invokevirtual #156                // Method org/apache/activemq/command/MessageAck.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      18: astore_3
      19: aload_1
      20: aload_0
      21: aload_3
      22: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      25: invokevirtual #157                // Method org/apache/activemq/broker/ConsumerBrokerExchange.setRegion:(Lorg/apache/activemq/broker/region/Region;)V
      28: aload_1
      29: invokevirtual #155                // Method org/apache/activemq/broker/ConsumerBrokerExchange.getRegion:()Lorg/apache/activemq/broker/region/Region;
      32: aload_1
      33: aload_2
      34: invokeinterface #158,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.acknowledge:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/MessageAck;)V
      39: return

  protected org.apache.activemq.broker.region.Region getRegion(org.apache.activemq.command.ActiveMQDestination) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokevirtual #159                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
       4: tableswitch   { // 1 to 6
                     1: 44
                     2: 49
                     3: 64
                     4: 64
                     5: 54
                     6: 59
               default: 64
          }
      44: aload_0
      45: getfield      #37                 // Field queueRegion:Lorg/apache/activemq/broker/region/Region;
      48: areturn
      49: aload_0
      50: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
      53: areturn
      54: aload_0
      55: getfield      #42                 // Field tempQueueRegion:Lorg/apache/activemq/broker/region/Region;
      58: areturn
      59: aload_0
      60: getfield      #44                 // Field tempTopicRegion:Lorg/apache/activemq/broker/region/Region;
      63: areturn
      64: aload_0
      65: aload_1
      66: invokevirtual #160                // Method createUnknownDestinationTypeException:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljavax/jms/JMSException;
      69: athrow

  public org.apache.activemq.command.Response messagePull(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.MessagePull) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #161                // Method org/apache/activemq/command/MessagePull.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      10: aload_1
      11: aload_2
      12: invokeinterface #162,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.messagePull:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/MessagePull;)Lorg/apache/activemq/command/Response;
      17: areturn

  public org.apache.activemq.command.TransactionId[] getPreparedTransactions(org.apache.activemq.broker.ConnectionContext) throws java.lang.Exception;
    Code:
       0: new           #163                // class java/lang/IllegalAccessException
       3: dup
       4: ldc           #164                // String Transaction operation not implemented by this broker.
       6: invokespecial #165                // Method java/lang/IllegalAccessException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void beginTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: new           #163                // class java/lang/IllegalAccessException
       3: dup
       4: ldc           #164                // String Transaction operation not implemented by this broker.
       6: invokespecial #165                // Method java/lang/IllegalAccessException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int prepareTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: new           #163                // class java/lang/IllegalAccessException
       3: dup
       4: ldc           #164                // String Transaction operation not implemented by this broker.
       6: invokespecial #165                // Method java/lang/IllegalAccessException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void rollbackTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: new           #163                // class java/lang/IllegalAccessException
       3: dup
       4: ldc           #164                // String Transaction operation not implemented by this broker.
       6: invokespecial #165                // Method java/lang/IllegalAccessException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void commitTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId, boolean) throws java.lang.Exception;
    Code:
       0: new           #163                // class java/lang/IllegalAccessException
       3: dup
       4: ldc           #164                // String Transaction operation not implemented by this broker.
       6: invokespecial #165                // Method java/lang/IllegalAccessException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void forgetTransaction(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.TransactionId) throws java.lang.Exception;
    Code:
       0: new           #163                // class java/lang/IllegalAccessException
       3: dup
       4: ldc           #164                // String Transaction operation not implemented by this broker.
       6: invokespecial #165                // Method java/lang/IllegalAccessException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void gc();
    Code:
       0: aload_0
       1: getfield      #37                 // Field queueRegion:Lorg/apache/activemq/broker/region/Region;
       4: invokeinterface #166,  1          // InterfaceMethod org/apache/activemq/broker/region/Region.gc:()V
       9: aload_0
      10: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
      13: invokeinterface #166,  1          // InterfaceMethod org/apache/activemq/broker/region/Region.gc:()V
      18: return

  public org.apache.activemq.command.BrokerId getBrokerId();
    Code:
       0: aload_0
       1: getfield      #167                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
       4: ifnonnull     24
       7: aload_0
       8: new           #168                // class org/apache/activemq/command/BrokerId
      11: dup
      12: getstatic     #169                // Field BROKER_ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
      15: invokevirtual #170                // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      18: invokespecial #171                // Method org/apache/activemq/command/BrokerId."<init>":(Ljava/lang/String;)V
      21: putfield      #167                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      24: aload_0
      25: getfield      #167                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      28: areturn

  public void setBrokerId(org.apache.activemq.command.BrokerId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #167                // Field brokerId:Lorg/apache/activemq/command/BrokerId;
       5: return

  public java.lang.String getBrokerName();
    Code:
       0: aload_0
       1: getfield      #172                // Field brokerName:Ljava/lang/String;
       4: ifnonnull     30
       7: aload_0
       8: invokestatic  #173                // Method org/apache/activemq/util/InetAddressUtil.getLocalHostName:()Ljava/lang/String;
      11: getstatic     #174                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      14: invokevirtual #175                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      17: putfield      #172                // Field brokerName:Ljava/lang/String;
      20: goto          30
      23: astore_1
      24: aload_0
      25: ldc           #177                // String localhost
      27: putfield      #172                // Field brokerName:Ljava/lang/String;
      30: aload_0
      31: getfield      #172                // Field brokerName:Ljava/lang/String;
      34: areturn
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Exception

  public void setBrokerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #172                // Field brokerName:Ljava/lang/String;
       5: return

  public org.apache.activemq.broker.region.DestinationStatistics getDestinationStatistics();
    Code:
       0: aload_0
       1: getfield      #4                  // Field destinationStatistics:Lorg/apache/activemq/broker/region/DestinationStatistics;
       4: areturn

  protected javax.jms.JMSException createUnknownDestinationTypeException(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: new           #51                 // class javax/jms/JMSException
       3: dup
       4: new           #93                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #178                // String Unknown destination type:
      13: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #159                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
      20: invokevirtual #179                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #180                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      29: areturn

  public synchronized void addBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
       4: aload_2
       5: invokevirtual #181                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
       8: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #182                // class org/apache/activemq/command/BrokerInfo
      16: astore_3
      17: aload_3
      18: ifnonnull     46
      21: aload_2
      22: invokevirtual #183                // Method org/apache/activemq/command/BrokerInfo.copy:()Lorg/apache/activemq/command/BrokerInfo;
      25: astore_3
      26: aload_3
      27: aconst_null
      28: invokevirtual #184                // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
      31: aload_0
      32: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
      35: aload_2
      36: invokevirtual #181                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      39: aload_3
      40: invokeinterface #102,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: invokevirtual #185                // Method org/apache/activemq/command/BrokerInfo.incrementRefCount:()V
      50: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
      53: ldc           #186                // String {} addBroker: {} brokerInfo size: {}
      55: iconst_3
      56: anewarray     #187                // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_0
      62: invokevirtual #97                 // Method getBrokerName:()Ljava/lang/String;
      65: aastore
      66: dup
      67: iconst_1
      68: aload_2
      69: invokevirtual #188                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      72: aastore
      73: dup
      74: iconst_2
      75: aload_0
      76: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
      79: invokeinterface #189,  1          // InterfaceMethod java/util/Map.size:()I
      84: invokestatic  #190                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: aastore
      88: invokeinterface #191,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      93: aload_0
      94: aload_2
      95: invokevirtual #192                // Method addBrokerInClusterUpdate:(Lorg/apache/activemq/command/BrokerInfo;)V
      98: return

  public synchronized void removeBroker(org.apache.activemq.broker.Connection, org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_2
       1: ifnull        104
       4: aload_0
       5: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
       8: aload_2
       9: invokevirtual #181                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      12: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #182                // class org/apache/activemq/command/BrokerInfo
      20: astore_3
      21: aload_3
      22: ifnull        46
      25: aload_3
      26: invokevirtual #193                // Method org/apache/activemq/command/BrokerInfo.decrementRefCount:()I
      29: ifne          46
      32: aload_0
      33: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
      36: aload_2
      37: invokevirtual #181                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      40: invokeinterface #83,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
      49: ldc           #194                // String {} removeBroker: {} brokerInfo size: {}
      51: iconst_3
      52: anewarray     #187                // class java/lang/Object
      55: dup
      56: iconst_0
      57: aload_0
      58: invokevirtual #97                 // Method getBrokerName:()Ljava/lang/String;
      61: aastore
      62: dup
      63: iconst_1
      64: aload_2
      65: invokevirtual #188                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      68: aastore
      69: dup
      70: iconst_2
      71: aload_0
      72: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
      75: invokeinterface #189,  1          // InterfaceMethod java/util/Map.size:()I
      80: invokestatic  #190                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: aastore
      84: invokeinterface #191,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      89: aload_0
      90: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      93: invokevirtual #195                // Method org/apache/activemq/broker/BrokerService.isStopping:()Z
      96: ifne          104
      99: aload_0
     100: aload_2
     101: invokevirtual #196                // Method removeBrokerInClusterUpdate:(Lorg/apache/activemq/command/BrokerInfo;)V
     104: return

  public synchronized org.apache.activemq.command.BrokerInfo[] getPeerBrokerInfos();
    Code:
       0: aload_0
       1: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
       4: invokeinterface #189,  1          // InterfaceMethod java/util/Map.size:()I
       9: anewarray     #182                // class org/apache/activemq/command/BrokerInfo
      12: astore_1
      13: aload_0
      14: getfield      #16                 // Field brokerInfos:Ljava/util/Map;
      17: invokeinterface #197,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      22: aload_1
      23: invokeinterface #198,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      28: checkcast     #199                // class "[Lorg/apache/activemq/command/BrokerInfo;"
      31: astore_1
      32: aload_1
      33: areturn

  public void preProcessDispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_1
       1: invokevirtual #200                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
       4: astore_2
       5: aload_2
       6: ifnull        173
       9: invokestatic  #144                // Method java/lang/System.currentTimeMillis:()J
      12: lstore_3
      13: aload_2
      14: lload_3
      15: invokevirtual #201                // Method org/apache/activemq/command/Message.setBrokerOutTime:(J)V
      18: aload_0
      19: invokevirtual #202                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      22: invokevirtual #203                // Method org/apache/activemq/broker/BrokerService.isEnableStatistics:()Z
      25: ifeq          56
      28: lload_3
      29: aload_2
      30: invokevirtual #204                // Method org/apache/activemq/command/Message.getBrokerInTime:()J
      33: lsub
      34: lstore        5
      36: aload_2
      37: invokevirtual #205                // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      40: checkcast     #115                // class org/apache/activemq/broker/region/Destination
      43: invokeinterface #206,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getDestinationStatistics:()Lorg/apache/activemq/broker/region/DestinationStatistics;
      48: invokevirtual #207                // Method org/apache/activemq/broker/region/DestinationStatistics.getProcessTime:()Lorg/apache/activemq/management/TimeStatisticImpl;
      51: lload         5
      53: invokevirtual #208                // Method org/apache/activemq/management/TimeStatisticImpl.addTime:(J)V
      56: aload_2
      57: invokevirtual #205                // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      60: checkcast     #209                // class org/apache/activemq/broker/region/BaseDestination
      63: invokevirtual #210                // Method org/apache/activemq/broker/region/BaseDestination.isPersistJMSRedelivered:()Z
      66: ifeq          173
      69: aload_2
      70: invokevirtual #211                // Method org/apache/activemq/command/Message.isRedelivered:()Z
      73: ifne          173
      76: aload_2
      77: invokevirtual #212                // Method org/apache/activemq/command/Message.isPersistent:()Z
      80: ifeq          173
      83: aload_2
      84: invokevirtual #213                // Method org/apache/activemq/command/Message.getRedeliveryCounter:()I
      87: istore        5
      89: aload_2
      90: invokevirtual #214                // Method org/apache/activemq/command/Message.incrementRedeliveryCounter:()V
      93: aload_2
      94: invokevirtual #205                // Method org/apache/activemq/command/Message.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      97: checkcast     #209                // class org/apache/activemq/broker/region/BaseDestination
     100: invokevirtual #215                // Method org/apache/activemq/broker/region/BaseDestination.getMessageStore:()Lorg/apache/activemq/store/MessageStore;
     103: aload_2
     104: invokeinterface #216,  2          // InterfaceMethod org/apache/activemq/store/MessageStore.updateMessage:(Lorg/apache/activemq/command/Message;)V
     109: aload_2
     110: iload         5
     112: invokevirtual #217                // Method org/apache/activemq/command/Message.setRedeliveryCounter:(I)V
     115: goto          173
     118: astore        6
     120: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
     123: ldc           #219                // String Failed to persist JMSRedeliveryFlag on {} in {}
     125: iconst_3
     126: anewarray     #187                // class java/lang/Object
     129: dup
     130: iconst_0
     131: aload_2
     132: invokevirtual #220                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     135: aastore
     136: dup
     137: iconst_1
     138: aload_2
     139: invokevirtual #143                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     142: aastore
     143: dup
     144: iconst_2
     145: aload         6
     147: aastore
     148: invokeinterface #221,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     153: aload_2
     154: iload         5
     156: invokevirtual #217                // Method org/apache/activemq/command/Message.setRedeliveryCounter:(I)V
     159: goto          173
     162: astore        7
     164: aload_2
     165: iload         5
     167: invokevirtual #217                // Method org/apache/activemq/command/Message.setRedeliveryCounter:(I)V
     170: aload         7
     172: athrow
     173: return
    Exception table:
       from    to  target type
          93   109   118   Class java/io/IOException
          93   109   162   any
         118   153   162   any
         162   164   162   any

  public void postProcessDispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: return

  public void processDispatchNotification(org.apache.activemq.command.MessageDispatchNotification) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #222                // Method org/apache/activemq/command/MessageDispatchNotification.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      10: aload_1
      11: invokeinterface #223,  2          // InterfaceMethod org/apache/activemq/broker/region/Region.processDispatchNotification:(Lorg/apache/activemq/command/MessageDispatchNotification;)V
      16: return

  public boolean isStopped();
    Code:
       0: aload_0
       1: getfield      #64                 // Field started:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.Set<org.apache.activemq.command.ActiveMQDestination> getDurableDestinations();
    Code:
       0: aload_0
       1: getfield      #35                 // Field destinationFactory:Lorg/apache/activemq/broker/region/DestinationFactory;
       4: invokevirtual #224                // Method org/apache/activemq/broker/region/DestinationFactory.getDestinations:()Ljava/util/Set;
       7: areturn

  protected void doStop(org.apache.activemq.util.ServiceStopper);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #37                 // Field queueRegion:Lorg/apache/activemq/broker/region/Region;
       5: invokevirtual #225                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
       8: aload_1
       9: aload_0
      10: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
      13: invokevirtual #225                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      16: aload_1
      17: aload_0
      18: getfield      #42                 // Field tempQueueRegion:Lorg/apache/activemq/broker/region/Region;
      21: invokevirtual #225                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      24: aload_1
      25: aload_0
      26: getfield      #44                 // Field tempTopicRegion:Lorg/apache/activemq/broker/region/Region;
      29: invokevirtual #225                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
      32: return

  public boolean isKeepDurableSubsActive();
    Code:
       0: aload_0
       1: getfield      #226                // Field keepDurableSubsActive:Z
       4: ireturn

  public void setKeepDurableSubsActive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #226                // Field keepDurableSubsActive:Z
       5: aload_0
       6: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
       9: checkcast     #60                 // class org/apache/activemq/broker/region/TopicRegion
      12: iload_1
      13: invokevirtual #227                // Method org/apache/activemq/broker/region/TopicRegion.setKeepDurableSubsActive:(Z)V
      16: return

  public org.apache.activemq.broker.region.DestinationInterceptor getDestinationInterceptor();
    Code:
       0: aload_0
       1: getfield      #40                 // Field destinationInterceptor:Lorg/apache/activemq/broker/region/DestinationInterceptor;
       4: areturn

  public org.apache.activemq.broker.ConnectionContext getAdminConnectionContext();
    Code:
       0: aload_0
       1: getfield      #228                // Field adminConnectionContext:Lorg/apache/activemq/broker/ConnectionContext;
       4: areturn

  public void setAdminConnectionContext(org.apache.activemq.broker.ConnectionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #228                // Field adminConnectionContext:Lorg/apache/activemq/broker/ConnectionContext;
       5: return

  public java.util.Map<org.apache.activemq.command.ConnectionId, org.apache.activemq.state.ConnectionState> getConnectionStates();
    Code:
       0: aload_0
       1: getfield      #8                  // Field connectionStates:Ljava/util/Map;
       4: areturn

  public org.apache.activemq.store.PListStore getTempDataStore();
    Code:
       0: aload_0
       1: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #229                // Method org/apache/activemq/broker/BrokerService.getTempDataStore:()Lorg/apache/activemq/store/PListStore;
       7: areturn

  public java.net.URI getVmConnectorURI();
    Code:
       0: aload_0
       1: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #230                // Method org/apache/activemq/broker/BrokerService.getVmConnectorURI:()Ljava/net/URI;
       7: areturn

  public void brokerServiceStarted();
    Code:
       0: return

  public org.apache.activemq.broker.BrokerService getBrokerService();
    Code:
       0: aload_0
       1: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: areturn

  public boolean isExpired(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #231,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.isExpired:()Z
       8: ifeq          59
      11: aload_1
      12: invokeinterface #232,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      17: astore_3
      18: aload_3
      19: dup
      20: astore        4
      22: monitorenter
      23: aload_0
      24: aload_3
      25: invokespecial #233                // Method stampAsExpired:(Lorg/apache/activemq/command/Message;)Z
      28: istore_2
      29: aload         4
      31: monitorexit
      32: goto          43
      35: astore        5
      37: aload         4
      39: monitorexit
      40: aload         5
      42: athrow
      43: goto          59
      46: astore_3
      47: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
      50: ldc           #234                // String unexpected exception on message expiry determination for: {}
      52: aload_1
      53: aload_3
      54: invokeinterface #87,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      59: iload_2
      60: ireturn
    Exception table:
       from    to  target type
          23    32    35   any
          35    40    35   any
          11    43    46   Class java/io/IOException

  private boolean stampAsExpired(org.apache.activemq.command.Message) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ldc           #235                // String originalExpiration
       5: invokevirtual #236                // Method org/apache/activemq/command/Message.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       8: ifnonnull     32
      11: aload_1
      12: invokevirtual #237                // Method org/apache/activemq/command/Message.getExpiration:()J
      15: lstore_3
      16: aload_1
      17: ldc           #235                // String originalExpiration
      19: new           #238                // class java/lang/Long
      22: dup
      23: lload_3
      24: invokespecial #239                // Method java/lang/Long."<init>":(J)V
      27: invokevirtual #240                // Method org/apache/activemq/command/Message.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      30: iconst_1
      31: istore_2
      32: iload_2
      33: ireturn

  public void messageExpired(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription);
    Code:
       0: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #241                // String Message expired {}
       5: aload_2
       6: invokeinterface #242,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: invokevirtual #243                // Method getRoot:()Lorg/apache/activemq/broker/Broker;
      15: aload_1
      16: aload_2
      17: aload_3
      18: new           #244                // class java/lang/Throwable
      21: dup
      22: new           #93                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #245                // String Message Expired. Expiration:
      31: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokeinterface #246,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getExpiration:()J
      40: invokevirtual #247                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #248                // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      49: invokeinterface #249,  5          // InterfaceMethod org/apache/activemq/broker/Broker.sendToDeadLetterQueue:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/broker/region/MessageReference;Lorg/apache/activemq/broker/region/Subscription;Ljava/lang/Throwable;)Z
      54: pop
      55: return

  public boolean sendToDeadLetterQueue(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.broker.region.MessageReference, org.apache.activemq.broker.region.Subscription, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        192
       4: aload_2
       5: invokeinterface #232,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessage:()Lorg/apache/activemq/command/Message;
      10: astore        5
      12: aload         5
      14: ifnull        192
      17: aload_2
      18: invokeinterface #250,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      23: ifnull        192
      26: aload_2
      27: invokeinterface #250,  1          // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getRegionDestination:()Lorg/apache/activemq/command/Message$MessageDestination;
      32: checkcast     #115                // class org/apache/activemq/broker/region/Destination
      35: invokeinterface #251,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getDeadLetterStrategy:()Lorg/apache/activemq/broker/region/policy/DeadLetterStrategy;
      40: astore        6
      42: aload         6
      44: ifnull        171
      47: aload         6
      49: aload         5
      51: invokeinterface #252,  2          // InterfaceMethod org/apache/activemq/broker/region/policy/DeadLetterStrategy.isSendToDeadLetterQueue:(Lorg/apache/activemq/command/Message;)Z
      56: ifeq          192
      59: aload         5
      61: invokevirtual #253                // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      64: astore        5
      66: aload_0
      67: aload         5
      69: invokespecial #233                // Method stampAsExpired:(Lorg/apache/activemq/command/Message;)Z
      72: pop
      73: aload         5
      75: lconst_0
      76: invokevirtual #254                // Method org/apache/activemq/command/Message.setExpiration:(J)V
      79: aload         5
      81: invokevirtual #212                // Method org/apache/activemq/command/Message.isPersistent:()Z
      84: ifne          104
      87: aload         5
      89: iconst_1
      90: invokevirtual #255                // Method org/apache/activemq/command/Message.setPersistent:(Z)V
      93: aload         5
      95: ldc_w         #256                // String originalDeliveryMode
      98: ldc_w         #257                // String NON_PERSISTENT
     101: invokevirtual #240                // Method org/apache/activemq/command/Message.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     104: aload         4
     106: ifnull        122
     109: aload         5
     111: ldc_w         #258                // String dlqDeliveryFailureCause
     114: aload         4
     116: invokevirtual #259                // Method java/lang/Throwable.toString:()Ljava/lang/String;
     119: invokevirtual #240                // Method org/apache/activemq/command/Message.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     122: aload         6
     124: aload         5
     126: aload_3
     127: invokeinterface #260,  3          // InterfaceMethod org/apache/activemq/broker/region/policy/DeadLetterStrategy.getDeadLetterQueueFor:(Lorg/apache/activemq/command/Message;Lorg/apache/activemq/broker/region/Subscription;)Lorg/apache/activemq/command/ActiveMQDestination;
     132: astore        7
     134: aload_1
     135: astore        8
     137: aload_1
     138: invokevirtual #261                // Method org/apache/activemq/broker/ConnectionContext.getSecurityContext:()Lorg/apache/activemq/security/SecurityContext;
     141: ifnull        154
     144: aload_1
     145: invokevirtual #261                // Method org/apache/activemq/broker/ConnectionContext.getSecurityContext:()Lorg/apache/activemq/security/SecurityContext;
     148: invokevirtual #262                // Method org/apache/activemq/security/SecurityContext.isBrokerContext:()Z
     151: ifne          160
     154: aload_0
     155: invokestatic  #263                // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
     158: astore        8
     160: aload         8
     162: aload         5
     164: aload         7
     166: invokestatic  #264                // Method org/apache/activemq/util/BrokerSupport.resendNoCopy:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/Message;Lorg/apache/activemq/command/ActiveMQDestination;)V
     169: iconst_1
     170: ireturn
     171: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
     174: ldc_w         #265                // String Dead Letter message with no DLQ strategy in place, message id: {}, destination: {}
     177: aload         5
     179: invokevirtual #220                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     182: aload         5
     184: invokevirtual #143                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     187: invokeinterface #266,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     192: goto          211
     195: astore        5
     197: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
     200: ldc_w         #267                // String Caught an exception sending to DLQ: {}
     203: aload_2
     204: aload         5
     206: invokeinterface #87,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     211: iconst_0
     212: ireturn
    Exception table:
       from    to  target type
           0   170   195   Class java/lang/Exception
         171   192   195   Class java/lang/Exception

  public org.apache.activemq.broker.Broker getRoot();
    Code:
       0: aload_0
       1: invokevirtual #202                // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #268                // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
       7: areturn
       8: astore_1
       9: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
      12: ldc_w         #269                // String Trying to get Root Broker
      15: aload_1
      16: invokeinterface #270,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: new           #271                // class java/lang/RuntimeException
      24: dup
      25: ldc_w         #272                // String The broker from the BrokerService should not throw an exception
      28: invokespecial #273                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      31: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  public long getBrokerSequenceId();
    Code:
       0: aload_0
       1: getfield      #19                 // Field sequenceGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #19                 // Field sequenceGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      11: invokevirtual #274                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
      14: aload_1
      15: monitorexit
      16: lreturn
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
    Exception table:
       from    to  target type
           7    16    17   any
          17    20    17   any

  public org.apache.activemq.thread.Scheduler getScheduler();
    Code:
       0: aload_0
       1: getfield      #29                 // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
       4: areturn

  public java.util.concurrent.ThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #28                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  public void processConsumerControl(org.apache.activemq.broker.ConsumerBrokerExchange, org.apache.activemq.command.ConsumerControl);
    Code:
       0: aload_2
       1: invokevirtual #275                // Method org/apache/activemq/command/ConsumerControl.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #50                 // Method getRegion:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/Region;
      10: aload_1
      11: aload_2
      12: invokeinterface #276,  3          // InterfaceMethod org/apache/activemq/broker/region/Region.processConsumerControl:(Lorg/apache/activemq/broker/ConsumerBrokerExchange;Lorg/apache/activemq/command/ConsumerControl;)V
      17: goto          35
      20: astore        4
      22: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
      25: ldc_w         #277                // String unmatched destination: {}, in consumerControl: {}
      28: aload_3
      29: aload_2
      30: invokeinterface #87,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: return
    Exception table:
       from    to  target type
           5    17    20   Class javax/jms/JMSException

  protected void addBrokerInClusterUpdate(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #278                // Method org/apache/activemq/broker/BrokerService.getTransportConnectors:()Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokeinterface #279,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #280,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_3
      25: invokeinterface #281,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #282                // class org/apache/activemq/broker/TransportConnector
      33: astore        4
      35: aload         4
      37: invokevirtual #283                // Method org/apache/activemq/broker/TransportConnector.isUpdateClusterClients:()Z
      40: ifeq          54
      43: aload         4
      45: aload_1
      46: invokevirtual #284                // Method org/apache/activemq/broker/TransportConnector.addPeerBroker:(Lorg/apache/activemq/command/BrokerInfo;)V
      49: aload         4
      51: invokevirtual #285                // Method org/apache/activemq/broker/TransportConnector.updateClientClusterInfo:()V
      54: goto          15
      57: return

  protected void removeBrokerInClusterUpdate(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #278                // Method org/apache/activemq/broker/BrokerService.getTransportConnectors:()Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokeinterface #279,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #280,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          65
      24: aload_3
      25: invokeinterface #281,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #282                // class org/apache/activemq/broker/TransportConnector
      33: astore        4
      35: aload         4
      37: invokevirtual #283                // Method org/apache/activemq/broker/TransportConnector.isUpdateClusterClients:()Z
      40: ifeq          62
      43: aload         4
      45: invokevirtual #286                // Method org/apache/activemq/broker/TransportConnector.isUpdateClusterClientsOnRemove:()Z
      48: ifeq          62
      51: aload         4
      53: aload_1
      54: invokevirtual #287                // Method org/apache/activemq/broker/TransportConnector.removePeerBroker:(Lorg/apache/activemq/command/BrokerInfo;)V
      57: aload         4
      59: invokevirtual #285                // Method org/apache/activemq/broker/TransportConnector.updateClientClusterInfo:()V
      62: goto          15
      65: return

  protected void purgeInactiveDestinations();
    Code:
       0: aload_0
       1: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #288                // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #289                // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: new           #110                // class java/util/ArrayList
      13: dup
      14: invokespecial #290                // Method java/util/ArrayList."<init>":()V
      17: astore_1
      18: aload_0
      19: invokevirtual #126                // Method getDestinationMap:()Ljava/util/Map;
      22: astore_2
      23: aload_0
      24: invokevirtual #133                // Method isAllowTempAutoCreationOnSend:()Z
      27: ifeq          60
      30: aload_2
      31: aload_0
      32: getfield      #42                 // Field tempQueueRegion:Lorg/apache/activemq/broker/region/Region;
      35: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.getDestinationMap:()Ljava/util/Map;
      40: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      45: aload_2
      46: aload_0
      47: getfield      #44                 // Field tempTopicRegion:Lorg/apache/activemq/broker/region/Region;
      50: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/broker/region/Region.getDestinationMap:()Ljava/util/Map;
      55: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      60: aload_0
      61: getfield      #27                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      64: invokevirtual #291                // Method org/apache/activemq/broker/BrokerService.getMaxPurgedDestinationsPerSweep:()I
      67: i2l
      68: lstore_3
      69: invokestatic  #144                // Method java/lang/System.currentTimeMillis:()J
      72: lstore        5
      74: aload_2
      75: invokeinterface #197,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      80: invokeinterface #292,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      85: astore        7
      87: aload         7
      89: invokeinterface #280,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          161
      97: aload         7
      99: invokeinterface #281,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #115                // class org/apache/activemq/broker/region/Destination
     107: astore        8
     109: aload         8
     111: lload         5
     113: invokeinterface #293,  3          // InterfaceMethod org/apache/activemq/broker/region/Destination.markForGC:(J)V
     118: aload         8
     120: invokeinterface #294,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.canGC:()Z
     125: ifeq          158
     128: aload_1
     129: aload         8
     131: invokeinterface #295,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     136: pop
     137: lload_3
     138: lconst_0
     139: lcmp
     140: ifle          158
     143: aload_1
     144: invokeinterface #296,  1          // InterfaceMethod java/util/List.size:()I
     149: i2l
     150: lload_3
     151: lcmp
     152: ifne          158
     155: goto          161
     158: goto          87
     161: aload_1
     162: invokeinterface #297,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     167: ifne          315
     170: aload_0
     171: invokestatic  #263                // Method org/apache/activemq/util/BrokerSupport.getConnectionContext:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/broker/ConnectionContext;
     174: astore        7
     176: aload         7
     178: aload_0
     179: invokevirtual #298                // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
     182: aload_1
     183: invokeinterface #279,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     188: astore        8
     190: aload         8
     192: invokeinterface #280,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     197: ifeq          315
     200: aload         8
     202: invokeinterface #281,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     207: checkcast     #115                // class org/apache/activemq/broker/region/Destination
     210: astore        9
     212: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
     215: astore        10
     217: aload         9
     219: instanceof    #209                // class org/apache/activemq/broker/region/BaseDestination
     222: ifeq          235
     225: aload         9
     227: checkcast     #209                // class org/apache/activemq/broker/region/BaseDestination
     230: invokevirtual #299                // Method org/apache/activemq/broker/region/BaseDestination.getLog:()Lorg/slf4j/Logger;
     233: astore        10
     235: aload         10
     237: ldc_w         #300                // String {} Inactive for longer than {} ms - removing ...
     240: aload         9
     242: invokeinterface #301,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getName:()Ljava/lang/String;
     247: aload         9
     249: invokeinterface #302,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getInactiveTimoutBeforeGC:()J
     254: invokestatic  #303                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     257: invokeinterface #304,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     262: aload_0
     263: invokevirtual #243                // Method getRoot:()Lorg/apache/activemq/broker/Broker;
     266: aload         7
     268: aload         9
     270: invokeinterface #305,  1          // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     275: aload_0
     276: invokevirtual #133                // Method isAllowTempAutoCreationOnSend:()Z
     279: ifeq          286
     282: lconst_1
     283: goto          287
     286: lconst_0
     287: invokeinterface #306,  5          // InterfaceMethod org/apache/activemq/broker/Broker.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
     292: goto          312
     295: astore        11
     297: getstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
     300: ldc_w         #307                // String Failed to remove inactive destination {}
     303: aload         9
     305: aload         11
     307: invokeinterface #308,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     312: goto          190
     315: aload_0
     316: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     319: invokevirtual #288                // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     322: invokevirtual #309                // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     325: goto          343
     328: astore        12
     330: aload_0
     331: getfield      #23                 // Field inactiveDestinationsPurgeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     334: invokevirtual #288                // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     337: invokevirtual #309                // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     340: aload         12
     342: athrow
     343: return
    Exception table:
       from    to  target type
         262   292   295   Class java/lang/Exception
          10   315   328   any
         328   330   328   any

  public boolean isAllowTempAutoCreationOnSend();
    Code:
       0: aload_0
       1: getfield      #310                // Field allowTempAutoCreationOnSend:Z
       4: ireturn

  public void setAllowTempAutoCreationOnSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #310                // Field allowTempAutoCreationOnSend:Z
       5: return

  public void reapplyInterceptor();
    Code:
       0: aload_0
       1: getfield      #37                 // Field queueRegion:Lorg/apache/activemq/broker/region/Region;
       4: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/broker/region/Region.reapplyInterceptor:()V
       9: aload_0
      10: getfield      #39                 // Field topicRegion:Lorg/apache/activemq/broker/region/Region;
      13: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/broker/region/Region.reapplyInterceptor:()V
      18: aload_0
      19: getfield      #42                 // Field tempQueueRegion:Lorg/apache/activemq/broker/region/Region;
      22: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/broker/region/Region.reapplyInterceptor:()V
      27: aload_0
      28: getfield      #44                 // Field tempTopicRegion:Lorg/apache/activemq/broker/region/Region;
      31: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/broker/region/Region.reapplyInterceptor:()V
      36: return

  static {};
    Code:
       0: ldc_w         #312                // class org/apache/activemq/broker/region/RegionBroker
       3: invokestatic  #313                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #85                 // Field LOG:Lorg/slf4j/Logger;
       9: new           #314                // class org/apache/activemq/util/IdGenerator
      12: dup
      13: invokespecial #315                // Method org/apache/activemq/util/IdGenerator."<init>":()V
      16: putstatic     #169                // Field BROKER_ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
      19: return
}
