Compiled from "BrokerEndpoint.java"
public class org.apache.activemq.camel.component.broker.BrokerEndpoint extends org.apache.camel.impl.DefaultEndpoint implements org.apache.camel.MultipleConsumersSupport,org.apache.camel.Service {
  static final java.lang.String PRODUCER_BROKER_EXCHANGE;

  private final org.apache.activemq.camel.component.broker.BrokerConfiguration configuration;

  private org.apache.activemq.broker.inteceptor.MessageInterceptorRegistry messageInterceptorRegistry;

  private final org.apache.activemq.command.ActiveMQDestination destination;

  private java.util.List<org.apache.activemq.broker.inteceptor.MessageInterceptor> messageInterceptorList;

  public org.apache.activemq.camel.component.broker.BrokerEndpoint(java.lang.String, org.apache.activemq.camel.component.broker.BrokerComponent, org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.camel.component.broker.BrokerConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method org/apache/camel/util/UnsafeUriCharactersEncoder.encode:(Ljava/lang/String;)Ljava/lang/String;
       5: aload_2
       6: invokespecial #2                  // Method org/apache/camel/impl/DefaultEndpoint."<init>":(Ljava/lang/String;Lorg/apache/camel/Component;)V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/CopyOnWriteArrayList
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      17: putfield      #5                  // Field messageInterceptorList:Ljava/util/List;
      20: aload_0
      21: aload_3
      22: putfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      25: aload_0
      26: aload         4
      28: putfield      #7                  // Field configuration:Lorg/apache/activemq/camel/component/broker/BrokerConfiguration;
      31: return

  public org.apache.camel.Producer createProducer() throws java.lang.Exception;
    Code:
       0: new           #8                  // class org/apache/activemq/camel/component/broker/BrokerProducer
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method org/apache/activemq/camel/component/broker/BrokerProducer."<init>":(Lorg/apache/activemq/camel/component/broker/BrokerEndpoint;)V
       8: astore_1
       9: aload_1
      10: areturn

  public org.apache.camel.Consumer createConsumer(org.apache.camel.Processor) throws java.lang.Exception;
    Code:
       0: new           #10                 // class org/apache/activemq/camel/component/broker/BrokerConsumer
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method org/apache/activemq/camel/component/broker/BrokerConsumer."<init>":(Lorg/apache/camel/Endpoint;Lorg/apache/camel/Processor;)V
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #12                 // Method configureConsumer:(Lorg/apache/camel/Consumer;)V
      15: aload_2
      16: areturn

  public boolean isSingleton();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMultipleConsumersSupported();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.activemq.command.ActiveMQDestination getDestination();
    Code:
       0: aload_0
       1: getfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/apache/camel/impl/DefaultEndpoint.doStart:()V
       4: aload_0
       5: invokestatic  #14                 // Method org/apache/activemq/broker/inteceptor/MessageInterceptorRegistry.getInstance:()Lorg/apache/activemq/broker/inteceptor/MessageInterceptorRegistry;
       8: aload_0
       9: getfield      #7                  // Field configuration:Lorg/apache/activemq/camel/component/broker/BrokerConfiguration;
      12: invokevirtual #15                 // Method org/apache/activemq/camel/component/broker/BrokerConfiguration.getBrokerName:()Ljava/lang/String;
      15: invokevirtual #16                 // Method org/apache/activemq/broker/inteceptor/MessageInterceptorRegistry.get:(Ljava/lang/String;)Lorg/apache/activemq/broker/inteceptor/MessageInterceptorRegistry;
      18: putfield      #17                 // Field messageInterceptorRegistry:Lorg/apache/activemq/broker/inteceptor/MessageInterceptorRegistry;
      21: aload_0
      22: getfield      #5                  // Field messageInterceptorList:Ljava/util/List;
      25: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore_1
      31: aload_1
      32: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          58
      40: aload_1
      41: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #21                 // class org/apache/activemq/broker/inteceptor/MessageInterceptor
      49: astore_2
      50: aload_0
      51: aload_2
      52: invokevirtual #22                 // Method addMessageInterceptor:(Lorg/apache/activemq/broker/inteceptor/MessageInterceptor;)V
      55: goto          31
      58: aload_0
      59: getfield      #5                  // Field messageInterceptorList:Ljava/util/List;
      62: invokeinterface #23,  1           // InterfaceMethod java/util/List.clear:()V
      67: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/apache/camel/impl/DefaultEndpoint.doStop:()V
       4: return

  protected void addMessageInterceptor(org.apache.activemq.broker.inteceptor.MessageInterceptor);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method isStarted:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #17                 // Field messageInterceptorRegistry:Lorg/apache/activemq/broker/inteceptor/MessageInterceptorRegistry;
      11: aload_0
      12: getfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      15: aload_1
      16: invokevirtual #26                 // Method org/apache/activemq/broker/inteceptor/MessageInterceptorRegistry.addMessageInterceptor:(Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/broker/inteceptor/MessageInterceptor;)Lorg/apache/activemq/broker/inteceptor/MessageInterceptor;
      19: pop
      20: goto          34
      23: aload_0
      24: getfield      #5                  // Field messageInterceptorList:Ljava/util/List;
      27: aload_1
      28: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: return

  protected void removeMessageInterceptor(org.apache.activemq.broker.inteceptor.MessageInterceptor);
    Code:
       0: aload_0
       1: getfield      #17                 // Field messageInterceptorRegistry:Lorg/apache/activemq/broker/inteceptor/MessageInterceptorRegistry;
       4: aload_0
       5: getfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       8: aload_1
       9: invokevirtual #28                 // Method org/apache/activemq/broker/inteceptor/MessageInterceptorRegistry.removeMessageInterceptor:(Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/broker/inteceptor/MessageInterceptor;)V
      12: return

  protected void inject(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: ifnull        55
       6: aload_2
       7: aload_0
       8: getfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      11: invokevirtual #29                 // Method org/apache/activemq/command/Message.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      14: aload_1
      15: ifnull        46
      18: aload_1
      19: invokevirtual #30                 // Method org/apache/activemq/broker/ProducerBrokerExchange.getRegionDestination:()Lorg/apache/activemq/broker/region/Destination;
      22: ifnull        46
      25: aload_1
      26: invokevirtual #30                 // Method org/apache/activemq/broker/ProducerBrokerExchange.getRegionDestination:()Lorg/apache/activemq/broker/region/Destination;
      29: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/broker/region/Destination.getActiveMQDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      34: aload_0
      35: getfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      38: invokevirtual #32                 // Method org/apache/activemq/command/ActiveMQDestination.equals:(Ljava/lang/Object;)Z
      41: ifne          46
      44: aconst_null
      45: astore_3
      46: aload_0
      47: getfield      #17                 // Field messageInterceptorRegistry:Lorg/apache/activemq/broker/inteceptor/MessageInterceptorRegistry;
      50: aload_3
      51: aload_2
      52: invokevirtual #33                 // Method org/apache/activemq/broker/inteceptor/MessageInterceptorRegistry.injectMessage:(Lorg/apache/activemq/broker/ProducerBrokerExchange;Lorg/apache/activemq/command/Message;)V
      55: return
}
