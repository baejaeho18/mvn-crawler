Compiled from "ActiveMQConfiguration.java"
public class org.apache.activemq.camel.component.ActiveMQConfiguration extends org.apache.camel.component.jms.JmsConfiguration {
  private java.lang.String brokerURL;

  private boolean useSingleConnection;

  private boolean usePooledConnection;

  private java.lang.String userName;

  private java.lang.String password;

  private org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent;

  public org.apache.activemq.camel.component.ActiveMQConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/camel/component/jms/JmsConfiguration."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/activemq/spring/ActiveMQConnectionFactory.DEFAULT_BROKER_URL:Ljava/lang/String;
       8: putfield      #3                  // Field brokerURL:Ljava/lang/String;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field useSingleConnection:Z
      16: aload_0
      17: iconst_1
      18: putfield      #5                  // Field usePooledConnection:Z
      21: return

  public java.lang.String getBrokerURL();
    Code:
       0: aload_0
       1: getfield      #3                  // Field brokerURL:Ljava/lang/String;
       4: areturn

  public void setBrokerURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field brokerURL:Ljava/lang/String;
       5: return

  public boolean isUseSingleConnection();
    Code:
       0: aload_0
       1: getfield      #4                  // Field useSingleConnection:Z
       4: ireturn

  public java.lang.String getUserName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field userName:Ljava/lang/String;
       4: areturn

  public void setUserName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field userName:Ljava/lang/String;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #7                  // Field password:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field password:Ljava/lang/String;
       5: return

  public void setUseSingleConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field useSingleConnection:Z
       5: return

  public boolean isUsePooledConnection();
    Code:
       0: aload_0
       1: getfield      #5                  // Field usePooledConnection:Z
       4: ireturn

  public void setUsePooledConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field usePooledConnection:Z
       5: return

  protected org.springframework.transaction.PlatformTransactionManager createTransactionManager();
    Code:
       0: new           #8                  // class org/springframework/jms/connection/JmsTransactionManager
       3: dup
       4: aload_0
       5: invokevirtual #9                  // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
       8: invokespecial #10                 // Method org/springframework/jms/connection/JmsTransactionManager."<init>":(Ljavax/jms/ConnectionFactory;)V
      11: astore_1
      12: aload_1
      13: invokevirtual #11                 // Method org/springframework/jms/connection/JmsTransactionManager.afterPropertiesSet:()V
      16: aload_1
      17: areturn

  protected void setActiveMQComponent(org.apache.activemq.camel.component.ActiveMQComponent);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field activeMQComponent:Lorg/apache/activemq/camel/component/ActiveMQComponent;
       5: return

  protected javax.jms.ConnectionFactory createConnectionFactory();
    Code:
       0: new           #13                 // class org/apache/activemq/spring/ActiveMQConnectionFactory
       3: dup
       4: invokespecial #14                 // Method org/apache/activemq/spring/ActiveMQConnectionFactory."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field userName:Ljava/lang/String;
      12: ifnull        23
      15: aload_1
      16: aload_0
      17: getfield      #6                  // Field userName:Ljava/lang/String;
      20: invokevirtual #15                 // Method org/apache/activemq/spring/ActiveMQConnectionFactory.setUserName:(Ljava/lang/String;)V
      23: aload_0
      24: getfield      #7                  // Field password:Ljava/lang/String;
      27: ifnull        38
      30: aload_1
      31: aload_0
      32: getfield      #7                  // Field password:Ljava/lang/String;
      35: invokevirtual #16                 // Method org/apache/activemq/spring/ActiveMQConnectionFactory.setPassword:(Ljava/lang/String;)V
      38: aload_1
      39: invokevirtual #17                 // Method org/apache/activemq/spring/ActiveMQConnectionFactory.getBeanName:()Ljava/lang/String;
      42: ifnonnull     51
      45: aload_1
      46: ldc           #18                 // String Camel
      48: invokevirtual #19                 // Method org/apache/activemq/spring/ActiveMQConnectionFactory.setBeanName:(Ljava/lang/String;)V
      51: aload_1
      52: aload_0
      53: invokevirtual #20                 // Method getBrokerURL:()Ljava/lang/String;
      56: invokevirtual #21                 // Method org/apache/activemq/spring/ActiveMQConnectionFactory.setBrokerURL:(Ljava/lang/String;)V
      59: aload_0
      60: invokevirtual #22                 // Method isUseSingleConnection:()Z
      63: ifeq          92
      66: new           #23                 // class org/springframework/jms/connection/SingleConnectionFactory
      69: dup
      70: aload_1
      71: invokespecial #24                 // Method org/springframework/jms/connection/SingleConnectionFactory."<init>":(Ljavax/jms/ConnectionFactory;)V
      74: astore_2
      75: aload_0
      76: getfield      #12                 // Field activeMQComponent:Lorg/apache/activemq/camel/component/ActiveMQComponent;
      79: ifnull        90
      82: aload_0
      83: getfield      #12                 // Field activeMQComponent:Lorg/apache/activemq/camel/component/ActiveMQComponent;
      86: aload_2
      87: invokevirtual #25                 // Method org/apache/activemq/camel/component/ActiveMQComponent.addSingleConnectionFactory:(Lorg/springframework/jms/connection/SingleConnectionFactory;)V
      90: aload_2
      91: areturn
      92: aload_0
      93: invokevirtual #26                 // Method isUsePooledConnection:()Z
      96: ifeq          125
      99: aload_0
     100: aload_1
     101: invokevirtual #27                 // Method createPooledConnectionFactory:(Lorg/apache/activemq/spring/ActiveMQConnectionFactory;)Ljavax/jms/ConnectionFactory;
     104: astore_2
     105: aload_0
     106: getfield      #12                 // Field activeMQComponent:Lorg/apache/activemq/camel/component/ActiveMQComponent;
     109: ifnull        123
     112: aload_0
     113: getfield      #12                 // Field activeMQComponent:Lorg/apache/activemq/camel/component/ActiveMQComponent;
     116: aload_2
     117: checkcast     #28                 // class org/apache/activemq/Service
     120: invokevirtual #29                 // Method org/apache/activemq/camel/component/ActiveMQComponent.addPooledConnectionFactoryService:(Lorg/apache/activemq/Service;)V
     123: aload_2
     124: areturn
     125: aload_1
     126: areturn

  protected javax.jms.ConnectionFactory createPooledConnectionFactory(org.apache.activemq.spring.ActiveMQConnectionFactory);
    Code:
       0: ldc           #30                 // String org.apache.activemq.pool.PooledConnectionFactory
       2: aload_0
       3: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #32                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       9: invokestatic  #33                 // Method loadClass:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      12: astore_2
      13: aload_2
      14: iconst_1
      15: anewarray     #34                 // class java/lang/Class
      18: dup
      19: iconst_0
      20: ldc_w         #35                 // class org/apache/activemq/ActiveMQConnectionFactory
      23: aastore
      24: invokevirtual #36                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      27: astore_3
      28: aload_3
      29: iconst_1
      30: anewarray     #37                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_1
      36: aastore
      37: invokevirtual #38                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #39                 // class javax/jms/ConnectionFactory
      43: areturn
      44: astore_2
      45: new           #41                 // class java/lang/RuntimeException
      48: dup
      49: new           #42                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #44                 // String Failed to instantiate PooledConnectionFactory:
      58: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: aload_2
      69: invokespecial #48                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      72: athrow
    Exception table:
       from    to  target type
           0    43    44   Class java/lang/Exception

  public static java.lang.Class<?> loadClass(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException;
    Code:
       0: invokestatic  #49                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #50                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_2
       7: aload_2
       8: ifnull        29
      11: aload_2
      12: aload_0
      13: invokevirtual #51                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      16: areturn
      17: astore_3
      18: aload_1
      19: aload_0
      20: invokevirtual #51                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      23: areturn
      24: astore        4
      26: aload         4
      28: athrow
      29: aload_1
      30: aload_0
      31: invokevirtual #51                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      34: areturn
    Exception table:
       from    to  target type
          11    16    17   Class java/lang/ClassNotFoundException
          18    23    24   Class java/lang/ClassNotFoundException
}
