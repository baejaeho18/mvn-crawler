Compiled from "DefaultAuthorizationMap.java"
class org.apache.activemq.security.DefaultAuthorizationMap$WildcardAwareSet<T> extends java.util.HashSet<T> {
  boolean hasWildcard;

  final org.apache.activemq.security.DefaultAuthorizationMap this$0;

  org.apache.activemq.security.DefaultAuthorizationMap$WildcardAwareSet(org.apache.activemq.security.DefaultAuthorizationMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/security/DefaultAuthorizationMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/HashSet."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field hasWildcard:Z
      14: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field hasWildcard:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: aload_1
      11: invokespecial #4                  // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean addAll(java.util.Collection<? extends T>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          54
      18: aload_3
      19: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload_0
      27: aload         4
      29: invokespecial #8                  // Method isWildcard:(Ljava/lang/Object;)Z
      32: ifeq          40
      35: aload_0
      36: iconst_1
      37: putfield      #3                  // Field hasWildcard:Z
      40: aload_0
      41: aload         4
      43: invokevirtual #9                  // Method add:(Ljava/lang/Object;)Z
      46: ifeq          51
      49: iconst_1
      50: istore_2
      51: goto          9
      54: iload_2
      55: ireturn

  private boolean isWildcard(T);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #11                 // String getName
       6: iconst_0
       7: anewarray     #12                 // class java/lang/Class
      10: invokevirtual #13                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      13: aload_1
      14: iconst_0
      15: anewarray     #14                 // class java/lang/Object
      18: invokevirtual #15                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      21: ldc           #16                 // String *
      23: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifeq          31
      29: iconst_1
      30: ireturn
      31: goto          35
      34: astore_2
      35: iconst_0
      36: ireturn
    Exception table:
       from    to  target type
           0    30    34   Class java/lang/Exception
}
