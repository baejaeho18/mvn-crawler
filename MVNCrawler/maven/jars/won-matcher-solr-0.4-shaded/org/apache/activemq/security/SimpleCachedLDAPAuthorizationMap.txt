Compiled from "SimpleCachedLDAPAuthorizationMap.java"
public class org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap implements org.apache.activemq.security.AuthorizationMap {
  private static final org.slf4j.Logger LOG;

  private final java.lang.String initialContextFactory;

  private java.lang.String connectionURL;

  private java.lang.String connectionUsername;

  private java.lang.String connectionPassword;

  private java.lang.String connectionProtocol;

  private java.lang.String authentication;

  private int queuePrefixLength;

  private int topicPrefixLength;

  private int tempPrefixLength;

  private java.lang.String queueSearchBase;

  private java.lang.String topicSearchBase;

  private java.lang.String tempSearchBase;

  private java.lang.String permissionGroupMemberAttribute;

  private java.lang.String adminPermissionGroupSearchFilter;

  private java.lang.String readPermissionGroupSearchFilter;

  private java.lang.String writePermissionGroupSearchFilter;

  private boolean legacyGroupMapping;

  private java.lang.String groupObjectClass;

  private java.lang.String userObjectClass;

  private java.lang.String groupNameAttribute;

  private java.lang.String userNameAttribute;

  private int refreshInterval;

  private boolean refreshDisabled;

  protected java.lang.String groupClass;

  private long lastUpdated;

  private static java.lang.String ANY_DESCENDANT;

  protected javax.naming.directory.DirContext context;

  private javax.naming.event.EventDirContext eventContext;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.activemq.security.DefaultAuthorizationMap> map;

  private final java.util.concurrent.ThreadPoolExecutor updaterService;

  protected java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.security.AuthorizationEntry> entries;

  public org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #6                  // String com.sun.jndi.ldap.LdapCtxFactory
       7: putfield      #7                  // Field initialContextFactory:Ljava/lang/String;
      10: aload_0
      11: ldc           #8                  // String ldap://localhost:1024
      13: putfield      #9                  // Field connectionURL:Ljava/lang/String;
      16: aload_0
      17: ldc           #10                 // String uid=admin,ou=system
      19: putfield      #11                 // Field connectionUsername:Ljava/lang/String;
      22: aload_0
      23: ldc           #12                 // String secret
      25: putfield      #13                 // Field connectionPassword:Ljava/lang/String;
      28: aload_0
      29: ldc           #14                 // String s
      31: putfield      #15                 // Field connectionProtocol:Ljava/lang/String;
      34: aload_0
      35: ldc           #16                 // String simple
      37: putfield      #17                 // Field authentication:Ljava/lang/String;
      40: aload_0
      41: iconst_4
      42: putfield      #18                 // Field queuePrefixLength:I
      45: aload_0
      46: iconst_4
      47: putfield      #19                 // Field topicPrefixLength:I
      50: aload_0
      51: iconst_4
      52: putfield      #20                 // Field tempPrefixLength:I
      55: aload_0
      56: ldc           #21                 // String ou=Queue,ou=Destination,ou=ActiveMQ,ou=system
      58: putfield      #22                 // Field queueSearchBase:Ljava/lang/String;
      61: aload_0
      62: ldc           #23                 // String ou=Topic,ou=Destination,ou=ActiveMQ,ou=system
      64: putfield      #24                 // Field topicSearchBase:Ljava/lang/String;
      67: aload_0
      68: ldc           #25                 // String ou=Temp,ou=Destination,ou=ActiveMQ,ou=system
      70: putfield      #26                 // Field tempSearchBase:Ljava/lang/String;
      73: aload_0
      74: ldc           #27                 // String member
      76: putfield      #28                 // Field permissionGroupMemberAttribute:Ljava/lang/String;
      79: aload_0
      80: ldc           #29                 // String (cn=Admin)
      82: putfield      #30                 // Field adminPermissionGroupSearchFilter:Ljava/lang/String;
      85: aload_0
      86: ldc           #31                 // String (cn=Read)
      88: putfield      #32                 // Field readPermissionGroupSearchFilter:Ljava/lang/String;
      91: aload_0
      92: ldc           #33                 // String (cn=Write)
      94: putfield      #34                 // Field writePermissionGroupSearchFilter:Ljava/lang/String;
      97: aload_0
      98: iconst_1
      99: putfield      #35                 // Field legacyGroupMapping:Z
     102: aload_0
     103: ldc           #36                 // String groupOfNames
     105: putfield      #37                 // Field groupObjectClass:Ljava/lang/String;
     108: aload_0
     109: ldc           #38                 // String person
     111: putfield      #39                 // Field userObjectClass:Ljava/lang/String;
     114: aload_0
     115: ldc           #40                 // String cn
     117: putfield      #41                 // Field groupNameAttribute:Ljava/lang/String;
     120: aload_0
     121: ldc           #42                 // String uid
     123: putfield      #43                 // Field userNameAttribute:Ljava/lang/String;
     126: aload_0
     127: iconst_m1
     128: putfield      #3                  // Field refreshInterval:I
     131: aload_0
     132: iconst_0
     133: putfield      #4                  // Field refreshDisabled:Z
     136: aload_0
     137: ldc           #44                 // String org.apache.activemq.jaas.GroupPrincipal
     139: putfield      #45                 // Field groupClass:Ljava/lang/String;
     142: aload_0
     143: new           #46                 // class java/util/concurrent/atomic/AtomicReference
     146: dup
     147: new           #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
     150: dup
     151: invokespecial #48                 // Method org/apache/activemq/security/DefaultAuthorizationMap."<init>":()V
     154: invokespecial #49                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
     157: putfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
     160: aload_0
     161: new           #51                 // class java/util/concurrent/ConcurrentHashMap
     164: dup
     165: invokespecial #52                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     168: putfield      #53                 // Field entries:Ljava/util/Map;
     171: aload_0
     172: new           #54                 // class java/util/concurrent/ThreadPoolExecutor
     175: dup
     176: iconst_0
     177: iconst_1
     178: ldc2_w        #55                 // long 60l
     181: getstatic     #57                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     184: new           #58                 // class java/util/concurrent/LinkedBlockingQueue
     187: dup
     188: iconst_2
     189: invokespecial #59                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
     192: new           #60                 // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$1
     195: dup
     196: aload_0
     197: invokespecial #61                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$1."<init>":(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap;)V
     200: invokespecial #62                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
     203: putfield      #63                 // Field updaterService:Ljava/util/concurrent/ThreadPoolExecutor;
     206: aload_0
     207: getfield      #63                 // Field updaterService:Ljava/util/concurrent/ThreadPoolExecutor;
     210: new           #64                 // class java/util/concurrent/ThreadPoolExecutor$DiscardPolicy
     213: dup
     214: invokespecial #65                 // Method java/util/concurrent/ThreadPoolExecutor$DiscardPolicy."<init>":()V
     217: invokevirtual #66                 // Method java/util/concurrent/ThreadPoolExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
     220: return

  protected javax.naming.directory.DirContext createContext() throws javax.naming.NamingException;
    Code:
       0: new           #67                 // class java/util/Hashtable
       3: dup
       4: invokespecial #68                 // Method java/util/Hashtable."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #69                 // String java.naming.factory.initial
      11: ldc           #6                  // String com.sun.jndi.ldap.LdapCtxFactory
      13: invokevirtual #70                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #11                 // Field connectionUsername:Ljava/lang/String;
      21: ifnull        50
      24: ldc           #71                 // String
      26: aload_0
      27: getfield      #11                 // Field connectionUsername:Ljava/lang/String;
      30: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          50
      36: aload_1
      37: ldc           #73                 // String java.naming.security.principal
      39: aload_0
      40: getfield      #11                 // Field connectionUsername:Ljava/lang/String;
      43: invokevirtual #70                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: goto          60
      50: new           #74                 // class javax/naming/NamingException
      53: dup
      54: ldc           #75                 // String Empty username is not allowed
      56: invokespecial #76                 // Method javax/naming/NamingException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #13                 // Field connectionPassword:Ljava/lang/String;
      64: ifnull        93
      67: ldc           #71                 // String
      69: aload_0
      70: getfield      #13                 // Field connectionPassword:Ljava/lang/String;
      73: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifne          93
      79: aload_1
      80: ldc           #77                 // String java.naming.security.credentials
      82: aload_0
      83: getfield      #13                 // Field connectionPassword:Ljava/lang/String;
      86: invokevirtual #70                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: goto          103
      93: new           #74                 // class javax/naming/NamingException
      96: dup
      97: ldc           #78                 // String Empty password is not allowed
      99: invokespecial #76                 // Method javax/naming/NamingException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_1
     104: ldc           #79                 // String java.naming.security.protocol
     106: aload_0
     107: getfield      #15                 // Field connectionProtocol:Ljava/lang/String;
     110: invokevirtual #70                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload_1
     115: ldc           #80                 // String java.naming.provider.url
     117: aload_0
     118: getfield      #9                  // Field connectionURL:Ljava/lang/String;
     121: invokevirtual #70                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: aload_1
     126: ldc           #81                 // String java.naming.security.authentication
     128: aload_0
     129: getfield      #17                 // Field authentication:Ljava/lang/String;
     132: invokevirtual #70                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: new           #82                 // class javax/naming/directory/InitialDirContext
     139: dup
     140: aload_1
     141: invokespecial #83                 // Method javax/naming/directory/InitialDirContext."<init>":(Ljava/util/Hashtable;)V
     144: areturn

  protected boolean isContextAlive();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
       6: ifnull        27
       9: aload_0
      10: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      13: ldc           #71                 // String
      15: invokeinterface #85,  2           // InterfaceMethod javax/naming/directory/DirContext.getAttributes:(Ljava/lang/String;)Ljavax/naming/directory/Attributes;
      20: pop
      21: iconst_1
      22: istore_1
      23: goto          27
      26: astore_2
      27: iload_1
      28: ireturn
    Exception table:
       from    to  target type
           9    23    26   Class java/lang/Exception

  protected javax.naming.directory.DirContext open() throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method isContextAlive:()Z
       4: ifeq          12
       7: aload_0
       8: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      11: areturn
      12: aload_0
      13: aload_0
      14: invokevirtual #88                 // Method createContext:()Ljavax/naming/directory/DirContext;
      17: putfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      20: aload_0
      21: getfield      #3                  // Field refreshInterval:I
      24: iconst_m1
      25: if_icmpne     317
      28: aload_0
      29: getfield      #4                  // Field refreshDisabled:Z
      32: ifne          317
      35: aload_0
      36: aload_0
      37: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      40: ldc           #71                 // String
      42: invokeinterface #89,  2           // InterfaceMethod javax/naming/directory/DirContext.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      47: checkcast     #90                 // class javax/naming/event/EventDirContext
      50: putfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
      53: new           #92                 // class javax/naming/directory/SearchControls
      56: dup
      57: invokespecial #93                 // Method javax/naming/directory/SearchControls."<init>":()V
      60: astore_1
      61: aload_1
      62: iconst_2
      63: invokevirtual #94                 // Method javax/naming/directory/SearchControls.setSearchScope:(I)V
      66: invokestatic  #95                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.values:()[Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;
      69: astore_2
      70: aload_2
      71: arraylength
      72: istore_3
      73: iconst_0
      74: istore        4
      76: iload         4
      78: iload_3
      79: if_icmpge     127
      82: aload_2
      83: iload         4
      85: aaload
      86: astore        5
      88: aload_0
      89: getfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
      92: aload_0
      93: getfield      #22                 // Field queueSearchBase:Ljava/lang/String;
      96: aload_0
      97: aload         5
      99: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     102: aload_1
     103: new           #97                 // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener
     106: dup
     107: aload_0
     108: getstatic     #98                 // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.QUEUE:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
     111: aload         5
     113: invokespecial #99                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener."<init>":(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     116: invokeinterface #100,  5          // InterfaceMethod javax/naming/event/EventDirContext.addNamingListener:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;Ljavax/naming/event/NamingListener;)V
     121: iinc          4, 1
     124: goto          76
     127: aload_0
     128: getfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
     131: aload_0
     132: getfield      #22                 // Field queueSearchBase:Ljava/lang/String;
     135: ldc           #101                // String cn=*
     137: new           #92                 // class javax/naming/directory/SearchControls
     140: dup
     141: invokespecial #93                 // Method javax/naming/directory/SearchControls."<init>":()V
     144: new           #97                 // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener
     147: dup
     148: aload_0
     149: getstatic     #98                 // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.QUEUE:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
     152: aconst_null
     153: invokespecial #99                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener."<init>":(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     156: invokeinterface #100,  5          // InterfaceMethod javax/naming/event/EventDirContext.addNamingListener:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;Ljavax/naming/event/NamingListener;)V
     161: invokestatic  #95                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.values:()[Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;
     164: astore_2
     165: aload_2
     166: arraylength
     167: istore_3
     168: iconst_0
     169: istore        4
     171: iload         4
     173: iload_3
     174: if_icmpge     222
     177: aload_2
     178: iload         4
     180: aaload
     181: astore        5
     183: aload_0
     184: getfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
     187: aload_0
     188: getfield      #24                 // Field topicSearchBase:Ljava/lang/String;
     191: aload_0
     192: aload         5
     194: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     197: aload_1
     198: new           #97                 // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener
     201: dup
     202: aload_0
     203: getstatic     #102                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.TOPIC:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
     206: aload         5
     208: invokespecial #99                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener."<init>":(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     211: invokeinterface #100,  5          // InterfaceMethod javax/naming/event/EventDirContext.addNamingListener:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;Ljavax/naming/event/NamingListener;)V
     216: iinc          4, 1
     219: goto          171
     222: aload_0
     223: getfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
     226: aload_0
     227: getfield      #24                 // Field topicSearchBase:Ljava/lang/String;
     230: ldc           #101                // String cn=*
     232: new           #92                 // class javax/naming/directory/SearchControls
     235: dup
     236: invokespecial #93                 // Method javax/naming/directory/SearchControls."<init>":()V
     239: new           #97                 // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener
     242: dup
     243: aload_0
     244: getstatic     #102                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.TOPIC:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
     247: aconst_null
     248: invokespecial #99                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener."<init>":(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     251: invokeinterface #100,  5          // InterfaceMethod javax/naming/event/EventDirContext.addNamingListener:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;Ljavax/naming/event/NamingListener;)V
     256: invokestatic  #95                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.values:()[Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;
     259: astore_2
     260: aload_2
     261: arraylength
     262: istore_3
     263: iconst_0
     264: istore        4
     266: iload         4
     268: iload_3
     269: if_icmpge     317
     272: aload_2
     273: iload         4
     275: aaload
     276: astore        5
     278: aload_0
     279: getfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
     282: aload_0
     283: getfield      #26                 // Field tempSearchBase:Ljava/lang/String;
     286: aload_0
     287: aload         5
     289: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     292: aload_1
     293: new           #97                 // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener
     296: dup
     297: aload_0
     298: getstatic     #103                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.TEMP:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
     301: aload         5
     303: invokespecial #99                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$CachedLDAPAuthorizationMapNamespaceChangeListener."<init>":(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     306: invokeinterface #100,  5          // InterfaceMethod javax/naming/event/EventDirContext.addNamingListener:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;Ljavax/naming/event/NamingListener;)V
     311: iinc          4, 1
     314: goto          266
     317: goto          328
     320: astore_1
     321: aload_0
     322: aconst_null
     323: putfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
     326: aload_1
     327: athrow
     328: aload_0
     329: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
     332: areturn
    Exception table:
       from    to  target type
          12   317   320   Class javax/naming/NamingException

  protected void query() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #104                // Method open:()Ljavax/naming/directory/DirContext;
       4: astore_1
       5: new           #92                 // class javax/naming/directory/SearchControls
       8: dup
       9: invokespecial #93                 // Method javax/naming/directory/SearchControls."<init>":()V
      12: astore_2
      13: aload_2
      14: iconst_2
      15: invokevirtual #94                 // Method javax/naming/directory/SearchControls.setSearchScope:(I)V
      18: new           #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      21: dup
      22: invokespecial #48                 // Method org/apache/activemq/security/DefaultAuthorizationMap."<init>":()V
      25: astore_3
      26: invokestatic  #95                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.values:()[Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;
      29: astore        4
      31: aload         4
      33: arraylength
      34: istore        5
      36: iconst_0
      37: istore        6
      39: iload         6
      41: iload         5
      43: if_icmpge     123
      46: aload         4
      48: iload         6
      50: aaload
      51: astore        7
      53: aload_0
      54: aload_3
      55: aload_1
      56: aload_0
      57: getfield      #22                 // Field queueSearchBase:Ljava/lang/String;
      60: aload_0
      61: aload         7
      63: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
      66: aload_2
      67: invokeinterface #105,  4          // InterfaceMethod javax/naming/directory/DirContext.search:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;)Ljavax/naming/NamingEnumeration;
      72: getstatic     #98                 // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.QUEUE:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
      75: aload         7
      77: invokevirtual #106                // Method processQueryResults:(Lorg/apache/activemq/security/DefaultAuthorizationMap;Ljavax/naming/NamingEnumeration;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
      80: goto          117
      83: astore        8
      85: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      88: ldc           #107                // String Policy not applied!.  Error processing policy under \'{}\' with filter \'{}\'
      90: iconst_2
      91: anewarray     #108                // class java/lang/Object
      94: dup
      95: iconst_0
      96: aload_0
      97: getfield      #22                 // Field queueSearchBase:Ljava/lang/String;
     100: aastore
     101: dup
     102: iconst_1
     103: aload_0
     104: aload         7
     106: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     109: aastore
     110: aload         8
     112: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     117: iinc          6, 1
     120: goto          39
     123: invokestatic  #95                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.values:()[Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;
     126: astore        4
     128: aload         4
     130: arraylength
     131: istore        5
     133: iconst_0
     134: istore        6
     136: iload         6
     138: iload         5
     140: if_icmpge     220
     143: aload         4
     145: iload         6
     147: aaload
     148: astore        7
     150: aload_0
     151: aload_3
     152: aload_1
     153: aload_0
     154: getfield      #24                 // Field topicSearchBase:Ljava/lang/String;
     157: aload_0
     158: aload         7
     160: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     163: aload_2
     164: invokeinterface #105,  4          // InterfaceMethod javax/naming/directory/DirContext.search:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;)Ljavax/naming/NamingEnumeration;
     169: getstatic     #102                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.TOPIC:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
     172: aload         7
     174: invokevirtual #106                // Method processQueryResults:(Lorg/apache/activemq/security/DefaultAuthorizationMap;Ljavax/naming/NamingEnumeration;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     177: goto          214
     180: astore        8
     182: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     185: ldc           #107                // String Policy not applied!.  Error processing policy under \'{}\' with filter \'{}\'
     187: iconst_2
     188: anewarray     #108                // class java/lang/Object
     191: dup
     192: iconst_0
     193: aload_0
     194: getfield      #24                 // Field topicSearchBase:Ljava/lang/String;
     197: aastore
     198: dup
     199: iconst_1
     200: aload_0
     201: aload         7
     203: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     206: aastore
     207: aload         8
     209: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     214: iinc          6, 1
     217: goto          136
     220: invokestatic  #95                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.values:()[Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;
     223: astore        4
     225: aload         4
     227: arraylength
     228: istore        5
     230: iconst_0
     231: istore        6
     233: iload         6
     235: iload         5
     237: if_icmpge     317
     240: aload         4
     242: iload         6
     244: aaload
     245: astore        7
     247: aload_0
     248: aload_3
     249: aload_1
     250: aload_0
     251: getfield      #26                 // Field tempSearchBase:Ljava/lang/String;
     254: aload_0
     255: aload         7
     257: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     260: aload_2
     261: invokeinterface #105,  4          // InterfaceMethod javax/naming/directory/DirContext.search:(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;)Ljavax/naming/NamingEnumeration;
     266: getstatic     #103                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.TEMP:Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;
     269: aload         7
     271: invokevirtual #106                // Method processQueryResults:(Lorg/apache/activemq/security/DefaultAuthorizationMap;Ljavax/naming/NamingEnumeration;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     274: goto          311
     277: astore        8
     279: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     282: ldc           #107                // String Policy not applied!.  Error processing policy under \'{}\' with filter \'{}\'
     284: iconst_2
     285: anewarray     #108                // class java/lang/Object
     288: dup
     289: iconst_0
     290: aload_0
     291: getfield      #26                 // Field tempSearchBase:Ljava/lang/String;
     294: aastore
     295: dup
     296: iconst_1
     297: aload_0
     298: aload         7
     300: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     303: aastore
     304: aload         8
     306: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     311: iinc          6, 1
     314: goto          233
     317: aload_3
     318: new           #110                // class java/util/ArrayList
     321: dup
     322: aload_0
     323: getfield      #53                 // Field entries:Ljava/util/Map;
     326: invokeinterface #111,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     331: invokespecial #112                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     334: invokevirtual #113                // Method org/apache/activemq/security/DefaultAuthorizationMap.setAuthorizationEntries:(Ljava/util/List;)V
     337: aload_3
     338: aload_0
     339: getfield      #45                 // Field groupClass:Ljava/lang/String;
     342: invokevirtual #114                // Method org/apache/activemq/security/DefaultAuthorizationMap.setGroupClass:(Ljava/lang/String;)V
     345: aload_0
     346: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
     349: aload_3
     350: invokevirtual #115                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     353: aload_0
     354: invokevirtual #116                // Method updated:()V
     357: return
    Exception table:
       from    to  target type
          53    80    83   Class java/lang/Exception
         150   177   180   Class java/lang/Exception
         247   274   277   Class java/lang/Exception

  protected void processQueryResults(org.apache.activemq.security.DefaultAuthorizationMap, javax.naming.NamingEnumeration<javax.naming.directory.SearchResult>, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #117,  1          // InterfaceMethod javax/naming/NamingEnumeration.hasMore:()Z
       6: ifeq          81
       9: aload_2
      10: invokeinterface #118,  1          // InterfaceMethod javax/naming/NamingEnumeration.next:()Ljava/lang/Object;
      15: checkcast     #119                // class javax/naming/directory/SearchResult
      18: astore        5
      20: aconst_null
      21: astore        6
      23: aload_0
      24: aload_1
      25: new           #120                // class javax/naming/ldap/LdapName
      28: dup
      29: aload         5
      31: invokevirtual #121                // Method javax/naming/directory/SearchResult.getNameInNamespace:()Ljava/lang/String;
      34: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
      37: aload_3
      38: invokevirtual #123                // Method getEntry:(Lorg/apache/activemq/security/DefaultAuthorizationMap;Ljavax/naming/ldap/LdapName;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/security/AuthorizationEntry;
      41: astore        6
      43: goto          68
      46: astore        7
      48: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      51: ldc           #124                // String Policy not applied!  Error parsing authorization policy entry under {}
      53: aload         5
      55: invokevirtual #121                // Method javax/naming/directory/SearchResult.getNameInNamespace:()Ljava/lang/String;
      58: aload         7
      60: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      65: goto          0
      68: aload_0
      69: aload         6
      71: aload         5
      73: aload         4
      75: invokevirtual #125                // Method applyACL:(Lorg/apache/activemq/security/AuthorizationEntry;Ljavax/naming/directory/SearchResult;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
      78: goto          0
      81: return
    Exception table:
       from    to  target type
          23    43    46   Class java/lang/Exception

  protected void updated();
    Code:
       0: aload_0
       1: invokestatic  #126                // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #2                  // Field lastUpdated:J
       7: return

  protected org.apache.activemq.security.AuthorizationEntry getEntry(org.apache.activemq.security.DefaultAuthorizationMap, javax.naming.ldap.LdapName, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType);
    Code:
       0: aconst_null
       1: astore        4
       3: getstatic     #127                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$3.$SwitchMap$org$apache$activemq$security$SimpleCachedLDAPAuthorizationMap$DestinationType:[I
       6: aload_3
       7: invokevirtual #128                // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 92
                     3: 92
               default: 183
          }
      36: aload_2
      37: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      40: aload_0
      41: aload_3
      42: invokevirtual #130                // Method getPrefixLengthForDestinationType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)I
      45: iconst_1
      46: iadd
      47: if_icmpeq     60
      50: new           #131                // class java/lang/IllegalArgumentException
      53: dup
      54: ldc           #132                // String Malformed policy structure for a temporary destination policy entry.  The permission group entries should be immediately below the temporary policy base DN.
      56: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_1
      61: invokevirtual #134                // Method org/apache/activemq/security/DefaultAuthorizationMap.getTempDestinationAuthorizationEntry:()Lorg/apache/activemq/security/TempDestinationAuthorizationEntry;
      64: astore        4
      66: aload         4
      68: ifnonnull     210
      71: new           #135                // class org/apache/activemq/security/TempDestinationAuthorizationEntry
      74: dup
      75: invokespecial #136                // Method org/apache/activemq/security/TempDestinationAuthorizationEntry."<init>":()V
      78: astore        4
      80: aload_1
      81: aload         4
      83: checkcast     #135                // class org/apache/activemq/security/TempDestinationAuthorizationEntry
      86: invokevirtual #137                // Method org/apache/activemq/security/DefaultAuthorizationMap.setTempDestinationAuthorizationEntry:(Lorg/apache/activemq/security/TempDestinationAuthorizationEntry;)V
      89: goto          210
      92: aload_2
      93: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      96: aload_0
      97: aload_3
      98: invokevirtual #130                // Method getPrefixLengthForDestinationType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)I
     101: iconst_2
     102: iadd
     103: if_icmpeq     116
     106: new           #131                // class java/lang/IllegalArgumentException
     109: dup
     110: ldc           #138                // String Malformed policy structure for a queue or topic destination policy entry.  The destination pattern and permission group entries should be nested below the queue or topic policy base DN.
     112: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload_0
     117: aload_2
     118: aload_3
     119: invokevirtual #139                // Method formatDestination:(Ljavax/naming/ldap/LdapName;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/command/ActiveMQDestination;
     122: astore        5
     124: aload         5
     126: ifnull        210
     129: aload_0
     130: getfield      #53                 // Field entries:Ljava/util/Map;
     133: aload         5
     135: invokeinterface #140,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     140: checkcast     #141                // class org/apache/activemq/security/AuthorizationEntry
     143: astore        4
     145: aload         4
     147: ifnonnull     210
     150: new           #141                // class org/apache/activemq/security/AuthorizationEntry
     153: dup
     154: invokespecial #142                // Method org/apache/activemq/security/AuthorizationEntry."<init>":()V
     157: astore        4
     159: aload         4
     161: aload         5
     163: invokevirtual #143                // Method org/apache/activemq/security/AuthorizationEntry.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     166: aload_0
     167: getfield      #53                 // Field entries:Ljava/util/Map;
     170: aload         5
     172: aload         4
     174: invokeinterface #144,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     179: pop
     180: goto          210
     183: new           #131                // class java/lang/IllegalArgumentException
     186: dup
     187: new           #145                // class java/lang/StringBuilder
     190: dup
     191: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
     194: ldc           #147                // String Unknown destination type
     196: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_3
     200: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     203: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     209: athrow
     210: aload         4
     212: areturn

  protected void applyACL(org.apache.activemq.security.AuthorizationEntry, javax.naming.directory.SearchResult, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType) throws javax.naming.NamingException;
    Code:
       0: aload_2
       1: invokevirtual #151                // Method javax/naming/directory/SearchResult.getAttributes:()Ljavax/naming/directory/Attributes;
       4: aload_0
       5: getfield      #28                 // Field permissionGroupMemberAttribute:Ljava/lang/String;
       8: invokeinterface #152,  2          // InterfaceMethod javax/naming/directory/Attributes.get:(Ljava/lang/String;)Ljavax/naming/directory/Attribute;
      13: astore        4
      15: aload         4
      17: invokeinterface #153,  1          // InterfaceMethod javax/naming/directory/Attribute.getAll:()Ljavax/naming/NamingEnumeration;
      22: astore        5
      24: new           #154                // class java/util/HashSet
      27: dup
      28: invokespecial #155                // Method java/util/HashSet."<init>":()V
      31: astore        6
      33: aload         5
      35: invokeinterface #156,  1          // InterfaceMethod javax/naming/NamingEnumeration.hasMoreElements:()Z
      40: ifeq          535
      43: aload         5
      45: invokeinterface #157,  1          // InterfaceMethod javax/naming/NamingEnumeration.nextElement:()Ljava/lang/Object;
      50: checkcast     #158                // class java/lang/String
      53: astore        7
      55: iconst_0
      56: istore        8
      58: iconst_0
      59: istore        9
      61: aconst_null
      62: astore        10
      64: aload_0
      65: getfield      #35                 // Field legacyGroupMapping:Z
      68: ifne          353
      71: aload_0
      72: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      75: aload         7
      77: iconst_3
      78: anewarray     #158                // class java/lang/String
      81: dup
      82: iconst_0
      83: ldc           #159                // String objectClass
      85: aastore
      86: dup
      87: iconst_1
      88: aload_0
      89: getfield      #41                 // Field groupNameAttribute:Ljava/lang/String;
      92: aastore
      93: dup
      94: iconst_2
      95: aload_0
      96: getfield      #43                 // Field userNameAttribute:Ljava/lang/String;
      99: aastore
     100: invokeinterface #160,  3          // InterfaceMethod javax/naming/directory/DirContext.getAttributes:(Ljava/lang/String;[Ljava/lang/String;)Ljavax/naming/directory/Attributes;
     105: astore        11
     107: goto          143
     110: astore        12
     112: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     115: ldc           #161                // String Policy not applied! Unknown member {} in policy entry {}
     117: iconst_2
     118: anewarray     #108                // class java/lang/Object
     121: dup
     122: iconst_0
     123: aload         7
     125: aastore
     126: dup
     127: iconst_1
     128: aload_2
     129: invokevirtual #121                // Method javax/naming/directory/SearchResult.getNameInNamespace:()Ljava/lang/String;
     132: aastore
     133: aload         12
     135: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     140: goto          33
     143: aload         11
     145: ldc           #159                // String objectClass
     147: invokeinterface #152,  2          // InterfaceMethod javax/naming/directory/Attributes.get:(Ljava/lang/String;)Ljavax/naming/directory/Attribute;
     152: astore        12
     154: aload         12
     156: invokeinterface #153,  1          // InterfaceMethod javax/naming/directory/Attribute.getAll:()Ljavax/naming/NamingEnumeration;
     161: astore        13
     163: aload         13
     165: invokeinterface #156,  1          // InterfaceMethod javax/naming/NamingEnumeration.hasMoreElements:()Z
     170: ifeq          350
     173: aload         13
     175: invokeinterface #157,  1          // InterfaceMethod javax/naming/NamingEnumeration.nextElement:()Ljava/lang/Object;
     180: checkcast     #158                // class java/lang/String
     183: astore        14
     185: aload         14
     187: aload_0
     188: getfield      #37                 // Field groupObjectClass:Ljava/lang/String;
     191: invokevirtual #162                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     194: ifeq          266
     197: iconst_1
     198: istore        8
     200: aload         11
     202: aload_0
     203: getfield      #41                 // Field groupNameAttribute:Ljava/lang/String;
     206: invokeinterface #152,  2          // InterfaceMethod javax/naming/directory/Attributes.get:(Ljava/lang/String;)Ljavax/naming/directory/Attribute;
     211: astore        15
     213: aload         15
     215: ifnonnull     254
     218: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     221: ldc           #163                // String Policy not applied! Group {} does not have name attribute {} under entry {}
     223: iconst_3
     224: anewarray     #108                // class java/lang/Object
     227: dup
     228: iconst_0
     229: aload         7
     231: aastore
     232: dup
     233: iconst_1
     234: aload_0
     235: getfield      #41                 // Field groupNameAttribute:Ljava/lang/String;
     238: aastore
     239: dup
     240: iconst_2
     241: aload_2
     242: invokevirtual #121                // Method javax/naming/directory/SearchResult.getNameInNamespace:()Ljava/lang/String;
     245: aastore
     246: invokeinterface #164,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     251: goto          350
     254: aload         15
     256: invokeinterface #165,  1          // InterfaceMethod javax/naming/directory/Attribute.get:()Ljava/lang/Object;
     261: checkcast     #158                // class java/lang/String
     264: astore        10
     266: aload         14
     268: aload_0
     269: getfield      #39                 // Field userObjectClass:Ljava/lang/String;
     272: invokevirtual #162                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     275: ifeq          347
     278: iconst_1
     279: istore        9
     281: aload         11
     283: aload_0
     284: getfield      #43                 // Field userNameAttribute:Ljava/lang/String;
     287: invokeinterface #152,  2          // InterfaceMethod javax/naming/directory/Attributes.get:(Ljava/lang/String;)Ljavax/naming/directory/Attribute;
     292: astore        15
     294: aload         15
     296: ifnonnull     335
     299: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     302: ldc           #166                // String Policy not applied! User {} does not have name attribute {} under entry {}
     304: iconst_3
     305: anewarray     #108                // class java/lang/Object
     308: dup
     309: iconst_0
     310: aload         7
     312: aastore
     313: dup
     314: iconst_1
     315: aload_0
     316: getfield      #43                 // Field userNameAttribute:Ljava/lang/String;
     319: aastore
     320: dup
     321: iconst_2
     322: aload_2
     323: invokevirtual #121                // Method javax/naming/directory/SearchResult.getNameInNamespace:()Ljava/lang/String;
     326: aastore
     327: invokeinterface #164,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     332: goto          350
     335: aload         15
     337: invokeinterface #165,  1          // InterfaceMethod javax/naming/directory/Attribute.get:()Ljava/lang/Object;
     342: checkcast     #158                // class java/lang/String
     345: astore        10
     347: goto          163
     350: goto          367
     353: iconst_1
     354: istore        8
     356: aload         7
     358: ldc           #167                // String (cn|CN)=
     360: ldc           #71                 // String
     362: invokevirtual #168                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     365: astore        10
     367: iload         8
     369: ifne          377
     372: iload         9
     374: ifeq          387
     377: iload         8
     379: ifeq          406
     382: iload         9
     384: ifeq          406
     387: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     390: ldc           #169                // String Policy not applied! Can\'t determine type of member {} under entry {}
     392: aload         7
     394: aload_2
     395: invokevirtual #121                // Method javax/naming/directory/SearchResult.getNameInNamespace:()Ljava/lang/String;
     398: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     403: goto          532
     406: aload         10
     408: ifnull        532
     411: aload_0
     412: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
     415: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     418: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
     421: astore        11
     423: iload         8
     425: ifeq          507
     428: iload         9
     430: ifne          507
     433: aload         6
     435: aload         10
     437: aload         11
     439: invokevirtual #171                // Method org/apache/activemq/security/DefaultAuthorizationMap.getGroupClass:()Ljava/lang/String;
     442: invokestatic  #172                // Method org/apache/activemq/security/DefaultAuthorizationMap.createGroupPrincipal:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     445: invokevirtual #173                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     448: pop
     449: goto          532
     452: astore        12
     454: new           #74                 // class javax/naming/NamingException
     457: dup
     458: new           #145                // class java/lang/StringBuilder
     461: dup
     462: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
     465: ldc           #174                // String Can\'t create a group
     467: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     470: aload         10
     472: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     475: ldc           #175                // String  of class
     477: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     480: aload         11
     482: invokevirtual #171                // Method org/apache/activemq/security/DefaultAuthorizationMap.getGroupClass:()Ljava/lang/String;
     485: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     488: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     491: invokespecial #76                 // Method javax/naming/NamingException."<init>":(Ljava/lang/String;)V
     494: astore        13
     496: aload         13
     498: aload         12
     500: invokevirtual #176                // Method javax/naming/NamingException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     503: pop
     504: aload         13
     506: athrow
     507: iload         8
     509: ifne          532
     512: iload         9
     514: ifeq          532
     517: aload         6
     519: new           #177                // class org/apache/activemq/jaas/UserPrincipal
     522: dup
     523: aload         10
     525: invokespecial #178                // Method org/apache/activemq/jaas/UserPrincipal."<init>":(Ljava/lang/String;)V
     528: invokevirtual #173                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     531: pop
     532: goto          33
     535: aload_0
     536: aload_1
     537: aload_3
     538: aload         6
     540: invokevirtual #179                // Method applyAcl:(Lorg/apache/activemq/security/AuthorizationEntry;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;Ljava/util/Set;)V
     543: goto          564
     546: astore        7
     548: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     551: ldc           #180                // String Policy not applied! Error adding principals to ACL under {}
     553: aload_2
     554: invokevirtual #121                // Method javax/naming/directory/SearchResult.getNameInNamespace:()Ljava/lang/String;
     557: aload         7
     559: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     564: return
    Exception table:
       from    to  target type
          71   107   110   Class javax/naming/NamingException
         433   449   452   Class java/lang/Exception
         535   543   546   Class java/lang/Exception

  protected void applyAcl(org.apache.activemq.security.AuthorizationEntry, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType, java.util.Set<java.lang.Object>);
    Code:
       0: getstatic     #181                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$3.$SwitchMap$org$apache$activemq$security$SimpleCachedLDAPAuthorizationMap$PermissionType:[I
       3: aload_2
       4: invokevirtual #182                // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 44
                     3: 52
               default: 60
          }
      36: aload_1
      37: aload_3
      38: invokevirtual #183                // Method org/apache/activemq/security/AuthorizationEntry.setReadACLs:(Ljava/util/Set;)V
      41: goto          92
      44: aload_1
      45: aload_3
      46: invokevirtual #184                // Method org/apache/activemq/security/AuthorizationEntry.setWriteACLs:(Ljava/util/Set;)V
      49: goto          92
      52: aload_1
      53: aload_3
      54: invokevirtual #185                // Method org/apache/activemq/security/AuthorizationEntry.setAdminACLs:(Ljava/util/Set;)V
      57: goto          92
      60: new           #131                // class java/lang/IllegalArgumentException
      63: dup
      64: new           #145                // class java/lang/StringBuilder
      67: dup
      68: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #186                // String Unknown permission
      73: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_2
      77: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: ldc           #187                // String .
      82: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: return

  protected org.apache.activemq.command.ActiveMQDestination formatDestination(javax.naming.ldap.LdapName, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType);
    Code:
       0: aconst_null
       1: astore_3
       2: getstatic     #127                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$3.$SwitchMap$org$apache$activemq$security$SimpleCachedLDAPAuthorizationMap$DestinationType:[I
       5: aload_2
       6: invokevirtual #128                // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.ordinal:()I
       9: iaload
      10: lookupswitch  { // 2
                     2: 36
                     3: 36
               default: 112
          }
      36: aload_1
      37: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      40: aload_0
      41: aload_2
      42: invokevirtual #130                // Method getPrefixLengthForDestinationType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)I
      45: iconst_2
      46: iadd
      47: if_icmpne     69
      50: aload_0
      51: aload_1
      52: aload_1
      53: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      56: iconst_2
      57: isub
      58: invokevirtual #188                // Method javax/naming/ldap/LdapName.getRdn:(I)Ljavax/naming/ldap/Rdn;
      61: aload_2
      62: invokevirtual #189                // Method formatDestination:(Ljavax/naming/ldap/Rdn;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/command/ActiveMQDestination;
      65: astore_3
      66: goto          139
      69: aload_1
      70: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      73: aload_0
      74: aload_2
      75: invokevirtual #130                // Method getPrefixLengthForDestinationType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)I
      78: iconst_1
      79: iadd
      80: if_icmpne     102
      83: aload_0
      84: aload_1
      85: aload_1
      86: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      89: iconst_1
      90: isub
      91: invokevirtual #188                // Method javax/naming/ldap/LdapName.getRdn:(I)Ljavax/naming/ldap/Rdn;
      94: aload_2
      95: invokevirtual #189                // Method formatDestination:(Ljavax/naming/ldap/Rdn;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/command/ActiveMQDestination;
      98: astore_3
      99: goto          139
     102: new           #131                // class java/lang/IllegalArgumentException
     105: dup
     106: ldc           #190                // String Malformed DN for representing a permission or destination entry.
     108: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: new           #131                // class java/lang/IllegalArgumentException
     115: dup
     116: new           #145                // class java/lang/StringBuilder
     119: dup
     120: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #191                // String Cannot format destination for destination type
     125: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_2
     129: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: aload_3
     140: areturn

  protected org.apache.activemq.command.ActiveMQDestination formatDestination(javax.naming.ldap.Rdn, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType);
    Code:
       0: aconst_null
       1: astore_3
       2: getstatic     #127                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$3.$SwitchMap$org$apache$activemq$security$SimpleCachedLDAPAuthorizationMap$DestinationType:[I
       5: aload_2
       6: invokevirtual #128                // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.ordinal:()I
       9: iaload
      10: lookupswitch  { // 2
                     2: 36
                     3: 52
               default: 68
          }
      36: new           #192                // class org/apache/activemq/command/ActiveMQQueue
      39: dup
      40: aload_0
      41: aload_1
      42: invokevirtual #193                // Method formatDestinationName:(Ljavax/naming/ldap/Rdn;)Ljava/lang/String;
      45: invokespecial #194                // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
      48: astore_3
      49: goto          95
      52: new           #195                // class org/apache/activemq/command/ActiveMQTopic
      55: dup
      56: aload_0
      57: aload_1
      58: invokevirtual #193                // Method formatDestinationName:(Ljavax/naming/ldap/Rdn;)Ljava/lang/String;
      61: invokespecial #196                // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
      64: astore_3
      65: goto          95
      68: new           #131                // class java/lang/IllegalArgumentException
      71: dup
      72: new           #145                // class java/lang/StringBuilder
      75: dup
      76: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #197                // String Unknown destination type:
      81: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_2
      85: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_3
      96: areturn

  protected java.lang.String formatDestinationName(javax.naming.ldap.Rdn);
    Code:
       0: aload_1
       1: invokevirtual #198                // Method javax/naming/ldap/Rdn.getValue:()Ljava/lang/Object;
       4: invokevirtual #199                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: getstatic     #200                // Field ANY_DESCENDANT:Ljava/lang/String;
      10: ldc           #201                // String >
      12: invokevirtual #168                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: areturn

  protected <T> java.util.Set<T> transcribeSet(java.util.Set<T>);
    Code:
       0: aload_1
       1: ifnull        13
       4: new           #154                // class java/util/HashSet
       7: dup
       8: aload_1
       9: invokespecial #202                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      12: areturn
      13: aconst_null
      14: areturn

  protected java.lang.String getFilterForPermissionType(org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #181                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$3.$SwitchMap$org$apache$activemq$security$SimpleCachedLDAPAuthorizationMap$PermissionType:[I
       5: aload_1
       6: invokevirtual #182                // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.ordinal:()I
       9: iaload
      10: tableswitch   { // 1 to 3
                     1: 44
                     2: 52
                     3: 36
               default: 60
          }
      36: aload_0
      37: getfield      #30                 // Field adminPermissionGroupSearchFilter:Ljava/lang/String;
      40: astore_2
      41: goto          87
      44: aload_0
      45: getfield      #32                 // Field readPermissionGroupSearchFilter:Ljava/lang/String;
      48: astore_2
      49: goto          87
      52: aload_0
      53: getfield      #34                 // Field writePermissionGroupSearchFilter:Ljava/lang/String;
      56: astore_2
      57: goto          87
      60: new           #131                // class java/lang/IllegalArgumentException
      63: dup
      64: new           #145                // class java/lang/StringBuilder
      67: dup
      68: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #203                // String Unknown permission type
      73: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_2
      88: areturn

  protected int getPrefixLengthForDestinationType(org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType);
    Code:
       0: iconst_0
       1: istore_2
       2: getstatic     #127                // Field org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$3.$SwitchMap$org$apache$activemq$security$SimpleCachedLDAPAuthorizationMap$DestinationType:[I
       5: aload_1
       6: invokevirtual #128                // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType.ordinal:()I
       9: iaload
      10: tableswitch   { // 1 to 3
                     1: 52
                     2: 36
                     3: 44
               default: 60
          }
      36: aload_0
      37: getfield      #18                 // Field queuePrefixLength:I
      40: istore_2
      41: goto          87
      44: aload_0
      45: getfield      #19                 // Field topicPrefixLength:I
      48: istore_2
      49: goto          87
      52: aload_0
      53: getfield      #20                 // Field tempPrefixLength:I
      56: istore_2
      57: goto          87
      60: new           #131                // class java/lang/IllegalArgumentException
      63: dup
      64: new           #145                // class java/lang/StringBuilder
      67: dup
      68: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #203                // String Unknown permission type
      73: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: iload_2
      88: ireturn

  protected void checkForUpdates();
    Code:
       0: aload_0
       1: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
       4: ifnull        15
       7: aload_0
       8: getfield      #4                  // Field refreshDisabled:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      19: ifnull        54
      22: aload_0
      23: getfield      #4                  // Field refreshDisabled:Z
      26: ifne          69
      29: aload_0
      30: getfield      #3                  // Field refreshInterval:I
      33: iconst_m1
      34: if_icmpeq     69
      37: invokestatic  #126                // Method java/lang/System.currentTimeMillis:()J
      40: aload_0
      41: getfield      #2                  // Field lastUpdated:J
      44: aload_0
      45: getfield      #3                  // Field refreshInterval:I
      48: i2l
      49: ladd
      50: lcmp
      51: iflt          69
      54: aload_0
      55: getfield      #63                 // Field updaterService:Ljava/util/concurrent/ThreadPoolExecutor;
      58: new           #204                // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$2
      61: dup
      62: aload_0
      63: invokespecial #205                // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$2."<init>":(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap;)V
      66: invokevirtual #206                // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      69: return

  public java.util.Set<java.lang.Object> getTempDestinationAdminACLs();
    Code:
       0: aload_0
       1: invokevirtual #207                // Method checkForUpdates:()V
       4: aload_0
       5: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #208                // Method org/apache/activemq/security/DefaultAuthorizationMap.getTempDestinationAdminACLs:()Ljava/util/Set;
      20: invokevirtual #209                // Method transcribeSet:(Ljava/util/Set;)Ljava/util/Set;
      23: areturn

  public java.util.Set<java.lang.Object> getTempDestinationReadACLs();
    Code:
       0: aload_0
       1: invokevirtual #207                // Method checkForUpdates:()V
       4: aload_0
       5: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #210                // Method org/apache/activemq/security/DefaultAuthorizationMap.getTempDestinationReadACLs:()Ljava/util/Set;
      20: invokevirtual #209                // Method transcribeSet:(Ljava/util/Set;)Ljava/util/Set;
      23: areturn

  public java.util.Set<java.lang.Object> getTempDestinationWriteACLs();
    Code:
       0: aload_0
       1: invokevirtual #207                // Method checkForUpdates:()V
       4: aload_0
       5: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #211                // Method org/apache/activemq/security/DefaultAuthorizationMap.getTempDestinationWriteACLs:()Ljava/util/Set;
      20: invokevirtual #209                // Method transcribeSet:(Ljava/util/Set;)Ljava/util/Set;
      23: areturn

  public java.util.Set<java.lang.Object> getAdminACLs(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: invokevirtual #207                // Method checkForUpdates:()V
       4: aload_0
       5: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      14: astore_2
      15: aload_2
      16: aload_1
      17: invokevirtual #212                // Method org/apache/activemq/security/DefaultAuthorizationMap.getAdminACLs:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      20: areturn

  public java.util.Set<java.lang.Object> getReadACLs(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: invokevirtual #207                // Method checkForUpdates:()V
       4: aload_0
       5: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      14: astore_2
      15: aload_2
      16: aload_1
      17: invokevirtual #213                // Method org/apache/activemq/security/DefaultAuthorizationMap.getReadACLs:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      20: areturn

  public java.util.Set<java.lang.Object> getWriteACLs(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: invokevirtual #207                // Method checkForUpdates:()V
       4: aload_0
       5: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      14: astore_2
      15: aload_2
      16: aload_1
      17: invokevirtual #214                // Method org/apache/activemq/security/DefaultAuthorizationMap.getWriteACLs:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Set;
      20: areturn

  public void objectAdded(javax.naming.event.NamingEvent, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType);
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #215                // String Adding object: {}
       5: aload_1
       6: invokevirtual #216                // Method javax/naming/event/NamingEvent.getNewBinding:()Ljavax/naming/Binding;
       9: invokeinterface #217,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_1
      15: invokevirtual #216                // Method javax/naming/event/NamingEvent.getNewBinding:()Ljavax/naming/Binding;
      18: checkcast     #119                // class javax/naming/directory/SearchResult
      21: astore        4
      23: aload_0
      24: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
      27: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      30: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      33: astore        5
      35: new           #120                // class javax/naming/ldap/LdapName
      38: dup
      39: aload         4
      41: invokevirtual #218                // Method javax/naming/directory/SearchResult.getName:()Ljava/lang/String;
      44: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
      47: astore        6
      49: aload_0
      50: aload         5
      52: aload         6
      54: aload_2
      55: invokevirtual #123                // Method getEntry:(Lorg/apache/activemq/security/DefaultAuthorizationMap;Ljavax/naming/ldap/LdapName;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/security/AuthorizationEntry;
      58: astore        7
      60: aload_0
      61: aload         7
      63: aload         4
      65: aload_3
      66: invokevirtual #125                // Method applyACL:(Lorg/apache/activemq/security/AuthorizationEntry;Ljavax/naming/directory/SearchResult;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
      69: aload         7
      71: instanceof    #135                // class org/apache/activemq/security/TempDestinationAuthorizationEntry
      74: ifne          89
      77: aload         5
      79: aload         7
      81: invokevirtual #219                // Method org/apache/activemq/security/AuthorizationEntry.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      84: aload         7
      86: invokevirtual #220                // Method org/apache/activemq/security/DefaultAuthorizationMap.put:(Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/Object;)V
      89: goto          133
      92: astore        5
      94: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      97: ldc           #222                // String Policy not applied!  Error parsing DN for addition of {}
      99: aload         4
     101: invokevirtual #218                // Method javax/naming/directory/SearchResult.getName:()Ljava/lang/String;
     104: aload         5
     106: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     111: goto          133
     114: astore        5
     116: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     119: ldc           #223                // String Policy not applied!  Error processing object addition for addition of {}
     121: aload         4
     123: invokevirtual #218                // Method javax/naming/directory/SearchResult.getName:()Ljava/lang/String;
     126: aload         5
     128: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     133: return
    Exception table:
       from    to  target type
          23    89    92   Class javax/naming/InvalidNameException
          23    89   114   Class java/lang/Exception

  public void objectRemoved(javax.naming.event.NamingEvent, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType);
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #224                // String Removing object: {}
       5: aload_1
       6: invokevirtual #225                // Method javax/naming/event/NamingEvent.getOldBinding:()Ljavax/naming/Binding;
       9: invokeinterface #217,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_1
      15: invokevirtual #225                // Method javax/naming/event/NamingEvent.getOldBinding:()Ljavax/naming/Binding;
      18: astore        4
      20: aload_0
      21: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
      24: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      27: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      30: astore        5
      32: new           #120                // class javax/naming/ldap/LdapName
      35: dup
      36: aload         4
      38: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
      41: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
      44: astore        6
      46: aload_0
      47: aload         5
      49: aload         6
      51: aload_2
      52: invokevirtual #123                // Method getEntry:(Lorg/apache/activemq/security/DefaultAuthorizationMap;Ljavax/naming/ldap/LdapName;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/security/AuthorizationEntry;
      55: astore        7
      57: aload_0
      58: aload         7
      60: aload_3
      61: new           #154                // class java/util/HashSet
      64: dup
      65: invokespecial #155                // Method java/util/HashSet."<init>":()V
      68: invokevirtual #179                // Method applyAcl:(Lorg/apache/activemq/security/AuthorizationEntry;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;Ljava/util/Set;)V
      71: goto          115
      74: astore        5
      76: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      79: ldc           #227                // String Policy not applied!  Error parsing DN for object removal for removal of {}
      81: aload         4
      83: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
      86: aload         5
      88: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      93: goto          115
      96: astore        5
      98: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     101: ldc           #228                // String Policy not applied!  Error processing object removal for removal of {}
     103: aload         4
     105: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
     108: aload         5
     110: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     115: return
    Exception table:
       from    to  target type
          20    71    74   Class javax/naming/InvalidNameException
          20    71    96   Class java/lang/Exception

  public void objectRenamed(javax.naming.event.NamingEvent, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType);
    Code:
       0: aload_1
       1: invokevirtual #225                // Method javax/naming/event/NamingEvent.getOldBinding:()Ljavax/naming/Binding;
       4: astore        4
       6: aload_1
       7: invokevirtual #216                // Method javax/naming/event/NamingEvent.getNewBinding:()Ljavax/naming/Binding;
      10: astore        5
      12: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #229                // String Renaming object: {} to {}
      17: aload         4
      19: aload         5
      21: invokeinterface #230,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      26: new           #120                // class javax/naming/ldap/LdapName
      29: dup
      30: aload         4
      32: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
      35: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
      38: astore        6
      40: aload_0
      41: aload         6
      43: aload_2
      44: invokevirtual #139                // Method formatDestination:(Ljavax/naming/ldap/LdapName;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/command/ActiveMQDestination;
      47: astore        7
      49: new           #120                // class javax/naming/ldap/LdapName
      52: dup
      53: aload         5
      55: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
      58: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
      61: astore        8
      63: aload_0
      64: aload         8
      66: aload_2
      67: invokevirtual #139                // Method formatDestination:(Ljavax/naming/ldap/LdapName;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;)Lorg/apache/activemq/command/ActiveMQDestination;
      70: astore        9
      72: aload_3
      73: ifnull        207
      76: aload_0
      77: aload_1
      78: aload_2
      79: aload_3
      80: invokevirtual #231                // Method objectRemoved:(Ljavax/naming/event/NamingEvent;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
      83: new           #92                 // class javax/naming/directory/SearchControls
      86: dup
      87: invokespecial #93                 // Method javax/naming/directory/SearchControls."<init>":()V
      90: astore        10
      92: aload         10
      94: iconst_0
      95: invokevirtual #94                 // Method javax/naming/directory/SearchControls.setSearchScope:(I)V
      98: iconst_0
      99: istore        11
     101: invokestatic  #95                 // Method org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType.values:()[Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;
     104: astore        12
     106: aload         12
     108: arraylength
     109: istore        13
     111: iconst_0
     112: istore        14
     114: iload         14
     116: iload         13
     118: if_icmpge     179
     121: aload         12
     123: iload         14
     125: aaload
     126: astore        15
     128: aload_0
     129: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
     132: aload         8
     134: aload_0
     135: aload         15
     137: invokevirtual #96                 // Method getFilterForPermissionType:(Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)Ljava/lang/String;
     140: aload         10
     142: invokeinterface #232,  4          // InterfaceMethod javax/naming/directory/DirContext.search:(Ljavax/naming/Name;Ljava/lang/String;Ljavax/naming/directory/SearchControls;)Ljavax/naming/NamingEnumeration;
     147: astore        16
     149: aload         16
     151: invokeinterface #117,  1          // InterfaceMethod javax/naming/NamingEnumeration.hasMore:()Z
     156: ifeq          173
     159: aload_0
     160: aload_1
     161: aload_2
     162: aload         15
     164: invokevirtual #233                // Method objectAdded:(Ljavax/naming/event/NamingEvent;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
     167: iconst_1
     168: istore        11
     170: goto          179
     173: iinc          14, 1
     176: goto          114
     179: iload         11
     181: ifne          204
     184: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     187: ldc           #234                // String Policy not applied!  Error processing object rename for rename of {} to {}. Could not determine permission type of new object.
     189: aload         4
     191: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
     194: aload         5
     196: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
     199: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     204: goto          304
     207: aload         7
     209: ifnull        304
     212: aload         9
     214: ifnull        304
     217: aload_0
     218: getfield      #53                 // Field entries:Ljava/util/Map;
     221: aload         7
     223: invokeinterface #235,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     228: checkcast     #141                // class org/apache/activemq/security/AuthorizationEntry
     231: astore        10
     233: aload         10
     235: ifnull        292
     238: aload         10
     240: aload         9
     242: invokevirtual #143                // Method org/apache/activemq/security/AuthorizationEntry.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     245: aload_0
     246: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
     249: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     252: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
     255: astore        11
     257: aload         11
     259: aload         9
     261: aload         10
     263: invokevirtual #220                // Method org/apache/activemq/security/DefaultAuthorizationMap.put:(Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/Object;)V
     266: aload         11
     268: aload         7
     270: aload         10
     272: invokevirtual #236                // Method org/apache/activemq/security/DefaultAuthorizationMap.remove:(Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/Object;)V
     275: aload_0
     276: getfield      #53                 // Field entries:Ljava/util/Map;
     279: aload         9
     281: aload         10
     283: invokeinterface #144,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     288: pop
     289: goto          304
     292: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     295: ldc           #237                // String No authorization entry for {}
     297: aload         7
     299: invokeinterface #238,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     304: goto          378
     307: astore        6
     309: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     312: ldc           #239                // String Policy not applied!  Error parsing DN for object rename for rename of {} to {}
     314: iconst_2
     315: anewarray     #108                // class java/lang/Object
     318: dup
     319: iconst_0
     320: aload         4
     322: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
     325: aastore
     326: dup
     327: iconst_1
     328: aload         5
     330: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
     333: aastore
     334: aload         6
     336: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     341: goto          378
     344: astore        6
     346: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     349: ldc           #240                // String Policy not applied!  Error processing object rename for rename of {} to {}
     351: iconst_2
     352: anewarray     #108                // class java/lang/Object
     355: dup
     356: iconst_0
     357: aload         4
     359: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
     362: aastore
     363: dup
     364: iconst_1
     365: aload         5
     367: invokevirtual #226                // Method javax/naming/Binding.getName:()Ljava/lang/String;
     370: aastore
     371: aload         6
     373: invokeinterface #109,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     378: return
    Exception table:
       from    to  target type
          26   304   307   Class javax/naming/InvalidNameException
          26   304   344   Class java/lang/Exception

  public void objectChanged(javax.naming.event.NamingEvent, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$DestinationType, org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap$PermissionType);
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #241                // String Changing object {} to {}
       5: aload_1
       6: invokevirtual #225                // Method javax/naming/event/NamingEvent.getOldBinding:()Ljavax/naming/Binding;
       9: aload_1
      10: invokevirtual #216                // Method javax/naming/event/NamingEvent.getNewBinding:()Ljavax/naming/Binding;
      13: invokeinterface #230,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokevirtual #231                // Method objectRemoved:(Ljavax/naming/event/NamingEvent;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokevirtual #233                // Method objectAdded:(Ljavax/naming/event/NamingEvent;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$DestinationType;Lorg/apache/activemq/security/SimpleCachedLDAPAuthorizationMap$PermissionType;)V
      32: return

  public void namingExceptionThrown(javax.naming.event.NamingExceptionEvent);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
       5: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #242                // String Caught unexpected exception.
      10: aload_1
      11: invokevirtual #243                // Method javax/naming/event/NamingExceptionEvent.getException:()Ljavax/naming/NamingException;
      14: invokeinterface #244,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #245                // Method query:()V
       4: return

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
       4: ifnull        21
       7: aload_0
       8: getfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
      11: invokeinterface #246,  1          // InterfaceMethod javax/naming/event/EventDirContext.close:()V
      16: aload_0
      17: aconst_null
      18: putfield      #91                 // Field eventContext:Ljavax/naming/event/EventDirContext;
      21: aload_0
      22: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      25: ifnull        42
      28: aload_0
      29: getfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      32: invokeinterface #247,  1          // InterfaceMethod javax/naming/directory/DirContext.close:()V
      37: aload_0
      38: aconst_null
      39: putfield      #84                 // Field context:Ljavax/naming/directory/DirContext;
      42: return

  public java.lang.String getConnectionURL();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionURL:Ljava/lang/String;
       4: areturn

  public void setConnectionURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field connectionURL:Ljava/lang/String;
       5: return

  public java.lang.String getConnectionUsername();
    Code:
       0: aload_0
       1: getfield      #11                 // Field connectionUsername:Ljava/lang/String;
       4: areturn

  public void setConnectionUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field connectionUsername:Ljava/lang/String;
       5: return

  public java.lang.String getConnectionPassword();
    Code:
       0: aload_0
       1: getfield      #13                 // Field connectionPassword:Ljava/lang/String;
       4: areturn

  public void setConnectionPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field connectionPassword:Ljava/lang/String;
       5: return

  public java.lang.String getConnectionProtocol();
    Code:
       0: aload_0
       1: getfield      #15                 // Field connectionProtocol:Ljava/lang/String;
       4: areturn

  public void setConnectionProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field connectionProtocol:Ljava/lang/String;
       5: return

  public java.lang.String getAuthentication();
    Code:
       0: aload_0
       1: getfield      #17                 // Field authentication:Ljava/lang/String;
       4: areturn

  public void setAuthentication(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field authentication:Ljava/lang/String;
       5: return

  public java.lang.String getQueueSearchBase();
    Code:
       0: aload_0
       1: getfield      #22                 // Field queueSearchBase:Ljava/lang/String;
       4: areturn

  public void setQueueSearchBase(java.lang.String);
    Code:
       0: new           #120                // class javax/naming/ldap/LdapName
       3: dup
       4: aload_1
       5: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      14: putfield      #18                 // Field queuePrefixLength:I
      17: aload_0
      18: aload_1
      19: putfield      #22                 // Field queueSearchBase:Ljava/lang/String;
      22: goto          54
      25: astore_2
      26: new           #131                // class java/lang/IllegalArgumentException
      29: dup
      30: new           #145                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #248                // String Invalid base DN value
      39: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: aload_2
      50: invokespecial #249                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0    22    25   Class javax/naming/InvalidNameException

  public java.lang.String getTopicSearchBase();
    Code:
       0: aload_0
       1: getfield      #24                 // Field topicSearchBase:Ljava/lang/String;
       4: areturn

  public void setTopicSearchBase(java.lang.String);
    Code:
       0: new           #120                // class javax/naming/ldap/LdapName
       3: dup
       4: aload_1
       5: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      14: putfield      #19                 // Field topicPrefixLength:I
      17: aload_0
      18: aload_1
      19: putfield      #24                 // Field topicSearchBase:Ljava/lang/String;
      22: goto          54
      25: astore_2
      26: new           #131                // class java/lang/IllegalArgumentException
      29: dup
      30: new           #145                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #248                // String Invalid base DN value
      39: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: aload_2
      50: invokespecial #249                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0    22    25   Class javax/naming/InvalidNameException

  public java.lang.String getTempSearchBase();
    Code:
       0: aload_0
       1: getfield      #26                 // Field tempSearchBase:Ljava/lang/String;
       4: areturn

  public void setTempSearchBase(java.lang.String);
    Code:
       0: new           #120                // class javax/naming/ldap/LdapName
       3: dup
       4: aload_1
       5: invokespecial #122                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #129                // Method javax/naming/ldap/LdapName.size:()I
      14: putfield      #20                 // Field tempPrefixLength:I
      17: aload_0
      18: aload_1
      19: putfield      #26                 // Field tempSearchBase:Ljava/lang/String;
      22: goto          54
      25: astore_2
      26: new           #131                // class java/lang/IllegalArgumentException
      29: dup
      30: new           #145                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #248                // String Invalid base DN value
      39: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: aload_2
      50: invokespecial #249                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0    22    25   Class javax/naming/InvalidNameException

  public java.lang.String getPermissionGroupMemberAttribute();
    Code:
       0: aload_0
       1: getfield      #28                 // Field permissionGroupMemberAttribute:Ljava/lang/String;
       4: areturn

  public void setPermissionGroupMemberAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field permissionGroupMemberAttribute:Ljava/lang/String;
       5: return

  public java.lang.String getAdminPermissionGroupSearchFilter();
    Code:
       0: aload_0
       1: getfield      #30                 // Field adminPermissionGroupSearchFilter:Ljava/lang/String;
       4: areturn

  public void setAdminPermissionGroupSearchFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field adminPermissionGroupSearchFilter:Ljava/lang/String;
       5: return

  public java.lang.String getReadPermissionGroupSearchFilter();
    Code:
       0: aload_0
       1: getfield      #32                 // Field readPermissionGroupSearchFilter:Ljava/lang/String;
       4: areturn

  public void setReadPermissionGroupSearchFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field readPermissionGroupSearchFilter:Ljava/lang/String;
       5: return

  public java.lang.String getWritePermissionGroupSearchFilter();
    Code:
       0: aload_0
       1: getfield      #34                 // Field writePermissionGroupSearchFilter:Ljava/lang/String;
       4: areturn

  public void setWritePermissionGroupSearchFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field writePermissionGroupSearchFilter:Ljava/lang/String;
       5: return

  public boolean isLegacyGroupMapping();
    Code:
       0: aload_0
       1: getfield      #35                 // Field legacyGroupMapping:Z
       4: ireturn

  public void setLegacyGroupMapping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field legacyGroupMapping:Z
       5: return

  public java.lang.String getGroupObjectClass();
    Code:
       0: aload_0
       1: getfield      #37                 // Field groupObjectClass:Ljava/lang/String;
       4: areturn

  public void setGroupObjectClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field groupObjectClass:Ljava/lang/String;
       5: return

  public java.lang.String getUserObjectClass();
    Code:
       0: aload_0
       1: getfield      #39                 // Field userObjectClass:Ljava/lang/String;
       4: areturn

  public void setUserObjectClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field userObjectClass:Ljava/lang/String;
       5: return

  public java.lang.String getGroupNameAttribute();
    Code:
       0: aload_0
       1: getfield      #41                 // Field groupNameAttribute:Ljava/lang/String;
       4: areturn

  public void setGroupNameAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field groupNameAttribute:Ljava/lang/String;
       5: return

  public java.lang.String getUserNameAttribute();
    Code:
       0: aload_0
       1: getfield      #43                 // Field userNameAttribute:Ljava/lang/String;
       4: areturn

  public void setUserNameAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field userNameAttribute:Ljava/lang/String;
       5: return

  public boolean isRefreshDisabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field refreshDisabled:Z
       4: ireturn

  public void setRefreshDisabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field refreshDisabled:Z
       5: return

  public int getRefreshInterval();
    Code:
       0: aload_0
       1: getfield      #3                  // Field refreshInterval:I
       4: ireturn

  public void setRefreshInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field refreshInterval:I
       5: return

  public java.lang.String getGroupClass();
    Code:
       0: aload_0
       1: getfield      #45                 // Field groupClass:Ljava/lang/String;
       4: areturn

  public void setGroupClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field groupClass:Ljava/lang/String;
       5: aload_0
       6: getfield      #50                 // Field map:Ljava/util/concurrent/atomic/AtomicReference;
       9: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      12: checkcast     #47                 // class org/apache/activemq/security/DefaultAuthorizationMap
      15: aload_1
      16: invokevirtual #114                // Method org/apache/activemq/security/DefaultAuthorizationMap.setGroupClass:(Ljava/lang/String;)V
      19: return

  static boolean access$000(org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field refreshDisabled:Z
       4: ireturn

  static int access$100(org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field refreshInterval:I
       4: ireturn

  static long access$200(org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field lastUpdated:J
       4: lreturn

  static org.slf4j.Logger access$300();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #250                // class org/apache/activemq/security/SimpleCachedLDAPAuthorizationMap
       3: invokestatic  #251                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: ldc           #252                // String \\$
      11: putstatic     #200                // Field ANY_DESCENDANT:Ljava/lang/String;
      14: return
}
