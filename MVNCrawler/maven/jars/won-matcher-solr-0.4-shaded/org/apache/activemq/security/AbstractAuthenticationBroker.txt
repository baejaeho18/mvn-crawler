Compiled from "AbstractAuthenticationBroker.java"
public class org.apache.activemq.security.AbstractAuthenticationBroker extends org.apache.activemq.broker.BrokerFilter {
  protected final java.util.concurrent.CopyOnWriteArrayList<org.apache.activemq.security.SecurityContext> securityContexts;

  public org.apache.activemq.security.AbstractAuthenticationBroker(org.apache.activemq.broker.Broker);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/broker/BrokerFilter."<init>":(Lorg/apache/activemq/broker/Broker;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      13: putfield      #4                  // Field securityContexts:Ljava/util/concurrent/CopyOnWriteArrayList;
      16: return

  public void removeDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field next:Lorg/apache/activemq/broker/Broker;
       4: aload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #6,  5            // InterfaceMethod org/apache/activemq/broker/Broker.removeDestination:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQDestination;J)V
      12: aload_0
      13: getfield      #4                  // Field securityContexts:Ljava/util/concurrent/CopyOnWriteArrayList;
      16: invokevirtual #7                  // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      19: astore        5
      21: aload         5
      23: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          66
      31: aload         5
      33: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #10                 // class org/apache/activemq/security/SecurityContext
      41: astore        6
      43: aload         6
      45: invokevirtual #11                 // Method org/apache/activemq/security/SecurityContext.getAuthorizedReadDests:()Ljava/util/concurrent/ConcurrentHashMap;
      48: aload_2
      49: invokevirtual #12                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload         6
      55: invokevirtual #13                 // Method org/apache/activemq/security/SecurityContext.getAuthorizedWriteDests:()Ljava/util/concurrent/ConcurrentHashMap;
      58: aload_2
      59: invokevirtual #12                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: goto          21
      66: return

  public void removeConnection(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConnectionInfo, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #14                 // Method org/apache/activemq/broker/BrokerFilter.removeConnection:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConnectionInfo;Ljava/lang/Throwable;)V
       7: aload_0
       8: getfield      #4                  // Field securityContexts:Ljava/util/concurrent/CopyOnWriteArrayList;
      11: aload_1
      12: invokevirtual #15                 // Method org/apache/activemq/broker/ConnectionContext.getSecurityContext:()Lorg/apache/activemq/security/SecurityContext;
      15: invokevirtual #16                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      18: ifeq          26
      21: aload_1
      22: aconst_null
      23: invokevirtual #17                 // Method org/apache/activemq/broker/ConnectionContext.setSecurityContext:(Lorg/apache/activemq/security/SecurityContext;)V
      26: return

  public void refresh();
    Code:
       0: aload_0
       1: getfield      #4                  // Field securityContexts:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #7                  // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          44
      17: aload_1
      18: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #10                 // class org/apache/activemq/security/SecurityContext
      26: astore_2
      27: aload_2
      28: invokevirtual #11                 // Method org/apache/activemq/security/SecurityContext.getAuthorizedReadDests:()Ljava/util/concurrent/ConcurrentHashMap;
      31: invokevirtual #18                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      34: aload_2
      35: invokevirtual #13                 // Method org/apache/activemq/security/SecurityContext.getAuthorizedWriteDests:()Ljava/util/concurrent/ConcurrentHashMap;
      38: invokevirtual #18                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      41: goto          8
      44: return
}
