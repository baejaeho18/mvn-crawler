Compiled from "MemoryPersistenceAdapter.java"
public class org.apache.activemq.store.memory.MemoryPersistenceAdapter implements org.apache.activemq.store.PersistenceAdapter {
  private static final org.slf4j.Logger LOG;

  org.apache.activemq.store.memory.MemoryTransactionStore transactionStore;

  java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.store.TopicMessageStore> topics;

  java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.store.MessageStore> queues;

  private boolean useExternalMessageReferences;

  public org.apache.activemq.store.memory.MemoryPersistenceAdapter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field topics:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #5                  // Field queues:Ljava/util/concurrent/ConcurrentHashMap;
      26: return

  public java.util.Set<org.apache.activemq.command.ActiveMQDestination> getDestinations();
    Code:
       0: new           #6                  // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #5                  // Field queues:Ljava/util/concurrent/ConcurrentHashMap;
       8: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.size:()I
      11: aload_0
      12: getfield      #4                  // Field topics:Ljava/util/concurrent/ConcurrentHashMap;
      15: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.size:()I
      18: iadd
      19: invokespecial #8                  // Method java/util/HashSet."<init>":(I)V
      22: astore_1
      23: aload_0
      24: getfield      #5                  // Field queues:Ljava/util/concurrent/ConcurrentHashMap;
      27: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/Set;
      30: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          61
      45: aload_1
      46: aload_2
      47: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          36
      61: aload_0
      62: getfield      #4                  // Field topics:Ljava/util/concurrent/ConcurrentHashMap;
      65: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/Set;
      68: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      73: astore_2
      74: aload_2
      75: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          99
      83: aload_1
      84: aload_2
      85: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      95: pop
      96: goto          74
      99: aload_1
     100: areturn

  public static org.apache.activemq.store.memory.MemoryPersistenceAdapter newInstance(java.io.File);
    Code:
       0: new           #14                 // class org/apache/activemq/store/memory/MemoryPersistenceAdapter
       3: dup
       4: invokespecial #15                 // Method "<init>":()V
       7: areturn

  public org.apache.activemq.store.MessageStore createQueueMessageStore(org.apache.activemq.command.ActiveMQQueue) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field queues:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #17                 // class org/apache/activemq/store/MessageStore
      11: astore_2
      12: aload_2
      13: ifnonnull     51
      16: new           #18                 // class org/apache/activemq/store/memory/MemoryMessageStore
      19: dup
      20: aload_1
      21: invokespecial #19                 // Method org/apache/activemq/store/memory/MemoryMessageStore."<init>":(Lorg/apache/activemq/command/ActiveMQDestination;)V
      24: astore_2
      25: aload_0
      26: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      29: ifnull        41
      32: aload_0
      33: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      36: aload_2
      37: invokevirtual #21                 // Method org/apache/activemq/store/memory/MemoryTransactionStore.proxy:(Lorg/apache/activemq/store/MessageStore;)Lorg/apache/activemq/store/MessageStore;
      40: astore_2
      41: aload_0
      42: getfield      #5                  // Field queues:Ljava/util/concurrent/ConcurrentHashMap;
      45: aload_1
      46: aload_2
      47: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_2
      52: areturn

  public org.apache.activemq.store.TopicMessageStore createTopicMessageStore(org.apache.activemq.command.ActiveMQTopic) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field topics:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #23                 // class org/apache/activemq/store/TopicMessageStore
      11: astore_2
      12: aload_2
      13: ifnonnull     51
      16: new           #24                 // class org/apache/activemq/store/memory/MemoryTopicMessageStore
      19: dup
      20: aload_1
      21: invokespecial #25                 // Method org/apache/activemq/store/memory/MemoryTopicMessageStore."<init>":(Lorg/apache/activemq/command/ActiveMQDestination;)V
      24: astore_2
      25: aload_0
      26: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      29: ifnull        41
      32: aload_0
      33: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      36: aload_2
      37: invokevirtual #26                 // Method org/apache/activemq/store/memory/MemoryTransactionStore.proxy:(Lorg/apache/activemq/store/TopicMessageStore;)Lorg/apache/activemq/store/TopicMessageStore;
      40: astore_2
      41: aload_0
      42: getfield      #4                  // Field topics:Ljava/util/concurrent/ConcurrentHashMap;
      45: aload_1
      46: aload_2
      47: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_2
      52: areturn

  public void removeQueueMessageStore(org.apache.activemq.command.ActiveMQQueue);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queues:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public void removeTopicMessageStore(org.apache.activemq.command.ActiveMQTopic);
    Code:
       0: aload_0
       1: getfield      #4                  // Field topics:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public org.apache.activemq.store.TransactionStore createTransactionStore() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
       4: ifnonnull     19
       7: aload_0
       8: new           #28                 // class org/apache/activemq/store/memory/MemoryTransactionStore
      11: dup
      12: aload_0
      13: invokespecial #29                 // Method org/apache/activemq/store/memory/MemoryTransactionStore."<init>":(Lorg/apache/activemq/store/PersistenceAdapter;)V
      16: putfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      19: aload_0
      20: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      23: areturn

  public void beginTransaction(org.apache.activemq.broker.ConnectionContext);
    Code:
       0: return

  public void commitTransaction(org.apache.activemq.broker.ConnectionContext);
    Code:
       0: return

  public void rollbackTransaction(org.apache.activemq.broker.ConnectionContext);
    Code:
       0: return

  public void start() throws java.lang.Exception;
    Code:
       0: return

  public void stop() throws java.lang.Exception;
    Code:
       0: return

  public long getLastMessageBrokerSequenceId() throws java.io.IOException;
    Code:
       0: lconst_0
       1: lreturn

  public void deleteAllMessages() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field topics:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #30                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          44
      22: aload_0
      23: aload_1
      24: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: invokevirtual #32                 // Method asMemoryMessageStore:(Ljava/lang/Object;)Lorg/apache/activemq/store/memory/MemoryMessageStore;
      32: astore_2
      33: aload_2
      34: ifnull        41
      37: aload_2
      38: invokevirtual #33                 // Method org/apache/activemq/store/memory/MemoryMessageStore.delete:()V
      41: goto          13
      44: aload_0
      45: getfield      #5                  // Field queues:Ljava/util/concurrent/ConcurrentHashMap;
      48: invokevirtual #30                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      51: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      56: astore_1
      57: aload_1
      58: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          88
      66: aload_0
      67: aload_1
      68: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: invokevirtual #32                 // Method asMemoryMessageStore:(Ljava/lang/Object;)Lorg/apache/activemq/store/memory/MemoryMessageStore;
      76: astore_2
      77: aload_2
      78: ifnull        85
      81: aload_2
      82: invokevirtual #33                 // Method org/apache/activemq/store/memory/MemoryMessageStore.delete:()V
      85: goto          57
      88: aload_0
      89: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      92: ifnull        102
      95: aload_0
      96: getfield      #20                 // Field transactionStore:Lorg/apache/activemq/store/memory/MemoryTransactionStore;
      99: invokevirtual #34                 // Method org/apache/activemq/store/memory/MemoryTransactionStore.delete:()V
     102: return

  public boolean isUseExternalMessageReferences();
    Code:
       0: aload_0
       1: getfield      #35                 // Field useExternalMessageReferences:Z
       4: ireturn

  public void setUseExternalMessageReferences(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field useExternalMessageReferences:Z
       5: return

  protected org.apache.activemq.store.memory.MemoryMessageStore asMemoryMessageStore(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #18                 // class org/apache/activemq/store/memory/MemoryMessageStore
       4: ifeq          12
       7: aload_1
       8: checkcast     #18                 // class org/apache/activemq/store/memory/MemoryMessageStore
      11: areturn
      12: aload_1
      13: instanceof    #36                 // class org/apache/activemq/store/ProxyMessageStore
      16: ifeq          39
      19: aload_1
      20: checkcast     #36                 // class org/apache/activemq/store/ProxyMessageStore
      23: invokevirtual #37                 // Method org/apache/activemq/store/ProxyMessageStore.getDelegate:()Lorg/apache/activemq/store/MessageStore;
      26: astore_2
      27: aload_2
      28: instanceof    #18                 // class org/apache/activemq/store/memory/MemoryMessageStore
      31: ifeq          39
      34: aload_2
      35: checkcast     #18                 // class org/apache/activemq/store/memory/MemoryMessageStore
      38: areturn
      39: getstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
      42: new           #39                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #41                 // String Expected an instance of MemoryMessageStore but was:
      51: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      66: aconst_null
      67: areturn

  public void setUsageManager(org.apache.activemq.usage.SystemUsage);
    Code:
       0: return

  public java.lang.String toString();
    Code:
       0: ldc           #46                 // String MemoryPersistenceAdapter
       2: areturn

  public void setBrokerName(java.lang.String);
    Code:
       0: return

  public void setDirectory(java.io.File);
    Code:
       0: return

  public java.io.File getDirectory();
    Code:
       0: aconst_null
       1: areturn

  public void checkpoint(boolean) throws java.io.IOException;
    Code:
       0: return

  public long size();
    Code:
       0: lconst_0
       1: lreturn

  public void setCreateTransactionStore(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          9
       4: aload_0
       5: invokevirtual #47                 // Method createTransactionStore:()Lorg/apache/activemq/store/TransactionStore;
       8: pop
       9: return

  public long getLastProducerSequenceId(org.apache.activemq.command.ProducerId);
    Code:
       0: ldc2_w        #48                 // long -1l
       3: lreturn

  static {};
    Code:
       0: ldc_w         #14                 // class org/apache/activemq/store/memory/MemoryPersistenceAdapter
       3: invokestatic  #50                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #38                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
