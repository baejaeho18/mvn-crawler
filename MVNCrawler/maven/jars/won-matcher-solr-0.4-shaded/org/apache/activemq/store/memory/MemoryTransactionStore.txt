Compiled from "MemoryTransactionStore.java"
public class org.apache.activemq.store.memory.MemoryTransactionStore implements org.apache.activemq.store.TransactionStore {
  protected java.util.concurrent.ConcurrentHashMap<java.lang.Object, org.apache.activemq.store.memory.MemoryTransactionStore$Tx> inflightTransactions;

  protected java.util.Map<org.apache.activemq.command.TransactionId, org.apache.activemq.store.memory.MemoryTransactionStore$Tx> preparedTransactions;

  protected final org.apache.activemq.store.PersistenceAdapter persistenceAdapter;

  private boolean doingRecover;

  public org.apache.activemq.store.memory.MemoryTransactionStore(org.apache.activemq.store.PersistenceAdapter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashMap."<init>":()V
      23: invokestatic  #7                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putfield      #8                  // Field preparedTransactions:Ljava/util/Map;
      29: aload_0
      30: aload_1
      31: putfield      #9                  // Field persistenceAdapter:Lorg/apache/activemq/store/PersistenceAdapter;
      34: return

  public org.apache.activemq.store.MessageStore proxy(org.apache.activemq.store.MessageStore);
    Code:
       0: new           #10                 // class org/apache/activemq/store/memory/MemoryTransactionStore$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$1."<init>":(Lorg/apache/activemq/store/memory/MemoryTransactionStore;Lorg/apache/activemq/store/MessageStore;)V
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #12                 // Method onProxyQueueStore:(Lorg/apache/activemq/store/ProxyMessageStore;)V
      15: aload_2
      16: areturn

  protected void onProxyQueueStore(org.apache.activemq.store.ProxyMessageStore);
    Code:
       0: return

  public org.apache.activemq.store.TopicMessageStore proxy(org.apache.activemq.store.TopicMessageStore);
    Code:
       0: new           #13                 // class org/apache/activemq/store/memory/MemoryTransactionStore$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$2."<init>":(Lorg/apache/activemq/store/memory/MemoryTransactionStore;Lorg/apache/activemq/store/TopicMessageStore;)V
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #15                 // Method onProxyTopicStore:(Lorg/apache/activemq/store/ProxyTopicMessageStore;)V
      15: aload_2
      16: areturn

  protected void onProxyTopicStore(org.apache.activemq.store.ProxyTopicMessageStore);
    Code:
       0: return

  public void prepare(org.apache.activemq.command.TransactionId) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      11: astore_2
      12: aload_2
      13: ifnonnull     17
      16: return
      17: aload_0
      18: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
      21: aload_1
      22: aload_2
      23: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: return

  public org.apache.activemq.store.memory.MemoryTransactionStore$Tx getTx(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #19                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      11: astore_2
      12: aload_2
      13: ifnonnull     35
      16: new           #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      19: dup
      20: aload_0
      21: invokespecial #20                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx."<init>":(Lorg/apache/activemq/store/memory/MemoryTransactionStore;)V
      24: astore_2
      25: aload_0
      26: getfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
      29: aload_1
      30: aload_2
      31: invokevirtual #21                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_2
      36: areturn

  public org.apache.activemq.store.memory.MemoryTransactionStore$Tx getPreparedTx(org.apache.activemq.command.TransactionId);
    Code:
       0: aload_0
       1: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      13: astore_2
      14: aload_2
      15: ifnonnull     39
      18: new           #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      21: dup
      22: aload_0
      23: invokespecial #20                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx."<init>":(Lorg/apache/activemq/store/memory/MemoryTransactionStore;)V
      26: astore_2
      27: aload_0
      28: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
      31: aload_1
      32: aload_2
      33: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_2
      40: areturn

  public void commit(org.apache.activemq.command.TransactionId, boolean, java.lang.Runnable, java.lang.Runnable) throws java.io.IOException;
    Code:
       0: aload_3
       1: ifnull        10
       4: aload_3
       5: invokeinterface #23,  1           // InterfaceMethod java/lang/Runnable.run:()V
      10: iload_2
      11: ifeq          32
      14: aload_0
      15: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
      18: aload_1
      19: invokeinterface #24,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      27: astore        5
      29: goto          45
      32: aload_0
      33: getfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
      36: aload_1
      37: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      43: astore        5
      45: aload         5
      47: ifnull        55
      50: aload         5
      52: invokevirtual #25                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx.commit:()V
      55: aload         4
      57: ifnull        67
      60: aload         4
      62: invokeinterface #23,  1           // InterfaceMethod java/lang/Runnable.run:()V
      67: return

  public void rollback(org.apache.activemq.command.TransactionId) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_1
      16: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  public void start() throws java.lang.Exception;
    Code:
       0: return

  public void stop() throws java.lang.Exception;
    Code:
       0: return

  public synchronized void recover(org.apache.activemq.store.TransactionRecoveryListener) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #26                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: aload_0
       8: iconst_1
       9: putfield      #27                 // Field doingRecover:Z
      12: aload_0
      13: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
      16: invokeinterface #28,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      21: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          87
      36: aload_2
      37: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: astore_3
      43: aload_0
      44: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
      47: aload_3
      48: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #17                 // class org/apache/activemq/store/memory/MemoryTransactionStore$Tx
      56: astore        4
      58: aload_1
      59: aload_3
      60: checkcast     #32                 // class org/apache/activemq/command/XATransactionId
      63: aload         4
      65: invokevirtual #33                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx.getMessages:()[Lorg/apache/activemq/command/Message;
      68: aload         4
      70: invokevirtual #34                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx.getAcks:()[Lorg/apache/activemq/command/MessageAck;
      73: invokeinterface #35,  4           // InterfaceMethod org/apache/activemq/store/TransactionRecoveryListener.recover:(Lorg/apache/activemq/command/XATransactionId;[Lorg/apache/activemq/command/Message;[Lorg/apache/activemq/command/MessageAck;)V
      78: aload_0
      79: aload         4
      81: invokevirtual #36                 // Method onRecovered:(Lorg/apache/activemq/store/memory/MemoryTransactionStore$Tx;)V
      84: goto          27
      87: aload_0
      88: iconst_0
      89: putfield      #27                 // Field doingRecover:Z
      92: goto          105
      95: astore        5
      97: aload_0
      98: iconst_0
      99: putfield      #27                 // Field doingRecover:Z
     102: aload         5
     104: athrow
     105: return
    Exception table:
       from    to  target type
          12    87    95   any
          95    97    95   any

  protected void onRecovered(org.apache.activemq.store.memory.MemoryTransactionStore$Tx);
    Code:
       0: return

  void addMessage(org.apache.activemq.store.MessageStore, org.apache.activemq.command.Message) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field doingRecover:Z
       4: ifeq          8
       7: return
       8: aload_2
       9: invokevirtual #37                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      12: ifnull        41
      15: aload_0
      16: aload_2
      17: invokevirtual #37                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      20: invokevirtual #38                 // Method getTx:(Ljava/lang/Object;)Lorg/apache/activemq/store/memory/MemoryTransactionStore$Tx;
      23: astore_3
      24: aload_3
      25: new           #39                 // class org/apache/activemq/store/memory/MemoryTransactionStore$3
      28: dup
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #40                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$3."<init>":(Lorg/apache/activemq/store/memory/MemoryTransactionStore;Lorg/apache/activemq/store/MessageStore;Lorg/apache/activemq/command/Message;)V
      35: invokevirtual #41                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx.add:(Lorg/apache/activemq/store/memory/MemoryTransactionStore$AddMessageCommand;)V
      38: goto          49
      41: aload_1
      42: aconst_null
      43: aload_2
      44: invokeinterface #42,  3           // InterfaceMethod org/apache/activemq/store/MessageStore.addMessage:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/Message;)V
      49: return

  final void removeMessage(org.apache.activemq.store.MessageStore, org.apache.activemq.command.MessageAck) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field doingRecover:Z
       4: ifeq          8
       7: return
       8: aload_2
       9: invokevirtual #43                 // Method org/apache/activemq/command/MessageAck.isInTransaction:()Z
      12: ifeq          41
      15: aload_0
      16: aload_2
      17: invokevirtual #44                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      20: invokevirtual #38                 // Method getTx:(Ljava/lang/Object;)Lorg/apache/activemq/store/memory/MemoryTransactionStore$Tx;
      23: astore_3
      24: aload_3
      25: new           #45                 // class org/apache/activemq/store/memory/MemoryTransactionStore$4
      28: dup
      29: aload_0
      30: aload_2
      31: aload_1
      32: invokespecial #46                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$4."<init>":(Lorg/apache/activemq/store/memory/MemoryTransactionStore;Lorg/apache/activemq/command/MessageAck;Lorg/apache/activemq/store/MessageStore;)V
      35: invokevirtual #47                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx.add:(Lorg/apache/activemq/store/memory/MemoryTransactionStore$RemoveMessageCommand;)V
      38: goto          49
      41: aload_1
      42: aconst_null
      43: aload_2
      44: invokeinterface #48,  3           // InterfaceMethod org/apache/activemq/store/MessageStore.removeMessage:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/MessageAck;)V
      49: return

  public void acknowledge(org.apache.activemq.store.TopicMessageStore, java.lang.String, java.lang.String, org.apache.activemq.command.MessageId, org.apache.activemq.command.MessageAck) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field doingRecover:Z
       4: ifeq          8
       7: return
       8: aload         5
      10: invokevirtual #43                 // Method org/apache/activemq/command/MessageAck.isInTransaction:()Z
      13: ifeq          50
      16: aload_0
      17: aload         5
      19: invokevirtual #44                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      22: invokevirtual #38                 // Method getTx:(Ljava/lang/Object;)Lorg/apache/activemq/store/memory/MemoryTransactionStore$Tx;
      25: astore        6
      27: aload         6
      29: new           #49                 // class org/apache/activemq/store/memory/MemoryTransactionStore$5
      32: dup
      33: aload_0
      34: aload         5
      36: aload_1
      37: aload_2
      38: aload_3
      39: aload         4
      41: invokespecial #50                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$5."<init>":(Lorg/apache/activemq/store/memory/MemoryTransactionStore;Lorg/apache/activemq/command/MessageAck;Lorg/apache/activemq/store/TopicMessageStore;Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/command/MessageId;)V
      44: invokevirtual #47                 // Method org/apache/activemq/store/memory/MemoryTransactionStore$Tx.add:(Lorg/apache/activemq/store/memory/MemoryTransactionStore$RemoveMessageCommand;)V
      47: goto          63
      50: aload_1
      51: aconst_null
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: invokeinterface #51,  6           // InterfaceMethod org/apache/activemq/store/TopicMessageStore.acknowledge:(Lorg/apache/activemq/broker/ConnectionContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/command/MessageId;Lorg/apache/activemq/command/MessageAck;)V
      63: return

  public void delete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflightTransactions:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #26                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: aload_0
       8: getfield      #8                  // Field preparedTransactions:Ljava/util/Map;
      11: invokeinterface #52,  1           // InterfaceMethod java/util/Map.clear:()V
      16: aload_0
      17: iconst_0
      18: putfield      #27                 // Field doingRecover:Z
      21: return
}
