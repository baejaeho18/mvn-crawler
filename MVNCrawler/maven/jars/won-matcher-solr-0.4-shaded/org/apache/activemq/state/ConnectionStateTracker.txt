Compiled from "ConnectionStateTracker.java"
public class org.apache.activemq.state.ConnectionStateTracker extends org.apache.activemq.state.CommandVisitorAdapter {
  private static final org.slf4j.Logger LOG;

  private static final org.apache.activemq.state.Tracked TRACKED_RESPONSE_MARKER;

  private static final int MESSAGE_PULL_SIZE;

  protected final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ConnectionId, org.apache.activemq.state.ConnectionState> connectionStates;

  private boolean trackTransactions;

  private boolean restoreSessions;

  private boolean restoreConsumers;

  private boolean restoreProducers;

  private boolean restoreTransaction;

  private boolean trackMessages;

  private boolean trackTransactionProducers;

  private int maxCacheSize;

  private long currentCacheSize;

  private final java.util.Map<java.lang.Object, org.apache.activemq.command.Command> messageCache;

  public org.apache.activemq.state.ConnectionStateTracker();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/activemq/state/CommandVisitorAdapter."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: iconst_1
      17: putfield      #8                  // Field restoreSessions:Z
      20: aload_0
      21: iconst_1
      22: putfield      #9                  // Field restoreConsumers:Z
      25: aload_0
      26: iconst_1
      27: putfield      #10                 // Field restoreProducers:Z
      30: aload_0
      31: iconst_1
      32: putfield      #11                 // Field restoreTransaction:Z
      35: aload_0
      36: iconst_1
      37: putfield      #12                 // Field trackMessages:Z
      40: aload_0
      41: iconst_1
      42: putfield      #13                 // Field trackTransactionProducers:Z
      45: aload_0
      46: ldc           #14                 // int 131072
      48: putfield      #2                  // Field maxCacheSize:I
      51: aload_0
      52: new           #15                 // class org/apache/activemq/state/ConnectionStateTracker$1
      55: dup
      56: aload_0
      57: invokespecial #16                 // Method org/apache/activemq/state/ConnectionStateTracker$1."<init>":(Lorg/apache/activemq/state/ConnectionStateTracker;)V
      60: putfield      #17                 // Field messageCache:Ljava/util/Map;
      63: return

  public org.apache.activemq.state.Tracked track(org.apache.activemq.command.Command) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #18,  2           // InterfaceMethod org/apache/activemq/command/Command.visit:(Lorg/apache/activemq/state/CommandVisitor;)Lorg/apache/activemq/command/Response;
       7: checkcast     #19                 // class org/apache/activemq/state/Tracked
      10: areturn
      11: astore_2
      12: aload_2
      13: athrow
      14: astore_2
      15: aload_2
      16: invokestatic  #22                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Throwable;)Ljava/io/IOException;
      19: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/io/IOException
           0    10    14   Class java/lang/Throwable

  public void trackBack(org.apache.activemq.command.Command);
    Code:
       0: aload_1
       1: ifnull        78
       4: aload_0
       5: getfield      #12                 // Field trackMessages:Z
       8: ifeq          49
      11: aload_1
      12: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/command/Command.isMessage:()Z
      17: ifeq          49
      20: aload_1
      21: checkcast     #24                 // class org/apache/activemq/command/Message
      24: astore_2
      25: aload_2
      26: invokevirtual #25                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      29: ifnonnull     46
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field currentCacheSize:J
      37: aload_2
      38: invokevirtual #26                 // Method org/apache/activemq/command/Message.getSize:()I
      41: i2l
      42: ladd
      43: putfield      #3                  // Field currentCacheSize:J
      46: goto          78
      49: aload_1
      50: instanceof    #27                 // class org/apache/activemq/command/MessagePull
      53: ifeq          78
      56: aload_1
      57: checkcast     #27                 // class org/apache/activemq/command/MessagePull
      60: invokevirtual #28                 // Method org/apache/activemq/command/MessagePull.isTracked:()Z
      63: ifeq          78
      66: aload_0
      67: dup
      68: getfield      #3                  // Field currentCacheSize:J
      71: ldc2_w        #29                 // long 400l
      74: ladd
      75: putfield      #3                  // Field currentCacheSize:J
      78: return

  public void restore(org.apache.activemq.transport.Transport) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #31                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          129
      22: aload_2
      23: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      31: astore_3
      32: aload_3
      33: invokevirtual #36                 // Method org/apache/activemq/state/ConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      36: iconst_1
      37: invokevirtual #37                 // Method org/apache/activemq/command/ConnectionInfo.setFailoverReconnect:(Z)V
      40: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      43: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      48: ifeq          84
      51: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      54: new           #39                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #41                 // String conn:
      63: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_3
      67: invokevirtual #36                 // Method org/apache/activemq/state/ConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      70: invokevirtual #43                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      73: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      84: aload_1
      85: aload_3
      86: invokevirtual #36                 // Method org/apache/activemq/state/ConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      89: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      94: aload_0
      95: aload_1
      96: aload_3
      97: invokevirtual #48                 // Method restoreTempDestinations:(Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/state/ConnectionState;)V
     100: aload_0
     101: getfield      #8                  // Field restoreSessions:Z
     104: ifeq          113
     107: aload_0
     108: aload_1
     109: aload_3
     110: invokevirtual #49                 // Method restoreSessions:(Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/state/ConnectionState;)V
     113: aload_0
     114: getfield      #11                 // Field restoreTransaction:Z
     117: ifeq          126
     120: aload_0
     121: aload_1
     122: aload_3
     123: invokespecial #50                 // Method restoreTransactions:(Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/state/ConnectionState;)V
     126: goto          13
     129: aload_0
     130: getfield      #17                 // Field messageCache:Ljava/util/Map;
     133: invokeinterface #51,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     138: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     143: astore_2
     144: aload_2
     145: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     150: ifeq          230
     153: aload_2
     154: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     159: checkcast     #53                 // class org/apache/activemq/command/Command
     162: astore_3
     163: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     166: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     171: ifeq          220
     174: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     177: new           #39                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #54                 // String command:
     186: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload_3
     190: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/command/Command.isMessage:()Z
     195: ifeq          208
     198: aload_3
     199: checkcast     #24                 // class org/apache/activemq/command/Message
     202: invokevirtual #55                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     205: goto          209
     208: aload_3
     209: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     220: aload_1
     221: aload_3
     222: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     227: goto          144
     230: return

  private void restoreTransactions(org.apache.activemq.transport.Transport, org.apache.activemq.state.ConnectionState) throws java.io.IOException;
    Code:
       0: new           #56                 // class java/util/Vector
       3: dup
       4: invokespecial #57                 // Method java/util/Vector."<init>":()V
       7: astore_3
       8: aload_2
       9: invokevirtual #58                 // Method org/apache/activemq/state/ConnectionState.getTransactionStates:()Ljava/util/Collection;
      12: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          479
      29: aload         4
      31: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #59                 // class org/apache/activemq/state/TransactionState
      39: astore        5
      41: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      44: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      49: ifeq          83
      52: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      55: new           #39                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #60                 // String tx:
      64: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload         5
      69: invokevirtual #61                 // Method org/apache/activemq/state/TransactionState.getId:()Lorg/apache/activemq/command/TransactionId;
      72: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      83: aload         5
      85: invokevirtual #62                 // Method org/apache/activemq/state/TransactionState.getCommands:()Ljava/util/List;
      88: invokeinterface #63,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      93: ifne          199
      96: aload         5
      98: invokevirtual #62                 // Method org/apache/activemq/state/TransactionState.getCommands:()Ljava/util/List;
     101: aload         5
     103: invokevirtual #62                 // Method org/apache/activemq/state/TransactionState.getCommands:()Ljava/util/List;
     106: invokeinterface #64,  1           // InterfaceMethod java/util/List.size:()I
     111: iconst_1
     112: isub
     113: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     118: checkcast     #53                 // class org/apache/activemq/command/Command
     121: astore        6
     123: aload         6
     125: instanceof    #66                 // class org/apache/activemq/command/TransactionInfo
     128: ifeq          199
     131: aload         6
     133: checkcast     #66                 // class org/apache/activemq/command/TransactionInfo
     136: astore        7
     138: aload         7
     140: invokevirtual #67                 // Method org/apache/activemq/command/TransactionInfo.getType:()B
     143: iconst_2
     144: if_icmpne     199
     147: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     150: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     155: ifeq          189
     158: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     161: new           #39                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     168: ldc           #68                 // String rolling back potentially completed tx:
     170: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload         5
     175: invokevirtual #61                 // Method org/apache/activemq/state/TransactionState.getId:()Lorg/apache/activemq/command/TransactionId;
     178: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     181: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     189: aload_3
     190: aload         7
     192: invokevirtual #69                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
     195: pop
     196: goto          19
     199: aload         5
     201: invokevirtual #70                 // Method org/apache/activemq/state/TransactionState.getProducerStates:()Ljava/util/Map;
     204: invokeinterface #51,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     209: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     214: astore        6
     216: aload         6
     218: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     223: ifeq          294
     226: aload         6
     228: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     233: checkcast     #71                 // class org/apache/activemq/state/ProducerState
     236: astore        7
     238: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     241: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     246: ifeq          280
     249: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     252: new           #39                 // class java/lang/StringBuilder
     255: dup
     256: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     259: ldc           #72                 // String tx replay producer :
     261: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: aload         7
     266: invokevirtual #73                 // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
     269: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     272: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     280: aload_1
     281: aload         7
     283: invokevirtual #73                 // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
     286: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     291: goto          216
     294: aload         5
     296: invokevirtual #62                 // Method org/apache/activemq/state/TransactionState.getCommands:()Ljava/util/List;
     299: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     304: astore        6
     306: aload         6
     308: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     313: ifeq          378
     316: aload         6
     318: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     323: checkcast     #53                 // class org/apache/activemq/command/Command
     326: astore        7
     328: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     331: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     336: ifeq          367
     339: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     342: new           #39                 // class java/lang/StringBuilder
     345: dup
     346: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     349: ldc           #75                 // String tx replay:
     351: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: aload         7
     356: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     359: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     367: aload_1
     368: aload         7
     370: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     375: goto          306
     378: aload         5
     380: invokevirtual #70                 // Method org/apache/activemq/state/TransactionState.getProducerStates:()Ljava/util/Map;
     383: invokeinterface #51,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     388: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     393: astore        6
     395: aload         6
     397: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     402: ifeq          476
     405: aload         6
     407: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     412: checkcast     #71                 // class org/apache/activemq/state/ProducerState
     415: astore        7
     417: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     420: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     425: ifeq          459
     428: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     431: new           #39                 // class java/lang/StringBuilder
     434: dup
     435: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     438: ldc           #76                 // String tx remove replayed producer :
     440: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: aload         7
     445: invokevirtual #73                 // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
     448: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     451: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     454: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     459: aload_1
     460: aload         7
     462: invokevirtual #73                 // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
     465: invokevirtual #77                 // Method org/apache/activemq/command/ProducerInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
     468: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     473: goto          395
     476: goto          19
     479: aload_3
     480: invokevirtual #78                 // Method java/util/Vector.iterator:()Ljava/util/Iterator;
     483: astore        4
     485: aload         4
     487: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     492: ifeq          577
     495: aload         4
     497: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     502: checkcast     #66                 // class org/apache/activemq/command/TransactionInfo
     505: astore        5
     507: new           #79                 // class org/apache/activemq/command/ExceptionResponse
     510: dup
     511: invokespecial #80                 // Method org/apache/activemq/command/ExceptionResponse."<init>":()V
     514: astore        6
     516: aload         6
     518: new           #81                 // class javax/jms/TransactionRolledBackException
     521: dup
     522: new           #39                 // class java/lang/StringBuilder
     525: dup
     526: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     529: ldc           #82                 // String Transaction completion in doubt due to failover. Forcing rollback of
     531: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     534: aload         5
     536: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     539: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     542: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     545: invokespecial #84                 // Method javax/jms/TransactionRolledBackException."<init>":(Ljava/lang/String;)V
     548: invokevirtual #85                 // Method org/apache/activemq/command/ExceptionResponse.setException:(Ljava/lang/Throwable;)V
     551: aload         6
     553: aload         5
     555: invokevirtual #86                 // Method org/apache/activemq/command/TransactionInfo.getCommandId:()I
     558: invokevirtual #87                 // Method org/apache/activemq/command/ExceptionResponse.setCorrelationId:(I)V
     561: aload_1
     562: invokeinterface #88,  1           // InterfaceMethod org/apache/activemq/transport/Transport.getTransportListener:()Lorg/apache/activemq/transport/TransportListener;
     567: aload         6
     569: invokeinterface #89,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onCommand:(Ljava/lang/Object;)V
     574: goto          485
     577: return

  protected void restoreSessions(org.apache.activemq.transport.Transport, org.apache.activemq.state.ConnectionState) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #90                 // Method org/apache/activemq/state/ConnectionState.getSessionStates:()Ljava/util/Collection;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          117
      19: aload_3
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #91                 // class org/apache/activemq/state/SessionState
      28: astore        4
      30: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      33: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          75
      41: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      44: new           #39                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #92                 // String session:
      53: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: invokevirtual #93                 // Method org/apache/activemq/state/SessionState.getInfo:()Lorg/apache/activemq/command/SessionInfo;
      61: invokevirtual #94                 // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      64: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      75: aload_1
      76: aload         4
      78: invokevirtual #93                 // Method org/apache/activemq/state/SessionState.getInfo:()Lorg/apache/activemq/command/SessionInfo;
      81: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      86: aload_0
      87: getfield      #10                 // Field restoreProducers:Z
      90: ifeq          100
      93: aload_0
      94: aload_1
      95: aload         4
      97: invokevirtual #95                 // Method restoreProducers:(Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/state/SessionState;)V
     100: aload_0
     101: getfield      #9                  // Field restoreConsumers:Z
     104: ifeq          114
     107: aload_0
     108: aload_1
     109: aload         4
     111: invokevirtual #96                 // Method restoreConsumers:(Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/state/SessionState;)V
     114: goto          10
     117: return

  protected void restoreConsumers(org.apache.activemq.transport.Transport, org.apache.activemq.state.SessionState) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_2
       5: invokevirtual #93                 // Method org/apache/activemq/state/SessionState.getInfo:()Lorg/apache/activemq/command/SessionInfo;
       8: invokevirtual #94                 // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      11: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      14: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      20: astore_3
      21: aload_3
      22: invokevirtual #99                 // Method org/apache/activemq/state/ConnectionState.isConnectionInterruptProcessingComplete:()Z
      25: istore        4
      27: aload_2
      28: invokevirtual #100                // Method org/apache/activemq/state/SessionState.getConsumerStates:()Ljava/util/Collection;
      31: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      36: astore        5
      38: aload         5
      40: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          227
      48: aload         5
      50: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #101                // class org/apache/activemq/state/ConsumerState
      58: astore        6
      60: aload         6
      62: invokevirtual #102                // Method org/apache/activemq/state/ConsumerState.getInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      65: astore        7
      67: iload         4
      69: ifne          174
      72: aload         7
      74: invokevirtual #103                // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
      77: ifle          174
      80: aload         6
      82: invokevirtual #102                // Method org/apache/activemq/state/ConsumerState.getInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      85: invokevirtual #104                // Method org/apache/activemq/command/ConsumerInfo.copy:()Lorg/apache/activemq/command/ConsumerInfo;
      88: astore        7
      90: aload_3
      91: invokevirtual #105                // Method org/apache/activemq/state/ConnectionState.getRecoveringPullConsumers:()Ljava/util/Map;
      94: aload         7
      96: invokevirtual #106                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      99: aload         6
     101: invokevirtual #102                // Method org/apache/activemq/state/ConsumerState.getInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     104: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload         7
     112: iconst_0
     113: invokevirtual #108                // Method org/apache/activemq/command/ConsumerInfo.setPrefetchSize:(I)V
     116: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     119: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     124: ifeq          174
     127: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     130: new           #39                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #109                // String restore consumer:
     139: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload         7
     144: invokevirtual #106                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     147: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     150: ldc           #110                // String  in pull mode pending recovery, overriding prefetch:
     152: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload         6
     157: invokevirtual #102                // Method org/apache/activemq/state/ConsumerState.getInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     160: invokevirtual #103                // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
     163: invokevirtual #111                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     166: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     174: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     177: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     182: ifeq          216
     185: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     188: new           #39                 // class java/lang/StringBuilder
     191: dup
     192: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     195: ldc           #112                // String consumer:
     197: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload         7
     202: invokevirtual #106                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     205: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     208: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     216: aload_1
     217: aload         7
     219: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     224: goto          38
     227: return

  protected void restoreProducers(org.apache.activemq.transport.Transport, org.apache.activemq.state.SessionState) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #113                // Method org/apache/activemq/state/SessionState.getProducerStates:()Ljava/util/Collection;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          89
      19: aload_3
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #71                 // class org/apache/activemq/state/ProducerState
      28: astore        4
      30: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      33: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          75
      41: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      44: new           #39                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #114                // String producer:
      53: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: invokevirtual #73                 // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
      61: invokevirtual #115                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      64: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      75: aload_1
      76: aload         4
      78: invokevirtual #73                 // Method org/apache/activemq/state/ProducerState.getInfo:()Lorg/apache/activemq/command/ProducerInfo;
      81: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      86: goto          10
      89: return

  protected void restoreTempDestinations(org.apache.activemq.transport.Transport, org.apache.activemq.state.ConnectionState) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #116                // Method org/apache/activemq/state/ConnectionState.getTempDestinations:()Ljava/util/List;
       4: invokeinterface #117,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          83
      19: aload_3
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #118                // class org/apache/activemq/command/DestinationInfo
      28: astore        4
      30: aload_1
      31: aload         4
      33: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      38: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      41: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      46: ifeq          80
      49: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      52: new           #39                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #119                // String tempDest:
      61: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload         4
      66: invokevirtual #120                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      69: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      80: goto          10
      83: return

  public org.apache.activemq.command.Response processAddDestination(org.apache.activemq.command.DestinationInfo);
    Code:
       0: aload_1
       1: ifnull        38
       4: aload_0
       5: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #121                // Method org/apache/activemq/command/DestinationInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      12: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      18: astore_2
      19: aload_2
      20: ifnull        38
      23: aload_1
      24: invokevirtual #120                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      27: invokevirtual #122                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      30: ifeq          38
      33: aload_2
      34: aload_1
      35: invokevirtual #123                // Method org/apache/activemq/state/ConnectionState.addTempDestination:(Lorg/apache/activemq/command/DestinationInfo;)V
      38: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      41: areturn

  public org.apache.activemq.command.Response processRemoveDestination(org.apache.activemq.command.DestinationInfo);
    Code:
       0: aload_1
       1: ifnull        41
       4: aload_0
       5: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #121                // Method org/apache/activemq/command/DestinationInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      12: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      18: astore_2
      19: aload_2
      20: ifnull        41
      23: aload_1
      24: invokevirtual #120                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      27: invokevirtual #122                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      30: ifeq          41
      33: aload_2
      34: aload_1
      35: invokevirtual #120                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      38: invokevirtual #125                // Method org/apache/activemq/state/ConnectionState.removeTempDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      41: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      44: areturn

  public org.apache.activemq.command.Response processAddProducer(org.apache.activemq.command.ProducerInfo);
    Code:
       0: aload_1
       1: ifnull        69
       4: aload_1
       5: invokevirtual #115                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
       8: ifnull        69
      11: aload_1
      12: invokevirtual #115                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      15: invokevirtual #126                // Method org/apache/activemq/command/ProducerId.getParentId:()Lorg/apache/activemq/command/SessionId;
      18: astore_2
      19: aload_2
      20: ifnull        69
      23: aload_2
      24: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      27: astore_3
      28: aload_3
      29: ifnull        69
      32: aload_0
      33: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      36: aload_3
      37: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      43: astore        4
      45: aload         4
      47: ifnull        69
      50: aload         4
      52: aload_2
      53: invokevirtual #127                // Method org/apache/activemq/state/ConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      56: astore        5
      58: aload         5
      60: ifnull        69
      63: aload         5
      65: aload_1
      66: invokevirtual #128                // Method org/apache/activemq/state/SessionState.addProducer:(Lorg/apache/activemq/command/ProducerInfo;)V
      69: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      72: areturn

  public org.apache.activemq.command.Response processRemoveProducer(org.apache.activemq.command.ProducerId);
    Code:
       0: aload_1
       1: ifnull        60
       4: aload_1
       5: invokevirtual #126                // Method org/apache/activemq/command/ProducerId.getParentId:()Lorg/apache/activemq/command/SessionId;
       8: astore_2
       9: aload_2
      10: ifnull        60
      13: aload_2
      14: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      17: astore_3
      18: aload_3
      19: ifnull        60
      22: aload_0
      23: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      26: aload_3
      27: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      33: astore        4
      35: aload         4
      37: ifnull        60
      40: aload         4
      42: aload_2
      43: invokevirtual #127                // Method org/apache/activemq/state/ConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      46: astore        5
      48: aload         5
      50: ifnull        60
      53: aload         5
      55: aload_1
      56: invokevirtual #129                // Method org/apache/activemq/state/SessionState.removeProducer:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/state/ProducerState;
      59: pop
      60: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      63: areturn

  public org.apache.activemq.command.Response processAddConsumer(org.apache.activemq.command.ConsumerInfo);
    Code:
       0: aload_1
       1: ifnull        62
       4: aload_1
       5: invokevirtual #106                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       8: invokevirtual #130                // Method org/apache/activemq/command/ConsumerId.getParentId:()Lorg/apache/activemq/command/SessionId;
      11: astore_2
      12: aload_2
      13: ifnull        62
      16: aload_2
      17: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      20: astore_3
      21: aload_3
      22: ifnull        62
      25: aload_0
      26: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      29: aload_3
      30: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      36: astore        4
      38: aload         4
      40: ifnull        62
      43: aload         4
      45: aload_2
      46: invokevirtual #127                // Method org/apache/activemq/state/ConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      49: astore        5
      51: aload         5
      53: ifnull        62
      56: aload         5
      58: aload_1
      59: invokevirtual #131                // Method org/apache/activemq/state/SessionState.addConsumer:(Lorg/apache/activemq/command/ConsumerInfo;)V
      62: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      65: areturn

  public org.apache.activemq.command.Response processRemoveConsumer(org.apache.activemq.command.ConsumerId, long);
    Code:
       0: aload_1
       1: ifnull        79
       4: aload_1
       5: invokevirtual #130                // Method org/apache/activemq/command/ConsumerId.getParentId:()Lorg/apache/activemq/command/SessionId;
       8: astore        4
      10: aload         4
      12: ifnull        79
      15: aload         4
      17: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      20: astore        5
      22: aload         5
      24: ifnull        79
      27: aload_0
      28: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload         5
      33: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      39: astore        6
      41: aload         6
      43: ifnull        79
      46: aload         6
      48: aload         4
      50: invokevirtual #127                // Method org/apache/activemq/state/ConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      53: astore        7
      55: aload         7
      57: ifnull        67
      60: aload         7
      62: aload_1
      63: invokevirtual #132                // Method org/apache/activemq/state/SessionState.removeConsumer:(Lorg/apache/activemq/command/ConsumerId;)Lorg/apache/activemq/state/ConsumerState;
      66: pop
      67: aload         6
      69: invokevirtual #105                // Method org/apache/activemq/state/ConnectionState.getRecoveringPullConsumers:()Ljava/util/Map;
      72: aload_1
      73: invokeinterface #133,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      82: areturn

  public org.apache.activemq.command.Response processAddSession(org.apache.activemq.command.SessionInfo);
    Code:
       0: aload_1
       1: ifnull        37
       4: aload_1
       5: invokevirtual #94                 // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
       8: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      11: astore_2
      12: aload_2
      13: ifnull        37
      16: aload_0
      17: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      20: aload_2
      21: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      27: astore_3
      28: aload_3
      29: ifnull        37
      32: aload_3
      33: aload_1
      34: invokevirtual #134                // Method org/apache/activemq/state/ConnectionState.addSession:(Lorg/apache/activemq/command/SessionInfo;)V
      37: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      40: areturn

  public org.apache.activemq.command.Response processRemoveSession(org.apache.activemq.command.SessionId, long);
    Code:
       0: aload_1
       1: ifnull        41
       4: aload_1
       5: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
       8: astore        4
      10: aload         4
      12: ifnull        41
      15: aload_0
      16: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      19: aload         4
      21: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      27: astore        5
      29: aload         5
      31: ifnull        41
      34: aload         5
      36: aload_1
      37: invokevirtual #135                // Method org/apache/activemq/state/ConnectionState.removeSession:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      40: pop
      41: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      44: areturn

  public org.apache.activemq.command.Response processAddConnection(org.apache.activemq.command.ConnectionInfo);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_0
       5: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #43                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      12: new           #35                 // class org/apache/activemq/state/ConnectionState
      15: dup
      16: aload_1
      17: invokespecial #136                // Method org/apache/activemq/state/ConnectionState."<init>":(Lorg/apache/activemq/command/ConnectionInfo;)V
      20: invokevirtual #137                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      27: areturn

  public org.apache.activemq.command.Response processRemoveConnection(org.apache.activemq.command.ConnectionId, long) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_0
       5: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #138                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      16: areturn

  public org.apache.activemq.command.Response processMessage(org.apache.activemq.command.Message) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        134
       4: aload_0
       5: getfield      #139                // Field trackTransactions:Z
       8: ifeq          112
      11: aload_1
      12: invokevirtual #25                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      15: ifnull        112
      18: aload_1
      19: invokevirtual #140                // Method org/apache/activemq/command/Message.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      22: astore_2
      23: aload_2
      24: invokevirtual #126                // Method org/apache/activemq/command/ProducerId.getParentId:()Lorg/apache/activemq/command/SessionId;
      27: invokevirtual #97                 // Method org/apache/activemq/command/SessionId.getParentId:()Lorg/apache/activemq/command/ConnectionId;
      30: astore_3
      31: aload_3
      32: ifnull        108
      35: aload_0
      36: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      39: aload_3
      40: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      46: astore        4
      48: aload         4
      50: ifnull        108
      53: aload         4
      55: aload_1
      56: invokevirtual #25                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      59: invokevirtual #141                // Method org/apache/activemq/state/ConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      62: astore        5
      64: aload         5
      66: ifnull        108
      69: aload         5
      71: aload_1
      72: invokevirtual #142                // Method org/apache/activemq/state/TransactionState.addCommand:(Lorg/apache/activemq/command/Command;)V
      75: aload_0
      76: getfield      #13                 // Field trackTransactionProducers:Z
      79: ifeq          108
      82: aload         4
      84: aload_2
      85: invokevirtual #126                // Method org/apache/activemq/command/ProducerId.getParentId:()Lorg/apache/activemq/command/SessionId;
      88: invokevirtual #127                // Method org/apache/activemq/state/ConnectionState.getSessionState:(Lorg/apache/activemq/command/SessionId;)Lorg/apache/activemq/state/SessionState;
      91: astore        6
      93: aload         6
      95: aload_2
      96: invokevirtual #143                // Method org/apache/activemq/state/SessionState.getProducerState:(Lorg/apache/activemq/command/ProducerId;)Lorg/apache/activemq/state/ProducerState;
      99: astore        7
     101: aload         7
     103: aload         5
     105: invokevirtual #144                // Method org/apache/activemq/state/ProducerState.setTransactionState:(Lorg/apache/activemq/state/TransactionState;)V
     108: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
     111: areturn
     112: aload_0
     113: getfield      #12                 // Field trackMessages:Z
     116: ifeq          134
     119: aload_0
     120: getfield      #17                 // Field messageCache:Ljava/util/Map;
     123: aload_1
     124: invokevirtual #55                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     127: aload_1
     128: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: aconst_null
     135: areturn

  public org.apache.activemq.command.Response processBeginTransaction(org.apache.activemq.command.TransactionInfo);
    Code:
       0: aload_0
       1: getfield      #139                // Field trackTransactions:Z
       4: ifeq          71
       7: aload_1
       8: ifnull        71
      11: aload_1
      12: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      15: ifnull        71
      18: aload_1
      19: invokevirtual #145                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      22: astore_2
      23: aload_2
      24: ifnull        67
      27: aload_0
      28: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_2
      32: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      38: astore_3
      39: aload_3
      40: ifnull        67
      43: aload_3
      44: aload_1
      45: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      48: invokevirtual #146                // Method org/apache/activemq/state/ConnectionState.addTransactionState:(Lorg/apache/activemq/command/TransactionId;)V
      51: aload_3
      52: aload_1
      53: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      56: invokevirtual #141                // Method org/apache/activemq/state/ConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      59: astore        4
      61: aload         4
      63: aload_1
      64: invokevirtual #142                // Method org/apache/activemq/state/TransactionState.addCommand:(Lorg/apache/activemq/command/Command;)V
      67: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      70: areturn
      71: aconst_null
      72: areturn

  public org.apache.activemq.command.Response processPrepareTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #139                // Field trackTransactions:Z
       4: ifeq          81
       7: aload_1
       8: ifnull        81
      11: aload_1
      12: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      15: ifnull        81
      18: aload_1
      19: invokevirtual #145                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      22: astore_2
      23: aload_2
      24: ifnull        81
      27: aload_0
      28: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_2
      32: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      38: astore_3
      39: aload_3
      40: ifnull        81
      43: aload_3
      44: aload_1
      45: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      48: invokevirtual #141                // Method org/apache/activemq/state/ConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      51: astore        4
      53: aload         4
      55: ifnull        81
      58: aload         4
      60: aload_1
      61: invokevirtual #142                // Method org/apache/activemq/state/TransactionState.addCommand:(Lorg/apache/activemq/command/Command;)V
      64: new           #19                 // class org/apache/activemq/state/Tracked
      67: dup
      68: new           #147                // class org/apache/activemq/state/ConnectionStateTracker$PrepareReadonlyTransactionAction
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #148                // Method org/apache/activemq/state/ConnectionStateTracker$PrepareReadonlyTransactionAction."<init>":(Lorg/apache/activemq/state/ConnectionStateTracker;Lorg/apache/activemq/command/TransactionInfo;)V
      77: invokespecial #149                // Method org/apache/activemq/state/Tracked."<init>":(Lorg/apache/activemq/state/ResponseHandler;)V
      80: areturn
      81: aconst_null
      82: areturn

  public org.apache.activemq.command.Response processCommitTransactionOnePhase(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #139                // Field trackTransactions:Z
       4: ifeq          81
       7: aload_1
       8: ifnull        81
      11: aload_1
      12: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      15: ifnull        81
      18: aload_1
      19: invokevirtual #145                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      22: astore_2
      23: aload_2
      24: ifnull        81
      27: aload_0
      28: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_2
      32: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      38: astore_3
      39: aload_3
      40: ifnull        81
      43: aload_3
      44: aload_1
      45: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      48: invokevirtual #141                // Method org/apache/activemq/state/ConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      51: astore        4
      53: aload         4
      55: ifnull        81
      58: aload         4
      60: aload_1
      61: invokevirtual #142                // Method org/apache/activemq/state/TransactionState.addCommand:(Lorg/apache/activemq/command/Command;)V
      64: new           #19                 // class org/apache/activemq/state/Tracked
      67: dup
      68: new           #150                // class org/apache/activemq/state/ConnectionStateTracker$RemoveTransactionAction
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #151                // Method org/apache/activemq/state/ConnectionStateTracker$RemoveTransactionAction."<init>":(Lorg/apache/activemq/state/ConnectionStateTracker;Lorg/apache/activemq/command/TransactionInfo;)V
      77: invokespecial #149                // Method org/apache/activemq/state/Tracked."<init>":(Lorg/apache/activemq/state/ResponseHandler;)V
      80: areturn
      81: aconst_null
      82: areturn

  public org.apache.activemq.command.Response processCommitTransactionTwoPhase(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #139                // Field trackTransactions:Z
       4: ifeq          81
       7: aload_1
       8: ifnull        81
      11: aload_1
      12: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      15: ifnull        81
      18: aload_1
      19: invokevirtual #145                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      22: astore_2
      23: aload_2
      24: ifnull        81
      27: aload_0
      28: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_2
      32: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      38: astore_3
      39: aload_3
      40: ifnull        81
      43: aload_3
      44: aload_1
      45: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      48: invokevirtual #141                // Method org/apache/activemq/state/ConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      51: astore        4
      53: aload         4
      55: ifnull        81
      58: aload         4
      60: aload_1
      61: invokevirtual #142                // Method org/apache/activemq/state/TransactionState.addCommand:(Lorg/apache/activemq/command/Command;)V
      64: new           #19                 // class org/apache/activemq/state/Tracked
      67: dup
      68: new           #150                // class org/apache/activemq/state/ConnectionStateTracker$RemoveTransactionAction
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #151                // Method org/apache/activemq/state/ConnectionStateTracker$RemoveTransactionAction."<init>":(Lorg/apache/activemq/state/ConnectionStateTracker;Lorg/apache/activemq/command/TransactionInfo;)V
      77: invokespecial #149                // Method org/apache/activemq/state/Tracked."<init>":(Lorg/apache/activemq/state/ResponseHandler;)V
      80: areturn
      81: aconst_null
      82: areturn

  public org.apache.activemq.command.Response processRollbackTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #139                // Field trackTransactions:Z
       4: ifeq          81
       7: aload_1
       8: ifnull        81
      11: aload_1
      12: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      15: ifnull        81
      18: aload_1
      19: invokevirtual #145                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      22: astore_2
      23: aload_2
      24: ifnull        81
      27: aload_0
      28: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_2
      32: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      38: astore_3
      39: aload_3
      40: ifnull        81
      43: aload_3
      44: aload_1
      45: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      48: invokevirtual #141                // Method org/apache/activemq/state/ConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      51: astore        4
      53: aload         4
      55: ifnull        81
      58: aload         4
      60: aload_1
      61: invokevirtual #142                // Method org/apache/activemq/state/TransactionState.addCommand:(Lorg/apache/activemq/command/Command;)V
      64: new           #19                 // class org/apache/activemq/state/Tracked
      67: dup
      68: new           #150                // class org/apache/activemq/state/ConnectionStateTracker$RemoveTransactionAction
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #151                // Method org/apache/activemq/state/ConnectionStateTracker$RemoveTransactionAction."<init>":(Lorg/apache/activemq/state/ConnectionStateTracker;Lorg/apache/activemq/command/TransactionInfo;)V
      77: invokespecial #149                // Method org/apache/activemq/state/Tracked."<init>":(Lorg/apache/activemq/state/ResponseHandler;)V
      80: areturn
      81: aconst_null
      82: areturn

  public org.apache.activemq.command.Response processEndTransaction(org.apache.activemq.command.TransactionInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #139                // Field trackTransactions:Z
       4: ifeq          68
       7: aload_1
       8: ifnull        68
      11: aload_1
      12: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      15: ifnull        68
      18: aload_1
      19: invokevirtual #145                // Method org/apache/activemq/command/TransactionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      22: astore_2
      23: aload_2
      24: ifnull        64
      27: aload_0
      28: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_2
      32: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      38: astore_3
      39: aload_3
      40: ifnull        64
      43: aload_3
      44: aload_1
      45: invokevirtual #83                 // Method org/apache/activemq/command/TransactionInfo.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      48: invokevirtual #141                // Method org/apache/activemq/state/ConnectionState.getTransactionState:(Lorg/apache/activemq/command/TransactionId;)Lorg/apache/activemq/state/TransactionState;
      51: astore        4
      53: aload         4
      55: ifnull        64
      58: aload         4
      60: aload_1
      61: invokevirtual #142                // Method org/apache/activemq/state/TransactionState.addCommand:(Lorg/apache/activemq/command/Command;)V
      64: getstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      67: areturn
      68: aconst_null
      69: areturn

  public org.apache.activemq.command.Response processMessagePull(org.apache.activemq.command.MessagePull) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        56
       4: new           #39                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #152                // Method org/apache/activemq/command/MessagePull.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      15: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #153                // String ::
      20: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #154                // Method org/apache/activemq/command/MessagePull.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      27: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: astore_2
      34: aload_0
      35: getfield      #17                 // Field messageCache:Ljava/util/Map;
      38: aload_2
      39: invokevirtual #155                // Method java/lang/String.intern:()Ljava/lang/String;
      42: aload_1
      43: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: ifnonnull     56
      51: aload_1
      52: iconst_1
      53: invokevirtual #156                // Method org/apache/activemq/command/MessagePull.setTracked:(Z)V
      56: aconst_null
      57: areturn

  public boolean isRestoreConsumers();
    Code:
       0: aload_0
       1: getfield      #9                  // Field restoreConsumers:Z
       4: ireturn

  public void setRestoreConsumers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field restoreConsumers:Z
       5: return

  public boolean isRestoreProducers();
    Code:
       0: aload_0
       1: getfield      #10                 // Field restoreProducers:Z
       4: ireturn

  public void setRestoreProducers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field restoreProducers:Z
       5: return

  public boolean isRestoreSessions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field restoreSessions:Z
       4: ireturn

  public void setRestoreSessions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field restoreSessions:Z
       5: return

  public boolean isTrackTransactions();
    Code:
       0: aload_0
       1: getfield      #139                // Field trackTransactions:Z
       4: ireturn

  public void setTrackTransactions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #139                // Field trackTransactions:Z
       5: return

  public boolean isTrackTransactionProducers();
    Code:
       0: aload_0
       1: getfield      #13                 // Field trackTransactionProducers:Z
       4: ireturn

  public void setTrackTransactionProducers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field trackTransactionProducers:Z
       5: return

  public boolean isRestoreTransaction();
    Code:
       0: aload_0
       1: getfield      #11                 // Field restoreTransaction:Z
       4: ireturn

  public void setRestoreTransaction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field restoreTransaction:Z
       5: return

  public boolean isTrackMessages();
    Code:
       0: aload_0
       1: getfield      #12                 // Field trackMessages:Z
       4: ireturn

  public void setTrackMessages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field trackMessages:Z
       5: return

  public int getMaxCacheSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxCacheSize:I
       4: ireturn

  public void setMaxCacheSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxCacheSize:I
       5: return

  public long getCurrentCacheSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field currentCacheSize:J
       4: lreturn

  public void connectionInterruptProcessingComplete(org.apache.activemq.transport.Transport, org.apache.activemq.command.ConnectionId);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_2
       5: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      11: astore_3
      12: aload_3
      13: ifnull        258
      16: aload_3
      17: iconst_1
      18: invokevirtual #157                // Method org/apache/activemq/state/ConnectionState.setConnectionInterruptProcessingComplete:(Z)V
      21: aload_3
      22: invokevirtual #105                // Method org/apache/activemq/state/ConnectionState.getRecoveringPullConsumers:()Ljava/util/Map;
      25: astore        4
      27: aload         4
      29: invokeinterface #158,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      34: invokeinterface #159,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore        5
      41: aload         5
      43: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          251
      51: aload         5
      53: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #160                // class java/util/Map$Entry
      61: astore        6
      63: new           #161                // class org/apache/activemq/command/ConsumerControl
      66: dup
      67: invokespecial #162                // Method org/apache/activemq/command/ConsumerControl."<init>":()V
      70: astore        7
      72: aload         7
      74: aload         6
      76: invokeinterface #163,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      81: checkcast     #164                // class org/apache/activemq/command/ConsumerId
      84: invokevirtual #165                // Method org/apache/activemq/command/ConsumerControl.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      87: aload         7
      89: aload         6
      91: invokeinterface #166,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      96: checkcast     #167                // class org/apache/activemq/command/ConsumerInfo
      99: invokevirtual #103                // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
     102: invokevirtual #168                // Method org/apache/activemq/command/ConsumerControl.setPrefetch:(I)V
     105: aload         7
     107: aload         6
     109: invokeinterface #166,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     114: checkcast     #167                // class org/apache/activemq/command/ConsumerInfo
     117: invokevirtual #169                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     120: invokevirtual #170                // Method org/apache/activemq/command/ConsumerControl.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     123: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     126: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     131: ifeq          178
     134: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     137: new           #39                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #171                // String restored recovering consumer:
     146: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload         7
     151: invokevirtual #172                // Method org/apache/activemq/command/ConsumerControl.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     154: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     157: ldc           #173                // String  with:
     159: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload         7
     164: invokevirtual #174                // Method org/apache/activemq/command/ConsumerControl.getPrefetch:()I
     167: invokevirtual #111                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     170: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     178: aload_1
     179: aload         7
     181: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     186: goto          248
     189: astore        8
     191: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     194: invokeinterface #38,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     199: ifeq          248
     202: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     205: new           #39                 // class java/lang/StringBuilder
     208: dup
     209: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     212: ldc           #176                // String Failed to submit control for consumer:
     214: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: aload         7
     219: invokevirtual #172                // Method org/apache/activemq/command/ConsumerControl.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     222: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     225: ldc           #173                // String  with:
     227: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload         7
     232: invokevirtual #174                // Method org/apache/activemq/command/ConsumerControl.getPrefetch:()I
     235: invokevirtual #111                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     238: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     241: aload         8
     243: invokeinterface #177,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     248: goto          41
     251: aload         4
     253: invokeinterface #178,  1          // InterfaceMethod java/util/Map.clear:()V
     258: return
    Exception table:
       from    to  target type
         123   186   189   Class java/lang/Exception

  public void transportInterrupted(org.apache.activemq.command.ConnectionId);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionStates:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #98                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #35                 // class org/apache/activemq/state/ConnectionState
      11: astore_2
      12: aload_2
      13: ifnull        21
      16: aload_2
      17: iconst_0
      18: invokevirtual #157                // Method org/apache/activemq/state/ConnectionState.setConnectionInterruptProcessingComplete:(Z)V
      21: return

  static long access$000(org.apache.activemq.state.ConnectionStateTracker);
    Code:
       0: aload_0
       1: getfield      #3                  // Field currentCacheSize:J
       4: lreturn

  static int access$100(org.apache.activemq.state.ConnectionStateTracker);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxCacheSize:I
       4: ireturn

  static long access$022(org.apache.activemq.state.ConnectionStateTracker, long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field currentCacheSize:J
       5: lload_1
       6: lsub
       7: dup2_x1
       8: putfield      #3                  // Field currentCacheSize:J
      11: lreturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #179                // class org/apache/activemq/state/ConnectionStateTracker
       3: invokestatic  #180                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: new           #19                 // class org/apache/activemq/state/Tracked
      12: dup
      13: aconst_null
      14: invokespecial #149                // Method org/apache/activemq/state/Tracked."<init>":(Lorg/apache/activemq/state/ResponseHandler;)V
      17: putstatic     #124                // Field TRACKED_RESPONSE_MARKER:Lorg/apache/activemq/state/Tracked;
      20: return
}
