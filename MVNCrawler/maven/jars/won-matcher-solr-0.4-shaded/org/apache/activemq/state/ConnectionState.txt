Compiled from "ConnectionState.java"
public class org.apache.activemq.state.ConnectionState {
  org.apache.activemq.command.ConnectionInfo info;

  private final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.TransactionId, org.apache.activemq.state.TransactionState> transactions;

  private final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.SessionId, org.apache.activemq.state.SessionState> sessions;

  private final java.util.List<org.apache.activemq.command.DestinationInfo> tempDestinations;

  private final java.util.concurrent.atomic.AtomicBoolean shutdown;

  private boolean connectionInterruptProcessingComplete;

  private java.util.HashMap<org.apache.activemq.command.ConsumerId, org.apache.activemq.command.ConsumerInfo> recoveringPullConsumers;

  public org.apache.activemq.state.ConnectionState(org.apache.activemq.command.ConnectionInfo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field transactions:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
      26: aload_0
      27: new           #6                  // class java/util/ArrayList
      30: dup
      31: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      34: invokestatic  #8                  // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      37: putfield      #9                  // Field tempDestinations:Ljava/util/List;
      40: aload_0
      41: new           #10                 // class java/util/concurrent/atomic/AtomicBoolean
      44: dup
      45: iconst_0
      46: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      49: putfield      #12                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      52: aload_0
      53: iconst_1
      54: putfield      #13                 // Field connectionInterruptProcessingComplete:Z
      57: aload_0
      58: aload_1
      59: putfield      #14                 // Field info:Lorg/apache/activemq/command/ConnectionInfo;
      62: aload_0
      63: new           #15                 // class org/apache/activemq/command/SessionInfo
      66: dup
      67: aload_1
      68: ldc2_w        #16                 // long -1l
      71: invokespecial #18                 // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
      74: invokevirtual #19                 // Method addSession:(Lorg/apache/activemq/command/SessionInfo;)V
      77: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #14                 // Field info:Lorg/apache/activemq/command/ConnectionInfo;
       4: invokevirtual #20                 // Method org/apache/activemq/command/ConnectionInfo.toString:()Ljava/lang/String;
       7: areturn

  public void reset(org.apache.activemq.command.ConnectionInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field info:Lorg/apache/activemq/command/ConnectionInfo;
       5: aload_0
       6: getfield      #4                  // Field transactions:Ljava/util/concurrent/ConcurrentHashMap;
       9: invokevirtual #21                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      12: aload_0
      13: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
      16: invokevirtual #21                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      19: aload_0
      20: getfield      #9                  // Field tempDestinations:Ljava/util/List;
      23: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
      28: aload_0
      29: getfield      #12                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: iconst_0
      33: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      36: aload_0
      37: new           #15                 // class org/apache/activemq/command/SessionInfo
      40: dup
      41: aload_1
      42: ldc2_w        #16                 // long -1l
      45: invokespecial #18                 // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
      48: invokevirtual #19                 // Method addSession:(Lorg/apache/activemq/command/SessionInfo;)V
      51: return

  public void addTempDestination(org.apache.activemq.command.DestinationInfo);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkShutdown:()V
       4: aload_0
       5: getfield      #9                  // Field tempDestinations:Ljava/util/List;
       8: aload_1
       9: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void removeTempDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #9                  // Field tempDestinations:Ljava/util/List;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          49
      19: aload_2
      20: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #29                 // class org/apache/activemq/command/DestinationInfo
      28: astore_3
      29: aload_3
      30: invokevirtual #30                 // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      33: aload_1
      34: invokevirtual #31                 // Method org/apache/activemq/command/ActiveMQDestination.equals:(Ljava/lang/Object;)Z
      37: ifeq          46
      40: aload_2
      41: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.remove:()V
      46: goto          10
      49: return

  public void addTransactionState(org.apache.activemq.command.TransactionId);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkShutdown:()V
       4: aload_0
       5: getfield      #4                  // Field transactions:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: new           #33                 // class org/apache/activemq/state/TransactionState
      12: dup
      13: aload_1
      14: invokespecial #34                 // Method org/apache/activemq/state/TransactionState."<init>":(Lorg/apache/activemq/command/TransactionId;)V
      17: invokevirtual #35                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public org.apache.activemq.state.TransactionState getTransactionState(org.apache.activemq.command.TransactionId);
    Code:
       0: aload_0
       1: getfield      #4                  // Field transactions:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #36                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #33                 // class org/apache/activemq/state/TransactionState
      11: areturn

  public java.util.Collection<org.apache.activemq.state.TransactionState> getTransactionStates();
    Code:
       0: aload_0
       1: getfield      #4                  // Field transactions:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #37                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: areturn

  public org.apache.activemq.state.TransactionState removeTransactionState(org.apache.activemq.command.TransactionId);
    Code:
       0: aload_0
       1: getfield      #4                  // Field transactions:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #33                 // class org/apache/activemq/state/TransactionState
      11: areturn

  public void addSession(org.apache.activemq.command.SessionInfo);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkShutdown:()V
       4: aload_0
       5: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #39                 // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      12: new           #40                 // class org/apache/activemq/state/SessionState
      15: dup
      16: aload_1
      17: invokespecial #41                 // Method org/apache/activemq/state/SessionState."<init>":(Lorg/apache/activemq/command/SessionInfo;)V
      20: invokevirtual #35                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public org.apache.activemq.state.SessionState removeSession(org.apache.activemq.command.SessionId);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #40                 // class org/apache/activemq/state/SessionState
      11: areturn

  public org.apache.activemq.state.SessionState getSessionState(org.apache.activemq.command.SessionId);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #36                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #40                 // class org/apache/activemq/state/SessionState
      11: areturn

  public org.apache.activemq.command.ConnectionInfo getInfo();
    Code:
       0: aload_0
       1: getfield      #14                 // Field info:Lorg/apache/activemq/command/ConnectionInfo;
       4: areturn

  public java.util.Set<org.apache.activemq.command.SessionId> getSessionIds();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #42                 // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/Set;
       7: areturn

  public java.util.List<org.apache.activemq.command.DestinationInfo> getTempDestinations();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tempDestinations:Ljava/util/List;
       4: areturn

  public java.util.Collection<org.apache.activemq.state.SessionState> getSessionStates();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #37                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: areturn

  private void checkShutdown();
    Code:
       0: aload_0
       1: getfield      #12                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: new           #44                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #45                 // String Disposed
      16: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #12                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          51
      12: aload_0
      13: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentHashMap;
      16: invokevirtual #37                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      19: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_1
      25: aload_1
      26: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          51
      34: aload_1
      35: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #40                 // class org/apache/activemq/state/SessionState
      43: astore_2
      44: aload_2
      45: invokevirtual #49                 // Method org/apache/activemq/state/SessionState.shutdown:()V
      48: goto          25
      51: return

  public java.util.Map<org.apache.activemq.command.ConsumerId, org.apache.activemq.command.ConsumerInfo> getRecoveringPullConsumers();
    Code:
       0: aload_0
       1: getfield      #50                 // Field recoveringPullConsumers:Ljava/util/HashMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #51                 // class java/util/HashMap
      11: dup
      12: invokespecial #52                 // Method java/util/HashMap."<init>":()V
      15: putfield      #50                 // Field recoveringPullConsumers:Ljava/util/HashMap;
      18: aload_0
      19: getfield      #50                 // Field recoveringPullConsumers:Ljava/util/HashMap;
      22: areturn

  public void setConnectionInterruptProcessingComplete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field connectionInterruptProcessingComplete:Z
       5: return

  public boolean isConnectionInterruptProcessingComplete();
    Code:
       0: aload_0
       1: getfield      #13                 // Field connectionInterruptProcessingComplete:Z
       4: ireturn
}
