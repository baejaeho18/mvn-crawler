Compiled from "ActiveMQQueueBrowser.java"
public class org.apache.activemq.ActiveMQQueueBrowser implements javax.jms.QueueBrowser,java.util.Enumeration {
  private final org.apache.activemq.ActiveMQSession session;

  private final org.apache.activemq.command.ActiveMQDestination destination;

  private final java.lang.String selector;

  private org.apache.activemq.ActiveMQMessageConsumer consumer;

  private boolean closed;

  private final org.apache.activemq.command.ConsumerId consumerId;

  private final java.util.concurrent.atomic.AtomicBoolean browseDone;

  private final boolean dispatchAsync;

  private java.lang.Object semaphore;

  protected org.apache.activemq.ActiveMQQueueBrowser(org.apache.activemq.ActiveMQSession, org.apache.activemq.command.ConsumerId, org.apache.activemq.command.ActiveMQDestination, java.lang.String, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_1
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #1                  // Field browseDone:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #5                  // class java/lang/Object
      20: dup
      21: invokespecial #2                  // Method java/lang/Object."<init>":()V
      24: putfield      #6                  // Field semaphore:Ljava/lang/Object;
      27: aload_3
      28: ifnonnull     41
      31: new           #7                  // class javax/jms/InvalidDestinationException
      34: dup
      35: ldc           #8                  // String Don\'t understand null destinations
      37: invokespecial #9                  // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_3
      42: invokevirtual #10                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      45: ifnonnull     58
      48: new           #7                  // class javax/jms/InvalidDestinationException
      51: dup
      52: ldc           #11                 // String The destination object was not given a physical name.
      54: invokespecial #9                  // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload         4
      60: ifnull        80
      63: aload         4
      65: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;
      68: invokevirtual #13                 // Method java/lang/String.length:()I
      71: ifeq          80
      74: aload         4
      76: invokestatic  #14                 // Method org/apache/activemq/selector/SelectorParser.parse:(Ljava/lang/String;)Lorg/apache/activemq/filter/BooleanExpression;
      79: pop
      80: aload_0
      81: aload_1
      82: putfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      85: aload_0
      86: aload_2
      87: putfield      #16                 // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      90: aload_0
      91: aload_3
      92: putfield      #17                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      95: aload_0
      96: aload         4
      98: putfield      #18                 // Field selector:Ljava/lang/String;
     101: aload_0
     102: iload         5
     104: putfield      #19                 // Field dispatchAsync:Z
     107: return

  private org.apache.activemq.ActiveMQMessageConsumer createConsumer() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field browseDone:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      12: getfield      #21                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      15: invokevirtual #22                 // Method org/apache/activemq/ActiveMQConnection.getPrefetchPolicy:()Lorg/apache/activemq/ActiveMQPrefetchPolicy;
      18: astore_1
      19: new           #23                 // class org/apache/activemq/ActiveMQQueueBrowser$1
      22: dup
      23: aload_0
      24: aload_0
      25: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      28: aload_0
      29: getfield      #16                 // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      32: aload_0
      33: getfield      #17                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      36: aconst_null
      37: aload_0
      38: getfield      #18                 // Field selector:Ljava/lang/String;
      41: aload_1
      42: invokevirtual #24                 // Method org/apache/activemq/ActiveMQPrefetchPolicy.getQueueBrowserPrefetch:()I
      45: aload_1
      46: invokevirtual #25                 // Method org/apache/activemq/ActiveMQPrefetchPolicy.getMaximumPendingMessageLimit:()I
      49: iconst_0
      50: iconst_1
      51: aload_0
      52: getfield      #19                 // Field dispatchAsync:Z
      55: aconst_null
      56: invokespecial #26                 // Method org/apache/activemq/ActiveMQQueueBrowser$1."<init>":(Lorg/apache/activemq/ActiveMQQueueBrowser;Lorg/apache/activemq/ActiveMQSession;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQDestination;Ljava/lang/String;Ljava/lang/String;IIZZZLjavax/jms/MessageListener;)V
      59: areturn

  private void destroyConsumer();
    Code:
       0: aload_0
       1: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      12: invokevirtual #28                 // Method org/apache/activemq/ActiveMQSession.getTransacted:()Z
      15: ifeq          38
      18: aload_0
      19: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      22: invokevirtual #29                 // Method org/apache/activemq/ActiveMQSession.getTransactionContext:()Lorg/apache/activemq/TransactionContext;
      25: invokevirtual #30                 // Method org/apache/activemq/TransactionContext.isInLocalTransaction:()Z
      28: ifeq          38
      31: aload_0
      32: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      35: invokevirtual #31                 // Method org/apache/activemq/ActiveMQSession.commit:()V
      38: aload_0
      39: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
      42: invokevirtual #32                 // Method org/apache/activemq/ActiveMQMessageConsumer.close:()V
      45: aload_0
      46: aconst_null
      47: putfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
      50: goto          58
      53: astore_1
      54: aload_1
      55: invokevirtual #34                 // Method javax/jms/JMSException.printStackTrace:()V
      58: return
    Exception table:
       from    to  target type
           8    50    53   Class javax/jms/JMSException

  public java.util.Enumeration getEnumeration() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #35                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
       8: ifnonnull     19
      11: aload_0
      12: aload_0
      13: invokespecial #36                 // Method createConsumer:()Lorg/apache/activemq/ActiveMQMessageConsumer;
      16: putfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
      19: aload_0
      20: areturn

  private void checkClosed() throws javax.jms.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field closed:Z
       4: ifeq          17
       7: new           #38                 // class javax/jms/IllegalStateException
      10: dup
      11: ldc           #39                 // String The Consumer is closed
      13: invokespecial #40                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public boolean hasMoreElements();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
       8: ifnonnull     15
      11: iconst_0
      12: aload_1
      13: monitorexit
      14: ireturn
      15: aload_1
      16: monitorexit
      17: goto          25
      20: astore_2
      21: aload_1
      22: monitorexit
      23: aload_2
      24: athrow
      25: aload_0
      26: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
      29: invokevirtual #41                 // Method org/apache/activemq/ActiveMQMessageConsumer.getMessageSize:()I
      32: ifle          37
      35: iconst_1
      36: ireturn
      37: aload_0
      38: getfield      #1                  // Field browseDone:Ljava/util/concurrent/atomic/AtomicBoolean;
      41: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      44: ifne          57
      47: aload_0
      48: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      51: invokevirtual #43                 // Method org/apache/activemq/ActiveMQSession.isRunning:()Z
      54: ifne          63
      57: aload_0
      58: invokespecial #44                 // Method destroyConsumer:()V
      61: iconst_0
      62: ireturn
      63: aload_0
      64: invokevirtual #45                 // Method waitForMessage:()V
      67: goto          0
    Exception table:
       from    to  target type
           4    14    20   any
          15    17    20   any
          20    23    20   any

  public java.lang.Object nextElement();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
       8: ifnonnull     15
      11: aconst_null
      12: aload_1
      13: monitorexit
      14: areturn
      15: aload_1
      16: monitorexit
      17: goto          25
      20: astore_2
      21: aload_1
      22: monitorexit
      23: aload_2
      24: athrow
      25: aload_0
      26: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
      29: invokevirtual #46                 // Method org/apache/activemq/ActiveMQMessageConsumer.receiveNoWait:()Ljavax/jms/Message;
      32: astore_1
      33: aload_1
      34: ifnull        39
      37: aload_1
      38: areturn
      39: goto          56
      42: astore_1
      43: aload_0
      44: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      47: getfield      #21                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      50: aload_1
      51: invokevirtual #47                 // Method org/apache/activemq/ActiveMQConnection.onClientInternalException:(Ljava/lang/Throwable;)V
      54: aconst_null
      55: areturn
      56: aload_0
      57: getfield      #1                  // Field browseDone:Ljava/util/concurrent/atomic/AtomicBoolean;
      60: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      63: ifne          76
      66: aload_0
      67: getfield      #15                 // Field session:Lorg/apache/activemq/ActiveMQSession;
      70: invokevirtual #43                 // Method org/apache/activemq/ActiveMQSession.isRunning:()Z
      73: ifne          82
      76: aload_0
      77: invokespecial #44                 // Method destroyConsumer:()V
      80: aconst_null
      81: areturn
      82: aload_0
      83: invokevirtual #45                 // Method waitForMessage:()V
      86: goto          0
    Exception table:
       from    to  target type
           4    14    20   any
          15    17    20   any
          20    23    20   any
          25    38    42   Class javax/jms/JMSException

  public synchronized void close() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field browseDone:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: invokespecial #44                 // Method destroyConsumer:()V
      12: aload_0
      13: iconst_1
      14: putfield      #37                 // Field closed:Z
      17: return

  public javax.jms.Queue getQueue() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       4: checkcast     #48                 // class javax/jms/Queue
       7: areturn

  public java.lang.String getMessageSelector() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field selector:Ljava/lang/String;
       4: areturn

  protected void waitForMessage();
    Code:
       0: aload_0
       1: getfield      #27                 // Field consumer:Lorg/apache/activemq/ActiveMQMessageConsumer;
       4: ldc2_w        #49                 // long -1l
       7: invokevirtual #51                 // Method org/apache/activemq/ActiveMQMessageConsumer.sendPullCommand:(J)V
      10: aload_0
      11: getfield      #6                  // Field semaphore:Ljava/lang/Object;
      14: dup
      15: astore_1
      16: monitorenter
      17: aload_0
      18: getfield      #6                  // Field semaphore:Ljava/lang/Object;
      21: ldc2_w        #52                 // long 2000l
      24: invokevirtual #54                 // Method java/lang/Object.wait:(J)V
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
      37: goto          51
      40: astore_1
      41: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      44: invokevirtual #57                 // Method java/lang/Thread.interrupt:()V
      47: goto          51
      50: astore_1
      51: return
    Exception table:
       from    to  target type
          17    29    32   any
          32    35    32   any
           0    37    40   Class java/lang/InterruptedException
           0    37    50   Class javax/jms/JMSException

  protected void notifyMessageAvailable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field semaphore:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field semaphore:Ljava/lang/Object;
      11: invokevirtual #58                 // Method java/lang/Object.notifyAll:()V
      14: aload_1
      15: monitorexit
      16: goto          24
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
      24: return
    Exception table:
       from    to  target type
           7    16    19   any
          19    22    19   any

  public java.lang.String toString();
    Code:
       0: new           #59                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #61                 // String ActiveMQQueueBrowser { value=
       9: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #16                 // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      16: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #64                 // String  }
      21: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$000(org.apache.activemq.ActiveMQQueueBrowser);
    Code:
       0: aload_0
       1: getfield      #1                  // Field browseDone:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn
}
