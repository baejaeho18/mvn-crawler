Compiled from "ActiveMQMessageAuditNoSync.java"
public class org.apache.activemq.ActiveMQMessageAuditNoSync implements java.io.Serializable {
  private static final long serialVersionUID;

  public static final int DEFAULT_WINDOW_SIZE;

  public static final int MAXIMUM_PRODUCER_COUNT;

  private int auditDepth;

  private int maximumNumberOfProducersToTrack;

  private final org.apache.activemq.util.LRUCache<java.lang.String, org.apache.activemq.util.BitArrayBin> map;

  private transient boolean modified;

  public org.apache.activemq.ActiveMQMessageAuditNoSync();
    Code:
       0: aload_0
       1: sipush        2048
       4: bipush        64
       6: invokespecial #1                  // Method "<init>":(II)V
       9: return

  public org.apache.activemq.ActiveMQMessageAuditNoSync(int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field modified:Z
       9: aload_0
      10: iload_1
      11: putfield      #4                  // Field auditDepth:I
      14: aload_0
      15: iload_2
      16: putfield      #5                  // Field maximumNumberOfProducersToTrack:I
      19: aload_0
      20: new           #6                  // class org/apache/activemq/util/LRUCache
      23: dup
      24: iconst_0
      25: iload_2
      26: ldc           #7                  // float 0.75f
      28: iconst_1
      29: invokespecial #8                  // Method org/apache/activemq/util/LRUCache."<init>":(IIFZ)V
      32: putfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      35: return

  public int getAuditDepth();
    Code:
       0: aload_0
       1: getfield      #4                  // Field auditDepth:I
       4: ireturn

  public void setAuditDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field auditDepth:I
       5: aload_0
       6: iconst_1
       7: putfield      #3                  // Field modified:Z
      10: return

  public int getMaximumNumberOfProducersToTrack();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maximumNumberOfProducersToTrack:I
       4: ireturn

  public void setMaximumNumberOfProducersToTrack(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field maximumNumberOfProducersToTrack:I
       5: if_icmpge     44
       8: new           #6                  // class org/apache/activemq/util/LRUCache
      11: dup
      12: iconst_0
      13: iload_1
      14: ldc           #7                  // float 0.75f
      16: iconst_1
      17: invokespecial #8                  // Method org/apache/activemq/util/LRUCache."<init>":(IIFZ)V
      20: astore_2
      21: aload_2
      22: aload_0
      23: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      26: invokevirtual #10                 // Method org/apache/activemq/util/LRUCache.putAll:(Ljava/util/Map;)V
      29: aload_0
      30: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      33: invokevirtual #11                 // Method org/apache/activemq/util/LRUCache.clear:()V
      36: aload_0
      37: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      40: aload_2
      41: invokevirtual #10                 // Method org/apache/activemq/util/LRUCache.putAll:(Ljava/util/Map;)V
      44: aload_0
      45: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      48: iload_1
      49: invokevirtual #12                 // Method org/apache/activemq/util/LRUCache.setMaxCacheSize:(I)V
      52: aload_0
      53: iload_1
      54: putfield      #5                  // Field maximumNumberOfProducersToTrack:I
      57: aload_0
      58: iconst_1
      59: putfield      #3                  // Field modified:Z
      62: return

  public boolean isDuplicate(javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod javax/jms/Message.getJMSMessageID:()Ljava/lang/String;
       7: invokevirtual #14                 // Method isDuplicate:(Ljava/lang/String;)Z
      10: ireturn

  public boolean isDuplicate(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokestatic  #15                 // Method org/apache/activemq/util/IdGenerator.getSeedFromId:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnull        85
      11: aload_0
      12: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      15: aload_3
      16: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #17                 // class org/apache/activemq/util/BitArrayBin
      22: astore        4
      24: aload         4
      26: ifnonnull     58
      29: new           #17                 // class org/apache/activemq/util/BitArrayBin
      32: dup
      33: aload_0
      34: getfield      #4                  // Field auditDepth:I
      37: invokespecial #18                 // Method org/apache/activemq/util/BitArrayBin."<init>":(I)V
      40: astore        4
      42: aload_0
      43: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      46: aload_3
      47: aload         4
      49: invokevirtual #19                 // Method org/apache/activemq/util/LRUCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload_0
      54: iconst_1
      55: putfield      #3                  // Field modified:Z
      58: aload_1
      59: invokestatic  #20                 // Method org/apache/activemq/util/IdGenerator.getSequenceFromId:(Ljava/lang/String;)J
      62: lstore        5
      64: lload         5
      66: lconst_0
      67: lcmp
      68: iflt          85
      71: aload         4
      73: lload         5
      75: iconst_1
      76: invokevirtual #21                 // Method org/apache/activemq/util/BitArrayBin.setBit:(JZ)Z
      79: istore_2
      80: aload_0
      81: iconst_1
      82: putfield      #3                  // Field modified:Z
      85: iload_2
      86: ireturn

  public boolean isDuplicate(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokevirtual #23                 // Method isDuplicate:(Lorg/apache/activemq/command/MessageId;)Z
      12: ireturn

  public boolean isDuplicate(org.apache.activemq.command.MessageId);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnull        79
       6: aload_1
       7: invokevirtual #24                 // Method org/apache/activemq/command/MessageId.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      10: astore_3
      11: aload_3
      12: ifnull        79
      15: aload_0
      16: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      19: aload_3
      20: invokevirtual #25                 // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      23: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #17                 // class org/apache/activemq/util/BitArrayBin
      29: astore        4
      31: aload         4
      33: ifnonnull     68
      36: new           #17                 // class org/apache/activemq/util/BitArrayBin
      39: dup
      40: aload_0
      41: getfield      #4                  // Field auditDepth:I
      44: invokespecial #18                 // Method org/apache/activemq/util/BitArrayBin."<init>":(I)V
      47: astore        4
      49: aload_0
      50: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      53: aload_3
      54: invokevirtual #25                 // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      57: aload         4
      59: invokevirtual #19                 // Method org/apache/activemq/util/LRUCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: iconst_1
      65: putfield      #3                  // Field modified:Z
      68: aload         4
      70: aload_1
      71: invokevirtual #26                 // Method org/apache/activemq/command/MessageId.getProducerSequenceId:()J
      74: iconst_1
      75: invokevirtual #21                 // Method org/apache/activemq/util/BitArrayBin.setBit:(JZ)Z
      78: istore_2
      79: iload_2
      80: ireturn

  public void rollback(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokevirtual #27                 // Method rollback:(Lorg/apache/activemq/command/MessageId;)V
      12: return

  public void rollback(org.apache.activemq.command.MessageId);
    Code:
       0: aload_1
       1: ifnull        47
       4: aload_1
       5: invokevirtual #24                 // Method org/apache/activemq/command/MessageId.getProducerId:()Lorg/apache/activemq/command/ProducerId;
       8: astore_2
       9: aload_2
      10: ifnull        47
      13: aload_0
      14: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      17: aload_2
      18: invokevirtual #25                 // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      21: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #17                 // class org/apache/activemq/util/BitArrayBin
      27: astore_3
      28: aload_3
      29: ifnull        47
      32: aload_3
      33: aload_1
      34: invokevirtual #26                 // Method org/apache/activemq/command/MessageId.getProducerSequenceId:()J
      37: iconst_0
      38: invokevirtual #21                 // Method org/apache/activemq/util/BitArrayBin.setBit:(JZ)Z
      41: pop
      42: aload_0
      43: iconst_1
      44: putfield      #3                  // Field modified:Z
      47: return

  public void rollback(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method org/apache/activemq/util/IdGenerator.getSeedFromId:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        44
       9: aload_0
      10: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      13: aload_2
      14: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #17                 // class org/apache/activemq/util/BitArrayBin
      20: astore_3
      21: aload_3
      22: ifnull        44
      25: aload_1
      26: invokestatic  #20                 // Method org/apache/activemq/util/IdGenerator.getSequenceFromId:(Ljava/lang/String;)J
      29: lstore        4
      31: aload_3
      32: lload         4
      34: iconst_0
      35: invokevirtual #21                 // Method org/apache/activemq/util/BitArrayBin.setBit:(JZ)Z
      38: pop
      39: aload_0
      40: iconst_1
      41: putfield      #3                  // Field modified:Z
      44: return

  public boolean isInOrder(javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod javax/jms/Message.getJMSMessageID:()Ljava/lang/String;
       7: invokevirtual #28                 // Method isInOrder:(Ljava/lang/String;)Z
      10: ireturn

  public boolean isInOrder(java.lang.String);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_1
       3: ifnull        52
       6: aload_1
       7: invokestatic  #15                 // Method org/apache/activemq/util/IdGenerator.getSeedFromId:(Ljava/lang/String;)Ljava/lang/String;
      10: astore_3
      11: aload_3
      12: ifnull        52
      15: aload_0
      16: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      19: aload_3
      20: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #17                 // class org/apache/activemq/util/BitArrayBin
      26: astore        4
      28: aload         4
      30: ifnull        52
      33: aload_1
      34: invokestatic  #20                 // Method org/apache/activemq/util/IdGenerator.getSequenceFromId:(Ljava/lang/String;)J
      37: lstore        5
      39: aload         4
      41: lload         5
      43: invokevirtual #29                 // Method org/apache/activemq/util/BitArrayBin.isInOrder:(J)Z
      46: istore_2
      47: aload_0
      48: iconst_1
      49: putfield      #3                  // Field modified:Z
      52: iload_2
      53: ireturn

  public boolean isInOrder(org.apache.activemq.broker.region.MessageReference);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/broker/region/MessageReference.getMessageId:()Lorg/apache/activemq/command/MessageId;
       7: invokevirtual #30                 // Method isInOrder:(Lorg/apache/activemq/command/MessageId;)Z
      10: ireturn

  public boolean isInOrder(org.apache.activemq.command.MessageId);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnull        78
       6: aload_1
       7: invokevirtual #24                 // Method org/apache/activemq/command/MessageId.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      10: astore_3
      11: aload_3
      12: ifnull        78
      15: aload_0
      16: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      19: aload_3
      20: invokevirtual #25                 // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      23: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #17                 // class org/apache/activemq/util/BitArrayBin
      29: astore        4
      31: aload         4
      33: ifnonnull     68
      36: new           #17                 // class org/apache/activemq/util/BitArrayBin
      39: dup
      40: aload_0
      41: getfield      #4                  // Field auditDepth:I
      44: invokespecial #18                 // Method org/apache/activemq/util/BitArrayBin."<init>":(I)V
      47: astore        4
      49: aload_0
      50: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
      53: aload_3
      54: invokevirtual #25                 // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      57: aload         4
      59: invokevirtual #19                 // Method org/apache/activemq/util/LRUCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: iconst_1
      65: putfield      #3                  // Field modified:Z
      68: aload         4
      70: aload_1
      71: invokevirtual #26                 // Method org/apache/activemq/command/MessageId.getProducerSequenceId:()J
      74: invokevirtual #29                 // Method org/apache/activemq/util/BitArrayBin.isInOrder:(J)Z
      77: istore_2
      78: iload_2
      79: ireturn

  public long getLastSeqId(org.apache.activemq.command.ProducerId);
    Code:
       0: ldc2_w        #31                 // long -1l
       3: lstore_2
       4: aload_0
       5: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
       8: aload_1
       9: invokevirtual #25                 // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      12: invokevirtual #16                 // Method org/apache/activemq/util/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #17                 // class org/apache/activemq/util/BitArrayBin
      18: astore        4
      20: aload         4
      22: ifnull        31
      25: aload         4
      27: invokevirtual #33                 // Method org/apache/activemq/util/BitArrayBin.getLastSetIndex:()J
      30: lstore_2
      31: lload_2
      32: lreturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #9                  // Field map:Lorg/apache/activemq/util/LRUCache;
       4: invokevirtual #11                 // Method org/apache/activemq/util/LRUCache.clear:()V
       7: return

  public boolean isModified();
    Code:
       0: aload_0
       1: getfield      #3                  // Field modified:Z
       4: ireturn

  public void setModified(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field modified:Z
       5: return

  public boolean modified();
    Code:
       0: aload_0
       1: getfield      #3                  // Field modified:Z
       4: ifeq          14
       7: aload_0
       8: iconst_0
       9: putfield      #3                  // Field modified:Z
      12: iconst_1
      13: ireturn
      14: iconst_0
      15: ireturn
}
