Compiled from "ArithmeticExpression.java"
public abstract class org.apache.activemq.filter.ArithmeticExpression extends org.apache.activemq.filter.BinaryExpression {
  protected static final int INTEGER;

  protected static final int LONG;

  protected static final int DOUBLE;

  public org.apache.activemq.filter.ArithmeticExpression(org.apache.activemq.filter.Expression, org.apache.activemq.filter.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/activemq/filter/BinaryExpression."<init>":(Lorg/apache/activemq/filter/Expression;Lorg/apache/activemq/filter/Expression;)V
       6: return

  public static org.apache.activemq.filter.Expression createPlus(org.apache.activemq.filter.Expression, org.apache.activemq.filter.Expression);
    Code:
       0: new           #2                  // class org/apache/activemq/filter/ArithmeticExpression$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #3                  // Method org/apache/activemq/filter/ArithmeticExpression$1."<init>":(Lorg/apache/activemq/filter/Expression;Lorg/apache/activemq/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.filter.Expression createMinus(org.apache.activemq.filter.Expression, org.apache.activemq.filter.Expression);
    Code:
       0: new           #4                  // class org/apache/activemq/filter/ArithmeticExpression$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #5                  // Method org/apache/activemq/filter/ArithmeticExpression$2."<init>":(Lorg/apache/activemq/filter/Expression;Lorg/apache/activemq/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.filter.Expression createMultiply(org.apache.activemq.filter.Expression, org.apache.activemq.filter.Expression);
    Code:
       0: new           #6                  // class org/apache/activemq/filter/ArithmeticExpression$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method org/apache/activemq/filter/ArithmeticExpression$3."<init>":(Lorg/apache/activemq/filter/Expression;Lorg/apache/activemq/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.filter.Expression createDivide(org.apache.activemq.filter.Expression, org.apache.activemq.filter.Expression);
    Code:
       0: new           #8                  // class org/apache/activemq/filter/ArithmeticExpression$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method org/apache/activemq/filter/ArithmeticExpression$4."<init>":(Lorg/apache/activemq/filter/Expression;Lorg/apache/activemq/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.filter.Expression createMod(org.apache.activemq.filter.Expression, org.apache.activemq.filter.Expression);
    Code:
       0: new           #10                 // class org/apache/activemq/filter/ArithmeticExpression$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method org/apache/activemq/filter/ArithmeticExpression$5."<init>":(Lorg/apache/activemq/filter/Expression;Lorg/apache/activemq/filter/Expression;)V
       9: areturn

  protected java.lang.Number plus(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method numberType:(Ljava/lang/Number;Ljava/lang/Number;)I
       6: lookupswitch  { // 2
                     1: 32
                     2: 49
               default: 66
          }
      32: new           #13                 // class java/lang/Integer
      35: dup
      36: aload_1
      37: invokevirtual #14                 // Method java/lang/Number.intValue:()I
      40: aload_2
      41: invokevirtual #14                 // Method java/lang/Number.intValue:()I
      44: iadd
      45: invokespecial #15                 // Method java/lang/Integer."<init>":(I)V
      48: areturn
      49: new           #16                 // class java/lang/Long
      52: dup
      53: aload_1
      54: invokevirtual #17                 // Method java/lang/Number.longValue:()J
      57: aload_2
      58: invokevirtual #17                 // Method java/lang/Number.longValue:()J
      61: ladd
      62: invokespecial #18                 // Method java/lang/Long."<init>":(J)V
      65: areturn
      66: new           #19                 // class java/lang/Double
      69: dup
      70: aload_1
      71: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      74: aload_2
      75: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      78: dadd
      79: invokespecial #21                 // Method java/lang/Double."<init>":(D)V
      82: areturn

  protected java.lang.Number minus(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method numberType:(Ljava/lang/Number;Ljava/lang/Number;)I
       6: lookupswitch  { // 2
                     1: 32
                     2: 49
               default: 66
          }
      32: new           #13                 // class java/lang/Integer
      35: dup
      36: aload_1
      37: invokevirtual #14                 // Method java/lang/Number.intValue:()I
      40: aload_2
      41: invokevirtual #14                 // Method java/lang/Number.intValue:()I
      44: isub
      45: invokespecial #15                 // Method java/lang/Integer."<init>":(I)V
      48: areturn
      49: new           #16                 // class java/lang/Long
      52: dup
      53: aload_1
      54: invokevirtual #17                 // Method java/lang/Number.longValue:()J
      57: aload_2
      58: invokevirtual #17                 // Method java/lang/Number.longValue:()J
      61: lsub
      62: invokespecial #18                 // Method java/lang/Long."<init>":(J)V
      65: areturn
      66: new           #19                 // class java/lang/Double
      69: dup
      70: aload_1
      71: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      74: aload_2
      75: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      78: dsub
      79: invokespecial #21                 // Method java/lang/Double."<init>":(D)V
      82: areturn

  protected java.lang.Number multiply(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method numberType:(Ljava/lang/Number;Ljava/lang/Number;)I
       6: lookupswitch  { // 2
                     1: 32
                     2: 49
               default: 66
          }
      32: new           #13                 // class java/lang/Integer
      35: dup
      36: aload_1
      37: invokevirtual #14                 // Method java/lang/Number.intValue:()I
      40: aload_2
      41: invokevirtual #14                 // Method java/lang/Number.intValue:()I
      44: imul
      45: invokespecial #15                 // Method java/lang/Integer."<init>":(I)V
      48: areturn
      49: new           #16                 // class java/lang/Long
      52: dup
      53: aload_1
      54: invokevirtual #17                 // Method java/lang/Number.longValue:()J
      57: aload_2
      58: invokevirtual #17                 // Method java/lang/Number.longValue:()J
      61: lmul
      62: invokespecial #18                 // Method java/lang/Long."<init>":(J)V
      65: areturn
      66: new           #19                 // class java/lang/Double
      69: dup
      70: aload_1
      71: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      74: aload_2
      75: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      78: dmul
      79: invokespecial #21                 // Method java/lang/Double."<init>":(D)V
      82: areturn

  protected java.lang.Number divide(java.lang.Number, java.lang.Number);
    Code:
       0: new           #19                 // class java/lang/Double
       3: dup
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
       8: aload_2
       9: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      12: ddiv
      13: invokespecial #21                 // Method java/lang/Double."<init>":(D)V
      16: areturn

  protected java.lang.Number mod(java.lang.Number, java.lang.Number);
    Code:
       0: new           #19                 // class java/lang/Double
       3: dup
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
       8: aload_2
       9: invokevirtual #20                 // Method java/lang/Number.doubleValue:()D
      12: drem
      13: invokespecial #21                 // Method java/lang/Double."<init>":(D)V
      16: areturn

  private int numberType(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method isDouble:(Ljava/lang/Number;)Z
       5: ifne          16
       8: aload_0
       9: aload_2
      10: invokespecial #22                 // Method isDouble:(Ljava/lang/Number;)Z
      13: ifeq          18
      16: iconst_3
      17: ireturn
      18: aload_1
      19: instanceof    #16                 // class java/lang/Long
      22: ifne          32
      25: aload_2
      26: instanceof    #16                 // class java/lang/Long
      29: ifeq          34
      32: iconst_2
      33: ireturn
      34: iconst_1
      35: ireturn

  private boolean isDouble(java.lang.Number);
    Code:
       0: aload_1
       1: instanceof    #23                 // class java/lang/Float
       4: ifne          14
       7: aload_1
       8: instanceof    #19                 // class java/lang/Double
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected java.lang.Number asNumber(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #24                 // class java/lang/Number
       4: ifeq          12
       7: aload_1
       8: checkcast     #24                 // class java/lang/Number
      11: areturn
      12: new           #25                 // class java/lang/RuntimeException
      15: dup
      16: new           #26                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #28                 // String Cannot convert value:
      25: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #31                 // String  into a number
      34: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow

  public java.lang.Object evaluate(org.apache.activemq.filter.MessageEvaluationContext) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field left:Lorg/apache/activemq/filter/Expression;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod org/apache/activemq/filter/Expression.evaluate:(Lorg/apache/activemq/filter/MessageEvaluationContext;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: getfield      #36                 // Field right:Lorg/apache/activemq/filter/Expression;
      21: aload_1
      22: invokeinterface #35,  2           // InterfaceMethod org/apache/activemq/filter/Expression.evaluate:(Lorg/apache/activemq/filter/MessageEvaluationContext;)Ljava/lang/Object;
      27: astore_3
      28: aload_3
      29: ifnonnull     34
      32: aconst_null
      33: areturn
      34: aload_0
      35: aload_2
      36: aload_3
      37: invokevirtual #37                 // Method evaluate:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: areturn

  protected abstract java.lang.Object evaluate(java.lang.Object, java.lang.Object);
}
