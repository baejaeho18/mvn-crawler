Compiled from "DestinationMapNode.java"
public class org.apache.activemq.filter.DestinationMapNode implements org.apache.activemq.filter.DestinationNode {
  protected static final java.lang.String ANY_CHILD;

  protected static final java.lang.String ANY_DESCENDENT;

  private org.apache.activemq.filter.DestinationMapNode parent;

  private java.util.List<java.lang.Object> values;

  private java.util.Map<java.lang.String, org.apache.activemq.filter.DestinationNode> childNodes;

  private java.lang.String path;

  private int pathLength;

  public org.apache.activemq.filter.DestinationMapNode(org.apache.activemq.filter.DestinationMapNode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field values:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field childNodes:Ljava/util/Map;
      26: aload_0
      27: ldc           #8                  // String Root
      29: putfield      #9                  // Field path:Ljava/lang/String;
      32: aload_0
      33: aload_1
      34: putfield      #10                 // Field parent:Lorg/apache/activemq/filter/DestinationMapNode;
      37: aload_1
      38: ifnonnull     49
      41: aload_0
      42: iconst_0
      43: putfield      #11                 // Field pathLength:I
      46: goto          59
      49: aload_0
      50: aload_1
      51: getfield      #11                 // Field pathLength:I
      54: iconst_1
      55: iadd
      56: putfield      #11                 // Field pathLength:I
      59: return

  public org.apache.activemq.filter.DestinationNode getChild(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #13                 // class org/apache/activemq/filter/DestinationNode
      13: areturn

  public java.util.Collection<org.apache.activemq.filter.DestinationNode> getChildren();
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public int getChildCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public org.apache.activemq.filter.DestinationMapNode getChildOrCreate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/apache/activemq/filter/DestinationMapNode
      13: astore_2
      14: aload_2
      15: ifnonnull     40
      18: aload_0
      19: invokevirtual #17                 // Method createChildNode:()Lorg/apache/activemq/filter/DestinationMapNode;
      22: astore_2
      23: aload_2
      24: aload_1
      25: putfield      #9                  // Field path:Ljava/lang/String;
      28: aload_0
      29: getfield      #7                  // Field childNodes:Ljava/util/Map;
      32: aload_1
      33: aload_2
      34: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: areturn

  public java.util.List getValues();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/List;
       4: areturn

  public java.util.List removeValues();
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #4                  // Field values:Ljava/util/List;
       8: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_0
      13: getfield      #4                  // Field values:Ljava/util/List;
      16: invokeinterface #20,  1           // InterfaceMethod java/util/List.clear:()V
      21: aload_0
      22: invokevirtual #21                 // Method pruneIfEmpty:()V
      25: aload_1
      26: areturn

  public java.util.Set removeDesendentValues();
    Code:
       0: new           #22                 // class java/util/HashSet
       3: dup
       4: invokespecial #23                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #24                 // Method removeDesendentValues:(Ljava/util/Set;)V
      13: aload_1
      14: areturn

  protected void removeDesendentValues(java.util.Set);
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          79
      24: aload_2
      25: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #29                 // class java/util/Map$Entry
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      41: checkcast     #13                 // class org/apache/activemq/filter/DestinationNode
      44: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.removeValues:()Ljava/util/Collection;
      49: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: aload_1
      56: aload_3
      57: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      62: checkcast     #13                 // class org/apache/activemq/filter/DestinationNode
      65: invokeinterface #33,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.removeDesendentValues:()Ljava/util/Collection;
      70: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      75: pop
      76: goto          15
      79: return

  public java.util.Set getDesendentValues();
    Code:
       0: new           #22                 // class java/util/HashSet
       3: dup
       4: invokespecial #23                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #34                 // Method appendDescendantValues:(Ljava/util/Set;)V
      13: aload_1
      14: areturn

  public void add(java.lang.String[], int, java.lang.Object);
    Code:
       0: iload_2
       1: aload_1
       2: arraylength
       3: if_icmplt     20
       6: aload_0
       7: getfield      #4                  // Field values:Ljava/util/List;
      10: aload_3
      11: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: goto          35
      20: aload_0
      21: aload_1
      22: iload_2
      23: aaload
      24: invokevirtual #36                 // Method getChildOrCreate:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationMapNode;
      27: aload_1
      28: iload_2
      29: iconst_1
      30: iadd
      31: aload_3
      32: invokevirtual #37                 // Method add:([Ljava/lang/String;ILjava/lang/Object;)V
      35: return

  public void set(java.lang.String[], int, java.lang.Object);
    Code:
       0: iload_2
       1: aload_1
       2: arraylength
       3: if_icmplt     29
       6: aload_0
       7: getfield      #4                  // Field values:Ljava/util/List;
      10: invokeinterface #20,  1           // InterfaceMethod java/util/List.clear:()V
      15: aload_0
      16: getfield      #4                  // Field values:Ljava/util/List;
      19: aload_3
      20: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: goto          44
      29: aload_0
      30: aload_1
      31: iload_2
      32: aaload
      33: invokevirtual #36                 // Method getChildOrCreate:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationMapNode;
      36: aload_1
      37: iload_2
      38: iconst_1
      39: iadd
      40: aload_3
      41: invokevirtual #38                 // Method set:([Ljava/lang/String;ILjava/lang/Object;)V
      44: return

  public void remove(java.lang.String[], int, java.lang.Object);
    Code:
       0: iload_2
       1: aload_1
       2: arraylength
       3: if_icmplt     24
       6: aload_0
       7: getfield      #4                  // Field values:Ljava/util/List;
      10: aload_3
      11: invokeinterface #39,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: invokevirtual #21                 // Method pruneIfEmpty:()V
      21: goto          40
      24: aload_0
      25: aload_1
      26: iload_2
      27: aaload
      28: invokevirtual #36                 // Method getChildOrCreate:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationMapNode;
      31: aload_1
      32: iinc          2, 1
      35: iload_2
      36: aload_3
      37: invokevirtual #40                 // Method remove:([Ljava/lang/String;ILjava/lang/Object;)V
      40: return

  public void removeAll(java.util.Set<org.apache.activemq.filter.DestinationNode>, java.lang.String[], int);
    Code:
       0: aload_0
       1: astore        4
       3: aload_2
       4: arraylength
       5: istore        5
       7: iload_3
       8: istore        6
      10: iload         6
      12: iload         5
      14: if_icmpge     107
      17: aload         4
      19: ifnull        107
      22: aload_2
      23: iload         6
      25: aaload
      26: astore        7
      28: aload         7
      30: ldc           #41                 // String >
      32: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          55
      38: aload_1
      39: aload         4
      41: invokeinterface #33,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.removeDesendentValues:()Ljava/util/Collection;
      46: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      51: pop
      52: goto          107
      55: aload         4
      57: aload_1
      58: aload_2
      59: iload         6
      61: invokeinterface #43,  4           // InterfaceMethod org/apache/activemq/filter/DestinationNode.appendMatchingWildcards:(Ljava/util/Set;[Ljava/lang/String;I)V
      66: aload         7
      68: ldc           #44                 // String *
      70: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          90
      76: new           #45                 // class org/apache/activemq/filter/AnyChildDestinationNode
      79: dup
      80: aload         4
      82: invokespecial #46                 // Method org/apache/activemq/filter/AnyChildDestinationNode."<init>":(Lorg/apache/activemq/filter/DestinationNode;)V
      85: astore        4
      87: goto          101
      90: aload         4
      92: aload         7
      94: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getChild:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationNode;
      99: astore        4
     101: iinc          6, 1
     104: goto          10
     107: aload         4
     109: ifnull        126
     112: aload_1
     113: aload         4
     115: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.removeValues:()Ljava/util/Collection;
     120: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     125: pop
     126: return

  public void appendDescendantValues(java.util.Set);
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_2
      25: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #13                 // class org/apache/activemq/filter/DestinationNode
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getValues:()Ljava/util/Collection;
      41: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      46: pop
      47: aload_3
      48: aload_1
      49: invokeinterface #50,  2           // InterfaceMethod org/apache/activemq/filter/DestinationNode.appendDescendantValues:(Ljava/util/Set;)V
      54: goto          15
      57: return

  protected org.apache.activemq.filter.DestinationMapNode createChildNode();
    Code:
       0: new           #16                 // class org/apache/activemq/filter/DestinationMapNode
       3: dup
       4: aload_0
       5: invokespecial #51                 // Method "<init>":(Lorg/apache/activemq/filter/DestinationMapNode;)V
       8: areturn

  public void appendMatchingWildcards(java.util.Set, java.lang.String[], int);
    Code:
       0: iload_3
       1: iconst_1
       2: isub
       3: aload_0
       4: getfield      #11                 // Field pathLength:I
       7: if_icmple     11
      10: return
      11: aload_0
      12: ldc           #44                 // String *
      14: invokevirtual #52                 // Method getChild:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationNode;
      17: astore        4
      19: aload         4
      21: ifnull        36
      24: aload         4
      26: aload_1
      27: aload_2
      28: iload_3
      29: iconst_1
      30: iadd
      31: invokeinterface #53,  4           // InterfaceMethod org/apache/activemq/filter/DestinationNode.appendMatchingValues:(Ljava/util/Set;[Ljava/lang/String;I)V
      36: aload_0
      37: ldc           #41                 // String >
      39: invokevirtual #52                 // Method getChild:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationNode;
      42: astore        4
      44: aload         4
      46: ifnull        77
      49: aload_1
      50: aload         4
      52: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getValues:()Ljava/util/Collection;
      57: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      62: pop
      63: aload_1
      64: aload         4
      66: invokeinterface #54,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getDesendentValues:()Ljava/util/Collection;
      71: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      76: pop
      77: return

  public void appendMatchingValues(java.util.Set<org.apache.activemq.filter.DestinationNode>, java.lang.String[], int);
    Code:
       0: aload_0
       1: astore        4
       3: iconst_1
       4: istore        5
       6: aload_2
       7: arraylength
       8: istore        6
      10: iload_3
      11: istore        7
      13: iload         7
      15: iload         6
      17: if_icmpge     113
      20: aload         4
      22: ifnull        113
      25: aload_2
      26: iload         7
      28: aaload
      29: astore        8
      31: aload         8
      33: ldc           #41                 // String >
      35: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          61
      41: aload_1
      42: aload         4
      44: invokeinterface #54,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getDesendentValues:()Ljava/util/Collection;
      49: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: iconst_0
      56: istore        5
      58: goto          113
      61: aload         4
      63: aload_1
      64: aload_2
      65: iload         7
      67: invokeinterface #43,  4           // InterfaceMethod org/apache/activemq/filter/DestinationNode.appendMatchingWildcards:(Ljava/util/Set;[Ljava/lang/String;I)V
      72: aload         8
      74: ldc           #44                 // String *
      76: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          96
      82: new           #45                 // class org/apache/activemq/filter/AnyChildDestinationNode
      85: dup
      86: aload         4
      88: invokespecial #46                 // Method org/apache/activemq/filter/AnyChildDestinationNode."<init>":(Lorg/apache/activemq/filter/DestinationNode;)V
      91: astore        4
      93: goto          107
      96: aload         4
      98: aload         8
     100: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getChild:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationNode;
     105: astore        4
     107: iinc          7, 1
     110: goto          13
     113: aload         4
     115: ifnull        167
     118: aload_1
     119: aload         4
     121: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getValues:()Ljava/util/Collection;
     126: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     131: pop
     132: iload         5
     134: ifeq          167
     137: aload         4
     139: ldc           #41                 // String >
     141: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getChild:(Ljava/lang/String;)Lorg/apache/activemq/filter/DestinationNode;
     146: astore        7
     148: aload         7
     150: ifnull        167
     153: aload_1
     154: aload         7
     156: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/filter/DestinationNode.getValues:()Ljava/util/Collection;
     161: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     166: pop
     167: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #9                  // Field path:Ljava/lang/String;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: invokeinterface #55,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  protected void pruneIfEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parent:Lorg/apache/activemq/filter/DestinationMapNode;
       4: ifnull        39
       7: aload_0
       8: getfield      #7                  // Field childNodes:Ljava/util/Map;
      11: invokeinterface #55,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          39
      19: aload_0
      20: getfield      #4                  // Field values:Ljava/util/List;
      23: invokeinterface #56,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      28: ifeq          39
      31: aload_0
      32: getfield      #10                 // Field parent:Lorg/apache/activemq/filter/DestinationMapNode;
      35: aload_0
      36: invokevirtual #57                 // Method removeChild:(Lorg/apache/activemq/filter/DestinationMapNode;)V
      39: return

  protected void removeChild(org.apache.activemq.filter.DestinationMapNode);
    Code:
       0: aload_0
       1: getfield      #7                  // Field childNodes:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #58                 // Method getPath:()Ljava/lang/String;
       8: invokeinterface #59,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokevirtual #21                 // Method pruneIfEmpty:()V
      18: return

  public java.util.Collection removeValues();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method removeValues:()Ljava/util/List;
       4: areturn

  public java.util.Collection removeDesendentValues();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method removeDesendentValues:()Ljava/util/Set;
       4: areturn

  public java.util.Collection getValues();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getValues:()Ljava/util/List;
       4: areturn

  public java.util.Collection getDesendentValues();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getDesendentValues:()Ljava/util/Set;
       4: areturn
}
