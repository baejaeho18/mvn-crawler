Compiled from "ConnectionPool.java"
public class org.apache.activemq.jms.pool.ConnectionPool {
  protected javax.jms.Connection connection;

  private int referenceCount;

  private long lastUsed;

  private final long firstUsed;

  private boolean hasExpired;

  private int idleTimeout;

  private long expiryTimeout;

  private boolean useAnonymousProducers;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private final org.apache.commons.pool.impl.GenericKeyedObjectPool<org.apache.activemq.jms.pool.SessionKey, org.apache.activemq.jms.pool.SessionHolder> sessionPool;

  private final java.util.List<org.apache.activemq.jms.pool.PooledSession> loanedSessions;

  public org.apache.activemq.jms.pool.ConnectionPool(javax.jms.Connection);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
       8: putfield      #4                  // Field lastUsed:J
      11: aload_0
      12: aload_0
      13: getfield      #4                  // Field lastUsed:J
      16: putfield      #5                  // Field firstUsed:J
      19: aload_0
      20: sipush        30000
      23: putfield      #6                  // Field idleTimeout:I
      26: aload_0
      27: lconst_0
      28: putfield      #7                  // Field expiryTimeout:J
      31: aload_0
      32: iconst_1
      33: putfield      #8                  // Field useAnonymousProducers:Z
      36: aload_0
      37: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      40: dup
      41: iconst_0
      42: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      45: putfield      #11                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      48: aload_0
      49: new           #12                 // class java/util/concurrent/CopyOnWriteArrayList
      52: dup
      53: invokespecial #13                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      56: putfield      #1                  // Field loanedSessions:Ljava/util/List;
      59: aload_0
      60: aload_0
      61: aload_1
      62: invokevirtual #14                 // Method wrap:(Ljavax/jms/Connection;)Ljavax/jms/Connection;
      65: putfield      #15                 // Field connection:Ljavax/jms/Connection;
      68: aload_0
      69: new           #16                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool
      72: dup
      73: new           #17                 // class org/apache/activemq/jms/pool/ConnectionPool$1
      76: dup
      77: aload_0
      78: invokespecial #18                 // Method org/apache/activemq/jms/pool/ConnectionPool$1."<init>":(Lorg/apache/activemq/jms/pool/ConnectionPool;)V
      81: invokespecial #19                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool."<init>":(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;)V
      84: putfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      87: return

  public void setHasExpired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field hasExpired:Z
       5: return

  protected javax.jms.Session makeSession(org.apache.activemq.jms.pool.SessionKey) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field connection:Ljavax/jms/Connection;
       4: aload_1
       5: invokevirtual #22                 // Method org/apache/activemq/jms/pool/SessionKey.isTransacted:()Z
       8: aload_1
       9: invokevirtual #23                 // Method org/apache/activemq/jms/pool/SessionKey.getAckMode:()I
      12: invokeinterface #24,  3           // InterfaceMethod javax/jms/Connection.createSession:(ZI)Ljavax/jms/Session;
      17: areturn

  protected javax.jms.Connection wrap(javax.jms.Connection);
    Code:
       0: aload_1
       1: areturn

  protected void unWrap(javax.jms.Connection);
    Code:
       0: return

  public void start() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          35
      12: aload_0
      13: getfield      #15                 // Field connection:Ljavax/jms/Connection;
      16: invokeinterface #26,  1           // InterfaceMethod javax/jms/Connection.start:()V
      21: goto          35
      24: astore_1
      25: aload_0
      26: getfield      #11                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: iconst_0
      30: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      33: aload_1
      34: athrow
      35: return
    Exception table:
       from    to  target type
          12    21    24   Class javax/jms/JMSException

  public synchronized javax.jms.Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #15                 // Field connection:Ljavax/jms/Connection;
       4: areturn

  public javax.jms.Session createSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: new           #29                 // class org/apache/activemq/jms/pool/SessionKey
       3: dup
       4: iload_1
       5: iload_2
       6: invokespecial #30                 // Method org/apache/activemq/jms/pool/SessionKey."<init>":(ZI)V
       9: astore_3
      10: new           #31                 // class org/apache/activemq/jms/pool/PooledSession
      13: dup
      14: aload_3
      15: aload_0
      16: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      19: aload_3
      20: invokevirtual #32                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.borrowObject:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #33                 // class org/apache/activemq/jms/pool/SessionHolder
      26: aload_0
      27: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      30: aload_3
      31: invokevirtual #22                 // Method org/apache/activemq/jms/pool/SessionKey.isTransacted:()Z
      34: aload_0
      35: getfield      #8                  // Field useAnonymousProducers:Z
      38: invokespecial #34                 // Method org/apache/activemq/jms/pool/PooledSession."<init>":(Lorg/apache/activemq/jms/pool/SessionKey;Lorg/apache/activemq/jms/pool/SessionHolder;Lorg/apache/commons/pool/KeyedObjectPool;ZZ)V
      41: astore        4
      43: aload         4
      45: new           #35                 // class org/apache/activemq/jms/pool/ConnectionPool$2
      48: dup
      49: aload_0
      50: invokespecial #36                 // Method org/apache/activemq/jms/pool/ConnectionPool$2."<init>":(Lorg/apache/activemq/jms/pool/ConnectionPool;)V
      53: invokevirtual #37                 // Method org/apache/activemq/jms/pool/PooledSession.addSessionEventListener:(Lorg/apache/activemq/jms/pool/PooledSessionEventListener;)V
      56: aload_0
      57: getfield      #1                  // Field loanedSessions:Ljava/util/List;
      60: aload         4
      62: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: goto          98
      71: astore        5
      73: new           #40                 // class javax/jms/IllegalStateException
      76: dup
      77: aload         5
      79: invokevirtual #41                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      82: invokespecial #42                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      85: astore        6
      87: aload         6
      89: aload         5
      91: invokevirtual #43                 // Method javax/jms/IllegalStateException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      94: pop
      95: aload         6
      97: athrow
      98: aload         4
     100: areturn
    Exception table:
       from    to  target type
          10    68    71   Class java/lang/Exception

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #15                 // Field connection:Ljavax/jms/Connection;
       4: ifnull        131
       7: aload_0
       8: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      11: invokevirtual #44                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.close:()V
      14: aload_0
      15: getfield      #15                 // Field connection:Ljavax/jms/Connection;
      18: invokeinterface #45,  1           // InterfaceMethod javax/jms/Connection.close:()V
      23: aload_0
      24: aconst_null
      25: putfield      #15                 // Field connection:Ljavax/jms/Connection;
      28: goto          48
      31: astore_1
      32: aload_0
      33: aconst_null
      34: putfield      #15                 // Field connection:Ljavax/jms/Connection;
      37: goto          48
      40: astore_2
      41: aload_0
      42: aconst_null
      43: putfield      #15                 // Field connection:Ljavax/jms/Connection;
      46: aload_2
      47: athrow
      48: goto          131
      51: astore_1
      52: aload_0
      53: getfield      #15                 // Field connection:Ljavax/jms/Connection;
      56: invokeinterface #45,  1           // InterfaceMethod javax/jms/Connection.close:()V
      61: aload_0
      62: aconst_null
      63: putfield      #15                 // Field connection:Ljavax/jms/Connection;
      66: goto          86
      69: astore_1
      70: aload_0
      71: aconst_null
      72: putfield      #15                 // Field connection:Ljavax/jms/Connection;
      75: goto          86
      78: astore_3
      79: aload_0
      80: aconst_null
      81: putfield      #15                 // Field connection:Ljavax/jms/Connection;
      84: aload_3
      85: athrow
      86: goto          131
      89: astore        4
      91: aload_0
      92: getfield      #15                 // Field connection:Ljavax/jms/Connection;
      95: invokeinterface #45,  1           // InterfaceMethod javax/jms/Connection.close:()V
     100: aload_0
     101: aconst_null
     102: putfield      #15                 // Field connection:Ljavax/jms/Connection;
     105: goto          128
     108: astore        5
     110: aload_0
     111: aconst_null
     112: putfield      #15                 // Field connection:Ljavax/jms/Connection;
     115: goto          128
     118: astore        6
     120: aload_0
     121: aconst_null
     122: putfield      #15                 // Field connection:Ljavax/jms/Connection;
     125: aload         6
     127: athrow
     128: aload         4
     130: athrow
     131: return
    Exception table:
       from    to  target type
          14    23    31   Class java/lang/Exception
          14    23    40   any
          31    32    40   any
          40    41    40   any
           7    14    51   Class java/lang/Exception
          52    61    69   Class java/lang/Exception
          52    61    78   any
          69    70    78   any
          78    79    78   any
           7    14    89   any
          51    52    89   any
          91   100   108   Class java/lang/Exception
          91   100   118   any
         108   110   118   any
         118   120   118   any
          89    91    89   any

  public synchronized void incrementReferenceCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #46                 // Field referenceCount:I
       5: iconst_1
       6: iadd
       7: putfield      #46                 // Field referenceCount:I
      10: aload_0
      11: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
      14: putfield      #4                  // Field lastUsed:J
      17: return

  public synchronized void decrementReferenceCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #46                 // Field referenceCount:I
       5: iconst_1
       6: isub
       7: putfield      #46                 // Field referenceCount:I
      10: aload_0
      11: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
      14: putfield      #4                  // Field lastUsed:J
      17: aload_0
      18: getfield      #46                 // Field referenceCount:I
      21: ifne          86
      24: aload_0
      25: getfield      #1                  // Field loanedSessions:Ljava/util/List;
      28: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore_1
      34: aload_1
      35: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          64
      43: aload_1
      44: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #31                 // class org/apache/activemq/jms/pool/PooledSession
      52: astore_2
      53: aload_2
      54: invokevirtual #50                 // Method org/apache/activemq/jms/pool/PooledSession.close:()V
      57: goto          61
      60: astore_3
      61: goto          34
      64: aload_0
      65: getfield      #1                  // Field loanedSessions:Ljava/util/List;
      68: invokeinterface #51,  1           // InterfaceMethod java/util/List.clear:()V
      73: aload_0
      74: aload_0
      75: invokevirtual #52                 // Method getConnection:()Ljavax/jms/Connection;
      78: invokevirtual #53                 // Method unWrap:(Ljavax/jms/Connection;)V
      81: aload_0
      82: invokevirtual #54                 // Method expiredCheck:()Z
      85: pop
      86: return
    Exception table:
       from    to  target type
          53    57    60   Class java/lang/Exception

  public synchronized boolean expiredCheck();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #15                 // Field connection:Ljavax/jms/Connection;
       6: ifnonnull     11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: getfield      #21                 // Field hasExpired:Z
      15: ifeq          31
      18: aload_0
      19: getfield      #46                 // Field referenceCount:I
      22: ifne          31
      25: aload_0
      26: invokevirtual #55                 // Method close:()V
      29: iconst_1
      30: istore_1
      31: aload_0
      32: getfield      #7                  // Field expiryTimeout:J
      35: lconst_0
      36: lcmp
      37: ifle          74
      40: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
      43: aload_0
      44: getfield      #5                  // Field firstUsed:J
      47: aload_0
      48: getfield      #7                  // Field expiryTimeout:J
      51: ladd
      52: lcmp
      53: ifle          74
      56: aload_0
      57: iconst_1
      58: putfield      #21                 // Field hasExpired:Z
      61: aload_0
      62: getfield      #46                 // Field referenceCount:I
      65: ifne          74
      68: aload_0
      69: invokevirtual #55                 // Method close:()V
      72: iconst_1
      73: istore_1
      74: aload_0
      75: getfield      #46                 // Field referenceCount:I
      78: ifne          116
      81: aload_0
      82: getfield      #6                  // Field idleTimeout:I
      85: ifle          116
      88: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
      91: aload_0
      92: getfield      #4                  // Field lastUsed:J
      95: aload_0
      96: getfield      #6                  // Field idleTimeout:I
      99: i2l
     100: ladd
     101: lcmp
     102: ifle          116
     105: aload_0
     106: iconst_1
     107: putfield      #21                 // Field hasExpired:Z
     110: aload_0
     111: invokevirtual #55                 // Method close:()V
     114: iconst_1
     115: istore_1
     116: iload_1
     117: ireturn

  public int getIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #6                  // Field idleTimeout:I
       4: ireturn

  public void setIdleTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field idleTimeout:I
       5: return

  public void setExpiryTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field expiryTimeout:J
       5: return

  public long getExpiryTimeout();
    Code:
       0: aload_0
       1: getfield      #7                  // Field expiryTimeout:J
       4: lreturn

  public int getMaximumActiveSessionPerConnection();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #56                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getMaxActive:()I
       7: ireturn

  public void setMaximumActiveSessionPerConnection(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: iload_1
       5: invokevirtual #57                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setMaxActive:(I)V
       8: return

  public boolean isUseAnonymousProducers();
    Code:
       0: aload_0
       1: getfield      #8                  // Field useAnonymousProducers:Z
       4: ireturn

  public void setUseAnonymousProducers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field useAnonymousProducers:Z
       5: return

  public int getNumSessions();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #58                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getNumIdle:()I
       7: aload_0
       8: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      11: invokevirtual #59                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getNumActive:()I
      14: iadd
      15: ireturn

  public int getNumIdleSessions();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #58                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getNumIdle:()I
       7: ireturn

  public int getNumActiveSessions();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #59                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getNumActive:()I
       7: ireturn

  public void setBlockIfSessionPoolIsFull(boolean);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: iload_1
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokevirtual #60                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setWhenExhaustedAction:(B)V
      16: return

  public boolean isBlockIfSessionPoolIsFull();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #61                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getWhenExhaustedAction:()B
       7: iconst_1
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public long getBlockIfSessionPoolIsFullTimeout();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #62                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getMaxWait:()J
       7: lreturn

  public void setBlockIfSessionPoolIsFullTimeout(long);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: lload_1
       5: invokevirtual #63                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setMaxWait:(J)V
       8: return

  public java.lang.String toString();
    Code:
       0: new           #64                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #66                 // String ConnectionPool[
       9: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #15                 // Field connection:Ljavax/jms/Connection;
      16: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #69                 // String ]
      21: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  static java.util.List access$000(org.apache.activemq.jms.pool.ConnectionPool);
    Code:
       0: aload_0
       1: getfield      #1                  // Field loanedSessions:Ljava/util/List;
       4: areturn
}
