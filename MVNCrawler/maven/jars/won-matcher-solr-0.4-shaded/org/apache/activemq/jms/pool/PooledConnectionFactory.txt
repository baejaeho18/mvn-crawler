Compiled from "PooledConnectionFactory.java"
public class org.apache.activemq.jms.pool.PooledConnectionFactory implements javax.jms.ConnectionFactory {
  private static final transient org.slf4j.Logger LOG;

  protected final java.util.concurrent.atomic.AtomicBoolean stopped;

  private org.apache.commons.pool.impl.GenericKeyedObjectPool<org.apache.activemq.jms.pool.ConnectionKey, org.apache.activemq.jms.pool.ConnectionPool> connectionsPool;

  private javax.jms.ConnectionFactory connectionFactory;

  private int maximumActiveSessionPerConnection;

  private int idleTimeout;

  private boolean blockIfSessionPoolIsFull;

  private long blockIfSessionPoolIsFullTimeout;

  private long expiryTimeout;

  private boolean createConnectionOnStartup;

  private boolean useAnonymousProducers;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.activemq.jms.pool.ConnectionPool> mostRecentlyCreated;

  public org.apache.activemq.jms.pool.PooledConnectionFactory();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #6                  // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: sipush        500
      20: putfield      #7                  // Field maximumActiveSessionPerConnection:I
      23: aload_0
      24: sipush        30000
      27: putfield      #8                  // Field idleTimeout:I
      30: aload_0
      31: iconst_1
      32: putfield      #9                  // Field blockIfSessionPoolIsFull:Z
      35: aload_0
      36: ldc2_w        #10                 // long -1l
      39: putfield      #12                 // Field blockIfSessionPoolIsFullTimeout:J
      42: aload_0
      43: lconst_0
      44: putfield      #13                 // Field expiryTimeout:J
      47: aload_0
      48: iconst_1
      49: putfield      #14                 // Field createConnectionOnStartup:Z
      52: aload_0
      53: iconst_1
      54: putfield      #15                 // Field useAnonymousProducers:Z
      57: aload_0
      58: new           #16                 // class java/util/concurrent/atomic/AtomicReference
      61: dup
      62: aconst_null
      63: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      66: putfield      #1                  // Field mostRecentlyCreated:Ljava/util/concurrent/atomic/AtomicReference;
      69: return

  public void initConnectionsPool();
    Code:
       0: aload_0
       1: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: ifnonnull     58
       7: aload_0
       8: new           #19                 // class org/apache/commons/pool/impl/GenericKeyedObjectPool
      11: dup
      12: new           #20                 // class org/apache/activemq/jms/pool/PooledConnectionFactory$1
      15: dup
      16: aload_0
      17: invokespecial #21                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory$1."<init>":(Lorg/apache/activemq/jms/pool/PooledConnectionFactory;)V
      20: invokespecial #22                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool."<init>":(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;)V
      23: putfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      26: aload_0
      27: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      30: iconst_1
      31: invokevirtual #23                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setMaxIdle:(I)V
      34: aload_0
      35: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      38: iconst_0
      39: invokevirtual #24                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setLifo:(Z)V
      42: aload_0
      43: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      46: iconst_1
      47: invokevirtual #25                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setTestOnBorrow:(Z)V
      50: aload_0
      51: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      54: iconst_1
      55: invokevirtual #26                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setTestWhileIdle:(Z)V
      58: return

  public javax.jms.ConnectionFactory getConnectionFactory();
    Code:
       0: aload_0
       1: getfield      #27                 // Field connectionFactory:Ljavax/jms/ConnectionFactory;
       4: areturn

  public void setConnectionFactory(javax.jms.ConnectionFactory);
    Code:
       0: aload_1
       1: instanceof    #28                 // class javax/jms/XAConnectionFactory
       4: ifeq          23
       7: aload_0
       8: new           #29                 // class org/apache/activemq/jms/pool/PooledConnectionFactory$2
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #30                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory$2."<init>":(Lorg/apache/activemq/jms/pool/PooledConnectionFactory;Ljavax/jms/ConnectionFactory;)V
      17: putfield      #27                 // Field connectionFactory:Ljavax/jms/ConnectionFactory;
      20: goto          28
      23: aload_0
      24: aload_1
      25: putfield      #27                 // Field connectionFactory:Ljavax/jms/ConnectionFactory;
      28: return

  public javax.jms.Connection createConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #31                 // Method createConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/Connection;
       6: areturn

  public synchronized javax.jms.Connection createConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          22
      10: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      13: ldc           #33                 // String PooledConnectionFactory is stopped, skip create new connection.
      15: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      20: aconst_null
      21: areturn
      22: aconst_null
      23: astore_3
      24: new           #35                 // class org/apache/activemq/jms/pool/ConnectionKey
      27: dup
      28: aload_1
      29: aload_2
      30: invokespecial #36                 // Method org/apache/activemq/jms/pool/ConnectionKey."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      33: astore        4
      35: aload_0
      36: invokevirtual #37                 // Method getConnectionsPool:()Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      39: aload         4
      41: invokevirtual #38                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getNumIdle:(Ljava/lang/Object;)I
      44: aload_0
      45: invokevirtual #39                 // Method getMaxConnections:()I
      48: if_icmpge     90
      51: aload_0
      52: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      55: aload         4
      57: invokevirtual #40                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.addObject:(Ljava/lang/Object;)V
      60: aload_0
      61: getfield      #1                  // Field mostRecentlyCreated:Ljava/util/concurrent/atomic/AtomicReference;
      64: aconst_null
      65: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #42                 // class org/apache/activemq/jms/pool/ConnectionPool
      71: astore_3
      72: aload_3
      73: invokevirtual #43                 // Method org/apache/activemq/jms/pool/ConnectionPool.incrementReferenceCount:()V
      76: goto          196
      79: astore        5
      81: aload_0
      82: ldc           #45                 // String Error while attempting to add new Connection to the pool
      84: aload         5
      86: invokespecial #46                 // Method createJmsException:(Ljava/lang/String;Ljava/lang/Exception;)Ljavax/jms/JMSException;
      89: athrow
      90: aload_3
      91: ifnonnull     158
      94: aload_0
      95: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      98: aload         4
     100: invokevirtual #47                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.borrowObject:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #42                 // class org/apache/activemq/jms/pool/ConnectionPool
     106: astore_3
     107: aload_3
     108: dup
     109: astore        5
     111: monitorenter
     112: aload_3
     113: invokevirtual #48                 // Method org/apache/activemq/jms/pool/ConnectionPool.getConnection:()Ljavax/jms/Connection;
     116: ifnull        129
     119: aload_3
     120: invokevirtual #43                 // Method org/apache/activemq/jms/pool/ConnectionPool.incrementReferenceCount:()V
     123: aload         5
     125: monitorexit
     126: goto          158
     129: aload_0
     130: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
     133: aload         4
     135: aload_3
     136: invokevirtual #49                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.returnObject:(Ljava/lang/Object;Ljava/lang/Object;)V
     139: aconst_null
     140: astore_3
     141: aload         5
     143: monitorexit
     144: goto          155
     147: astore        6
     149: aload         5
     151: monitorexit
     152: aload         6
     154: athrow
     155: goto          90
     158: goto          172
     161: astore        5
     163: aload_0
     164: ldc           #50                 // String Error while attempting to retrieve a connection from the pool
     166: aload         5
     168: invokespecial #46                 // Method createJmsException:(Ljava/lang/String;Ljava/lang/Exception;)Ljavax/jms/JMSException;
     171: athrow
     172: aload_0
     173: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
     176: aload         4
     178: aload_3
     179: invokevirtual #49                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.returnObject:(Ljava/lang/Object;Ljava/lang/Object;)V
     182: goto          196
     185: astore        5
     187: aload_0
     188: ldc           #51                 // String Error when returning connection to the pool
     190: aload         5
     192: invokespecial #46                 // Method createJmsException:(Ljava/lang/String;Ljava/lang/Exception;)Ljavax/jms/JMSException;
     195: athrow
     196: aload_0
     197: aload_3
     198: invokevirtual #52                 // Method newPooledConnection:(Lorg/apache/activemq/jms/pool/ConnectionPool;)Ljavax/jms/Connection;
     201: areturn
    Exception table:
       from    to  target type
          51    76    79   Class java/lang/Exception
         112   126   147   any
         129   144   147   any
         147   152   147   any
          90   158   161   Class java/lang/Exception
         172   182   185   Class java/lang/Exception

  protected javax.jms.Connection newPooledConnection(org.apache.activemq.jms.pool.ConnectionPool);
    Code:
       0: new           #53                 // class org/apache/activemq/jms/pool/PooledConnection
       3: dup
       4: aload_1
       5: invokespecial #54                 // Method org/apache/activemq/jms/pool/PooledConnection."<init>":(Lorg/apache/activemq/jms/pool/ConnectionPool;)V
       8: areturn

  private javax.jms.JMSException createJmsException(java.lang.String, java.lang.Exception);
    Code:
       0: new           #55                 // class javax/jms/JMSException
       3: dup
       4: aload_1
       5: invokespecial #56                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokevirtual #57                 // Method javax/jms/JMSException.setLinkedException:(Ljava/lang/Exception;)V
      14: aload_3
      15: aload_2
      16: invokevirtual #58                 // Method javax/jms/JMSException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      19: pop
      20: aload_3
      21: areturn

  protected javax.jms.Connection createConnection(org.apache.activemq.jms.pool.ConnectionKey) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method org/apache/activemq/jms/pool/ConnectionKey.getUserName:()Ljava/lang/String;
       4: ifnonnull     24
       7: aload_1
       8: invokevirtual #60                 // Method org/apache/activemq/jms/pool/ConnectionKey.getPassword:()Ljava/lang/String;
      11: ifnonnull     24
      14: aload_0
      15: getfield      #27                 // Field connectionFactory:Ljavax/jms/ConnectionFactory;
      18: invokeinterface #61,  1           // InterfaceMethod javax/jms/ConnectionFactory.createConnection:()Ljavax/jms/Connection;
      23: areturn
      24: aload_0
      25: getfield      #27                 // Field connectionFactory:Ljavax/jms/ConnectionFactory;
      28: aload_1
      29: invokevirtual #59                 // Method org/apache/activemq/jms/pool/ConnectionKey.getUserName:()Ljava/lang/String;
      32: aload_1
      33: invokevirtual #60                 // Method org/apache/activemq/jms/pool/ConnectionKey.getPassword:()Ljava/lang/String;
      36: invokeinterface #62,  3           // InterfaceMethod javax/jms/ConnectionFactory.createConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/Connection;
      41: areturn

  public void start();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #63                 // String Staring the PooledConnectionFactory: create on start = {}
       5: aload_0
       6: invokevirtual #64                 // Method isCreateConnectionOnStartup:()Z
       9: invokestatic  #65                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      12: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #6                  // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: iconst_0
      22: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      25: aload_0
      26: invokevirtual #64                 // Method isCreateConnectionOnStartup:()Z
      29: ifeq          56
      32: aload_0
      33: invokevirtual #68                 // Method createConnection:()Ljavax/jms/Connection;
      36: invokeinterface #69,  1           // InterfaceMethod javax/jms/Connection.close:()V
      41: goto          56
      44: astore_1
      45: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      48: ldc           #70                 // String Create pooled connection during start failed. This exception will be ignored.
      50: aload_1
      51: invokeinterface #71,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: return
    Exception table:
       from    to  target type
          32    41    44   Class javax/jms/JMSException

  public void stop();
    Code:
       0: aload_0
       1: getfield      #6                  // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #72                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          61
      12: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #73                 // String Stopping the PooledConnectionFactory, number of connections in cache: {}
      17: aload_0
      18: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      21: ifnull        34
      24: aload_0
      25: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      28: invokevirtual #74                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getNumActive:()I
      31: goto          35
      34: iconst_0
      35: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      47: ifnull        57
      50: aload_0
      51: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      54: invokevirtual #76                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.close:()V
      57: goto          61
      60: astore_1
      61: return
    Exception table:
       from    to  target type
          43    57    60   Class java/lang/Exception

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field stopped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: invokevirtual #37                 // Method getConnectionsPool:()Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
      15: invokevirtual #77                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.clear:()V
      18: return

  public int getMaximumActiveSessionPerConnection();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maximumActiveSessionPerConnection:I
       4: ireturn

  public void setMaximumActiveSessionPerConnection(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field maximumActiveSessionPerConnection:I
       5: return

  public void setBlockIfSessionPoolIsFull(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field blockIfSessionPoolIsFull:Z
       5: return

  public boolean isBlockIfSessionPoolIsFull();
    Code:
       0: aload_0
       1: getfield      #9                  // Field blockIfSessionPoolIsFull:Z
       4: ireturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getConnectionsPool:()Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #78                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getMaxIdle:()I
       7: ireturn

  public void setMaxConnections(int);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getConnectionsPool:()Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: iload_1
       5: invokevirtual #23                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setMaxIdle:(I)V
       8: return

  public int getIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #8                  // Field idleTimeout:I
       4: ireturn

  public void setIdleTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field idleTimeout:I
       5: return

  public void setExpiryTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field expiryTimeout:J
       5: return

  public long getExpiryTimeout();
    Code:
       0: aload_0
       1: getfield      #13                 // Field expiryTimeout:J
       4: lreturn

  public boolean isCreateConnectionOnStartup();
    Code:
       0: aload_0
       1: getfield      #14                 // Field createConnectionOnStartup:Z
       4: ireturn

  public void setCreateConnectionOnStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field createConnectionOnStartup:Z
       5: return

  public boolean isUseAnonymousProducers();
    Code:
       0: aload_0
       1: getfield      #15                 // Field useAnonymousProducers:Z
       4: ireturn

  public void setUseAnonymousProducers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field useAnonymousProducers:Z
       5: return

  protected org.apache.commons.pool.impl.GenericKeyedObjectPool<org.apache.activemq.jms.pool.ConnectionKey, org.apache.activemq.jms.pool.ConnectionPool> getConnectionsPool();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method initConnectionsPool:()V
       4: aload_0
       5: getfield      #18                 // Field connectionsPool:Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       8: areturn

  public void setTimeBetweenExpirationCheckMillis(long);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getConnectionsPool:()Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: lload_1
       5: invokevirtual #80                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.setTimeBetweenEvictionRunsMillis:(J)V
       8: return

  public long getTimeBetweenExpirationCheckMillis();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getConnectionsPool:()Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #81                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getTimeBetweenEvictionRunsMillis:()J
       7: lreturn

  public int getNumConnections();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getConnectionsPool:()Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;
       4: invokevirtual #82                 // Method org/apache/commons/pool/impl/GenericKeyedObjectPool.getNumIdle:()I
       7: ireturn

  protected org.apache.activemq.jms.pool.ConnectionPool createConnectionPool(javax.jms.Connection);
    Code:
       0: new           #42                 // class org/apache/activemq/jms/pool/ConnectionPool
       3: dup
       4: aload_1
       5: invokespecial #83                 // Method org/apache/activemq/jms/pool/ConnectionPool."<init>":(Ljavax/jms/Connection;)V
       8: areturn

  public long getBlockIfSessionPoolIsFullTimeout();
    Code:
       0: aload_0
       1: getfield      #12                 // Field blockIfSessionPoolIsFullTimeout:J
       4: lreturn

  public void setBlockIfSessionPoolIsFullTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #12                 // Field blockIfSessionPoolIsFullTimeout:J
       5: return

  protected void populateProperties(java.util.Properties);
    Code:
       0: aload_1
       1: ldc           #84                 // String maximumActiveSessionPerConnection
       3: aload_0
       4: invokevirtual #85                 // Method getMaximumActiveSessionPerConnection:()I
       7: invokestatic  #86                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      10: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_1
      15: ldc           #88                 // String maxConnections
      17: aload_0
      18: invokevirtual #39                 // Method getMaxConnections:()I
      21: invokestatic  #86                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      24: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: aload_1
      29: ldc           #89                 // String idleTimeout
      31: aload_0
      32: invokevirtual #90                 // Method getIdleTimeout:()I
      35: invokestatic  #86                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      38: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      41: pop
      42: aload_1
      43: ldc           #91                 // String expiryTimeout
      45: aload_0
      46: invokevirtual #92                 // Method getExpiryTimeout:()J
      49: invokestatic  #93                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      52: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      55: pop
      56: aload_1
      57: ldc           #94                 // String timeBetweenExpirationCheckMillis
      59: aload_0
      60: invokevirtual #95                 // Method getTimeBetweenExpirationCheckMillis:()J
      63: invokestatic  #93                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      66: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      69: pop
      70: aload_1
      71: ldc           #96                 // String createConnectionOnStartup
      73: aload_0
      74: invokevirtual #64                 // Method isCreateConnectionOnStartup:()Z
      77: invokestatic  #97                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      80: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      83: pop
      84: aload_1
      85: ldc           #98                 // String useAnonymousProducers
      87: aload_0
      88: invokevirtual #99                 // Method isUseAnonymousProducers:()Z
      91: invokestatic  #97                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      94: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      97: pop
      98: aload_1
      99: ldc           #100                // String blockIfSessionPoolIsFullTimeout
     101: aload_0
     102: invokevirtual #101                // Method getBlockIfSessionPoolIsFullTimeout:()J
     105: invokestatic  #93                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     108: invokevirtual #87                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     111: pop
     112: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.concurrent.atomic.AtomicReference access$100(org.apache.activemq.jms.pool.PooledConnectionFactory);
    Code:
       0: aload_0
       1: getfield      #1                  // Field mostRecentlyCreated:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static {};
    Code:
       0: ldc_w         #102                // class org/apache/activemq/jms/pool/PooledConnectionFactory
       3: invokestatic  #103                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
