Compiled from "PooledConnectionFactory.java"
class org.apache.activemq.jms.pool.PooledConnectionFactory$1 implements org.apache.commons.pool.KeyedPoolableObjectFactory<org.apache.activemq.jms.pool.ConnectionKey, org.apache.activemq.jms.pool.ConnectionPool> {
  final org.apache.activemq.jms.pool.PooledConnectionFactory this$0;

  org.apache.activemq.jms.pool.PooledConnectionFactory$1(org.apache.activemq.jms.pool.PooledConnectionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void activateObject(org.apache.activemq.jms.pool.ConnectionKey, org.apache.activemq.jms.pool.ConnectionPool) throws java.lang.Exception;
    Code:
       0: return

  public void destroyObject(org.apache.activemq.jms.pool.ConnectionKey, org.apache.activemq.jms.pool.ConnectionPool) throws java.lang.Exception;
    Code:
       0: invokestatic  #3                  // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$000:()Lorg/slf4j/Logger;
       3: invokeinterface #4,  1            // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          22
      11: invokestatic  #3                  // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$000:()Lorg/slf4j/Logger;
      14: ldc           #5                  // String Destroying connection: {}
      16: aload_2
      17: invokeinterface #6,  3            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      22: aload_2
      23: invokevirtual #7                  // Method org/apache/activemq/jms/pool/ConnectionPool.close:()V
      26: goto          63
      29: astore_3
      30: invokestatic  #3                  // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$000:()Lorg/slf4j/Logger;
      33: new           #9                  // class java/lang/StringBuilder
      36: dup
      37: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #11                 // String Close connection failed for connection:
      42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #14                 // String . This exception will be ignored.
      51: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload_3
      58: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
           0    26    29   Class java/lang/Exception

  public org.apache.activemq.jms.pool.ConnectionPool makeObject(org.apache.activemq.jms.pool.ConnectionKey) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
       4: aload_1
       5: invokevirtual #17                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.createConnection:(Lorg/apache/activemq/jms/pool/ConnectionKey;)Ljavax/jms/Connection;
       8: astore_2
       9: aload_0
      10: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      13: aload_2
      14: invokevirtual #18                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.createConnectionPool:(Ljavax/jms/Connection;)Lorg/apache/activemq/jms/pool/ConnectionPool;
      17: astore_3
      18: aload_3
      19: aload_0
      20: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      23: invokevirtual #19                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.getIdleTimeout:()I
      26: invokevirtual #20                 // Method org/apache/activemq/jms/pool/ConnectionPool.setIdleTimeout:(I)V
      29: aload_3
      30: aload_0
      31: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      34: invokevirtual #21                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.getExpiryTimeout:()J
      37: invokevirtual #22                 // Method org/apache/activemq/jms/pool/ConnectionPool.setExpiryTimeout:(J)V
      40: aload_3
      41: aload_0
      42: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      45: invokevirtual #23                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.getMaximumActiveSessionPerConnection:()I
      48: invokevirtual #24                 // Method org/apache/activemq/jms/pool/ConnectionPool.setMaximumActiveSessionPerConnection:(I)V
      51: aload_3
      52: aload_0
      53: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      56: invokevirtual #25                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.isBlockIfSessionPoolIsFull:()Z
      59: invokevirtual #26                 // Method org/apache/activemq/jms/pool/ConnectionPool.setBlockIfSessionPoolIsFull:(Z)V
      62: aload_0
      63: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      66: invokevirtual #25                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.isBlockIfSessionPoolIsFull:()Z
      69: ifeq          95
      72: aload_0
      73: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      76: invokevirtual #27                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.getBlockIfSessionPoolIsFullTimeout:()J
      79: lconst_0
      80: lcmp
      81: ifle          95
      84: aload_3
      85: aload_0
      86: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
      89: invokevirtual #27                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.getBlockIfSessionPoolIsFullTimeout:()J
      92: invokevirtual #28                 // Method org/apache/activemq/jms/pool/ConnectionPool.setBlockIfSessionPoolIsFullTimeout:(J)V
      95: aload_3
      96: aload_0
      97: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
     100: invokevirtual #29                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.isUseAnonymousProducers:()Z
     103: invokevirtual #30                 // Method org/apache/activemq/jms/pool/ConnectionPool.setUseAnonymousProducers:(Z)V
     106: invokestatic  #3                  // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$000:()Lorg/slf4j/Logger;
     109: invokeinterface #4,  1            // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     114: ifeq          128
     117: invokestatic  #3                  // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$000:()Lorg/slf4j/Logger;
     120: ldc           #31                 // String Created new connection: {}
     122: aload_3
     123: invokeinterface #6,  3            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     128: aload_0
     129: getfield      #1                  // Field this$0:Lorg/apache/activemq/jms/pool/PooledConnectionFactory;
     132: invokestatic  #32                 // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$100:(Lorg/apache/activemq/jms/pool/PooledConnectionFactory;)Ljava/util/concurrent/atomic/AtomicReference;
     135: aload_3
     136: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     139: aload_3
     140: areturn

  public void passivateObject(org.apache.activemq.jms.pool.ConnectionKey, org.apache.activemq.jms.pool.ConnectionPool) throws java.lang.Exception;
    Code:
       0: return

  public boolean validateObject(org.apache.activemq.jms.pool.ConnectionKey, org.apache.activemq.jms.pool.ConnectionPool);
    Code:
       0: aload_2
       1: ifnull        35
       4: aload_2
       5: invokevirtual #34                 // Method org/apache/activemq/jms/pool/ConnectionPool.expiredCheck:()Z
       8: ifeq          35
      11: invokestatic  #3                  // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$000:()Lorg/slf4j/Logger;
      14: invokeinterface #4,  1            // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      19: ifeq          33
      22: invokestatic  #3                  // Method org/apache/activemq/jms/pool/PooledConnectionFactory.access$000:()Lorg/slf4j/Logger;
      25: ldc           #35                 // String Connection has expired: {} and will be destroyed
      27: aload_2
      28: invokeinterface #6,  3            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      33: iconst_0
      34: ireturn
      35: iconst_1
      36: ireturn

  public void passivateObject(java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class org/apache/activemq/jms/pool/ConnectionKey
       5: aload_2
       6: checkcast     #37                 // class org/apache/activemq/jms/pool/ConnectionPool
       9: invokevirtual #38                 // Method passivateObject:(Lorg/apache/activemq/jms/pool/ConnectionKey;Lorg/apache/activemq/jms/pool/ConnectionPool;)V
      12: return

  public void activateObject(java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class org/apache/activemq/jms/pool/ConnectionKey
       5: aload_2
       6: checkcast     #37                 // class org/apache/activemq/jms/pool/ConnectionPool
       9: invokevirtual #39                 // Method activateObject:(Lorg/apache/activemq/jms/pool/ConnectionKey;Lorg/apache/activemq/jms/pool/ConnectionPool;)V
      12: return

  public boolean validateObject(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class org/apache/activemq/jms/pool/ConnectionKey
       5: aload_2
       6: checkcast     #37                 // class org/apache/activemq/jms/pool/ConnectionPool
       9: invokevirtual #40                 // Method validateObject:(Lorg/apache/activemq/jms/pool/ConnectionKey;Lorg/apache/activemq/jms/pool/ConnectionPool;)Z
      12: ireturn

  public void destroyObject(java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class org/apache/activemq/jms/pool/ConnectionKey
       5: aload_2
       6: checkcast     #37                 // class org/apache/activemq/jms/pool/ConnectionPool
       9: invokevirtual #41                 // Method destroyObject:(Lorg/apache/activemq/jms/pool/ConnectionKey;Lorg/apache/activemq/jms/pool/ConnectionPool;)V
      12: return

  public java.lang.Object makeObject(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class org/apache/activemq/jms/pool/ConnectionKey
       5: invokevirtual #42                 // Method makeObject:(Lorg/apache/activemq/jms/pool/ConnectionKey;)Lorg/apache/activemq/jms/pool/ConnectionPool;
       8: areturn
}
