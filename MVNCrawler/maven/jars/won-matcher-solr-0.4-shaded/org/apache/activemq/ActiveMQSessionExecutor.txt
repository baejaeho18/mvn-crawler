Compiled from "ActiveMQSessionExecutor.java"
public class org.apache.activemq.ActiveMQSessionExecutor implements org.apache.activemq.thread.Task {
  private static final org.slf4j.Logger LOG;

  private final org.apache.activemq.ActiveMQSession session;

  private final org.apache.activemq.MessageDispatchChannel messageQueue;

  private boolean dispatchedBySessionPool;

  private volatile org.apache.activemq.thread.TaskRunner taskRunner;

  private boolean startedOrWarnedThatNotStarted;

  org.apache.activemq.ActiveMQSessionExecutor(org.apache.activemq.ActiveMQSession);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
       9: aload_0
      10: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
      13: getfield      #3                  // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      16: ifnull        46
      19: aload_0
      20: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
      23: getfield      #3                  // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      26: invokevirtual #4                  // Method org/apache/activemq/ActiveMQConnection.isMessagePrioritySupported:()Z
      29: ifeq          46
      32: aload_0
      33: new           #5                  // class org/apache/activemq/SimplePriorityMessageDispatchChannel
      36: dup
      37: invokespecial #6                  // Method org/apache/activemq/SimplePriorityMessageDispatchChannel."<init>":()V
      40: putfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      43: goto          57
      46: aload_0
      47: new           #8                  // class org/apache/activemq/FifoMessageDispatchChannel
      50: dup
      51: invokespecial #9                  // Method org/apache/activemq/FifoMessageDispatchChannel."<init>":()V
      54: putfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      57: return

  void setDispatchedBySessionPool(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field dispatchedBySessionPool:Z
       5: aload_0
       6: invokevirtual #11                 // Method wakeup:()V
       9: return

  void execute(org.apache.activemq.command.MessageDispatch) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field startedOrWarnedThatNotStarted:Z
       4: ifne          99
       7: aload_0
       8: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
      11: getfield      #3                  // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      14: astore_2
      15: aload_2
      16: invokevirtual #13                 // Method org/apache/activemq/ActiveMQConnection.getWarnAboutUnstartedConnectionTimeout:()J
      19: lstore_3
      20: aload_2
      21: invokevirtual #14                 // Method org/apache/activemq/ActiveMQConnection.isStarted:()Z
      24: ifne          33
      27: lload_3
      28: lconst_0
      29: lcmp
      30: ifge          41
      33: aload_0
      34: iconst_1
      35: putfield      #12                 // Field startedOrWarnedThatNotStarted:Z
      38: goto          99
      41: invokestatic  #15                 // Method java/lang/System.currentTimeMillis:()J
      44: aload_2
      45: invokevirtual #16                 // Method org/apache/activemq/ActiveMQConnection.getTimeCreated:()J
      48: lsub
      49: lstore        5
      51: lload         5
      53: lload_3
      54: lcmp
      55: ifle          99
      58: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
      61: new           #18                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #20                 // String Received a message on a connection which is not yet started. Have you forgotten to call Connection.start()? Connection:
      70: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_2
      74: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: ldc           #23                 // String  Received:
      79: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokeinterface #25,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      94: aload_0
      95: iconst_1
      96: putfield      #12                 // Field startedOrWarnedThatNotStarted:Z
      99: aload_0
     100: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
     103: invokevirtual #26                 // Method org/apache/activemq/ActiveMQSession.isSessionAsyncDispatch:()Z
     106: ifne          124
     109: aload_0
     110: getfield      #10                 // Field dispatchedBySessionPool:Z
     113: ifne          124
     116: aload_0
     117: aload_1
     118: invokevirtual #27                 // Method dispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
     121: goto          138
     124: aload_0
     125: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
     128: aload_1
     129: invokeinterface #28,  2           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.enqueue:(Lorg/apache/activemq/command/MessageDispatch;)V
     134: aload_0
     135: invokevirtual #11                 // Method wakeup:()V
     138: return

  public void wakeup();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dispatchedBySessionPool:Z
       4: ifne          134
       7: aload_0
       8: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
      11: invokevirtual #26                 // Method org/apache/activemq/ActiveMQSession.isSessionAsyncDispatch:()Z
      14: ifeq          124
      17: aload_0
      18: getfield      #29                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      21: astore_1
      22: aload_1
      23: ifnonnull     105
      26: aload_0
      27: dup
      28: astore_2
      29: monitorenter
      30: aload_0
      31: getfield      #29                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      34: ifnonnull     90
      37: aload_0
      38: invokevirtual #30                 // Method isRunning:()Z
      41: ifne          47
      44: aload_2
      45: monitorexit
      46: return
      47: aload_0
      48: aload_0
      49: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
      52: getfield      #3                  // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      55: invokevirtual #31                 // Method org/apache/activemq/ActiveMQConnection.getSessionTaskRunner:()Lorg/apache/activemq/thread/TaskRunnerFactory;
      58: aload_0
      59: new           #18                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #32                 // String ActiveMQ Session:
      68: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
      75: invokevirtual #33                 // Method org/apache/activemq/ActiveMQSession.getSessionId:()Lorg/apache/activemq/command/SessionId;
      78: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #34                 // Method org/apache/activemq/thread/TaskRunnerFactory.createTaskRunner:(Lorg/apache/activemq/thread/Task;Ljava/lang/String;)Lorg/apache/activemq/thread/TaskRunner;
      87: putfield      #29                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      90: aload_0
      91: getfield      #29                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      94: astore_1
      95: aload_2
      96: monitorexit
      97: goto          105
     100: astore_3
     101: aload_2
     102: monitorexit
     103: aload_3
     104: athrow
     105: aload_1
     106: invokeinterface #35,  1           // InterfaceMethod org/apache/activemq/thread/TaskRunner.wakeup:()V
     111: goto          134
     114: astore_1
     115: invokestatic  #37                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     118: invokevirtual #38                 // Method java/lang/Thread.interrupt:()V
     121: goto          134
     124: aload_0
     125: invokevirtual #39                 // Method iterate:()Z
     128: ifeq          134
     131: goto          124
     134: return
    Exception table:
       from    to  target type
          30    46   100   any
          47    97   100   any
         100   103   100   any
          17    46   114   Class java/lang/InterruptedException
          47   111   114   Class java/lang/InterruptedException

  void executeFirst(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.enqueueFirst:(Lorg/apache/activemq/command/MessageDispatch;)V
      10: aload_0
      11: invokevirtual #11                 // Method wakeup:()V
      14: return

  public boolean hasUncomsumedMessages();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #41,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isClosed:()Z
       9: ifne          40
      12: aload_0
      13: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      16: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isRunning:()Z
      21: ifeq          40
      24: aload_0
      25: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      28: invokeinterface #43,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isEmpty:()Z
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  void dispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
       4: getfield      #44                 // Field org/apache/activemq/ActiveMQSession.consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       7: invokevirtual #45                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          59
      20: aload_2
      21: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #48                 // class org/apache/activemq/ActiveMQMessageConsumer
      29: astore_3
      30: aload_1
      31: invokevirtual #49                 // Method org/apache/activemq/command/MessageDispatch.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      34: astore        4
      36: aload         4
      38: aload_3
      39: invokevirtual #50                 // Method org/apache/activemq/ActiveMQMessageConsumer.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      42: invokevirtual #51                 // Method org/apache/activemq/command/ConsumerId.equals:(Ljava/lang/Object;)Z
      45: ifeq          56
      48: aload_3
      49: aload_1
      50: invokevirtual #52                 // Method org/apache/activemq/ActiveMQMessageConsumer.dispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      53: goto          59
      56: goto          11
      59: return

  synchronized void start();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isRunning:()Z
       9: ifne          32
      12: aload_0
      13: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      16: invokeinterface #53,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.start:()V
      21: aload_0
      22: invokevirtual #54                 // Method hasUncomsumedMessages:()Z
      25: ifeq          32
      28: aload_0
      29: invokevirtual #11                 // Method wakeup:()V
      32: return

  void stop() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isRunning:()Z
       9: ifeq          56
      12: aload_0
      13: dup
      14: astore_1
      15: monitorenter
      16: aload_0
      17: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      20: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.stop:()V
      25: aload_0
      26: getfield      #29                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      29: ifnull        46
      32: aload_0
      33: getfield      #29                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      36: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/thread/TaskRunner.shutdown:()V
      41: aload_0
      42: aconst_null
      43: putfield      #29                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      46: aload_1
      47: monitorexit
      48: goto          56
      51: astore_2
      52: aload_1
      53: monitorexit
      54: aload_2
      55: athrow
      56: goto          71
      59: astore_1
      60: invokestatic  #37                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      63: invokevirtual #38                 // Method java/lang/Thread.interrupt:()V
      66: aload_1
      67: invokestatic  #57                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      70: athrow
      71: return
    Exception table:
       from    to  target type
          16    48    51   any
          51    54    51   any
           0    56    59   Class java/lang/InterruptedException

  boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isRunning:()Z
       9: ireturn

  void close();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #58,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.close:()V
       9: return

  void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #59,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.clear:()V
       9: return

  org.apache.activemq.command.MessageDispatch dequeueNoWait();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.dequeueNoWait:()Lorg/apache/activemq/command/MessageDispatch;
       9: areturn

  protected void clearMessagesInProgress();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #59,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.clear:()V
       9: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #43,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isEmpty:()Z
       9: ireturn

  public boolean iterate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field session:Lorg/apache/activemq/ActiveMQSession;
       4: getfield      #44                 // Field org/apache/activemq/ActiveMQSession.consumers:Ljava/util/concurrent/CopyOnWriteArrayList;
       7: invokevirtual #45                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      10: astore_1
      11: aload_1
      12: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          42
      20: aload_1
      21: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #48                 // class org/apache/activemq/ActiveMQMessageConsumer
      29: astore_2
      30: aload_2
      31: invokevirtual #61                 // Method org/apache/activemq/ActiveMQMessageConsumer.iterate:()Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: goto          11
      42: aload_0
      43: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      46: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.dequeueNoWait:()Lorg/apache/activemq/command/MessageDispatch;
      51: astore_1
      52: aload_1
      53: ifnonnull     58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: aload_1
      60: invokevirtual #27                 // Method dispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      63: aload_0
      64: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
      67: invokeinterface #43,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isEmpty:()Z
      72: ifne          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn

  java.util.List<org.apache.activemq.command.MessageDispatch> getUnconsumedMessages();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageQueue:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.removeAll:()Ljava/util/List;
       9: areturn

  static {};
    Code:
       0: ldc_w         #63                 // class org/apache/activemq/ActiveMQSessionExecutor
       3: invokestatic  #64                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
