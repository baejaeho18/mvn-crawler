Compiled from "PooledTaskRunner.java"
class org.apache.activemq.thread.PooledTaskRunner implements org.apache.activemq.thread.TaskRunner {
  private static final org.slf4j.Logger LOG;

  private final int maxIterationsPerRun;

  private final java.util.concurrent.Executor executor;

  private final org.apache.activemq.thread.Task task;

  private final java.lang.Runnable runable;

  private boolean queued;

  private boolean shutdown;

  private boolean iterating;

  private volatile java.lang.Thread runningThread;

  public org.apache.activemq.thread.PooledTaskRunner(java.util.concurrent.Executor, org.apache.activemq.thread.Task, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field executor:Ljava/util/concurrent/Executor;
       9: aload_0
      10: iload_3
      11: putfield      #5                  // Field maxIterationsPerRun:I
      14: aload_0
      15: aload_2
      16: putfield      #6                  // Field task:Lorg/apache/activemq/thread/Task;
      19: aload_0
      20: new           #7                  // class org/apache/activemq/thread/PooledTaskRunner$1
      23: dup
      24: aload_0
      25: aload_2
      26: invokespecial #8                  // Method org/apache/activemq/thread/PooledTaskRunner$1."<init>":(Lorg/apache/activemq/thread/PooledTaskRunner;Lorg/apache/activemq/thread/Task;)V
      29: putfield      #9                  // Field runable:Ljava/lang/Runnable;
      32: return

  public void wakeup() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field runable:Ljava/lang/Runnable;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field queued:Z
      11: ifne          21
      14: aload_0
      15: getfield      #11                 // Field shutdown:Z
      18: ifeq          24
      21: aload_1
      22: monitorexit
      23: return
      24: aload_0
      25: iconst_1
      26: putfield      #10                 // Field queued:Z
      29: aload_0
      30: getfield      #12                 // Field iterating:Z
      33: ifne          49
      36: aload_0
      37: getfield      #4                  // Field executor:Ljava/util/concurrent/Executor;
      40: aload_0
      41: getfield      #9                  // Field runable:Ljava/lang/Runnable;
      44: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      49: aload_1
      50: monitorexit
      51: goto          59
      54: astore_2
      55: aload_1
      56: monitorexit
      57: aload_2
      58: athrow
      59: return
    Exception table:
       from    to  target type
           7    23    54   any
          24    51    54   any
          54    57    54   any

  public void shutdown(long) throws java.lang.InterruptedException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #14                 // String Shutdown timeout: {} task: {}
       5: lload_1
       6: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: aload_0
      10: getfield      #6                  // Field task:Lorg/apache/activemq/thread/Task;
      13: invokeinterface #16,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #9                  // Field runable:Ljava/lang/Runnable;
      22: dup
      23: astore_3
      24: monitorenter
      25: aload_0
      26: iconst_1
      27: putfield      #11                 // Field shutdown:Z
      30: aload_0
      31: getfield      #2                  // Field runningThread:Ljava/lang/Thread;
      34: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      37: if_acmpeq     55
      40: aload_0
      41: getfield      #12                 // Field iterating:Z
      44: ifeq          55
      47: aload_0
      48: getfield      #9                  // Field runable:Ljava/lang/Runnable;
      51: lload_1
      52: invokevirtual #18                 // Method java/lang/Object.wait:(J)V
      55: aload_3
      56: monitorexit
      57: goto          67
      60: astore        4
      62: aload_3
      63: monitorexit
      64: aload         4
      66: athrow
      67: return
    Exception table:
       from    to  target type
          25    57    60   any
          60    64    60   any

  public void shutdown() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #19                 // Method shutdown:(J)V
       5: return

  final void runTask();
    Code:
       0: aload_0
       1: getfield      #9                  // Field runable:Ljava/lang/Runnable;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_0
       9: putfield      #10                 // Field queued:Z
      12: aload_0
      13: getfield      #11                 // Field shutdown:Z
      16: ifeq          34
      19: aload_0
      20: iconst_0
      21: putfield      #12                 // Field iterating:Z
      24: aload_0
      25: getfield      #9                  // Field runable:Ljava/lang/Runnable;
      28: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
      31: aload_1
      32: monitorexit
      33: return
      34: aload_0
      35: iconst_1
      36: putfield      #12                 // Field iterating:Z
      39: aload_1
      40: monitorexit
      41: goto          49
      44: astore_2
      45: aload_1
      46: monitorexit
      47: aload_2
      48: athrow
      49: iconst_0
      50: istore_1
      51: iconst_0
      52: istore_2
      53: iload_2
      54: aload_0
      55: getfield      #5                  // Field maxIterationsPerRun:I
      58: if_icmpge     102
      61: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      64: ldc           #21                 // String Running task iteration {} - {}
      66: iload_2
      67: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: aload_0
      71: getfield      #6                  // Field task:Lorg/apache/activemq/thread/Task;
      74: invokeinterface #16,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      79: aload_0
      80: getfield      #6                  // Field task:Lorg/apache/activemq/thread/Task;
      83: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/thread/Task.iterate:()Z
      88: ifne          96
      91: iconst_1
      92: istore_1
      93: goto          102
      96: iinc          2, 1
      99: goto          53
     102: aload_0
     103: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     106: dup
     107: astore_2
     108: monitorenter
     109: aload_0
     110: iconst_0
     111: putfield      #12                 // Field iterating:Z
     114: aload_0
     115: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     118: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
     121: aload_0
     122: getfield      #11                 // Field shutdown:Z
     125: ifeq          143
     128: aload_0
     129: iconst_0
     130: putfield      #10                 // Field queued:Z
     133: aload_0
     134: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     137: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
     140: aload_2
     141: monitorexit
     142: return
     143: iload_1
     144: ifne          152
     147: aload_0
     148: iconst_1
     149: putfield      #10                 // Field queued:Z
     152: aload_0
     153: getfield      #10                 // Field queued:Z
     156: ifeq          172
     159: aload_0
     160: getfield      #4                  // Field executor:Ljava/util/concurrent/Executor;
     163: aload_0
     164: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     167: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     172: aload_2
     173: monitorexit
     174: goto          182
     177: astore_3
     178: aload_2
     179: monitorexit
     180: aload_3
     181: athrow
     182: goto          276
     185: astore        4
     187: aload_0
     188: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     191: dup
     192: astore        5
     194: monitorenter
     195: aload_0
     196: iconst_0
     197: putfield      #12                 // Field iterating:Z
     200: aload_0
     201: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     204: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
     207: aload_0
     208: getfield      #11                 // Field shutdown:Z
     211: ifeq          230
     214: aload_0
     215: iconst_0
     216: putfield      #10                 // Field queued:Z
     219: aload_0
     220: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     223: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
     226: aload         5
     228: monitorexit
     229: return
     230: iload_1
     231: ifne          239
     234: aload_0
     235: iconst_1
     236: putfield      #10                 // Field queued:Z
     239: aload_0
     240: getfield      #10                 // Field queued:Z
     243: ifeq          259
     246: aload_0
     247: getfield      #4                  // Field executor:Ljava/util/concurrent/Executor;
     250: aload_0
     251: getfield      #9                  // Field runable:Ljava/lang/Runnable;
     254: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     259: aload         5
     261: monitorexit
     262: goto          273
     265: astore        6
     267: aload         5
     269: monitorexit
     270: aload         6
     272: athrow
     273: aload         4
     275: athrow
     276: return
    Exception table:
       from    to  target type
           7    33    44   any
          34    41    44   any
          44    47    44   any
         109   142   177   any
         143   174   177   any
         177   180   177   any
          51   102   185   any
         195   229   265   any
         230   262   265   any
         265   270   265   any
         185   187   185   any

  static java.lang.Thread access$002(org.apache.activemq.thread.PooledTaskRunner, java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field runningThread:Ljava/lang/Thread;
       6: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #24                 // class org/apache/activemq/thread/PooledTaskRunner
       3: invokestatic  #25                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
