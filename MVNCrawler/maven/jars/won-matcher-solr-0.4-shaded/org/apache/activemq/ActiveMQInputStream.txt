Compiled from "ActiveMQInputStream.java"
public class org.apache.activemq.ActiveMQInputStream extends java.io.InputStream implements org.apache.activemq.ActiveMQDispatcher {
  private final org.apache.activemq.ActiveMQConnection connection;

  private final org.apache.activemq.command.ConsumerInfo info;

  private final org.apache.activemq.MessageDispatchChannel unconsumedMessages;

  private int deliveredCounter;

  private org.apache.activemq.command.MessageDispatch lastDelivered;

  private boolean eosReached;

  private byte[] buffer;

  private int pos;

  private java.util.Map<java.lang.String, java.lang.Object> jmsProperties;

  private org.apache.activemq.command.ProducerId producerId;

  private long nextSequenceId;

  private final long timeout;

  private boolean firstReceived;

  public org.apache.activemq.ActiveMQInputStream(org.apache.activemq.ActiveMQConnection, org.apache.activemq.command.ConsumerId, org.apache.activemq.command.ActiveMQDestination, java.lang.String, boolean, java.lang.String, int, long) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/activemq/FifoMessageDispatchChannel
       8: dup
       9: invokespecial #3                  // Method org/apache/activemq/FifoMessageDispatchChannel."<init>":()V
      12: putfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      20: aload_3
      21: ifnonnull     34
      24: new           #6                  // class javax/jms/InvalidDestinationException
      27: dup
      28: ldc           #7                  // String Don\'t understand null destinations
      30: invokespecial #8                  // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_3
      35: invokevirtual #9                  // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      38: ifeq          129
      41: aload_3
      42: invokevirtual #10                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      45: astore        10
      47: aload         10
      49: ifnonnull     79
      52: new           #11                 // class java/lang/IllegalArgumentException
      55: dup
      56: new           #12                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #14                 // String Physical name of Destination should be valid:
      65: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_1
      80: invokevirtual #19                 // Method org/apache/activemq/ActiveMQConnection.getConnectionInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      83: invokevirtual #20                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      86: invokevirtual #21                 // Method org/apache/activemq/command/ConnectionId.getValue:()Ljava/lang/String;
      89: astore        11
      91: aload         10
      93: aload         11
      95: invokevirtual #22                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      98: ifge          111
     101: new           #6                  // class javax/jms/InvalidDestinationException
     104: dup
     105: ldc           #23                 // String Cannot use a Temporary destination from another Connection
     107: invokespecial #8                  // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: aload_1
     112: aload_3
     113: invokevirtual #24                 // Method org/apache/activemq/ActiveMQConnection.isDeleted:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     116: ifeq          129
     119: new           #6                  // class javax/jms/InvalidDestinationException
     122: dup
     123: ldc           #25                 // String Cannot use a Temporary destination that has been deleted
     125: invokespecial #8                  // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: lload         8
     131: ldc2_w        #26                 // long -1l
     134: lcmp
     135: ifge          148
     138: new           #11                 // class java/lang/IllegalArgumentException
     141: dup
     142: ldc           #28                 // String Timeout must be >= -1
     144: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     147: athrow
     148: aload_0
     149: lload         8
     151: putfield      #29                 // Field timeout:J
     154: aload_0
     155: new           #30                 // class org/apache/activemq/command/ConsumerInfo
     158: dup
     159: aload_2
     160: invokespecial #31                 // Method org/apache/activemq/command/ConsumerInfo."<init>":(Lorg/apache/activemq/command/ConsumerId;)V
     163: putfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     166: aload_0
     167: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     170: aload         6
     172: invokevirtual #33                 // Method org/apache/activemq/command/ConsumerInfo.setSubscriptionName:(Ljava/lang/String;)V
     175: aload         4
     177: ifnull        221
     180: aload         4
     182: invokevirtual #34                 // Method java/lang/String.trim:()Ljava/lang/String;
     185: invokevirtual #35                 // Method java/lang/String.length:()I
     188: ifeq          221
     191: new           #12                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #36                 // String JMSType=\'org.apache.activemq.Stream\' AND (
     200: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload         4
     205: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: ldc           #37                 // String  )
     210: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     216: astore        4
     218: goto          225
     221: ldc           #38                 // String JMSType=\'org.apache.activemq.Stream\'
     223: astore        4
     225: aload         4
     227: invokestatic  #39                 // Method org/apache/activemq/selector/SelectorParser.parse:(Ljava/lang/String;)Lorg/apache/activemq/filter/BooleanExpression;
     230: pop
     231: aload_0
     232: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     235: aload         4
     237: invokevirtual #40                 // Method org/apache/activemq/command/ConsumerInfo.setSelector:(Ljava/lang/String;)V
     240: aload_0
     241: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     244: iload         7
     246: invokevirtual #41                 // Method org/apache/activemq/command/ConsumerInfo.setPrefetchSize:(I)V
     249: aload_0
     250: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     253: iload         5
     255: invokevirtual #42                 // Method org/apache/activemq/command/ConsumerInfo.setNoLocal:(Z)V
     258: aload_0
     259: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     262: iconst_0
     263: invokevirtual #43                 // Method org/apache/activemq/command/ConsumerInfo.setBrowser:(Z)V
     266: aload_0
     267: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     270: iconst_0
     271: invokevirtual #44                 // Method org/apache/activemq/command/ConsumerInfo.setDispatchAsync:(Z)V
     274: aload_3
     275: invokevirtual #45                 // Method org/apache/activemq/command/ActiveMQDestination.getOptions:()Ljava/util/Map;
     278: ifnull        306
     281: new           #46                 // class java/util/HashMap
     284: dup
     285: aload_3
     286: invokevirtual #45                 // Method org/apache/activemq/command/ActiveMQDestination.getOptions:()Ljava/util/Map;
     289: invokespecial #47                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     292: astore        10
     294: aload_0
     295: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     298: aload         10
     300: ldc           #48                 // String consumer.
     302: invokestatic  #49                 // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)Z
     305: pop
     306: aload_0
     307: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     310: aload_3
     311: invokevirtual #50                 // Method org/apache/activemq/command/ConsumerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     314: aload_0
     315: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     318: aload_0
     319: invokevirtual #51                 // Method org/apache/activemq/ActiveMQConnection.addInputStream:(Lorg/apache/activemq/ActiveMQInputStream;)V
     322: aload_0
     323: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     326: aload_0
     327: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     330: invokevirtual #52                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     333: aload_0
     334: invokevirtual #53                 // Method org/apache/activemq/ActiveMQConnection.addDispatcher:(Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/ActiveMQDispatcher;)V
     337: aload_0
     338: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     341: aload_0
     342: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     345: invokevirtual #54                 // Method org/apache/activemq/ActiveMQConnection.syncSendPacket:(Lorg/apache/activemq/command/Command;)Lorg/apache/activemq/command/Response;
     348: pop
     349: aload_0
     350: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
     353: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.start:()V
     358: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isClosed:()Z
       9: ifne          72
      12: aload_0
      13: getfield      #57                 // Field lastDelivered:Lorg/apache/activemq/command/MessageDispatch;
      16: ifnull        44
      19: new           #58                 // class org/apache/activemq/command/MessageAck
      22: dup
      23: aload_0
      24: getfield      #57                 // Field lastDelivered:Lorg/apache/activemq/command/MessageDispatch;
      27: iconst_2
      28: aload_0
      29: getfield      #59                 // Field deliveredCounter:I
      32: invokespecial #60                 // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
      35: astore_1
      36: aload_0
      37: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      40: aload_1
      41: invokevirtual #61                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
      44: aload_0
      45: invokevirtual #62                 // Method dispose:()V
      48: aload_0
      49: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      52: aload_0
      53: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      56: invokevirtual #63                 // Method org/apache/activemq/command/ConsumerInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      59: invokevirtual #54                 // Method org/apache/activemq/ActiveMQConnection.syncSendPacket:(Lorg/apache/activemq/command/Command;)Lorg/apache/activemq/command/Response;
      62: pop
      63: goto          72
      66: astore_1
      67: aload_1
      68: invokestatic  #65                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Exception;)Ljava/io/IOException;
      71: athrow
      72: return
    Exception table:
       from    to  target type
          12    63    66   Class javax/jms/JMSException

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isClosed:()Z
       9: ifne          43
      12: aload_0
      13: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
      16: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.close:()V
      21: aload_0
      22: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      25: aload_0
      26: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      29: invokevirtual #52                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      32: invokevirtual #67                 // Method org/apache/activemq/ActiveMQConnection.removeDispatcher:(Lorg/apache/activemq/command/ConsumerId;)V
      35: aload_0
      36: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      39: aload_0
      40: invokevirtual #68                 // Method org/apache/activemq/ActiveMQConnection.removeInputStream:(Lorg/apache/activemq/ActiveMQInputStream;)V
      43: return

  public java.util.Map<java.lang.String, java.lang.Object> getJMSProperties() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #69                 // Field jmsProperties:Ljava/util/Map;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #70                 // Method fillBuffer:()V
      11: aload_0
      12: getfield      #69                 // Field jmsProperties:Ljava/util/Map;
      15: areturn

  public org.apache.activemq.command.ActiveMQMessage receive() throws javax.jms.JMSException, org.apache.activemq.ActiveMQInputStream$ReadTimeoutException;
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #72                 // Field firstReceived:Z
       8: ifne          22
      11: aload_0
      12: getfield      #29                 // Field timeout:J
      15: ldc2_w        #26                 // long -1l
      18: lcmp
      19: ifne          43
      22: aload_0
      23: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
      26: ldc2_w        #26                 // long -1l
      29: invokeinterface #73,  3           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.dequeue:(J)Lorg/apache/activemq/command/MessageDispatch;
      34: astore_1
      35: aload_0
      36: iconst_1
      37: putfield      #72                 // Field firstReceived:Z
      40: goto          70
      43: aload_0
      44: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
      47: aload_0
      48: getfield      #29                 // Field timeout:J
      51: invokeinterface #73,  3           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.dequeue:(J)Lorg/apache/activemq/command/MessageDispatch;
      56: astore_1
      57: aload_1
      58: ifnonnull     70
      61: new           #74                 // class org/apache/activemq/ActiveMQInputStream$ReadTimeoutException
      64: dup
      65: aload_0
      66: invokespecial #75                 // Method org/apache/activemq/ActiveMQInputStream$ReadTimeoutException."<init>":(Lorg/apache/activemq/ActiveMQInputStream;)V
      69: athrow
      70: goto          85
      73: astore_2
      74: invokestatic  #77                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      77: invokevirtual #78                 // Method java/lang/Thread.interrupt:()V
      80: aload_2
      81: invokestatic  #79                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      84: athrow
      85: aload_1
      86: ifnull        111
      89: aload_0
      90: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
      93: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isClosed:()Z
      98: ifne          111
     101: aload_1
     102: invokevirtual #80                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     105: invokevirtual #81                 // Method org/apache/activemq/command/Message.isExpired:()Z
     108: ifeq          113
     111: aconst_null
     112: areturn
     113: aload_0
     114: dup
     115: getfield      #59                 // Field deliveredCounter:I
     118: iconst_1
     119: iadd
     120: putfield      #59                 // Field deliveredCounter:I
     123: ldc2_w        #82                 // double 0.75d
     126: aload_0
     127: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
     130: invokevirtual #84                 // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
     133: i2d
     134: dmul
     135: aload_0
     136: getfield      #59                 // Field deliveredCounter:I
     139: i2d
     140: dcmpg
     141: ifgt          179
     144: new           #58                 // class org/apache/activemq/command/MessageAck
     147: dup
     148: aload_1
     149: iconst_2
     150: aload_0
     151: getfield      #59                 // Field deliveredCounter:I
     154: invokespecial #60                 // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
     157: astore_2
     158: aload_0
     159: getfield      #5                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     162: aload_2
     163: invokevirtual #61                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     166: aload_0
     167: iconst_0
     168: putfield      #59                 // Field deliveredCounter:I
     171: aload_0
     172: aconst_null
     173: putfield      #57                 // Field lastDelivered:Lorg/apache/activemq/command/MessageDispatch;
     176: goto          184
     179: aload_0
     180: aload_1
     181: putfield      #57                 // Field lastDelivered:Lorg/apache/activemq/command/MessageDispatch;
     184: aload_1
     185: invokevirtual #80                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     188: checkcast     #85                 // class org/apache/activemq/command/ActiveMQMessage
     191: areturn
    Exception table:
       from    to  target type
           4    70    73   Class java/lang/InterruptedException

  protected void checkClosed() throws javax.jms.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
       4: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/MessageDispatchChannel.isClosed:()Z
       9: ifeq          22
      12: new           #86                 // class javax/jms/IllegalStateException
      15: dup
      16: ldc           #87                 // String The Consumer is closed
      18: invokespecial #88                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #70                 // Method fillBuffer:()V
       4: aload_0
       5: getfield      #89                 // Field eosReached:Z
       8: ifne          19
      11: aload_0
      12: getfield      #90                 // Field buffer:[B
      15: arraylength
      16: ifne          21
      19: iconst_m1
      20: ireturn
      21: aload_0
      22: getfield      #90                 // Field buffer:[B
      25: aload_0
      26: dup
      27: getfield      #91                 // Field pos:I
      30: dup_x1
      31: iconst_1
      32: iadd
      33: putfield      #91                 // Field pos:I
      36: baload
      37: sipush        255
      40: iand
      41: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #70                 // Method fillBuffer:()V
       4: aload_0
       5: getfield      #89                 // Field eosReached:Z
       8: ifne          19
      11: aload_0
      12: getfield      #90                 // Field buffer:[B
      15: arraylength
      16: ifne          21
      19: iconst_m1
      20: ireturn
      21: iload_3
      22: aload_0
      23: getfield      #90                 // Field buffer:[B
      26: arraylength
      27: aload_0
      28: getfield      #91                 // Field pos:I
      31: isub
      32: invokestatic  #92                 // Method java/lang/Math.min:(II)I
      35: istore        4
      37: aload_0
      38: getfield      #90                 // Field buffer:[B
      41: aload_0
      42: getfield      #91                 // Field pos:I
      45: aload_1
      46: iload_2
      47: iload         4
      49: invokestatic  #93                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      52: aload_0
      53: dup
      54: getfield      #91                 // Field pos:I
      57: iload         4
      59: iadd
      60: putfield      #91                 // Field pos:I
      63: iload         4
      65: ireturn

  private void fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field eosReached:Z
       4: ifne          26
       7: aload_0
       8: getfield      #90                 // Field buffer:[B
      11: ifnull        27
      14: aload_0
      15: getfield      #90                 // Field buffer:[B
      18: arraylength
      19: aload_0
      20: getfield      #91                 // Field pos:I
      23: if_icmple     27
      26: return
      27: aload_0
      28: invokevirtual #94                 // Method receive:()Lorg/apache/activemq/command/ActiveMQMessage;
      31: astore_1
      32: aload_1
      33: ifnull        265
      36: aload_1
      37: invokevirtual #95                 // Method org/apache/activemq/command/ActiveMQMessage.getDataStructureType:()B
      40: bipush        24
      42: if_icmpne     265
      45: aload_1
      46: invokevirtual #96                 // Method org/apache/activemq/command/ActiveMQMessage.getMessageId:()Lorg/apache/activemq/command/MessageId;
      49: invokevirtual #97                 // Method org/apache/activemq/command/MessageId.getProducerSequenceId:()J
      52: lstore_2
      53: aload_0
      54: getfield      #98                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
      57: ifnonnull     93
      60: lload_2
      61: lconst_0
      62: lcmp
      63: ifeq          69
      66: goto          27
      69: aload_0
      70: dup
      71: getfield      #99                 // Field nextSequenceId:J
      74: lconst_1
      75: ladd
      76: putfield      #99                 // Field nextSequenceId:J
      79: aload_0
      80: aload_1
      81: invokevirtual #96                 // Method org/apache/activemq/command/ActiveMQMessage.getMessageId:()Lorg/apache/activemq/command/MessageId;
      84: invokevirtual #100                // Method org/apache/activemq/command/MessageId.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      87: putfield      #98                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
      90: goto          203
      93: aload_1
      94: invokevirtual #96                 // Method org/apache/activemq/command/ActiveMQMessage.getMessageId:()Lorg/apache/activemq/command/MessageId;
      97: invokevirtual #100                // Method org/apache/activemq/command/MessageId.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     100: aload_0
     101: getfield      #98                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
     104: invokevirtual #101                // Method org/apache/activemq/command/ProducerId.equals:(Ljava/lang/Object;)Z
     107: ifne          137
     110: new           #102                // class java/io/IOException
     113: dup
     114: new           #12                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #103                // String Received an unexpected message: invalid producer:
     123: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_1
     127: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokespecial #104                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     136: athrow
     137: lload_2
     138: aload_0
     139: dup
     140: getfield      #99                 // Field nextSequenceId:J
     143: dup2_x1
     144: lconst_1
     145: ladd
     146: putfield      #99                 // Field nextSequenceId:J
     149: lcmp
     150: ifeq          203
     153: new           #102                // class java/io/IOException
     156: dup
     157: new           #12                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #105                // String Received an unexpected message: expected ID:
     166: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload_0
     170: getfield      #99                 // Field nextSequenceId:J
     173: lconst_1
     174: lsub
     175: invokevirtual #106                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     178: ldc           #107                // String  but was:
     180: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: lload_2
     184: invokevirtual #106                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     187: ldc           #108                // String  for message:
     189: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload_1
     193: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     196: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: invokespecial #104                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     202: athrow
     203: aload_1
     204: checkcast     #109                // class org/apache/activemq/command/ActiveMQBytesMessage
     207: astore        4
     209: aload_0
     210: aload         4
     212: invokevirtual #110                // Method org/apache/activemq/command/ActiveMQBytesMessage.getBodyLength:()J
     215: l2i
     216: newarray       byte
     218: putfield      #90                 // Field buffer:[B
     221: aload         4
     223: aload_0
     224: getfield      #90                 // Field buffer:[B
     227: invokevirtual #111                // Method org/apache/activemq/command/ActiveMQBytesMessage.readBytes:([B)I
     230: pop
     231: aload_0
     232: iconst_0
     233: putfield      #91                 // Field pos:I
     236: aload_0
     237: getfield      #69                 // Field jmsProperties:Ljava/util/Map;
     240: ifnonnull     262
     243: aload_0
     244: new           #46                 // class java/util/HashMap
     247: dup
     248: aload         4
     250: invokevirtual #112                // Method org/apache/activemq/command/ActiveMQBytesMessage.getProperties:()Ljava/util/Map;
     253: invokespecial #47                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     256: invokestatic  #113                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     259: putfield      #69                 // Field jmsProperties:Ljava/util/Map;
     262: goto          284
     265: aload_0
     266: iconst_1
     267: putfield      #89                 // Field eosReached:Z
     270: aload_0
     271: getfield      #69                 // Field jmsProperties:Ljava/util/Map;
     274: ifnonnull     284
     277: aload_0
     278: invokestatic  #114                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     281: putfield      #69                 // Field jmsProperties:Ljava/util/Map;
     284: return
     285: astore_1
     286: aload_0
     287: iconst_1
     288: putfield      #89                 // Field eosReached:Z
     291: aload_0
     292: getfield      #69                 // Field jmsProperties:Ljava/util/Map;
     295: ifnonnull     305
     298: aload_0
     299: invokestatic  #114                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     302: putfield      #69                 // Field jmsProperties:Ljava/util/Map;
     305: aload_1
     306: invokestatic  #65                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Exception;)Ljava/io/IOException;
     309: athrow
    Exception table:
       from    to  target type
          27   284   285   Class javax/jms/JMSException

  public void dispatch(org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: getfield      #4                  // Field unconsumedMessages:Lorg/apache/activemq/MessageDispatchChannel;
       4: aload_1
       5: invokeinterface #115,  2          // InterfaceMethod org/apache/activemq/MessageDispatchChannel.enqueue:(Lorg/apache/activemq/command/MessageDispatch;)V
      10: return

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #116                // String ActiveMQInputStream { value=
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #32                 // Field info:Lorg/apache/activemq/command/ConsumerInfo;
      16: invokevirtual #52                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      19: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #117                // String , producerId=
      24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #98                 // Field producerId:Lorg/apache/activemq/command/ProducerId;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #118                // String  }
      36: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn
}
