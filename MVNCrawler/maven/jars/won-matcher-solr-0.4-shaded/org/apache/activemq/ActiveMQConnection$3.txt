Compiled from "ActiveMQConnection.java"
class org.apache.activemq.ActiveMQConnection$3 extends org.apache.activemq.state.CommandVisitorAdapter {
  final org.apache.activemq.command.Command val$command;

  final org.apache.activemq.ActiveMQConnection this$0;

  org.apache.activemq.ActiveMQConnection$3(org.apache.activemq.ActiveMQConnection, org.apache.activemq.command.Command);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$command:Lorg/apache/activemq/command/Command;
      10: aload_0
      11: invokespecial #3                  // Method org/apache/activemq/state/CommandVisitorAdapter."<init>":()V
      14: return

  public org.apache.activemq.command.Response processMessageDispatch(org.apache.activemq.command.MessageDispatch) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       4: invokevirtual #4                  // Method org/apache/activemq/ActiveMQConnection.waitForTransportInterruptionProcessingToComplete:()V
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
      11: invokestatic  #5                  // Method org/apache/activemq/ActiveMQConnection.access$300:(Lorg/apache/activemq/ActiveMQConnection;)Ljava/util/concurrent/ConcurrentHashMap;
      14: aload_1
      15: invokevirtual #6                  // Method org/apache/activemq/command/MessageDispatch.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      18: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #8                  // class org/apache/activemq/ActiveMQDispatcher
      24: astore_2
      25: aload_2
      26: ifnull        89
      29: aload_1
      30: invokevirtual #9                  // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      33: astore_3
      34: aload_3
      35: ifnull        79
      38: aload_3
      39: invokevirtual #10                 // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
      42: astore_3
      43: aload_3
      44: iconst_1
      45: invokevirtual #11                 // Method org/apache/activemq/command/Message.setReadOnlyBody:(Z)V
      48: aload_3
      49: iconst_1
      50: invokevirtual #12                 // Method org/apache/activemq/command/Message.setReadOnlyProperties:(Z)V
      53: aload_3
      54: aload_1
      55: invokevirtual #13                 // Method org/apache/activemq/command/MessageDispatch.getRedeliveryCounter:()I
      58: invokevirtual #14                 // Method org/apache/activemq/command/Message.setRedeliveryCounter:(I)V
      61: aload_3
      62: aload_0
      63: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
      66: invokevirtual #15                 // Method org/apache/activemq/command/Message.setConnection:(Lorg/apache/activemq/ActiveMQConnection;)V
      69: aload_3
      70: aconst_null
      71: invokevirtual #16                 // Method org/apache/activemq/command/Message.setMemoryUsage:(Lorg/apache/activemq/usage/MemoryUsage;)V
      74: aload_1
      75: aload_3
      76: invokevirtual #17                 // Method org/apache/activemq/command/MessageDispatch.setMessage:(Lorg/apache/activemq/command/Message;)V
      79: aload_2
      80: aload_1
      81: invokeinterface #18,  2           // InterfaceMethod org/apache/activemq/ActiveMQDispatcher.dispatch:(Lorg/apache/activemq/command/MessageDispatch;)V
      86: goto          121
      89: invokestatic  #19                 // Method org/apache/activemq/ActiveMQConnection.access$100:()Lorg/slf4j/Logger;
      92: ldc           #20                 // String {} no dispatcher for {} in {}
      94: iconst_3
      95: anewarray     #21                 // class java/lang/Object
      98: dup
      99: iconst_0
     100: aload_0
     101: aastore
     102: dup
     103: iconst_1
     104: aload_1
     105: aastore
     106: dup
     107: iconst_2
     108: aload_0
     109: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
     112: invokestatic  #5                  // Method org/apache/activemq/ActiveMQConnection.access$300:(Lorg/apache/activemq/ActiveMQConnection;)Ljava/util/concurrent/ConcurrentHashMap;
     115: aastore
     116: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     121: aconst_null
     122: areturn

  public org.apache.activemq.command.Response processProducerAck(org.apache.activemq.command.ProducerAck) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        38
       4: aload_1
       5: invokevirtual #23                 // Method org/apache/activemq/command/ProducerAck.getProducerId:()Lorg/apache/activemq/command/ProducerId;
       8: ifnull        38
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
      15: invokestatic  #24                 // Method org/apache/activemq/ActiveMQConnection.access$400:(Lorg/apache/activemq/ActiveMQConnection;)Ljava/util/concurrent/ConcurrentHashMap;
      18: aload_1
      19: invokevirtual #23                 // Method org/apache/activemq/command/ProducerAck.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      22: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #25                 // class org/apache/activemq/ActiveMQMessageProducer
      28: astore_2
      29: aload_2
      30: ifnull        38
      33: aload_2
      34: aload_1
      35: invokevirtual #26                 // Method org/apache/activemq/ActiveMQMessageProducer.onProducerAck:(Lorg/apache/activemq/command/ProducerAck;)V
      38: aconst_null
      39: areturn

  public org.apache.activemq.command.Response processBrokerInfo(org.apache.activemq.command.BrokerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_1
       5: invokestatic  #27                 // Method org/apache/activemq/ActiveMQConnection.access$502:(Lorg/apache/activemq/ActiveMQConnection;Lorg/apache/activemq/command/BrokerInfo;)Lorg/apache/activemq/command/BrokerInfo;
       8: pop
       9: aload_0
      10: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
      13: invokestatic  #28                 // Method org/apache/activemq/ActiveMQConnection.access$600:(Lorg/apache/activemq/ActiveMQConnection;)Ljava/util/concurrent/CountDownLatch;
      16: invokevirtual #29                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      19: aload_0
      20: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
      23: aload_0
      24: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
      27: invokestatic  #30                 // Method org/apache/activemq/ActiveMQConnection.access$500:(Lorg/apache/activemq/ActiveMQConnection;)Lorg/apache/activemq/command/BrokerInfo;
      30: invokevirtual #31                 // Method org/apache/activemq/command/BrokerInfo.isFaultTolerantConfiguration:()Z
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: invokestatic  #32                 // Method org/apache/activemq/ActiveMQConnection.access$772:(Lorg/apache/activemq/ActiveMQConnection;I)Z
      44: pop
      45: aload_0
      46: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
      49: invokevirtual #33                 // Method org/apache/activemq/ActiveMQConnection.getBlobTransferPolicy:()Lorg/apache/activemq/blob/BlobTransferPolicy;
      52: aload_1
      53: invokevirtual #34                 // Method org/apache/activemq/command/BrokerInfo.getBrokerUploadUrl:()Ljava/lang/String;
      56: invokevirtual #35                 // Method org/apache/activemq/blob/BlobTransferPolicy.setBrokerUploadUrl:(Ljava/lang/String;)V
      59: aconst_null
      60: areturn

  public org.apache.activemq.command.Response processConnectionError(org.apache.activemq.command.ConnectionError) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       4: invokestatic  #36                 // Method org/apache/activemq/ActiveMQConnection.access$800:(Lorg/apache/activemq/ActiveMQConnection;)Ljava/util/concurrent/ThreadPoolExecutor;
       7: new           #37                 // class org/apache/activemq/ActiveMQConnection$3$1
      10: dup
      11: aload_0
      12: aload_1
      13: invokespecial #38                 // Method org/apache/activemq/ActiveMQConnection$3$1."<init>":(Lorg/apache/activemq/ActiveMQConnection$3;Lorg/apache/activemq/command/ConnectionError;)V
      16: invokevirtual #39                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      19: aconst_null
      20: areturn

  public org.apache.activemq.command.Response processControlCommand(org.apache.activemq.command.ControlCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_1
       5: invokevirtual #40                 // Method org/apache/activemq/ActiveMQConnection.onControlCommand:(Lorg/apache/activemq/command/ControlCommand;)V
       8: aconst_null
       9: areturn

  public org.apache.activemq.command.Response processConnectionControl(org.apache.activemq.command.ConnectionControl) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_0
       5: getfield      #2                  // Field val$command:Lorg/apache/activemq/command/Command;
       8: checkcast     #41                 // class org/apache/activemq/command/ConnectionControl
      11: invokevirtual #42                 // Method org/apache/activemq/ActiveMQConnection.onConnectionControl:(Lorg/apache/activemq/command/ConnectionControl;)V
      14: aconst_null
      15: areturn

  public org.apache.activemq.command.Response processConsumerControl(org.apache.activemq.command.ConsumerControl) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_0
       5: getfield      #2                  // Field val$command:Lorg/apache/activemq/command/Command;
       8: checkcast     #43                 // class org/apache/activemq/command/ConsumerControl
      11: invokevirtual #44                 // Method org/apache/activemq/ActiveMQConnection.onConsumerControl:(Lorg/apache/activemq/command/ConsumerControl;)V
      14: aconst_null
      15: areturn

  public org.apache.activemq.command.Response processWireFormat(org.apache.activemq.command.WireFormatInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQConnection;
       4: aload_0
       5: getfield      #2                  // Field val$command:Lorg/apache/activemq/command/Command;
       8: checkcast     #45                 // class org/apache/activemq/command/WireFormatInfo
      11: invokevirtual #46                 // Method org/apache/activemq/ActiveMQConnection.onWireFormatInfo:(Lorg/apache/activemq/command/WireFormatInfo;)V
      14: aconst_null
      15: areturn
}
