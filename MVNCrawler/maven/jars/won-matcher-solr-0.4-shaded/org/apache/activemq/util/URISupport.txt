Compiled from "URISupport.java"
public class org.apache.activemq.util.URISupport {
  public org.apache.activemq.util.URISupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<java.lang.String, java.lang.String> parseQuery(java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_0
       2: ldc           #2                  // String ?
       4: invokevirtual #3                  // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
       7: iconst_1
       8: iadd
       9: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      12: astore_0
      13: new           #5                  // class java/util/HashMap
      16: dup
      17: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      20: astore_1
      21: aload_0
      22: ifnull        126
      25: aload_0
      26: invokevirtual #7                  // Method java/lang/String.isEmpty:()Z
      29: ifne          126
      32: aload_0
      33: ldc           #8                  // String &
      35: invokevirtual #9                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      38: astore_2
      39: iconst_0
      40: istore_3
      41: iload_3
      42: aload_2
      43: arraylength
      44: if_icmpge     126
      47: aload_2
      48: iload_3
      49: aaload
      50: ldc           #10                 // String =
      52: invokevirtual #11                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      55: istore        4
      57: iload         4
      59: iflt          109
      62: aload_2
      63: iload_3
      64: aaload
      65: iconst_0
      66: iload         4
      68: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      71: ldc           #13                 // String UTF-8
      73: invokestatic  #14                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      76: astore        5
      78: aload_2
      79: iload_3
      80: aaload
      81: iload         4
      83: iconst_1
      84: iadd
      85: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      88: ldc           #13                 // String UTF-8
      90: invokestatic  #14                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      93: astore        6
      95: aload_1
      96: aload         5
      98: aload         6
     100: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: goto          120
     109: aload_1
     110: aload_2
     111: iload_3
     112: aaload
     113: aconst_null
     114: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: iinc          3, 1
     123: goto          41
     126: aload_1
     127: areturn
     128: astore_1
     129: new           #17                 // class java/net/URISyntaxException
     132: dup
     133: aload_1
     134: invokevirtual #18                 // Method java/io/UnsupportedEncodingException.toString:()Ljava/lang/String;
     137: ldc           #19                 // String Invalid encoding
     139: invokespecial #20                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     142: aload_1
     143: invokevirtual #21                 // Method java/net/URISyntaxException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     146: checkcast     #17                 // class java/net/URISyntaxException
     149: athrow
    Exception table:
       from    to  target type
           0   127   128   Class java/io/UnsupportedEncodingException

  public static java.util.Map<java.lang.String, java.lang.String> parseParameters(java.net.URI) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method isCompositeURI:(Ljava/net/URI;)Z
       4: ifne          33
       7: aload_0
       8: invokevirtual #23                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      11: ifnonnull     20
      14: invokestatic  #24                 // Method emptyMap:()Ljava/util/Map;
      17: goto          32
      20: aload_0
      21: invokevirtual #23                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      24: ldc           #2                  // String ?
      26: invokestatic  #25                 // Method stripPrefix:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: invokestatic  #26                 // Method parseQuery:(Ljava/lang/String;)Ljava/util/Map;
      32: areturn
      33: aload_0
      34: invokestatic  #27                 // Method parseComposite:(Ljava/net/URI;)Lorg/apache/activemq/util/URISupport$CompositeData;
      37: astore_1
      38: new           #5                  // class java/util/HashMap
      41: dup
      42: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      45: astore_2
      46: aload_2
      47: aload_1
      48: invokevirtual #28                 // Method org/apache/activemq/util/URISupport$CompositeData.getParameters:()Ljava/util/Map;
      51: invokeinterface #29,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      56: aload_2
      57: invokeinterface #30,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      62: ifeq          69
      65: invokestatic  #24                 // Method emptyMap:()Ljava/util/Map;
      68: astore_2
      69: aload_2
      70: areturn

  public static java.net.URI applyParameters(java.net.URI, java.util.Map<java.lang.String, java.lang.String>) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #31                 // String
       4: invokestatic  #32                 // Method applyParameters:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/String;)Ljava/net/URI;
       7: areturn

  public static java.net.URI applyParameters(java.net.URI, java.util.Map<java.lang.String, java.lang.String>, java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_1
       1: ifnull        164
       4: aload_1
       5: invokeinterface #30,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifne          164
      13: aload_0
      14: invokevirtual #33                 // Method java/net/URI.getRawQuery:()Ljava/lang/String;
      17: ifnull        34
      20: new           #34                 // class java/lang/StringBuffer
      23: dup
      24: aload_0
      25: invokevirtual #33                 // Method java/net/URI.getRawQuery:()Ljava/lang/String;
      28: invokespecial #35                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      31: goto          41
      34: new           #34                 // class java/lang/StringBuffer
      37: dup
      38: invokespecial #36                 // Method java/lang/StringBuffer."<init>":()V
      41: astore_3
      42: aload_1
      43: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      48: invokeinterface #38,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      53: astore        4
      55: aload         4
      57: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          155
      65: aload         4
      67: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #41                 // class java/util/Map$Entry
      75: astore        5
      77: aload         5
      79: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      84: checkcast     #43                 // class java/lang/String
      87: aload_2
      88: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      91: ifeq          152
      94: aload_3
      95: invokevirtual #45                 // Method java/lang/StringBuffer.length:()I
      98: ifeq          108
     101: aload_3
     102: bipush        38
     104: invokevirtual #46                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     107: pop
     108: aload         5
     110: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     115: checkcast     #43                 // class java/lang/String
     118: aload_2
     119: invokevirtual #47                 // Method java/lang/String.length:()I
     122: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     125: astore        6
     127: aload_3
     128: aload         6
     130: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     133: bipush        61
     135: invokevirtual #46                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     138: aload         5
     140: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     145: checkcast     #43                 // class java/lang/String
     148: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     151: pop
     152: goto          55
     155: aload_0
     156: aload_3
     157: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     160: invokestatic  #51                 // Method createURIWithQuery:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;
     163: astore_0
     164: aload_0
     165: areturn

  private static java.util.Map<java.lang.String, java.lang.String> emptyMap();
    Code:
       0: getstatic     #52                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
       3: areturn

  public static java.net.URI removeQuery(java.net.URI) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #51                 // Method createURIWithQuery:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;
       5: areturn

  public static java.net.URI createURIWithQuery(java.net.URI, java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method java/net/URI.getRawSchemeSpecificPart:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #2                  // String ?
       8: invokevirtual #3                  // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      11: istore_3
      12: iload_3
      13: aload_2
      14: ldc           #54                 // String )
      16: invokevirtual #3                  // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      19: if_icmpge     24
      22: iconst_m1
      23: istore_3
      24: iload_3
      25: ifle          35
      28: aload_2
      29: iconst_0
      30: iload_3
      31: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      34: astore_2
      35: aload_1
      36: ifnull        70
      39: aload_1
      40: invokevirtual #47                 // Method java/lang/String.length:()I
      43: ifle          70
      46: new           #55                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      53: aload_2
      54: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #2                  // String ?
      59: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: astore_2
      70: new           #59                 // class java/net/URI
      73: dup
      74: aload_0
      75: invokevirtual #60                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      78: aload_2
      79: aload_0
      80: invokevirtual #61                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      83: invokespecial #62                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      86: areturn

  public static org.apache.activemq.util.URISupport$CompositeData parseComposite(java.net.URI) throws java.net.URISyntaxException;
    Code:
       0: new           #63                 // class org/apache/activemq/util/URISupport$CompositeData
       3: dup
       4: invokespecial #64                 // Method org/apache/activemq/util/URISupport$CompositeData."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #60                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      13: invokestatic  #65                 // Method org/apache/activemq/util/URISupport$CompositeData.access$002:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)Ljava/lang/String;
      16: pop
      17: aload_0
      18: invokevirtual #53                 // Method java/net/URI.getRawSchemeSpecificPart:()Ljava/lang/String;
      21: invokevirtual #66                 // Method java/lang/String.trim:()Ljava/lang/String;
      24: ldc           #67                 // String //
      26: invokestatic  #25                 // Method stripPrefix:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #66                 // Method java/lang/String.trim:()Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: aload_1
      35: aload_2
      36: invokestatic  #68                 // Method parseComposite:(Ljava/net/URI;Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)V
      39: aload_1
      40: aload_0
      41: invokevirtual #61                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      44: invokestatic  #69                 // Method org/apache/activemq/util/URISupport$CompositeData.access$102:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)Ljava/lang/String;
      47: pop
      48: aload_1
      49: areturn

  public static boolean isCompositeURI(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method java/net/URI.getRawSchemeSpecificPart:()Ljava/lang/String;
       4: invokevirtual #66                 // Method java/lang/String.trim:()Ljava/lang/String;
       7: ldc           #67                 // String //
       9: invokestatic  #25                 // Method stripPrefix:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: invokevirtual #66                 // Method java/lang/String.trim:()Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: bipush        40
      19: invokevirtual #70                 // Method java/lang/String.indexOf:(I)I
      22: ifne          34
      25: aload_1
      26: invokestatic  #71                 // Method checkParenthesis:(Ljava/lang/String;)Z
      29: ifeq          34
      32: iconst_1
      33: ireturn
      34: iconst_0
      35: ireturn

  public static int indexOfParenthesisMatch(java.lang.String, int) throws java.net.URISyntaxException;
    Code:
       0: iconst_m1
       1: istore_2
       2: iload_1
       3: iflt          14
       6: iload_1
       7: aload_0
       8: invokevirtual #47                 // Method java/lang/String.length:()I
      11: if_icmple     41
      14: new           #72                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #55                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #73                 // String Invalid position for first parenthesis:
      27: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #75                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: iload_1
      43: invokevirtual #76                 // Method java/lang/String.charAt:(I)C
      46: bipush        40
      48: if_icmpeq     61
      51: new           #72                 // class java/lang/IllegalArgumentException
      54: dup
      55: ldc           #77                 // String character at indicated position is not a parenthesis
      57: invokespecial #75                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: iconst_1
      62: istore_3
      63: aload_0
      64: invokevirtual #78                 // Method java/lang/String.toCharArray:()[C
      67: astore        4
      69: iload_1
      70: iconst_1
      71: iadd
      72: istore_2
      73: iload_2
      74: aload         4
      76: arraylength
      77: if_icmpge     122
      80: aload         4
      82: iload_2
      83: caload
      84: istore        5
      86: iload         5
      88: bipush        40
      90: if_icmpne     99
      93: iinc          3, 1
      96: goto          116
      99: iload         5
     101: bipush        41
     103: if_icmpne     116
     106: iinc          3, -1
     109: iload_3
     110: ifne          116
     113: goto          122
     116: iinc          2, 1
     119: goto          73
     122: iload_3
     123: ifeq          137
     126: new           #17                 // class java/net/URISyntaxException
     129: dup
     130: aload_0
     131: ldc           #79                 // String URI did not contain a matching parenthesis.
     133: invokespecial #20                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     136: athrow
     137: iload_2
     138: ireturn

  private static void parseComposite(java.net.URI, org.apache.activemq.util.URISupport$CompositeData, java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_2
       1: invokestatic  #71                 // Method checkParenthesis:(Ljava/lang/String;)Z
       4: ifne          21
       7: new           #17                 // class java/net/URISyntaxException
      10: dup
      11: aload_0
      12: invokevirtual #80                 // Method java/net/URI.toString:()Ljava/lang/String;
      15: ldc           #81                 // String Not a matching number of \'(\' and \')\' parenthesis
      17: invokespecial #20                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: athrow
      21: aload_2
      22: ldc           #82                 // String (
      24: invokevirtual #11                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      27: istore        6
      29: iload         6
      31: ifne          126
      34: aload_1
      35: aload_2
      36: iconst_0
      37: iload         6
      39: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      42: invokestatic  #83                 // Method org/apache/activemq/util/URISupport$CompositeData.access$202:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)Ljava/lang/String;
      45: pop
      46: aload_1
      47: invokestatic  #84                 // Method org/apache/activemq/util/URISupport$CompositeData.access$200:(Lorg/apache/activemq/util/URISupport$CompositeData;)Ljava/lang/String;
      50: ldc           #85                 // String /
      52: invokevirtual #11                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      55: istore        5
      57: iload         5
      59: iflt          91
      62: aload_1
      63: aload_1
      64: invokestatic  #84                 // Method org/apache/activemq/util/URISupport$CompositeData.access$200:(Lorg/apache/activemq/util/URISupport$CompositeData;)Ljava/lang/String;
      67: iload         5
      69: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      72: invokestatic  #86                 // Method org/apache/activemq/util/URISupport$CompositeData.access$302:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)Ljava/lang/String;
      75: pop
      76: aload_1
      77: aload_1
      78: invokestatic  #84                 // Method org/apache/activemq/util/URISupport$CompositeData.access$200:(Lorg/apache/activemq/util/URISupport$CompositeData;)Ljava/lang/String;
      81: iconst_0
      82: iload         5
      84: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      87: invokestatic  #83                 // Method org/apache/activemq/util/URISupport$CompositeData.access$202:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)Ljava/lang/String;
      90: pop
      91: aload_2
      92: iload         6
      94: invokestatic  #87                 // Method indexOfParenthesisMatch:(Ljava/lang/String;I)I
      97: istore        5
      99: aload_2
     100: iload         6
     102: iconst_1
     103: iadd
     104: iload         5
     106: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     109: astore_3
     110: aload_2
     111: iload         5
     113: iconst_1
     114: iadd
     115: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     118: invokevirtual #66                 // Method java/lang/String.trim:()Ljava/lang/String;
     121: astore        4
     123: goto          132
     126: aload_2
     127: astore_3
     128: ldc           #31                 // String
     130: astore        4
     132: aload_3
     133: invokestatic  #88                 // Method splitComponents:(Ljava/lang/String;)[Ljava/lang/String;
     136: astore        7
     138: aload_1
     139: aload         7
     141: arraylength
     142: anewarray     #59                 // class java/net/URI
     145: invokestatic  #89                 // Method org/apache/activemq/util/URISupport$CompositeData.access$402:(Lorg/apache/activemq/util/URISupport$CompositeData;[Ljava/net/URI;)[Ljava/net/URI;
     148: pop
     149: iconst_0
     150: istore        8
     152: iload         8
     154: aload         7
     156: arraylength
     157: if_icmpge     188
     160: aload_1
     161: invokestatic  #90                 // Method org/apache/activemq/util/URISupport$CompositeData.access$400:(Lorg/apache/activemq/util/URISupport$CompositeData;)[Ljava/net/URI;
     164: iload         8
     166: new           #59                 // class java/net/URI
     169: dup
     170: aload         7
     172: iload         8
     174: aaload
     175: invokevirtual #66                 // Method java/lang/String.trim:()Ljava/lang/String;
     178: invokespecial #91                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     181: aastore
     182: iinc          8, 1
     185: goto          152
     188: aload         4
     190: ldc           #2                  // String ?
     192: invokevirtual #11                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     195: istore        5
     197: iload         5
     199: iflt          245
     202: iload         5
     204: ifle          225
     207: aload_1
     208: aload         4
     210: iconst_0
     211: iload         5
     213: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     216: ldc           #85                 // String /
     218: invokestatic  #25                 // Method stripPrefix:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     221: invokestatic  #86                 // Method org/apache/activemq/util/URISupport$CompositeData.access$302:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)Ljava/lang/String;
     224: pop
     225: aload_1
     226: aload         4
     228: iload         5
     230: iconst_1
     231: iadd
     232: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     235: invokestatic  #26                 // Method parseQuery:(Ljava/lang/String;)Ljava/util/Map;
     238: invokestatic  #92                 // Method org/apache/activemq/util/URISupport$CompositeData.access$502:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/util/Map;)Ljava/util/Map;
     241: pop
     242: goto          273
     245: aload         4
     247: invokevirtual #47                 // Method java/lang/String.length:()I
     250: ifle          265
     253: aload_1
     254: aload         4
     256: ldc           #85                 // String /
     258: invokestatic  #25                 // Method stripPrefix:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     261: invokestatic  #86                 // Method org/apache/activemq/util/URISupport$CompositeData.access$302:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/lang/String;)Ljava/lang/String;
     264: pop
     265: aload_1
     266: invokestatic  #24                 // Method emptyMap:()Ljava/util/Map;
     269: invokestatic  #92                 // Method org/apache/activemq/util/URISupport$CompositeData.access$502:(Lorg/apache/activemq/util/URISupport$CompositeData;Ljava/util/Map;)Ljava/util/Map;
     272: pop
     273: return

  private static java.lang.String[] splitComponents(java.lang.String);
    Code:
       0: new           #93                 // class java/util/ArrayList
       3: dup
       4: invokespecial #94                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iconst_0
      11: istore_3
      12: aload_0
      13: invokevirtual #78                 // Method java/lang/String.toCharArray:()[C
      16: astore        4
      18: iconst_0
      19: istore        5
      21: iload         5
      23: aload         4
      25: arraylength
      26: if_icmpge     116
      29: aload         4
      31: iload         5
      33: caload
      34: tableswitch   { // 40 to 44
                    40: 68
                    41: 74
                    42: 110
                    43: 110
                    44: 80
               default: 110
          }
      68: iinc          3, 1
      71: goto          110
      74: iinc          3, -1
      77: goto          110
      80: iload_3
      81: ifne          110
      84: aload_0
      85: iload_2
      86: iload         5
      88: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      91: astore        6
      93: aload_1
      94: aload         6
      96: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     101: pop
     102: iload         5
     104: iconst_1
     105: iadd
     106: istore_2
     107: goto          110
     110: iinc          5, 1
     113: goto          21
     116: aload_0
     117: iload_2
     118: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     121: astore        5
     123: aload         5
     125: invokevirtual #47                 // Method java/lang/String.length:()I
     128: ifeq          140
     131: aload_1
     132: aload         5
     134: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     139: pop
     140: aload_1
     141: invokeinterface #96,  1           // InterfaceMethod java/util/List.size:()I
     146: anewarray     #43                 // class java/lang/String
     149: astore        6
     151: aload_1
     152: aload         6
     154: invokeinterface #97,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     159: pop
     160: aload         6
     162: areturn

  public static java.lang.String stripPrefix(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       5: ifeq          17
       8: aload_0
       9: aload_1
      10: invokevirtual #47                 // Method java/lang/String.length:()I
      13: invokevirtual #4                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      16: areturn
      17: aload_0
      18: areturn

  public static java.net.URI stripScheme(java.net.URI) throws java.net.URISyntaxException;
    Code:
       0: new           #59                 // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #98                 // Method java/net/URI.getSchemeSpecificPart:()Ljava/lang/String;
       8: invokevirtual #66                 // Method java/lang/String.trim:()Ljava/lang/String;
      11: ldc           #67                 // String //
      13: invokestatic  #25                 // Method stripPrefix:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      16: invokespecial #91                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      19: areturn

  public static java.lang.String createQueryString(java.util.Map<java.lang.String, ? extends java.lang.Object>) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokeinterface #99,  1           // InterfaceMethod java/util/Map.size:()I
       6: ifle          119
       9: new           #34                 // class java/lang/StringBuffer
      12: dup
      13: invokespecial #36                 // Method java/lang/StringBuffer."<init>":()V
      16: astore_1
      17: iconst_1
      18: istore_2
      19: aload_0
      20: invokeinterface #100,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      25: invokeinterface #38,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore_3
      31: aload_3
      32: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          114
      40: aload_3
      41: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #43                 // class java/lang/String
      49: astore        4
      51: iload_2
      52: ifeq          60
      55: iconst_0
      56: istore_2
      57: goto          67
      60: aload_1
      61: ldc           #8                  // String &
      63: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      66: pop
      67: aload_0
      68: aload         4
      70: invokeinterface #101,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #43                 // class java/lang/String
      78: astore        5
      80: aload_1
      81: aload         4
      83: ldc           #13                 // String UTF-8
      85: invokestatic  #102                // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      88: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      91: pop
      92: aload_1
      93: ldc           #10                 // String =
      95: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: pop
      99: aload_1
     100: aload         5
     102: ldc           #13                 // String UTF-8
     104: invokestatic  #102                // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     107: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     110: pop
     111: goto          31
     114: aload_1
     115: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     118: areturn
     119: ldc           #31                 // String
     121: areturn
     122: astore_1
     123: new           #17                 // class java/net/URISyntaxException
     126: dup
     127: aload_1
     128: invokevirtual #18                 // Method java/io/UnsupportedEncodingException.toString:()Ljava/lang/String;
     131: ldc           #19                 // String Invalid encoding
     133: invokespecial #20                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     136: aload_1
     137: invokevirtual #21                 // Method java/net/URISyntaxException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     140: checkcast     #17                 // class java/net/URISyntaxException
     143: athrow
    Exception table:
       from    to  target type
           0   118   122   Class java/io/UnsupportedEncodingException
         119   121   122   Class java/io/UnsupportedEncodingException

  public static java.net.URI createRemainingURI(java.net.URI, java.util.Map<java.lang.String, java.lang.String>) throws java.net.URISyntaxException;
    Code:
       0: aload_1
       1: invokestatic  #103                // Method createQueryString:(Ljava/util/Map;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokevirtual #47                 // Method java/lang/String.length:()I
       9: ifne          14
      12: aconst_null
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokestatic  #51                 // Method createURIWithQuery:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;
      19: areturn

  public static java.net.URI changeScheme(java.net.URI, java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: new           #59                 // class java/net/URI
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #104                // Method java/net/URI.getUserInfo:()Ljava/lang/String;
       9: aload_0
      10: invokevirtual #105                // Method java/net/URI.getHost:()Ljava/lang/String;
      13: aload_0
      14: invokevirtual #106                // Method java/net/URI.getPort:()I
      17: aload_0
      18: invokevirtual #107                // Method java/net/URI.getPath:()Ljava/lang/String;
      21: aload_0
      22: invokevirtual #23                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      25: aload_0
      26: invokevirtual #61                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      29: invokespecial #108                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: areturn

  public static boolean checkParenthesis(java.lang.String);
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: ifnull        73
       6: iconst_0
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_0
      14: bipush        40
      16: iload         4
      18: invokevirtual #109                // Method java/lang/String.indexOf:(II)I
      21: dup
      22: istore        4
      24: iflt          36
      27: iinc          4, 1
      30: iinc          2, 1
      33: goto          13
      36: iconst_0
      37: istore        4
      39: aload_0
      40: bipush        41
      42: iload         4
      44: invokevirtual #109                // Method java/lang/String.indexOf:(II)I
      47: dup
      48: istore        4
      50: iflt          62
      53: iinc          4, 1
      56: iinc          3, 1
      59: goto          39
      62: iload_2
      63: iload_3
      64: if_icmpne     71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: istore_1
      73: iload_1
      74: ireturn
}
