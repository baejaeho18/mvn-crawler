Compiled from "MarshallingSupport.java"
public final class org.apache.activemq.util.MarshallingSupport {
  public static final byte NULL;

  public static final byte BOOLEAN_TYPE;

  public static final byte BYTE_TYPE;

  public static final byte CHAR_TYPE;

  public static final byte SHORT_TYPE;

  public static final byte INTEGER_TYPE;

  public static final byte LONG_TYPE;

  public static final byte DOUBLE_TYPE;

  public static final byte FLOAT_TYPE;

  public static final byte STRING_TYPE;

  public static final byte BYTE_ARRAY_TYPE;

  public static final byte MAP_TYPE;

  public static final byte LIST_TYPE;

  public static final byte BIG_STRING_TYPE;

  private org.apache.activemq.util.MarshallingSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void marshalPrimitiveMap(java.util.Map<java.lang.String, java.lang.Object>, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     12
       4: aload_1
       5: iconst_m1
       6: invokevirtual #2                  // Method java/io/DataOutputStream.writeInt:(I)V
       9: goto          76
      12: aload_1
      13: aload_0
      14: invokeinterface #3,  1            // InterfaceMethod java/util/Map.size:()I
      19: invokevirtual #2                  // Method java/io/DataOutputStream.writeInt:(I)V
      22: aload_0
      23: invokeinterface #4,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      28: invokeinterface #5,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          76
      43: aload_2
      44: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #8                  // class java/lang/String
      52: astore_3
      53: aload_1
      54: aload_3
      55: invokevirtual #9                  // Method java/io/DataOutputStream.writeUTF:(Ljava/lang/String;)V
      58: aload_0
      59: aload_3
      60: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: astore        4
      67: aload_1
      68: aload         4
      70: invokestatic  #11                 // Method marshalPrimitive:(Ljava/io/DataOutputStream;Ljava/lang/Object;)V
      73: goto          34
      76: return

  public static java.util.Map<java.lang.String, java.lang.Object> unmarshalPrimitiveMap(java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #12                 // int 2147483647
       3: invokestatic  #13                 // Method unmarshalPrimitiveMap:(Ljava/io/DataInputStream;I)Ljava/util/Map;
       6: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> unmarshalPrimitiveMap(java.io.DataInputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #12                 // int 2147483647
       3: iload_1
       4: invokestatic  #14                 // Method unmarshalPrimitiveMap:(Ljava/io/DataInputStream;IZ)Ljava/util/Map;
       7: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> unmarshalPrimitiveMap(java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #14                 // Method unmarshalPrimitiveMap:(Ljava/io/DataInputStream;IZ)Ljava/util/Map;
       6: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> unmarshalPrimitiveMap(java.io.DataInputStream, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method java/io/DataInputStream.readInt:()I
       4: istore_3
       5: iload_3
       6: iload_1
       7: if_icmple     37
      10: new           #16                 // class java/io/IOException
      13: dup
      14: new           #17                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #19                 // String Primitive map is larger than the allowed size:
      23: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_3
      27: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_3
      38: ifge          43
      41: aconst_null
      42: areturn
      43: new           #24                 // class java/util/HashMap
      46: dup
      47: iload_3
      48: invokespecial #25                 // Method java/util/HashMap."<init>":(I)V
      51: astore        4
      53: iconst_0
      54: istore        5
      56: iload         5
      58: iload_3
      59: if_icmpge     89
      62: aload_0
      63: invokevirtual #26                 // Method java/io/DataInputStream.readUTF:()Ljava/lang/String;
      66: astore        6
      68: aload         4
      70: aload         6
      72: aload_0
      73: iload_2
      74: invokestatic  #27                 // Method unmarshalPrimitive:(Ljava/io/DataInputStream;Z)Ljava/lang/Object;
      77: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: iinc          5, 1
      86: goto          56
      89: aload         4
      91: areturn

  public static void marshalPrimitiveList(java.util.List<java.lang.Object>, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
       7: invokevirtual #2                  // Method java/io/DataOutputStream.writeInt:(I)V
      10: aload_0
      11: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          41
      26: aload_2
      27: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore_3
      33: aload_1
      34: aload_3
      35: invokestatic  #11                 // Method marshalPrimitive:(Ljava/io/DataOutputStream;Ljava/lang/Object;)V
      38: goto          17
      41: return

  public static java.util.List<java.lang.Object> unmarshalPrimitiveList(java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #31                 // Method unmarshalPrimitiveList:(Ljava/io/DataInputStream;Z)Ljava/util/List;
       5: areturn

  public static java.util.List<java.lang.Object> unmarshalPrimitiveList(java.io.DataInputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method java/io/DataInputStream.readInt:()I
       4: istore_2
       5: new           #32                 // class java/util/ArrayList
       8: dup
       9: iload_2
      10: invokespecial #33                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_3
      14: iload_2
      15: iinc          2, -1
      18: ifle          36
      21: aload_3
      22: aload_0
      23: iload_1
      24: invokestatic  #27                 // Method unmarshalPrimitive:(Ljava/io/DataInputStream;Z)Ljava/lang/Object;
      27: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: goto          14
      36: aload_3
      37: areturn

  public static void marshalPrimitive(java.io.DataOutputStream, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokestatic  #35                 // Method marshalNull:(Ljava/io/DataOutputStream;)V
       8: goto          344
      11: aload_1
      12: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: ldc_w         #37                 // class java/lang/Boolean
      18: if_acmpne     35
      21: aload_0
      22: aload_1
      23: checkcast     #37                 // class java/lang/Boolean
      26: invokevirtual #38                 // Method java/lang/Boolean.booleanValue:()Z
      29: invokestatic  #39                 // Method marshalBoolean:(Ljava/io/DataOutputStream;Z)V
      32: goto          344
      35: aload_1
      36: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: ldc_w         #40                 // class java/lang/Byte
      42: if_acmpne     59
      45: aload_0
      46: aload_1
      47: checkcast     #40                 // class java/lang/Byte
      50: invokevirtual #41                 // Method java/lang/Byte.byteValue:()B
      53: invokestatic  #42                 // Method marshalByte:(Ljava/io/DataOutputStream;B)V
      56: goto          344
      59: aload_1
      60: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: ldc_w         #43                 // class java/lang/Character
      66: if_acmpne     83
      69: aload_0
      70: aload_1
      71: checkcast     #43                 // class java/lang/Character
      74: invokevirtual #44                 // Method java/lang/Character.charValue:()C
      77: invokestatic  #45                 // Method marshalChar:(Ljava/io/DataOutputStream;C)V
      80: goto          344
      83: aload_1
      84: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      87: ldc_w         #46                 // class java/lang/Short
      90: if_acmpne     107
      93: aload_0
      94: aload_1
      95: checkcast     #46                 // class java/lang/Short
      98: invokevirtual #47                 // Method java/lang/Short.shortValue:()S
     101: invokestatic  #48                 // Method marshalShort:(Ljava/io/DataOutputStream;S)V
     104: goto          344
     107: aload_1
     108: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     111: ldc_w         #49                 // class java/lang/Integer
     114: if_acmpne     131
     117: aload_0
     118: aload_1
     119: checkcast     #49                 // class java/lang/Integer
     122: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
     125: invokestatic  #51                 // Method marshalInt:(Ljava/io/DataOutputStream;I)V
     128: goto          344
     131: aload_1
     132: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     135: ldc_w         #52                 // class java/lang/Long
     138: if_acmpne     155
     141: aload_0
     142: aload_1
     143: checkcast     #52                 // class java/lang/Long
     146: invokevirtual #53                 // Method java/lang/Long.longValue:()J
     149: invokestatic  #54                 // Method marshalLong:(Ljava/io/DataOutputStream;J)V
     152: goto          344
     155: aload_1
     156: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     159: ldc_w         #55                 // class java/lang/Float
     162: if_acmpne     179
     165: aload_0
     166: aload_1
     167: checkcast     #55                 // class java/lang/Float
     170: invokevirtual #56                 // Method java/lang/Float.floatValue:()F
     173: invokestatic  #57                 // Method marshalFloat:(Ljava/io/DataOutputStream;F)V
     176: goto          344
     179: aload_1
     180: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     183: ldc_w         #58                 // class java/lang/Double
     186: if_acmpne     203
     189: aload_0
     190: aload_1
     191: checkcast     #58                 // class java/lang/Double
     194: invokevirtual #59                 // Method java/lang/Double.doubleValue:()D
     197: invokestatic  #60                 // Method marshalDouble:(Ljava/io/DataOutputStream;D)V
     200: goto          344
     203: aload_1
     204: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     207: ldc_w         #61                 // class "[B"
     210: if_acmpne     227
     213: aload_0
     214: aload_1
     215: checkcast     #61                 // class "[B"
     218: checkcast     #61                 // class "[B"
     221: invokestatic  #62                 // Method marshalByteArray:(Ljava/io/DataOutputStream;[B)V
     224: goto          344
     227: aload_1
     228: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     231: ldc_w         #8                  // class java/lang/String
     234: if_acmpne     248
     237: aload_0
     238: aload_1
     239: checkcast     #8                  // class java/lang/String
     242: invokestatic  #63                 // Method marshalString:(Ljava/io/DataOutputStream;Ljava/lang/String;)V
     245: goto          344
     248: aload_1
     249: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     252: ldc_w         #64                 // class org/fusesource/hawtbuf/UTF8Buffer
     255: if_acmpne     269
     258: aload_0
     259: aload_1
     260: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
     263: invokestatic  #63                 // Method marshalString:(Ljava/io/DataOutputStream;Ljava/lang/String;)V
     266: goto          344
     269: aload_1
     270: instanceof    #66                 // class java/util/Map
     273: ifeq          293
     276: aload_0
     277: bipush        11
     279: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
     282: aload_1
     283: checkcast     #66                 // class java/util/Map
     286: aload_0
     287: invokestatic  #68                 // Method marshalPrimitiveMap:(Ljava/util/Map;Ljava/io/DataOutputStream;)V
     290: goto          344
     293: aload_1
     294: instanceof    #69                 // class java/util/List
     297: ifeq          317
     300: aload_0
     301: bipush        12
     303: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
     306: aload_1
     307: checkcast     #69                 // class java/util/List
     310: aload_0
     311: invokestatic  #70                 // Method marshalPrimitiveList:(Ljava/util/List;Ljava/io/DataOutputStream;)V
     314: goto          344
     317: new           #16                 // class java/io/IOException
     320: dup
     321: new           #17                 // class java/lang/StringBuilder
     324: dup
     325: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     328: ldc           #71                 // String Object is not a primitive:
     330: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     333: aload_1
     334: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     337: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     340: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     343: athrow
     344: return

  public static java.lang.Object unmarshalPrimitive(java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #27                 // Method unmarshalPrimitive:(Ljava/io/DataInputStream;Z)Ljava/lang/Object;
       5: areturn

  public static java.lang.Object unmarshalPrimitive(java.io.DataInputStream, boolean) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #73                 // Method java/io/DataInputStream.readByte:()B
       6: istore_3
       7: iload_3
       8: tableswitch   { // 0 to 13
                     0: 272
                     1: 91
                     2: 80
                     3: 111
                     4: 122
                     5: 133
                     6: 144
                     7: 170
                     8: 155
                     9: 206
                    10: 185
                    11: 254
                    12: 263
                    13: 230
               default: 277
          }
      80: aload_0
      81: invokevirtual #73                 // Method java/io/DataInputStream.readByte:()B
      84: invokestatic  #74                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      87: astore_2
      88: goto          304
      91: aload_0
      92: invokevirtual #75                 // Method java/io/DataInputStream.readBoolean:()Z
      95: ifeq          104
      98: getstatic     #76                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     101: goto          107
     104: getstatic     #77                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     107: astore_2
     108: goto          304
     111: aload_0
     112: invokevirtual #78                 // Method java/io/DataInputStream.readChar:()C
     115: invokestatic  #79                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     118: astore_2
     119: goto          304
     122: aload_0
     123: invokevirtual #80                 // Method java/io/DataInputStream.readShort:()S
     126: invokestatic  #81                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
     129: astore_2
     130: goto          304
     133: aload_0
     134: invokevirtual #15                 // Method java/io/DataInputStream.readInt:()I
     137: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     140: astore_2
     141: goto          304
     144: aload_0
     145: invokevirtual #83                 // Method java/io/DataInputStream.readLong:()J
     148: invokestatic  #84                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     151: astore_2
     152: goto          304
     155: new           #55                 // class java/lang/Float
     158: dup
     159: aload_0
     160: invokevirtual #85                 // Method java/io/DataInputStream.readFloat:()F
     163: invokespecial #86                 // Method java/lang/Float."<init>":(F)V
     166: astore_2
     167: goto          304
     170: new           #58                 // class java/lang/Double
     173: dup
     174: aload_0
     175: invokevirtual #87                 // Method java/io/DataInputStream.readDouble:()D
     178: invokespecial #88                 // Method java/lang/Double."<init>":(D)V
     181: astore_2
     182: goto          304
     185: aload_0
     186: invokevirtual #15                 // Method java/io/DataInputStream.readInt:()I
     189: newarray       byte
     191: astore_2
     192: aload_0
     193: aload_2
     194: checkcast     #61                 // class "[B"
     197: checkcast     #61                 // class "[B"
     200: invokevirtual #89                 // Method java/io/DataInputStream.readFully:([B)V
     203: goto          304
     206: iload_1
     207: ifeq          218
     210: aload_0
     211: invokevirtual #26                 // Method java/io/DataInputStream.readUTF:()Ljava/lang/String;
     214: astore_2
     215: goto          304
     218: aload_0
     219: aload_0
     220: invokevirtual #90                 // Method java/io/DataInputStream.readUnsignedShort:()I
     223: invokestatic  #91                 // Method readUTF:(Ljava/io/DataInputStream;I)Lorg/fusesource/hawtbuf/UTF8Buffer;
     226: astore_2
     227: goto          304
     230: iload_1
     231: ifeq          242
     234: aload_0
     235: invokestatic  #92                 // Method readUTF8:(Ljava/io/DataInput;)Ljava/lang/String;
     238: astore_2
     239: goto          304
     242: aload_0
     243: aload_0
     244: invokevirtual #15                 // Method java/io/DataInputStream.readInt:()I
     247: invokestatic  #91                 // Method readUTF:(Ljava/io/DataInputStream;I)Lorg/fusesource/hawtbuf/UTF8Buffer;
     250: astore_2
     251: goto          304
     254: aload_0
     255: iconst_1
     256: invokestatic  #93                 // Method unmarshalPrimitiveMap:(Ljava/io/DataInputStream;Z)Ljava/util/Map;
     259: astore_2
     260: goto          304
     263: aload_0
     264: iconst_1
     265: invokestatic  #31                 // Method unmarshalPrimitiveList:(Ljava/io/DataInputStream;Z)Ljava/util/List;
     268: astore_2
     269: goto          304
     272: aconst_null
     273: astore_2
     274: goto          304
     277: new           #16                 // class java/io/IOException
     280: dup
     281: new           #17                 // class java/lang/StringBuilder
     284: dup
     285: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     288: ldc           #94                 // String Unknown primitive type:
     290: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     293: iload_3
     294: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     297: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     300: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     303: athrow
     304: aload_2
     305: areturn

  public static org.fusesource.hawtbuf.UTF8Buffer readUTF(java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokevirtual #89                 // Method java/io/DataInputStream.readFully:([B)V
       9: new           #64                 // class org/fusesource/hawtbuf/UTF8Buffer
      12: dup
      13: aload_2
      14: invokespecial #95                 // Method org/fusesource/hawtbuf/UTF8Buffer."<init>":([B)V
      17: areturn

  public static void marshalNull(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       5: return

  public static void marshalBoolean(java.io.DataOutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       5: aload_0
       6: iload_1
       7: invokevirtual #96                 // Method java/io/DataOutputStream.writeBoolean:(Z)V
      10: return

  public static void marshalByte(java.io.DataOutputStream, byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       5: aload_0
       6: iload_1
       7: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
      10: return

  public static void marshalChar(java.io.DataOutputStream, char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_3
       2: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       5: aload_0
       6: iload_1
       7: invokevirtual #97                 // Method java/io/DataOutputStream.writeChar:(I)V
      10: return

  public static void marshalShort(java.io.DataOutputStream, short) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       5: aload_0
       6: iload_1
       7: invokevirtual #98                 // Method java/io/DataOutputStream.writeShort:(I)V
      10: return

  public static void marshalInt(java.io.DataOutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_5
       2: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       5: aload_0
       6: iload_1
       7: invokevirtual #2                  // Method java/io/DataOutputStream.writeInt:(I)V
      10: return

  public static void marshalLong(java.io.DataOutputStream, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        6
       3: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       6: aload_0
       7: lload_1
       8: invokevirtual #99                 // Method java/io/DataOutputStream.writeLong:(J)V
      11: return

  public static void marshalFloat(java.io.DataOutputStream, float) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       6: aload_0
       7: fload_1
       8: invokevirtual #100                // Method java/io/DataOutputStream.writeFloat:(F)V
      11: return

  public static void marshalDouble(java.io.DataOutputStream, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        7
       3: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       6: aload_0
       7: dload_1
       8: invokevirtual #101                // Method java/io/DataOutputStream.writeDouble:(D)V
      11: return

  public static void marshalByteArray(java.io.DataOutputStream, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokestatic  #102                // Method marshalByteArray:(Ljava/io/DataOutputStream;[BII)V
       8: return

  public static void marshalByteArray(java.io.DataOutputStream, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
       6: aload_0
       7: iload_3
       8: invokevirtual #2                  // Method java/io/DataOutputStream.writeInt:(I)V
      11: aload_0
      12: aload_1
      13: iload_2
      14: iload_3
      15: invokevirtual #103                // Method java/io/DataOutputStream.write:([BII)V
      18: return

  public static void marshalString(java.io.DataOutputStream, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #104                // Method java/lang/String.length:()I
       4: sipush        8191
       7: if_icmpge     24
      10: aload_0
      11: bipush        9
      13: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
      16: aload_0
      17: aload_1
      18: invokevirtual #9                  // Method java/io/DataOutputStream.writeUTF:(Ljava/lang/String;)V
      21: goto          35
      24: aload_0
      25: bipush        13
      27: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V
      30: aload_0
      31: aload_1
      32: invokestatic  #105                // Method writeUTF8:(Ljava/io/DataOutput;Ljava/lang/String;)V
      35: return

  public static void writeUTF8(java.io.DataOutput, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        337
       4: aload_1
       5: invokevirtual #104                // Method java/lang/String.length:()I
       8: istore_2
       9: iconst_0
      10: istore_3
      11: iload_2
      12: newarray       char
      14: astore        4
      16: iconst_0
      17: istore        5
      19: iconst_0
      20: istore        6
      22: aload_1
      23: iconst_0
      24: iload_2
      25: aload         4
      27: iconst_0
      28: invokevirtual #106                // Method java/lang/String.getChars:(II[CI)V
      31: iconst_0
      32: istore        7
      34: iload         7
      36: iload_2
      37: if_icmpge     89
      40: aload         4
      42: iload         7
      44: caload
      45: istore        5
      47: iload         5
      49: iconst_1
      50: if_icmplt     66
      53: iload         5
      55: bipush        127
      57: if_icmpgt     66
      60: iinc          3, 1
      63: goto          83
      66: iload         5
      68: sipush        2047
      71: if_icmple     80
      74: iinc          3, 3
      77: goto          83
      80: iinc          3, 2
      83: iinc          7, 1
      86: goto          34
      89: iload_3
      90: iconst_4
      91: iadd
      92: newarray       byte
      94: astore        7
      96: aload         7
      98: iload         6
     100: iinc          6, 1
     103: iload_3
     104: bipush        24
     106: iushr
     107: sipush        255
     110: iand
     111: i2b
     112: bastore
     113: aload         7
     115: iload         6
     117: iinc          6, 1
     120: iload_3
     121: bipush        16
     123: iushr
     124: sipush        255
     127: iand
     128: i2b
     129: bastore
     130: aload         7
     132: iload         6
     134: iinc          6, 1
     137: iload_3
     138: bipush        8
     140: iushr
     141: sipush        255
     144: iand
     145: i2b
     146: bastore
     147: aload         7
     149: iload         6
     151: iinc          6, 1
     154: iload_3
     155: iconst_0
     156: iushr
     157: sipush        255
     160: iand
     161: i2b
     162: bastore
     163: iconst_0
     164: istore        8
     166: iload         8
     168: iload_2
     169: if_icmpge     326
     172: aload         4
     174: iload         8
     176: caload
     177: istore        5
     179: iload         5
     181: iconst_1
     182: if_icmplt     206
     185: iload         5
     187: bipush        127
     189: if_icmpgt     206
     192: aload         7
     194: iload         6
     196: iinc          6, 1
     199: iload         5
     201: i2b
     202: bastore
     203: goto          320
     206: iload         5
     208: sipush        2047
     211: if_icmple     279
     214: aload         7
     216: iload         6
     218: iinc          6, 1
     221: sipush        224
     224: iload         5
     226: bipush        12
     228: ishr
     229: bipush        15
     231: iand
     232: ior
     233: i2b
     234: bastore
     235: aload         7
     237: iload         6
     239: iinc          6, 1
     242: sipush        128
     245: iload         5
     247: bipush        6
     249: ishr
     250: bipush        63
     252: iand
     253: ior
     254: i2b
     255: bastore
     256: aload         7
     258: iload         6
     260: iinc          6, 1
     263: sipush        128
     266: iload         5
     268: iconst_0
     269: ishr
     270: bipush        63
     272: iand
     273: ior
     274: i2b
     275: bastore
     276: goto          320
     279: aload         7
     281: iload         6
     283: iinc          6, 1
     286: sipush        192
     289: iload         5
     291: bipush        6
     293: ishr
     294: bipush        31
     296: iand
     297: ior
     298: i2b
     299: bastore
     300: aload         7
     302: iload         6
     304: iinc          6, 1
     307: sipush        128
     310: iload         5
     312: iconst_0
     313: ishr
     314: bipush        63
     316: iand
     317: ior
     318: i2b
     319: bastore
     320: iinc          8, 1
     323: goto          166
     326: aload_0
     327: aload         7
     329: invokeinterface #107,  2          // InterfaceMethod java/io/DataOutput.write:([B)V
     334: goto          344
     337: aload_0
     338: iconst_m1
     339: invokeinterface #108,  2          // InterfaceMethod java/io/DataOutput.writeInt:(I)V
     344: return

  public static java.lang.String readUTF8(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #109,  1          // InterfaceMethod java/io/DataInput.readInt:()I
       6: istore_1
       7: iload_1
       8: iconst_m1
       9: if_icmple     330
      12: new           #110                // class java/lang/StringBuffer
      15: dup
      16: iload_1
      17: invokespecial #111                // Method java/lang/StringBuffer."<init>":(I)V
      20: astore_2
      21: iload_1
      22: newarray       byte
      24: astore_3
      25: iconst_0
      26: istore        7
      28: aload_0
      29: aload_3
      30: iconst_0
      31: iload_1
      32: invokeinterface #112,  4          // InterfaceMethod java/io/DataInput.readFully:([BII)V
      37: iload         7
      39: iload_1
      40: if_icmpge     321
      43: aload_3
      44: iload         7
      46: baload
      47: sipush        255
      50: iand
      51: istore        4
      53: iload         4
      55: iconst_4
      56: ishr
      57: tableswitch   { // 0 to 14
                     0: 132
                     1: 132
                     2: 132
                     3: 132
                     4: 132
                     5: 132
                     6: 132
                     7: 132
                     8: 313
                     9: 313
                    10: 313
                    11: 313
                    12: 146
                    13: 146
                    14: 214
               default: 313
          }
     132: iinc          7, 1
     135: aload_2
     136: iload         4
     138: i2c
     139: invokevirtual #113                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     142: pop
     143: goto          37
     146: iinc          7, 2
     149: iload         7
     151: iload_1
     152: if_icmple     163
     155: new           #114                // class java/io/UTFDataFormatException
     158: dup
     159: invokespecial #115                // Method java/io/UTFDataFormatException."<init>":()V
     162: athrow
     163: aload_3
     164: iload         7
     166: iconst_1
     167: isub
     168: baload
     169: istore        5
     171: iload         5
     173: sipush        192
     176: iand
     177: sipush        128
     180: if_icmpeq     191
     183: new           #114                // class java/io/UTFDataFormatException
     186: dup
     187: invokespecial #115                // Method java/io/UTFDataFormatException."<init>":()V
     190: athrow
     191: aload_2
     192: iload         4
     194: bipush        31
     196: iand
     197: bipush        6
     199: ishl
     200: iload         5
     202: bipush        63
     204: iand
     205: ior
     206: i2c
     207: invokevirtual #113                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     210: pop
     211: goto          37
     214: iinc          7, 3
     217: iload         7
     219: iload_1
     220: if_icmple     231
     223: new           #114                // class java/io/UTFDataFormatException
     226: dup
     227: invokespecial #115                // Method java/io/UTFDataFormatException."<init>":()V
     230: athrow
     231: aload_3
     232: iload         7
     234: iconst_2
     235: isub
     236: baload
     237: istore        5
     239: aload_3
     240: iload         7
     242: iconst_1
     243: isub
     244: baload
     245: istore        6
     247: iload         5
     249: sipush        192
     252: iand
     253: sipush        128
     256: if_icmpne     271
     259: iload         6
     261: sipush        192
     264: iand
     265: sipush        128
     268: if_icmpeq     279
     271: new           #114                // class java/io/UTFDataFormatException
     274: dup
     275: invokespecial #115                // Method java/io/UTFDataFormatException."<init>":()V
     278: athrow
     279: aload_2
     280: iload         4
     282: bipush        15
     284: iand
     285: bipush        12
     287: ishl
     288: iload         5
     290: bipush        63
     292: iand
     293: bipush        6
     295: ishl
     296: ior
     297: iload         6
     299: bipush        63
     301: iand
     302: iconst_0
     303: ishl
     304: ior
     305: i2c
     306: invokevirtual #113                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     309: pop
     310: goto          37
     313: new           #114                // class java/io/UTFDataFormatException
     316: dup
     317: invokespecial #115                // Method java/io/UTFDataFormatException."<init>":()V
     320: athrow
     321: new           #8                  // class java/lang/String
     324: dup
     325: aload_2
     326: invokespecial #116                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
     329: areturn
     330: aconst_null
     331: areturn

  public static java.lang.String propertiesToString(java.util.Properties) throws java.io.IOException;
    Code:
       0: ldc           #117                // String
       2: astore_1
       3: aload_0
       4: ifnull        43
       7: new           #118                // class org/apache/activemq/util/DataByteArrayOutputStream
      10: dup
      11: invokespecial #119                // Method org/apache/activemq/util/DataByteArrayOutputStream."<init>":()V
      14: astore_2
      15: aload_0
      16: aload_2
      17: ldc           #117                // String
      19: invokevirtual #120                // Method java/util/Properties.store:(Ljava/io/OutputStream;Ljava/lang/String;)V
      22: new           #8                  // class java/lang/String
      25: dup
      26: aload_2
      27: invokevirtual #121                // Method org/apache/activemq/util/DataByteArrayOutputStream.getData:()[B
      30: iconst_0
      31: aload_2
      32: invokevirtual #122                // Method org/apache/activemq/util/DataByteArrayOutputStream.size:()I
      35: invokespecial #123                // Method java/lang/String."<init>":([BII)V
      38: astore_1
      39: aload_2
      40: invokevirtual #124                // Method org/apache/activemq/util/DataByteArrayOutputStream.close:()V
      43: aload_1
      44: areturn

  public static java.util.Properties stringToProperties(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #125                // class java/util/Properties
       3: dup
       4: invokespecial #126                // Method java/util/Properties."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        40
      12: aload_0
      13: invokevirtual #104                // Method java/lang/String.length:()I
      16: ifle          40
      19: new           #127                // class org/apache/activemq/util/DataByteArrayInputStream
      22: dup
      23: aload_0
      24: invokevirtual #128                // Method java/lang/String.getBytes:()[B
      27: invokespecial #129                // Method org/apache/activemq/util/DataByteArrayInputStream."<init>":([B)V
      30: astore_2
      31: aload_1
      32: aload_2
      33: invokevirtual #130                // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      36: aload_2
      37: invokevirtual #131                // Method org/apache/activemq/util/DataByteArrayInputStream.close:()V
      40: aload_1
      41: areturn

  public static java.lang.String truncate64(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #104                // Method java/lang/String.length:()I
       4: bipush        63
       6: if_icmple     49
       9: new           #17                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: iconst_0
      18: bipush        45
      20: invokevirtual #132                // Method java/lang/String.substring:(II)Ljava/lang/String;
      23: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #133                // String ...
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: aload_0
      33: invokevirtual #104                // Method java/lang/String.length:()I
      36: bipush        12
      38: isub
      39: invokevirtual #134                // Method java/lang/String.substring:(I)Ljava/lang/String;
      42: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore_0
      49: aload_0
      50: areturn
}
