Compiled from "ByteSequenceData.java"
public final class org.apache.activemq.util.ByteSequenceData {
  static final boolean $assertionsDisabled;

  private org.apache.activemq.util.ByteSequenceData();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] toByteArray(org.apache.activemq.util.ByteSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
       4: ifne          24
       7: aload_0
       8: getfield      #3                  // Field org/apache/activemq/util/ByteSequence.length:I
      11: aload_0
      12: getfield      #4                  // Field org/apache/activemq/util/ByteSequence.data:[B
      15: arraylength
      16: if_icmpne     24
      19: aload_0
      20: getfield      #4                  // Field org/apache/activemq/util/ByteSequence.data:[B
      23: areturn
      24: aload_0
      25: getfield      #3                  // Field org/apache/activemq/util/ByteSequence.length:I
      28: newarray       byte
      30: astore_1
      31: aload_0
      32: getfield      #4                  // Field org/apache/activemq/util/ByteSequence.data:[B
      35: aload_0
      36: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      39: aload_1
      40: iconst_0
      41: aload_0
      42: getfield      #3                  // Field org/apache/activemq/util/ByteSequence.length:I
      45: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      48: aload_1
      49: areturn

  private static void spaceNeeded(org.apache.activemq.util.ByteSequence, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          27
       6: aload_0
       7: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      10: iload_1
      11: iadd
      12: aload_0
      13: getfield      #3                  // Field org/apache/activemq/util/ByteSequence.length:I
      16: if_icmple     27
      19: new           #7                  // class java/lang/AssertionError
      22: dup
      23: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: return

  public static int remaining(org.apache.activemq.util.ByteSequence);
    Code:
       0: aload_0
       1: getfield      #3                  // Field org/apache/activemq/util/ByteSequence.length:I
       4: aload_0
       5: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
       8: isub
       9: ireturn

  public static int read(org.apache.activemq.util.ByteSequence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field org/apache/activemq/util/ByteSequence.data:[B
       4: aload_0
       5: dup
       6: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      15: baload
      16: sipush        255
      19: iand
      20: ireturn

  public static void readFully(org.apache.activemq.util.ByteSequence, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokestatic  #9                  // Method readFully:(Lorg/apache/activemq/util/ByteSequence;[BII)V
       8: return

  public static void readFully(org.apache.activemq.util.ByteSequence, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: getfield      #4                  // Field org/apache/activemq/util/ByteSequence.data:[B
       9: aload_0
      10: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_0
      20: dup
      21: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      24: iload_3
      25: iadd
      26: putfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      29: return

  public static int skipBytes(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: invokestatic  #11                 // Method remaining:(Lorg/apache/activemq/util/ByteSequence;)I
       5: invokestatic  #12                 // Method java/lang/Math.min:(II)I
       8: istore_2
       9: aload_0
      10: dup
      11: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      14: iload_2
      15: iadd
      16: putfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      19: iload_2
      20: ireturn

  public static boolean readBoolean(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public static byte readByte(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: i2b
      10: ireturn

  public static int readUnsignedByte(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: ireturn

  public static short readShortBig(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: bipush        8
      11: ishl
      12: aload_0
      13: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      16: iconst_0
      17: ishl
      18: iadd
      19: i2s
      20: ireturn

  public static short readShortLittle(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: iconst_0
      10: ishl
      11: aload_0
      12: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      15: bipush        8
      17: ishl
      18: iadd
      19: i2s
      20: ireturn

  public static int readUnsignedShortBig(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: bipush        8
      11: ishl
      12: aload_0
      13: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      16: iconst_0
      17: ishl
      18: iadd
      19: ireturn

  public static int readUnsignedShortLittle(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: iconst_0
      10: ishl
      11: aload_0
      12: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      15: bipush        8
      17: ishl
      18: iadd
      19: ireturn

  public static char readCharBig(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: bipush        8
      11: ishl
      12: aload_0
      13: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      16: iconst_0
      17: ishl
      18: iadd
      19: i2c
      20: ireturn

  public static char readCharLittle(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: iconst_0
      10: ishl
      11: aload_0
      12: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      15: bipush        8
      17: ishl
      18: iadd
      19: i2c
      20: ireturn

  public static int readIntBig(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: bipush        24
      11: ishl
      12: aload_0
      13: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      16: bipush        16
      18: ishl
      19: iadd
      20: aload_0
      21: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      24: bipush        8
      26: ishl
      27: iadd
      28: aload_0
      29: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      32: iconst_0
      33: ishl
      34: iadd
      35: ireturn

  public static int readIntLittle(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
       9: iconst_0
      10: ishl
      11: aload_0
      12: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      15: bipush        8
      17: ishl
      18: iadd
      19: aload_0
      20: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      23: bipush        16
      25: ishl
      26: iadd
      27: aload_0
      28: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      31: bipush        24
      33: ishl
      34: iadd
      35: ireturn

  public static long readLongBig(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       6: aload_0
       7: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      10: i2l
      11: bipush        56
      13: lshl
      14: aload_0
      15: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      18: i2l
      19: bipush        48
      21: lshl
      22: ladd
      23: aload_0
      24: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      27: i2l
      28: bipush        40
      30: lshl
      31: ladd
      32: aload_0
      33: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      36: i2l
      37: bipush        32
      39: lshl
      40: ladd
      41: aload_0
      42: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      45: i2l
      46: bipush        24
      48: lshl
      49: ladd
      50: aload_0
      51: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      54: bipush        16
      56: ishl
      57: i2l
      58: ladd
      59: aload_0
      60: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      63: bipush        8
      65: ishl
      66: i2l
      67: ladd
      68: aload_0
      69: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      72: iconst_0
      73: ishl
      74: i2l
      75: ladd
      76: lreturn

  public static long readLongLittle(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       6: aload_0
       7: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      10: iconst_0
      11: ishl
      12: aload_0
      13: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      16: bipush        8
      18: ishl
      19: iadd
      20: aload_0
      21: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      24: bipush        16
      26: ishl
      27: iadd
      28: i2l
      29: aload_0
      30: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      33: i2l
      34: bipush        24
      36: lshl
      37: ladd
      38: aload_0
      39: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      42: i2l
      43: bipush        32
      45: lshl
      46: ladd
      47: aload_0
      48: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      51: i2l
      52: bipush        40
      54: lshl
      55: ladd
      56: aload_0
      57: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      60: i2l
      61: bipush        48
      63: lshl
      64: ladd
      65: aload_0
      66: invokestatic  #13                 // Method read:(Lorg/apache/activemq/util/ByteSequence;)I
      69: i2l
      70: bipush        56
      72: lshl
      73: ladd
      74: lreturn

  public static double readDoubleBig(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method readLongBig:(Lorg/apache/activemq/util/ByteSequence;)J
       4: invokestatic  #15                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public static double readDoubleLittle(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method readLongLittle:(Lorg/apache/activemq/util/ByteSequence;)J
       4: invokestatic  #15                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public static float readFloatBig(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method readIntBig:(Lorg/apache/activemq/util/ByteSequence;)I
       4: invokestatic  #18                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public static float readFloatLittle(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method readIntLittle:(Lorg/apache/activemq/util/ByteSequence;)I
       4: invokestatic  #18                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public static void write(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: getfield      #4                  // Field org/apache/activemq/util/ByteSequence.data:[B
       9: aload_0
      10: dup
      11: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      20: iload_1
      21: i2b
      22: bastore
      23: return

  public static void write(org.apache.activemq.util.ByteSequence, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokestatic  #20                 // Method write:(Lorg/apache/activemq/util/ByteSequence;[BII)V
       8: return

  public static void write(org.apache.activemq.util.ByteSequence, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_1
       6: iload_2
       7: aload_0
       8: getfield      #4                  // Field org/apache/activemq/util/ByteSequence.data:[B
      11: aload_0
      12: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      15: iload_3
      16: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_0
      20: dup
      21: getfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      24: iload_3
      25: iadd
      26: putfield      #2                  // Field org/apache/activemq/util/ByteSequence.offset:I
      29: return

  public static void writeBoolean(org.apache.activemq.util.ByteSequence, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      18: return

  public static void writeByte(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      10: return

  public static void writeShortBig(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: bipush        8
       9: iushr
      10: sipush        255
      13: iand
      14: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      17: aload_0
      18: iload_1
      19: iconst_0
      20: iushr
      21: sipush        255
      24: iand
      25: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      28: return

  public static void writeShortLittle(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: iconst_0
       8: iushr
       9: sipush        255
      12: iand
      13: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      16: aload_0
      17: iload_1
      18: bipush        8
      20: iushr
      21: sipush        255
      24: iand
      25: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      28: return

  public static void writeCharBig(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: bipush        8
       9: iushr
      10: sipush        255
      13: iand
      14: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      17: aload_0
      18: iload_1
      19: iconst_0
      20: iushr
      21: sipush        255
      24: iand
      25: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      28: return

  public static void writeCharLittle(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: iconst_0
       8: iushr
       9: sipush        255
      12: iand
      13: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      16: aload_0
      17: iload_1
      18: bipush        8
      20: iushr
      21: sipush        255
      24: iand
      25: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      28: return

  public static void writeIntBig(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: bipush        24
       9: iushr
      10: sipush        255
      13: iand
      14: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      17: aload_0
      18: iload_1
      19: bipush        16
      21: iushr
      22: sipush        255
      25: iand
      26: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      29: aload_0
      30: iload_1
      31: bipush        8
      33: iushr
      34: sipush        255
      37: iand
      38: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      41: aload_0
      42: iload_1
      43: iconst_0
      44: iushr
      45: sipush        255
      48: iand
      49: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      52: return

  public static void writeIntLittle(org.apache.activemq.util.ByteSequence, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       5: aload_0
       6: iload_1
       7: iconst_0
       8: iushr
       9: sipush        255
      12: iand
      13: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      16: aload_0
      17: iload_1
      18: bipush        8
      20: iushr
      21: sipush        255
      24: iand
      25: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      28: aload_0
      29: iload_1
      30: bipush        16
      32: iushr
      33: sipush        255
      36: iand
      37: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      40: aload_0
      41: iload_1
      42: bipush        24
      44: iushr
      45: sipush        255
      48: iand
      49: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      52: return

  public static void writeLongBig(org.apache.activemq.util.ByteSequence, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       6: aload_0
       7: lload_1
       8: bipush        56
      10: lushr
      11: l2i
      12: sipush        255
      15: iand
      16: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      19: aload_0
      20: lload_1
      21: bipush        48
      23: lushr
      24: l2i
      25: sipush        255
      28: iand
      29: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      32: aload_0
      33: lload_1
      34: bipush        40
      36: lushr
      37: l2i
      38: sipush        255
      41: iand
      42: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      45: aload_0
      46: lload_1
      47: bipush        32
      49: lushr
      50: l2i
      51: sipush        255
      54: iand
      55: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      58: aload_0
      59: lload_1
      60: bipush        24
      62: lushr
      63: l2i
      64: sipush        255
      67: iand
      68: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      71: aload_0
      72: lload_1
      73: bipush        16
      75: lushr
      76: l2i
      77: sipush        255
      80: iand
      81: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      84: aload_0
      85: lload_1
      86: bipush        8
      88: lushr
      89: l2i
      90: sipush        255
      93: iand
      94: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      97: aload_0
      98: lload_1
      99: iconst_0
     100: lushr
     101: l2i
     102: sipush        255
     105: iand
     106: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
     109: return

  public static void writeLongLittle(org.apache.activemq.util.ByteSequence, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokestatic  #10                 // Method spaceNeeded:(Lorg/apache/activemq/util/ByteSequence;I)V
       6: aload_0
       7: lload_1
       8: iconst_0
       9: lushr
      10: l2i
      11: sipush        255
      14: iand
      15: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      18: aload_0
      19: lload_1
      20: bipush        8
      22: lushr
      23: l2i
      24: sipush        255
      27: iand
      28: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      31: aload_0
      32: lload_1
      33: bipush        16
      35: lushr
      36: l2i
      37: sipush        255
      40: iand
      41: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      44: aload_0
      45: lload_1
      46: bipush        24
      48: lushr
      49: l2i
      50: sipush        255
      53: iand
      54: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      57: aload_0
      58: lload_1
      59: bipush        32
      61: lushr
      62: l2i
      63: sipush        255
      66: iand
      67: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      70: aload_0
      71: lload_1
      72: bipush        40
      74: lushr
      75: l2i
      76: sipush        255
      79: iand
      80: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      83: aload_0
      84: lload_1
      85: bipush        48
      87: lushr
      88: l2i
      89: sipush        255
      92: iand
      93: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
      96: aload_0
      97: lload_1
      98: bipush        56
     100: lushr
     101: l2i
     102: sipush        255
     105: iand
     106: invokestatic  #21                 // Method write:(Lorg/apache/activemq/util/ByteSequence;I)V
     109: return

  public static void writeDoubleBig(org.apache.activemq.util.ByteSequence, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #22                 // Method java/lang/Double.doubleToLongBits:(D)J
       5: invokestatic  #23                 // Method writeLongBig:(Lorg/apache/activemq/util/ByteSequence;J)V
       8: return

  public static void writeDoubleLittle(org.apache.activemq.util.ByteSequence, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #22                 // Method java/lang/Double.doubleToLongBits:(D)J
       5: invokestatic  #24                 // Method writeLongLittle:(Lorg/apache/activemq/util/ByteSequence;J)V
       8: return

  public static void writeFloatBig(org.apache.activemq.util.ByteSequence, float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #25                 // Method java/lang/Float.floatToIntBits:(F)I
       5: invokestatic  #26                 // Method writeIntBig:(Lorg/apache/activemq/util/ByteSequence;I)V
       8: return

  public static void writeFloatLittle(org.apache.activemq.util.ByteSequence, float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #25                 // Method java/lang/Float.floatToIntBits:(F)I
       5: invokestatic  #27                 // Method writeIntLittle:(Lorg/apache/activemq/util/ByteSequence;I)V
       8: return

  public static void writeRawDoubleBig(org.apache.activemq.util.ByteSequence, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #28                 // Method java/lang/Double.doubleToRawLongBits:(D)J
       5: invokestatic  #23                 // Method writeLongBig:(Lorg/apache/activemq/util/ByteSequence;J)V
       8: return

  public static void writeRawDoubleLittle(org.apache.activemq.util.ByteSequence, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #28                 // Method java/lang/Double.doubleToRawLongBits:(D)J
       5: invokestatic  #24                 // Method writeLongLittle:(Lorg/apache/activemq/util/ByteSequence;J)V
       8: return

  public static void writeRawFloatBig(org.apache.activemq.util.ByteSequence, float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #29                 // Method java/lang/Float.floatToRawIntBits:(F)I
       5: invokestatic  #26                 // Method writeIntBig:(Lorg/apache/activemq/util/ByteSequence;I)V
       8: return

  public static void writeRawFloatLittle(org.apache.activemq.util.ByteSequence, float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #29                 // Method java/lang/Float.floatToRawIntBits:(F)I
       5: invokestatic  #27                 // Method writeIntLittle:(Lorg/apache/activemq/util/ByteSequence;I)V
       8: return

  static {};
    Code:
       0: ldc_w         #30                 // class org/apache/activemq/util/ByteSequenceData
       3: invokevirtual #31                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #6                  // Field $assertionsDisabled:Z
      17: return
}
