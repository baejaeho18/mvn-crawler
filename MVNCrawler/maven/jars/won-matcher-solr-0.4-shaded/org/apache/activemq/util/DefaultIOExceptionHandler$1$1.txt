Compiled from "DefaultIOExceptionHandler.java"
class org.apache.activemq.util.DefaultIOExceptionHandler$1$1 extends java.lang.Thread {
  final org.apache.activemq.util.DefaultIOExceptionHandler$1 this$1;

  org.apache.activemq.util.DefaultIOExceptionHandler$1$1(org.apache.activemq.util.DefaultIOExceptionHandler$1, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
      10: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
       4: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
       7: invokevirtual #4                  // Method org/apache/activemq/util/DefaultIOExceptionHandler.hasLockOwnership:()Z
      10: ifeq          49
      13: aload_0
      14: invokespecial #5                  // Method isPersistenceAdapterDown:()Z
      17: ifeq          49
      20: invokestatic  #6                  // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$000:()Lorg/slf4j/Logger;
      23: ldc           #7                  // String waiting for broker persistence adapter checkpoint to succeed before restarting transports
      25: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      30: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      33: aload_0
      34: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
      37: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
      40: invokestatic  #10                 // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$100:(Lorg/apache/activemq/util/DefaultIOExceptionHandler;)J
      43: invokevirtual #11                 // Method java/util/concurrent/TimeUnit.sleep:(J)V
      46: goto          0
      49: aload_0
      50: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
      53: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
      56: invokevirtual #4                  // Method org/apache/activemq/util/DefaultIOExceptionHandler.hasLockOwnership:()Z
      59: ifeq          191
      62: aload_0
      63: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
      66: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
      69: getfield      #12                 // Field org/apache/activemq/util/DefaultIOExceptionHandler.broker:Lorg/apache/activemq/broker/BrokerService;
      72: invokevirtual #13                 // Method org/apache/activemq/broker/BrokerService.getRegionBroker:()Lorg/apache/activemq/broker/Broker;
      75: checkcast     #14                 // class org/apache/activemq/broker/region/RegionBroker
      78: invokevirtual #15                 // Method org/apache/activemq/broker/region/RegionBroker.getDestinationMap:()Ljava/util/Map;
      81: astore_1
      82: aload_1
      83: invokeinterface #16,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      88: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      93: astore_2
      94: aload_2
      95: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          142
     103: aload_2
     104: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #20                 // class org/apache/activemq/broker/region/Destination
     112: astore_3
     113: aload_3
     114: instanceof    #21                 // class org/apache/activemq/broker/region/Queue
     117: ifeq          139
     120: aload_3
     121: checkcast     #21                 // class org/apache/activemq/broker/region/Queue
     124: astore        4
     126: aload         4
     128: invokevirtual #22                 // Method org/apache/activemq/broker/region/Queue.isResetNeeded:()Z
     131: ifeq          139
     134: aload         4
     136: invokevirtual #23                 // Method org/apache/activemq/broker/region/Queue.clearPendingMessages:()V
     139: goto          94
     142: aload_0
     143: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
     146: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
     149: getfield      #12                 // Field org/apache/activemq/util/DefaultIOExceptionHandler.broker:Lorg/apache/activemq/broker/BrokerService;
     152: invokevirtual #24                 // Method org/apache/activemq/broker/BrokerService.startAllConnectors:()V
     155: invokestatic  #6                  // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$000:()Lorg/slf4j/Logger;
     158: new           #25                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     165: ldc           #27                 // String Successfully restarted transports on
     167: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
     174: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
     177: getfield      #12                 // Field org/apache/activemq/util/DefaultIOExceptionHandler.broker:Lorg/apache/activemq/broker/BrokerService;
     180: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     183: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     191: aload_0
     192: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
     195: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
     198: invokestatic  #31                 // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$300:(Lorg/apache/activemq/util/DefaultIOExceptionHandler;)Ljava/util/concurrent/atomic/AtomicBoolean;
     201: iconst_1
     202: iconst_0
     203: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     206: pop
     207: goto          304
     210: astore_1
     211: invokestatic  #6                  // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$000:()Lorg/slf4j/Logger;
     214: new           #25                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #34                 // String Stopping
     223: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload_0
     227: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
     230: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
     233: getfield      #12                 // Field org/apache/activemq/util/DefaultIOExceptionHandler.broker:Lorg/apache/activemq/broker/BrokerService;
     236: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     239: ldc           #35                 // String  due to failure restarting transports
     241: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     247: aload_1
     248: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     253: aload_0
     254: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
     257: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
     260: aload_1
     261: invokestatic  #37                 // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$200:(Lorg/apache/activemq/util/DefaultIOExceptionHandler;Ljava/lang/Exception;)V
     264: aload_0
     265: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
     268: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
     271: invokestatic  #31                 // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$300:(Lorg/apache/activemq/util/DefaultIOExceptionHandler;)Ljava/util/concurrent/atomic/AtomicBoolean;
     274: iconst_1
     275: iconst_0
     276: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     279: pop
     280: goto          304
     283: astore        5
     285: aload_0
     286: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
     289: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
     292: invokestatic  #31                 // Method org/apache/activemq/util/DefaultIOExceptionHandler.access$300:(Lorg/apache/activemq/util/DefaultIOExceptionHandler;)Ljava/util/concurrent/atomic/AtomicBoolean;
     295: iconst_1
     296: iconst_0
     297: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     300: pop
     301: aload         5
     303: athrow
     304: return
    Exception table:
       from    to  target type
           0   191   210   Class java/lang/Exception
           0   191   283   any
         210   264   283   any
         283   285   283   any

  private boolean isPersistenceAdapterDown();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #1                  // Field this$1:Lorg/apache/activemq/util/DefaultIOExceptionHandler$1;
       6: getfield      #3                  // Field org/apache/activemq/util/DefaultIOExceptionHandler$1.this$0:Lorg/apache/activemq/util/DefaultIOExceptionHandler;
       9: getfield      #12                 // Field org/apache/activemq/util/DefaultIOExceptionHandler.broker:Lorg/apache/activemq/broker/BrokerService;
      12: invokevirtual #38                 // Method org/apache/activemq/broker/BrokerService.getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      15: iconst_1
      16: invokeinterface #39,  2           // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.checkpoint:(Z)V
      21: iconst_1
      22: istore_1
      23: goto          27
      26: astore_2
      27: iload_1
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn
    Exception table:
       from    to  target type
           2    23    26   Class java/lang/Throwable
}
