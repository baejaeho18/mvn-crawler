Compiled from "Promise.java"
public class org.apache.activemq.util.Promise<T> extends org.apache.activemq.util.PromiseCallback<T> {
  java.util.ArrayList<org.apache.activemq.util.PromiseCallback<T>> callbacks;

  T value;

  java.lang.Throwable error;

  java.util.concurrent.Future<T> future;

  public org.apache.activemq.util.Promise();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/util/PromiseCallback."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #4                  // Field callbacks:Ljava/util/ArrayList;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field future:Ljava/util/concurrent/Future;
      21: return

  public java.util.concurrent.Future<T> future();
    Code:
       0: aload_0
       1: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
       4: ifnonnull     27
       7: new           #6                  // class org/apache/activemq/util/Promise$PromiseFuture
      10: dup
      11: aload_0
      12: aconst_null
      13: invokespecial #7                  // Method org/apache/activemq/util/Promise$PromiseFuture."<init>":(Lorg/apache/activemq/util/Promise;Lorg/apache/activemq/util/Promise$1;)V
      16: astore_1
      17: aload_0
      18: aload_1
      19: invokevirtual #8                  // Method watch:(Lorg/apache/activemq/util/PromiseCallback;)V
      22: aload_0
      23: aload_1
      24: putfield      #5                  // Field future:Ljava/util/concurrent/Future;
      27: aload_0
      28: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
      31: areturn

  public void watch(org.apache.activemq.util.PromiseCallback<T>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String callback cannot be null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iconst_0
      15: istore_2
      16: aload_0
      17: dup
      18: astore_3
      19: monitorenter
      20: aload_0
      21: getfield      #4                  // Field callbacks:Ljava/util/ArrayList;
      24: ifnull        38
      27: aload_0
      28: getfield      #4                  // Field callbacks:Ljava/util/ArrayList;
      31: aload_1
      32: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      35: pop
      36: iconst_1
      37: istore_2
      38: aload_3
      39: monitorexit
      40: goto          50
      43: astore        4
      45: aload_3
      46: monitorexit
      47: aload         4
      49: athrow
      50: iload_2
      51: ifne          66
      54: aload_1
      55: aload_0
      56: getfield      #13                 // Field value:Ljava/lang/Object;
      59: aload_0
      60: getfield      #14                 // Field error:Ljava/lang/Throwable;
      63: invokevirtual #15                 // Method org/apache/activemq/util/PromiseCallback.onComplete:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      66: return
    Exception table:
       from    to  target type
          20    40    43   any
          43    47    43   any

  public void onComplete(T, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_2
       5: ifnull        18
       8: new           #9                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #16                 // String You can not have both a vaule and error
      14: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: dup
      20: astore        4
      22: monitorenter
      23: aload_0
      24: getfield      #4                  // Field callbacks:Ljava/util/ArrayList;
      27: astore_3
      28: aload_3
      29: ifnull        47
      32: aload_0
      33: aload_1
      34: putfield      #13                 // Field value:Ljava/lang/Object;
      37: aload_0
      38: aload_2
      39: putfield      #14                 // Field error:Ljava/lang/Throwable;
      42: aload_0
      43: aconst_null
      44: putfield      #4                  // Field callbacks:Ljava/util/ArrayList;
      47: aload         4
      49: monitorexit
      50: goto          61
      53: astore        5
      55: aload         4
      57: monitorexit
      58: aload         5
      60: athrow
      61: aload_3
      62: ifnull        109
      65: aload_3
      66: invokevirtual #17                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      69: astore        4
      71: aload         4
      73: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      78: ifeq          109
      81: aload         4
      83: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #20                 // class org/apache/activemq/util/PromiseCallback
      91: astore        5
      93: aload         5
      95: aload_0
      96: getfield      #13                 // Field value:Ljava/lang/Object;
      99: aload_0
     100: getfield      #14                 // Field error:Ljava/lang/Throwable;
     103: invokevirtual #15                 // Method org/apache/activemq/util/PromiseCallback.onComplete:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     106: goto          71
     109: return
    Exception table:
       from    to  target type
          23    50    53   any
          53    58    53   any
}
