Compiled from "ByteSequence.java"
public class org.apache.activemq.util.ByteSequence {
  public byte[] data;

  public int offset;

  public int length;

  public org.apache.activemq.util.ByteSequence();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.activemq.util.ByteSequence(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field data:[B
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field offset:I
      14: aload_0
      15: aload_1
      16: arraylength
      17: putfield      #4                  // Field length:I
      20: return

  public org.apache.activemq.util.ByteSequence(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field data:[B
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field offset:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field length:I
      19: return

  public byte[] getData();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: areturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: ireturn

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #3                  // Field offset:I
       4: ireturn

  public void setData(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field data:[B
       5: return

  public void setLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field length:I
       5: return

  public void setOffset(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field offset:I
       5: return

  public void compact();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: aload_0
       5: getfield      #2                  // Field data:[B
       8: arraylength
       9: if_icmpeq     46
      12: aload_0
      13: getfield      #4                  // Field length:I
      16: newarray       byte
      18: astore_1
      19: aload_0
      20: getfield      #2                  // Field data:[B
      23: aload_0
      24: getfield      #3                  // Field offset:I
      27: aload_1
      28: iconst_0
      29: aload_0
      30: getfield      #4                  // Field length:I
      33: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      36: aload_0
      37: aload_1
      38: putfield      #2                  // Field data:[B
      41: aload_0
      42: iconst_0
      43: putfield      #3                  // Field offset:I
      46: return

  public int indexOf(org.apache.activemq.util.ByteSequence, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: aload_1
       5: getfield      #4                  // Field length:I
       8: isub
       9: istore_3
      10: iload_2
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     38
      19: aload_0
      20: aload_1
      21: iload         4
      23: invokespecial #6                  // Method matches:(Lorg/apache/activemq/util/ByteSequence;I)Z
      26: ifeq          32
      29: iload         4
      31: ireturn
      32: iinc          4, 1
      35: goto          13
      38: iconst_m1
      39: ireturn

  private boolean matches(org.apache.activemq.util.ByteSequence, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_1
       4: getfield      #4                  // Field length:I
       7: if_icmpge     45
      10: aload_0
      11: getfield      #2                  // Field data:[B
      14: aload_0
      15: getfield      #3                  // Field offset:I
      18: iload_2
      19: iadd
      20: iload_3
      21: iadd
      22: baload
      23: aload_1
      24: getfield      #2                  // Field data:[B
      27: aload_1
      28: getfield      #3                  // Field offset:I
      31: iload_3
      32: iadd
      33: baload
      34: if_icmpeq     39
      37: iconst_0
      38: ireturn
      39: iinc          3, 1
      42: goto          2
      45: iconst_1
      46: ireturn

  private byte getByte(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: aload_0
       5: getfield      #3                  // Field offset:I
       8: iload_1
       9: iadd
      10: baload
      11: ireturn

  public final int indexOf(byte, int);
    Code:
       0: iload_2
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #4                  // Field length:I
       7: if_icmpge     33
      10: aload_0
      11: getfield      #2                  // Field data:[B
      14: aload_0
      15: getfield      #3                  // Field offset:I
      18: iload_3
      19: iadd
      20: baload
      21: iload_1
      22: if_icmpne     27
      25: iload_3
      26: ireturn
      27: iinc          3, 1
      30: goto          2
      33: iconst_m1
      34: ireturn
}
