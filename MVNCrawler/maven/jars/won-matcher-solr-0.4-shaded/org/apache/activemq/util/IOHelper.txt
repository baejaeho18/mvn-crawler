Compiled from "IOHelper.java"
public final class org.apache.activemq.util.IOHelper {
  protected static final int MAX_DIR_NAME_LENGTH;

  protected static final int MAX_FILE_NAME_LENGTH;

  private static final int DEFAULT_BUFFER_SIZE;

  private org.apache.activemq.util.IOHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getDefaultDataDirectory();
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: invokestatic  #4                  // Method getDefaultDirectoryPrefix:()Ljava/lang/String;
      10: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: ldc           #6                  // String activemq-data
      15: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  public static java.lang.String getDefaultStoreDirectory();
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: invokestatic  #4                  // Method getDefaultDirectoryPrefix:()Ljava/lang/String;
      10: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: ldc           #8                  // String amqstore
      15: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  public static java.lang.String getDefaultDirectoryPrefix();
    Code:
       0: ldc           #9                  // String org.apache.activemq.default.directory.prefix
       2: ldc           #10                 // String
       4: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn
       8: astore_0
       9: ldc           #10                 // String
      11: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  public static java.lang.String toFileSystemDirectorySafeName(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: getstatic     #13                 // Field MAX_DIR_NAME_LENGTH:I
       5: invokestatic  #14                 // Method toFileSystemSafeName:(Ljava/lang/String;ZI)Ljava/lang/String;
       8: areturn

  public static java.lang.String toFileSystemSafeName(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: getstatic     #15                 // Field MAX_FILE_NAME_LENGTH:I
       5: invokestatic  #14                 // Method toFileSystemSafeName:(Ljava/lang/String;ZI)Ljava/lang/String;
       8: areturn

  public static java.lang.String toFileSystemSafeName(java.lang.String, boolean, int);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/lang/String.length:()I
       4: istore_3
       5: new           #17                 // class java/lang/StringBuffer
       8: dup
       9: iload_3
      10: iconst_2
      11: imul
      12: invokespecial #18                 // Method java/lang/StringBuffer."<init>":(I)V
      15: astore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload_3
      23: if_icmpge     207
      26: aload_0
      27: iload         5
      29: invokevirtual #19                 // Method java/lang/String.charAt:(I)C
      32: istore        6
      34: iload         6
      36: bipush        97
      38: if_icmplt     52
      41: iload         6
      43: bipush        122
      45: if_icmpgt     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        7
      55: iload         7
      57: ifne          74
      60: iload         6
      62: bipush        65
      64: if_icmplt     78
      67: iload         6
      69: bipush        90
      71: if_icmpgt     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: istore        7
      81: iload         7
      83: ifne          100
      86: iload         6
      88: bipush        48
      90: if_icmplt     104
      93: iload         6
      95: bipush        57
      97: if_icmpgt     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: istore        7
     107: iload         7
     109: ifne          158
     112: iload         6
     114: bipush        95
     116: if_icmpeq     158
     119: iload         6
     121: bipush        45
     123: if_icmpeq     158
     126: iload         6
     128: bipush        46
     130: if_icmpeq     158
     133: iload         6
     135: bipush        35
     137: if_icmpeq     158
     140: iload_1
     141: ifeq          162
     144: iload         6
     146: bipush        47
     148: if_icmpeq     158
     151: iload         6
     153: bipush        92
     155: if_icmpne     162
     158: iconst_1
     159: goto          163
     162: iconst_0
     163: istore        7
     165: iload         7
     167: ifeq          181
     170: aload         4
     172: iload         6
     174: invokevirtual #20                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     177: pop
     178: goto          201
     181: aload         4
     183: bipush        35
     185: invokevirtual #20                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     188: pop
     189: aload         4
     191: iload         6
     193: iconst_1
     194: invokestatic  #21                 // Method org/apache/activemq/util/HexSupport.toHexFromInt:(IZ)Ljava/lang/String;
     197: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     200: pop
     201: iinc          5, 1
     204: goto          20
     207: aload         4
     209: invokevirtual #23                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     212: astore        5
     214: aload         5
     216: invokevirtual #16                 // Method java/lang/String.length:()I
     219: iload_2
     220: if_icmple     242
     223: aload         5
     225: aload         5
     227: invokevirtual #16                 // Method java/lang/String.length:()I
     230: iload_2
     231: isub
     232: aload         5
     234: invokevirtual #16                 // Method java/lang/String.length:()I
     237: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     240: astore        5
     242: aload         5
     244: areturn

  public static boolean delete(java.io.File);
    Code:
       0: iconst_1
       1: istore_1
       2: new           #25                 // class java/util/Stack
       5: dup
       6: invokespecial #26                 // Method java/util/Stack."<init>":()V
       9: astore_2
      10: aload_2
      11: aload_0
      12: invokevirtual #27                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_2
      17: invokevirtual #28                 // Method java/util/Stack.isEmpty:()Z
      20: ifne          142
      23: aload_2
      24: invokevirtual #29                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      27: checkcast     #30                 // class java/io/File
      30: astore_3
      31: aload_3
      32: invokevirtual #31                 // Method java/io/File.isDirectory:()Z
      35: ifeq          132
      38: aload_3
      39: invokevirtual #32                 // Method java/io/File.listFiles:()[Ljava/io/File;
      42: astore        4
      44: aload         4
      46: ifnull        55
      49: aload         4
      51: arraylength
      52: ifne          65
      55: iload_1
      56: aload_3
      57: invokevirtual #33                 // Method java/io/File.delete:()Z
      60: iand
      61: istore_1
      62: goto          129
      65: aload_2
      66: aload_3
      67: invokevirtual #27                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload         4
      73: astore        5
      75: aload         5
      77: arraylength
      78: istore        6
      80: iconst_0
      81: istore        7
      83: iload         7
      85: iload         6
      87: if_icmpge     129
      90: aload         5
      92: iload         7
      94: aaload
      95: astore        8
      97: aload         8
      99: invokevirtual #31                 // Method java/io/File.isDirectory:()Z
     102: ifeq          115
     105: aload_2
     106: aload         8
     108: invokevirtual #27                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: goto          123
     115: iload_1
     116: aload         8
     118: invokevirtual #33                 // Method java/io/File.delete:()Z
     121: iand
     122: istore_1
     123: iinc          7, 1
     126: goto          83
     129: goto          139
     132: iload_1
     133: aload_3
     134: invokevirtual #33                 // Method java/io/File.delete:()Z
     137: iand
     138: istore_1
     139: goto          16
     142: iload_1
     143: ireturn

  public static boolean deleteFile(java.io.File);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #34                 // Method java/io/File.exists:()Z
       8: ifne          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: invokestatic  #35                 // Method deleteChildren:(Ljava/io/File;)Z
      17: istore_1
      18: iload_1
      19: aload_0
      20: invokevirtual #33                 // Method java/io/File.delete:()Z
      23: iand
      24: istore_1
      25: iload_1
      26: ireturn

  public static boolean deleteChildren(java.io.File);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #34                 // Method java/io/File.exists:()Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: iconst_1
      14: istore_1
      15: aload_0
      16: invokevirtual #31                 // Method java/io/File.isDirectory:()Z
      19: ifeq          111
      22: aload_0
      23: invokevirtual #32                 // Method java/io/File.listFiles:()[Ljava/io/File;
      26: astore_2
      27: aload_2
      28: ifnonnull     36
      31: iconst_0
      32: istore_1
      33: goto          111
      36: iconst_0
      37: istore_3
      38: iload_3
      39: aload_2
      40: arraylength
      41: if_icmpge     111
      44: aload_2
      45: iload_3
      46: aaload
      47: astore        4
      49: aload         4
      51: invokevirtual #36                 // Method java/io/File.getName:()Ljava/lang/String;
      54: ldc           #37                 // String .
      56: invokevirtual #38                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifne          105
      62: aload         4
      64: invokevirtual #36                 // Method java/io/File.getName:()Ljava/lang/String;
      67: ldc           #39                 // String ..
      69: invokevirtual #38                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifeq          78
      75: goto          105
      78: aload         4
      80: invokevirtual #31                 // Method java/io/File.isDirectory:()Z
      83: ifeq          97
      86: iload_1
      87: aload         4
      89: invokestatic  #40                 // Method deleteFile:(Ljava/io/File;)Z
      92: iand
      93: istore_1
      94: goto          105
      97: iload_1
      98: aload         4
     100: invokevirtual #33                 // Method java/io/File.delete:()Z
     103: iand
     104: istore_1
     105: iinc          3, 1
     108: goto          38
     111: iload_1
     112: ireturn

  public static void moveFile(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #30                 // class java/io/File
       4: dup
       5: aload_1
       6: aload_0
       7: invokevirtual #36                 // Method java/io/File.getName:()Ljava/lang/String;
      10: invokespecial #41                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      13: invokevirtual #42                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      16: ifne          55
      19: new           #43                 // class java/io/IOException
      22: dup
      23: new           #2                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #44                 // String Failed to move
      32: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #46                 // String  to
      41: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: return

  public static void copyFile(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #48                 // Method copyFile:(Ljava/io/File;Ljava/io/File;Ljava/io/FilenameFilter;)V
       6: return

  public static void copyFile(java.io.File, java.io.File, java.io.FilenameFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #49                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       8: invokevirtual #38                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          140
      14: aload_0
      15: invokevirtual #31                 // Method java/io/File.isDirectory:()Z
      18: ifeq          103
      21: aload_1
      22: invokestatic  #50                 // Method mkdirs:(Ljava/io/File;)V
      25: aload_0
      26: aload_2
      27: invokestatic  #51                 // Method getFiles:(Ljava/io/File;Ljava/io/FilenameFilter;)Ljava/util/List;
      30: astore_3
      31: aload_3
      32: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore        4
      39: aload         4
      41: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          100
      49: aload         4
      51: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #30                 // class java/io/File
      59: astore        5
      61: aload         5
      63: invokevirtual #55                 // Method java/io/File.isFile:()Z
      66: ifeq          97
      69: new           #30                 // class java/io/File
      72: dup
      73: aload_0
      74: aload_1
      75: aload         5
      77: invokestatic  #56                 // Method getCopyParent:(Ljava/io/File;Ljava/io/File;Ljava/io/File;)Ljava/io/File;
      80: aload         5
      82: invokevirtual #36                 // Method java/io/File.getName:()Ljava/lang/String;
      85: invokespecial #41                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      88: astore        6
      90: aload         5
      92: aload         6
      94: invokestatic  #57                 // Method copySingleFile:(Ljava/io/File;Ljava/io/File;)V
      97: goto          39
     100: goto          140
     103: aload_1
     104: invokevirtual #31                 // Method java/io/File.isDirectory:()Z
     107: ifeq          135
     110: aload_1
     111: invokestatic  #50                 // Method mkdirs:(Ljava/io/File;)V
     114: new           #30                 // class java/io/File
     117: dup
     118: aload_1
     119: aload_0
     120: invokevirtual #36                 // Method java/io/File.getName:()Ljava/lang/String;
     123: invokespecial #41                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     126: astore_3
     127: aload_0
     128: aload_3
     129: invokestatic  #57                 // Method copySingleFile:(Ljava/io/File;Ljava/io/File;)V
     132: goto          140
     135: aload_0
     136: aload_1
     137: invokestatic  #57                 // Method copySingleFile:(Ljava/io/File;Ljava/io/File;)V
     140: return

  static java.io.File getCopyParent(java.io.File, java.io.File, java.io.File);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: invokevirtual #58                 // Method java/io/File.getParentFile:()Ljava/io/File;
       6: astore        4
       8: aload_0
       9: invokevirtual #59                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      12: astore        5
      14: aload         4
      16: invokevirtual #59                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      19: aload         5
      21: invokevirtual #38                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          32
      27: aload_1
      28: astore_3
      29: goto          87
      32: aload         4
      34: invokevirtual #59                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      37: astore        6
      39: aload         6
      41: aload         5
      43: invokevirtual #16                 // Method java/lang/String.length:()I
      46: invokevirtual #60                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      49: astore        7
      51: new           #30                 // class java/io/File
      54: dup
      55: new           #2                  // class java/lang/StringBuilder
      58: dup
      59: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      62: aload_1
      63: invokevirtual #59                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      66: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: getstatic     #61                 // Field java/io/File.separator:Ljava/lang/String;
      72: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload         7
      77: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #62                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      86: astore_3
      87: aload_3
      88: areturn

  static java.util.List<java.io.File> getFiles(java.io.File, java.io.FilenameFilter);
    Code:
       0: new           #63                 // class java/util/ArrayList
       3: dup
       4: invokespecial #64                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_1
      11: invokestatic  #65                 // Method getFiles:(Ljava/io/File;Ljava/util/List;Ljava/io/FilenameFilter;)V
      14: aload_2
      15: areturn

  static void getFiles(java.io.File, java.util.List<java.io.File>, java.io.FilenameFilter);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #66,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
       7: ifne          80
      10: aload_1
      11: aload_0
      12: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: aload_2
      20: invokevirtual #68                 // Method java/io/File.list:(Ljava/io/FilenameFilter;)[Ljava/lang/String;
      23: astore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: aload_3
      30: arraylength
      31: if_icmpge     80
      34: new           #30                 // class java/io/File
      37: dup
      38: aload_0
      39: aload_3
      40: iload         4
      42: aaload
      43: invokespecial #41                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      46: astore        5
      48: aload         5
      50: invokevirtual #55                 // Method java/io/File.isFile:()Z
      53: ifeq          68
      56: aload_1
      57: aload         5
      59: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          74
      68: aload_0
      69: aload_1
      70: aload_2
      71: invokestatic  #65                 // Method getFiles:(Ljava/io/File;Ljava/util/List;Ljava/io/FilenameFilter;)V
      74: iinc          4, 1
      77: goto          27
      80: return

  public static void copySingleFile(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: new           #69                 // class java/io/FileInputStream
       3: dup
       4: aload_0
       5: invokespecial #70                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       8: astore_2
       9: new           #71                 // class java/io/FileOutputStream
      12: dup
      13: aload_1
      14: invokespecial #72                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      17: astore_3
      18: aload_2
      19: aload_3
      20: invokestatic  #73                 // Method copyInputStream:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      23: return

  public static void copyInputStream(java.io.InputStream, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: sipush        4096
       3: newarray       byte
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #74                 // Method java/io/InputStream.read:([B)I
      11: istore_3
      12: iload_3
      13: iflt          32
      16: aload_1
      17: aload_2
      18: iconst_0
      19: iload_3
      20: invokevirtual #75                 // Method java/io/OutputStream.write:([BII)V
      23: aload_0
      24: aload_2
      25: invokevirtual #74                 // Method java/io/InputStream.read:([B)I
      28: istore_3
      29: goto          12
      32: aload_0
      33: invokevirtual #76                 // Method java/io/InputStream.close:()V
      36: aload_1
      37: invokevirtual #77                 // Method java/io/OutputStream.close:()V
      40: return

  public static int getMaxDirNameLength();
    Code:
       0: getstatic     #13                 // Field MAX_DIR_NAME_LENGTH:I
       3: ireturn

  public static int getMaxFileNameLength();
    Code:
       0: getstatic     #15                 // Field MAX_FILE_NAME_LENGTH:I
       3: ireturn

  public static void mkdirs(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method java/io/File.exists:()Z
       4: ifeq          46
       7: aload_0
       8: invokevirtual #31                 // Method java/io/File.isDirectory:()Z
      11: ifne          85
      14: new           #43                 // class java/io/IOException
      17: dup
      18: new           #2                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #78                 // String Failed to create directory \'
      27: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #79                 // String \', regular file already existed with that name
      36: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: invokevirtual #80                 // Method java/io/File.mkdirs:()Z
      50: ifne          85
      53: new           #43                 // class java/io/IOException
      56: dup
      57: new           #2                  // class java/lang/StringBuilder
      60: dup
      61: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #78                 // String Failed to create directory \'
      66: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: ldc           #81                 // String \'
      75: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: return

  static {};
    Code:
       0: ldc           #82                 // String MaximumDirNameLength
       2: sipush        200
       5: invokestatic  #83                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       8: invokevirtual #84                 // Method java/lang/Integer.intValue:()I
      11: putstatic     #13                 // Field MAX_DIR_NAME_LENGTH:I
      14: ldc           #85                 // String MaximumFileNameLength
      16: bipush        64
      18: invokestatic  #83                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      21: invokevirtual #84                 // Method java/lang/Integer.intValue:()I
      24: putstatic     #15                 // Field MAX_FILE_NAME_LENGTH:I
      27: return
}
