Compiled from "BaseCommandMarshaller.java"
public abstract class org.apache.activemq.openwire.v7.BaseCommandMarshaller extends org.apache.activemq.openwire.v7.BaseDataStreamMarshaller {
  public org.apache.activemq.openwire.v7.BaseCommandMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v7/BaseDataStreamMarshaller."<init>":()V
       4: return

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #2                  // Method org/apache/activemq/openwire/v7/BaseDataStreamMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #3                  // class org/apache/activemq/command/BaseCommand
      13: astore        5
      15: aload         5
      17: aload_3
      18: invokeinterface #4,  1            // InterfaceMethod java/io/DataInput.readInt:()I
      23: invokevirtual #5                  // Method org/apache/activemq/command/BaseCommand.setCommandId:(I)V
      26: aload         5
      28: aload         4
      30: invokevirtual #6                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      33: invokevirtual #7                  // Method org/apache/activemq/command/BaseCommand.setResponseRequired:(Z)V
      36: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #3                  // class org/apache/activemq/command/BaseCommand
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #8                  // Method org/apache/activemq/openwire/v7/BaseDataStreamMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: aload_3
      16: aload         4
      18: invokevirtual #9                  // Method org/apache/activemq/command/BaseCommand.isResponseRequired:()Z
      21: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      24: iload         5
      26: iconst_4
      27: iadd
      28: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #11                 // Method org/apache/activemq/openwire/v7/BaseDataStreamMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #3                  // class org/apache/activemq/command/BaseCommand
      13: astore        5
      15: aload_3
      16: aload         5
      18: invokevirtual #12                 // Method org/apache/activemq/command/BaseCommand.getCommandId:()I
      21: invokeinterface #13,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      26: aload         4
      28: invokevirtual #6                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      31: pop
      32: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #14                 // Method org/apache/activemq/openwire/v7/BaseDataStreamMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #3                  // class org/apache/activemq/command/BaseCommand
      11: astore        4
      13: aload         4
      15: aload_3
      16: invokeinterface #4,  1            // InterfaceMethod java/io/DataInput.readInt:()I
      21: invokevirtual #5                  // Method org/apache/activemq/command/BaseCommand.setCommandId:(I)V
      24: aload         4
      26: aload_3
      27: invokeinterface #15,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
      32: invokevirtual #7                  // Method org/apache/activemq/command/BaseCommand.setResponseRequired:(Z)V
      35: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #3                  // class org/apache/activemq/command/BaseCommand
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #16                 // Method org/apache/activemq/openwire/v7/BaseDataStreamMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_3
      14: aload         4
      16: invokevirtual #12                 // Method org/apache/activemq/command/BaseCommand.getCommandId:()I
      19: invokeinterface #13,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      24: aload_3
      25: aload         4
      27: invokevirtual #9                  // Method org/apache/activemq/command/BaseCommand.isResponseRequired:()Z
      30: invokeinterface #17,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      35: return
}
