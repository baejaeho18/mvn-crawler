Compiled from "DiscoveryEventMarshaller.java"
public class org.apache.activemq.openwire.v9.DiscoveryEventMarshaller extends org.apache.activemq.openwire.v9.BaseDataStreamMarshaller {
  public org.apache.activemq.openwire.v9.DiscoveryEventMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v9/BaseDataStreamMarshaller."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: bipush        40
       2: ireturn

  public org.apache.activemq.command.DataStructure createObject();
    Code:
       0: new           #2                  // class org/apache/activemq/command/DiscoveryEvent
       3: dup
       4: invokespecial #3                  // Method org/apache/activemq/command/DiscoveryEvent."<init>":()V
       7: areturn

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/activemq/openwire/v9/BaseDataStreamMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/DiscoveryEvent
      13: astore        5
      15: aload         5
      17: aload_0
      18: aload_3
      19: aload         4
      21: invokevirtual #5                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      24: invokevirtual #6                  // Method org/apache/activemq/command/DiscoveryEvent.setServiceName:(Ljava/lang/String;)V
      27: aload         5
      29: aload_0
      30: aload_3
      31: aload         4
      33: invokevirtual #5                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      36: invokevirtual #7                  // Method org/apache/activemq/command/DiscoveryEvent.setBrokerName:(Ljava/lang/String;)V
      39: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/DiscoveryEvent
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #8                  // Method org/apache/activemq/openwire/v9/BaseDataStreamMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: iload         5
      17: aload_0
      18: aload         4
      20: invokevirtual #9                  // Method org/apache/activemq/command/DiscoveryEvent.getServiceName:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #10                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      27: iadd
      28: istore        5
      30: iload         5
      32: aload_0
      33: aload         4
      35: invokevirtual #11                 // Method org/apache/activemq/command/DiscoveryEvent.getBrokerName:()Ljava/lang/String;
      38: aload_3
      39: invokevirtual #10                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      42: iadd
      43: istore        5
      45: iload         5
      47: iconst_0
      48: iadd
      49: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #12                 // Method org/apache/activemq/openwire/v9/BaseDataStreamMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/DiscoveryEvent
      13: astore        5
      15: aload_0
      16: aload         5
      18: invokevirtual #9                  // Method org/apache/activemq/command/DiscoveryEvent.getServiceName:()Ljava/lang/String;
      21: aload_3
      22: aload         4
      24: invokevirtual #13                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      27: aload_0
      28: aload         5
      30: invokevirtual #11                 // Method org/apache/activemq/command/DiscoveryEvent.getBrokerName:()Ljava/lang/String;
      33: aload_3
      34: aload         4
      36: invokevirtual #13                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      39: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #14                 // Method org/apache/activemq/openwire/v9/BaseDataStreamMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #2                  // class org/apache/activemq/command/DiscoveryEvent
      11: astore        4
      13: aload         4
      15: aload_0
      16: aload_3
      17: invokevirtual #15                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      20: invokevirtual #6                  // Method org/apache/activemq/command/DiscoveryEvent.setServiceName:(Ljava/lang/String;)V
      23: aload         4
      25: aload_0
      26: aload_3
      27: invokevirtual #15                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      30: invokevirtual #7                  // Method org/apache/activemq/command/DiscoveryEvent.setBrokerName:(Ljava/lang/String;)V
      33: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/DiscoveryEvent
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #16                 // Method org/apache/activemq/openwire/v9/BaseDataStreamMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_0
      14: aload         4
      16: invokevirtual #9                  // Method org/apache/activemq/command/DiscoveryEvent.getServiceName:()Ljava/lang/String;
      19: aload_3
      20: invokevirtual #17                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      23: aload_0
      24: aload         4
      26: invokevirtual #11                 // Method org/apache/activemq/command/DiscoveryEvent.getBrokerName:()Ljava/lang/String;
      29: aload_3
      30: invokevirtual #17                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      33: return
}
