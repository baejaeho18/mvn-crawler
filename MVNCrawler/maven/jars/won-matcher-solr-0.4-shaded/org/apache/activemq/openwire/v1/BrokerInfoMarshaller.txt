Compiled from "BrokerInfoMarshaller.java"
public class org.apache.activemq.openwire.v1.BrokerInfoMarshaller extends org.apache.activemq.openwire.v1.BaseCommandMarshaller {
  public org.apache.activemq.openwire.v1.BrokerInfoMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v1/BaseCommandMarshaller."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: iconst_2
       1: ireturn

  public org.apache.activemq.command.DataStructure createObject();
    Code:
       0: new           #2                  // class org/apache/activemq/command/BrokerInfo
       3: dup
       4: invokespecial #3                  // Method org/apache/activemq/command/BrokerInfo."<init>":()V
       7: areturn

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/activemq/openwire/v1/BaseCommandMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/BrokerInfo
      13: astore        5
      15: aload         5
      17: aload_0
      18: aload_1
      19: aload_3
      20: aload         4
      22: invokevirtual #5                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      25: checkcast     #6                  // class org/apache/activemq/command/BrokerId
      28: invokevirtual #7                  // Method org/apache/activemq/command/BrokerInfo.setBrokerId:(Lorg/apache/activemq/command/BrokerId;)V
      31: aload         5
      33: aload_0
      34: aload_3
      35: aload         4
      37: invokevirtual #8                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      40: invokevirtual #9                  // Method org/apache/activemq/command/BrokerInfo.setBrokerURL:(Ljava/lang/String;)V
      43: aload         4
      45: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      48: ifeq          108
      51: aload_3
      52: invokeinterface #11,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      57: istore        6
      59: iload         6
      61: anewarray     #2                  // class org/apache/activemq/command/BrokerInfo
      64: astore        7
      66: iconst_0
      67: istore        8
      69: iload         8
      71: iload         6
      73: if_icmpge     98
      76: aload         7
      78: iload         8
      80: aload_0
      81: aload_1
      82: aload_3
      83: aload         4
      85: invokevirtual #12                 // Method tightUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      88: checkcast     #2                  // class org/apache/activemq/command/BrokerInfo
      91: aastore
      92: iinc          8, 1
      95: goto          69
      98: aload         5
     100: aload         7
     102: invokevirtual #13                 // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
     105: goto          114
     108: aload         5
     110: aconst_null
     111: invokevirtual #13                 // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
     114: aload         5
     116: aload_0
     117: aload_3
     118: aload         4
     120: invokevirtual #8                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
     123: invokevirtual #14                 // Method org/apache/activemq/command/BrokerInfo.setBrokerName:(Ljava/lang/String;)V
     126: aload         5
     128: aload         4
     130: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
     133: invokevirtual #15                 // Method org/apache/activemq/command/BrokerInfo.setSlaveBroker:(Z)V
     136: aload         5
     138: aload         4
     140: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
     143: invokevirtual #16                 // Method org/apache/activemq/command/BrokerInfo.setMasterBroker:(Z)V
     146: aload         5
     148: aload         4
     150: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
     153: invokevirtual #17                 // Method org/apache/activemq/command/BrokerInfo.setFaultTolerantConfiguration:(Z)V
     156: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/BrokerInfo
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #18                 // Method org/apache/activemq/openwire/v1/BaseCommandMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: iload         5
      17: aload_0
      18: aload_1
      19: aload         4
      21: invokevirtual #19                 // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      24: aload_3
      25: invokevirtual #20                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      28: iadd
      29: istore        5
      31: iload         5
      33: aload_0
      34: aload         4
      36: invokevirtual #21                 // Method org/apache/activemq/command/BrokerInfo.getBrokerURL:()Ljava/lang/String;
      39: aload_3
      40: invokevirtual #22                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      43: iadd
      44: istore        5
      46: iload         5
      48: aload_0
      49: aload_1
      50: aload         4
      52: invokevirtual #23                 // Method org/apache/activemq/command/BrokerInfo.getPeerBrokerInfos:()[Lorg/apache/activemq/command/BrokerInfo;
      55: aload_3
      56: invokevirtual #24                 // Method tightMarshalObjectArray1:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      59: iadd
      60: istore        5
      62: iload         5
      64: aload_0
      65: aload         4
      67: invokevirtual #25                 // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      70: aload_3
      71: invokevirtual #22                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      74: iadd
      75: istore        5
      77: aload_3
      78: aload         4
      80: invokevirtual #26                 // Method org/apache/activemq/command/BrokerInfo.isSlaveBroker:()Z
      83: invokevirtual #27                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      86: aload_3
      87: aload         4
      89: invokevirtual #28                 // Method org/apache/activemq/command/BrokerInfo.isMasterBroker:()Z
      92: invokevirtual #27                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      95: aload_3
      96: aload         4
      98: invokevirtual #29                 // Method org/apache/activemq/command/BrokerInfo.isFaultTolerantConfiguration:()Z
     101: invokevirtual #27                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
     104: iload         5
     106: iconst_0
     107: iadd
     108: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #30                 // Method org/apache/activemq/openwire/v1/BaseCommandMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/BrokerInfo
      13: astore        5
      15: aload_0
      16: aload_1
      17: aload         5
      19: invokevirtual #19                 // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      22: aload_3
      23: aload         4
      25: invokevirtual #31                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      28: aload_0
      29: aload         5
      31: invokevirtual #21                 // Method org/apache/activemq/command/BrokerInfo.getBrokerURL:()Ljava/lang/String;
      34: aload_3
      35: aload         4
      37: invokevirtual #32                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      40: aload_0
      41: aload_1
      42: aload         5
      44: invokevirtual #23                 // Method org/apache/activemq/command/BrokerInfo.getPeerBrokerInfos:()[Lorg/apache/activemq/command/BrokerInfo;
      47: aload_3
      48: aload         4
      50: invokevirtual #33                 // Method tightMarshalObjectArray2:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      53: aload_0
      54: aload         5
      56: invokevirtual #25                 // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      59: aload_3
      60: aload         4
      62: invokevirtual #32                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      65: aload         4
      67: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      70: pop
      71: aload         4
      73: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      76: pop
      77: aload         4
      79: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      82: pop
      83: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #34                 // Method org/apache/activemq/openwire/v1/BaseCommandMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #2                  // class org/apache/activemq/command/BrokerInfo
      11: astore        4
      13: aload         4
      15: aload_0
      16: aload_1
      17: aload_3
      18: invokevirtual #35                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      21: checkcast     #6                  // class org/apache/activemq/command/BrokerId
      24: invokevirtual #7                  // Method org/apache/activemq/command/BrokerInfo.setBrokerId:(Lorg/apache/activemq/command/BrokerId;)V
      27: aload         4
      29: aload_0
      30: aload_3
      31: invokevirtual #36                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      34: invokevirtual #9                  // Method org/apache/activemq/command/BrokerInfo.setBrokerURL:(Ljava/lang/String;)V
      37: aload_3
      38: invokeinterface #37,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
      43: ifeq          101
      46: aload_3
      47: invokeinterface #11,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      52: istore        5
      54: iload         5
      56: anewarray     #2                  // class org/apache/activemq/command/BrokerInfo
      59: astore        6
      61: iconst_0
      62: istore        7
      64: iload         7
      66: iload         5
      68: if_icmpge     91
      71: aload         6
      73: iload         7
      75: aload_0
      76: aload_1
      77: aload_3
      78: invokevirtual #38                 // Method looseUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      81: checkcast     #2                  // class org/apache/activemq/command/BrokerInfo
      84: aastore
      85: iinc          7, 1
      88: goto          64
      91: aload         4
      93: aload         6
      95: invokevirtual #13                 // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
      98: goto          107
     101: aload         4
     103: aconst_null
     104: invokevirtual #13                 // Method org/apache/activemq/command/BrokerInfo.setPeerBrokerInfos:([Lorg/apache/activemq/command/BrokerInfo;)V
     107: aload         4
     109: aload_0
     110: aload_3
     111: invokevirtual #36                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
     114: invokevirtual #14                 // Method org/apache/activemq/command/BrokerInfo.setBrokerName:(Ljava/lang/String;)V
     117: aload         4
     119: aload_3
     120: invokeinterface #37,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
     125: invokevirtual #15                 // Method org/apache/activemq/command/BrokerInfo.setSlaveBroker:(Z)V
     128: aload         4
     130: aload_3
     131: invokeinterface #37,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
     136: invokevirtual #16                 // Method org/apache/activemq/command/BrokerInfo.setMasterBroker:(Z)V
     139: aload         4
     141: aload_3
     142: invokeinterface #37,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
     147: invokevirtual #17                 // Method org/apache/activemq/command/BrokerInfo.setFaultTolerantConfiguration:(Z)V
     150: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/BrokerInfo
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #39                 // Method org/apache/activemq/openwire/v1/BaseCommandMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_0
      14: aload_1
      15: aload         4
      17: invokevirtual #19                 // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      20: aload_3
      21: invokevirtual #40                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      24: aload_0
      25: aload         4
      27: invokevirtual #21                 // Method org/apache/activemq/command/BrokerInfo.getBrokerURL:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #41                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      34: aload_0
      35: aload_1
      36: aload         4
      38: invokevirtual #23                 // Method org/apache/activemq/command/BrokerInfo.getPeerBrokerInfos:()[Lorg/apache/activemq/command/BrokerInfo;
      41: aload_3
      42: invokevirtual #42                 // Method looseMarshalObjectArray:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      45: aload_0
      46: aload         4
      48: invokevirtual #25                 // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      51: aload_3
      52: invokevirtual #41                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      55: aload_3
      56: aload         4
      58: invokevirtual #26                 // Method org/apache/activemq/command/BrokerInfo.isSlaveBroker:()Z
      61: invokeinterface #43,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      66: aload_3
      67: aload         4
      69: invokevirtual #28                 // Method org/apache/activemq/command/BrokerInfo.isMasterBroker:()Z
      72: invokeinterface #43,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      77: aload_3
      78: aload         4
      80: invokevirtual #29                 // Method org/apache/activemq/command/BrokerInfo.isFaultTolerantConfiguration:()Z
      83: invokeinterface #43,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      88: return
}
