Compiled from "NetworkBridgeFilterMarshaller.java"
public class org.apache.activemq.openwire.v1.NetworkBridgeFilterMarshaller extends org.apache.activemq.openwire.v1.BaseDataStreamMarshaller {
  public org.apache.activemq.openwire.v1.NetworkBridgeFilterMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: bipush        91
       2: ireturn

  public org.apache.activemq.command.DataStructure createObject();
    Code:
       0: new           #2                  // class org/apache/activemq/command/NetworkBridgeFilter
       3: dup
       4: invokespecial #3                  // Method org/apache/activemq/command/NetworkBridgeFilter."<init>":()V
       7: areturn

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/NetworkBridgeFilter
      13: astore        5
      15: aload         5
      17: aload_3
      18: invokeinterface #5,  1            // InterfaceMethod java/io/DataInput.readInt:()I
      23: invokevirtual #6                  // Method org/apache/activemq/command/NetworkBridgeFilter.setNetworkTTL:(I)V
      26: aload         5
      28: aload_0
      29: aload_1
      30: aload_3
      31: aload         4
      33: invokevirtual #7                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      36: checkcast     #8                  // class org/apache/activemq/command/BrokerId
      39: invokevirtual #9                  // Method org/apache/activemq/command/NetworkBridgeFilter.setNetworkBrokerId:(Lorg/apache/activemq/command/BrokerId;)V
      42: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/NetworkBridgeFilter
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #10                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: iload         5
      17: aload_0
      18: aload_1
      19: aload         4
      21: invokevirtual #11                 // Method org/apache/activemq/command/NetworkBridgeFilter.getNetworkBrokerId:()Lorg/apache/activemq/command/BrokerId;
      24: aload_3
      25: invokevirtual #12                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      28: iadd
      29: istore        5
      31: iload         5
      33: iconst_4
      34: iadd
      35: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #13                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/NetworkBridgeFilter
      13: astore        5
      15: aload_3
      16: aload         5
      18: invokevirtual #14                 // Method org/apache/activemq/command/NetworkBridgeFilter.getNetworkTTL:()I
      21: invokeinterface #15,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      26: aload_0
      27: aload_1
      28: aload         5
      30: invokevirtual #11                 // Method org/apache/activemq/command/NetworkBridgeFilter.getNetworkBrokerId:()Lorg/apache/activemq/command/BrokerId;
      33: aload_3
      34: aload         4
      36: invokevirtual #16                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      39: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #17                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #2                  // class org/apache/activemq/command/NetworkBridgeFilter
      11: astore        4
      13: aload         4
      15: aload_3
      16: invokeinterface #5,  1            // InterfaceMethod java/io/DataInput.readInt:()I
      21: invokevirtual #6                  // Method org/apache/activemq/command/NetworkBridgeFilter.setNetworkTTL:(I)V
      24: aload         4
      26: aload_0
      27: aload_1
      28: aload_3
      29: invokevirtual #18                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      32: checkcast     #8                  // class org/apache/activemq/command/BrokerId
      35: invokevirtual #9                  // Method org/apache/activemq/command/NetworkBridgeFilter.setNetworkBrokerId:(Lorg/apache/activemq/command/BrokerId;)V
      38: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/NetworkBridgeFilter
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #19                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_3
      14: aload         4
      16: invokevirtual #14                 // Method org/apache/activemq/command/NetworkBridgeFilter.getNetworkTTL:()I
      19: invokeinterface #15,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      24: aload_0
      25: aload_1
      26: aload         4
      28: invokevirtual #11                 // Method org/apache/activemq/command/NetworkBridgeFilter.getNetworkBrokerId:()Lorg/apache/activemq/command/BrokerId;
      31: aload_3
      32: invokevirtual #20                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      35: return
}
