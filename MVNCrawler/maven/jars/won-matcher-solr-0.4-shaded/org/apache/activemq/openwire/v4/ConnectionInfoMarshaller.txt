Compiled from "ConnectionInfoMarshaller.java"
public class org.apache.activemq.openwire.v4.ConnectionInfoMarshaller extends org.apache.activemq.openwire.v4.BaseCommandMarshaller {
  public org.apache.activemq.openwire.v4.ConnectionInfoMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v4/BaseCommandMarshaller."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: iconst_3
       1: ireturn

  public org.apache.activemq.command.DataStructure createObject();
    Code:
       0: new           #2                  // class org/apache/activemq/command/ConnectionInfo
       3: dup
       4: invokespecial #3                  // Method org/apache/activemq/command/ConnectionInfo."<init>":()V
       7: areturn

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/activemq/openwire/v4/BaseCommandMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/ConnectionInfo
      13: astore        5
      15: aload         5
      17: aload_0
      18: aload_1
      19: aload_3
      20: aload         4
      22: invokevirtual #5                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      25: checkcast     #6                  // class org/apache/activemq/command/ConnectionId
      28: invokevirtual #7                  // Method org/apache/activemq/command/ConnectionInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
      31: aload         5
      33: aload_0
      34: aload_3
      35: aload         4
      37: invokevirtual #8                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      40: invokevirtual #9                  // Method org/apache/activemq/command/ConnectionInfo.setClientId:(Ljava/lang/String;)V
      43: aload         5
      45: aload_0
      46: aload_3
      47: aload         4
      49: invokevirtual #8                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      52: invokevirtual #10                 // Method org/apache/activemq/command/ConnectionInfo.setPassword:(Ljava/lang/String;)V
      55: aload         5
      57: aload_0
      58: aload_3
      59: aload         4
      61: invokevirtual #8                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      64: invokevirtual #11                 // Method org/apache/activemq/command/ConnectionInfo.setUserName:(Ljava/lang/String;)V
      67: aload         4
      69: invokevirtual #12                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      72: ifeq          132
      75: aload_3
      76: invokeinterface #13,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      81: istore        6
      83: iload         6
      85: anewarray     #14                 // class org/apache/activemq/command/BrokerId
      88: astore        7
      90: iconst_0
      91: istore        8
      93: iload         8
      95: iload         6
      97: if_icmpge     122
     100: aload         7
     102: iload         8
     104: aload_0
     105: aload_1
     106: aload_3
     107: aload         4
     109: invokevirtual #15                 // Method tightUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
     112: checkcast     #14                 // class org/apache/activemq/command/BrokerId
     115: aastore
     116: iinc          8, 1
     119: goto          93
     122: aload         5
     124: aload         7
     126: invokevirtual #16                 // Method org/apache/activemq/command/ConnectionInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     129: goto          138
     132: aload         5
     134: aconst_null
     135: invokevirtual #16                 // Method org/apache/activemq/command/ConnectionInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     138: aload         5
     140: aload         4
     142: invokevirtual #12                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
     145: invokevirtual #17                 // Method org/apache/activemq/command/ConnectionInfo.setBrokerMasterConnector:(Z)V
     148: aload         5
     150: aload         4
     152: invokevirtual #12                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
     155: invokevirtual #18                 // Method org/apache/activemq/command/ConnectionInfo.setManageable:(Z)V
     158: aload         5
     160: aload         4
     162: invokevirtual #12                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
     165: invokevirtual #19                 // Method org/apache/activemq/command/ConnectionInfo.setClientMaster:(Z)V
     168: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/ConnectionInfo
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #20                 // Method org/apache/activemq/openwire/v4/BaseCommandMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: iload         5
      17: aload_0
      18: aload_1
      19: aload         4
      21: invokevirtual #21                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      24: aload_3
      25: invokevirtual #22                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      28: iadd
      29: istore        5
      31: iload         5
      33: aload_0
      34: aload         4
      36: invokevirtual #23                 // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
      39: aload_3
      40: invokevirtual #24                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      43: iadd
      44: istore        5
      46: iload         5
      48: aload_0
      49: aload         4
      51: invokevirtual #25                 // Method org/apache/activemq/command/ConnectionInfo.getPassword:()Ljava/lang/String;
      54: aload_3
      55: invokevirtual #24                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      58: iadd
      59: istore        5
      61: iload         5
      63: aload_0
      64: aload         4
      66: invokevirtual #26                 // Method org/apache/activemq/command/ConnectionInfo.getUserName:()Ljava/lang/String;
      69: aload_3
      70: invokevirtual #24                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      73: iadd
      74: istore        5
      76: iload         5
      78: aload_0
      79: aload_1
      80: aload         4
      82: invokevirtual #27                 // Method org/apache/activemq/command/ConnectionInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      85: aload_3
      86: invokevirtual #28                 // Method tightMarshalObjectArray1:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      89: iadd
      90: istore        5
      92: aload_3
      93: aload         4
      95: invokevirtual #29                 // Method org/apache/activemq/command/ConnectionInfo.isBrokerMasterConnector:()Z
      98: invokevirtual #30                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
     101: aload_3
     102: aload         4
     104: invokevirtual #31                 // Method org/apache/activemq/command/ConnectionInfo.isManageable:()Z
     107: invokevirtual #30                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
     110: aload_3
     111: aload         4
     113: invokevirtual #32                 // Method org/apache/activemq/command/ConnectionInfo.isClientMaster:()Z
     116: invokevirtual #30                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
     119: iload         5
     121: iconst_0
     122: iadd
     123: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #33                 // Method org/apache/activemq/openwire/v4/BaseCommandMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/ConnectionInfo
      13: astore        5
      15: aload_0
      16: aload_1
      17: aload         5
      19: invokevirtual #21                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      22: aload_3
      23: aload         4
      25: invokevirtual #34                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      28: aload_0
      29: aload         5
      31: invokevirtual #23                 // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
      34: aload_3
      35: aload         4
      37: invokevirtual #35                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      40: aload_0
      41: aload         5
      43: invokevirtual #25                 // Method org/apache/activemq/command/ConnectionInfo.getPassword:()Ljava/lang/String;
      46: aload_3
      47: aload         4
      49: invokevirtual #35                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      52: aload_0
      53: aload         5
      55: invokevirtual #26                 // Method org/apache/activemq/command/ConnectionInfo.getUserName:()Ljava/lang/String;
      58: aload_3
      59: aload         4
      61: invokevirtual #35                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      64: aload_0
      65: aload_1
      66: aload         5
      68: invokevirtual #27                 // Method org/apache/activemq/command/ConnectionInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      71: aload_3
      72: aload         4
      74: invokevirtual #36                 // Method tightMarshalObjectArray2:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      77: aload         4
      79: invokevirtual #12                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      82: pop
      83: aload         4
      85: invokevirtual #12                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      88: pop
      89: aload         4
      91: invokevirtual #12                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      94: pop
      95: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #37                 // Method org/apache/activemq/openwire/v4/BaseCommandMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #2                  // class org/apache/activemq/command/ConnectionInfo
      11: astore        4
      13: aload         4
      15: aload_0
      16: aload_1
      17: aload_3
      18: invokevirtual #38                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      21: checkcast     #6                  // class org/apache/activemq/command/ConnectionId
      24: invokevirtual #7                  // Method org/apache/activemq/command/ConnectionInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
      27: aload         4
      29: aload_0
      30: aload_3
      31: invokevirtual #39                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      34: invokevirtual #9                  // Method org/apache/activemq/command/ConnectionInfo.setClientId:(Ljava/lang/String;)V
      37: aload         4
      39: aload_0
      40: aload_3
      41: invokevirtual #39                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      44: invokevirtual #10                 // Method org/apache/activemq/command/ConnectionInfo.setPassword:(Ljava/lang/String;)V
      47: aload         4
      49: aload_0
      50: aload_3
      51: invokevirtual #39                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      54: invokevirtual #11                 // Method org/apache/activemq/command/ConnectionInfo.setUserName:(Ljava/lang/String;)V
      57: aload_3
      58: invokeinterface #40,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
      63: ifeq          121
      66: aload_3
      67: invokeinterface #13,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      72: istore        5
      74: iload         5
      76: anewarray     #14                 // class org/apache/activemq/command/BrokerId
      79: astore        6
      81: iconst_0
      82: istore        7
      84: iload         7
      86: iload         5
      88: if_icmpge     111
      91: aload         6
      93: iload         7
      95: aload_0
      96: aload_1
      97: aload_3
      98: invokevirtual #41                 // Method looseUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
     101: checkcast     #14                 // class org/apache/activemq/command/BrokerId
     104: aastore
     105: iinc          7, 1
     108: goto          84
     111: aload         4
     113: aload         6
     115: invokevirtual #16                 // Method org/apache/activemq/command/ConnectionInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     118: goto          127
     121: aload         4
     123: aconst_null
     124: invokevirtual #16                 // Method org/apache/activemq/command/ConnectionInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     127: aload         4
     129: aload_3
     130: invokeinterface #40,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
     135: invokevirtual #17                 // Method org/apache/activemq/command/ConnectionInfo.setBrokerMasterConnector:(Z)V
     138: aload         4
     140: aload_3
     141: invokeinterface #40,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
     146: invokevirtual #18                 // Method org/apache/activemq/command/ConnectionInfo.setManageable:(Z)V
     149: aload         4
     151: aload_3
     152: invokeinterface #40,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
     157: invokevirtual #19                 // Method org/apache/activemq/command/ConnectionInfo.setClientMaster:(Z)V
     160: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/ConnectionInfo
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #42                 // Method org/apache/activemq/openwire/v4/BaseCommandMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_0
      14: aload_1
      15: aload         4
      17: invokevirtual #21                 // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      20: aload_3
      21: invokevirtual #43                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      24: aload_0
      25: aload         4
      27: invokevirtual #23                 // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #44                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      34: aload_0
      35: aload         4
      37: invokevirtual #25                 // Method org/apache/activemq/command/ConnectionInfo.getPassword:()Ljava/lang/String;
      40: aload_3
      41: invokevirtual #44                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      44: aload_0
      45: aload         4
      47: invokevirtual #26                 // Method org/apache/activemq/command/ConnectionInfo.getUserName:()Ljava/lang/String;
      50: aload_3
      51: invokevirtual #44                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      54: aload_0
      55: aload_1
      56: aload         4
      58: invokevirtual #27                 // Method org/apache/activemq/command/ConnectionInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      61: aload_3
      62: invokevirtual #45                 // Method looseMarshalObjectArray:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      65: aload_3
      66: aload         4
      68: invokevirtual #29                 // Method org/apache/activemq/command/ConnectionInfo.isBrokerMasterConnector:()Z
      71: invokeinterface #46,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      76: aload_3
      77: aload         4
      79: invokevirtual #31                 // Method org/apache/activemq/command/ConnectionInfo.isManageable:()Z
      82: invokeinterface #46,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      87: aload_3
      88: aload         4
      90: invokevirtual #32                 // Method org/apache/activemq/command/ConnectionInfo.isClientMaster:()Z
      93: invokeinterface #46,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      98: return
}
