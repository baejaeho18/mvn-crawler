Compiled from "ProducerIdMarshaller.java"
public class org.apache.activemq.openwire.v1.ProducerIdMarshaller extends org.apache.activemq.openwire.v1.BaseDataStreamMarshaller {
  public org.apache.activemq.openwire.v1.ProducerIdMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: bipush        123
       2: ireturn

  public org.apache.activemq.command.DataStructure createObject();
    Code:
       0: new           #2                  // class org/apache/activemq/command/ProducerId
       3: dup
       4: invokespecial #3                  // Method org/apache/activemq/command/ProducerId."<init>":()V
       7: areturn

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/ProducerId
      13: astore        5
      15: aload         5
      17: aload_0
      18: aload_3
      19: aload         4
      21: invokevirtual #5                  // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      24: invokevirtual #6                  // Method org/apache/activemq/command/ProducerId.setConnectionId:(Ljava/lang/String;)V
      27: aload         5
      29: aload_0
      30: aload_1
      31: aload_3
      32: aload         4
      34: invokevirtual #7                  // Method tightUnmarshalLong:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)J
      37: invokevirtual #8                  // Method org/apache/activemq/command/ProducerId.setValue:(J)V
      40: aload         5
      42: aload_0
      43: aload_1
      44: aload_3
      45: aload         4
      47: invokevirtual #7                  // Method tightUnmarshalLong:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)J
      50: invokevirtual #9                  // Method org/apache/activemq/command/ProducerId.setSessionId:(J)V
      53: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/ProducerId
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #10                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: iload         5
      17: aload_0
      18: aload         4
      20: invokevirtual #11                 // Method org/apache/activemq/command/ProducerId.getConnectionId:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #12                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      27: iadd
      28: istore        5
      30: iload         5
      32: aload_0
      33: aload_1
      34: aload         4
      36: invokevirtual #13                 // Method org/apache/activemq/command/ProducerId.getValue:()J
      39: aload_3
      40: invokevirtual #14                 // Method tightMarshalLong1:(Lorg/apache/activemq/openwire/OpenWireFormat;JLorg/apache/activemq/openwire/BooleanStream;)I
      43: iadd
      44: istore        5
      46: iload         5
      48: aload_0
      49: aload_1
      50: aload         4
      52: invokevirtual #15                 // Method org/apache/activemq/command/ProducerId.getSessionId:()J
      55: aload_3
      56: invokevirtual #14                 // Method tightMarshalLong1:(Lorg/apache/activemq/openwire/OpenWireFormat;JLorg/apache/activemq/openwire/BooleanStream;)I
      59: iadd
      60: istore        5
      62: iload         5
      64: iconst_0
      65: iadd
      66: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #16                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/ProducerId
      13: astore        5
      15: aload_0
      16: aload         5
      18: invokevirtual #11                 // Method org/apache/activemq/command/ProducerId.getConnectionId:()Ljava/lang/String;
      21: aload_3
      22: aload         4
      24: invokevirtual #17                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      27: aload_0
      28: aload_1
      29: aload         5
      31: invokevirtual #13                 // Method org/apache/activemq/command/ProducerId.getValue:()J
      34: aload_3
      35: aload         4
      37: invokevirtual #18                 // Method tightMarshalLong2:(Lorg/apache/activemq/openwire/OpenWireFormat;JLjava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      40: aload_0
      41: aload_1
      42: aload         5
      44: invokevirtual #15                 // Method org/apache/activemq/command/ProducerId.getSessionId:()J
      47: aload_3
      48: aload         4
      50: invokevirtual #18                 // Method tightMarshalLong2:(Lorg/apache/activemq/openwire/OpenWireFormat;JLjava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      53: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #19                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #2                  // class org/apache/activemq/command/ProducerId
      11: astore        4
      13: aload         4
      15: aload_0
      16: aload_3
      17: invokevirtual #20                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      20: invokevirtual #6                  // Method org/apache/activemq/command/ProducerId.setConnectionId:(Ljava/lang/String;)V
      23: aload         4
      25: aload_0
      26: aload_1
      27: aload_3
      28: invokevirtual #21                 // Method looseUnmarshalLong:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)J
      31: invokevirtual #8                  // Method org/apache/activemq/command/ProducerId.setValue:(J)V
      34: aload         4
      36: aload_0
      37: aload_1
      38: aload_3
      39: invokevirtual #21                 // Method looseUnmarshalLong:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)J
      42: invokevirtual #9                  // Method org/apache/activemq/command/ProducerId.setSessionId:(J)V
      45: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/ProducerId
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #22                 // Method org/apache/activemq/openwire/v1/BaseDataStreamMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_0
      14: aload         4
      16: invokevirtual #11                 // Method org/apache/activemq/command/ProducerId.getConnectionId:()Ljava/lang/String;
      19: aload_3
      20: invokevirtual #23                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      23: aload_0
      24: aload_1
      25: aload         4
      27: invokevirtual #13                 // Method org/apache/activemq/command/ProducerId.getValue:()J
      30: aload_3
      31: invokevirtual #24                 // Method looseMarshalLong:(Lorg/apache/activemq/openwire/OpenWireFormat;JLjava/io/DataOutput;)V
      34: aload_0
      35: aload_1
      36: aload         4
      38: invokevirtual #15                 // Method org/apache/activemq/command/ProducerId.getSessionId:()J
      41: aload_3
      42: invokevirtual #24                 // Method looseMarshalLong:(Lorg/apache/activemq/openwire/OpenWireFormat;JLjava/io/DataOutput;)V
      45: return
}
