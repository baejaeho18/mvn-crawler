Compiled from "MessageAckMarshaller.java"
public class org.apache.activemq.openwire.v8.MessageAckMarshaller extends org.apache.activemq.openwire.v8.BaseCommandMarshaller {
  public org.apache.activemq.openwire.v8.MessageAckMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v8/BaseCommandMarshaller."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: bipush        22
       2: ireturn

  public org.apache.activemq.command.DataStructure createObject();
    Code:
       0: new           #2                  // class org/apache/activemq/command/MessageAck
       3: dup
       4: invokespecial #3                  // Method org/apache/activemq/command/MessageAck."<init>":()V
       7: areturn

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/activemq/openwire/v8/BaseCommandMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/MessageAck
      13: astore        5
      15: aload         5
      17: aload_0
      18: aload_1
      19: aload_3
      20: aload         4
      22: invokevirtual #5                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      25: checkcast     #6                  // class org/apache/activemq/command/ActiveMQDestination
      28: invokevirtual #7                  // Method org/apache/activemq/command/MessageAck.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      31: aload         5
      33: aload_0
      34: aload_1
      35: aload_3
      36: aload         4
      38: invokevirtual #5                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      41: checkcast     #8                  // class org/apache/activemq/command/TransactionId
      44: invokevirtual #9                  // Method org/apache/activemq/command/MessageAck.setTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      47: aload         5
      49: aload_0
      50: aload_1
      51: aload_3
      52: aload         4
      54: invokevirtual #5                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      57: checkcast     #10                 // class org/apache/activemq/command/ConsumerId
      60: invokevirtual #11                 // Method org/apache/activemq/command/MessageAck.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      63: aload         5
      65: aload_3
      66: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readByte:()B
      71: invokevirtual #13                 // Method org/apache/activemq/command/MessageAck.setAckType:(B)V
      74: aload         5
      76: aload_0
      77: aload_1
      78: aload_3
      79: aload         4
      81: invokevirtual #14                 // Method tightUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      84: checkcast     #15                 // class org/apache/activemq/command/MessageId
      87: invokevirtual #16                 // Method org/apache/activemq/command/MessageAck.setFirstMessageId:(Lorg/apache/activemq/command/MessageId;)V
      90: aload         5
      92: aload_0
      93: aload_1
      94: aload_3
      95: aload         4
      97: invokevirtual #14                 // Method tightUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
     100: checkcast     #15                 // class org/apache/activemq/command/MessageId
     103: invokevirtual #17                 // Method org/apache/activemq/command/MessageAck.setLastMessageId:(Lorg/apache/activemq/command/MessageId;)V
     106: aload         5
     108: aload_3
     109: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     114: invokevirtual #19                 // Method org/apache/activemq/command/MessageAck.setMessageCount:(I)V
     117: aload         5
     119: aload_0
     120: aload_1
     121: aload_3
     122: aload         4
     124: invokevirtual #20                 // Method tightUnmarsalThrowable:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/Throwable;
     127: invokevirtual #21                 // Method org/apache/activemq/command/MessageAck.setPoisonCause:(Ljava/lang/Throwable;)V
     130: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/MessageAck
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #22                 // Method org/apache/activemq/openwire/v8/BaseCommandMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: iload         5
      17: aload_0
      18: aload_1
      19: aload         4
      21: invokevirtual #23                 // Method org/apache/activemq/command/MessageAck.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      24: aload_3
      25: invokevirtual #24                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      28: iadd
      29: istore        5
      31: iload         5
      33: aload_0
      34: aload_1
      35: aload         4
      37: invokevirtual #25                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      40: aload_3
      41: invokevirtual #24                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      44: iadd
      45: istore        5
      47: iload         5
      49: aload_0
      50: aload_1
      51: aload         4
      53: invokevirtual #26                 // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      56: aload_3
      57: invokevirtual #24                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      60: iadd
      61: istore        5
      63: iload         5
      65: aload_0
      66: aload_1
      67: aload         4
      69: invokevirtual #27                 // Method org/apache/activemq/command/MessageAck.getFirstMessageId:()Lorg/apache/activemq/command/MessageId;
      72: aload_3
      73: invokevirtual #28                 // Method tightMarshalNestedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      76: iadd
      77: istore        5
      79: iload         5
      81: aload_0
      82: aload_1
      83: aload         4
      85: invokevirtual #29                 // Method org/apache/activemq/command/MessageAck.getLastMessageId:()Lorg/apache/activemq/command/MessageId;
      88: aload_3
      89: invokevirtual #28                 // Method tightMarshalNestedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      92: iadd
      93: istore        5
      95: iload         5
      97: aload_0
      98: aload_1
      99: aload         4
     101: invokevirtual #30                 // Method org/apache/activemq/command/MessageAck.getPoisonCause:()Ljava/lang/Throwable;
     104: aload_3
     105: invokevirtual #31                 // Method tightMarshalThrowable1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Throwable;Lorg/apache/activemq/openwire/BooleanStream;)I
     108: iadd
     109: istore        5
     111: iload         5
     113: iconst_5
     114: iadd
     115: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #32                 // Method org/apache/activemq/openwire/v8/BaseCommandMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/MessageAck
      13: astore        5
      15: aload_0
      16: aload_1
      17: aload         5
      19: invokevirtual #23                 // Method org/apache/activemq/command/MessageAck.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      22: aload_3
      23: aload         4
      25: invokevirtual #33                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      28: aload_0
      29: aload_1
      30: aload         5
      32: invokevirtual #25                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      35: aload_3
      36: aload         4
      38: invokevirtual #33                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      41: aload_0
      42: aload_1
      43: aload         5
      45: invokevirtual #26                 // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      48: aload_3
      49: aload         4
      51: invokevirtual #33                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      54: aload_3
      55: aload         5
      57: invokevirtual #34                 // Method org/apache/activemq/command/MessageAck.getAckType:()B
      60: invokeinterface #35,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      65: aload_0
      66: aload_1
      67: aload         5
      69: invokevirtual #27                 // Method org/apache/activemq/command/MessageAck.getFirstMessageId:()Lorg/apache/activemq/command/MessageId;
      72: aload_3
      73: aload         4
      75: invokevirtual #36                 // Method tightMarshalNestedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      78: aload_0
      79: aload_1
      80: aload         5
      82: invokevirtual #29                 // Method org/apache/activemq/command/MessageAck.getLastMessageId:()Lorg/apache/activemq/command/MessageId;
      85: aload_3
      86: aload         4
      88: invokevirtual #36                 // Method tightMarshalNestedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      91: aload_3
      92: aload         5
      94: invokevirtual #37                 // Method org/apache/activemq/command/MessageAck.getMessageCount:()I
      97: invokeinterface #38,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
     102: aload_0
     103: aload_1
     104: aload         5
     106: invokevirtual #30                 // Method org/apache/activemq/command/MessageAck.getPoisonCause:()Ljava/lang/Throwable;
     109: aload_3
     110: aload         4
     112: invokevirtual #39                 // Method tightMarshalThrowable2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Throwable;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
     115: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #40                 // Method org/apache/activemq/openwire/v8/BaseCommandMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #2                  // class org/apache/activemq/command/MessageAck
      11: astore        4
      13: aload         4
      15: aload_0
      16: aload_1
      17: aload_3
      18: invokevirtual #41                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      21: checkcast     #6                  // class org/apache/activemq/command/ActiveMQDestination
      24: invokevirtual #7                  // Method org/apache/activemq/command/MessageAck.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      27: aload         4
      29: aload_0
      30: aload_1
      31: aload_3
      32: invokevirtual #41                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      35: checkcast     #8                  // class org/apache/activemq/command/TransactionId
      38: invokevirtual #9                  // Method org/apache/activemq/command/MessageAck.setTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      41: aload         4
      43: aload_0
      44: aload_1
      45: aload_3
      46: invokevirtual #41                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      49: checkcast     #10                 // class org/apache/activemq/command/ConsumerId
      52: invokevirtual #11                 // Method org/apache/activemq/command/MessageAck.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      55: aload         4
      57: aload_3
      58: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readByte:()B
      63: invokevirtual #13                 // Method org/apache/activemq/command/MessageAck.setAckType:(B)V
      66: aload         4
      68: aload_0
      69: aload_1
      70: aload_3
      71: invokevirtual #42                 // Method looseUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      74: checkcast     #15                 // class org/apache/activemq/command/MessageId
      77: invokevirtual #16                 // Method org/apache/activemq/command/MessageAck.setFirstMessageId:(Lorg/apache/activemq/command/MessageId;)V
      80: aload         4
      82: aload_0
      83: aload_1
      84: aload_3
      85: invokevirtual #42                 // Method looseUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      88: checkcast     #15                 // class org/apache/activemq/command/MessageId
      91: invokevirtual #17                 // Method org/apache/activemq/command/MessageAck.setLastMessageId:(Lorg/apache/activemq/command/MessageId;)V
      94: aload         4
      96: aload_3
      97: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     102: invokevirtual #19                 // Method org/apache/activemq/command/MessageAck.setMessageCount:(I)V
     105: aload         4
     107: aload_0
     108: aload_1
     109: aload_3
     110: invokevirtual #43                 // Method looseUnmarsalThrowable:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Ljava/lang/Throwable;
     113: invokevirtual #21                 // Method org/apache/activemq/command/MessageAck.setPoisonCause:(Ljava/lang/Throwable;)V
     116: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/MessageAck
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #44                 // Method org/apache/activemq/openwire/v8/BaseCommandMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_0
      14: aload_1
      15: aload         4
      17: invokevirtual #23                 // Method org/apache/activemq/command/MessageAck.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      20: aload_3
      21: invokevirtual #45                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      24: aload_0
      25: aload_1
      26: aload         4
      28: invokevirtual #25                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      31: aload_3
      32: invokevirtual #45                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      35: aload_0
      36: aload_1
      37: aload         4
      39: invokevirtual #26                 // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      42: aload_3
      43: invokevirtual #45                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      46: aload_3
      47: aload         4
      49: invokevirtual #34                 // Method org/apache/activemq/command/MessageAck.getAckType:()B
      52: invokeinterface #35,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      57: aload_0
      58: aload_1
      59: aload         4
      61: invokevirtual #27                 // Method org/apache/activemq/command/MessageAck.getFirstMessageId:()Lorg/apache/activemq/command/MessageId;
      64: aload_3
      65: invokevirtual #46                 // Method looseMarshalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      68: aload_0
      69: aload_1
      70: aload         4
      72: invokevirtual #29                 // Method org/apache/activemq/command/MessageAck.getLastMessageId:()Lorg/apache/activemq/command/MessageId;
      75: aload_3
      76: invokevirtual #46                 // Method looseMarshalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      79: aload_3
      80: aload         4
      82: invokevirtual #37                 // Method org/apache/activemq/command/MessageAck.getMessageCount:()I
      85: invokeinterface #38,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      90: aload_0
      91: aload_1
      92: aload         4
      94: invokevirtual #30                 // Method org/apache/activemq/command/MessageAck.getPoisonCause:()Ljava/lang/Throwable;
      97: aload_3
      98: invokevirtual #47                 // Method looseMarshalThrowable:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Throwable;Ljava/io/DataOutput;)V
     101: return
}
