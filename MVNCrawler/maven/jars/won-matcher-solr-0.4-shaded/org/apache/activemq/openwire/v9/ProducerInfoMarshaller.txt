Compiled from "ProducerInfoMarshaller.java"
public class org.apache.activemq.openwire.v9.ProducerInfoMarshaller extends org.apache.activemq.openwire.v9.BaseCommandMarshaller {
  public org.apache.activemq.openwire.v9.ProducerInfoMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/openwire/v9/BaseCommandMarshaller."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: bipush        6
       2: ireturn

  public org.apache.activemq.command.DataStructure createObject();
    Code:
       0: new           #2                  // class org/apache/activemq/command/ProducerInfo
       3: dup
       4: invokespecial #3                  // Method org/apache/activemq/command/ProducerInfo."<init>":()V
       7: areturn

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/activemq/openwire/v9/BaseCommandMarshaller.tightUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/ProducerInfo
      13: astore        5
      15: aload         5
      17: aload_0
      18: aload_1
      19: aload_3
      20: aload         4
      22: invokevirtual #5                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      25: checkcast     #6                  // class org/apache/activemq/command/ProducerId
      28: invokevirtual #7                  // Method org/apache/activemq/command/ProducerInfo.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
      31: aload         5
      33: aload_0
      34: aload_1
      35: aload_3
      36: aload         4
      38: invokevirtual #5                  // Method tightUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      41: checkcast     #8                  // class org/apache/activemq/command/ActiveMQDestination
      44: invokevirtual #9                  // Method org/apache/activemq/command/ProducerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      47: aload         4
      49: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      52: ifeq          112
      55: aload_3
      56: invokeinterface #11,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      61: istore        6
      63: iload         6
      65: anewarray     #12                 // class org/apache/activemq/command/BrokerId
      68: astore        7
      70: iconst_0
      71: istore        8
      73: iload         8
      75: iload         6
      77: if_icmpge     102
      80: aload         7
      82: iload         8
      84: aload_0
      85: aload_1
      86: aload_3
      87: aload         4
      89: invokevirtual #13                 // Method tightUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      92: checkcast     #12                 // class org/apache/activemq/command/BrokerId
      95: aastore
      96: iinc          8, 1
      99: goto          73
     102: aload         5
     104: aload         7
     106: invokevirtual #14                 // Method org/apache/activemq/command/ProducerInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     109: goto          118
     112: aload         5
     114: aconst_null
     115: invokevirtual #14                 // Method org/apache/activemq/command/ProducerInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     118: aload         5
     120: aload         4
     122: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
     125: invokevirtual #15                 // Method org/apache/activemq/command/ProducerInfo.setDispatchAsync:(Z)V
     128: aload         5
     130: aload_3
     131: invokeinterface #16,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     136: invokevirtual #17                 // Method org/apache/activemq/command/ProducerInfo.setWindowSize:(I)V
     139: return

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/ProducerInfo
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #18                 // Method org/apache/activemq/openwire/v9/BaseCommandMarshaller.tightMarshal1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Lorg/apache/activemq/openwire/BooleanStream;)I
      13: istore        5
      15: iload         5
      17: aload_0
      18: aload_1
      19: aload         4
      21: invokevirtual #19                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      24: aload_3
      25: invokevirtual #20                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      28: iadd
      29: istore        5
      31: iload         5
      33: aload_0
      34: aload_1
      35: aload         4
      37: invokevirtual #21                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      40: aload_3
      41: invokevirtual #20                 // Method tightMarshalCachedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      44: iadd
      45: istore        5
      47: iload         5
      49: aload_0
      50: aload_1
      51: aload         4
      53: invokevirtual #22                 // Method org/apache/activemq/command/ProducerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      56: aload_3
      57: invokevirtual #23                 // Method tightMarshalObjectArray1:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      60: iadd
      61: istore        5
      63: aload_3
      64: aload         4
      66: invokevirtual #24                 // Method org/apache/activemq/command/ProducerInfo.isDispatchAsync:()Z
      69: invokevirtual #25                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      72: iload         5
      74: iconst_4
      75: iadd
      76: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #26                 // Method org/apache/activemq/openwire/v9/BaseCommandMarshaller.tightMarshal2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       9: aload_2
      10: checkcast     #2                  // class org/apache/activemq/command/ProducerInfo
      13: astore        5
      15: aload_0
      16: aload_1
      17: aload         5
      19: invokevirtual #19                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      22: aload_3
      23: aload         4
      25: invokevirtual #27                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      28: aload_0
      29: aload_1
      30: aload         5
      32: invokevirtual #21                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      35: aload_3
      36: aload         4
      38: invokevirtual #27                 // Method tightMarshalCachedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      41: aload_0
      42: aload_1
      43: aload         5
      45: invokevirtual #22                 // Method org/apache/activemq/command/ProducerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      48: aload_3
      49: aload         4
      51: invokevirtual #28                 // Method tightMarshalObjectArray2:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      54: aload         4
      56: invokevirtual #10                 // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      59: pop
      60: aload_3
      61: aload         5
      63: invokevirtual #29                 // Method org/apache/activemq/command/ProducerInfo.getWindowSize:()I
      66: invokeinterface #30,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      71: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #31                 // Method org/apache/activemq/openwire/v9/BaseCommandMarshaller.looseUnmarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataInput;)V
       7: aload_2
       8: checkcast     #2                  // class org/apache/activemq/command/ProducerInfo
      11: astore        4
      13: aload         4
      15: aload_0
      16: aload_1
      17: aload_3
      18: invokevirtual #32                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      21: checkcast     #6                  // class org/apache/activemq/command/ProducerId
      24: invokevirtual #7                  // Method org/apache/activemq/command/ProducerInfo.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
      27: aload         4
      29: aload_0
      30: aload_1
      31: aload_3
      32: invokevirtual #32                 // Method looseUnmarsalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      35: checkcast     #8                  // class org/apache/activemq/command/ActiveMQDestination
      38: invokevirtual #9                  // Method org/apache/activemq/command/ProducerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      41: aload_3
      42: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
      47: ifeq          105
      50: aload_3
      51: invokeinterface #11,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      56: istore        5
      58: iload         5
      60: anewarray     #12                 // class org/apache/activemq/command/BrokerId
      63: astore        6
      65: iconst_0
      66: istore        7
      68: iload         7
      70: iload         5
      72: if_icmpge     95
      75: aload         6
      77: iload         7
      79: aload_0
      80: aload_1
      81: aload_3
      82: invokevirtual #34                 // Method looseUnmarsalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      85: checkcast     #12                 // class org/apache/activemq/command/BrokerId
      88: aastore
      89: iinc          7, 1
      92: goto          68
      95: aload         4
      97: aload         6
      99: invokevirtual #14                 // Method org/apache/activemq/command/ProducerInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     102: goto          111
     105: aload         4
     107: aconst_null
     108: invokevirtual #14                 // Method org/apache/activemq/command/ProducerInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     111: aload         4
     113: aload_3
     114: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
     119: invokevirtual #15                 // Method org/apache/activemq/command/ProducerInfo.setDispatchAsync:(Z)V
     122: aload         4
     124: aload_3
     125: invokeinterface #16,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     130: invokevirtual #17                 // Method org/apache/activemq/command/ProducerInfo.setWindowSize:(I)V
     133: return

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: checkcast     #2                  // class org/apache/activemq/command/ProducerInfo
       4: astore        4
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #35                 // Method org/apache/activemq/openwire/v9/BaseCommandMarshaller.looseMarshal:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Object;Ljava/io/DataOutput;)V
      13: aload_0
      14: aload_1
      15: aload         4
      17: invokevirtual #19                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      20: aload_3
      21: invokevirtual #36                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      24: aload_0
      25: aload_1
      26: aload         4
      28: invokevirtual #21                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      31: aload_3
      32: invokevirtual #36                 // Method looseMarshalCachedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      35: aload_0
      36: aload_1
      37: aload         4
      39: invokevirtual #22                 // Method org/apache/activemq/command/ProducerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      42: aload_3
      43: invokevirtual #37                 // Method looseMarshalObjectArray:(Lorg/apache/activemq/openwire/OpenWireFormat;[Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      46: aload_3
      47: aload         4
      49: invokevirtual #24                 // Method org/apache/activemq/command/ProducerInfo.isDispatchAsync:()Z
      52: invokeinterface #38,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      57: aload_3
      58: aload         4
      60: invokevirtual #29                 // Method org/apache/activemq/command/ProducerInfo.getWindowSize:()I
      63: invokeinterface #30,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      68: return
}
