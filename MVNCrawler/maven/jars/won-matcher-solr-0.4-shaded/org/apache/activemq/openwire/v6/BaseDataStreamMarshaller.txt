Compiled from "BaseDataStreamMarshaller.java"
public abstract class org.apache.activemq.openwire.v6.BaseDataStreamMarshaller implements org.apache.activemq.openwire.DataStreamMarshaller {
  public static final java.lang.reflect.Constructor STACK_TRACE_ELEMENT_CONSTRUCTOR;

  public org.apache.activemq.openwire.v6.BaseDataStreamMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract byte getDataStructureType();

  public abstract org.apache.activemq.command.DataStructure createObject();

  public int tightMarshal1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public void tightMarshal2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: return

  public void tightUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: return

  public int tightMarshalLong1(org.apache.activemq.openwire.OpenWireFormat, long, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifne          20
       6: aload         4
       8: iconst_0
       9: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      12: aload         4
      14: iconst_0
      15: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      18: iconst_0
      19: ireturn
      20: lload_2
      21: ldc2_w        #3                  // long -65536l
      24: land
      25: lconst_0
      26: lcmp
      27: ifne          44
      30: aload         4
      32: iconst_0
      33: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      36: aload         4
      38: iconst_1
      39: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      42: iconst_2
      43: ireturn
      44: lload_2
      45: ldc2_w        #5                  // long -4294967296l
      48: land
      49: lconst_0
      50: lcmp
      51: ifne          68
      54: aload         4
      56: iconst_1
      57: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      60: aload         4
      62: iconst_0
      63: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      66: iconst_4
      67: ireturn
      68: aload         4
      70: iconst_1
      71: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      74: aload         4
      76: iconst_1
      77: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      80: bipush        8
      82: ireturn

  public void tightMarshalLong2(org.apache.activemq.openwire.OpenWireFormat, long, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload         5
       2: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       5: ifeq          39
       8: aload         5
      10: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      13: ifeq          27
      16: aload         4
      18: lload_2
      19: invokeinterface #8,  3            // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      24: goto          56
      27: aload         4
      29: lload_2
      30: l2i
      31: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      36: goto          56
      39: aload         5
      41: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      44: ifeq          56
      47: aload         4
      49: lload_2
      50: l2i
      51: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      56: return

  public long tightUnmarshalLong(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       4: ifeq          32
       7: aload_3
       8: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      11: ifeq          21
      14: aload_2
      15: invokeinterface #11,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      20: lreturn
      21: aload_0
      22: aload_2
      23: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      28: invokevirtual #13                 // Method toLong:(I)J
      31: lreturn
      32: aload_3
      33: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      36: ifeq          50
      39: aload_0
      40: aload_2
      41: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      46: invokevirtual #15                 // Method toLong:(S)J
      49: lreturn
      50: lconst_0
      51: lreturn

  protected long toLong(short);
    Code:
       0: iload_1
       1: i2l
       2: lstore_2
       3: lload_2
       4: ldc2_w        #16                 // long 65535l
       7: land
       8: lreturn

  protected long toLong(int);
    Code:
       0: iload_1
       1: i2l
       2: lstore_2
       3: lload_2
       4: ldc2_w        #18                 // long 4294967295l
       7: land
       8: lreturn

  protected org.apache.activemq.command.DataStructure tightUnmarsalNestedObject(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokevirtual #20                 // Method org/apache/activemq/openwire/OpenWireFormat.tightUnmarshalNestedObject:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
       6: areturn

  protected int tightMarshalNestedObject1(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokevirtual #21                 // Method org/apache/activemq/openwire/OpenWireFormat.tightMarshalNestedObject1:(Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
       6: ireturn

  protected void tightMarshalNestedObject2(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokevirtual #22                 // Method org/apache/activemq/openwire/OpenWireFormat.tightMarshalNestedObject2:(Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
       8: return

  protected org.apache.activemq.command.DataStructure tightUnmarsalCachedObject(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/apache/activemq/openwire/OpenWireFormat.isCacheEnabled:()Z
       4: ifeq          56
       7: aload_3
       8: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      11: ifeq          41
      14: aload_2
      15: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      20: istore        4
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokevirtual #20                 // Method org/apache/activemq/openwire/OpenWireFormat.tightUnmarshalNestedObject:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      28: astore        5
      30: aload_1
      31: iload         4
      33: aload         5
      35: invokevirtual #24                 // Method org/apache/activemq/openwire/OpenWireFormat.setInUnmarshallCache:(SLorg/apache/activemq/command/DataStructure;)V
      38: aload         5
      40: areturn
      41: aload_2
      42: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      47: istore        4
      49: aload_1
      50: iload         4
      52: invokevirtual #25                 // Method org/apache/activemq/openwire/OpenWireFormat.getFromUnmarshallCache:(S)Lorg/apache/activemq/command/DataStructure;
      55: areturn
      56: aload_1
      57: aload_2
      58: aload_3
      59: invokevirtual #20                 // Method org/apache/activemq/openwire/OpenWireFormat.tightUnmarshalNestedObject:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Lorg/apache/activemq/command/DataStructure;
      62: areturn

  protected int tightMarshalCachedObject1(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/apache/activemq/openwire/OpenWireFormat.isCacheEnabled:()Z
       4: ifeq          54
       7: aload_1
       8: aload_2
       9: invokevirtual #26                 // Method org/apache/activemq/openwire/OpenWireFormat.getMarshallCacheIndex:(Lorg/apache/activemq/command/DataStructure;)Ljava/lang/Short;
      12: astore        4
      14: aload_3
      15: aload         4
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      28: aload         4
      30: ifnonnull     52
      33: aload_1
      34: aload_2
      35: aload_3
      36: invokevirtual #21                 // Method org/apache/activemq/openwire/OpenWireFormat.tightMarshalNestedObject1:(Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      39: istore        5
      41: aload_1
      42: aload_2
      43: invokevirtual #27                 // Method org/apache/activemq/openwire/OpenWireFormat.addToMarshallCache:(Lorg/apache/activemq/command/DataStructure;)Ljava/lang/Short;
      46: pop
      47: iconst_2
      48: iload         5
      50: iadd
      51: ireturn
      52: iconst_2
      53: ireturn
      54: aload_1
      55: aload_2
      56: aload_3
      57: invokevirtual #21                 // Method org/apache/activemq/openwire/OpenWireFormat.tightMarshalNestedObject1:(Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      60: ireturn

  protected void tightMarshalCachedObject2(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/apache/activemq/openwire/OpenWireFormat.isCacheEnabled:()Z
       4: ifeq          58
       7: aload_1
       8: aload_2
       9: invokevirtual #26                 // Method org/apache/activemq/openwire/OpenWireFormat.getMarshallCacheIndex:(Lorg/apache/activemq/command/DataStructure;)Ljava/lang/Short;
      12: astore        5
      14: aload         4
      16: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      19: ifeq          44
      22: aload_3
      23: aload         5
      25: invokevirtual #28                 // Method java/lang/Short.shortValue:()S
      28: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      33: aload_1
      34: aload_2
      35: aload_3
      36: aload         4
      38: invokevirtual #22                 // Method org/apache/activemq/openwire/OpenWireFormat.tightMarshalNestedObject2:(Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      41: goto          55
      44: aload_3
      45: aload         5
      47: invokevirtual #28                 // Method java/lang/Short.shortValue:()S
      50: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      55: goto          66
      58: aload_1
      59: aload_2
      60: aload_3
      61: aload         4
      63: invokevirtual #22                 // Method org/apache/activemq/openwire/OpenWireFormat.tightMarshalNestedObject2:(Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      66: return

  protected java.lang.Throwable tightUnmarsalThrowable(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       4: ifeq          219
       7: aload_0
       8: aload_2
       9: aload_3
      10: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      13: astore        4
      15: aload_0
      16: aload_2
      17: aload_3
      18: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      21: astore        5
      23: aload_0
      24: aload         4
      26: aload         5
      28: invokespecial #30                 // Method createThrowable:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Throwable;
      31: astore        6
      33: aload_1
      34: invokevirtual #31                 // Method org/apache/activemq/openwire/OpenWireFormat.isStackTraceEnabled:()Z
      37: ifeq          216
      40: getstatic     #32                 // Field STACK_TRACE_ELEMENT_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
      43: ifnull        151
      46: aload_2
      47: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      52: anewarray     #33                 // class java/lang/StackTraceElement
      55: astore        7
      57: iconst_0
      58: istore        8
      60: iload         8
      62: aload         7
      64: arraylength
      65: if_icmpge     141
      68: aload         7
      70: iload         8
      72: getstatic     #32                 // Field STACK_TRACE_ELEMENT_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
      75: iconst_4
      76: anewarray     #34                 // class java/lang/Object
      79: dup
      80: iconst_0
      81: aload_0
      82: aload_2
      83: aload_3
      84: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      87: aastore
      88: dup
      89: iconst_1
      90: aload_0
      91: aload_2
      92: aload_3
      93: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
      96: aastore
      97: dup
      98: iconst_2
      99: aload_0
     100: aload_2
     101: aload_3
     102: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
     105: aastore
     106: dup
     107: iconst_3
     108: aload_2
     109: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     114: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     117: aastore
     118: invokevirtual #36                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     121: checkcast     #33                 // class java/lang/StackTraceElement
     124: aastore
     125: goto          135
     128: astore        9
     130: aload         9
     132: athrow
     133: astore        9
     135: iinc          8, 1
     138: goto          60
     141: aload         6
     143: aload         7
     145: invokevirtual #39                 // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
     148: goto          203
     151: aload_2
     152: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
     157: istore        7
     159: iconst_0
     160: istore        8
     162: iload         8
     164: iload         7
     166: if_icmpge     203
     169: aload_0
     170: aload_2
     171: aload_3
     172: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
     175: pop
     176: aload_0
     177: aload_2
     178: aload_3
     179: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
     182: pop
     183: aload_0
     184: aload_2
     185: aload_3
     186: invokevirtual #29                 // Method tightUnmarshalString:(Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/String;
     189: pop
     190: aload_2
     191: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     196: pop
     197: iinc          8, 1
     200: goto          162
     203: aload         6
     205: aload_0
     206: aload_1
     207: aload_2
     208: aload_3
     209: invokevirtual #40                 // Method tightUnmarsalThrowable:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;Lorg/apache/activemq/openwire/BooleanStream;)Ljava/lang/Throwable;
     212: invokevirtual #41                 // Method java/lang/Throwable.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     215: pop
     216: aload         6
     218: areturn
     219: aconst_null
     220: areturn
    Exception table:
       from    to  target type
          68   125   128   Class java/io/IOException
          68   125   133   Class java/lang/Throwable

  private java.lang.Throwable createThrowable(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: iconst_0
       2: ldc_w         #42                 // class org/apache/activemq/openwire/v6/BaseDataStreamMarshaller
       5: invokevirtual #43                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #44                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      11: astore_3
      12: aload_3
      13: iconst_1
      14: anewarray     #45                 // class java/lang/Class
      17: dup
      18: iconst_0
      19: ldc_w         #46                 // class java/lang/String
      22: aastore
      23: invokevirtual #47                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      26: astore        4
      28: aload         4
      30: iconst_1
      31: anewarray     #34                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_2
      37: aastore
      38: invokevirtual #36                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #38                 // class java/lang/Throwable
      44: areturn
      45: astore_3
      46: new           #38                 // class java/lang/Throwable
      49: dup
      50: new           #48                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      57: aload_1
      58: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #51                 // String :
      63: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_2
      67: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #53                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      76: areturn
    Exception table:
       from    to  target type
           0    44    45   Class java/lang/Throwable

  protected int tightMarshalThrowable1(org.apache.activemq.openwire.OpenWireFormat, java.lang.Throwable, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     11
       4: aload_3
       5: iconst_0
       6: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
       9: iconst_0
      10: ireturn
      11: iconst_0
      12: istore        4
      14: aload_3
      15: iconst_1
      16: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      19: iload         4
      21: aload_0
      22: aload_2
      23: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      29: aload_3
      30: invokevirtual #56                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      33: iadd
      34: istore        4
      36: iload         4
      38: aload_0
      39: aload_2
      40: invokevirtual #57                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      43: aload_3
      44: invokevirtual #56                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      47: iadd
      48: istore        4
      50: aload_1
      51: invokevirtual #31                 // Method org/apache/activemq/openwire/OpenWireFormat.isStackTraceEnabled:()Z
      54: ifeq          153
      57: iinc          4, 2
      60: aload_2
      61: invokevirtual #58                 // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      64: astore        5
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload         5
      73: arraylength
      74: if_icmpge     138
      77: aload         5
      79: iload         6
      81: aaload
      82: astore        7
      84: iload         4
      86: aload_0
      87: aload         7
      89: invokevirtual #59                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      92: aload_3
      93: invokevirtual #56                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
      96: iadd
      97: istore        4
      99: iload         4
     101: aload_0
     102: aload         7
     104: invokevirtual #60                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
     107: aload_3
     108: invokevirtual #56                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
     111: iadd
     112: istore        4
     114: iload         4
     116: aload_0
     117: aload         7
     119: invokevirtual #61                 // Method java/lang/StackTraceElement.getFileName:()Ljava/lang/String;
     122: aload_3
     123: invokevirtual #56                 // Method tightMarshalString1:(Ljava/lang/String;Lorg/apache/activemq/openwire/BooleanStream;)I
     126: iadd
     127: istore        4
     129: iinc          4, 4
     132: iinc          6, 1
     135: goto          69
     138: iload         4
     140: aload_0
     141: aload_1
     142: aload_2
     143: invokevirtual #62                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     146: aload_3
     147: invokevirtual #63                 // Method tightMarshalThrowable1:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Throwable;Lorg/apache/activemq/openwire/BooleanStream;)I
     150: iadd
     151: istore        4
     153: iload         4
     155: ireturn

  protected void tightMarshalThrowable2(org.apache.activemq.openwire.OpenWireFormat, java.lang.Throwable, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload         4
       2: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       5: ifeq          138
       8: aload_0
       9: aload_2
      10: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: aload_3
      17: aload         4
      19: invokevirtual #64                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      22: aload_0
      23: aload_2
      24: invokevirtual #57                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      27: aload_3
      28: aload         4
      30: invokevirtual #64                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      33: aload_1
      34: invokevirtual #31                 // Method org/apache/activemq/openwire/OpenWireFormat.isStackTraceEnabled:()Z
      37: ifeq          138
      40: aload_2
      41: invokevirtual #58                 // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      44: astore        5
      46: aload_3
      47: aload         5
      49: arraylength
      50: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      55: iconst_0
      56: istore        6
      58: iload         6
      60: aload         5
      62: arraylength
      63: if_icmpge     126
      66: aload         5
      68: iload         6
      70: aaload
      71: astore        7
      73: aload_0
      74: aload         7
      76: invokevirtual #59                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      79: aload_3
      80: aload         4
      82: invokevirtual #64                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      85: aload_0
      86: aload         7
      88: invokevirtual #60                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      91: aload_3
      92: aload         4
      94: invokevirtual #64                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      97: aload_0
      98: aload         7
     100: invokevirtual #61                 // Method java/lang/StackTraceElement.getFileName:()Ljava/lang/String;
     103: aload_3
     104: aload         4
     106: invokevirtual #64                 // Method tightMarshalString2:(Ljava/lang/String;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
     109: aload_3
     110: aload         7
     112: invokevirtual #65                 // Method java/lang/StackTraceElement.getLineNumber:()I
     115: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
     120: iinc          6, 1
     123: goto          58
     126: aload_0
     127: aload_1
     128: aload_2
     129: invokevirtual #62                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     132: aload_3
     133: aload         4
     135: invokevirtual #66                 // Method tightMarshalThrowable2:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Throwable;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
     138: return

  protected java.lang.String tightUnmarshalString(java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       4: ifeq          52
       7: aload_2
       8: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      11: ifeq          45
      14: aload_1
      15: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      20: istore_3
      21: iload_3
      22: newarray       byte
      24: astore        4
      26: aload_1
      27: aload         4
      29: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      34: new           #46                 // class java/lang/String
      37: dup
      38: aload         4
      40: iconst_0
      41: invokespecial #68                 // Method java/lang/String."<init>":([BI)V
      44: areturn
      45: aload_1
      46: invokeinterface #69,  1           // InterfaceMethod java/io/DataInput.readUTF:()Ljava/lang/String;
      51: areturn
      52: aconst_null
      53: areturn

  protected int tightMarshalString1(java.lang.String, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      13: aload_1
      14: ifnull        138
      17: aload_1
      18: invokevirtual #70                 // Method java/lang/String.length:()I
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload_3
      26: newarray       char
      28: astore        5
      30: iconst_0
      31: istore        6
      33: iconst_1
      34: istore        7
      36: aload_1
      37: iconst_0
      38: iload_3
      39: aload         5
      41: iconst_0
      42: invokevirtual #71                 // Method java/lang/String.getChars:(II[CI)V
      45: iconst_0
      46: istore        8
      48: iload         8
      50: iload_3
      51: if_icmpge     109
      54: aload         5
      56: iload         8
      58: caload
      59: istore        6
      61: iload         6
      63: iconst_1
      64: if_icmplt     80
      67: iload         6
      69: bipush        127
      71: if_icmpgt     80
      74: iinc          4, 1
      77: goto          103
      80: iload         6
      82: sipush        2047
      85: if_icmple     97
      88: iinc          4, 3
      91: iconst_0
      92: istore        7
      94: goto          103
      97: iconst_0
      98: istore        7
     100: iinc          4, 2
     103: iinc          8, 1
     106: goto          48
     109: iload         4
     111: sipush        32767
     114: if_icmplt     127
     117: new           #37                 // class java/io/IOException
     120: dup
     121: ldc           #72                 // String Encountered a String value that is too long to encode.
     123: invokespecial #73                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: aload_2
     128: iload         7
     130: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
     133: iload         4
     135: iconst_2
     136: iadd
     137: ireturn
     138: iconst_0
     139: ireturn

  protected void tightMarshalString2(java.lang.String, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       4: ifeq          41
       7: aload_3
       8: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
      11: ifeq          34
      14: aload_2
      15: aload_1
      16: invokevirtual #70                 // Method java/lang/String.length:()I
      19: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      24: aload_2
      25: aload_1
      26: invokeinterface #74,  2           // InterfaceMethod java/io/DataOutput.writeBytes:(Ljava/lang/String;)V
      31: goto          41
      34: aload_2
      35: aload_1
      36: invokeinterface #75,  2           // InterfaceMethod java/io/DataOutput.writeUTF:(Ljava/lang/String;)V
      41: return

  protected int tightMarshalObjectArray1(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure[], org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        49
       4: iconst_0
       5: istore        4
       7: aload_3
       8: iconst_1
       9: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      12: iinc          4, 2
      15: iconst_0
      16: istore        5
      18: iload         5
      20: aload_2
      21: arraylength
      22: if_icmpge     46
      25: iload         4
      27: aload_0
      28: aload_1
      29: aload_2
      30: iload         5
      32: aaload
      33: aload_3
      34: invokevirtual #76                 // Method tightMarshalNestedObject1:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Lorg/apache/activemq/openwire/BooleanStream;)I
      37: iadd
      38: istore        4
      40: iinc          5, 1
      43: goto          18
      46: iload         4
      48: ireturn
      49: aload_3
      50: iconst_0
      51: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      54: iconst_0
      55: ireturn

  protected void tightMarshalObjectArray2(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure[], java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload         4
       2: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       5: ifeq          44
       8: aload_3
       9: aload_2
      10: arraylength
      11: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      16: iconst_0
      17: istore        5
      19: iload         5
      21: aload_2
      22: arraylength
      23: if_icmpge     44
      26: aload_0
      27: aload_1
      28: aload_2
      29: iload         5
      31: aaload
      32: aload_3
      33: aload         4
      35: invokevirtual #77                 // Method tightMarshalNestedObject2:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;Lorg/apache/activemq/openwire/BooleanStream;)V
      38: iinc          5, 1
      41: goto          19
      44: return

  protected int tightMarshalConstByteArray1(byte[], org.apache.activemq.openwire.BooleanStream, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ireturn

  protected void tightMarshalConstByteArray2(byte[], java.io.DataOutput, org.apache.activemq.openwire.BooleanStream, int) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: iconst_0
       3: iload         4
       5: invokeinterface #78,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      10: return

  protected byte[] tightUnmarshalConstByteArray(java.io.DataInput, org.apache.activemq.openwire.BooleanStream, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: newarray       byte
       3: astore        4
       5: aload_1
       6: aload         4
       8: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      13: aload         4
      15: areturn

  protected int tightMarshalByteArray1(byte[], org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      13: aload_1
      14: ifnull        22
      17: aload_1
      18: arraylength
      19: iconst_4
      20: iadd
      21: ireturn
      22: iconst_0
      23: ireturn

  protected void tightMarshalByteArray2(byte[], java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       4: ifeq          22
       7: aload_2
       8: aload_1
       9: arraylength
      10: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      15: aload_2
      16: aload_1
      17: invokeinterface #79,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
      22: return

  protected byte[] tightUnmarshalByteArray(java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       6: ifeq          29
       9: aload_1
      10: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      15: istore        4
      17: iload         4
      19: newarray       byte
      21: astore_3
      22: aload_1
      23: aload_3
      24: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      29: aload_3
      30: areturn

  protected int tightMarshalByteSequence1(org.apache.activemq.util.ByteSequence, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #2                  // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
      13: aload_1
      14: ifnull        24
      17: aload_1
      18: invokevirtual #80                 // Method org/apache/activemq/util/ByteSequence.getLength:()I
      21: iconst_4
      22: iadd
      23: ireturn
      24: iconst_0
      25: ireturn

  protected void tightMarshalByteSequence2(org.apache.activemq.util.ByteSequence, java.io.DataOutput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       4: ifeq          35
       7: aload_2
       8: aload_1
       9: invokevirtual #80                 // Method org/apache/activemq/util/ByteSequence.getLength:()I
      12: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      17: aload_2
      18: aload_1
      19: invokevirtual #81                 // Method org/apache/activemq/util/ByteSequence.getData:()[B
      22: aload_1
      23: invokevirtual #82                 // Method org/apache/activemq/util/ByteSequence.getOffset:()I
      26: aload_1
      27: invokevirtual #80                 // Method org/apache/activemq/util/ByteSequence.getLength:()I
      30: invokeinterface #78,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      35: return

  protected org.apache.activemq.util.ByteSequence tightUnmarshalByteSequence(java.io.DataInput, org.apache.activemq.openwire.BooleanStream) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: invokevirtual #7                  // Method org/apache/activemq/openwire/BooleanStream.readBoolean:()Z
       6: ifeq          44
       9: aload_1
      10: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      15: istore        4
      17: iload         4
      19: newarray       byte
      21: astore        5
      23: aload_1
      24: aload         5
      26: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      31: new           #83                 // class org/apache/activemq/util/ByteSequence
      34: dup
      35: aload         5
      37: iconst_0
      38: iload         4
      40: invokespecial #84                 // Method org/apache/activemq/util/ByteSequence."<init>":([BII)V
      43: areturn
      44: aload_3
      45: areturn

  public void looseMarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: return

  public void looseUnmarshal(org.apache.activemq.openwire.OpenWireFormat, java.lang.Object, java.io.DataInput) throws java.io.IOException;
    Code:
       0: return

  public void looseMarshalLong(org.apache.activemq.openwire.OpenWireFormat, long, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload         4
       2: lload_2
       3: invokeinterface #8,  3            // InterfaceMethod java/io/DataOutput.writeLong:(J)V
       8: return

  public long looseUnmarshalLong(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #11,  1           // InterfaceMethod java/io/DataInput.readLong:()J
       6: lreturn

  protected org.apache.activemq.command.DataStructure looseUnmarsalNestedObject(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #85                 // Method org/apache/activemq/openwire/OpenWireFormat.looseUnmarshalNestedObject:(Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
       5: areturn

  protected void looseMarshalNestedObject(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokevirtual #86                 // Method org/apache/activemq/openwire/OpenWireFormat.looseMarshalNestedObject:(Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
       6: return

  protected org.apache.activemq.command.DataStructure looseUnmarsalCachedObject(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/apache/activemq/openwire/OpenWireFormat.isCacheEnabled:()Z
       4: ifeq          53
       7: aload_2
       8: invokeinterface #87,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
      13: ifeq          40
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      22: istore_3
      23: aload_1
      24: aload_2
      25: invokevirtual #85                 // Method org/apache/activemq/openwire/OpenWireFormat.looseUnmarshalNestedObject:(Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      28: astore        4
      30: aload_1
      31: iload_3
      32: aload         4
      34: invokevirtual #24                 // Method org/apache/activemq/openwire/OpenWireFormat.setInUnmarshallCache:(SLorg/apache/activemq/command/DataStructure;)V
      37: aload         4
      39: areturn
      40: aload_2
      41: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      46: istore_3
      47: aload_1
      48: iload_3
      49: invokevirtual #25                 // Method org/apache/activemq/openwire/OpenWireFormat.getFromUnmarshallCache:(S)Lorg/apache/activemq/command/DataStructure;
      52: areturn
      53: aload_1
      54: aload_2
      55: invokevirtual #85                 // Method org/apache/activemq/openwire/OpenWireFormat.looseUnmarshalNestedObject:(Ljava/io/DataInput;)Lorg/apache/activemq/command/DataStructure;
      58: areturn

  protected void looseMarshalCachedObject(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/apache/activemq/openwire/OpenWireFormat.isCacheEnabled:()Z
       4: ifeq          76
       7: aload_1
       8: aload_2
       9: invokevirtual #26                 // Method org/apache/activemq/openwire/OpenWireFormat.getMarshallCacheIndex:(Lorg/apache/activemq/command/DataStructure;)Ljava/lang/Short;
      12: astore        4
      14: aload_3
      15: aload         4
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokeinterface #88,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      30: aload         4
      32: ifnonnull     62
      35: aload_1
      36: aload_2
      37: invokevirtual #27                 // Method org/apache/activemq/openwire/OpenWireFormat.addToMarshallCache:(Lorg/apache/activemq/command/DataStructure;)Ljava/lang/Short;
      40: astore        4
      42: aload_3
      43: aload         4
      45: invokevirtual #28                 // Method java/lang/Short.shortValue:()S
      48: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      53: aload_1
      54: aload_2
      55: aload_3
      56: invokevirtual #86                 // Method org/apache/activemq/openwire/OpenWireFormat.looseMarshalNestedObject:(Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      59: goto          73
      62: aload_3
      63: aload         4
      65: invokevirtual #28                 // Method java/lang/Short.shortValue:()S
      68: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      73: goto          82
      76: aload_1
      77: aload_2
      78: aload_3
      79: invokevirtual #86                 // Method org/apache/activemq/openwire/OpenWireFormat.looseMarshalNestedObject:(Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      82: return

  protected java.lang.Throwable looseUnmarsalThrowable(org.apache.activemq.openwire.OpenWireFormat, java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #87,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
       6: ifeq          210
       9: aload_0
      10: aload_2
      11: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      14: astore_3
      15: aload_0
      16: aload_2
      17: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      20: astore        4
      22: aload_0
      23: aload_3
      24: aload         4
      26: invokespecial #30                 // Method createThrowable:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Throwable;
      29: astore        5
      31: aload_1
      32: invokevirtual #31                 // Method org/apache/activemq/openwire/OpenWireFormat.isStackTraceEnabled:()Z
      35: ifeq          207
      38: getstatic     #32                 // Field STACK_TRACE_ELEMENT_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
      41: ifnull        146
      44: aload_2
      45: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
      50: anewarray     #33                 // class java/lang/StackTraceElement
      53: astore        6
      55: iconst_0
      56: istore        7
      58: iload         7
      60: aload         6
      62: arraylength
      63: if_icmpge     136
      66: aload         6
      68: iload         7
      70: getstatic     #32                 // Field STACK_TRACE_ELEMENT_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
      73: iconst_4
      74: anewarray     #34                 // class java/lang/Object
      77: dup
      78: iconst_0
      79: aload_0
      80: aload_2
      81: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      84: aastore
      85: dup
      86: iconst_1
      87: aload_0
      88: aload_2
      89: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
      92: aastore
      93: dup
      94: iconst_2
      95: aload_0
      96: aload_2
      97: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
     100: aastore
     101: dup
     102: iconst_3
     103: aload_2
     104: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     109: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     112: aastore
     113: invokevirtual #36                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     116: checkcast     #33                 // class java/lang/StackTraceElement
     119: aastore
     120: goto          130
     123: astore        8
     125: aload         8
     127: athrow
     128: astore        8
     130: iinc          7, 1
     133: goto          58
     136: aload         5
     138: aload         6
     140: invokevirtual #39                 // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
     143: goto          195
     146: aload_2
     147: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readShort:()S
     152: istore        6
     154: iconst_0
     155: istore        7
     157: iload         7
     159: iload         6
     161: if_icmpge     195
     164: aload_0
     165: aload_2
     166: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
     169: pop
     170: aload_0
     171: aload_2
     172: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
     175: pop
     176: aload_0
     177: aload_2
     178: invokevirtual #89                 // Method looseUnmarshalString:(Ljava/io/DataInput;)Ljava/lang/String;
     181: pop
     182: aload_2
     183: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
     188: pop
     189: iinc          7, 1
     192: goto          157
     195: aload         5
     197: aload_0
     198: aload_1
     199: aload_2
     200: invokevirtual #90                 // Method looseUnmarsalThrowable:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/io/DataInput;)Ljava/lang/Throwable;
     203: invokevirtual #41                 // Method java/lang/Throwable.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     206: pop
     207: aload         5
     209: areturn
     210: aconst_null
     211: areturn
    Exception table:
       from    to  target type
          66   120   123   Class java/io/IOException
          66   120   128   Class java/lang/Throwable

  protected void looseMarshalThrowable(org.apache.activemq.openwire.OpenWireFormat, java.lang.Throwable, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_2
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokeinterface #88,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      15: aload_2
      16: ifnull        137
      19: aload_0
      20: aload_2
      21: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      27: aload_3
      28: invokevirtual #91                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      31: aload_0
      32: aload_2
      33: invokevirtual #57                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      36: aload_3
      37: invokevirtual #91                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      40: aload_1
      41: invokevirtual #31                 // Method org/apache/activemq/openwire/OpenWireFormat.isStackTraceEnabled:()Z
      44: ifeq          137
      47: aload_2
      48: invokevirtual #58                 // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      51: astore        4
      53: aload_3
      54: aload         4
      56: arraylength
      57: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      62: iconst_0
      63: istore        5
      65: iload         5
      67: aload         4
      69: arraylength
      70: if_icmpge     127
      73: aload         4
      75: iload         5
      77: aaload
      78: astore        6
      80: aload_0
      81: aload         6
      83: invokevirtual #59                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      86: aload_3
      87: invokevirtual #91                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
      90: aload_0
      91: aload         6
      93: invokevirtual #60                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      96: aload_3
      97: invokevirtual #91                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
     100: aload_0
     101: aload         6
     103: invokevirtual #61                 // Method java/lang/StackTraceElement.getFileName:()Ljava/lang/String;
     106: aload_3
     107: invokevirtual #91                 // Method looseMarshalString:(Ljava/lang/String;Ljava/io/DataOutput;)V
     110: aload_3
     111: aload         6
     113: invokevirtual #65                 // Method java/lang/StackTraceElement.getLineNumber:()I
     116: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
     121: iinc          5, 1
     124: goto          65
     127: aload_0
     128: aload_1
     129: aload_2
     130: invokevirtual #62                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     133: aload_3
     134: invokevirtual #92                 // Method looseMarshalThrowable:(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/lang/Throwable;Ljava/io/DataOutput;)V
     137: return

  protected java.lang.String looseUnmarshalString(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
       6: ifeq          16
       9: aload_1
      10: invokeinterface #69,  1           // InterfaceMethod java/io/DataInput.readUTF:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  protected void looseMarshalString(java.lang.String, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokeinterface #88,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      15: aload_1
      16: ifnull        26
      19: aload_2
      20: aload_1
      21: invokeinterface #75,  2           // InterfaceMethod java/io/DataOutput.writeUTF:(Ljava/lang/String;)V
      26: return

  protected void looseMarshalObjectArray(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.command.DataStructure[], java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_2
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokeinterface #88,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      15: aload_2
      16: ifnull        53
      19: aload_3
      20: aload_2
      21: arraylength
      22: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeShort:(I)V
      27: iconst_0
      28: istore        4
      30: iload         4
      32: aload_2
      33: arraylength
      34: if_icmpge     53
      37: aload_0
      38: aload_1
      39: aload_2
      40: iload         4
      42: aaload
      43: aload_3
      44: invokevirtual #93                 // Method looseMarshalNestedObject:(Lorg/apache/activemq/openwire/OpenWireFormat;Lorg/apache/activemq/command/DataStructure;Ljava/io/DataOutput;)V
      47: iinc          4, 1
      50: goto          30
      53: return

  protected void looseMarshalConstByteArray(org.apache.activemq.openwire.OpenWireFormat, byte[], java.io.DataOutput, int) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_2
       2: iconst_0
       3: iload         4
       5: invokeinterface #78,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      10: return

  protected byte[] looseUnmarshalConstByteArray(java.io.DataInput, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: aload_1
       5: aload_3
       6: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      11: aload_3
      12: areturn

  protected void looseMarshalByteArray(org.apache.activemq.openwire.OpenWireFormat, byte[], java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_2
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokeinterface #88,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      15: aload_2
      16: ifnull        34
      19: aload_3
      20: aload_2
      21: arraylength
      22: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      27: aload_3
      28: aload_2
      29: invokeinterface #79,  2           // InterfaceMethod java/io/DataOutput.write:([B)V
      34: return

  protected byte[] looseUnmarshalByteArray(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokeinterface #87,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
       8: ifeq          29
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      17: istore_3
      18: iload_3
      19: newarray       byte
      21: astore_2
      22: aload_1
      23: aload_2
      24: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      29: aload_2
      30: areturn

  protected void looseMarshalByteSequence(org.apache.activemq.openwire.OpenWireFormat, org.apache.activemq.util.ByteSequence, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_2
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokeinterface #88,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      15: aload_2
      16: ifnull        47
      19: aload_3
      20: aload_2
      21: invokevirtual #80                 // Method org/apache/activemq/util/ByteSequence.getLength:()I
      24: invokeinterface #9,  2            // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      29: aload_3
      30: aload_2
      31: invokevirtual #81                 // Method org/apache/activemq/util/ByteSequence.getData:()[B
      34: aload_2
      35: invokevirtual #82                 // Method org/apache/activemq/util/ByteSequence.getOffset:()I
      38: aload_2
      39: invokevirtual #80                 // Method org/apache/activemq/util/ByteSequence.getLength:()I
      42: invokeinterface #78,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      47: return

  protected org.apache.activemq.util.ByteSequence looseUnmarshalByteSequence(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokeinterface #87,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
       8: ifeq          43
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      17: istore_3
      18: iload_3
      19: newarray       byte
      21: astore        4
      23: aload_1
      24: aload         4
      26: invokeinterface #67,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
      31: new           #83                 // class org/apache/activemq/util/ByteSequence
      34: dup
      35: aload         4
      37: iconst_0
      38: iload_3
      39: invokespecial #84                 // Method org/apache/activemq/util/ByteSequence."<init>":([BII)V
      42: astore_2
      43: aload_2
      44: areturn

  static {};
    Code:
       0: aconst_null
       1: astore_0
       2: ldc_w         #33                 // class java/lang/StackTraceElement
       5: iconst_4
       6: anewarray     #45                 // class java/lang/Class
       9: dup
      10: iconst_0
      11: ldc_w         #46                 // class java/lang/String
      14: aastore
      15: dup
      16: iconst_1
      17: ldc_w         #46                 // class java/lang/String
      20: aastore
      21: dup
      22: iconst_2
      23: ldc_w         #46                 // class java/lang/String
      26: aastore
      27: dup
      28: iconst_3
      29: getstatic     #94                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      32: aastore
      33: invokevirtual #47                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      36: astore_0
      37: goto          41
      40: astore_1
      41: aload_0
      42: putstatic     #32                 // Field STACK_TRACE_ELEMENT_CONSTRUCTOR:Ljava/lang/reflect/Constructor;
      45: return
    Exception table:
       from    to  target type
           2    37    40   Class java/lang/Throwable
}
