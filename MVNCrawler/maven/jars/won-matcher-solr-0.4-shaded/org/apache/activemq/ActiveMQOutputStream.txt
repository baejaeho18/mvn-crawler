Compiled from "ActiveMQOutputStream.java"
public class org.apache.activemq.ActiveMQOutputStream extends java.io.OutputStream implements org.apache.activemq.Disposable {
  private static final org.slf4j.Logger LOG;

  protected int count;

  final byte[] buffer;

  private final org.apache.activemq.ActiveMQConnection connection;

  private final java.util.Map<java.lang.String, java.lang.Object> properties;

  private final org.apache.activemq.command.ProducerInfo info;

  private long messageSequence;

  private boolean closed;

  private final int deliveryMode;

  private final int priority;

  private final long timeToLive;

  private boolean alwaysSyncSend;

  private boolean addPropertiesOnFirstMsgOnly;

  public static final java.lang.String AMQ_STREAM_CHUNK_SIZE;

  public org.apache.activemq.ActiveMQOutputStream(org.apache.activemq.ActiveMQConnection, org.apache.activemq.command.ProducerId, org.apache.activemq.command.ActiveMQDestination, java.util.Map<java.lang.String, java.lang.Object>, int, int, long) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field alwaysSyncSend:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field addPropertiesOnFirstMsgOnly:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      19: aload_0
      20: iload         5
      22: putfield      #5                  // Field deliveryMode:I
      25: aload_0
      26: iload         6
      28: putfield      #6                  // Field priority:I
      31: aload_0
      32: lload         7
      34: putfield      #7                  // Field timeToLive:J
      37: aload_0
      38: aload         4
      40: ifnonnull     47
      43: aconst_null
      44: goto          56
      47: new           #8                  // class java/util/HashMap
      50: dup
      51: aload         4
      53: invokespecial #9                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      56: putfield      #10                 // Field properties:Ljava/util/Map;
      59: aload_0
      60: getfield      #10                 // Field properties:Ljava/util/Map;
      63: ifnonnull     70
      66: aconst_null
      67: goto          84
      70: aload_0
      71: getfield      #10                 // Field properties:Ljava/util/Map;
      74: ldc           #11                 // String AMQ_STREAM_CHUNK_SIZE
      76: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      81: checkcast     #13                 // class java/lang/Integer
      84: astore        9
      86: aload         9
      88: ifnonnull     101
      91: ldc           #14                 // int 65536
      93: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: astore        9
      98: goto          134
     101: aload         9
     103: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     106: iconst_1
     107: if_icmpge     120
     110: new           #17                 // class java/lang/IllegalArgumentException
     113: dup
     114: ldc           #18                 // String Chunk size must be greater then 0
     116: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     119: athrow
     120: aload         9
     122: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     125: sipush        1024
     128: imul
     129: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     132: astore        9
     134: aload_0
     135: aload         9
     137: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
     140: newarray       byte
     142: putfield      #20                 // Field buffer:[B
     145: aload_3
     146: ifnonnull     159
     149: new           #21                 // class javax/jms/InvalidDestinationException
     152: dup
     153: ldc           #22                 // String Don\'t understand null destinations
     155: invokespecial #23                 // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: aload_0
     160: new           #24                 // class org/apache/activemq/command/ProducerInfo
     163: dup
     164: aload_2
     165: invokespecial #25                 // Method org/apache/activemq/command/ProducerInfo."<init>":(Lorg/apache/activemq/command/ProducerId;)V
     168: putfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
     171: aload_3
     172: invokevirtual #27                 // Method org/apache/activemq/command/ActiveMQDestination.getOptions:()Ljava/util/Map;
     175: ifnull        299
     178: new           #8                  // class java/util/HashMap
     181: dup
     182: aload_3
     183: invokevirtual #27                 // Method org/apache/activemq/command/ActiveMQDestination.getOptions:()Ljava/util/Map;
     186: invokespecial #9                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     189: astore        10
     191: aload_0
     192: aload         10
     194: ldc           #28                 // String producer.
     196: invokestatic  #29                 // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)Z
     199: pop
     200: aload_0
     201: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
     204: aload         10
     206: ldc           #28                 // String producer.
     208: invokestatic  #29                 // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)Z
     211: pop
     212: aload         10
     214: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
     219: ifle          299
     222: new           #31                 // class java/lang/StringBuilder
     225: dup
     226: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     229: ldc           #33                 // String There are
     231: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: aload         10
     236: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
     241: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     244: ldc           #36                 // String  producer options that couldn\'t be set on the producer.
     246: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: ldc           #37                 // String  Check the options are spelled correctly.
     251: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: ldc           #38                 // String  Unknown parameters=[
     256: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     259: aload         10
     261: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     264: ldc           #40                 // String ].
     266: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: ldc           #41                 // String  This producer cannot be started.
     271: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     277: astore        11
     279: getstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
     282: aload         11
     284: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     289: new           #45                 // class org/apache/activemq/ConfigurationException
     292: dup
     293: aload         11
     295: invokespecial #46                 // Method org/apache/activemq/ConfigurationException."<init>":(Ljava/lang/String;)V
     298: athrow
     299: aload_0
     300: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
     303: aload_3
     304: invokevirtual #47                 // Method org/apache/activemq/command/ProducerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     307: aload_0
     308: getfield      #4                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     311: aload_0
     312: invokevirtual #48                 // Method org/apache/activemq/ActiveMQConnection.addOutputStream:(Lorg/apache/activemq/ActiveMQOutputStream;)V
     315: aload_0
     316: getfield      #4                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     319: aload_0
     320: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
     323: invokevirtual #49                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     326: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field closed:Z
       4: ifne          50
       7: aload_0
       8: invokespecial #51                 // Method flushBuffer:()V
      11: aload_0
      12: new           #52                 // class org/apache/activemq/command/ActiveMQMessage
      15: dup
      16: invokespecial #53                 // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      19: iconst_1
      20: invokespecial #54                 // Method send:(Lorg/apache/activemq/command/ActiveMQMessage;Z)V
      23: aload_0
      24: invokevirtual #55                 // Method dispose:()V
      27: aload_0
      28: getfield      #4                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      31: aload_0
      32: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
      35: invokevirtual #56                 // Method org/apache/activemq/command/ProducerInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      38: invokevirtual #49                 // Method org/apache/activemq/ActiveMQConnection.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
      41: goto          50
      44: astore_1
      45: aload_1
      46: invokestatic  #58                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Exception;)Ljava/io/IOException;
      49: pop
      50: return
    Exception table:
       from    to  target type
          11    41    44   Class javax/jms/JMSException

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #50                 // Field closed:Z
       4: ifne          20
       7: aload_0
       8: getfield      #4                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
      11: aload_0
      12: invokevirtual #59                 // Method org/apache/activemq/ActiveMQConnection.removeOutputStream:(Lorg/apache/activemq/ActiveMQOutputStream;)V
      15: aload_0
      16: iconst_1
      17: putfield      #50                 // Field closed:Z
      20: return

  public synchronized void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:[B
       4: aload_0
       5: dup
       6: getfield      #60                 // Field count:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #60                 // Field count:I
      15: iload_1
      16: i2b
      17: bastore
      18: aload_0
      19: getfield      #60                 // Field count:I
      22: aload_0
      23: getfield      #20                 // Field buffer:[B
      26: arraylength
      27: if_icmpne     34
      30: aload_0
      31: invokespecial #51                 // Method flushBuffer:()V
      34: return

  public synchronized void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          75
       4: iload_3
       5: aload_0
       6: getfield      #20                 // Field buffer:[B
       9: arraylength
      10: aload_0
      11: getfield      #60                 // Field count:I
      14: isub
      15: invokestatic  #61                 // Method java/lang/Math.min:(II)I
      18: istore        4
      20: aload_1
      21: iload_2
      22: aload_0
      23: getfield      #20                 // Field buffer:[B
      26: aload_0
      27: getfield      #60                 // Field count:I
      30: iload         4
      32: invokestatic  #62                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: iload_3
      36: iload         4
      38: isub
      39: istore_3
      40: aload_0
      41: dup
      42: getfield      #60                 // Field count:I
      45: iload         4
      47: iadd
      48: putfield      #60                 // Field count:I
      51: iload_2
      52: iload         4
      54: iadd
      55: istore_2
      56: aload_0
      57: getfield      #60                 // Field count:I
      60: aload_0
      61: getfield      #20                 // Field buffer:[B
      64: arraylength
      65: if_icmpne     72
      68: aload_0
      69: invokespecial #51                 // Method flushBuffer:()V
      72: goto          0
      75: return

  public synchronized void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #51                 // Method flushBuffer:()V
       4: return

  private void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field count:I
       4: ifeq          48
       7: new           #63                 // class org/apache/activemq/command/ActiveMQBytesMessage
      10: dup
      11: invokespecial #64                 // Method org/apache/activemq/command/ActiveMQBytesMessage."<init>":()V
      14: astore_1
      15: aload_1
      16: aload_0
      17: getfield      #20                 // Field buffer:[B
      20: iconst_0
      21: aload_0
      22: getfield      #60                 // Field count:I
      25: invokevirtual #65                 // Method org/apache/activemq/command/ActiveMQBytesMessage.writeBytes:([BII)V
      28: aload_0
      29: aload_1
      30: iconst_0
      31: invokespecial #54                 // Method send:(Lorg/apache/activemq/command/ActiveMQMessage;Z)V
      34: goto          43
      37: astore_1
      38: aload_1
      39: invokestatic  #58                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Exception;)Ljava/io/IOException;
      42: athrow
      43: aload_0
      44: iconst_0
      45: putfield      #60                 // Field count:I
      48: return
    Exception table:
       from    to  target type
           7    34    37   Class javax/jms/JMSException

  private void send(org.apache.activemq.command.ActiveMQMessage, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field properties:Ljava/util/Map;
       4: ifnull        82
       7: aload_0
       8: getfield      #66                 // Field messageSequence:J
      11: lconst_0
      12: lcmp
      13: ifeq          23
      16: aload_0
      17: getfield      #3                  // Field addPropertiesOnFirstMsgOnly:Z
      20: ifne          82
      23: aload_0
      24: getfield      #10                 // Field properties:Ljava/util/Map;
      27: invokeinterface #67,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      32: invokeinterface #68,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: astore_3
      38: aload_3
      39: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          82
      47: aload_3
      48: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #71                 // class java/lang/String
      56: astore        4
      58: aload_0
      59: getfield      #10                 // Field properties:Ljava/util/Map;
      62: aload         4
      64: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: astore        5
      71: aload_1
      72: aload         4
      74: aload         5
      76: invokevirtual #72                 // Method org/apache/activemq/command/ActiveMQMessage.setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      79: goto          38
      82: aload_1
      83: ldc           #73                 // String org.apache.activemq.Stream
      85: invokevirtual #74                 // Method org/apache/activemq/command/ActiveMQMessage.setType:(Ljava/lang/String;)V
      88: aload_1
      89: aload_0
      90: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
      93: invokevirtual #75                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      96: invokevirtual #76                 // Method org/apache/activemq/command/ProducerId.toString:()Ljava/lang/String;
      99: invokevirtual #77                 // Method org/apache/activemq/command/ActiveMQMessage.setGroupID:(Ljava/lang/String;)V
     102: iload_2
     103: ifeq          114
     106: aload_1
     107: iconst_m1
     108: invokevirtual #78                 // Method org/apache/activemq/command/ActiveMQMessage.setGroupSequence:(I)V
     111: goto          123
     114: aload_1
     115: aload_0
     116: getfield      #66                 // Field messageSequence:J
     119: l2i
     120: invokevirtual #78                 // Method org/apache/activemq/command/ActiveMQMessage.setGroupSequence:(I)V
     123: new           #79                 // class org/apache/activemq/command/MessageId
     126: dup
     127: aload_0
     128: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
     131: invokevirtual #75                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     134: aload_0
     135: dup
     136: getfield      #66                 // Field messageSequence:J
     139: dup2_x1
     140: lconst_1
     141: ladd
     142: putfield      #66                 // Field messageSequence:J
     145: invokespecial #80                 // Method org/apache/activemq/command/MessageId."<init>":(Lorg/apache/activemq/command/ProducerId;J)V
     148: astore_3
     149: aload_0
     150: getfield      #4                  // Field connection:Lorg/apache/activemq/ActiveMQConnection;
     153: aload_0
     154: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
     157: invokevirtual #81                 // Method org/apache/activemq/command/ProducerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     160: aload_1
     161: aload_3
     162: aload_0
     163: getfield      #5                  // Field deliveryMode:I
     166: aload_0
     167: getfield      #6                  // Field priority:I
     170: aload_0
     171: getfield      #7                  // Field timeToLive:J
     174: iload_2
     175: ifne          189
     178: aload_0
     179: invokevirtual #82                 // Method isAlwaysSyncSend:()Z
     182: ifne          189
     185: iconst_1
     186: goto          190
     189: iconst_0
     190: invokevirtual #83                 // Method org/apache/activemq/ActiveMQConnection.send:(Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQMessage;Lorg/apache/activemq/command/MessageId;IIJZ)V
     193: return

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #84                 // String ActiveMQOutputStream { producerId=
       9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #26                 // Field info:Lorg/apache/activemq/command/ProducerInfo;
      16: invokevirtual #75                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      19: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #85                 // String  }
      24: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public boolean isAlwaysSyncSend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field alwaysSyncSend:Z
       4: ireturn

  public void setAlwaysSyncSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field alwaysSyncSend:Z
       5: return

  public boolean isAddPropertiesOnFirstMsgOnly();
    Code:
       0: aload_0
       1: getfield      #3                  // Field addPropertiesOnFirstMsgOnly:Z
       4: ireturn

  public void setAddPropertiesOnFirstMsgOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field addPropertiesOnFirstMsgOnly:Z
       5: return

  static {};
    Code:
       0: ldc_w         #86                 // class org/apache/activemq/ActiveMQOutputStream
       3: invokestatic  #87                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
