Compiled from "ActiveMQSession.java"
class org.apache.activemq.ActiveMQSession$5 extends org.apache.activemq.transaction.Synchronization {
  final int clearRequestCount;

  final org.apache.activemq.command.MessageAck val$ack;

  final org.apache.activemq.command.MessageDispatch val$md;

  final org.apache.activemq.ActiveMQSession this$0;

  org.apache.activemq.ActiveMQSession$5(org.apache.activemq.ActiveMQSession, org.apache.activemq.command.MessageAck, org.apache.activemq.command.MessageDispatch);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
      15: aload_0
      16: invokespecial #4                  // Method org/apache/activemq/transaction/Synchronization."<init>":()V
      19: aload_0
      20: aload_0
      21: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      24: getfield      #5                  // Field org/apache/activemq/ActiveMQSession.clearRequestsCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      27: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      30: ldc           #7                  // int 2147483647
      32: if_icmpne     48
      35: aload_0
      36: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      39: getfield      #5                  // Field org/apache/activemq/ActiveMQSession.clearRequestsCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      42: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      45: goto          58
      48: aload_0
      49: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      52: getfield      #5                  // Field org/apache/activemq/ActiveMQSession.clearRequestsCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      55: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      58: putfield      #9                  // Field clearRequestCount:I
      61: return

  public void beforeEnd() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
       4: invokevirtual #10                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
       7: invokevirtual #11                 // Method org/apache/activemq/command/TransactionId.isXATransaction:()Z
      10: ifeq          102
      13: aload_0
      14: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      17: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      20: aload_0
      21: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
      24: invokevirtual #13                 // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      27: invokevirtual #14                 // Method org/apache/activemq/ActiveMQConnection.hasDispatcher:(Lorg/apache/activemq/command/ConsumerId;)Z
      30: ifne          102
      33: invokestatic  #15                 // Method org/apache/activemq/ActiveMQSession.access$300:()Lorg/slf4j/Logger;
      36: ldc           #16                 // String forcing rollback - {} consumer no longer active on {}
      38: aload_0
      39: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
      42: aload_0
      43: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      46: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      49: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      54: new           #18                 // class javax/jms/TransactionRolledBackException
      57: dup
      58: new           #19                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #21                 // String consumer
      67: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
      74: invokevirtual #13                 // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      77: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: ldc           #24                 // String  no longer active on
      82: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      89: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      92: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #26                 // Method javax/jms/TransactionRolledBackException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: invokestatic  #15                 // Method org/apache/activemq/ActiveMQSession.access$300:()Lorg/slf4j/Logger;
     105: ldc           #27                 // String beforeEnd ack {}
     107: aload_0
     108: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
     111: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     116: aload_0
     117: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     120: aload_0
     121: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
     124: invokevirtual #29                 // Method org/apache/activemq/ActiveMQSession.sendAck:(Lorg/apache/activemq/command/MessageAck;)V
     127: return

  public void afterRollback() throws java.lang.Exception;
    Code:
       0: invokestatic  #15                 // Method org/apache/activemq/ActiveMQSession.access$300:()Lorg/slf4j/Logger;
       3: ldc           #30                 // String rollback {}
       5: aload_0
       6: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
       9: new           #31                 // class java/lang/Throwable
      12: dup
      13: ldc           #32                 // String here
      15: invokespecial #33                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      18: invokeinterface #34,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
      27: invokevirtual #35                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      30: invokevirtual #36                 // Method org/apache/activemq/command/Message.onMessageRolledBack:()V
      33: aload_0
      34: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      37: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
      40: aload_0
      41: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      44: aload_0
      45: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
      48: invokevirtual #35                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      51: invokevirtual #37                 // Method org/apache/activemq/ActiveMQConnection.rollbackDuplicate:(Lorg/apache/activemq/ActiveMQDispatcher;Lorg/apache/activemq/command/Message;)V
      54: aload_0
      55: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
      58: getfield      #5                  // Field org/apache/activemq/ActiveMQSession.clearRequestsCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      61: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      64: aload_0
      65: getfield      #9                  // Field clearRequestCount:I
      68: if_icmple     116
      71: invokestatic  #15                 // Method org/apache/activemq/ActiveMQSession.access$300:()Lorg/slf4j/Logger;
      74: ldc           #38                 // String No redelivery of {} on rollback of {} due to failover of {}
      76: iconst_3
      77: anewarray     #39                 // class java/lang/Object
      80: dup
      81: iconst_0
      82: aload_0
      83: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
      86: aastore
      87: dup
      88: iconst_1
      89: aload_0
      90: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
      93: invokevirtual #10                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      96: aastore
      97: dup
      98: iconst_2
      99: aload_0
     100: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     103: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
     106: invokevirtual #40                 // Method org/apache/activemq/ActiveMQConnection.getTransport:()Lorg/apache/activemq/transport/Transport;
     109: aastore
     110: invokeinterface #41,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     115: return
     116: aload_0
     117: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
     120: invokevirtual #10                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     123: invokevirtual #11                 // Method org/apache/activemq/command/TransactionId.isXATransaction:()Z
     126: ifeq          194
     129: aload_0
     130: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     133: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
     136: aload_0
     137: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
     140: invokevirtual #13                 // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     143: invokevirtual #14                 // Method org/apache/activemq/ActiveMQConnection.hasDispatcher:(Lorg/apache/activemq/command/ConsumerId;)Z
     146: ifne          194
     149: invokestatic  #15                 // Method org/apache/activemq/ActiveMQSession.access$300:()Lorg/slf4j/Logger;
     152: ldc           #42                 // String No local redelivery of {} on rollback of {} because consumer is no longer active on {}
     154: iconst_3
     155: anewarray     #39                 // class java/lang/Object
     158: dup
     159: iconst_0
     160: aload_0
     161: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
     164: aastore
     165: dup
     166: iconst_1
     167: aload_0
     168: getfield      #2                  // Field val$ack:Lorg/apache/activemq/command/MessageAck;
     171: invokevirtual #10                 // Method org/apache/activemq/command/MessageAck.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
     174: aastore
     175: dup
     176: iconst_2
     177: aload_0
     178: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     181: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
     184: invokevirtual #40                 // Method org/apache/activemq/ActiveMQConnection.getTransport:()Lorg/apache/activemq/transport/Transport;
     187: aastore
     188: invokeinterface #41,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     193: return
     194: aload_0
     195: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     198: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
     201: invokevirtual #43                 // Method org/apache/activemq/ActiveMQConnection.getRedeliveryPolicy:()Lorg/apache/activemq/RedeliveryPolicy;
     204: astore_1
     205: aload_0
     206: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
     209: invokevirtual #35                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     212: invokevirtual #44                 // Method org/apache/activemq/command/Message.getRedeliveryCounter:()I
     215: istore_2
     216: aload_1
     217: invokevirtual #45                 // Method org/apache/activemq/RedeliveryPolicy.getMaximumRedeliveries:()I
     220: iconst_m1
     221: if_icmpeq     301
     224: iload_2
     225: aload_1
     226: invokevirtual #45                 // Method org/apache/activemq/RedeliveryPolicy.getMaximumRedeliveries:()I
     229: if_icmple     301
     232: new           #46                 // class org/apache/activemq/command/MessageAck
     235: dup
     236: aload_0
     237: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
     240: iconst_1
     241: iconst_1
     242: invokespecial #47                 // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
     245: astore_3
     246: aload_3
     247: aload_0
     248: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
     251: invokevirtual #35                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     254: invokevirtual #48                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     257: invokevirtual #49                 // Method org/apache/activemq/command/MessageAck.setFirstMessageId:(Lorg/apache/activemq/command/MessageId;)V
     260: aload_3
     261: new           #31                 // class java/lang/Throwable
     264: dup
     265: new           #19                 // class java/lang/StringBuilder
     268: dup
     269: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     272: ldc           #50                 // String Exceeded ra redelivery policy limit:
     274: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: aload_1
     278: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     281: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokespecial #33                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
     287: invokevirtual #51                 // Method org/apache/activemq/command/MessageAck.setPoisonCause:(Ljava/lang/Throwable;)V
     290: aload_0
     291: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     294: aload_3
     295: invokevirtual #52                 // Method org/apache/activemq/ActiveMQSession.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     298: goto          389
     301: new           #46                 // class org/apache/activemq/command/MessageAck
     304: dup
     305: aload_0
     306: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
     309: iconst_3
     310: iconst_1
     311: invokespecial #47                 // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
     314: astore_3
     315: aload_3
     316: aload_0
     317: getfield      #3                  // Field val$md:Lorg/apache/activemq/command/MessageDispatch;
     320: invokevirtual #35                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     323: invokevirtual #48                 // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     326: invokevirtual #49                 // Method org/apache/activemq/command/MessageAck.setFirstMessageId:(Lorg/apache/activemq/command/MessageId;)V
     329: aload_0
     330: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     333: aload_3
     334: invokevirtual #52                 // Method org/apache/activemq/ActiveMQSession.asyncSendPacket:(Lorg/apache/activemq/command/Command;)V
     337: aload_1
     338: invokevirtual #53                 // Method org/apache/activemq/RedeliveryPolicy.getInitialRedeliveryDelay:()J
     341: lstore        4
     343: iconst_0
     344: istore        6
     346: iload         6
     348: iload_2
     349: if_icmpge     366
     352: aload_1
     353: lload         4
     355: invokevirtual #54                 // Method org/apache/activemq/RedeliveryPolicy.getNextRedeliveryDelay:(J)J
     358: lstore        4
     360: iinc          6, 1
     363: goto          346
     366: aload_0
     367: getfield      #1                  // Field this$0:Lorg/apache/activemq/ActiveMQSession;
     370: getfield      #12                 // Field org/apache/activemq/ActiveMQSession.connection:Lorg/apache/activemq/ActiveMQConnection;
     373: invokevirtual #55                 // Method org/apache/activemq/ActiveMQConnection.getScheduler:()Lorg/apache/activemq/thread/Scheduler;
     376: new           #56                 // class org/apache/activemq/ActiveMQSession$5$1
     379: dup
     380: aload_0
     381: invokespecial #57                 // Method org/apache/activemq/ActiveMQSession$5$1."<init>":(Lorg/apache/activemq/ActiveMQSession$5;)V
     384: lload         4
     386: invokevirtual #58                 // Method org/apache/activemq/thread/Scheduler.executeAfterDelay:(Ljava/lang/Runnable;J)V
     389: return
}
