Compiled from "AmqpProtocolConverter.java"
class org.apache.activemq.transport.amqp.AmqpProtocolConverter$7 implements org.apache.activemq.transport.amqp.ResponseHandler {
  final org.apache.qpid.proton.engine.Sender val$sender;

  final org.apache.activemq.command.ConsumerId val$id;

  final org.apache.activemq.transport.amqp.AmqpProtocolConverter$AmqpSessionContext val$sessionContext;

  final org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext val$consumerContext;

  final org.apache.activemq.transport.amqp.AmqpProtocolConverter this$0;

  org.apache.activemq.transport.amqp.AmqpProtocolConverter$7(org.apache.activemq.transport.amqp.AmqpProtocolConverter, org.apache.qpid.proton.engine.Sender, org.apache.activemq.command.ConsumerId, org.apache.activemq.transport.amqp.AmqpProtocolConverter$AmqpSessionContext, org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$sender:Lorg/apache/qpid/proton/engine/Sender;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$id:Lorg/apache/activemq/command/ConsumerId;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$sessionContext:Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter$AmqpSessionContext;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$consumerContext:Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter$ConsumerContext;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public void onResponse(org.apache.activemq.transport.amqp.IAmqpProtocolConverter, org.apache.activemq.command.Response) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #7                  // Method org/apache/activemq/command/Response.isException:()Z
       4: ifeq          141
       7: aload_0
       8: getfield      #2                  // Field val$sender:Lorg/apache/qpid/proton/engine/Sender;
      11: aconst_null
      12: invokeinterface #8,  2            // InterfaceMethod org/apache/qpid/proton/engine/Sender.setSource:(Lorg/apache/qpid/proton/amqp/transport/Source;)V
      17: aload_2
      18: checkcast     #9                  // class org/apache/activemq/command/ExceptionResponse
      21: invokevirtual #10                 // Method org/apache/activemq/command/ExceptionResponse.getException:()Ljava/lang/Throwable;
      24: astore_3
      25: aload_3
      26: instanceof    #11                 // class java/lang/SecurityException
      29: ifeq          58
      32: aload_0
      33: getfield      #2                  // Field val$sender:Lorg/apache/qpid/proton/engine/Sender;
      36: new           #12                 // class org/apache/qpid/proton/amqp/transport/ErrorCondition
      39: dup
      40: getstatic     #13                 // Field org/apache/qpid/proton/amqp/transport/AmqpError.UNAUTHORIZED_ACCESS:Lorg/apache/qpid/proton/amqp/Symbol;
      43: aload_3
      44: invokevirtual #14                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      47: invokespecial #15                 // Method org/apache/qpid/proton/amqp/transport/ErrorCondition."<init>":(Lorg/apache/qpid/proton/amqp/Symbol;Ljava/lang/String;)V
      50: invokeinterface #16,  2           // InterfaceMethod org/apache/qpid/proton/engine/Sender.setCondition:(Lorg/apache/qpid/proton/amqp/transport/ErrorCondition;)V
      55: goto          114
      58: aload_3
      59: instanceof    #17                 // class javax/jms/InvalidSelectorException
      62: ifeq          91
      65: aload_0
      66: getfield      #2                  // Field val$sender:Lorg/apache/qpid/proton/engine/Sender;
      69: new           #12                 // class org/apache/qpid/proton/amqp/transport/ErrorCondition
      72: dup
      73: getstatic     #18                 // Field org/apache/qpid/proton/amqp/transport/AmqpError.INVALID_FIELD:Lorg/apache/qpid/proton/amqp/Symbol;
      76: aload_3
      77: invokevirtual #14                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      80: invokespecial #15                 // Method org/apache/qpid/proton/amqp/transport/ErrorCondition."<init>":(Lorg/apache/qpid/proton/amqp/Symbol;Ljava/lang/String;)V
      83: invokeinterface #16,  2           // InterfaceMethod org/apache/qpid/proton/engine/Sender.setCondition:(Lorg/apache/qpid/proton/amqp/transport/ErrorCondition;)V
      88: goto          114
      91: aload_0
      92: getfield      #2                  // Field val$sender:Lorg/apache/qpid/proton/engine/Sender;
      95: new           #12                 // class org/apache/qpid/proton/amqp/transport/ErrorCondition
      98: dup
      99: getstatic     #19                 // Field org/apache/qpid/proton/amqp/transport/AmqpError.INTERNAL_ERROR:Lorg/apache/qpid/proton/amqp/Symbol;
     102: aload_3
     103: invokevirtual #14                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     106: invokespecial #15                 // Method org/apache/qpid/proton/amqp/transport/ErrorCondition."<init>":(Lorg/apache/qpid/proton/amqp/Symbol;Ljava/lang/String;)V
     109: invokeinterface #16,  2           // InterfaceMethod org/apache/qpid/proton/engine/Sender.setCondition:(Lorg/apache/qpid/proton/amqp/transport/ErrorCondition;)V
     114: aload_0
     115: getfield      #1                  // Field this$0:Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter;
     118: invokestatic  #20                 // Method org/apache/activemq/transport/amqp/AmqpProtocolConverter.access$1000:(Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter;)Ljava/util/concurrent/ConcurrentHashMap;
     121: aload_0
     122: getfield      #3                  // Field val$id:Lorg/apache/activemq/command/ConsumerId;
     125: invokevirtual #21                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_0
     130: getfield      #2                  // Field val$sender:Lorg/apache/qpid/proton/engine/Sender;
     133: invokeinterface #22,  1           // InterfaceMethod org/apache/qpid/proton/engine/Sender.close:()V
     138: goto          171
     141: aload_0
     142: getfield      #4                  // Field val$sessionContext:Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter$AmqpSessionContext;
     145: getfield      #23                 // Field org/apache/activemq/transport/amqp/AmqpProtocolConverter$AmqpSessionContext.consumers:Ljava/util/Map;
     148: aload_0
     149: getfield      #3                  // Field val$id:Lorg/apache/activemq/command/ConsumerId;
     152: aload_0
     153: getfield      #5                  // Field val$consumerContext:Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter$ConsumerContext;
     156: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     161: pop
     162: aload_0
     163: getfield      #2                  // Field val$sender:Lorg/apache/qpid/proton/engine/Sender;
     166: invokeinterface #25,  1           // InterfaceMethod org/apache/qpid/proton/engine/Sender.open:()V
     171: aload_0
     172: getfield      #1                  // Field this$0:Lorg/apache/activemq/transport/amqp/AmqpProtocolConverter;
     175: invokevirtual #26                 // Method org/apache/activemq/transport/amqp/AmqpProtocolConverter.pumpProtonToSocket:()V
     178: return
}
