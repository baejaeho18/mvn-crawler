Compiled from "JmDNSFactory.java"
public final class org.apache.activemq.transport.discovery.zeroconf.JmDNSFactory {
  static java.util.Map<java.net.InetAddress, org.apache.activemq.transport.discovery.zeroconf.JmDNSFactory$UsageTracker> registry;

  private org.apache.activemq.transport.discovery.zeroconf.JmDNSFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static synchronized javax.jmdns.JmDNS create(java.net.InetAddress) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field registry:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker
      12: astore_1
      13: aload_1
      14: ifnonnull     44
      17: new           #4                  // class org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker
      20: dup
      21: invokespecial #5                  // Method org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker."<init>":()V
      24: astore_1
      25: aload_1
      26: aload_0
      27: invokestatic  #6                  // Method javax/jmdns/JmDNS.create:(Ljava/net/InetAddress;)Ljavax/jmdns/JmDNS;
      30: putfield      #7                  // Field org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker.jmDNS:Ljavax/jmdns/JmDNS;
      33: getstatic     #2                  // Field registry:Ljava/util/Map;
      36: aload_0
      37: aload_1
      38: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_1
      45: getfield      #9                  // Field org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker.count:Ljava/util/concurrent/atomic/AtomicInteger;
      48: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      51: pop
      52: aload_1
      53: getfield      #7                  // Field org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker.jmDNS:Ljavax/jmdns/JmDNS;
      56: areturn

  static synchronized boolean onClose(java.net.InetAddress);
    Code:
       0: getstatic     #2                  // Field registry:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker
      12: astore_1
      13: aload_1
      14: ifnull        39
      17: aload_1
      18: getfield      #9                  // Field org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory$UsageTracker.count:Ljava/util/concurrent/atomic/AtomicInteger;
      21: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      24: ifne          39
      27: getstatic     #2                  // Field registry:Ljava/util/Map;
      30: aload_0
      31: invokeinterface #12,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: iconst_1
      38: ireturn
      39: iconst_0
      40: ireturn

  static {};
    Code:
       0: new           #13                 // class java/util/HashMap
       3: dup
       4: invokespecial #14                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #2                  // Field registry:Ljava/util/Map;
      10: return
}
