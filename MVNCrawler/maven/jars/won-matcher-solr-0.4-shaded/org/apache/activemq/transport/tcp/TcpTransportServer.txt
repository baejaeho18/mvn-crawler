Compiled from "TcpTransportServer.java"
public class org.apache.activemq.transport.tcp.TcpTransportServer extends org.apache.activemq.transport.TransportServerThreadSupport implements org.apache.activemq.util.ServiceListener {
  private static final org.slf4j.Logger LOG;

  protected java.net.ServerSocket serverSocket;

  protected int backlog;

  protected org.apache.activemq.wireformat.WireFormatFactory wireFormatFactory;

  protected final org.apache.activemq.transport.tcp.TcpTransportFactory transportFactory;

  protected long maxInactivityDuration;

  protected long maxInactivityDurationInitalDelay;

  protected int minmumWireFormatVersion;

  protected boolean useQueueForAccept;

  protected boolean allowLinkStealing;

  protected boolean trace;

  protected int soTimeout;

  protected int socketBufferSize;

  protected int connectionTimeout;

  protected java.lang.String logWriterName;

  protected boolean dynamicManagement;

  protected boolean startLogging;

  protected final javax.net.ServerSocketFactory serverSocketFactory;

  protected java.util.concurrent.BlockingQueue<java.net.Socket> socketQueue;

  protected java.lang.Thread socketHandlerThread;

  protected int maximumConnections;

  protected java.util.concurrent.atomic.AtomicInteger currentTransportCount;

  public org.apache.activemq.transport.tcp.TcpTransportServer(org.apache.activemq.transport.tcp.TcpTransportFactory, java.net.URI, javax.net.ServerSocketFactory) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method org/apache/activemq/transport/TransportServerThreadSupport."<init>":(Ljava/net/URI;)V
       5: aload_0
       6: sipush        5000
       9: putfield      #4                  // Field backlog:I
      12: aload_0
      13: new           #5                  // class org/apache/activemq/openwire/OpenWireFormatFactory
      16: dup
      17: invokespecial #6                  // Method org/apache/activemq/openwire/OpenWireFormatFactory."<init>":()V
      20: putfield      #7                  // Field wireFormatFactory:Lorg/apache/activemq/wireformat/WireFormatFactory;
      23: aload_0
      24: ldc2_w        #8                  // long 30000l
      27: putfield      #10                 // Field maxInactivityDuration:J
      30: aload_0
      31: ldc2_w        #11                 // long 10000l
      34: putfield      #13                 // Field maxInactivityDurationInitalDelay:J
      37: aload_0
      38: iconst_1
      39: putfield      #14                 // Field useQueueForAccept:Z
      42: aload_0
      43: iconst_0
      44: putfield      #15                 // Field trace:Z
      47: aload_0
      48: iconst_0
      49: putfield      #16                 // Field soTimeout:I
      52: aload_0
      53: ldc           #17                 // int 65536
      55: putfield      #18                 // Field socketBufferSize:I
      58: aload_0
      59: sipush        30000
      62: putfield      #19                 // Field connectionTimeout:I
      65: aload_0
      66: getstatic     #20                 // Field org/apache/activemq/TransportLoggerSupport.defaultLogWriterName:Ljava/lang/String;
      69: putfield      #21                 // Field logWriterName:Ljava/lang/String;
      72: aload_0
      73: iconst_0
      74: putfield      #22                 // Field dynamicManagement:Z
      77: aload_0
      78: iconst_1
      79: putfield      #23                 // Field startLogging:Z
      82: aload_0
      83: new           #24                 // class java/util/concurrent/LinkedBlockingQueue
      86: dup
      87: invokespecial #25                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      90: putfield      #26                 // Field socketQueue:Ljava/util/concurrent/BlockingQueue;
      93: aload_0
      94: ldc           #27                 // int 2147483647
      96: putfield      #28                 // Field maximumConnections:I
      99: aload_0
     100: new           #29                 // class java/util/concurrent/atomic/AtomicInteger
     103: dup
     104: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
     107: putfield      #31                 // Field currentTransportCount:Ljava/util/concurrent/atomic/AtomicInteger;
     110: aload_0
     111: aload_1
     112: putfield      #32                 // Field transportFactory:Lorg/apache/activemq/transport/tcp/TcpTransportFactory;
     115: aload_0
     116: aload_3
     117: putfield      #33                 // Field serverSocketFactory:Ljavax/net/ServerSocketFactory;
     120: return

  public void bind() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getBindLocation:()Ljava/net/URI;
       4: astore_1
       5: aload_1
       6: invokevirtual #35                 // Method java/net/URI.getHost:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: ifnull        21
      14: aload_2
      15: invokevirtual #36                 // Method java/lang/String.length:()I
      18: ifne          26
      21: ldc           #37                 // String localhost
      23: goto          27
      26: aload_2
      27: astore_2
      28: aload_2
      29: invokestatic  #38                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      32: astore_3
      33: aload_0
      34: aload_0
      35: getfield      #33                 // Field serverSocketFactory:Ljavax/net/ServerSocketFactory;
      38: aload_1
      39: invokevirtual #39                 // Method java/net/URI.getPort:()I
      42: aload_0
      43: getfield      #4                  // Field backlog:I
      46: aload_3
      47: invokevirtual #40                 // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;
      50: putfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
      53: aload_0
      54: aload_0
      55: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
      58: invokespecial #42                 // Method configureServerSocket:(Ljava/net/ServerSocket;)V
      61: goto          101
      64: astore        4
      66: new           #44                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #46                 // String Failed to bind to server socket:
      75: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #49                 // String  due to:
      84: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload         4
      89: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: aload         4
      97: invokestatic  #51                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/io/IOException;
     100: athrow
     101: aload_0
     102: new           #52                 // class java/net/URI
     105: dup
     106: aload_1
     107: invokevirtual #53                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     110: aload_1
     111: invokevirtual #54                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
     114: aload_0
     115: aload_0
     116: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
     119: aload_3
     120: invokevirtual #55                 // Method resolveHostName:(Ljava/net/ServerSocket;Ljava/net/InetAddress;)Ljava/lang/String;
     123: aload_0
     124: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
     127: invokevirtual #56                 // Method java/net/ServerSocket.getLocalPort:()I
     130: aload_1
     131: invokevirtual #57                 // Method java/net/URI.getPath:()Ljava/lang/String;
     134: aload_1
     135: invokevirtual #58                 // Method java/net/URI.getQuery:()Ljava/lang/String;
     138: aload_1
     139: invokevirtual #59                 // Method java/net/URI.getFragment:()Ljava/lang/String;
     142: invokespecial #60                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     145: invokevirtual #61                 // Method setConnectURI:(Ljava/net/URI;)V
     148: goto          206
     151: astore        4
     153: aload_0
     154: new           #52                 // class java/net/URI
     157: dup
     158: aload_1
     159: invokevirtual #53                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     162: aload_1
     163: invokevirtual #54                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
     166: aload_3
     167: invokevirtual #63                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     170: aload_0
     171: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
     174: invokevirtual #56                 // Method java/net/ServerSocket.getLocalPort:()I
     177: aload_1
     178: invokevirtual #57                 // Method java/net/URI.getPath:()Ljava/lang/String;
     181: aload_1
     182: invokevirtual #58                 // Method java/net/URI.getQuery:()Ljava/lang/String;
     185: aload_1
     186: invokevirtual #59                 // Method java/net/URI.getFragment:()Ljava/lang/String;
     189: invokespecial #60                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     192: invokevirtual #61                 // Method setConnectURI:(Ljava/net/URI;)V
     195: goto          206
     198: astore        5
     200: aload         5
     202: invokestatic  #64                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Exception;)Ljava/io/IOException;
     205: athrow
     206: return
    Exception table:
       from    to  target type
          33    61    64   Class java/io/IOException
         101   148   151   Class java/net/URISyntaxException
         153   195   198   Class java/net/URISyntaxException

  private void configureServerSocket(java.net.ServerSocket) throws java.net.SocketException;
    Code:
       0: aload_1
       1: sipush        2000
       4: invokevirtual #65                 // Method java/net/ServerSocket.setSoTimeout:(I)V
       7: aload_0
       8: getfield      #66                 // Field transportOptions:Ljava/util/Map;
      11: ifnull        87
      14: aload_1
      15: instanceof    #67                 // class javax/net/ssl/SSLServerSocket
      18: ifeq          78
      21: aload_0
      22: getfield      #66                 // Field transportOptions:Ljava/util/Map;
      25: ldc           #68                 // String enabledCipherSuites
      27: invokeinterface #69,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      32: ifeq          78
      35: aload_0
      36: getfield      #66                 // Field transportOptions:Ljava/util/Map;
      39: ldc           #68                 // String enabledCipherSuites
      41: invokeinterface #70,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: astore_2
      47: aload_1
      48: ldc           #68                 // String enabledCipherSuites
      50: aload_2
      51: invokestatic  #71                 // Method org/apache/activemq/util/IntrospectionSupport.setProperty:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z
      54: ifne          78
      57: new           #72                 // class java/net/SocketException
      60: dup
      61: ldc           #73                 // String Invalid transport options {enabledCipherSuites=%s}
      63: iconst_1
      64: anewarray     #74                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_2
      70: aastore
      71: invokestatic  #75                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      74: invokespecial #76                 // Method java/net/SocketException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_1
      79: aload_0
      80: getfield      #66                 // Field transportOptions:Ljava/util/Map;
      83: invokestatic  #77                 // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;)Z
      86: pop
      87: return

  public org.apache.activemq.wireformat.WireFormatFactory getWireFormatFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wireFormatFactory:Lorg/apache/activemq/wireformat/WireFormatFactory;
       4: areturn

  public void setWireFormatFactory(org.apache.activemq.wireformat.WireFormatFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field wireFormatFactory:Lorg/apache/activemq/wireformat/WireFormatFactory;
       5: return

  public void setBrokerInfo(org.apache.activemq.command.BrokerInfo);
    Code:
       0: return

  public long getMaxInactivityDuration();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxInactivityDuration:J
       4: lreturn

  public void setMaxInactivityDuration(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field maxInactivityDuration:J
       5: return

  public long getMaxInactivityDurationInitalDelay();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxInactivityDurationInitalDelay:J
       4: lreturn

  public void setMaxInactivityDurationInitalDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field maxInactivityDurationInitalDelay:J
       5: return

  public int getMinmumWireFormatVersion();
    Code:
       0: aload_0
       1: getfield      #78                 // Field minmumWireFormatVersion:I
       4: ireturn

  public void setMinmumWireFormatVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #78                 // Field minmumWireFormatVersion:I
       5: return

  public boolean isTrace();
    Code:
       0: aload_0
       1: getfield      #15                 // Field trace:Z
       4: ireturn

  public void setTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field trace:Z
       5: return

  public java.lang.String getLogWriterName();
    Code:
       0: aload_0
       1: getfield      #21                 // Field logWriterName:Ljava/lang/String;
       4: areturn

  public void setLogWriterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field logWriterName:Ljava/lang/String;
       5: return

  public boolean isDynamicManagement();
    Code:
       0: aload_0
       1: getfield      #22                 // Field dynamicManagement:Z
       4: ireturn

  public void setDynamicManagement(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field dynamicManagement:Z
       5: return

  public boolean isStartLogging();
    Code:
       0: aload_0
       1: getfield      #23                 // Field startLogging:Z
       4: ireturn

  public void setStartLogging(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field startLogging:Z
       5: return

  public int getBacklog();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backlog:I
       4: ireturn

  public void setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field backlog:I
       5: return

  public boolean isUseQueueForAccept();
    Code:
       0: aload_0
       1: getfield      #14                 // Field useQueueForAccept:Z
       4: ireturn

  public void setUseQueueForAccept(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field useQueueForAccept:Z
       5: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method isStopped:()Z
       4: ifne          116
       7: aconst_null
       8: astore_1
       9: aload_0
      10: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
      13: invokevirtual #80                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;
      16: astore_1
      17: aload_1
      18: ifnull        67
      21: aload_0
      22: invokevirtual #79                 // Method isStopped:()Z
      25: ifne          35
      28: aload_0
      29: invokevirtual #81                 // Method getAcceptListener:()Lorg/apache/activemq/transport/TransportAcceptListener;
      32: ifnonnull     42
      35: aload_1
      36: invokevirtual #82                 // Method java/net/Socket.close:()V
      39: goto          67
      42: aload_0
      43: getfield      #14                 // Field useQueueForAccept:Z
      46: ifeq          62
      49: aload_0
      50: getfield      #26                 // Field socketQueue:Ljava/util/concurrent/BlockingQueue;
      53: aload_1
      54: invokeinterface #83,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.put:(Ljava/lang/Object;)V
      59: goto          67
      62: aload_0
      63: aload_1
      64: invokevirtual #84                 // Method handleSocket:(Ljava/net/Socket;)V
      67: goto          113
      70: astore_2
      71: goto          113
      74: astore_2
      75: aload_0
      76: invokevirtual #87                 // Method isStopping:()Z
      79: ifne          90
      82: aload_0
      83: aload_2
      84: invokevirtual #1                  // Method onAcceptError:(Ljava/lang/Exception;)V
      87: goto          113
      90: aload_0
      91: invokevirtual #79                 // Method isStopped:()Z
      94: ifne          113
      97: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     100: ldc           #88                 // String run()
     102: aload_2
     103: invokeinterface #89,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     108: aload_0
     109: aload_2
     110: invokevirtual #1                  // Method onAcceptError:(Ljava/lang/Exception;)V
     113: goto          0
     116: return
    Exception table:
       from    to  target type
           9    67    70   Class java/net/SocketTimeoutException
           9    67    74   Class java/lang/Exception

  protected org.apache.activemq.transport.Transport createTransport(java.net.Socket, org.apache.activemq.wireformat.WireFormat) throws java.io.IOException;
    Code:
       0: new           #90                 // class org/apache/activemq/transport/tcp/TcpTransport
       3: dup
       4: aload_2
       5: aload_1
       6: invokespecial #91                 // Method org/apache/activemq/transport/tcp/TcpTransport."<init>":(Lorg/apache/activemq/wireformat/WireFormat;Ljava/net/Socket;)V
       9: areturn

  public java.lang.String toString();
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #92                 // String
       9: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #34                 // Method getBindLocation:()Ljava/net/URI;
      16: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  protected java.lang.String resolveHostName(java.net.ServerSocket, java.net.InetAddress) throws java.net.UnknownHostException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokevirtual #93                 // Method java/net/ServerSocket.isBound:()Z
       6: ifeq          37
       9: aload_1
      10: invokevirtual #94                 // Method java/net/ServerSocket.getInetAddress:()Ljava/net/InetAddress;
      13: invokevirtual #95                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
      16: ifeq          26
      19: invokestatic  #96                 // Method org/apache/activemq/util/InetAddressUtil.getLocalHostName:()Ljava/lang/String;
      22: astore_3
      23: goto          42
      26: aload_1
      27: invokevirtual #94                 // Method java/net/ServerSocket.getInetAddress:()Ljava/net/InetAddress;
      30: invokevirtual #97                 // Method java/net/InetAddress.getCanonicalHostName:()Ljava/lang/String;
      33: astore_3
      34: goto          42
      37: aload_2
      38: invokevirtual #97                 // Method java/net/InetAddress.getCanonicalHostName:()Ljava/lang/String;
      41: astore_3
      42: aload_3
      43: areturn

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field useQueueForAccept:Z
       4: ifeq          79
       7: new           #98                 // class org/apache/activemq/transport/tcp/TcpTransportServer$1
      10: dup
      11: aload_0
      12: invokespecial #99                 // Method org/apache/activemq/transport/tcp/TcpTransportServer$1."<init>":(Lorg/apache/activemq/transport/tcp/TcpTransportServer;)V
      15: astore_1
      16: aload_0
      17: new           #100                // class java/lang/Thread
      20: dup
      21: aconst_null
      22: aload_1
      23: new           #44                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #101                // String ActiveMQ Transport Server Thread Handler:
      32: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #102                // Method toString:()Ljava/lang/String;
      39: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: aload_0
      46: invokevirtual #103                // Method getStackSize:()J
      49: invokespecial #104                // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
      52: putfield      #105                // Field socketHandlerThread:Ljava/lang/Thread;
      55: aload_0
      56: getfield      #105                // Field socketHandlerThread:Ljava/lang/Thread;
      59: iconst_1
      60: invokevirtual #106                // Method java/lang/Thread.setDaemon:(Z)V
      63: aload_0
      64: getfield      #105                // Field socketHandlerThread:Ljava/lang/Thread;
      67: bipush        8
      69: invokevirtual #107                // Method java/lang/Thread.setPriority:(I)V
      72: aload_0
      73: getfield      #105                // Field socketHandlerThread:Ljava/lang/Thread;
      76: invokevirtual #108                // Method java/lang/Thread.start:()V
      79: aload_0
      80: invokespecial #109                // Method org/apache/activemq/transport/TransportServerThreadSupport.doStart:()V
      83: return

  protected void doStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
       4: ifnull        19
       7: aload_0
       8: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
      11: invokevirtual #110                // Method java/net/ServerSocket.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
      19: aload_0
      20: aload_1
      21: invokespecial #111                // Method org/apache/activemq/transport/TransportServerThreadSupport.doStop:(Lorg/apache/activemq/util/ServiceStopper;)V
      24: return

  public java.net.InetSocketAddress getSocketAddress();
    Code:
       0: aload_0
       1: getfield      #41                 // Field serverSocket:Ljava/net/ServerSocket;
       4: invokevirtual #112                // Method java/net/ServerSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
       7: checkcast     #113                // class java/net/InetSocketAddress
      10: areturn

  protected final void handleSocket(java.net.Socket);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #31                 // Field currentTransportCount:Ljava/util/concurrent/atomic/AtomicInteger;
       6: invokevirtual #114                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       9: aload_0
      10: getfield      #28                 // Field maximumConnections:I
      13: if_icmplt     26
      16: new           #115                // class org/apache/activemq/transport/tcp/ExceededMaximumConnectionsException
      19: dup
      20: ldc           #116                // String Exceeded the maximum number of allowed client connections. See the \'maximumConnections\' property on the TCP transport configuration URI in the ActiveMQ configuration file (e.g., activemq.xml)
      22: invokespecial #117                // Method org/apache/activemq/transport/tcp/ExceededMaximumConnectionsException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #118                // class java/util/HashMap
      29: dup
      30: invokespecial #119                // Method java/util/HashMap."<init>":()V
      33: astore_3
      34: aload_3
      35: ldc           #120                // String maxInactivityDuration
      37: aload_0
      38: getfield      #10                 // Field maxInactivityDuration:J
      41: invokestatic  #121                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      44: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_3
      49: ldc           #123                // String maxInactivityDurationInitalDelay
      51: aload_0
      52: getfield      #13                 // Field maxInactivityDurationInitalDelay:J
      55: invokestatic  #121                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      58: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload_3
      63: ldc           #124                // String minmumWireFormatVersion
      65: aload_0
      66: getfield      #78                 // Field minmumWireFormatVersion:I
      69: invokestatic  #125                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      72: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload_3
      77: ldc           #126                // String trace
      79: aload_0
      80: getfield      #15                 // Field trace:Z
      83: invokestatic  #127                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      86: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: aload_3
      91: ldc           #128                // String soTimeout
      93: aload_0
      94: getfield      #16                 // Field soTimeout:I
      97: invokestatic  #125                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     100: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_3
     105: ldc           #129                // String socketBufferSize
     107: aload_0
     108: getfield      #18                 // Field socketBufferSize:I
     111: invokestatic  #125                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     114: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: aload_3
     119: ldc           #130                // String connectionTimeout
     121: aload_0
     122: getfield      #19                 // Field connectionTimeout:I
     125: invokestatic  #125                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     128: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: aload_3
     133: ldc           #131                // String logWriterName
     135: aload_0
     136: getfield      #21                 // Field logWriterName:Ljava/lang/String;
     139: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     142: pop
     143: aload_3
     144: ldc           #132                // String dynamicManagement
     146: aload_0
     147: getfield      #22                 // Field dynamicManagement:Z
     150: invokestatic  #127                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     153: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: aload_3
     158: ldc           #133                // String startLogging
     160: aload_0
     161: getfield      #23                 // Field startLogging:Z
     164: invokestatic  #127                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     167: invokevirtual #122                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: aload_3
     172: aload_0
     173: getfield      #66                 // Field transportOptions:Ljava/util/Map;
     176: invokevirtual #134                // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
     179: aload_0
     180: getfield      #7                  // Field wireFormatFactory:Lorg/apache/activemq/wireformat/WireFormatFactory;
     183: invokeinterface #135,  1          // InterfaceMethod org/apache/activemq/wireformat/WireFormatFactory.createWireFormat:()Lorg/apache/activemq/wireformat/WireFormat;
     188: astore        4
     190: aload_0
     191: aload_1
     192: aload         4
     194: invokevirtual #136                // Method createTransport:(Ljava/net/Socket;Lorg/apache/activemq/wireformat/WireFormat;)Lorg/apache/activemq/transport/Transport;
     197: astore        5
     199: iconst_0
     200: istore_2
     201: aload         5
     203: instanceof    #137                // class org/apache/activemq/util/ServiceSupport
     206: ifeq          218
     209: aload         5
     211: checkcast     #137                // class org/apache/activemq/util/ServiceSupport
     214: aload_0
     215: invokevirtual #138                // Method org/apache/activemq/util/ServiceSupport.addServiceListener:(Lorg/apache/activemq/util/ServiceListener;)V
     218: aload_0
     219: getfield      #32                 // Field transportFactory:Lorg/apache/activemq/transport/tcp/TcpTransportFactory;
     222: aload         5
     224: aload         4
     226: aload_3
     227: invokevirtual #139                // Method org/apache/activemq/transport/tcp/TcpTransportFactory.serverConfigure:(Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/wireformat/WireFormat;Ljava/util/HashMap;)Lorg/apache/activemq/transport/Transport;
     230: astore        6
     232: aload_0
     233: invokevirtual #81                 // Method getAcceptListener:()Lorg/apache/activemq/transport/TransportAcceptListener;
     236: aload         6
     238: invokeinterface #140,  2          // InterfaceMethod org/apache/activemq/transport/TransportAcceptListener.onAccept:(Lorg/apache/activemq/transport/Transport;)V
     243: aload_0
     244: getfield      #31                 // Field currentTransportCount:Ljava/util/concurrent/atomic/AtomicInteger;
     247: invokevirtual #141                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     250: pop
     251: goto          310
     254: astore_3
     255: goto          310
     258: astore_3
     259: iload_2
     260: ifeq          272
     263: aload_1
     264: invokevirtual #82                 // Method java/net/Socket.close:()V
     267: goto          272
     270: astore        4
     272: aload_0
     273: invokevirtual #87                 // Method isStopping:()Z
     276: ifne          287
     279: aload_0
     280: aload_3
     281: invokevirtual #1                  // Method onAcceptError:(Ljava/lang/Exception;)V
     284: goto          310
     287: aload_0
     288: invokevirtual #79                 // Method isStopped:()Z
     291: ifne          310
     294: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     297: ldc           #88                 // String run()
     299: aload_3
     300: invokeinterface #89,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     305: aload_0
     306: aload_3
     307: invokevirtual #1                  // Method onAcceptError:(Ljava/lang/Exception;)V
     310: return
    Exception table:
       from    to  target type
           2   251   254   Class java/net/SocketTimeoutException
           2   251   258   Class java/lang/Exception
         263   267   270   Class java/lang/Exception

  public int getSoTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field soTimeout:I
       4: ireturn

  public void setSoTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field soTimeout:I
       5: return

  public int getSocketBufferSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferSize:I
       4: ireturn

  public void setSocketBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field socketBufferSize:I
       5: return

  public int getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #19                 // Field connectionTimeout:I
       4: ireturn

  public void setConnectionTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field connectionTimeout:I
       5: return

  public int getMaximumConnections();
    Code:
       0: aload_0
       1: getfield      #28                 // Field maximumConnections:I
       4: ireturn

  public void setMaximumConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field maximumConnections:I
       5: return

  public void started(org.apache.activemq.Service);
    Code:
       0: return

  public void stopped(org.apache.activemq.Service);
    Code:
       0: aload_0
       1: getfield      #31                 // Field currentTransportCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #142                // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: return

  public boolean isSslServer();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAllowLinkStealing();
    Code:
       0: aload_0
       1: getfield      #143                // Field allowLinkStealing:Z
       4: ireturn

  public void setAllowLinkStealing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #143                // Field allowLinkStealing:Z
       5: return

  static void access$000(org.apache.activemq.transport.tcp.TcpTransportServer, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method onAcceptError:(Ljava/lang/Exception;)V
       5: return

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static void access$200(org.apache.activemq.transport.tcp.TcpTransportServer, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method onAcceptError:(Ljava/lang/Exception;)V
       5: return

  static void access$300(org.apache.activemq.transport.tcp.TcpTransportServer, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method onAcceptError:(Ljava/lang/Exception;)V
       5: return

  static {};
    Code:
       0: ldc_w         #144                // class org/apache/activemq/transport/tcp/TcpTransportServer
       3: invokestatic  #145                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
