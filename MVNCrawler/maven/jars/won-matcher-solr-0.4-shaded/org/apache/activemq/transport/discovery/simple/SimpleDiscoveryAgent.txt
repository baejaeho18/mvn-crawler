Compiled from "SimpleDiscoveryAgent.java"
public class org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent implements org.apache.activemq.transport.discovery.DiscoveryAgent {
  private static final org.slf4j.Logger LOG;

  private long initialReconnectDelay;

  private long maxReconnectDelay;

  private long backOffMultiplier;

  private boolean useExponentialBackOff;

  private int maxReconnectAttempts;

  private final java.lang.Object sleepMutex;

  private long minConnectTime;

  private org.apache.activemq.transport.discovery.DiscoveryListener listener;

  private java.lang.String[] services;

  private final java.util.concurrent.atomic.AtomicBoolean running;

  private org.apache.activemq.thread.TaskRunnerFactory taskRunner;

  public org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #12                 // long 1000l
       8: putfield      #10                 // Field initialReconnectDelay:J
      11: aload_0
      12: ldc2_w        #14                 // long 30000l
      15: putfield      #2                  // Field maxReconnectDelay:J
      18: aload_0
      19: ldc2_w        #16                 // long 2l
      22: putfield      #3                  // Field backOffMultiplier:J
      25: aload_0
      26: iconst_1
      27: putfield      #4                  // Field useExponentialBackOff:Z
      30: aload_0
      31: new           #18                 // class java/lang/Object
      34: dup
      35: invokespecial #11                 // Method java/lang/Object."<init>":()V
      38: putfield      #6                  // Field sleepMutex:Ljava/lang/Object;
      41: aload_0
      42: ldc2_w        #19                 // long 5000l
      45: putfield      #9                  // Field minConnectTime:J
      48: aload_0
      49: iconst_0
      50: anewarray     #21                 // class java/lang/String
      53: putfield      #22                 // Field services:[Ljava/lang/String;
      56: aload_0
      57: new           #23                 // class java/util/concurrent/atomic/AtomicBoolean
      60: dup
      61: iconst_0
      62: invokespecial #24                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      65: putfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
      68: return

  public void setDiscoveryListener(org.apache.activemq.transport.discovery.DiscoveryListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
       5: return

  public void registerService(java.lang.String) throws java.io.IOException;
    Code:
       0: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #25                 // class org/apache/activemq/thread/TaskRunnerFactory
       4: dup
       5: invokespecial #26                 // Method org/apache/activemq/thread/TaskRunnerFactory."<init>":()V
       8: putfield      #27                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunnerFactory;
      11: aload_0
      12: getfield      #27                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunnerFactory;
      15: invokevirtual #28                 // Method org/apache/activemq/thread/TaskRunnerFactory.init:()V
      18: aload_0
      19: getfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: iconst_1
      23: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      26: iconst_0
      27: istore_1
      28: iload_1
      29: aload_0
      30: getfield      #22                 // Field services:[Ljava/lang/String;
      33: arraylength
      34: if_icmpge     66
      37: aload_0
      38: getfield      #1                  // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
      41: new           #30                 // class org/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$SimpleDiscoveryEvent
      44: dup
      45: aload_0
      46: aload_0
      47: getfield      #22                 // Field services:[Ljava/lang/String;
      50: iload_1
      51: aaload
      52: invokespecial #31                 // Method org/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$SimpleDiscoveryEvent."<init>":(Lorg/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent;Ljava/lang/String;)V
      55: invokeinterface #32,  2           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryListener.onServiceAdd:(Lorg/apache/activemq/command/DiscoveryEvent;)V
      60: iinc          1, 1
      63: goto          28
      66: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #27                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunnerFactory;
      12: invokevirtual #33                 // Method org/apache/activemq/thread/TaskRunnerFactory.shutdown:()V
      15: aload_0
      16: getfield      #6                  // Field sleepMutex:Ljava/lang/Object;
      19: dup
      20: astore_1
      21: monitorenter
      22: aload_0
      23: getfield      #6                  // Field sleepMutex:Ljava/lang/Object;
      26: invokevirtual #34                 // Method java/lang/Object.notifyAll:()V
      29: aload_1
      30: monitorexit
      31: goto          39
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
      39: return
    Exception table:
       from    to  target type
          22    31    34   any
          34    37    34   any

  public java.lang.String[] getServices();
    Code:
       0: aload_0
       1: getfield      #22                 // Field services:[Ljava/lang/String;
       4: areturn

  public void setServices(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #35                 // String ,
       4: invokevirtual #36                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       7: putfield      #22                 // Field services:[Ljava/lang/String;
      10: return

  public void setServices(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field services:[Ljava/lang/String;
       5: return

  public void setServices(java.net.URI[]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: anewarray     #21                 // class java/lang/String
       6: putfield      #22                 // Field services:[Ljava/lang/String;
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_1
      13: arraylength
      14: if_icmpge     35
      17: aload_0
      18: getfield      #22                 // Field services:[Ljava/lang/String;
      21: iload_2
      22: aload_1
      23: iload_2
      24: aaload
      25: invokevirtual #37                 // Method java/net/URI.toString:()Ljava/lang/String;
      28: aastore
      29: iinc          2, 1
      32: goto          11
      35: return

  public void serviceFailed(org.apache.activemq.command.DiscoveryEvent) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #30                 // class org/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$SimpleDiscoveryEvent
       4: astore_2
       5: aload_2
       6: invokestatic  #38                 // Method org/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$SimpleDiscoveryEvent.access$100:(Lorg/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$SimpleDiscoveryEvent;)Ljava/util/concurrent/atomic/AtomicBoolean;
       9: iconst_0
      10: iconst_1
      11: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      14: ifeq          45
      17: aload_0
      18: getfield      #1                  // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
      21: aload_2
      22: invokeinterface #40,  2           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryListener.onServiceRemove:(Lorg/apache/activemq/command/DiscoveryEvent;)V
      27: aload_0
      28: getfield      #27                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunnerFactory;
      31: new           #41                 // class org/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$1
      34: dup
      35: aload_0
      36: aload_2
      37: invokespecial #42                 // Method org/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$1."<init>":(Lorg/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent;Lorg/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent$SimpleDiscoveryEvent;)V
      40: ldc           #43                 // String Simple Discovery Agent
      42: invokevirtual #44                 // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;Ljava/lang/String;)V
      45: return

  public long getBackOffMultiplier();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backOffMultiplier:J
       4: lreturn

  public void setBackOffMultiplier(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #3                  // Field backOffMultiplier:J
       5: return

  public long getInitialReconnectDelay();
    Code:
       0: aload_0
       1: getfield      #10                 // Field initialReconnectDelay:J
       4: lreturn

  public void setInitialReconnectDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field initialReconnectDelay:J
       5: return

  public int getMaxReconnectAttempts();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxReconnectAttempts:I
       4: ireturn

  public void setMaxReconnectAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field maxReconnectAttempts:I
       5: return

  public long getMaxReconnectDelay();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxReconnectDelay:J
       4: lreturn

  public void setMaxReconnectDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field maxReconnectDelay:J
       5: return

  public long getMinConnectTime();
    Code:
       0: aload_0
       1: getfield      #9                  // Field minConnectTime:J
       4: lreturn

  public void setMinConnectTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field minConnectTime:J
       5: return

  public boolean isUseExponentialBackOff();
    Code:
       0: aload_0
       1: getfield      #4                  // Field useExponentialBackOff:Z
       4: ireturn

  public void setUseExponentialBackOff(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field useExponentialBackOff:Z
       5: return

  static long access$000(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #10                 // Field initialReconnectDelay:J
       4: lreturn

  static long access$300(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #9                  // Field minConnectTime:J
       4: lreturn

  static org.slf4j.Logger access$400();
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static int access$600(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxReconnectAttempts:I
       4: ireturn

  static java.lang.Object access$700(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sleepMutex:Ljava/lang/Object;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$800(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static boolean access$1000(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field useExponentialBackOff:Z
       4: ireturn

  static long access$1100(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backOffMultiplier:J
       4: lreturn

  static long access$1200(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxReconnectDelay:J
       4: lreturn

  static org.apache.activemq.transport.discovery.DiscoveryListener access$1300(org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
       4: areturn

  static {};
    Code:
       0: ldc_w         #45                 // class org/apache/activemq/transport/discovery/simple/SimpleDiscoveryAgent
       3: invokestatic  #46                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
