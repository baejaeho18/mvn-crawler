Compiled from "MulticastTransport.java"
public class org.apache.activemq.transport.multicast.MulticastTransport extends org.apache.activemq.transport.udp.UdpTransport {
  private static final org.slf4j.Logger LOG;

  private static final int DEFAULT_IDLE_TIME;

  private java.net.MulticastSocket socket;

  private java.net.InetAddress mcastAddress;

  private int mcastPort;

  private int timeToLive;

  private boolean loopBackMode;

  private long keepAliveInterval;

  public org.apache.activemq.transport.multicast.MulticastTransport(org.apache.activemq.openwire.OpenWireFormat, java.net.URI) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/activemq/transport/udp/UdpTransport."<init>":(Lorg/apache/activemq/openwire/OpenWireFormat;Ljava/net/URI;)V
       6: aload_0
       7: iconst_1
       8: putfield      #2                  // Field timeToLive:I
      11: aload_0
      12: ldc2_w        #3                  // long 5000l
      15: putfield      #5                  // Field keepAliveInterval:J
      18: return

  public long getKeepAliveInterval();
    Code:
       0: aload_0
       1: getfield      #5                  // Field keepAliveInterval:J
       4: lreturn

  public void setKeepAliveInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field keepAliveInterval:J
       5: return

  public boolean isLoopBackMode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field loopBackMode:Z
       4: ireturn

  public void setLoopBackMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field loopBackMode:Z
       5: return

  public int getTimeToLive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field timeToLive:I
       4: ireturn

  public void setTimeToLive(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field timeToLive:I
       5: return

  protected java.lang.String getProtocolName();
    Code:
       0: ldc           #7                  // String Multicast
       2: areturn

  protected java.lang.String getProtocolUriScheme();
    Code:
       0: ldc           #8                  // String multicast://
       2: areturn

  protected void bind(java.net.DatagramSocket, java.net.SocketAddress) throws java.net.SocketException;
    Code:
       0: return

  protected void doStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/apache/activemq/transport/udp/UdpTransport.doStop:(Lorg/apache/activemq/util/ServiceStopper;)V
       5: aload_0
       6: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
       9: ifnull        40
      12: aload_0
      13: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
      16: aload_0
      17: invokevirtual #11                 // Method getMulticastAddress:()Ljava/net/InetAddress;
      20: invokevirtual #12                 // Method java/net/MulticastSocket.leaveGroup:(Ljava/net/InetAddress;)V
      23: goto          33
      26: astore_2
      27: aload_1
      28: aload_0
      29: aload_2
      30: invokevirtual #14                 // Method org/apache/activemq/util/ServiceStopper.onException:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      33: aload_0
      34: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
      37: invokevirtual #15                 // Method java/net/MulticastSocket.close:()V
      40: return
    Exception table:
       from    to  target type
          12    23    26   Class java/io/IOException

  protected org.apache.activemq.transport.udp.CommandChannel createCommandChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #16                 // class java/net/MulticastSocket
       4: dup
       5: aload_0
       6: getfield      #17                 // Field mcastPort:I
       9: invokespecial #18                 // Method java/net/MulticastSocket."<init>":(I)V
      12: putfield      #10                 // Field socket:Ljava/net/MulticastSocket;
      15: aload_0
      16: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
      19: aload_0
      20: getfield      #6                  // Field loopBackMode:Z
      23: invokevirtual #19                 // Method java/net/MulticastSocket.setLoopbackMode:(Z)V
      26: aload_0
      27: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
      30: aload_0
      31: getfield      #2                  // Field timeToLive:I
      34: invokevirtual #20                 // Method java/net/MulticastSocket.setTimeToLive:(I)V
      37: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
      40: new           #22                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #24                 // String Joining multicast address:
      49: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #11                 // Method getMulticastAddress:()Ljava/net/InetAddress;
      56: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #28,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      67: aload_0
      68: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
      71: aload_0
      72: invokevirtual #11                 // Method getMulticastAddress:()Ljava/net/InetAddress;
      75: invokevirtual #29                 // Method java/net/MulticastSocket.joinGroup:(Ljava/net/InetAddress;)V
      78: aload_0
      79: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
      82: aload_0
      83: getfield      #5                  // Field keepAliveInterval:J
      86: l2i
      87: invokevirtual #30                 // Method java/net/MulticastSocket.setSoTimeout:(I)V
      90: new           #31                 // class org/apache/activemq/transport/udp/CommandDatagramSocket
      93: dup
      94: aload_0
      95: aload_0
      96: invokevirtual #32                 // Method getWireFormat:()Lorg/apache/activemq/openwire/OpenWireFormat;
      99: aload_0
     100: invokevirtual #33                 // Method getDatagramSize:()I
     103: aload_0
     104: invokevirtual #34                 // Method getTargetAddress:()Ljava/net/SocketAddress;
     107: aload_0
     108: invokevirtual #35                 // Method createDatagramHeaderMarshaller:()Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;
     111: aload_0
     112: invokevirtual #36                 // Method getSocket:()Ljava/net/MulticastSocket;
     115: invokespecial #37                 // Method org/apache/activemq/transport/udp/CommandDatagramSocket."<init>":(Lorg/apache/activemq/transport/udp/UdpTransport;Lorg/apache/activemq/openwire/OpenWireFormat;ILjava/net/SocketAddress;Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;Ljava/net/DatagramSocket;)V
     118: areturn

  protected java.net.InetAddress getMulticastAddress();
    Code:
       0: aload_0
       1: getfield      #38                 // Field mcastAddress:Ljava/net/InetAddress;
       4: areturn

  protected java.net.MulticastSocket getSocket();
    Code:
       0: aload_0
       1: getfield      #10                 // Field socket:Ljava/net/MulticastSocket;
       4: areturn

  protected void setSocket(java.net.MulticastSocket);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field socket:Ljava/net/MulticastSocket;
       5: return

  protected java.net.InetSocketAddress createAddress(java.net.URI) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method java/net/URI.getHost:()Ljava/lang/String;
       5: invokestatic  #40                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       8: putfield      #38                 // Field mcastAddress:Ljava/net/InetAddress;
      11: aload_0
      12: aload_1
      13: invokevirtual #41                 // Method java/net/URI.getPort:()I
      16: putfield      #17                 // Field mcastPort:I
      19: new           #42                 // class java/net/InetSocketAddress
      22: dup
      23: aload_0
      24: getfield      #38                 // Field mcastAddress:Ljava/net/InetAddress;
      27: aload_0
      28: getfield      #17                 // Field mcastPort:I
      31: invokespecial #43                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      34: areturn

  protected org.apache.activemq.transport.udp.DatagramHeaderMarshaller createDatagramHeaderMarshaller();
    Code:
       0: new           #44                 // class org/apache/activemq/transport/multicast/MulticastDatagramHeaderMarshaller
       3: dup
       4: new           #22                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #45                 // String udp://dummyHostName:
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #46                 // Method getPort:()I
      20: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #48                 // Method org/apache/activemq/transport/multicast/MulticastDatagramHeaderMarshaller."<init>":(Ljava/lang/String;)V
      29: areturn

  static {};
    Code:
       0: ldc_w         #49                 // class org/apache/activemq/transport/multicast/MulticastTransport
       3: invokestatic  #50                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
