Compiled from "AmqpTransportFilter.java"
public class org.apache.activemq.transport.amqp.AmqpTransportFilter extends org.apache.activemq.transport.TransportFilter implements org.apache.activemq.transport.amqp.AmqpTransport {
  private static final org.slf4j.Logger LOG;

  static final org.slf4j.Logger TRACE_BYTES;

  static final org.slf4j.Logger TRACE_FRAMES;

  private org.apache.activemq.transport.amqp.IAmqpProtocolConverter protocolConverter;

  private org.apache.activemq.transport.amqp.AmqpWireFormat wireFormat;

  private boolean trace;

  private java.lang.String transformer;

  private final java.util.concurrent.locks.ReentrantLock lock;

  static final boolean $assertionsDisabled;

  public org.apache.activemq.transport.amqp.AmqpTransportFilter(org.apache.activemq.transport.Transport, org.apache.activemq.wireformat.WireFormat, org.apache.activemq.broker.BrokerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/transport/TransportFilter."<init>":(Lorg/apache/activemq/transport/Transport;)V
       5: aload_0
       6: ldc           #2                  // String native
       8: putfield      #3                  // Field transformer:Ljava/lang/String;
      11: aload_0
      12: new           #4                  // class java/util/concurrent/locks/ReentrantLock
      15: dup
      16: invokespecial #5                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      19: putfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      22: aload_0
      23: new           #7                  // class org/apache/activemq/transport/amqp/AMQPProtocolDiscriminator
      26: dup
      27: aload_0
      28: invokespecial #8                  // Method org/apache/activemq/transport/amqp/AMQPProtocolDiscriminator."<init>":(Lorg/apache/activemq/transport/amqp/AmqpTransport;)V
      31: putfield      #9                  // Field protocolConverter:Lorg/apache/activemq/transport/amqp/IAmqpProtocolConverter;
      34: aload_2
      35: instanceof    #10                 // class org/apache/activemq/transport/amqp/AmqpWireFormat
      38: ifeq          49
      41: aload_0
      42: aload_2
      43: checkcast     #10                 // class org/apache/activemq/transport/amqp/AmqpWireFormat
      46: putfield      #11                 // Field wireFormat:Lorg/apache/activemq/transport/amqp/AmqpWireFormat;
      49: return

  public void oneway(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #12                 // class org/apache/activemq/command/Command
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       9: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      12: aload_0
      13: getfield      #9                  // Field protocolConverter:Lorg/apache/activemq/transport/amqp/IAmqpProtocolConverter;
      16: aload_2
      17: invokeinterface #14,  2           // InterfaceMethod org/apache/activemq/transport/amqp/IAmqpProtocolConverter.onActiveMQCommand:(Lorg/apache/activemq/command/Command;)V
      22: aload_0
      23: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: goto          42
      32: astore_3
      33: aload_0
      34: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      37: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      40: aload_3
      41: athrow
      42: goto          51
      45: astore_2
      46: aload_2
      47: invokestatic  #17                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Exception;)Ljava/io/IOException;
      50: athrow
      51: return
    Exception table:
       from    to  target type
          12    22    32   any
          32    33    32   any
           0    42    45   Class java/lang/Exception

  public void onException(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #9                  // Field protocolConverter:Lorg/apache/activemq/transport/amqp/IAmqpProtocolConverter;
      11: aload_1
      12: invokeinterface #18,  2           // InterfaceMethod org/apache/activemq/transport/amqp/IAmqpProtocolConverter.onAMQPException:(Ljava/io/IOException;)V
      17: aload_0
      18: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      21: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      24: goto          37
      27: astore_2
      28: aload_0
      29: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      32: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      35: aload_2
      36: athrow
      37: return
    Exception table:
       from    to  target type
           7    17    27   any
          27    28    27   any

  public void sendToActiveMQ(java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/apache/activemq/transport/TransportFilter.onException:(Ljava/io/IOException;)V
       5: return

  public void onCommand(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #20                 // Field trace:Z
       4: ifeq          18
       7: getstatic     #21                 // Field TRACE_BYTES:Lorg/slf4j/Logger;
      10: ldc           #22                 // String Received: \n{}
      12: aload_1
      13: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      22: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      25: aload_0
      26: getfield      #9                  // Field protocolConverter:Lorg/apache/activemq/transport/amqp/IAmqpProtocolConverter;
      29: aload_1
      30: invokeinterface #24,  2           // InterfaceMethod org/apache/activemq/transport/amqp/IAmqpProtocolConverter.onAMQPData:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      39: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      42: goto          55
      45: astore_2
      46: aload_0
      47: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      50: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      53: aload_2
      54: athrow
      55: goto          76
      58: astore_2
      59: aload_0
      60: aload_2
      61: invokevirtual #26                 // Method handleException:(Ljava/io/IOException;)V
      64: goto          76
      67: astore_2
      68: aload_0
      69: aload_2
      70: invokestatic  #17                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Exception;)Ljava/io/IOException;
      73: invokevirtual #27                 // Method onException:(Ljava/io/IOException;)V
      76: return
    Exception table:
       from    to  target type
          25    35    45   any
          45    46    45   any
           0    55    58   Class java/io/IOException
           0    55    67   Class java/lang/Exception

  public void sendToActiveMQ(org.apache.activemq.command.Command);
    Code:
       0: getstatic     #28                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      10: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      13: ifne          24
      16: new           #30                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #31                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #32                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
      28: astore_2
      29: aload_2
      30: ifnull        40
      33: aload_2
      34: aload_1
      35: invokeinterface #33,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onCommand:(Ljava/lang/Object;)V
      40: return

  public void sendToAmqp(java.lang.Object) throws java.io.IOException;
    Code:
       0: getstatic     #28                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #6                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      10: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      13: ifne          24
      16: new           #30                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #31                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #20                 // Field trace:Z
      28: ifeq          42
      31: getstatic     #21                 // Field TRACE_BYTES:Lorg/slf4j/Logger;
      34: ldc           #34                 // String Sending: \n{}
      36: aload_1
      37: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      42: aload_0
      43: getfield      #35                 // Field next:Lorg/apache/activemq/transport/Transport;
      46: astore_2
      47: aload_2
      48: ifnull        58
      51: aload_2
      52: aload_1
      53: invokeinterface #36,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      58: return

  public java.security.cert.X509Certificate[] getPeerCertificates();
    Code:
       0: aload_0
       1: getfield      #35                 // Field next:Lorg/apache/activemq/transport/Transport;
       4: instanceof    #37                 // class org/apache/activemq/transport/tcp/SslTransport
       7: ifeq          44
      10: aload_0
      11: getfield      #35                 // Field next:Lorg/apache/activemq/transport/Transport;
      14: checkcast     #37                 // class org/apache/activemq/transport/tcp/SslTransport
      17: invokevirtual #38                 // Method org/apache/activemq/transport/tcp/SslTransport.getPeerCertificates:()[Ljava/security/cert/X509Certificate;
      20: astore_1
      21: aload_0
      22: getfield      #20                 // Field trace:Z
      25: ifeq          42
      28: aload_1
      29: ifnull        42
      32: getstatic     #39                 // Field LOG:Lorg/slf4j/Logger;
      35: ldc           #40                 // String Peer Identity has been verified\n
      37: invokeinterface #41,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      42: aload_1
      43: areturn
      44: aconst_null
      45: areturn

  public boolean isTrace();
    Code:
       0: aload_0
       1: getfield      #20                 // Field trace:Z
       4: ireturn

  public void setTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field trace:Z
       5: aload_0
       6: getfield      #9                  // Field protocolConverter:Lorg/apache/activemq/transport/amqp/IAmqpProtocolConverter;
       9: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/transport/amqp/IAmqpProtocolConverter.updateTracer:()V
      14: return

  public org.apache.activemq.transport.amqp.AmqpWireFormat getWireFormat();
    Code:
       0: aload_0
       1: getfield      #11                 // Field wireFormat:Lorg/apache/activemq/transport/amqp/AmqpWireFormat;
       4: areturn

  public void handleException(java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/apache/activemq/transport/TransportFilter.onException:(Ljava/io/IOException;)V
       5: return

  public java.lang.String getTransformer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transformer:Ljava/lang/String;
       4: areturn

  public void setTransformer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field transformer:Ljava/lang/String;
       5: return

  public org.apache.activemq.transport.amqp.IAmqpProtocolConverter getProtocolConverter();
    Code:
       0: aload_0
       1: getfield      #9                  // Field protocolConverter:Lorg/apache/activemq/transport/amqp/IAmqpProtocolConverter;
       4: areturn

  public void setProtocolConverter(org.apache.activemq.transport.amqp.IAmqpProtocolConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field protocolConverter:Lorg/apache/activemq/transport/amqp/IAmqpProtocolConverter;
       5: return

  static {};
    Code:
       0: ldc_w         #43                 // class org/apache/activemq/transport/amqp/AmqpTransportFilter
       3: invokevirtual #44                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #28                 // Field $assertionsDisabled:Z
      17: ldc_w         #43                 // class org/apache/activemq/transport/amqp/AmqpTransportFilter
      20: invokestatic  #45                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      23: putstatic     #39                 // Field LOG:Lorg/slf4j/Logger;
      26: new           #46                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc_w         #43                 // class org/apache/activemq/transport/amqp/AmqpTransportFilter
      36: invokevirtual #48                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      39: invokevirtual #49                 // Method java/lang/Package.getName:()Ljava/lang/String;
      42: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #51                 // String .BYTES
      47: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokestatic  #53                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      56: putstatic     #21                 // Field TRACE_BYTES:Lorg/slf4j/Logger;
      59: new           #46                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc_w         #43                 // class org/apache/activemq/transport/amqp/AmqpTransportFilter
      69: invokevirtual #48                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      72: invokevirtual #49                 // Method java/lang/Package.getName:()Ljava/lang/String;
      75: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #54                 // String .FRAMES
      80: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokestatic  #53                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      89: putstatic     #55                 // Field TRACE_FRAMES:Lorg/slf4j/Logger;
      92: return
}
