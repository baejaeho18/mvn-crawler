Compiled from "NIOOutputStream.java"
public class org.apache.activemq.transport.nio.NIOOutputStream extends java.io.OutputStream implements org.apache.activemq.transport.tcp.TimeStampStream {
  private static final int BUFFER_SIZE;

  private final java.nio.channels.WritableByteChannel out;

  private final byte[] buffer;

  private final java.nio.ByteBuffer byteBuffer;

  private int count;

  private boolean closed;

  private volatile long writeTimestamp;

  private javax.net.ssl.SSLEngine engine;

  public org.apache.activemq.transport.nio.NIOOutputStream(java.nio.channels.WritableByteChannel);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8196
       5: invokespecial #1                  // Method "<init>":(Ljava/nio/channels/WritableByteChannel;I)V
       8: return

  public org.apache.activemq.transport.nio.NIOOutputStream(java.nio.channels.WritableByteChannel, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: ldc2_w        #3                  // long -1l
       8: putfield      #5                  // Field writeTimestamp:J
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field out:Ljava/nio/channels/WritableByteChannel;
      16: iload_2
      17: ifgt          30
      20: new           #7                  // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #8                  // String Buffer size <= 0
      26: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: iload_2
      32: newarray       byte
      34: putfield      #10                 // Field buffer:[B
      37: aload_0
      38: aload_0
      39: getfield      #10                 // Field buffer:[B
      42: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      45: putfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      48: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method checkClosed:()V
       4: aload_0
       5: invokespecial #14                 // Method availableBufferToWrite:()I
       8: iconst_1
       9: if_icmpge     16
      12: aload_0
      13: invokevirtual #15                 // Method flush:()V
      16: aload_0
      17: getfield      #10                 // Field buffer:[B
      20: aload_0
      21: dup
      22: getfield      #16                 // Field count:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #16                 // Field count:I
      31: iload_1
      32: i2b
      33: bastore
      34: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method checkClosed:()V
       4: aload_0
       5: invokespecial #14                 // Method availableBufferToWrite:()I
       8: iload_3
       9: if_icmpge     16
      12: aload_0
      13: invokevirtual #15                 // Method flush:()V
      16: aload_0
      17: getfield      #10                 // Field buffer:[B
      20: arraylength
      21: iload_3
      22: if_icmplt     52
      25: aload_1
      26: iload_2
      27: aload_0
      28: getfield      #10                 // Field buffer:[B
      31: aload_0
      32: getfield      #16                 // Field count:I
      35: iload_3
      36: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_0
      40: dup
      41: getfield      #16                 // Field count:I
      44: iload_3
      45: iadd
      46: putfield      #16                 // Field count:I
      49: goto          62
      52: aload_0
      53: aload_1
      54: iload_2
      55: iload_3
      56: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      59: invokevirtual #19                 // Method write:(Ljava/nio/ByteBuffer;)V
      62: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field count:I
       4: ifle          48
       7: aload_0
       8: getfield      #6                  // Field out:Ljava/nio/channels/WritableByteChannel;
      11: ifnull        48
      14: aload_0
      15: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      18: iconst_0
      19: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      22: pop
      23: aload_0
      24: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      27: aload_0
      28: getfield      #16                 // Field count:I
      31: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      34: pop
      35: aload_0
      36: aload_0
      37: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      40: invokevirtual #19                 // Method write:(Ljava/nio/ByteBuffer;)V
      43: aload_0
      44: iconst_0
      45: putfield      #16                 // Field count:I
      48: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/io/OutputStream.close:()V
       4: aload_0
       5: getfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
       8: ifnull        18
      11: aload_0
      12: getfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
      15: invokevirtual #24                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      18: aload_0
      19: iconst_1
      20: putfield      #25                 // Field closed:Z
      23: return

  protected void checkClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field closed:Z
       4: ifeq          17
       7: new           #26                 // class java/io/EOFException
      10: dup
      11: ldc           #27                 // String Cannot write to the stream any more it has already been closed
      13: invokespecial #28                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private int availableBufferToWrite();
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffer:[B
       4: arraylength
       5: aload_0
       6: getfield      #16                 // Field count:I
       9: isub
      10: ireturn

  protected void write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: ifnull        46
       7: aload_0
       8: getfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
      11: invokevirtual #29                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
      14: invokeinterface #30,  1           // InterfaceMethod javax/net/ssl/SSLSession.getPacketBufferSize:()I
      19: invokestatic  #31                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      22: astore_2
      23: aload_2
      24: invokevirtual #32                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      27: pop
      28: aload_0
      29: getfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
      32: aload_1
      33: aload_2
      34: invokevirtual #33                 // Method javax/net/ssl/SSLEngine.wrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      37: pop
      38: aload_2
      39: invokevirtual #34                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      42: pop
      43: goto          48
      46: aload_1
      47: astore_2
      48: aload_2
      49: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      52: istore_3
      53: lconst_1
      54: lstore        4
      56: iconst_m1
      57: istore        6
      59: aload_0
      60: invokestatic  #36                 // Method java/lang/System.currentTimeMillis:()J
      63: putfield      #5                  // Field writeTimestamp:J
      66: iload_3
      67: ifle          179
      70: iload         6
      72: ifne          115
      75: lload         4
      77: invokestatic  #37                 // Method java/lang/Thread.sleep:(J)V
      80: lload         4
      82: ldc2_w        #38                 // long 2l
      85: lmul
      86: lstore        4
      88: lload         4
      90: ldc2_w        #40                 // long 1000l
      93: lcmp
      94: ifle          102
      97: ldc2_w        #40                 // long 1000l
     100: lstore        4
     102: goto          118
     105: astore        7
     107: new           #43                 // class java/io/InterruptedIOException
     110: dup
     111: invokespecial #44                 // Method java/io/InterruptedIOException."<init>":()V
     114: athrow
     115: lconst_1
     116: lstore        4
     118: aload_0
     119: getfield      #6                  // Field out:Ljava/nio/channels/WritableByteChannel;
     122: aload_2
     123: invokeinterface #45,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
     128: istore        6
     130: aload_0
     131: getfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
     134: ifnull        171
     137: aload_1
     138: invokevirtual #46                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     141: ifeq          171
     144: aload_2
     145: invokevirtual #46                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     148: ifne          171
     151: aload_2
     152: invokevirtual #32                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     155: pop
     156: aload_0
     157: getfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
     160: aload_1
     161: aload_2
     162: invokevirtual #33                 // Method javax/net/ssl/SSLEngine.wrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     165: pop
     166: aload_2
     167: invokevirtual #34                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     170: pop
     171: aload_2
     172: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
     175: istore_3
     176: goto          66
     179: aload_0
     180: ldc2_w        #3                  // long -1l
     183: putfield      #5                  // Field writeTimestamp:J
     186: goto          201
     189: astore        8
     191: aload_0
     192: ldc2_w        #3                  // long -1l
     195: putfield      #5                  // Field writeTimestamp:J
     198: aload         8
     200: athrow
     201: return
    Exception table:
       from    to  target type
          75   102   105   Class java/lang/InterruptedException
          59   179   189   any
         189   191   189   any

  public boolean isWriting();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeTimestamp:J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public long getWriteTimestamp();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeTimestamp:J
       4: lreturn

  public void setEngine(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field engine:Ljavax/net/ssl/SSLEngine;
       5: return
}
