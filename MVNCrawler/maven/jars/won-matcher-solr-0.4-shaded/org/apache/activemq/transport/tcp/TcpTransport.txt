Compiled from "TcpTransport.java"
public class org.apache.activemq.transport.tcp.TcpTransport extends org.apache.activemq.transport.TransportThreadSupport implements org.apache.activemq.transport.Transport,org.apache.activemq.Service,java.lang.Runnable {
  private static final org.slf4j.Logger LOG;

  protected final java.net.URI remoteLocation;

  protected final java.net.URI localLocation;

  protected final org.apache.activemq.wireformat.WireFormat wireFormat;

  protected int connectionTimeout;

  protected int soTimeout;

  protected int socketBufferSize;

  protected int ioBufferSize;

  protected boolean closeAsync;

  protected java.net.Socket socket;

  protected java.io.DataOutputStream dataOut;

  protected java.io.DataInputStream dataIn;

  protected org.apache.activemq.transport.tcp.TimeStampStream buffOut;

  protected int trafficClass;

  private boolean trafficClassSet;

  protected boolean diffServChosen;

  protected boolean typeOfServiceChosen;

  protected boolean trace;

  protected java.lang.String logWriterName;

  protected boolean dynamicManagement;

  protected boolean startLogging;

  protected int jmxPort;

  protected boolean useLocalHost;

  protected int minmumWireFormatVersion;

  protected javax.net.SocketFactory socketFactory;

  protected final java.util.concurrent.atomic.AtomicReference<java.util.concurrent.CountDownLatch> stoppedLatch;

  protected volatile int receiveCounter;

  private java.util.Map<java.lang.String, java.lang.Object> socketOptions;

  private int soLinger;

  private java.lang.Boolean keepAlive;

  private java.lang.Boolean tcpNoDelay;

  private java.lang.Thread runnerThread;

  public org.apache.activemq.transport.tcp.TcpTransport(org.apache.activemq.wireformat.WireFormat, javax.net.SocketFactory, java.net.URI, java.net.URI) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/activemq/transport/TransportThreadSupport."<init>":()V
       4: aload_0
       5: sipush        30000
       8: putfield      #3                  // Field connectionTimeout:I
      11: aload_0
      12: ldc           #4                  // int 65536
      14: putfield      #5                  // Field socketBufferSize:I
      17: aload_0
      18: sipush        8192
      21: putfield      #6                  // Field ioBufferSize:I
      24: aload_0
      25: iconst_1
      26: putfield      #7                  // Field closeAsync:Z
      29: aload_0
      30: aconst_null
      31: putfield      #8                  // Field buffOut:Lorg/apache/activemq/transport/tcp/TimeStampStream;
      34: aload_0
      35: iconst_0
      36: putfield      #9                  // Field trafficClass:I
      39: aload_0
      40: iconst_0
      41: putfield      #10                 // Field trafficClassSet:Z
      44: aload_0
      45: iconst_0
      46: putfield      #11                 // Field diffServChosen:Z
      49: aload_0
      50: iconst_0
      51: putfield      #12                 // Field typeOfServiceChosen:Z
      54: aload_0
      55: iconst_0
      56: putfield      #13                 // Field trace:Z
      59: aload_0
      60: getstatic     #14                 // Field org/apache/activemq/TransportLoggerSupport.defaultLogWriterName:Ljava/lang/String;
      63: putfield      #15                 // Field logWriterName:Ljava/lang/String;
      66: aload_0
      67: iconst_0
      68: putfield      #16                 // Field dynamicManagement:Z
      71: aload_0
      72: iconst_1
      73: putfield      #17                 // Field startLogging:Z
      76: aload_0
      77: sipush        1099
      80: putfield      #18                 // Field jmxPort:I
      83: aload_0
      84: iconst_0
      85: putfield      #19                 // Field useLocalHost:Z
      88: aload_0
      89: new           #20                 // class java/util/concurrent/atomic/AtomicReference
      92: dup
      93: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      96: putfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
      99: aload_0
     100: ldc           #23                 // int -2147483648
     102: putfield      #24                 // Field soLinger:I
     105: aload_0
     106: aload_1
     107: putfield      #25                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
     110: aload_0
     111: aload_2
     112: putfield      #26                 // Field socketFactory:Ljavax/net/SocketFactory;
     115: aload_0
     116: aload_2
     117: invokevirtual #27                 // Method javax/net/SocketFactory.createSocket:()Ljava/net/Socket;
     120: putfield      #28                 // Field socket:Ljava/net/Socket;
     123: goto          133
     126: astore        5
     128: aload_0
     129: aconst_null
     130: putfield      #28                 // Field socket:Ljava/net/Socket;
     133: aload_0
     134: aload_3
     135: putfield      #30                 // Field remoteLocation:Ljava/net/URI;
     138: aload_0
     139: aload         4
     141: putfield      #31                 // Field localLocation:Ljava/net/URI;
     144: aload_0
     145: iconst_0
     146: invokevirtual #32                 // Method setDaemon:(Z)V
     149: return
    Exception table:
       from    to  target type
         115   123   126   Class java/net/SocketException

  public org.apache.activemq.transport.tcp.TcpTransport(org.apache.activemq.wireformat.WireFormat, java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/activemq/transport/TransportThreadSupport."<init>":()V
       4: aload_0
       5: sipush        30000
       8: putfield      #3                  // Field connectionTimeout:I
      11: aload_0
      12: ldc           #4                  // int 65536
      14: putfield      #5                  // Field socketBufferSize:I
      17: aload_0
      18: sipush        8192
      21: putfield      #6                  // Field ioBufferSize:I
      24: aload_0
      25: iconst_1
      26: putfield      #7                  // Field closeAsync:Z
      29: aload_0
      30: aconst_null
      31: putfield      #8                  // Field buffOut:Lorg/apache/activemq/transport/tcp/TimeStampStream;
      34: aload_0
      35: iconst_0
      36: putfield      #9                  // Field trafficClass:I
      39: aload_0
      40: iconst_0
      41: putfield      #10                 // Field trafficClassSet:Z
      44: aload_0
      45: iconst_0
      46: putfield      #11                 // Field diffServChosen:Z
      49: aload_0
      50: iconst_0
      51: putfield      #12                 // Field typeOfServiceChosen:Z
      54: aload_0
      55: iconst_0
      56: putfield      #13                 // Field trace:Z
      59: aload_0
      60: getstatic     #14                 // Field org/apache/activemq/TransportLoggerSupport.defaultLogWriterName:Ljava/lang/String;
      63: putfield      #15                 // Field logWriterName:Ljava/lang/String;
      66: aload_0
      67: iconst_0
      68: putfield      #16                 // Field dynamicManagement:Z
      71: aload_0
      72: iconst_1
      73: putfield      #17                 // Field startLogging:Z
      76: aload_0
      77: sipush        1099
      80: putfield      #18                 // Field jmxPort:I
      83: aload_0
      84: iconst_0
      85: putfield      #19                 // Field useLocalHost:Z
      88: aload_0
      89: new           #20                 // class java/util/concurrent/atomic/AtomicReference
      92: dup
      93: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      96: putfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
      99: aload_0
     100: ldc           #23                 // int -2147483648
     102: putfield      #24                 // Field soLinger:I
     105: aload_0
     106: aload_1
     107: putfield      #25                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
     110: aload_0
     111: aload_2
     112: putfield      #28                 // Field socket:Ljava/net/Socket;
     115: aload_0
     116: aconst_null
     117: putfield      #30                 // Field remoteLocation:Ljava/net/URI;
     120: aload_0
     121: aconst_null
     122: putfield      #31                 // Field localLocation:Ljava/net/URI;
     125: aload_0
     126: iconst_1
     127: invokevirtual #32                 // Method setDaemon:(Z)V
     130: return

  public void oneway(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method checkStarted:()V
       4: aload_0
       5: getfield      #25                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
       8: aload_1
       9: aload_0
      10: getfield      #34                 // Field dataOut:Ljava/io/DataOutputStream;
      13: invokeinterface #35,  3           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.marshal:(Ljava/lang/Object;Ljava/io/DataOutput;)V
      18: aload_0
      19: getfield      #34                 // Field dataOut:Ljava/io/DataOutputStream;
      22: invokevirtual #36                 // Method java/io/DataOutputStream.flush:()V
      25: return

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // String
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #28                 // Field socket:Ljava/net/Socket;
      16: invokevirtual #41                 // Method java/net/Socket.isConnected:()Z
      19: ifeq          80
      22: new           #37                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #42                 // String tcp://
      31: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #28                 // Field socket:Ljava/net/Socket;
      38: invokevirtual #43                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
      41: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #45                 // String :
      46: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #28                 // Field socket:Ljava/net/Socket;
      53: invokevirtual #46                 // Method java/net/Socket.getPort:()I
      56: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: ldc           #48                 // String @
      61: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #28                 // Field socket:Ljava/net/Socket;
      68: invokevirtual #49                 // Method java/net/Socket.getLocalPort:()I
      71: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: goto          98
      80: aload_0
      81: getfield      #31                 // Field localLocation:Ljava/net/URI;
      84: ifnull        94
      87: aload_0
      88: getfield      #31                 // Field localLocation:Ljava/net/URI;
      91: goto          98
      94: aload_0
      95: getfield      #30                 // Field remoteLocation:Ljava/net/URI;
      98: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: areturn

  public void run();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: new           #37                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #51                 // String TCP consumer thread for
      12: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #52                 // String  starting
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      32: aload_0
      33: invokestatic  #54                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      36: putfield      #55                 // Field runnerThread:Ljava/lang/Thread;
      39: aload_0
      40: invokevirtual #56                 // Method isStopped:()Z
      43: ifne          53
      46: aload_0
      47: invokevirtual #57                 // Method doRun:()V
      50: goto          39
      53: aload_0
      54: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
      57: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      60: checkcast     #59                 // class java/util/concurrent/CountDownLatch
      63: invokevirtual #60                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      66: goto          188
      69: astore_1
      70: aload_0
      71: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
      74: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      77: checkcast     #59                 // class java/util/concurrent/CountDownLatch
      80: invokevirtual #60                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      83: aload_0
      84: aload_1
      85: invokevirtual #62                 // Method onException:(Ljava/io/IOException;)V
      88: aload_0
      89: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
      92: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      95: checkcast     #59                 // class java/util/concurrent/CountDownLatch
      98: invokevirtual #60                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     101: goto          188
     104: astore_1
     105: aload_0
     106: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
     109: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     112: checkcast     #59                 // class java/util/concurrent/CountDownLatch
     115: invokevirtual #60                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     118: new           #61                 // class java/io/IOException
     121: dup
     122: new           #37                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #64                 // String Unexpected error occured:
     131: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_1
     135: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #65                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     144: astore_2
     145: aload_2
     146: aload_1
     147: invokevirtual #66                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     150: pop
     151: aload_0
     152: aload_2
     153: invokevirtual #62                 // Method onException:(Ljava/io/IOException;)V
     156: aload_0
     157: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
     160: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     163: checkcast     #59                 // class java/util/concurrent/CountDownLatch
     166: invokevirtual #60                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     169: goto          188
     172: astore_3
     173: aload_0
     174: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
     177: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     180: checkcast     #59                 // class java/util/concurrent/CountDownLatch
     183: invokevirtual #60                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     186: aload_3
     187: athrow
     188: return
    Exception table:
       from    to  target type
          39    53    69   Class java/io/IOException
          39    53   104   Class java/lang/Throwable
          39    53   172   any
          69    88   172   any
         104   156   172   any
         172   173   172   any

  protected void doRun() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method readCommand:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokevirtual #68                 // Method doConsume:(Ljava/lang/Object;)V
      10: goto          18
      13: astore_1
      14: goto          18
      17: astore_1
      18: return
    Exception table:
       from    to  target type
           0    10    13   Class java/net/SocketTimeoutException
           0    10    17   Class java/io/InterruptedIOException

  protected java.lang.Object readCommand() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
       4: aload_0
       5: getfield      #71                 // Field dataIn:Ljava/io/DataInputStream;
       8: invokeinterface #72,  2           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.unmarshal:(Ljava/io/DataInput;)Ljava/lang/Object;
      13: areturn

  public java.lang.String getDiffServ();
    Code:
       0: aload_0
       1: getfield      #9                  // Field trafficClass:I
       4: invokestatic  #73                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: areturn

  public void setDiffServ(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method org/apache/activemq/transport/tcp/QualityOfServiceUtils.getDSCP:(Ljava/lang/String;)I
       5: putfield      #9                  // Field trafficClass:I
       8: aload_0
       9: iconst_1
      10: putfield      #11                 // Field diffServChosen:Z
      13: return

  public int getTypeOfService();
    Code:
       0: aload_0
       1: getfield      #9                  // Field trafficClass:I
       4: ireturn

  public void setTypeOfService(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #75                 // Method org/apache/activemq/transport/tcp/QualityOfServiceUtils.getToS:(I)I
       5: putfield      #9                  // Field trafficClass:I
       8: aload_0
       9: iconst_1
      10: putfield      #12                 // Field typeOfServiceChosen:Z
      13: return

  public boolean isTrace();
    Code:
       0: aload_0
       1: getfield      #13                 // Field trace:Z
       4: ireturn

  public void setTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field trace:Z
       5: return

  public java.lang.String getLogWriterName();
    Code:
       0: aload_0
       1: getfield      #15                 // Field logWriterName:Ljava/lang/String;
       4: areturn

  public void setLogWriterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field logWriterName:Ljava/lang/String;
       5: return

  public boolean isDynamicManagement();
    Code:
       0: aload_0
       1: getfield      #16                 // Field dynamicManagement:Z
       4: ireturn

  public void setDynamicManagement(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field dynamicManagement:Z
       5: return

  public boolean isStartLogging();
    Code:
       0: aload_0
       1: getfield      #17                 // Field startLogging:Z
       4: ireturn

  public void setStartLogging(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field startLogging:Z
       5: return

  public int getJmxPort();
    Code:
       0: aload_0
       1: getfield      #18                 // Field jmxPort:I
       4: ireturn

  public void setJmxPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field jmxPort:I
       5: return

  public int getMinmumWireFormatVersion();
    Code:
       0: aload_0
       1: getfield      #76                 // Field minmumWireFormatVersion:I
       4: ireturn

  public void setMinmumWireFormatVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #76                 // Field minmumWireFormatVersion:I
       5: return

  public boolean isUseLocalHost();
    Code:
       0: aload_0
       1: getfield      #19                 // Field useLocalHost:Z
       4: ireturn

  public void setUseLocalHost(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field useLocalHost:Z
       5: return

  public int getSocketBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field socketBufferSize:I
       4: ireturn

  public void setSocketBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field socketBufferSize:I
       5: return

  public int getSoTimeout();
    Code:
       0: aload_0
       1: getfield      #77                 // Field soTimeout:I
       4: ireturn

  public void setSoTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field soTimeout:I
       5: return

  public int getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionTimeout:I
       4: ireturn

  public void setConnectionTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field connectionTimeout:I
       5: return

  public java.lang.Boolean getKeepAlive();
    Code:
       0: aload_0
       1: getfield      #78                 // Field keepAlive:Ljava/lang/Boolean;
       4: areturn

  public void setKeepAlive(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #78                 // Field keepAlive:Ljava/lang/Boolean;
       5: return

  public void setSoLinger(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field soLinger:I
       5: return

  public int getSoLinger();
    Code:
       0: aload_0
       1: getfield      #24                 // Field soLinger:I
       4: ireturn

  public java.lang.Boolean getTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #79                 // Field tcpNoDelay:Ljava/lang/Boolean;
       4: areturn

  public void setTcpNoDelay(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field tcpNoDelay:Ljava/lang/Boolean;
       5: return

  public int getIoBufferSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field ioBufferSize:I
       4: ireturn

  public void setIoBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field ioBufferSize:I
       5: return

  public boolean isCloseAsync();
    Code:
       0: aload_0
       1: getfield      #7                  // Field closeAsync:Z
       4: ireturn

  public void setCloseAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field closeAsync:Z
       5: return

  protected java.lang.String resolveHostName(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method isUseLocalHost:()Z
       4: ifeq          26
       7: invokestatic  #81                 // Method org/apache/activemq/util/InetAddressUtil.getLocalHostName:()Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnull        26
      15: aload_2
      16: aload_1
      17: invokevirtual #82                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          26
      23: ldc           #83                 // String localhost
      25: areturn
      26: aload_1
      27: areturn

  protected void initialiseSocket(java.net.Socket) throws java.net.SocketException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #84                 // Field socketOptions:Ljava/util/Map;
       4: ifnull        64
       7: new           #85                 // class java/util/HashMap
      10: dup
      11: aload_0
      12: getfield      #84                 // Field socketOptions:Ljava/util/Map;
      15: invokespecial #86                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      18: astore_2
      19: aload_0
      20: getfield      #28                 // Field socket:Ljava/net/Socket;
      23: aload_2
      24: invokestatic  #87                 // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;)Z
      27: pop
      28: aload_2
      29: invokeinterface #88,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      34: ifne          64
      37: new           #89                 // class java/lang/IllegalArgumentException
      40: dup
      41: new           #37                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #90                 // String Invalid socket parameters:
      50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #91                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_1
      65: aload_0
      66: getfield      #5                  // Field socketBufferSize:I
      69: invokevirtual #92                 // Method java/net/Socket.setReceiveBufferSize:(I)V
      72: aload_1
      73: aload_0
      74: getfield      #5                  // Field socketBufferSize:I
      77: invokevirtual #93                 // Method java/net/Socket.setSendBufferSize:(I)V
      80: goto          150
      83: astore_2
      84: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      87: new           #37                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #94                 // String Cannot set socket buffer size =
      96: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: getfield      #5                  // Field socketBufferSize:I
     103: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     106: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokeinterface #95,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     114: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     117: new           #37                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #96                 // String Cannot set socket buffer size. Reason:
     126: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_2
     130: invokevirtual #97                 // Method java/net/SocketException.getMessage:()Ljava/lang/String;
     133: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: ldc           #98                 // String . This exception is ignored.
     138: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: aload_2
     145: invokeinterface #99,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     150: aload_1
     151: aload_0
     152: getfield      #77                 // Field soTimeout:I
     155: invokevirtual #100                // Method java/net/Socket.setSoTimeout:(I)V
     158: aload_0
     159: getfield      #78                 // Field keepAlive:Ljava/lang/Boolean;
     162: ifnull        176
     165: aload_1
     166: aload_0
     167: getfield      #78                 // Field keepAlive:Ljava/lang/Boolean;
     170: invokevirtual #101                // Method java/lang/Boolean.booleanValue:()Z
     173: invokevirtual #102                // Method java/net/Socket.setKeepAlive:(Z)V
     176: aload_0
     177: getfield      #24                 // Field soLinger:I
     180: iconst_m1
     181: if_icmple     196
     184: aload_1
     185: iconst_1
     186: aload_0
     187: getfield      #24                 // Field soLinger:I
     190: invokevirtual #103                // Method java/net/Socket.setSoLinger:(ZI)V
     193: goto          210
     196: aload_0
     197: getfield      #24                 // Field soLinger:I
     200: iconst_m1
     201: if_icmpne     210
     204: aload_1
     205: iconst_0
     206: iconst_0
     207: invokevirtual #103                // Method java/net/Socket.setSoLinger:(ZI)V
     210: aload_0
     211: getfield      #79                 // Field tcpNoDelay:Ljava/lang/Boolean;
     214: ifnull        228
     217: aload_1
     218: aload_0
     219: getfield      #79                 // Field tcpNoDelay:Ljava/lang/Boolean;
     222: invokevirtual #101                // Method java/lang/Boolean.booleanValue:()Z
     225: invokevirtual #104                // Method java/net/Socket.setTcpNoDelay:(Z)V
     228: aload_0
     229: getfield      #10                 // Field trafficClassSet:Z
     232: ifne          244
     235: aload_0
     236: aload_0
     237: aload_1
     238: invokespecial #105                // Method setTrafficClass:(Ljava/net/Socket;)Z
     241: putfield      #10                 // Field trafficClassSet:Z
     244: return
    Exception table:
       from    to  target type
          64    80    83   Class java/net/SocketException

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method connect:()V
       4: aload_0
       5: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
       8: new           #59                 // class java/util/concurrent/CountDownLatch
      11: dup
      12: iconst_1
      13: invokespecial #107                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      16: invokevirtual #108                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      19: aload_0
      20: invokespecial #109                // Method org/apache/activemq/transport/TransportThreadSupport.doStart:()V
      23: return

  protected void connect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #28                 // Field socket:Ljava/net/Socket;
       4: ifnonnull     24
       7: aload_0
       8: getfield      #26                 // Field socketFactory:Ljavax/net/SocketFactory;
      11: ifnonnull     24
      14: new           #110                // class java/lang/IllegalStateException
      17: dup
      18: ldc           #111                // String Cannot connect if the socket or socketFactory have not been set
      20: invokespecial #112                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aconst_null
      25: astore_1
      26: aconst_null
      27: astore_2
      28: aload_0
      29: getfield      #31                 // Field localLocation:Ljava/net/URI;
      32: ifnull        60
      35: new           #113                // class java/net/InetSocketAddress
      38: dup
      39: aload_0
      40: getfield      #31                 // Field localLocation:Ljava/net/URI;
      43: invokevirtual #114                // Method java/net/URI.getHost:()Ljava/lang/String;
      46: invokestatic  #115                // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      49: aload_0
      50: getfield      #31                 // Field localLocation:Ljava/net/URI;
      53: invokevirtual #116                // Method java/net/URI.getPort:()I
      56: invokespecial #117                // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      59: astore_1
      60: aload_0
      61: getfield      #30                 // Field remoteLocation:Ljava/net/URI;
      64: ifnull        95
      67: aload_0
      68: aload_0
      69: getfield      #30                 // Field remoteLocation:Ljava/net/URI;
      72: invokevirtual #114                // Method java/net/URI.getHost:()Ljava/lang/String;
      75: invokevirtual #118                // Method resolveHostName:(Ljava/lang/String;)Ljava/lang/String;
      78: astore_3
      79: new           #113                // class java/net/InetSocketAddress
      82: dup
      83: aload_3
      84: aload_0
      85: getfield      #30                 // Field remoteLocation:Ljava/net/URI;
      88: invokevirtual #116                // Method java/net/URI.getPort:()I
      91: invokespecial #119                // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      94: astore_2
      95: aload_0
      96: aload_0
      97: aload_0
      98: getfield      #28                 // Field socket:Ljava/net/Socket;
     101: invokespecial #105                // Method setTrafficClass:(Ljava/net/Socket;)Z
     104: putfield      #10                 // Field trafficClassSet:Z
     107: aload_0
     108: getfield      #28                 // Field socket:Ljava/net/Socket;
     111: ifnull        163
     114: aload_1
     115: ifnull        126
     118: aload_0
     119: getfield      #28                 // Field socket:Ljava/net/Socket;
     122: aload_1
     123: invokevirtual #120                // Method java/net/Socket.bind:(Ljava/net/SocketAddress;)V
     126: aload_2
     127: ifnull        216
     130: aload_0
     131: getfield      #3                  // Field connectionTimeout:I
     134: iflt          152
     137: aload_0
     138: getfield      #28                 // Field socket:Ljava/net/Socket;
     141: aload_2
     142: aload_0
     143: getfield      #3                  // Field connectionTimeout:I
     146: invokevirtual #121                // Method java/net/Socket.connect:(Ljava/net/SocketAddress;I)V
     149: goto          216
     152: aload_0
     153: getfield      #28                 // Field socket:Ljava/net/Socket;
     156: aload_2
     157: invokevirtual #122                // Method java/net/Socket.connect:(Ljava/net/SocketAddress;)V
     160: goto          216
     163: aload_1
     164: ifnull        197
     167: aload_0
     168: aload_0
     169: getfield      #26                 // Field socketFactory:Ljavax/net/SocketFactory;
     172: aload_2
     173: invokevirtual #123                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
     176: aload_2
     177: invokevirtual #124                // Method java/net/InetSocketAddress.getPort:()I
     180: aload_1
     181: invokevirtual #123                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
     184: aload_1
     185: invokevirtual #124                // Method java/net/InetSocketAddress.getPort:()I
     188: invokevirtual #125                // Method javax/net/SocketFactory.createSocket:(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;
     191: putfield      #28                 // Field socket:Ljava/net/Socket;
     194: goto          216
     197: aload_0
     198: aload_0
     199: getfield      #26                 // Field socketFactory:Ljavax/net/SocketFactory;
     202: aload_2
     203: invokevirtual #123                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
     206: aload_2
     207: invokevirtual #124                // Method java/net/InetSocketAddress.getPort:()I
     210: invokevirtual #126                // Method javax/net/SocketFactory.createSocket:(Ljava/net/InetAddress;I)Ljava/net/Socket;
     213: putfield      #28                 // Field socket:Ljava/net/Socket;
     216: aload_0
     217: aload_0
     218: getfield      #28                 // Field socket:Ljava/net/Socket;
     221: invokevirtual #127                // Method initialiseSocket:(Ljava/net/Socket;)V
     224: aload_0
     225: invokevirtual #128                // Method initializeStreams:()V
     228: return

  protected void doStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #129,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      14: new           #37                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #130                // String Stopping transport
      23: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #131,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: aload_0
      39: getfield      #28                 // Field socket:Ljava/net/Socket;
      42: ifnull        211
      45: aload_0
      46: getfield      #7                  // Field closeAsync:Z
      49: ifeq          125
      52: new           #59                 // class java/util/concurrent/CountDownLatch
      55: dup
      56: iconst_1
      57: invokespecial #107                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      60: astore_2
      61: new           #132                // class org/apache/activemq/thread/TaskRunnerFactory
      64: dup
      65: invokespecial #133                // Method org/apache/activemq/thread/TaskRunnerFactory."<init>":()V
      68: astore_3
      69: aload_3
      70: new           #134                // class org/apache/activemq/transport/tcp/TcpTransport$1
      73: dup
      74: aload_0
      75: aload_2
      76: invokespecial #135                // Method org/apache/activemq/transport/tcp/TcpTransport$1."<init>":(Lorg/apache/activemq/transport/tcp/TcpTransport;Ljava/util/concurrent/CountDownLatch;)V
      79: invokevirtual #136                // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;)V
      82: aload_2
      83: lconst_1
      84: getstatic     #137                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      87: invokevirtual #138                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      90: pop
      91: aload_3
      92: invokevirtual #139                // Method org/apache/activemq/thread/TaskRunnerFactory.shutdownNow:()V
      95: goto          122
      98: astore        4
     100: invokestatic  #54                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     103: invokevirtual #141                // Method java/lang/Thread.interrupt:()V
     106: aload_3
     107: invokevirtual #139                // Method org/apache/activemq/thread/TaskRunnerFactory.shutdownNow:()V
     110: goto          122
     113: astore        5
     115: aload_3
     116: invokevirtual #139                // Method org/apache/activemq/thread/TaskRunnerFactory.shutdownNow:()V
     119: aload         5
     121: athrow
     122: goto          211
     125: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     128: ldc           #142                // String Closing socket {}
     130: aload_0
     131: getfield      #28                 // Field socket:Ljava/net/Socket;
     134: invokeinterface #143,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     139: aload_0
     140: getfield      #28                 // Field socket:Ljava/net/Socket;
     143: invokevirtual #144                // Method java/net/Socket.close:()V
     146: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     149: ldc           #145                // String Closed socket {}
     151: aload_0
     152: getfield      #28                 // Field socket:Ljava/net/Socket;
     155: invokeinterface #146,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     160: goto          211
     163: astore_2
     164: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     167: invokeinterface #129,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     172: ifeq          211
     175: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     178: new           #37                 // class java/lang/StringBuilder
     181: dup
     182: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     185: ldc           #147                // String Caught exception closing socket
     187: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: getfield      #28                 // Field socket:Ljava/net/Socket;
     194: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     197: ldc           #148                // String . This exception will be ignored.
     199: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     205: aload_2
     206: invokeinterface #99,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     211: return
    Exception table:
       from    to  target type
          82    91    98   Class java/lang/InterruptedException
          82    91   113   any
          98   106   113   any
         113   115   113   any
         139   160   163   Class java/io/IOException

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #149                // Method org/apache/activemq/transport/TransportThreadSupport.stop:()V
       4: aload_0
       5: getfield      #22                 // Field stoppedLatch:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #59                 // class java/util/concurrent/CountDownLatch
      14: astore_1
      15: aload_1
      16: ifnull        38
      19: invokestatic  #54                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: aload_0
      23: getfield      #55                 // Field runnerThread:Ljava/lang/Thread;
      26: if_acmpeq     38
      29: aload_1
      30: lconst_1
      31: getstatic     #137                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      34: invokevirtual #138                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      37: pop
      38: return

  protected void initializeStreams() throws java.lang.Exception;
    Code:
       0: new           #150                // class org/apache/activemq/transport/tcp/TcpTransport$2
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #28                 // Field socket:Ljava/net/Socket;
       9: invokevirtual #151                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      12: aload_0
      13: getfield      #6                  // Field ioBufferSize:I
      16: invokespecial #152                // Method org/apache/activemq/transport/tcp/TcpTransport$2."<init>":(Lorg/apache/activemq/transport/tcp/TcpTransport;Ljava/io/InputStream;I)V
      19: astore_1
      20: aload_0
      21: new           #153                // class java/io/DataInputStream
      24: dup
      25: aload_1
      26: invokespecial #154                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      29: putfield      #71                 // Field dataIn:Ljava/io/DataInputStream;
      32: new           #155                // class org/apache/activemq/transport/tcp/TcpBufferedOutputStream
      35: dup
      36: aload_0
      37: getfield      #28                 // Field socket:Ljava/net/Socket;
      40: invokevirtual #156                // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      43: aload_0
      44: getfield      #6                  // Field ioBufferSize:I
      47: invokespecial #157                // Method org/apache/activemq/transport/tcp/TcpBufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      50: astore_2
      51: aload_0
      52: new           #158                // class java/io/DataOutputStream
      55: dup
      56: aload_2
      57: invokespecial #159                // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      60: putfield      #34                 // Field dataOut:Ljava/io/DataOutputStream;
      63: aload_0
      64: aload_2
      65: putfield      #8                  // Field buffOut:Lorg/apache/activemq/transport/tcp/TimeStampStream;
      68: return

  protected void closeStreams() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field dataOut:Ljava/io/DataOutputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #34                 // Field dataOut:Ljava/io/DataOutputStream;
      11: invokevirtual #160                // Method java/io/DataOutputStream.close:()V
      14: aload_0
      15: getfield      #71                 // Field dataIn:Ljava/io/DataInputStream;
      18: ifnull        28
      21: aload_0
      22: getfield      #71                 // Field dataIn:Ljava/io/DataInputStream;
      25: invokevirtual #161                // Method java/io/DataInputStream.close:()V
      28: return

  public void setSocketOptions(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: new           #85                 // class java/util/HashMap
       4: dup
       5: aload_1
       6: invokespecial #86                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       9: putfield      #84                 // Field socketOptions:Ljava/util/Map;
      12: return

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #28                 // Field socket:Ljava/net/Socket;
       4: ifnull        92
       7: aload_0
       8: getfield      #28                 // Field socket:Ljava/net/Socket;
      11: invokevirtual #162                // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      14: astore_1
      15: aload_1
      16: instanceof    #113                // class java/net/InetSocketAddress
      19: ifeq          66
      22: new           #37                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #42                 // String tcp://
      31: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: checkcast     #113                // class java/net/InetSocketAddress
      38: invokevirtual #123                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      41: invokevirtual #163                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      44: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #45                 // String :
      49: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: checkcast     #113                // class java/net/InetSocketAddress
      56: invokevirtual #124                // Method java/net/InetSocketAddress.getPort:()I
      59: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn
      66: new           #37                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #39                 // String
      75: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: getfield      #28                 // Field socket:Ljava/net/Socket;
      82: invokevirtual #162                // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      85: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: areturn
      92: aconst_null
      93: areturn

  public <T> T narrow(java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc_w         #164                // class java/net/Socket
       4: if_acmpne     16
       7: aload_1
       8: aload_0
       9: getfield      #28                 // Field socket:Ljava/net/Socket;
      12: invokevirtual #165                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: ldc_w         #166                // class org/apache/activemq/transport/tcp/TimeStampStream
      20: if_acmpne     32
      23: aload_1
      24: aload_0
      25: getfield      #8                  // Field buffOut:Lorg/apache/activemq/transport/tcp/TimeStampStream;
      28: invokevirtual #165                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      31: areturn
      32: aload_0
      33: aload_1
      34: invokespecial #167                // Method org/apache/activemq/transport/TransportThreadSupport.narrow:(Ljava/lang/Class;)Ljava/lang/Object;
      37: areturn

  public int getReceiveCounter();
    Code:
       0: aload_0
       1: getfield      #168                // Field receiveCounter:I
       4: ireturn

  private boolean setTrafficClass(java.net.Socket) throws java.net.SocketException, java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: getfield      #11                 // Field diffServChosen:Z
       8: ifne          20
      11: aload_0
      12: getfield      #12                 // Field typeOfServiceChosen:Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #11                 // Field diffServChosen:Z
      24: ifeq          44
      27: aload_0
      28: getfield      #12                 // Field typeOfServiceChosen:Z
      31: ifeq          44
      34: new           #89                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #169                // String Cannot set both the  Differentiated Services and Type of Services transport  options on the same connection.
      40: invokespecial #91                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_1
      45: aload_0
      46: getfield      #9                  // Field trafficClass:I
      49: invokevirtual #170                // Method java/net/Socket.setTrafficClass:(I)V
      52: aload_1
      53: invokevirtual #171                // Method java/net/Socket.getTrafficClass:()I
      56: istore_2
      57: aload_0
      58: getfield      #9                  // Field trafficClass:I
      61: iload_2
      62: if_icmpeq     192
      65: aload_0
      66: getfield      #9                  // Field trafficClass:I
      69: iconst_2
      70: ishr
      71: iload_2
      72: iconst_2
      73: ishr
      74: if_icmpne     141
      77: aload_0
      78: getfield      #9                  // Field trafficClass:I
      81: iconst_3
      82: iand
      83: iload_2
      84: iconst_3
      85: iand
      86: if_icmpeq     141
      89: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      92: new           #37                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #172                // String Attempted to set the Traffic Class to
     101: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: getfield      #9                  // Field trafficClass:I
     108: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     111: ldc           #173                // String  but the result Traffic Class was
     113: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: iload_2
     117: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     120: ldc           #174                // String . Please check that your system
     122: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: ldc           #175                // String allows you to set the ECN bits (the first two bits).
     127: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokeinterface #95,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     138: goto          190
     141: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     144: new           #37                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #172                // String Attempted to set the Traffic Class to
     153: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #9                  // Field trafficClass:I
     160: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: ldc           #173                // String  but the result Traffic Class was
     165: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: iload_2
     169: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     172: ldc           #174                // String . Please check that your system
     174: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: ldc           #176                // String supports java.net.setTrafficClass.
     179: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokeinterface #95,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     190: iconst_0
     191: ireturn
     192: aload_0
     193: iconst_0
     194: putfield      #11                 // Field diffServChosen:Z
     197: aload_0
     198: iconst_0
     199: putfield      #12                 // Field typeOfServiceChosen:Z
     202: iconst_1
     203: ireturn

  public org.apache.activemq.wireformat.WireFormat getWireFormat();
    Code:
       0: aload_0
       1: getfield      #25                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
       4: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #177                // class org/apache/activemq/transport/tcp/TcpTransport
       3: invokestatic  #178                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
