Compiled from "AmqpNioTransportHelper.java"
public class org.apache.activemq.transport.amqp.AmqpNioTransportHelper {
  private final java.io.DataInputStream amqpHeaderValue;

  private final java.lang.Integer AMQP_HEADER_VALUE;

  private static final org.slf4j.Logger LOG;

  protected int nextFrameSize;

  protected java.nio.ByteBuffer currentBuffer;

  private boolean magicConsumed;

  private final org.apache.activemq.transport.TransportSupport transportSupport;

  public org.apache.activemq.transport.amqp.AmqpNioTransportHelper(org.apache.activemq.transport.TransportSupport) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/io/DataInputStream
       8: dup
       9: new           #3                  // class java/io/ByteArrayInputStream
      12: dup
      13: iconst_4
      14: newarray       byte
      16: dup
      17: iconst_0
      18: bipush        65
      20: bastore
      21: dup
      22: iconst_1
      23: bipush        77
      25: bastore
      26: dup
      27: iconst_2
      28: bipush        81
      30: bastore
      31: dup
      32: iconst_3
      33: bipush        80
      35: bastore
      36: invokespecial #4                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      39: invokespecial #5                  // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      42: putfield      #6                  // Field amqpHeaderValue:Ljava/io/DataInputStream;
      45: aload_0
      46: iconst_m1
      47: putfield      #7                  // Field nextFrameSize:I
      50: aload_0
      51: iconst_0
      52: putfield      #8                  // Field magicConsumed:Z
      55: aload_0
      56: aload_0
      57: getfield      #6                  // Field amqpHeaderValue:Ljava/io/DataInputStream;
      60: invokevirtual #9                  // Method java/io/DataInputStream.readInt:()I
      63: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: putfield      #11                 // Field AMQP_HEADER_VALUE:Ljava/lang/Integer;
      69: aload_0
      70: aload_1
      71: putfield      #12                 // Field transportSupport:Lorg/apache/activemq/transport/TransportSupport;
      74: return

  protected void processCommand(java.nio.ByteBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field nextFrameSize:I
       4: iconst_m1
       5: if_icmpne     158
       8: aload_1
       9: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
      12: iconst_4
      13: if_icmpge     96
      16: aload_0
      17: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      20: ifnonnull     31
      23: aload_0
      24: iconst_4
      25: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      28: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      31: aload_0
      32: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      35: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      38: ifeq          63
      41: aload_1
      42: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      45: ifeq          63
      48: aload_0
      49: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      52: aload_1
      53: invokevirtual #17                 // Method java/nio/ByteBuffer.get:()B
      56: invokevirtual #18                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      59: pop
      60: goto          31
      63: aload_0
      64: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      67: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      70: ifeq          74
      73: return
      74: aload_0
      75: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      78: invokevirtual #19                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      81: pop
      82: aload_0
      83: aload_0
      84: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      87: invokevirtual #20                 // Method java/nio/ByteBuffer.getInt:()I
      90: putfield      #7                  // Field nextFrameSize:I
      93: goto          158
      96: aload_0
      97: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     100: ifnull        150
     103: aload_0
     104: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     107: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     110: ifeq          128
     113: aload_0
     114: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     117: aload_1
     118: invokevirtual #17                 // Method java/nio/ByteBuffer.get:()B
     121: invokevirtual #18                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     124: pop
     125: goto          103
     128: aload_0
     129: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     132: invokevirtual #19                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     135: pop
     136: aload_0
     137: aload_0
     138: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     141: invokevirtual #20                 // Method java/nio/ByteBuffer.getInt:()I
     144: putfield      #7                  // Field nextFrameSize:I
     147: goto          158
     150: aload_0
     151: aload_1
     152: invokevirtual #20                 // Method java/nio/ByteBuffer.getInt:()I
     155: putfield      #7                  // Field nextFrameSize:I
     158: aload_0
     159: getfield      #7                  // Field nextFrameSize:I
     162: aload_0
     163: getfield      #11                 // Field AMQP_HEADER_VALUE:Ljava/lang/Integer;
     166: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
     169: if_icmpne     190
     172: aload_0
     173: aload_0
     174: aload_1
     175: invokespecial #22                 // Method handleAmqpHeader:(Ljava/nio/ByteBuffer;)I
     178: putfield      #7                  // Field nextFrameSize:I
     181: aload_0
     182: getfield      #7                  // Field nextFrameSize:I
     185: iconst_m1
     186: if_icmpne     190
     189: return
     190: aload_0
     191: aload_0
     192: getfield      #7                  // Field nextFrameSize:I
     195: invokespecial #23                 // Method validateFrameSize:(I)V
     198: aload_0
     199: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     202: ifnull        216
     205: aload_0
     206: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     209: invokevirtual #24                 // Method java/nio/ByteBuffer.limit:()I
     212: iconst_4
     213: if_icmpne     239
     216: aload_0
     217: aload_0
     218: getfield      #7                  // Field nextFrameSize:I
     221: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     224: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     227: aload_0
     228: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     231: aload_0
     232: getfield      #7                  // Field nextFrameSize:I
     235: invokevirtual #25                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     238: pop
     239: aload_0
     240: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     243: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
     246: aload_1
     247: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
     250: if_icmplt     265
     253: aload_0
     254: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     257: aload_1
     258: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     261: pop
     262: goto          290
     265: aload_0
     266: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     269: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
     272: newarray       byte
     274: astore_2
     275: aload_1
     276: aload_2
     277: invokevirtual #27                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     280: pop
     281: aload_0
     282: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     285: aload_2
     286: invokevirtual #28                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     289: pop
     290: aload_0
     291: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     294: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     297: ifeq          301
     300: return
     301: aload_0
     302: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     305: invokevirtual #19                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     308: pop
     309: getstatic     #29                 // Field LOG:Lorg/slf4j/Logger;
     312: ldc           #30                 // String Calling doConsume with position {} limit {}
     314: aload_0
     315: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     318: invokevirtual #31                 // Method java/nio/ByteBuffer.position:()I
     321: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     324: aload_0
     325: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     328: invokevirtual #24                 // Method java/nio/ByteBuffer.limit:()I
     331: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     334: invokeinterface #32,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     339: aload_0
     340: getfield      #12                 // Field transportSupport:Lorg/apache/activemq/transport/TransportSupport;
     343: aload_0
     344: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     347: invokestatic  #33                 // Method org/apache/activemq/transport/amqp/AmqpSupport.toBuffer:(Ljava/nio/ByteBuffer;)Lorg/fusesource/hawtbuf/Buffer;
     350: invokevirtual #34                 // Method org/apache/activemq/transport/TransportSupport.doConsume:(Ljava/lang/Object;)V
     353: aload_0
     354: aconst_null
     355: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     358: aload_0
     359: iconst_m1
     360: putfield      #7                  // Field nextFrameSize:I
     363: aload_1
     364: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     367: ifeq          430
     370: aload_1
     371: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
     374: iconst_4
     375: if_icmpge     419
     378: aload_0
     379: iconst_4
     380: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     383: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     386: aload_0
     387: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     390: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     393: ifeq          418
     396: aload_1
     397: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     400: ifeq          418
     403: aload_0
     404: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     407: aload_1
     408: invokevirtual #17                 // Method java/nio/ByteBuffer.get:()B
     411: invokevirtual #18                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     414: pop
     415: goto          386
     418: return
     419: aload_0
     420: aload_1
     421: invokevirtual #20                 // Method java/nio/ByteBuffer.getInt:()I
     424: putfield      #7                  // Field nextFrameSize:I
     427: goto          158
     430: return

  private void validateFrameSize(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field nextFrameSize:I
       4: ldc           #35                 // int 1048576
       6: if_icmple     49
       9: new           #36                 // class java/io/IOException
      12: dup
      13: new           #37                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #39                 // String Frame size of
      22: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #7                  // Field nextFrameSize:I
      29: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #42                 // String larger than max allowed
      34: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #35                 // int 1048576
      39: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #44                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  private int handleAmqpHeader(java.nio.ByteBuffer);
    Code:
       0: getstatic     #29                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #45                 // String Consuming AMQP_HEADER
       5: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: bipush        8
      13: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      16: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      19: aload_0
      20: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      23: aload_0
      24: getfield      #11                 // Field AMQP_HEADER_VALUE:Ljava/lang/Integer;
      27: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
      30: invokevirtual #25                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      33: pop
      34: aload_0
      35: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      38: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      41: ifeq          59
      44: aload_0
      45: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      48: aload_1
      49: invokevirtual #17                 // Method java/nio/ByteBuffer.get:()B
      52: invokevirtual #18                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      55: pop
      56: goto          34
      59: aload_0
      60: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      63: invokevirtual #19                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      66: pop
      67: aload_0
      68: getfield      #8                  // Field magicConsumed:Z
      71: ifne          107
      74: aload_0
      75: getfield      #12                 // Field transportSupport:Lorg/apache/activemq/transport/TransportSupport;
      78: new           #47                 // class org/apache/activemq/transport/amqp/AmqpHeader
      81: dup
      82: new           #48                 // class org/fusesource/hawtbuf/Buffer
      85: dup
      86: aload_0
      87: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      90: invokespecial #49                 // Method org/fusesource/hawtbuf/Buffer."<init>":(Ljava/nio/ByteBuffer;)V
      93: invokespecial #50                 // Method org/apache/activemq/transport/amqp/AmqpHeader."<init>":(Lorg/fusesource/hawtbuf/Buffer;)V
      96: invokevirtual #34                 // Method org/apache/activemq/transport/TransportSupport.doConsume:(Ljava/lang/Object;)V
      99: aload_0
     100: iconst_1
     101: putfield      #8                  // Field magicConsumed:Z
     104: goto          121
     107: aload_0
     108: getfield      #12                 // Field transportSupport:Lorg/apache/activemq/transport/TransportSupport;
     111: aload_0
     112: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     115: invokestatic  #33                 // Method org/apache/activemq/transport/amqp/AmqpSupport.toBuffer:(Ljava/nio/ByteBuffer;)Lorg/fusesource/hawtbuf/Buffer;
     118: invokevirtual #34                 // Method org/apache/activemq/transport/TransportSupport.doConsume:(Ljava/lang/Object;)V
     121: aload_0
     122: aconst_null
     123: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     126: aload_1
     127: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     130: ifeq          154
     133: aload_1
     134: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
     137: iconst_4
     138: if_icmpge     146
     141: iconst_4
     142: istore_2
     143: goto          156
     146: aload_1
     147: invokevirtual #20                 // Method java/nio/ByteBuffer.getInt:()I
     150: istore_2
     151: goto          156
     154: iconst_m1
     155: istore_2
     156: iload_2
     157: ireturn

  static {};
    Code:
       0: ldc_w         #51                 // class org/apache/activemq/transport/amqp/AmqpNioTransportHelper
       3: invokestatic  #52                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #29                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
