Compiled from "AmqpWireFormat.java"
public class org.apache.activemq.transport.amqp.AmqpWireFormat implements org.apache.activemq.wireformat.WireFormat {
  public static final int DEFAULT_MAX_FRAME_SIZE;

  private int version;

  private long maxFrameSize;

  boolean magicRead;

  public org.apache.activemq.transport.amqp.AmqpWireFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field version:I
       9: aload_0
      10: ldc2_w        #3                  // long 1048576l
      13: putfield      #5                  // Field maxFrameSize:J
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field magicRead:Z
      21: return

  public org.apache.activemq.util.ByteSequence marshal(java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #7                  // class org/apache/activemq/util/ByteArrayOutputStream
       3: dup
       4: invokespecial #8                  // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: new           #9                  // class java/io/DataOutputStream
      11: dup
      12: aload_2
      13: invokespecial #10                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      16: astore_3
      17: aload_0
      18: aload_1
      19: aload_3
      20: invokevirtual #11                 // Method marshal:(Ljava/lang/Object;Ljava/io/DataOutput;)V
      23: aload_3
      24: invokevirtual #12                 // Method java/io/DataOutputStream.close:()V
      27: aload_2
      28: invokevirtual #13                 // Method org/apache/activemq/util/ByteArrayOutputStream.toByteSequence:()Lorg/apache/activemq/util/ByteSequence;
      31: areturn

  public java.lang.Object unmarshal(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: new           #14                 // class org/apache/activemq/util/ByteArrayInputStream
       3: dup
       4: aload_1
       5: invokespecial #15                 // Method org/apache/activemq/util/ByteArrayInputStream."<init>":(Lorg/apache/activemq/util/ByteSequence;)V
       8: astore_2
       9: new           #16                 // class java/io/DataInputStream
      12: dup
      13: aload_2
      14: invokespecial #17                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      17: astore_3
      18: aload_0
      19: aload_3
      20: invokevirtual #18                 // Method unmarshal:(Ljava/io/DataInput;)Ljava/lang/Object;
      23: areturn

  public void marshal(java.lang.Object, java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/nio/ByteBuffer
       4: ifeq          63
       7: aload_1
       8: checkcast     #19                 // class java/nio/ByteBuffer
      11: astore_3
      12: aload_2
      13: instanceof    #20                 // class java/io/OutputStream
      16: ifeq          40
      19: aload_2
      20: checkcast     #20                 // class java/io/OutputStream
      23: invokestatic  #21                 // Method java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;
      26: astore        4
      28: aload         4
      30: aload_3
      31: invokeinterface #22,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      36: pop
      37: goto          60
      40: aload_3
      41: invokevirtual #23                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      44: ifeq          60
      47: aload_2
      48: aload_3
      49: invokevirtual #24                 // Method java/nio/ByteBuffer.get:()B
      52: invokeinterface #25,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      57: goto          40
      60: goto          73
      63: aload_1
      64: checkcast     #26                 // class org/fusesource/hawtbuf/Buffer
      67: astore_3
      68: aload_3
      69: aload_2
      70: invokevirtual #27                 // Method org/fusesource/hawtbuf/Buffer.writeTo:(Ljava/io/DataOutput;)V
      73: return

  public java.lang.Object unmarshal(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field magicRead:Z
       4: ifne          36
       7: new           #26                 // class org/fusesource/hawtbuf/Buffer
      10: dup
      11: bipush        8
      13: invokespecial #28                 // Method org/fusesource/hawtbuf/Buffer."<init>":(I)V
      16: astore_2
      17: aload_2
      18: aload_1
      19: invokevirtual #29                 // Method org/fusesource/hawtbuf/Buffer.readFrom:(Ljava/io/DataInput;)V
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field magicRead:Z
      27: new           #30                 // class org/apache/activemq/transport/amqp/AmqpHeader
      30: dup
      31: aload_2
      32: invokespecial #31                 // Method org/apache/activemq/transport/amqp/AmqpHeader."<init>":(Lorg/fusesource/hawtbuf/Buffer;)V
      35: areturn
      36: aload_1
      37: invokeinterface #32,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      42: istore_2
      43: iload_2
      44: i2l
      45: aload_0
      46: getfield      #5                  // Field maxFrameSize:J
      49: lcmp
      50: ifle          63
      53: new           #33                 // class org/apache/activemq/transport/amqp/AmqpProtocolException
      56: dup
      57: ldc           #34                 // String Frame size exceeded max frame length.
      59: invokespecial #35                 // Method org/apache/activemq/transport/amqp/AmqpProtocolException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: new           #26                 // class org/fusesource/hawtbuf/Buffer
      66: dup
      67: iload_2
      68: invokespecial #28                 // Method org/fusesource/hawtbuf/Buffer."<init>":(I)V
      71: astore_3
      72: aload_3
      73: invokevirtual #36                 // Method org/fusesource/hawtbuf/Buffer.bigEndianEditor:()Lorg/fusesource/hawtbuf/BufferEditor;
      76: iload_2
      77: invokevirtual #37                 // Method org/fusesource/hawtbuf/BufferEditor.writeInt:(I)V
      80: aload_3
      81: aload_1
      82: invokevirtual #29                 // Method org/fusesource/hawtbuf/Buffer.readFrom:(Ljava/io/DataInput;)V
      85: aload_3
      86: invokevirtual #38                 // Method org/fusesource/hawtbuf/Buffer.clear:()Lorg/fusesource/hawtbuf/Buffer;
      89: pop
      90: aload_3
      91: areturn

  public void setVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field version:I
       5: return

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:I
       4: ireturn

  public long getMaxFrameSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxFrameSize:J
       4: lreturn

  public void setMaxFrameSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field maxFrameSize:J
       5: return
}
