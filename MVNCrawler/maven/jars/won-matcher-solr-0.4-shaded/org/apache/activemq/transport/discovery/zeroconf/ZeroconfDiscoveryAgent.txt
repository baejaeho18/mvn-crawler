Compiled from "ZeroconfDiscoveryAgent.java"
public class org.apache.activemq.transport.discovery.zeroconf.ZeroconfDiscoveryAgent implements org.apache.activemq.transport.discovery.DiscoveryAgent,javax.jmdns.ServiceListener {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String TYPE_SUFFIX;

  private javax.jmdns.JmDNS jmdns;

  private java.net.InetAddress localAddress;

  private java.lang.String localhost;

  private int weight;

  private int priority;

  private java.lang.String typeSuffix;

  private org.apache.activemq.transport.discovery.DiscoveryListener listener;

  private java.lang.String group;

  private final java.util.concurrent.CopyOnWriteArrayList<javax.jmdns.ServiceInfo> serviceInfos;

  public org.apache.activemq.transport.discovery.zeroconf.ZeroconfDiscoveryAgent();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String ActiveMQ-5.
       7: putfield      #4                  // Field typeSuffix:Ljava/lang/String;
      10: aload_0
      11: ldc           #5                  // String default
      13: putfield      #6                  // Field group:Ljava/lang/String;
      16: aload_0
      17: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
      20: dup
      21: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      24: putfield      #9                  // Field serviceInfos:Ljava/util/concurrent/CopyOnWriteArrayList;
      27: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field group:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #10                 // class java/io/IOException
      10: dup
      11: ldc           #11                 // String You must specify a group to discover
      13: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #13                 // Method getType:()Ljava/lang/String;
      21: astore_1
      22: aload_1
      23: ldc           #14                 // String .
      25: invokevirtual #15                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      28: ifne          62
      31: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      34: ldc           #16                 // String The type \'{}\' should end with \'.\' to be a valid Rendezvous type
      36: aload_1
      37: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      42: new           #18                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      49: aload_1
      50: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #14                 // String .
      55: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: astore_1
      62: aload_0
      63: invokevirtual #22                 // Method getJmdns:()Ljavax/jmdns/JmDNS;
      66: pop
      67: aload_0
      68: getfield      #23                 // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
      71: ifnull        94
      74: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      77: ldc           #24                 // String Discovering service of type: {}
      79: aload_1
      80: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      85: aload_0
      86: getfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
      89: aload_1
      90: aload_0
      91: invokevirtual #27                 // Method javax/jmdns/JmDNS.addServiceListener:(Ljava/lang/String;Ljavax/jmdns/ServiceListener;)V
      94: goto          122
      97: astore_2
      98: new           #18                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #28                 // String Failed to start JmDNS service:
     107: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_2
     111: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     114: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: aload_2
     118: invokestatic  #30                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Exception;)Ljavax/jms/JMSException;
     121: pop
     122: return
    Exception table:
       from    to  target type
          62    94    97   Class java/io/IOException

  public void stop();
    Code:
       0: aload_0
       1: getfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
       4: ifnull        74
       7: aload_0
       8: getfield      #9                  // Field serviceInfos:Ljava/util/concurrent/CopyOnWriteArrayList;
      11: invokevirtual #31                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_1
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #34                 // class javax/jmdns/ServiceInfo
      33: astore_2
      34: aload_0
      35: getfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
      38: aload_2
      39: invokevirtual #35                 // Method javax/jmdns/JmDNS.unregisterService:(Ljavax/jmdns/ServiceInfo;)V
      42: goto          15
      45: aload_0
      46: getfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
      49: astore_1
      50: new           #36                 // class org/apache/activemq/transport/discovery/zeroconf/ZeroconfDiscoveryAgent$1
      53: dup
      54: aload_0
      55: aload_1
      56: invokespecial #37                 // Method org/apache/activemq/transport/discovery/zeroconf/ZeroconfDiscoveryAgent$1."<init>":(Lorg/apache/activemq/transport/discovery/zeroconf/ZeroconfDiscoveryAgent;Ljavax/jmdns/JmDNS;)V
      59: astore_2
      60: aload_2
      61: iconst_1
      62: invokevirtual #38                 // Method java/lang/Thread.setDaemon:(Z)V
      65: aload_2
      66: invokevirtual #39                 // Method java/lang/Thread.start:()V
      69: aload_0
      70: aconst_null
      71: putfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
      74: return

  public void registerService(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #40                 // class java/util/HashMap
       5: dup
       6: invokespecial #41                 // Method java/util/HashMap."<init>":()V
       9: invokevirtual #42                 // Method createServiceInfo:(Ljava/lang/String;Ljava/util/Map;)Ljavax/jmdns/ServiceInfo;
      12: astore_2
      13: aload_0
      14: getfield      #9                  // Field serviceInfos:Ljava/util/concurrent/CopyOnWriteArrayList;
      17: aload_2
      18: invokevirtual #43                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: invokevirtual #22                 // Method getJmdns:()Ljavax/jmdns/JmDNS;
      26: aload_2
      27: invokevirtual #44                 // Method javax/jmdns/JmDNS.registerService:(Ljavax/jmdns/ServiceInfo;)V
      30: return

  public void addService(javax.jmdns.JmDNS, java.lang.String, java.lang.String);
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #45                 // String addService with type: {} name: {}
       5: aload_2
       6: aload_3
       7: invokeinterface #46,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #23                 // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
      16: ifnull        36
      19: aload_0
      20: getfield      #23                 // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
      23: new           #47                 // class org/apache/activemq/command/DiscoveryEvent
      26: dup
      27: aload_3
      28: invokespecial #48                 // Method org/apache/activemq/command/DiscoveryEvent."<init>":(Ljava/lang/String;)V
      31: invokeinterface #49,  2           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryListener.onServiceAdd:(Lorg/apache/activemq/command/DiscoveryEvent;)V
      36: aload_1
      37: aload_2
      38: aload_3
      39: invokevirtual #50                 // Method javax/jmdns/JmDNS.requestServiceInfo:(Ljava/lang/String;Ljava/lang/String;)V
      42: return

  public void removeService(javax.jmdns.JmDNS, java.lang.String, java.lang.String);
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #51                 // String removeService with type: {} name: {}
       5: aload_2
       6: aload_3
       7: invokeinterface #46,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #23                 // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
      16: ifnull        36
      19: aload_0
      20: getfield      #23                 // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
      23: new           #47                 // class org/apache/activemq/command/DiscoveryEvent
      26: dup
      27: aload_3
      28: invokespecial #48                 // Method org/apache/activemq/command/DiscoveryEvent."<init>":(Ljava/lang/String;)V
      31: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryListener.onServiceRemove:(Lorg/apache/activemq/command/DiscoveryEvent;)V
      36: return

  public void serviceAdded(javax.jmdns.ServiceEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method javax/jmdns/ServiceEvent.getDNS:()Ljavax/jmdns/JmDNS;
       5: aload_1
       6: invokevirtual #54                 // Method javax/jmdns/ServiceEvent.getType:()Ljava/lang/String;
       9: aload_1
      10: invokevirtual #55                 // Method javax/jmdns/ServiceEvent.getName:()Ljava/lang/String;
      13: invokevirtual #56                 // Method addService:(Ljavax/jmdns/JmDNS;Ljava/lang/String;Ljava/lang/String;)V
      16: return

  public void serviceRemoved(javax.jmdns.ServiceEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method javax/jmdns/ServiceEvent.getDNS:()Ljavax/jmdns/JmDNS;
       5: aload_1
       6: invokevirtual #54                 // Method javax/jmdns/ServiceEvent.getType:()Ljava/lang/String;
       9: aload_1
      10: invokevirtual #55                 // Method javax/jmdns/ServiceEvent.getName:()Ljava/lang/String;
      13: invokevirtual #57                 // Method removeService:(Ljavax/jmdns/JmDNS;Ljava/lang/String;Ljava/lang/String;)V
      16: return

  public void serviceResolved(javax.jmdns.ServiceEvent);
    Code:
       0: return

  public void resolveService(javax.jmdns.JmDNS, java.lang.String, java.lang.String, javax.jmdns.ServiceInfo);
    Code:
       0: return

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #58                 // Field priority:I
       4: ireturn

  public void setPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #58                 // Field priority:I
       5: return

  public int getWeight();
    Code:
       0: aload_0
       1: getfield      #59                 // Field weight:I
       4: ireturn

  public void setWeight(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #59                 // Field weight:I
       5: return

  public javax.jmdns.JmDNS getJmdns() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #60                 // Method createJmDNS:()Ljavax/jmdns/JmDNS;
      12: putfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
      15: aload_0
      16: getfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
      19: areturn

  public void setJmdns(javax.jmdns.JmDNS);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field jmdns:Ljavax/jmdns/JmDNS;
       5: return

  public java.net.InetAddress getLocalAddress() throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: getfield      #61                 // Field localAddress:Ljava/net/InetAddress;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #62                 // Method createLocalAddress:()Ljava/net/InetAddress;
      12: putfield      #61                 // Field localAddress:Ljava/net/InetAddress;
      15: aload_0
      16: getfield      #61                 // Field localAddress:Ljava/net/InetAddress;
      19: areturn

  public void setLocalAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field localAddress:Ljava/net/InetAddress;
       5: return

  public java.lang.String getLocalhost();
    Code:
       0: aload_0
       1: getfield      #63                 // Field localhost:Ljava/lang/String;
       4: areturn

  public void setLocalhost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field localhost:Ljava/lang/String;
       5: return

  protected javax.jmdns.ServiceInfo createServiceInfo(java.lang.String, java.util.Map);
    Code:
       0: aload_2
       1: ldc           #64                 // String port
       3: iconst_0
       4: invokestatic  #65                 // Method org/apache/activemq/util/MapHelper.getInt:(Ljava/util/Map;Ljava/lang/String;I)I
       7: istore_3
       8: aload_0
       9: invokevirtual #13                 // Method getType:()Ljava/lang/String;
      12: astore        4
      14: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #66                 // String Registering service type: {} name: {} details: {}
      19: iconst_3
      20: anewarray     #67                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload         4
      27: aastore
      28: dup
      29: iconst_1
      30: aload_1
      31: aastore
      32: dup
      33: iconst_2
      34: aload_2
      35: aastore
      36: invokeinterface #68,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      41: aload         4
      43: new           #18                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      50: aload_1
      51: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #14                 // String .
      56: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload         4
      61: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: iload_3
      68: aload_0
      69: getfield      #59                 // Field weight:I
      72: aload_0
      73: getfield      #58                 // Field priority:I
      76: ldc           #69                 // String
      78: invokestatic  #70                 // Method javax/jmdns/ServiceInfo.create:(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)Ljavax/jmdns/ServiceInfo;
      81: areturn

  protected javax.jmdns.JmDNS createJmDNS() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getLocalAddress:()Ljava/net/InetAddress;
       4: invokestatic  #72                 // Method org/apache/activemq/transport/discovery/zeroconf/JmDNSFactory.create:(Ljava/net/InetAddress;)Ljavax/jmdns/JmDNS;
       7: areturn

  protected java.net.InetAddress createLocalAddress() throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field localhost:Ljava/lang/String;
       4: ifnull        15
       7: aload_0
       8: getfield      #63                 // Field localhost:Ljava/lang/String;
      11: invokestatic  #73                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      14: areturn
      15: invokestatic  #74                 // Method java/net/InetAddress.getLocalHost:()Ljava/net/InetAddress;
      18: areturn

  public void setDiscoveryListener(org.apache.activemq.transport.discovery.DiscoveryListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field listener:Lorg/apache/activemq/transport/discovery/DiscoveryListener;
       5: return

  public java.lang.String getGroup();
    Code:
       0: aload_0
       1: getfield      #6                  // Field group:Ljava/lang/String;
       4: areturn

  public void setGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field group:Ljava/lang/String;
       5: return

  public void setType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field typeSuffix:Ljava/lang/String;
       5: return

  public java.lang.String getType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field typeSuffix:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field typeSuffix:Ljava/lang/String;
      11: invokevirtual #75                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          23
      17: aload_0
      18: ldc           #3                  // String ActiveMQ-5.
      20: putfield      #4                  // Field typeSuffix:Ljava/lang/String;
      23: new           #18                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #76                 // String _
      32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #6                  // Field group:Ljava/lang/String;
      39: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #14                 // String .
      44: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #4                  // Field typeSuffix:Ljava/lang/String;
      51: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: areturn

  public void serviceFailed(org.apache.activemq.command.DiscoveryEvent) throws java.io.IOException;
    Code:
       0: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #77                 // class org/apache/activemq/transport/discovery/zeroconf/ZeroconfDiscoveryAgent
       3: invokestatic  #78                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
