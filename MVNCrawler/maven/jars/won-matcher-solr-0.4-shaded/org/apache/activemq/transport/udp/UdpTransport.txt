Compiled from "UdpTransport.java"
public class org.apache.activemq.transport.udp.UdpTransport extends org.apache.activemq.transport.TransportThreadSupport implements org.apache.activemq.transport.Transport,org.apache.activemq.Service,java.lang.Runnable {
  private static final org.slf4j.Logger LOG;

  private static final int MAX_BIND_ATTEMPTS;

  private static final long BIND_ATTEMPT_DELAY;

  private org.apache.activemq.transport.udp.CommandChannel commandChannel;

  private org.apache.activemq.openwire.OpenWireFormat wireFormat;

  private org.apache.activemq.transport.udp.ByteBufferPool bufferPool;

  private org.apache.activemq.transport.reliable.ReplayStrategy replayStrategy;

  private org.apache.activemq.transport.reliable.ReplayBuffer replayBuffer;

  private int datagramSize;

  private java.net.SocketAddress targetAddress;

  private java.net.SocketAddress originalTargetAddress;

  private java.nio.channels.DatagramChannel channel;

  private boolean trace;

  private boolean useLocalHost;

  private int port;

  private int minmumWireFormatVersion;

  private java.lang.String description;

  private org.apache.activemq.util.IntSequenceGenerator sequenceGenerator;

  private boolean replayEnabled;

  protected org.apache.activemq.transport.udp.UdpTransport(org.apache.activemq.openwire.OpenWireFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/transport/TransportThreadSupport."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/activemq/transport/reliable/ExceptionIfDroppedReplayStrategy
       8: dup
       9: invokespecial #3                  // Method org/apache/activemq/transport/reliable/ExceptionIfDroppedReplayStrategy."<init>":()V
      12: putfield      #4                  // Field replayStrategy:Lorg/apache/activemq/transport/reliable/ReplayStrategy;
      15: aload_0
      16: sipush        4096
      19: putfield      #5                  // Field datagramSize:I
      22: aload_0
      23: iconst_0
      24: putfield      #6                  // Field useLocalHost:Z
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field replayEnabled:Z
      32: aload_0
      33: aload_1
      34: putfield      #8                  // Field wireFormat:Lorg/apache/activemq/openwire/OpenWireFormat;
      37: return

  public org.apache.activemq.transport.udp.UdpTransport(org.apache.activemq.openwire.OpenWireFormat, java.net.URI) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method "<init>":(Lorg/apache/activemq/openwire/OpenWireFormat;)V
       5: aload_0
       6: aload_0
       7: aload_2
       8: invokevirtual #10                 // Method createAddress:(Ljava/net/URI;)Ljava/net/InetSocketAddress;
      11: putfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      14: aload_0
      15: new           #12                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      22: aload_2
      23: invokevirtual #14                 // Method java/net/URI.toString:()Ljava/lang/String;
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #16                 // String @
      31: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: putfield      #18                 // Field description:Ljava/lang/String;
      40: return

  public org.apache.activemq.transport.udp.UdpTransport(org.apache.activemq.openwire.OpenWireFormat, java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method "<init>":(Lorg/apache/activemq/openwire/OpenWireFormat;)V
       5: aload_0
       6: aload_2
       7: putfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      10: aload_0
      11: new           #12                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #19                 // Method getProtocolName:()Ljava/lang/String;
      22: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #20                 // String ServerConnection@
      27: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: putfield      #18                 // Field description:Ljava/lang/String;
      36: return

  public org.apache.activemq.transport.udp.UdpTransport(org.apache.activemq.openwire.OpenWireFormat, int) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method "<init>":(Lorg/apache/activemq/openwire/OpenWireFormat;)V
       5: aload_0
       6: iload_2
       7: putfield      #21                 // Field port:I
      10: aload_0
      11: aconst_null
      12: putfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      15: aload_0
      16: new           #12                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_0
      24: invokevirtual #19                 // Method getProtocolName:()Ljava/lang/String;
      27: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #22                 // String Server@
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: putfield      #18                 // Field description:Ljava/lang/String;
      41: return

  public org.apache.activemq.transport.reliable.Replayer createReplayer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field replayEnabled:Z
       4: ifeq          12
       7: aload_0
       8: invokevirtual #23                 // Method getCommandChannel:()Lorg/apache/activemq/transport/udp/CommandChannel;
      11: areturn
      12: aconst_null
      13: areturn

  public void oneway(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
       6: invokevirtual #24                 // Method oneway:(Ljava/lang/Object;Ljava/net/SocketAddress;)V
       9: return

  public void oneway(java.lang.Object, java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #26,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          59
      11: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      14: new           #12                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #27                 // String Sending oneway from:
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #29                 // String  to target:
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #30                 // String  command:
      44: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      59: aload_0
      60: invokevirtual #32                 // Method checkStarted:()V
      63: aload_0
      64: getfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
      67: aload_1
      68: checkcast     #34                 // class org/apache/activemq/command/Command
      71: aload_2
      72: invokeinterface #35,  3           // InterfaceMethod org/apache/activemq/transport/udp/CommandChannel.write:(Lorg/apache/activemq/command/Command;Ljava/net/SocketAddress;)V
      77: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #18                 // Field description:Ljava/lang/String;
       4: ifnull        32
       7: new           #12                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: getfield      #18                 // Field description:Ljava/lang/String;
      18: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #21                 // Field port:I
      25: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn
      32: new           #12                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      39: aload_0
      40: invokevirtual #37                 // Method getProtocolUriScheme:()Ljava/lang/String;
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      50: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #16                 // String @
      55: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #21                 // Field port:I
      62: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: areturn

  public void run();
    Code:
       0: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #12                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #38                 // String Consumer thread starting for:
      12: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: invokevirtual #39                 // Method toString:()Ljava/lang/String;
      19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      30: aload_0
      31: invokevirtual #41                 // Method isStopped:()Z
      34: ifne          377
      37: aload_0
      38: getfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
      41: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/transport/udp/CommandChannel.read:()Lorg/apache/activemq/command/Command;
      46: astore_1
      47: aload_0
      48: aload_1
      49: invokevirtual #43                 // Method doConsume:(Ljava/lang/Object;)V
      52: goto          30
      55: astore_1
      56: aload_0
      57: invokevirtual #45                 // Method stop:()V
      60: goto          106
      63: astore_2
      64: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      67: new           #12                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #47                 // String Caught in:
      76: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: ldc           #48                 // String  while closing:
      85: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_2
      89: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: ldc           #49                 // String . Now Closed
      94: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: aload_2
     101: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: goto          30
     109: astore_1
     110: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     113: new           #12                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #52                 // String Socket closed:
     122: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: aload_1
     133: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     138: aload_0
     139: invokevirtual #45                 // Method stop:()V
     142: goto          188
     145: astore_2
     146: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     149: new           #12                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #47                 // String Caught in:
     158: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_0
     162: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     165: ldc           #48                 // String  while closing:
     167: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_2
     171: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: ldc           #49                 // String . Now Closed
     176: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: aload_2
     183: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     188: goto          30
     191: astore_1
     192: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     195: new           #12                 // class java/lang/StringBuilder
     198: dup
     199: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     202: ldc           #52                 // String Socket closed:
     204: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: aload_1
     208: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     211: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     214: aload_1
     215: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     220: aload_0
     221: invokevirtual #45                 // Method stop:()V
     224: goto          270
     227: astore_2
     228: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     231: new           #12                 // class java/lang/StringBuilder
     234: dup
     235: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     238: ldc           #47                 // String Caught in:
     240: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: aload_0
     244: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     247: ldc           #48                 // String  while closing:
     249: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: aload_2
     253: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     256: ldc           #49                 // String . Now Closed
     258: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: aload_2
     265: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     270: goto          30
     273: astore_1
     274: aload_0
     275: invokevirtual #45                 // Method stop:()V
     278: goto          324
     281: astore_2
     282: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     285: new           #12                 // class java/lang/StringBuilder
     288: dup
     289: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     292: ldc           #47                 // String Caught in:
     294: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: aload_0
     298: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     301: ldc           #48                 // String  while closing:
     303: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     306: aload_2
     307: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     310: ldc           #49                 // String . Now Closed
     312: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     318: aload_2
     319: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     324: aload_1
     325: instanceof    #55                 // class java/io/IOException
     328: ifeq          342
     331: aload_0
     332: aload_1
     333: checkcast     #55                 // class java/io/IOException
     336: invokevirtual #56                 // Method onException:(Ljava/io/IOException;)V
     339: goto          374
     342: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     345: new           #12                 // class java/lang/StringBuilder
     348: dup
     349: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     352: ldc           #57                 // String Caught:
     354: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     357: aload_1
     358: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     361: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     364: aload_1
     365: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     370: aload_1
     371: invokevirtual #59                 // Method java/lang/Exception.printStackTrace:()V
     374: goto          30
     377: return
    Exception table:
       from    to  target type
          37    52    55   Class java/nio/channels/AsynchronousCloseException
          56    60    63   Class java/lang/Exception
          37    52   109   Class java/net/SocketException
         138   142   145   Class java/lang/Exception
          37    52   191   Class java/io/EOFException
         220   224   227   Class java/lang/Exception
          37    52   273   Class java/lang/Exception
         274   278   281   Class java/lang/Exception

  public void setTargetEndpoint(org.apache.activemq.command.Endpoint);
    Code:
       0: aload_1
       1: instanceof    #60                 // class org/apache/activemq/transport/udp/DatagramEndpoint
       4: ifeq          51
       7: aload_1
       8: checkcast     #60                 // class org/apache/activemq/transport/udp/DatagramEndpoint
      11: astore_2
      12: aload_2
      13: invokevirtual #61                 // Method org/apache/activemq/transport/udp/DatagramEndpoint.getAddress:()Ljava/net/SocketAddress;
      16: astore_3
      17: aload_3
      18: ifnull        51
      21: aload_0
      22: getfield      #62                 // Field originalTargetAddress:Ljava/net/SocketAddress;
      25: ifnonnull     36
      28: aload_0
      29: aload_0
      30: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      33: putfield      #62                 // Field originalTargetAddress:Ljava/net/SocketAddress;
      36: aload_0
      37: aload_3
      38: putfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      41: aload_0
      42: getfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
      45: aload_3
      46: invokeinterface #63,  2           // InterfaceMethod org/apache/activemq/transport/udp/CommandChannel.setTargetAddress:(Ljava/net/SocketAddress;)V
      51: return

  public boolean isTrace();
    Code:
       0: aload_0
       1: getfield      #64                 // Field trace:Z
       4: ireturn

  public void setTrace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field trace:Z
       5: return

  public int getDatagramSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field datagramSize:I
       4: ireturn

  public void setDatagramSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field datagramSize:I
       5: return

  public boolean isUseLocalHost();
    Code:
       0: aload_0
       1: getfield      #6                  // Field useLocalHost:Z
       4: ireturn

  public void setUseLocalHost(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field useLocalHost:Z
       5: return

  public org.apache.activemq.transport.udp.CommandChannel getCommandChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #65                 // Method createCommandChannel:()Lorg/apache/activemq/transport/udp/CommandChannel;
      12: putfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
      15: aload_0
      16: getfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
      19: areturn

  public void setCommandChannel(org.apache.activemq.transport.udp.CommandDatagramChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
       5: return

  public org.apache.activemq.transport.reliable.ReplayStrategy getReplayStrategy();
    Code:
       0: aload_0
       1: getfield      #4                  // Field replayStrategy:Lorg/apache/activemq/transport/reliable/ReplayStrategy;
       4: areturn

  public void setReplayStrategy(org.apache.activemq.transport.reliable.ReplayStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field replayStrategy:Lorg/apache/activemq/transport/reliable/ReplayStrategy;
       5: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #21                 // Field port:I
       4: ireturn

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field port:I
       5: return

  public int getMinmumWireFormatVersion();
    Code:
       0: aload_0
       1: getfield      #66                 // Field minmumWireFormatVersion:I
       4: ireturn

  public void setMinmumWireFormatVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field minmumWireFormatVersion:I
       5: return

  public org.apache.activemq.openwire.OpenWireFormat getWireFormat();
    Code:
       0: aload_0
       1: getfield      #8                  // Field wireFormat:Lorg/apache/activemq/openwire/OpenWireFormat;
       4: areturn

  public org.apache.activemq.util.IntSequenceGenerator getSequenceGenerator();
    Code:
       0: aload_0
       1: getfield      #67                 // Field sequenceGenerator:Lorg/apache/activemq/util/IntSequenceGenerator;
       4: ifnonnull     18
       7: aload_0
       8: new           #68                 // class org/apache/activemq/util/IntSequenceGenerator
      11: dup
      12: invokespecial #69                 // Method org/apache/activemq/util/IntSequenceGenerator."<init>":()V
      15: putfield      #67                 // Field sequenceGenerator:Lorg/apache/activemq/util/IntSequenceGenerator;
      18: aload_0
      19: getfield      #67                 // Field sequenceGenerator:Lorg/apache/activemq/util/IntSequenceGenerator;
      22: areturn

  public void setSequenceGenerator(org.apache.activemq.util.IntSequenceGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field sequenceGenerator:Lorg/apache/activemq/util/IntSequenceGenerator;
       5: return

  public boolean isReplayEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field replayEnabled:Z
       4: ireturn

  public void setReplayEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field replayEnabled:Z
       5: return

  public org.apache.activemq.transport.udp.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #70                 // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
       4: ifnonnull     18
       7: aload_0
       8: new           #71                 // class org/apache/activemq/transport/udp/DefaultBufferPool
      11: dup
      12: invokespecial #72                 // Method org/apache/activemq/transport/udp/DefaultBufferPool."<init>":()V
      15: putfield      #70                 // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
      18: aload_0
      19: getfield      #70                 // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
      22: areturn

  public void setBufferPool(org.apache.activemq.transport.udp.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
       5: return

  public org.apache.activemq.transport.reliable.ReplayBuffer getReplayBuffer();
    Code:
       0: aload_0
       1: getfield      #73                 // Field replayBuffer:Lorg/apache/activemq/transport/reliable/ReplayBuffer;
       4: areturn

  public void setReplayBuffer(org.apache.activemq.transport.reliable.ReplayBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field replayBuffer:Lorg/apache/activemq/transport/reliable/ReplayBuffer;
       5: aload_0
       6: invokevirtual #23                 // Method getCommandChannel:()Lorg/apache/activemq/transport/udp/CommandChannel;
       9: aload_1
      10: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/transport/udp/CommandChannel.setReplayBuffer:(Lorg/apache/activemq/transport/reliable/ReplayBuffer;)V
      15: return

  protected java.net.InetSocketAddress createAddress(java.net.URI) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method java/net/URI.getHost:()Ljava/lang/String;
       5: invokevirtual #76                 // Method resolveHostName:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: new           #77                 // class java/net/InetSocketAddress
      12: dup
      13: aload_2
      14: aload_1
      15: invokevirtual #78                 // Method java/net/URI.getPort:()I
      18: invokespecial #79                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      21: areturn

  protected java.lang.String resolveHostName(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: invokestatic  #80                 // Method org/apache/activemq/util/InetAddressUtil.getLocalHostName:()Ljava/lang/String;
       3: astore_2
       4: aload_2
       5: ifnull        26
       8: aload_0
       9: invokevirtual #81                 // Method isUseLocalHost:()Z
      12: ifeq          26
      15: aload_2
      16: aload_1
      17: invokevirtual #82                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          26
      23: ldc           #83                 // String localhost
      25: areturn
      26: aload_1
      27: areturn

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getCommandChannel:()Lorg/apache/activemq/transport/udp/CommandChannel;
       4: invokeinterface #84,  1           // InterfaceMethod org/apache/activemq/transport/udp/CommandChannel.start:()V
       9: aload_0
      10: invokespecial #85                 // Method org/apache/activemq/transport/TransportThreadSupport.doStart:()V
      13: return

  protected org.apache.activemq.transport.udp.CommandChannel createCommandChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method createLocalAddress:()Ljava/net/SocketAddress;
       4: astore_1
       5: aload_0
       6: invokestatic  #87                 // Method java/nio/channels/DatagramChannel.open:()Ljava/nio/channels/DatagramChannel;
       9: putfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
      12: aload_0
      13: aload_0
      14: aload_0
      15: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
      18: aload_0
      19: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      22: invokevirtual #89                 // Method connect:(Ljava/nio/channels/DatagramChannel;Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;
      25: putfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
      28: aload_0
      29: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
      32: invokevirtual #90                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      35: astore_2
      36: aload_0
      37: aload_2
      38: aload_1
      39: invokevirtual #91                 // Method bind:(Ljava/net/DatagramSocket;Ljava/net/SocketAddress;)V
      42: aload_0
      43: getfield      #21                 // Field port:I
      46: ifne          57
      49: aload_0
      50: aload_2
      51: invokevirtual #92                 // Method java/net/DatagramSocket.getLocalPort:()I
      54: putfield      #21                 // Field port:I
      57: aload_0
      58: invokevirtual #93                 // Method createCommandDatagramChannel:()Lorg/apache/activemq/transport/udp/CommandChannel;
      61: areturn

  protected org.apache.activemq.transport.udp.CommandChannel createCommandDatagramChannel();
    Code:
       0: new           #94                 // class org/apache/activemq/transport/udp/CommandDatagramChannel
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #95                 // Method getWireFormat:()Lorg/apache/activemq/openwire/OpenWireFormat;
       9: aload_0
      10: invokevirtual #96                 // Method getDatagramSize:()I
      13: aload_0
      14: invokevirtual #97                 // Method getTargetAddress:()Ljava/net/SocketAddress;
      17: aload_0
      18: invokevirtual #98                 // Method createDatagramHeaderMarshaller:()Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;
      21: aload_0
      22: invokevirtual #99                 // Method getChannel:()Ljava/nio/channels/DatagramChannel;
      25: aload_0
      26: invokevirtual #100                // Method getBufferPool:()Lorg/apache/activemq/transport/udp/ByteBufferPool;
      29: invokespecial #101                // Method org/apache/activemq/transport/udp/CommandDatagramChannel."<init>":(Lorg/apache/activemq/transport/udp/UdpTransport;Lorg/apache/activemq/openwire/OpenWireFormat;ILjava/net/SocketAddress;Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;Ljava/nio/channels/DatagramChannel;Lorg/apache/activemq/transport/udp/ByteBufferPool;)V
      32: areturn

  protected void bind(java.net.DatagramSocket, java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
       4: iconst_1
       5: invokevirtual #102                // Method java/nio/channels/DatagramChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
       8: pop
       9: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      12: invokeinterface #26,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      17: ifeq          47
      20: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      23: new           #12                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #103                // String Binding to address:
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      47: iconst_0
      48: istore_3
      49: iload_3
      50: bipush        50
      52: if_icmpge     100
      55: aload_1
      56: aload_2
      57: invokevirtual #104                // Method java/net/DatagramSocket.bind:(Ljava/net/SocketAddress;)V
      60: return
      61: astore        4
      63: iload_3
      64: iconst_1
      65: iadd
      66: bipush        50
      68: if_icmpne     74
      71: aload         4
      73: athrow
      74: ldc2_w        #106                // long 100l
      77: invokestatic  #108                // Method java/lang/Thread.sleep:(J)V
      80: goto          94
      83: astore        5
      85: invokestatic  #110                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      88: invokevirtual #111                // Method java/lang/Thread.interrupt:()V
      91: aload         4
      93: athrow
      94: iinc          3, 1
      97: goto          49
     100: return
    Exception table:
       from    to  target type
          55    60    61   Class java/net/BindException
          74    80    83   Class java/lang/InterruptedException

  protected java.nio.channels.DatagramChannel connect(java.nio.channels.DatagramChannel, java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_1
       1: areturn

  protected java.net.SocketAddress createLocalAddress();
    Code:
       0: new           #77                 // class java/net/InetSocketAddress
       3: dup
       4: aload_0
       5: getfield      #21                 // Field port:I
       8: invokespecial #112                // Method java/net/InetSocketAddress."<init>":(I)V
      11: areturn

  protected void doStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
       4: ifnull        14
       7: aload_0
       8: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
      11: invokevirtual #113                // Method java/nio/channels/DatagramChannel.close:()V
      14: return

  protected org.apache.activemq.transport.udp.DatagramHeaderMarshaller createDatagramHeaderMarshaller();
    Code:
       0: new           #114                // class org/apache/activemq/transport/udp/DatagramHeaderMarshaller
       3: dup
       4: invokespecial #115                // Method org/apache/activemq/transport/udp/DatagramHeaderMarshaller."<init>":()V
       7: areturn

  protected java.lang.String getProtocolName();
    Code:
       0: ldc           #116                // String Udp
       2: areturn

  protected java.lang.String getProtocolUriScheme();
    Code:
       0: ldc           #117                // String udp://
       2: areturn

  protected java.net.SocketAddress getTargetAddress();
    Code:
       0: aload_0
       1: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
       4: areturn

  protected java.nio.channels.DatagramChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
       4: areturn

  protected void setChannel(java.nio.channels.DatagramChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
       5: return

  public java.net.InetSocketAddress getLocalSocketAddress();
    Code:
       0: aload_0
       1: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #88                 // Field channel:Ljava/nio/channels/DatagramChannel;
      13: invokevirtual #90                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      16: invokevirtual #118                // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      19: checkcast     #77                 // class java/net/InetSocketAddress
      22: areturn

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
       4: ifnull        30
       7: new           #12                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #119                // String
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #11                 // Field targetAddress:Ljava/net/SocketAddress;
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
      30: aconst_null
      31: areturn

  public int getReceiveCounter();
    Code:
       0: aload_0
       1: getfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #33                 // Field commandChannel:Lorg/apache/activemq/transport/udp/CommandChannel;
      13: invokeinterface #120,  1          // InterfaceMethod org/apache/activemq/transport/udp/CommandChannel.getReceiveCounter:()I
      18: ireturn

  static {};
    Code:
       0: ldc_w         #121                // class org/apache/activemq/transport/udp/UdpTransport
       3: invokestatic  #122                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
