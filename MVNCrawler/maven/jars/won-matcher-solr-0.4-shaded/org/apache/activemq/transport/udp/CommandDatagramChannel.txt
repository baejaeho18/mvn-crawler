Compiled from "CommandDatagramChannel.java"
public class org.apache.activemq.transport.udp.CommandDatagramChannel extends org.apache.activemq.transport.udp.CommandChannelSupport {
  private static final org.slf4j.Logger LOG;

  private java.nio.channels.DatagramChannel channel;

  private org.apache.activemq.transport.udp.ByteBufferPool bufferPool;

  private java.lang.Object readLock;

  private java.nio.ByteBuffer readBuffer;

  private java.lang.Object writeLock;

  private int defaultMarshalBufferSize;

  private volatile int receiveCounter;

  public org.apache.activemq.transport.udp.CommandDatagramChannel(org.apache.activemq.transport.udp.UdpTransport, org.apache.activemq.openwire.OpenWireFormat, int, java.net.SocketAddress, org.apache.activemq.transport.udp.DatagramHeaderMarshaller, java.nio.channels.DatagramChannel, org.apache.activemq.transport.udp.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method org/apache/activemq/transport/udp/CommandChannelSupport."<init>":(Lorg/apache/activemq/transport/udp/UdpTransport;Lorg/apache/activemq/openwire/OpenWireFormat;ILjava/net/SocketAddress;Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;)V
      11: aload_0
      12: new           #2                  // class java/lang/Object
      15: dup
      16: invokespecial #3                  // Method java/lang/Object."<init>":()V
      19: putfield      #4                  // Field readLock:Ljava/lang/Object;
      22: aload_0
      23: new           #2                  // class java/lang/Object
      26: dup
      27: invokespecial #3                  // Method java/lang/Object."<init>":()V
      30: putfield      #5                  // Field writeLock:Ljava/lang/Object;
      33: aload_0
      34: ldc           #6                  // int 65536
      36: putfield      #7                  // Field defaultMarshalBufferSize:I
      39: aload_0
      40: aload         6
      42: putfield      #8                  // Field channel:Ljava/nio/channels/DatagramChannel;
      45: aload_0
      46: aload         7
      48: putfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
      51: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
       4: aload_0
       5: getfield      #10                 // Field datagramSize:I
       8: invokeinterface #11,  2           // InterfaceMethod org/apache/activemq/transport/udp/ByteBufferPool.setDefaultSize:(I)V
      13: aload_0
      14: getfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
      17: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/transport/udp/ByteBufferPool.start:()V
      22: aload_0
      23: aload_0
      24: getfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
      27: invokeinterface #13,  1           // InterfaceMethod org/apache/activemq/transport/udp/ByteBufferPool.borrowBuffer:()Ljava/nio/ByteBuffer;
      32: putfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      35: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/transport/udp/ByteBufferPool.stop:()V
       9: return

  public org.apache.activemq.command.Command read() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aload_0
       5: getfield      #4                  // Field readLock:Ljava/lang/Object;
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: getfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      15: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      18: pop
      19: aload_0
      20: getfield      #8                  // Field channel:Ljava/nio/channels/DatagramChannel;
      23: aload_0
      24: getfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #17                 // Method java/nio/channels/DatagramChannel.receive:(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;
      30: astore        4
      32: aload_0
      33: getfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      36: invokevirtual #18                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: getfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      44: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:()I
      47: ifne          53
      50: goto          11
      53: aload_0
      54: dup
      55: getfield      #20                 // Field receiveCounter:I
      58: iconst_1
      59: iadd
      60: putfield      #20                 // Field receiveCounter:I
      63: aload_0
      64: getfield      #21                 // Field headerMarshaller:Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;
      67: aload_0
      68: getfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      71: aload         4
      73: invokevirtual #22                 // Method org/apache/activemq/transport/udp/DatagramHeaderMarshaller.createEndpoint:(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)Lorg/apache/activemq/command/Endpoint;
      76: astore_2
      77: aload_0
      78: getfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      81: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
      84: istore        5
      86: iload         5
      88: newarray       byte
      90: astore        6
      92: aload_0
      93: getfield      #14                 // Field readBuffer:Ljava/nio/ByteBuffer;
      96: aload         6
      98: invokevirtual #24                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     101: pop
     102: new           #25                 // class java/io/DataInputStream
     105: dup
     106: new           #26                 // class org/apache/activemq/util/ByteArrayInputStream
     109: dup
     110: aload         6
     112: invokespecial #27                 // Method org/apache/activemq/util/ByteArrayInputStream."<init>":([B)V
     115: invokespecial #28                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     118: astore        7
     120: aload_0
     121: getfield      #29                 // Field wireFormat:Lorg/apache/activemq/openwire/OpenWireFormat;
     124: aload         7
     126: invokevirtual #30                 // Method org/apache/activemq/openwire/OpenWireFormat.unmarshal:(Ljava/io/DataInput;)Ljava/lang/Object;
     129: checkcast     #31                 // class org/apache/activemq/command/Command
     132: astore_1
     133: goto          136
     136: aload_3
     137: monitorexit
     138: goto          148
     141: astore        8
     143: aload_3
     144: monitorexit
     145: aload         8
     147: athrow
     148: aload_1
     149: ifnull        218
     152: aload_1
     153: aload_2
     154: invokeinterface #32,  2           // InterfaceMethod org/apache/activemq/command/Command.setFrom:(Lorg/apache/activemq/command/Endpoint;)V
     159: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
     162: invokeinterface #34,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     167: ifeq          218
     170: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
     173: new           #35                 // class java/lang/StringBuilder
     176: dup
     177: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     180: ldc           #37                 // String Channel:
     182: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_0
     186: getfield      #39                 // Field name:Ljava/lang/String;
     189: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: ldc           #40                 // String  received from:
     194: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_2
     198: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     201: ldc           #42                 // String  about to process:
     203: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_1
     207: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     210: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     218: aload_1
     219: areturn
    Exception table:
       from    to  target type
          11   138   141   any
         141   145   141   any

  public void write(org.apache.activemq.command.Command, java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: new           #45                 // class org/apache/activemq/util/ByteArrayOutputStream
      10: dup
      11: aload_0
      12: getfield      #7                  // Field defaultMarshalBufferSize:I
      15: invokespecial #46                 // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":(I)V
      18: astore        4
      20: aload_0
      21: getfield      #29                 // Field wireFormat:Lorg/apache/activemq/openwire/OpenWireFormat;
      24: aload_1
      25: new           #47                 // class java/io/DataOutputStream
      28: dup
      29: aload         4
      31: invokespecial #48                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      34: invokevirtual #49                 // Method org/apache/activemq/openwire/OpenWireFormat.marshal:(Ljava/lang/Object;Ljava/io/DataOutput;)V
      37: aload         4
      39: invokevirtual #50                 // Method org/apache/activemq/util/ByteArrayOutputStream.toByteArray:()[B
      42: astore        5
      44: aload         5
      46: arraylength
      47: istore        6
      49: aload_0
      50: getfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
      53: invokeinterface #13,  1           // InterfaceMethod org/apache/activemq/transport/udp/ByteBufferPool.borrowBuffer:()Ljava/nio/ByteBuffer;
      58: astore        7
      60: aload         7
      62: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      65: pop
      66: aload_0
      67: getfield      #21                 // Field headerMarshaller:Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;
      70: aload_1
      71: aload         7
      73: invokevirtual #51                 // Method org/apache/activemq/transport/udp/DatagramHeaderMarshaller.writeHeader:(Lorg/apache/activemq/command/Command;Ljava/nio/ByteBuffer;)V
      76: iload         6
      78: aload         7
      80: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
      83: if_icmple     375
      86: iconst_0
      87: istore        8
      89: iconst_0
      90: istore        9
      92: aload         5
      94: arraylength
      95: istore        10
      97: iconst_0
      98: istore        11
     100: iload         9
     102: ifne          372
     105: iload         11
     107: ifle          137
     110: aload_0
     111: getfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
     114: invokeinterface #13,  1           // InterfaceMethod org/apache/activemq/transport/udp/ByteBufferPool.borrowBuffer:()Ljava/nio/ByteBuffer;
     119: astore        7
     121: aload         7
     123: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     126: pop
     127: aload_0
     128: getfield      #21                 // Field headerMarshaller:Lorg/apache/activemq/transport/udp/DatagramHeaderMarshaller;
     131: aload_1
     132: aload         7
     134: invokevirtual #51                 // Method org/apache/activemq/transport/udp/DatagramHeaderMarshaller.writeHeader:(Lorg/apache/activemq/command/Command;Ljava/nio/ByteBuffer;)V
     137: aload         7
     139: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
     142: istore        12
     144: aconst_null
     145: astore        13
     147: aload_0
     148: getfield      #29                 // Field wireFormat:Lorg/apache/activemq/openwire/OpenWireFormat;
     151: invokevirtual #52                 // Method org/apache/activemq/openwire/OpenWireFormat.isTightEncodingEnabled:()Z
     154: ifeq          172
     157: new           #53                 // class org/apache/activemq/openwire/BooleanStream
     160: dup
     161: invokespecial #54                 // Method org/apache/activemq/openwire/BooleanStream."<init>":()V
     164: astore        13
     166: aload         13
     168: iconst_1
     169: invokevirtual #55                 // Method org/apache/activemq/openwire/BooleanStream.writeBoolean:(Z)V
     172: iinc          12, -9
     175: aload         13
     177: ifnull        193
     180: iload         12
     182: aload         13
     184: invokevirtual #56                 // Method org/apache/activemq/openwire/BooleanStream.marshalledSize:()I
     187: isub
     188: istore        12
     190: goto          196
     193: iinc          12, -1
     196: aload_0
     197: getfield      #29                 // Field wireFormat:Lorg/apache/activemq/openwire/OpenWireFormat;
     200: invokevirtual #57                 // Method org/apache/activemq/openwire/OpenWireFormat.isSizePrefixDisabled:()Z
     203: ifne          217
     206: aload         7
     208: iload         12
     210: invokevirtual #58                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     213: pop
     214: iinc          12, -4
     217: iload         8
     219: iload         12
     221: iadd
     222: iload         10
     224: if_icmplt     231
     227: iconst_1
     228: goto          232
     231: iconst_0
     232: istore        9
     234: iload         12
     236: iload         8
     238: iadd
     239: iload         10
     241: if_icmple     251
     244: iload         10
     246: iload         8
     248: isub
     249: istore        12
     251: iload         9
     253: ifeq          267
     256: aload         7
     258: bipush        61
     260: invokevirtual #59                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     263: pop
     264: goto          275
     267: aload         7
     269: bipush        60
     271: invokevirtual #59                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     274: pop
     275: aload         13
     277: ifnull        287
     280: aload         13
     282: aload         7
     284: invokevirtual #60                 // Method org/apache/activemq/openwire/BooleanStream.marshal:(Ljava/nio/ByteBuffer;)V
     287: aload_1
     288: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/command/Command.getCommandId:()I
     293: istore        14
     295: iload         11
     297: ifle          309
     300: aload_0
     301: getfield      #62                 // Field sequenceGenerator:Lorg/apache/activemq/util/IntSequenceGenerator;
     304: invokevirtual #63                 // Method org/apache/activemq/util/IntSequenceGenerator.getNextSequenceId:()I
     307: istore        14
     309: aload         7
     311: iload         14
     313: invokevirtual #58                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     316: pop
     317: aload         13
     319: ifnonnull     329
     322: aload         7
     324: iconst_1
     325: invokevirtual #59                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     328: pop
     329: aload         7
     331: iload         12
     333: invokevirtual #58                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     336: pop
     337: aload         7
     339: aload         5
     341: iload         8
     343: iload         12
     345: invokevirtual #64                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     348: pop
     349: iload         8
     351: iload         12
     353: iadd
     354: istore        8
     356: aload_0
     357: iload         14
     359: aload_2
     360: aload         7
     362: iconst_0
     363: invokevirtual #65                 // Method sendWriteBuffer:(ILjava/net/SocketAddress;Ljava/nio/ByteBuffer;Z)V
     366: iinc          11, 1
     369: goto          100
     372: goto          397
     375: aload         7
     377: aload         5
     379: invokevirtual #66                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     382: pop
     383: aload_0
     384: aload_1
     385: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/command/Command.getCommandId:()I
     390: aload_2
     391: aload         7
     393: iconst_0
     394: invokevirtual #65                 // Method sendWriteBuffer:(ILjava/net/SocketAddress;Ljava/nio/ByteBuffer;Z)V
     397: aload_3
     398: monitorexit
     399: goto          409
     402: astore        15
     404: aload_3
     405: monitorexit
     406: aload         15
     408: athrow
     409: return
    Exception table:
       from    to  target type
           7   399   402   any
         402   406   402   any

  public org.apache.activemq.transport.udp.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
       4: areturn

  public void setBufferPool(org.apache.activemq.transport.udp.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field bufferPool:Lorg/apache/activemq/transport/udp/ByteBufferPool;
       5: return

  protected void sendWriteBuffer(int, java.net.SocketAddress, java.nio.ByteBuffer, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getReplayBuffer:()Lorg/apache/activemq/transport/reliable/ReplayBuffer;
       4: astore        5
       6: aload         5
       8: ifnull        25
      11: iload         4
      13: ifne          25
      16: aload         5
      18: iload_1
      19: aload_3
      20: invokeinterface #68,  3           // InterfaceMethod org/apache/activemq/transport/reliable/ReplayBuffer.addBuffer:(ILjava/lang/Object;)V
      25: aload_3
      26: invokevirtual #18                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      29: pop
      30: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
      33: invokeinterface #34,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          113
      41: iload         4
      43: ifeq          51
      46: ldc           #69                 // String REDELIVERING
      48: goto          53
      51: ldc           #70                 // String sending
      53: astore        6
      55: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
      58: new           #35                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #37                 // String Channel:
      67: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #39                 // Field name:Ljava/lang/String;
      74: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #71                 // String
      79: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         6
      84: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #72                 // String  datagram:
      89: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: iload_1
      93: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: ldc           #74                 // String  to:
      98: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_2
     102: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     113: aload_0
     114: getfield      #8                  // Field channel:Ljava/nio/channels/DatagramChannel;
     117: aload_3
     118: aload_2
     119: invokevirtual #75                 // Method java/nio/channels/DatagramChannel.send:(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I
     122: pop
     123: return

  public void sendBuffer(int, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        23
       4: aload_2
       5: checkcast     #76                 // class java/nio/ByteBuffer
       8: astore_3
       9: aload_0
      10: iload_1
      11: aload_0
      12: invokevirtual #77                 // Method getReplayAddress:()Ljava/net/SocketAddress;
      15: aload_3
      16: iconst_1
      17: invokevirtual #65                 // Method sendWriteBuffer:(ILjava/net/SocketAddress;Ljava/nio/ByteBuffer;Z)V
      20: goto          66
      23: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
      26: invokeinterface #78,  1           // InterfaceMethod org/slf4j/Logger.isWarnEnabled:()Z
      31: ifeq          66
      34: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
      37: new           #35                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #79                 // String Request for buffer:
      46: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_1
      50: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #80                 // String  is no longer present
      55: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #81,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      66: return

  public int getReceiveCounter();
    Code:
       0: aload_0
       1: getfield      #20                 // Field receiveCounter:I
       4: ireturn

  static {};
    Code:
       0: ldc_w         #82                 // class org/apache/activemq/transport/udp/CommandDatagramChannel
       3: invokestatic  #83                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
