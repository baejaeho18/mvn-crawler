Compiled from "VMTransport.java"
public class org.apache.activemq.transport.vm.VMTransport implements org.apache.activemq.transport.Transport,org.apache.activemq.thread.Task {
  protected static final org.slf4j.Logger LOG;

  private static final java.util.concurrent.atomic.AtomicLong NEXT_ID;

  protected org.apache.activemq.transport.vm.VMTransport peer;

  protected org.apache.activemq.transport.TransportListener transportListener;

  protected boolean marshal;

  protected boolean network;

  protected boolean async;

  protected int asyncQueueDepth;

  protected final java.net.URI location;

  protected final long id;

  private java.util.concurrent.LinkedBlockingQueue<java.lang.Object> messageQueue;

  private org.apache.activemq.thread.TaskRunnerFactory taskRunnerFactory;

  private org.apache.activemq.thread.TaskRunner taskRunner;

  protected final java.util.concurrent.atomic.AtomicBoolean started;

  protected final java.util.concurrent.atomic.AtomicBoolean disposed;

  private volatile int receiveCounter;

  public org.apache.activemq.transport.vm.VMTransport(java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field async:Z
       9: aload_0
      10: sipush        2000
      13: putfield      #3                  // Field asyncQueueDepth:I
      16: aload_0
      17: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      24: putfield      #6                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
      31: dup
      32: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      35: putfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: aload_0
      39: aload_1
      40: putfield      #8                  // Field location:Ljava/net/URI;
      43: aload_0
      44: getstatic     #9                  // Field NEXT_ID:Ljava/util/concurrent/atomic/AtomicLong;
      47: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      50: putfield      #11                 // Field id:J
      53: return

  public void setPeer(org.apache.activemq.transport.vm.VMTransport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
       5: return

  public void oneway(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: new           #14                 // class org/apache/activemq/transport/TransportDisposedIOException
      13: dup
      14: ldc           #15                 // String Transport disposed.
      16: invokespecial #16                 // Method org/apache/activemq/transport/TransportDisposedIOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
      24: ifnonnull     37
      27: new           #17                 // class java/io/IOException
      30: dup
      31: ldc           #18                 // String Peer not connected.
      33: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
      41: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      47: ifeq          88
      50: new           #14                 // class org/apache/activemq/transport/TransportDisposedIOException
      53: dup
      54: new           #20                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #22                 // String Peer (
      63: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
      70: invokevirtual #24                 // Method toString:()Ljava/lang/String;
      73: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #25                 // String ) disposed.
      78: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #16                 // Method org/apache/activemq/transport/TransportDisposedIOException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
      92: getfield      #2                  // Field async:Z
      95: ifne          111
      98: aload_0
      99: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
     102: getfield      #6                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     105: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     108: ifne          130
     111: aload_0
     112: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
     115: invokevirtual #27                 // Method getMessageQueue:()Ljava/util/concurrent/LinkedBlockingQueue;
     118: aload_1
     119: invokevirtual #28                 // Method java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
     122: aload_0
     123: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
     126: invokevirtual #29                 // Method wakeup:()V
     129: return
     130: goto          154
     133: astore_2
     134: new           #31                 // class java/io/InterruptedIOException
     137: dup
     138: aload_2
     139: invokevirtual #32                 // Method java/lang/InterruptedException.getMessage:()Ljava/lang/String;
     142: invokespecial #33                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
     145: astore_3
     146: aload_3
     147: aload_2
     148: invokevirtual #34                 // Method java/io/InterruptedIOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     151: pop
     152: aload_3
     153: athrow
     154: aload_0
     155: aload_0
     156: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
     159: aload_0
     160: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
     163: getfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
     166: aload_1
     167: invokevirtual #36                 // Method dispatch:(Lorg/apache/activemq/transport/vm/VMTransport;Ljava/util/concurrent/BlockingQueue;Ljava/lang/Object;)V
     170: return
    Exception table:
       from    to  target type
          37   129   133   Class java/lang/InterruptedException

  public void dispatch(org.apache.activemq.transport.vm.VMTransport, java.util.concurrent.BlockingQueue<java.lang.Object>, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method getTransportListener:()Lorg/apache/activemq/transport/TransportListener;
       4: astore        4
       6: aload         4
       8: ifnull        103
      11: aload_1
      12: getfield      #6                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: dup
      16: astore        5
      18: monitorenter
      19: aload_2
      20: ifnull        55
      23: aload_2
      24: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      29: ifne          55
      32: aload_1
      33: invokevirtual #39                 // Method isDisposed:()Z
      36: ifne          55
      39: aload_0
      40: aload_1
      41: aload         4
      43: aload_2
      44: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      49: invokevirtual #41                 // Method doDispatch:(Lorg/apache/activemq/transport/vm/VMTransport;Lorg/apache/activemq/transport/TransportListener;Ljava/lang/Object;)V
      52: goto          19
      55: aload_1
      56: aconst_null
      57: putfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
      60: aload_3
      61: ifnull        89
      64: aload_0
      65: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      68: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      71: ifne          89
      74: aload_1
      75: invokevirtual #39                 // Method isDisposed:()Z
      78: ifne          89
      81: aload_0
      82: aload_1
      83: aload         4
      85: aload_3
      86: invokevirtual #41                 // Method doDispatch:(Lorg/apache/activemq/transport/vm/VMTransport;Lorg/apache/activemq/transport/TransportListener;Ljava/lang/Object;)V
      89: aload         5
      91: monitorexit
      92: goto          103
      95: astore        6
      97: aload         5
      99: monitorexit
     100: aload         6
     102: athrow
     103: return
    Exception table:
       from    to  target type
          19    92    95   any
          95   100    95   any

  public void doDispatch(org.apache.activemq.transport.vm.VMTransport, org.apache.activemq.transport.TransportListener, java.lang.Object);
    Code:
       0: aload_1
       1: dup
       2: getfield      #42                 // Field receiveCounter:I
       5: iconst_1
       6: iadd
       7: putfield      #42                 // Field receiveCounter:I
      10: aload_2
      11: aload_3
      12: invokeinterface #43,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onCommand:(Ljava/lang/Object;)V
      17: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
       4: ifnonnull     17
       7: new           #17                 // class java/io/IOException
      10: dup
      11: ldc           #45                 // String TransportListener not set.
      13: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field async:Z
      21: ifne          105
      24: aload_0
      25: getfield      #6                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: dup
      29: astore_1
      30: monitorenter
      31: aload_0
      32: getfield      #6                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      35: iconst_0
      36: iconst_1
      37: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      40: ifeq          90
      43: aload_0
      44: invokevirtual #27                 // Method getMessageQueue:()Ljava/util/concurrent/LinkedBlockingQueue;
      47: astore_2
      48: aload_2
      49: invokevirtual #47                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      52: dup
      53: astore_3
      54: ifnull        90
      57: aload_0
      58: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      61: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      64: ifne          90
      67: aload_0
      68: dup
      69: getfield      #42                 // Field receiveCounter:I
      72: iconst_1
      73: iadd
      74: putfield      #42                 // Field receiveCounter:I
      77: aload_0
      78: aload_0
      79: aload_0
      80: getfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
      83: aload_3
      84: invokevirtual #41                 // Method doDispatch:(Lorg/apache/activemq/transport/vm/VMTransport;Lorg/apache/activemq/transport/TransportListener;Ljava/lang/Object;)V
      87: goto          48
      90: aload_1
      91: monitorexit
      92: goto          102
      95: astore        4
      97: aload_1
      98: monitorexit
      99: aload         4
     101: athrow
     102: goto          121
     105: aload_0
     106: getfield      #6                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     109: iconst_0
     110: iconst_1
     111: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     114: ifeq          121
     117: aload_0
     118: invokevirtual #29                 // Method wakeup:()V
     121: return
    Exception table:
       from    to  target type
          31    92    95   any
          95    99    95   any

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          162
      12: aload_0
      13: getfield      #48                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      16: astore_1
      17: aload_0
      18: getfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
      21: astore_2
      22: aload_0
      23: aconst_null
      24: putfield      #48                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      27: aload_0
      28: aconst_null
      29: putfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
      32: aload_2
      33: ifnull        40
      36: aload_2
      37: invokevirtual #49                 // Method java/util/concurrent/LinkedBlockingQueue.clear:()V
      40: aload_1
      41: ifnull        63
      44: aload_1
      45: getstatic     #50                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      48: lconst_1
      49: invokevirtual #51                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      52: invokeinterface #52,  3           // InterfaceMethod org/apache/activemq/thread/TaskRunner.shutdown:(J)V
      57: goto          61
      60: astore_3
      61: aconst_null
      62: astore_1
      63: aload_0
      64: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
      67: getfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
      70: ifnull        143
      73: aload_0
      74: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
      77: getfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
      80: new           #54                 // class org/apache/activemq/command/ShutdownInfo
      83: dup
      84: invokespecial #55                 // Method org/apache/activemq/command/ShutdownInfo."<init>":()V
      87: invokeinterface #43,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onCommand:(Ljava/lang/Object;)V
      92: goto          96
      95: astore_3
      96: aload_0
      97: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
     100: getfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
     103: new           #14                 // class org/apache/activemq/transport/TransportDisposedIOException
     106: dup
     107: new           #20                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #56                 // String peer (
     116: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_0
     120: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: ldc           #58                 // String ) stopped.
     125: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #16                 // Method org/apache/activemq/transport/TransportDisposedIOException."<init>":(Ljava/lang/String;)V
     134: invokeinterface #59,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onException:(Ljava/io/IOException;)V
     139: goto          143
     142: astore_3
     143: aload_0
     144: getfield      #60                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     147: ifnull        162
     150: aload_0
     151: getfield      #60                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     154: invokevirtual #61                 // Method org/apache/activemq/thread/TaskRunnerFactory.shutdownNow:()V
     157: aload_0
     158: aconst_null
     159: putfield      #60                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
     162: return
    Exception table:
       from    to  target type
          44    57    60   Class java/lang/Exception
          73    92    95   Class java/lang/Exception
          96   139   142   Class java/lang/Exception

  protected void wakeup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field async:Z
       4: ifeq          40
       7: aload_0
       8: getfield      #6                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifeq          40
      17: aload_0
      18: invokevirtual #62                 // Method getTaskRunner:()Lorg/apache/activemq/thread/TaskRunner;
      21: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/thread/TaskRunner.wakeup:()V
      26: goto          40
      29: astore_1
      30: invokestatic  #64                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: invokevirtual #65                 // Method java/lang/Thread.interrupt:()V
      36: goto          40
      39: astore_1
      40: return
    Exception table:
       from    to  target type
          17    26    29   Class java/lang/InterruptedException
          17    26    39   Class org/apache/activemq/transport/TransportDisposedIOException

  public boolean iterate();
    Code:
       0: aload_0
       1: getfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
       4: astore_1
       5: aload_0
       6: invokevirtual #27                 // Method getMessageQueue:()Ljava/util/concurrent/LinkedBlockingQueue;
       9: astore_2
      10: goto          16
      13: astore_3
      14: iconst_0
      15: ireturn
      16: aload_2
      17: invokevirtual #47                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      20: astore_3
      21: aload_3
      22: ifnull        65
      25: aload_0
      26: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      32: ifne          65
      35: aload_1
      36: aload_3
      37: invokeinterface #43,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onCommand:(Ljava/lang/Object;)V
      42: aload_2
      43: invokevirtual #66                 // Method java/util/concurrent/LinkedBlockingQueue.isEmpty:()Z
      46: ifne          63
      49: aload_0
      50: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      53: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn
      65: aload_0
      66: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      69: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      72: ifeq          79
      75: aload_2
      76: invokevirtual #49                 // Method java/util/concurrent/LinkedBlockingQueue.clear:()V
      79: iconst_0
      80: ireturn
    Exception table:
       from    to  target type
           5    10    13   Class org/apache/activemq/transport/TransportDisposedIOException

  public void setTransportListener(org.apache.activemq.transport.TransportListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
       5: return

  public void setMessageQueue(java.util.concurrent.LinkedBlockingQueue<java.lang.Object>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
       8: ifnonnull     16
      11: aload_0
      12: aload_1
      13: putfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
      16: aload_2
      17: monitorexit
      18: goto          26
      21: astore_3
      22: aload_2
      23: monitorexit
      24: aload_3
      25: athrow
      26: return
    Exception table:
       from    to  target type
           4    18    21   any
          21    24    21   any

  public java.util.concurrent.LinkedBlockingQueue<java.lang.Object> getMessageQueue() throws org.apache.activemq.transport.TransportDisposedIOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
       4: astore_1
       5: aload_1
       6: ifnonnull     69
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
      17: astore_1
      18: aload_1
      19: ifnonnull     59
      22: aload_0
      23: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      29: ifeq          42
      32: new           #14                 // class org/apache/activemq/transport/TransportDisposedIOException
      35: dup
      36: ldc           #67                 // String The Transport has been disposed
      38: invokespecial #16                 // Method org/apache/activemq/transport/TransportDisposedIOException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: new           #68                 // class java/util/concurrent/LinkedBlockingQueue
      46: dup
      47: aload_0
      48: getfield      #3                  // Field asyncQueueDepth:I
      51: invokespecial #69                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      54: dup
      55: astore_1
      56: putfield      #35                 // Field messageQueue:Ljava/util/concurrent/LinkedBlockingQueue;
      59: aload_2
      60: monitorexit
      61: goto          69
      64: astore_3
      65: aload_2
      66: monitorexit
      67: aload_3
      68: athrow
      69: aload_1
      70: areturn
    Exception table:
       from    to  target type
          13    61    64   any
          64    67    64   any

  protected org.apache.activemq.thread.TaskRunner getTaskRunner() throws org.apache.activemq.transport.TransportDisposedIOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
       4: astore_1
       5: aload_1
       6: ifnonnull     118
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #48                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
      17: astore_1
      18: aload_1
      19: ifnonnull     106
      22: aload_0
      23: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      29: ifeq          42
      32: new           #14                 // class org/apache/activemq/transport/TransportDisposedIOException
      35: dup
      36: ldc           #67                 // String The Transport has been disposed
      38: invokespecial #16                 // Method org/apache/activemq/transport/TransportDisposedIOException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: new           #20                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #70                 // String ActiveMQ VMTransport:
      51: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: invokevirtual #24                 // Method toString:()Ljava/lang/String;
      58: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: astore_3
      65: aload_0
      66: getfield      #60                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      69: ifnonnull     91
      72: aload_0
      73: new           #71                 // class org/apache/activemq/thread/TaskRunnerFactory
      76: dup
      77: aload_3
      78: invokespecial #72                 // Method org/apache/activemq/thread/TaskRunnerFactory."<init>":(Ljava/lang/String;)V
      81: putfield      #60                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      84: aload_0
      85: getfield      #60                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      88: invokevirtual #73                 // Method org/apache/activemq/thread/TaskRunnerFactory.init:()V
      91: aload_0
      92: aload_0
      93: getfield      #60                 // Field taskRunnerFactory:Lorg/apache/activemq/thread/TaskRunnerFactory;
      96: aload_0
      97: aload_3
      98: invokevirtual #74                 // Method org/apache/activemq/thread/TaskRunnerFactory.createTaskRunner:(Lorg/apache/activemq/thread/Task;Ljava/lang/String;)Lorg/apache/activemq/thread/TaskRunner;
     101: dup
     102: astore_1
     103: putfield      #48                 // Field taskRunner:Lorg/apache/activemq/thread/TaskRunner;
     106: aload_2
     107: monitorexit
     108: goto          118
     111: astore        4
     113: aload_2
     114: monitorexit
     115: aload         4
     117: athrow
     118: aload_1
     119: areturn
    Exception table:
       from    to  target type
          13   108   111   any
         111   115   111   any

  public org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object, org.apache.activemq.transport.ResponseCallback) throws java.io.IOException;
    Code:
       0: new           #75                 // class java/lang/AssertionError
       3: dup
       4: ldc           #76                 // String Unsupported Method
       6: invokespecial #77                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
       9: athrow

  public java.lang.Object request(java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #75                 // class java/lang/AssertionError
       3: dup
       4: ldc           #76                 // String Unsupported Method
       6: invokespecial #77                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
       9: athrow

  public java.lang.Object request(java.lang.Object, int) throws java.io.IOException;
    Code:
       0: new           #75                 // class java/lang/AssertionError
       3: dup
       4: ldc           #76                 // String Unsupported Method
       6: invokespecial #77                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
       9: athrow

  public org.apache.activemq.transport.TransportListener getTransportListener();
    Code:
       0: aload_0
       1: getfield      #44                 // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
       4: areturn

  public <T> T narrow(java.lang.Class<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #79                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_1
      12: aload_0
      13: invokevirtual #80                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aconst_null
      18: areturn

  public boolean isMarshal();
    Code:
       0: aload_0
       1: getfield      #81                 // Field marshal:Z
       4: ireturn

  public void setMarshal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field marshal:Z
       5: return

  public boolean isNetwork();
    Code:
       0: aload_0
       1: getfield      #82                 // Field network:Z
       4: ireturn

  public void setNetwork(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #82                 // Field network:Z
       5: return

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #8                  // Field location:Ljava/net/URI;
      11: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #83                 // String #
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #11                 // Field id:J
      23: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
       4: ifnull        15
       7: aload_0
       8: getfield      #12                 // Field peer:Lorg/apache/activemq/transport/vm/VMTransport;
      11: invokevirtual #24                 // Method toString:()Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  public boolean isAsync();
    Code:
       0: aload_0
       1: getfield      #2                  // Field async:Z
       4: ireturn

  public void setAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field async:Z
       5: return

  public int getAsyncQueueDepth();
    Code:
       0: aload_0
       1: getfield      #3                  // Field asyncQueueDepth:I
       4: ireturn

  public void setAsyncQueueDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field asyncQueueDepth:I
       5: return

  public boolean isFaultTolerant();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #7                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void reconnect(java.net.URI) throws java.io.IOException;
    Code:
       0: new           #17                 // class java/io/IOException
       3: dup
       4: ldc           #85                 // String Transport reconnect is not supported
       6: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isReconnectSupported();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isUpdateURIsSupported();
    Code:
       0: iconst_0
       1: ireturn

  public void updateURIs(boolean, java.net.URI[]) throws java.io.IOException;
    Code:
       0: new           #17                 // class java/io/IOException
       3: dup
       4: ldc           #86                 // String URI update feature not supported
       6: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getReceiveCounter();
    Code:
       0: aload_0
       1: getfield      #42                 // Field receiveCounter:I
       4: ireturn

  static {};
    Code:
       0: ldc_w         #87                 // class org/apache/activemq/transport/vm/VMTransport
       3: invokestatic  #88                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #89                 // Field LOG:Lorg/slf4j/Logger;
       9: new           #90                 // class java/util/concurrent/atomic/AtomicLong
      12: dup
      13: lconst_0
      14: invokespecial #91                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      17: putstatic     #9                  // Field NEXT_ID:Ljava/util/concurrent/atomic/AtomicLong;
      20: return
}
