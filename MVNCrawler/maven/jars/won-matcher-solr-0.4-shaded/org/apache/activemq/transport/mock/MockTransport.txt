Compiled from "MockTransport.java"
public class org.apache.activemq.transport.mock.MockTransport extends org.apache.activemq.transport.DefaultTransportListener implements org.apache.activemq.transport.Transport {
  protected org.apache.activemq.transport.Transport next;

  protected org.apache.activemq.transport.TransportListener transportListener;

  public org.apache.activemq.transport.mock.MockTransport(org.apache.activemq.transport.Transport);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/transport/DefaultTransportListener."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field next:Lorg/apache/activemq/transport/Transport;
       9: return

  public synchronized void setTransportListener(org.apache.activemq.transport.TransportListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
       5: aload_1
       6: ifnonnull     22
       9: aload_0
      10: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
      13: aconst_null
      14: invokeinterface #5,  2            // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      19: goto          32
      22: aload_0
      23: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
      26: aload_0
      27: invokeinterface #5,  2            // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      32: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: ifnonnull     17
       7: new           #6                  // class java/io/IOException
      10: dup
      11: ldc           #7                  // String The next channel has not been set.
      13: invokespecial #8                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
      21: ifnonnull     34
      24: new           #6                  // class java/io/IOException
      27: dup
      28: ldc           #9                  // String The command listener has not been set.
      30: invokespecial #8                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
      38: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/transport/Transport.start:()V
      43: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/transport/Transport.stop:()V
       9: return

  public void onCommand(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getTransportListener:()Lorg/apache/activemq/transport/TransportListener;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onCommand:(Ljava/lang/Object;)V
      10: return

  public synchronized org.apache.activemq.transport.Transport getNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lorg/apache/activemq/transport/Transport;
       4: areturn

  public synchronized org.apache.activemq.transport.TransportListener getTransportListener();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transportListener:Lorg/apache/activemq/transport/TransportListener;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokevirtual #14                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public void oneway(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      10: return

  public org.apache.activemq.transport.FutureResponse asyncRequest(java.lang.Object, org.apache.activemq.transport.ResponseCallback) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: aload_1
       5: aconst_null
       6: invokeinterface #16,  3           // InterfaceMethod org/apache/activemq/transport/Transport.asyncRequest:(Ljava/lang/Object;Lorg/apache/activemq/transport/ResponseCallback;)Lorg/apache/activemq/transport/FutureResponse;
      11: areturn

  public java.lang.Object request(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/transport/Transport.request:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object request(java.lang.Object, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: aload_1
       5: iload_2
       6: invokeinterface #18,  3           // InterfaceMethod org/apache/activemq/transport/Transport.request:(Ljava/lang/Object;I)Ljava/lang/Object;
      11: areturn

  public void onException(java.io.IOException);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getTransportListener:()Lorg/apache/activemq/transport/TransportListener;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/apache/activemq/transport/TransportListener.onException:(Ljava/io/IOException;)V
      10: return

  public <T> T narrow(java.lang.Class<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_1
      12: aload_0
      13: invokevirtual #22                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
      21: aload_1
      22: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/transport/Transport.narrow:(Ljava/lang/Class;)Ljava/lang/Object;
      27: areturn

  public synchronized void setNext(org.apache.activemq.transport.Transport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field next:Lorg/apache/activemq/transport/Transport;
       5: return

  public void install(org.apache.activemq.transport.TransportFilter);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #24                 // Method org/apache/activemq/transport/TransportFilter.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
       5: aload_0
       6: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       9: aload_1
      10: invokeinterface #5,  2            // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #25                 // Method setNext:(Lorg/apache/activemq/transport/Transport;)V
      20: return

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #26,  1           // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
       9: areturn

  public boolean isFaultTolerant();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #27,  1           // InterfaceMethod org/apache/activemq/transport/Transport.isFaultTolerant:()Z
       9: ireturn

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #28,  1           // InterfaceMethod org/apache/activemq/transport/Transport.isDisposed:()Z
       9: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/transport/Transport.isConnected:()Z
       9: ireturn

  public void reconnect(java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod org/apache/activemq/transport/Transport.reconnect:(Ljava/net/URI;)V
      10: return

  public int getReceiveCounter();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/transport/Transport.getReceiveCounter:()I
       9: ireturn

  public boolean isReconnectSupported();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/activemq/transport/Transport.isReconnectSupported:()Z
       9: ireturn

  public boolean isUpdateURIsSupported();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #33,  1           // InterfaceMethod org/apache/activemq/transport/Transport.isUpdateURIsSupported:()Z
       9: ireturn

  public void updateURIs(boolean, java.net.URI[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getNext:()Lorg/apache/activemq/transport/Transport;
       4: iload_1
       5: aload_2
       6: invokeinterface #34,  3           // InterfaceMethod org/apache/activemq/transport/Transport.updateURIs:(Z[Ljava/net/URI;)V
      11: return
}
