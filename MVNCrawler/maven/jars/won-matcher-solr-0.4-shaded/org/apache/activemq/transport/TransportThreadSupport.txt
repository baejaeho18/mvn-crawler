Compiled from "TransportThreadSupport.java"
public abstract class org.apache.activemq.transport.TransportThreadSupport extends org.apache.activemq.transport.TransportSupport implements java.lang.Runnable {
  private boolean daemon;

  private java.lang.Thread runner;

  private long stackSize;

  public org.apache.activemq.transport.TransportThreadSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/transport/TransportSupport."<init>":()V
       4: return

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #2                  // Field daemon:Z
       4: ireturn

  public void setDaemon(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field daemon:Z
       5: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #3                  // class java/lang/Thread
       4: dup
       5: aconst_null
       6: aload_0
       7: new           #4                  // class java/lang/StringBuilder
      10: dup
      11: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #6                  // String ActiveMQ Transport:
      16: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #8                  // Method java/lang/Object.toString:()Ljava/lang/String;
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: aload_0
      30: getfield      #10                 // Field stackSize:J
      33: invokespecial #11                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
      36: putfield      #12                 // Field runner:Ljava/lang/Thread;
      39: aload_0
      40: getfield      #12                 // Field runner:Ljava/lang/Thread;
      43: aload_0
      44: getfield      #2                  // Field daemon:Z
      47: invokevirtual #13                 // Method java/lang/Thread.setDaemon:(Z)V
      50: aload_0
      51: getfield      #12                 // Field runner:Ljava/lang/Thread;
      54: invokevirtual #14                 // Method java/lang/Thread.start:()V
      57: return

  public long getStackSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field stackSize:J
       4: lreturn

  public void setStackSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field stackSize:J
       5: return
}
