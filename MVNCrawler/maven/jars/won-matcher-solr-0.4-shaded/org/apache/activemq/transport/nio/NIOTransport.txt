Compiled from "NIOTransport.java"
public class org.apache.activemq.transport.nio.NIOTransport extends org.apache.activemq.transport.tcp.TcpTransport {
  protected java.nio.channels.SocketChannel channel;

  protected org.apache.activemq.transport.nio.SelectorSelection selection;

  protected java.nio.ByteBuffer inputBuffer;

  protected java.nio.ByteBuffer currentBuffer;

  protected int nextFrameSize;

  static final boolean $assertionsDisabled;

  public org.apache.activemq.transport.nio.NIOTransport(org.apache.activemq.wireformat.WireFormat, javax.net.SocketFactory, java.net.URI, java.net.URI) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method org/apache/activemq/transport/tcp/TcpTransport."<init>":(Lorg/apache/activemq/wireformat/WireFormat;Ljavax/net/SocketFactory;Ljava/net/URI;Ljava/net/URI;)V
       9: return

  public org.apache.activemq.transport.nio.NIOTransport(org.apache.activemq.wireformat.WireFormat, java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/activemq/transport/tcp/TcpTransport."<init>":(Lorg/apache/activemq/wireformat/WireFormat;Ljava/net/Socket;)V
       6: return

  protected void initializeStreams() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field socket:Ljava/net/Socket;
       5: invokevirtual #4                  // Method java/net/Socket.getChannel:()Ljava/nio/channels/SocketChannel;
       8: putfield      #5                  // Field channel:Ljava/nio/channels/SocketChannel;
      11: aload_0
      12: getfield      #5                  // Field channel:Ljava/nio/channels/SocketChannel;
      15: iconst_0
      16: invokevirtual #6                  // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      19: pop
      20: aload_0
      21: invokestatic  #7                  // Method org/apache/activemq/transport/nio/SelectorManager.getInstance:()Lorg/apache/activemq/transport/nio/SelectorManager;
      24: aload_0
      25: getfield      #5                  // Field channel:Ljava/nio/channels/SocketChannel;
      28: new           #8                  // class org/apache/activemq/transport/nio/NIOTransport$1
      31: dup
      32: aload_0
      33: invokespecial #9                  // Method org/apache/activemq/transport/nio/NIOTransport$1."<init>":(Lorg/apache/activemq/transport/nio/NIOTransport;)V
      36: invokevirtual #10                 // Method org/apache/activemq/transport/nio/SelectorManager.register:(Ljava/nio/channels/SocketChannel;Lorg/apache/activemq/transport/nio/SelectorManager$Listener;)Lorg/apache/activemq/transport/nio/SelectorSelection;
      39: putfield      #11                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      42: aload_0
      43: sipush        8192
      46: invokestatic  #12                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      49: putfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      52: aload_0
      53: aload_0
      54: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      57: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      60: aload_0
      61: iconst_m1
      62: putfield      #15                 // Field nextFrameSize:I
      65: aload_0
      66: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      69: iconst_4
      70: invokevirtual #16                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      73: pop
      74: new           #17                 // class org/apache/activemq/transport/nio/NIOOutputStream
      77: dup
      78: aload_0
      79: getfield      #5                  // Field channel:Ljava/nio/channels/SocketChannel;
      82: sipush        16384
      85: invokespecial #18                 // Method org/apache/activemq/transport/nio/NIOOutputStream."<init>":(Ljava/nio/channels/WritableByteChannel;I)V
      88: astore_1
      89: aload_0
      90: new           #19                 // class java/io/DataOutputStream
      93: dup
      94: aload_1
      95: invokespecial #20                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      98: putfield      #21                 // Field dataOut:Ljava/io/DataOutputStream;
     101: aload_0
     102: aload_1
     103: putfield      #22                 // Field buffOut:Lorg/apache/activemq/transport/tcp/TimeStampStream;
     106: return

  protected void serviceRead();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Ljava/nio/channels/SocketChannel;
       4: aload_0
       5: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
       8: invokevirtual #23                 // Method java/nio/channels/SocketChannel.read:(Ljava/nio/ByteBuffer;)I
      11: istore_1
      12: iload_1
      13: iconst_m1
      14: if_icmpne     38
      17: aload_0
      18: new           #24                 // class java/io/EOFException
      21: dup
      22: invokespecial #25                 // Method java/io/EOFException."<init>":()V
      25: invokevirtual #26                 // Method onException:(Ljava/io/IOException;)V
      28: aload_0
      29: getfield      #11                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      32: invokevirtual #27                 // Method org/apache/activemq/transport/nio/SelectorSelection.close:()V
      35: goto          326
      38: iload_1
      39: ifne          45
      42: goto          326
      45: aload_0
      46: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      49: invokevirtual #28                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      52: ifeq          58
      55: goto          0
      58: aload_0
      59: getfield      #15                 // Field nextFrameSize:I
      62: iconst_m1
      63: if_icmpne     249
      66: getstatic     #29                 // Field $assertionsDisabled:Z
      69: ifne          91
      72: aload_0
      73: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      76: aload_0
      77: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
      80: if_acmpeq     91
      83: new           #30                 // class java/lang/AssertionError
      86: dup
      87: invokespecial #31                 // Method java/lang/AssertionError."<init>":()V
      90: athrow
      91: aload_0
      92: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      95: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      98: pop
      99: aload_0
     100: aload_0
     101: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
     104: invokevirtual #33                 // Method java/nio/ByteBuffer.getInt:()I
     107: iconst_4
     108: iadd
     109: putfield      #15                 // Field nextFrameSize:I
     112: aload_0
     113: getfield      #34                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
     116: instanceof    #35                 // class org/apache/activemq/openwire/OpenWireFormat
     119: ifeq          194
     122: aload_0
     123: getfield      #34                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
     126: checkcast     #35                 // class org/apache/activemq/openwire/OpenWireFormat
     129: invokevirtual #36                 // Method org/apache/activemq/openwire/OpenWireFormat.getMaxFrameSize:()J
     132: lstore_2
     133: aload_0
     134: getfield      #15                 // Field nextFrameSize:I
     137: i2l
     138: lload_2
     139: lcmp
     140: ifle          194
     143: new           #37                 // class java/io/IOException
     146: dup
     147: new           #38                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #40                 // String Frame size of
     156: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_0
     160: getfield      #15                 // Field nextFrameSize:I
     163: ldc           #42                 // int 1048576
     165: idiv
     166: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     169: ldc           #44                 // String  MB larger than max allowed
     171: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: lload_2
     175: ldc2_w        #45                 // long 1048576l
     178: ldiv
     179: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     182: ldc           #48                 // String  MB
     184: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     193: athrow
     194: aload_0
     195: getfield      #15                 // Field nextFrameSize:I
     198: aload_0
     199: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
     202: invokevirtual #51                 // Method java/nio/ByteBuffer.capacity:()I
     205: if_icmple     234
     208: aload_0
     209: aload_0
     210: getfield      #15                 // Field nextFrameSize:I
     213: invokestatic  #12                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     216: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     219: aload_0
     220: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     223: aload_0
     224: getfield      #15                 // Field nextFrameSize:I
     227: invokevirtual #52                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     230: pop
     231: goto          323
     234: aload_0
     235: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
     238: aload_0
     239: getfield      #15                 // Field nextFrameSize:I
     242: invokevirtual #16                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     245: pop
     246: goto          323
     249: aload_0
     250: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     253: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     256: pop
     257: aload_0
     258: getfield      #34                 // Field wireFormat:Lorg/apache/activemq/wireformat/WireFormat;
     261: new           #53                 // class java/io/DataInputStream
     264: dup
     265: new           #54                 // class org/apache/activemq/transport/nio/NIOInputStream
     268: dup
     269: aload_0
     270: getfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     273: invokespecial #55                 // Method org/apache/activemq/transport/nio/NIOInputStream."<init>":(Ljava/nio/ByteBuffer;)V
     276: invokespecial #56                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     279: invokeinterface #57,  2           // InterfaceMethod org/apache/activemq/wireformat/WireFormat.unmarshal:(Ljava/io/DataInput;)Ljava/lang/Object;
     284: astore_2
     285: aload_0
     286: aload_2
     287: checkcast     #58                 // class org/apache/activemq/command/Command
     290: invokevirtual #59                 // Method doConsume:(Ljava/lang/Object;)V
     293: aload_0
     294: iconst_m1
     295: putfield      #15                 // Field nextFrameSize:I
     298: aload_0
     299: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
     302: invokevirtual #60                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     305: pop
     306: aload_0
     307: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
     310: iconst_4
     311: invokevirtual #16                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     314: pop
     315: aload_0
     316: aload_0
     317: getfield      #13                 // Field inputBuffer:Ljava/nio/ByteBuffer;
     320: putfield      #14                 // Field currentBuffer:Ljava/nio/ByteBuffer;
     323: goto          0
     326: goto          347
     329: astore_1
     330: aload_0
     331: aload_1
     332: invokevirtual #26                 // Method onException:(Ljava/io/IOException;)V
     335: goto          347
     338: astore_1
     339: aload_0
     340: aload_1
     341: invokestatic  #62                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Throwable;)Ljava/io/IOException;
     344: invokevirtual #26                 // Method onException:(Ljava/io/IOException;)V
     347: return
    Exception table:
       from    to  target type
           0   326   329   Class java/io/IOException
           0   326   338   Class java/lang/Throwable

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method connect:()V
       4: aload_0
       5: getfield      #11                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
       8: iconst_1
       9: invokevirtual #64                 // Method org/apache/activemq/transport/nio/SelectorSelection.setInterestOps:(I)V
      12: aload_0
      13: getfield      #11                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      16: invokevirtual #65                 // Method org/apache/activemq/transport/nio/SelectorSelection.enable:()V
      19: return

  protected void doStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
       4: ifnull        19
       7: aload_0
       8: getfield      #11                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      11: invokevirtual #27                 // Method org/apache/activemq/transport/nio/SelectorSelection.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #11                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      19: aload_0
      20: aload_1
      21: invokespecial #66                 // Method org/apache/activemq/transport/tcp/TcpTransport.doStop:(Lorg/apache/activemq/util/ServiceStopper;)V
      24: return

  static {};
    Code:
       0: ldc_w         #67                 // class org/apache/activemq/transport/nio/NIOTransport
       3: invokevirtual #68                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #29                 // Field $assertionsDisabled:Z
      17: return
}
