Compiled from "AMQPProtocolDiscriminator.java"
final class org.apache.activemq.transport.amqp.AMQPProtocolDiscriminator$1 implements org.apache.activemq.transport.amqp.AMQPProtocolDiscriminator$Discriminator {
  org.apache.activemq.transport.amqp.AMQPProtocolDiscriminator$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.activemq.transport.amqp.IAmqpProtocolConverter create(org.apache.activemq.transport.amqp.AmqpTransport);
    Code:
       0: new           #2                  // class org/apache/activemq/transport/amqp/AmqpProtocolConverter
       3: dup
       4: aload_1
       5: invokespecial #3                  // Method org/apache/activemq/transport/amqp/AmqpProtocolConverter."<init>":(Lorg/apache/activemq/transport/amqp/AmqpTransport;)V
       8: areturn

  public boolean matches(org.apache.activemq.transport.amqp.AmqpHeader);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method org/apache/activemq/transport/amqp/AmqpHeader.getProtocolId:()I
       4: lookupswitch  { // 2
                     0: 32
                     3: 32
               default: 56
          }
      32: aload_1
      33: invokevirtual #5                  // Method org/apache/activemq/transport/amqp/AmqpHeader.getMajor:()I
      36: iconst_1
      37: if_icmpne     56
      40: aload_1
      41: invokevirtual #6                  // Method org/apache/activemq/transport/amqp/AmqpHeader.getMinor:()I
      44: ifne          56
      47: aload_1
      48: invokevirtual #7                  // Method org/apache/activemq/transport/amqp/AmqpHeader.getRevision:()I
      51: ifne          56
      54: iconst_1
      55: ireturn
      56: iconst_0
      57: ireturn
}
