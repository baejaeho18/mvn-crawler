Compiled from "AmqpNioTransport.java"
public class org.apache.activemq.transport.amqp.AmqpNioTransport extends org.apache.activemq.transport.tcp.TcpTransport {
  private static final org.slf4j.Logger LOG;

  private java.nio.channels.SocketChannel channel;

  private org.apache.activemq.transport.nio.SelectorSelection selection;

  private final org.apache.activemq.transport.amqp.AmqpNioTransportHelper amqpNioTransportHelper;

  private java.nio.ByteBuffer inputBuffer;

  boolean magicRead;

  public org.apache.activemq.transport.amqp.AmqpNioTransport(org.apache.activemq.wireformat.WireFormat, javax.net.SocketFactory, java.net.URI, java.net.URI) throws java.net.UnknownHostException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #3                  // Method org/apache/activemq/transport/tcp/TcpTransport."<init>":(Lorg/apache/activemq/wireformat/WireFormat;Ljavax/net/SocketFactory;Ljava/net/URI;Ljava/net/URI;)V
       9: aload_0
      10: new           #4                  // class org/apache/activemq/transport/amqp/AmqpNioTransportHelper
      13: dup
      14: aload_0
      15: invokespecial #5                  // Method org/apache/activemq/transport/amqp/AmqpNioTransportHelper."<init>":(Lorg/apache/activemq/transport/TransportSupport;)V
      18: putfield      #6                  // Field amqpNioTransportHelper:Lorg/apache/activemq/transport/amqp/AmqpNioTransportHelper;
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field magicRead:Z
      26: return

  public org.apache.activemq.transport.amqp.AmqpNioTransport(org.apache.activemq.wireformat.WireFormat, java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method org/apache/activemq/transport/tcp/TcpTransport."<init>":(Lorg/apache/activemq/wireformat/WireFormat;Ljava/net/Socket;)V
       6: aload_0
       7: new           #4                  // class org/apache/activemq/transport/amqp/AmqpNioTransportHelper
      10: dup
      11: aload_0
      12: invokespecial #5                  // Method org/apache/activemq/transport/amqp/AmqpNioTransportHelper."<init>":(Lorg/apache/activemq/transport/TransportSupport;)V
      15: putfield      #6                  // Field amqpNioTransportHelper:Lorg/apache/activemq/transport/amqp/AmqpNioTransportHelper;
      18: aload_0
      19: iconst_0
      20: putfield      #7                  // Field magicRead:Z
      23: return

  protected void initializeStreams() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field socket:Ljava/net/Socket;
       5: invokevirtual #10                 // Method java/net/Socket.getChannel:()Ljava/nio/channels/SocketChannel;
       8: putfield      #11                 // Field channel:Ljava/nio/channels/SocketChannel;
      11: aload_0
      12: getfield      #11                 // Field channel:Ljava/nio/channels/SocketChannel;
      15: iconst_0
      16: invokevirtual #12                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      19: pop
      20: aload_0
      21: invokestatic  #13                 // Method org/apache/activemq/transport/nio/SelectorManager.getInstance:()Lorg/apache/activemq/transport/nio/SelectorManager;
      24: aload_0
      25: getfield      #11                 // Field channel:Ljava/nio/channels/SocketChannel;
      28: new           #14                 // class org/apache/activemq/transport/amqp/AmqpNioTransport$1
      31: dup
      32: aload_0
      33: invokespecial #15                 // Method org/apache/activemq/transport/amqp/AmqpNioTransport$1."<init>":(Lorg/apache/activemq/transport/amqp/AmqpNioTransport;)V
      36: invokevirtual #16                 // Method org/apache/activemq/transport/nio/SelectorManager.register:(Ljava/nio/channels/SocketChannel;Lorg/apache/activemq/transport/nio/SelectorManager$Listener;)Lorg/apache/activemq/transport/nio/SelectorSelection;
      39: putfield      #17                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      42: aload_0
      43: sipush        8192
      46: invokestatic  #18                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      49: putfield      #19                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      52: new           #20                 // class org/apache/activemq/transport/nio/NIOOutputStream
      55: dup
      56: aload_0
      57: getfield      #11                 // Field channel:Ljava/nio/channels/SocketChannel;
      60: sipush        8192
      63: invokespecial #21                 // Method org/apache/activemq/transport/nio/NIOOutputStream."<init>":(Ljava/nio/channels/WritableByteChannel;I)V
      66: astore_1
      67: aload_0
      68: new           #22                 // class java/io/DataOutputStream
      71: dup
      72: aload_1
      73: invokespecial #23                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      76: putfield      #24                 // Field dataOut:Ljava/io/DataOutputStream;
      79: aload_0
      80: aload_1
      81: putfield      #25                 // Field buffOut:Lorg/apache/activemq/transport/tcp/TimeStampStream;
      84: return

  private void serviceRead();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isStarted:()Z
       4: ifeq          92
       7: aload_0
       8: getfield      #11                 // Field channel:Ljava/nio/channels/SocketChannel;
      11: aload_0
      12: getfield      #19                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      15: invokevirtual #27                 // Method java/nio/channels/SocketChannel.read:(Ljava/nio/ByteBuffer;)I
      18: istore_1
      19: iload_1
      20: iconst_m1
      21: if_icmpne     45
      24: aload_0
      25: new           #28                 // class java/io/EOFException
      28: dup
      29: invokespecial #29                 // Method java/io/EOFException."<init>":()V
      32: invokevirtual #30                 // Method onException:(Ljava/io/IOException;)V
      35: aload_0
      36: getfield      #17                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      39: invokevirtual #31                 // Method org/apache/activemq/transport/nio/SelectorSelection.close:()V
      42: goto          92
      45: iload_1
      46: ifne          52
      49: goto          92
      52: aload_0
      53: dup
      54: getfield      #32                 // Field receiveCounter:I
      57: iload_1
      58: iadd
      59: putfield      #32                 // Field receiveCounter:I
      62: aload_0
      63: getfield      #19                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      66: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      69: pop
      70: aload_0
      71: getfield      #6                  // Field amqpNioTransportHelper:Lorg/apache/activemq/transport/amqp/AmqpNioTransportHelper;
      74: aload_0
      75: getfield      #19                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      78: invokevirtual #34                 // Method org/apache/activemq/transport/amqp/AmqpNioTransportHelper.processCommand:(Ljava/nio/ByteBuffer;)V
      81: aload_0
      82: getfield      #19                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      85: invokevirtual #35                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      88: pop
      89: goto          0
      92: goto          113
      95: astore_1
      96: aload_0
      97: aload_1
      98: invokevirtual #30                 // Method onException:(Ljava/io/IOException;)V
     101: goto          113
     104: astore_1
     105: aload_0
     106: aload_1
     107: invokestatic  #38                 // Method org/apache/activemq/util/IOExceptionSupport.create:(Ljava/lang/Throwable;)Ljava/io/IOException;
     110: invokevirtual #30                 // Method onException:(Ljava/io/IOException;)V
     113: return
    Exception table:
       from    to  target type
           0    92    95   Class java/io/IOException
           0    92   104   Class java/lang/Throwable

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method connect:()V
       4: aload_0
       5: getfield      #17                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
       8: iconst_1
       9: invokevirtual #40                 // Method org/apache/activemq/transport/nio/SelectorSelection.setInterestOps:(I)V
      12: aload_0
      13: getfield      #17                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      16: invokevirtual #41                 // Method org/apache/activemq/transport/nio/SelectorSelection.enable:()V
      19: return

  protected void doStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #17                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
       4: ifnull        14
       7: aload_0
       8: getfield      #17                 // Field selection:Lorg/apache/activemq/transport/nio/SelectorSelection;
      11: invokevirtual #31                 // Method org/apache/activemq/transport/nio/SelectorSelection.close:()V
      14: aload_0
      15: aload_1
      16: invokespecial #42                 // Method org/apache/activemq/transport/tcp/TcpTransport.doStop:(Lorg/apache/activemq/util/ServiceStopper;)V
      19: goto          30
      22: astore_2
      23: aload_0
      24: aload_1
      25: invokespecial #42                 // Method org/apache/activemq/transport/tcp/TcpTransport.doStop:(Lorg/apache/activemq/util/ServiceStopper;)V
      28: aload_2
      29: athrow
      30: return
    Exception table:
       from    to  target type
           0    14    22   any
          22    23    22   any

  static void access$000(org.apache.activemq.transport.amqp.AmqpNioTransport);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method serviceRead:()V
       4: return

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #43                 // class org/apache/activemq/transport/amqp/AmqpNioTransport
       3: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
