Compiled from "VMTransportServer.java"
public class org.apache.activemq.transport.vm.VMTransportServer implements org.apache.activemq.transport.TransportServer {
  private org.apache.activemq.transport.TransportAcceptListener acceptListener;

  private final java.net.URI location;

  private boolean disposed;

  private final java.util.concurrent.atomic.AtomicInteger connectionCount;

  private final boolean disposeOnDisconnect;

  private boolean allowLinkStealing;

  public org.apache.activemq.transport.vm.VMTransportServer(java.net.URI, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #2                  // Field connectionCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field location:Ljava/net/URI;
      21: aload_0
      22: iload_2
      23: putfield      #1                  // Field disposeOnDisconnect:Z
      26: return

  public java.lang.String toString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #9                  // String VMTransportServer(
       9: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field location:Ljava/net/URI;
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #12                 // String )
      21: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.apache.activemq.transport.vm.VMTransport connect() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #14                 // Field disposed:Z
       8: ifeq          21
      11: new           #15                 // class java/io/IOException
      14: dup
      15: ldc           #16                 // String Server has been disposed.
      17: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #18                 // Field acceptListener:Lorg/apache/activemq/transport/TransportAcceptListener;
      25: astore_1
      26: aload_2
      27: monitorexit
      28: goto          36
      31: astore_3
      32: aload_2
      33: monitorexit
      34: aload_3
      35: athrow
      36: aload_1
      37: ifnonnull     50
      40: new           #15                 // class java/io/IOException
      43: dup
      44: ldc           #19                 // String Server TransportAcceptListener is null.
      46: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #2                  // Field connectionCount:Ljava/util/concurrent/atomic/AtomicInteger;
      54: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      57: pop
      58: new           #21                 // class org/apache/activemq/transport/vm/VMTransportServer$1
      61: dup
      62: aload_0
      63: aload_0
      64: getfield      #6                  // Field location:Ljava/net/URI;
      67: invokespecial #22                 // Method org/apache/activemq/transport/vm/VMTransportServer$1."<init>":(Lorg/apache/activemq/transport/vm/VMTransportServer;Ljava/net/URI;)V
      70: astore_2
      71: new           #23                 // class org/apache/activemq/transport/vm/VMTransport
      74: dup
      75: aload_0
      76: getfield      #6                  // Field location:Ljava/net/URI;
      79: invokespecial #24                 // Method org/apache/activemq/transport/vm/VMTransport."<init>":(Ljava/net/URI;)V
      82: astore_3
      83: aload_2
      84: aload_3
      85: invokevirtual #25                 // Method org/apache/activemq/transport/vm/VMTransport.setPeer:(Lorg/apache/activemq/transport/vm/VMTransport;)V
      88: aload_3
      89: aload_2
      90: invokevirtual #25                 // Method org/apache/activemq/transport/vm/VMTransport.setPeer:(Lorg/apache/activemq/transport/vm/VMTransport;)V
      93: aload_1
      94: aload_3
      95: invokestatic  #26                 // Method configure:(Lorg/apache/activemq/transport/Transport;)Lorg/apache/activemq/transport/Transport;
      98: invokeinterface #27,  2           // InterfaceMethod org/apache/activemq/transport/TransportAcceptListener.onAccept:(Lorg/apache/activemq/transport/Transport;)V
     103: aload_2
     104: areturn
    Exception table:
       from    to  target type
           4    28    31   any
          31    34    31   any

  public static org.apache.activemq.transport.Transport configure(org.apache.activemq.transport.Transport);
    Code:
       0: new           #28                 // class org/apache/activemq/transport/MutexTransport
       3: dup
       4: aload_0
       5: invokespecial #29                 // Method org/apache/activemq/transport/MutexTransport."<init>":(Lorg/apache/activemq/transport/Transport;)V
       8: astore_0
       9: new           #30                 // class org/apache/activemq/transport/ResponseCorrelator
      12: dup
      13: aload_0
      14: invokespecial #31                 // Method org/apache/activemq/transport/ResponseCorrelator."<init>":(Lorg/apache/activemq/transport/Transport;)V
      17: astore_0
      18: aload_0
      19: areturn

  public synchronized void setAcceptListener(org.apache.activemq.transport.TransportAcceptListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field acceptListener:Lorg/apache/activemq/transport/TransportAcceptListener;
       5: return

  public void start() throws java.io.IOException;
    Code:
       0: return

  public void stop() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method org/apache/activemq/transport/vm/VMTransportFactory.stopped:(Lorg/apache/activemq/transport/vm/VMTransportServer;)V
       4: return

  public java.net.URI getConnectURI();
    Code:
       0: aload_0
       1: getfield      #6                  // Field location:Ljava/net/URI;
       4: areturn

  public java.net.URI getBindURI();
    Code:
       0: aload_0
       1: getfield      #6                  // Field location:Ljava/net/URI;
       4: areturn

  public void setBrokerInfo(org.apache.activemq.command.BrokerInfo);
    Code:
       0: return

  public java.net.InetSocketAddress getSocketAddress();
    Code:
       0: aconst_null
       1: areturn

  public int getConnectionCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connectionCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.intValue:()I
       7: ireturn

  public boolean isSslServer();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAllowLinkStealing();
    Code:
       0: aload_0
       1: getfield      #34                 // Field allowLinkStealing:Z
       4: ireturn

  public void setAllowLinkStealing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field allowLinkStealing:Z
       5: return

  static java.util.concurrent.atomic.AtomicInteger access$000(org.apache.activemq.transport.vm.VMTransportServer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connectionCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static boolean access$100(org.apache.activemq.transport.vm.VMTransportServer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field disposeOnDisconnect:Z
       4: ireturn
}
