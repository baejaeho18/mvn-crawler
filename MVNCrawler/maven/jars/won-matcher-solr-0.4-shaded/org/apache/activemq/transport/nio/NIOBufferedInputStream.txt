Compiled from "NIOBufferedInputStream.java"
public class org.apache.activemq.transport.nio.NIOBufferedInputStream extends java.io.InputStream {
  private static final int BUFFER_SIZE;

  private java.nio.channels.SocketChannel sc;

  private java.nio.ByteBuffer bb;

  private java.nio.channels.Selector rs;

  public org.apache.activemq.transport.nio.NIOBufferedInputStream(java.nio.channels.ReadableByteChannel, int) throws java.nio.channels.ClosedChannelException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field rs:Ljava/nio/channels/Selector;
      19: iload_2
      20: ifgt          33
      23: new           #5                  // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #6                  // String Buffer size <= 0
      29: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: iload_2
      35: invokestatic  #8                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      38: putfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      41: aload_0
      42: aload_1
      43: checkcast     #9                  // class java/nio/channels/SocketChannel
      46: putfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      49: aload_0
      50: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      53: iconst_0
      54: invokevirtual #10                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      57: pop
      58: aload_0
      59: invokestatic  #11                 // Method java/nio/channels/Selector.open:()Ljava/nio/channels/Selector;
      62: putfield      #4                  // Field rs:Ljava/nio/channels/Selector;
      65: aload_0
      66: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      69: aload_0
      70: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
      73: iconst_1
      74: invokevirtual #12                 // Method java/nio/channels/SocketChannel.register:(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
      77: pop
      78: aload_0
      79: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      82: iconst_0
      83: invokevirtual #13                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      86: pop
      87: aload_0
      88: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      91: iconst_0
      92: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      95: pop
      96: return

  public org.apache.activemq.transport.nio.NIOBufferedInputStream(java.nio.channels.ReadableByteChannel) throws java.nio.channels.ClosedChannelException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokespecial #15                 // Method "<init>":(Ljava/nio/channels/ReadableByteChannel;I)V
       8: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
       4: invokevirtual #16                 // Method java/nio/channels/Selector.isOpen:()Z
       7: ifne          20
      10: new           #17                 // class java/io/IOException
      13: dup
      14: ldc           #18                 // String Input Stream Closed
      16: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      24: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      27: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
       4: invokevirtual #16                 // Method java/nio/channels/Selector.isOpen:()Z
       7: ifeq          57
      10: aload_0
      11: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
      14: invokevirtual #21                 // Method java/nio/channels/Selector.close:()V
      17: aload_0
      18: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      21: invokevirtual #22                 // Method java/nio/channels/SocketChannel.isOpen:()Z
      24: ifeq          47
      27: aload_0
      28: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      31: invokevirtual #23                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      34: invokevirtual #24                 // Method java/net/Socket.shutdownInput:()V
      37: aload_0
      38: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      41: invokevirtual #23                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      44: invokevirtual #25                 // Method java/net/Socket.close:()V
      47: aload_0
      48: aconst_null
      49: putfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      52: aload_0
      53: aconst_null
      54: putfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      57: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
       4: invokevirtual #16                 // Method java/nio/channels/Selector.isOpen:()Z
       7: ifne          20
      10: new           #17                 // class java/io/IOException
      13: dup
      14: ldc           #18                 // String Input Stream Closed
      16: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      24: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      27: ifne          45
      30: aload_0
      31: iconst_1
      32: invokespecial #27                 // Method fill:(I)V
      35: goto          45
      38: astore_1
      39: aload_0
      40: invokevirtual #29                 // Method close:()V
      43: iconst_m1
      44: ireturn
      45: aload_0
      46: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      49: invokevirtual #30                 // Method java/nio/ByteBuffer.get:()B
      52: sipush        255
      55: iand
      56: ireturn
    Exception table:
       from    to  target type
          30    35    38   Class java/nio/channels/ClosedChannelException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: istore        4
       3: aload_0
       4: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
       7: invokevirtual #16                 // Method java/nio/channels/Selector.isOpen:()Z
      10: ifne          23
      13: new           #17                 // class java/io/IOException
      16: dup
      17: ldc           #18                 // String Input Stream Closed
      19: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: iload         4
      25: iconst_m1
      26: if_icmpne     94
      29: aload_0
      30: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      33: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      36: ifeq          78
      39: iload_3
      40: aload_0
      41: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      44: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      47: if_icmpge     54
      50: iload_3
      51: goto          61
      54: aload_0
      55: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      58: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      61: istore        4
      63: aload_0
      64: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      67: aload_1
      68: iload_2
      69: iload         4
      71: invokevirtual #31                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      74: pop
      75: goto          23
      78: aload_0
      79: iconst_1
      80: invokespecial #27                 // Method fill:(I)V
      83: goto          23
      86: astore        5
      88: aload_0
      89: invokevirtual #29                 // Method close:()V
      92: iconst_m1
      93: ireturn
      94: iload         4
      96: ireturn
    Exception table:
       from    to  target type
          78    83    86   Class java/nio/channels/ClosedChannelException

  public long skip(long) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_3
       2: aload_0
       3: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
       6: invokevirtual #16                 // Method java/nio/channels/Selector.isOpen:()Z
       9: ifne          22
      12: new           #17                 // class java/io/IOException
      15: dup
      16: ldc           #18                 // String Input Stream Closed
      18: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: lload_1
      23: lconst_0
      24: lcmp
      25: ifle          122
      28: lload_1
      29: aload_0
      30: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      33: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      36: i2l
      37: lcmp
      38: ifgt          68
      41: lload_3
      42: lload_1
      43: ladd
      44: lstore_3
      45: aload_0
      46: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      49: aload_0
      50: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      53: invokevirtual #32                 // Method java/nio/ByteBuffer.position:()I
      56: lload_1
      57: l2i
      58: iadd
      59: invokevirtual #13                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      62: pop
      63: lconst_0
      64: lstore_1
      65: goto          22
      68: lload_3
      69: aload_0
      70: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      73: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      76: i2l
      77: ladd
      78: lstore_3
      79: lload_1
      80: aload_0
      81: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      84: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      87: i2l
      88: lsub
      89: lstore_1
      90: aload_0
      91: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      94: aload_0
      95: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      98: invokevirtual #33                 // Method java/nio/ByteBuffer.limit:()I
     101: invokevirtual #13                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     104: pop
     105: aload_0
     106: lload_1
     107: l2i
     108: invokespecial #27                 // Method fill:(I)V
     111: goto          22
     114: astore        5
     116: aload_0
     117: invokevirtual #29                 // Method close:()V
     120: lload_3
     121: lreturn
     122: lload_3
     123: lreturn
    Exception table:
       from    to  target type
         105   111   114   Class java/nio/channels/ClosedChannelException

  private void fill(int) throws java.io.IOException, java.nio.channels.ClosedChannelException;
    Code:
       0: iconst_m1
       1: istore_2
       2: iload_1
       3: ifle          17
       6: iload_1
       7: aload_0
       8: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      11: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      14: if_icmpgt     18
      17: return
      18: aload_0
      19: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      22: invokevirtual #34                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      25: pop
      26: aload_0
      27: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      30: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      33: iload_1
      34: if_icmpge     47
      37: aload_0
      38: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      41: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      44: goto          48
      47: iload_1
      48: istore_1
      49: aload_0
      50: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      53: aload_0
      54: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
      57: invokevirtual #35                 // Method java/nio/channels/SocketChannel.read:(Ljava/nio/ByteBuffer;)I
      60: istore_2
      61: iload_2
      62: iconst_m1
      63: if_icmpne     74
      66: new           #28                 // class java/nio/channels/ClosedChannelException
      69: dup
      70: invokespecial #36                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      73: athrow
      74: iload_1
      75: iload_2
      76: isub
      77: istore_1
      78: iload_1
      79: ifgt          85
      82: goto          109
      85: aload_0
      86: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
      89: lconst_0
      90: invokevirtual #37                 // Method java/nio/channels/Selector.select:(J)I
      93: pop
      94: aload_0
      95: getfield      #4                  // Field rs:Ljava/nio/channels/Selector;
      98: invokevirtual #38                 // Method java/nio/channels/Selector.selectedKeys:()Ljava/util/Set;
     101: invokeinterface #39,  1           // InterfaceMethod java/util/Set.clear:()V
     106: goto          49
     109: aload_0
     110: getfield      #3                  // Field bb:Ljava/nio/ByteBuffer;
     113: invokevirtual #40                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     116: pop
     117: return
}
