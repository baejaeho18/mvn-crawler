Compiled from "SpringSslContext.java"
public class org.apache.activemq.spring.SpringSslContext extends org.apache.activemq.broker.SslContext {
  private java.lang.String keyStoreType;

  private java.lang.String trustStoreType;

  private java.lang.String secureRandomAlgorithm;

  private java.lang.String keyStoreAlgorithm;

  private java.lang.String trustStoreAlgorithm;

  private java.lang.String keyStore;

  private java.lang.String trustStore;

  private java.lang.String keyStoreKeyPassword;

  private java.lang.String keyStorePassword;

  private java.lang.String trustStorePassword;

  public org.apache.activemq.spring.SpringSslContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/broker/SslContext."<init>":()V
       4: aload_0
       5: ldc           #2                  // String jks
       7: putfield      #3                  // Field keyStoreType:Ljava/lang/String;
      10: aload_0
      11: ldc           #2                  // String jks
      13: putfield      #4                  // Field trustStoreType:Ljava/lang/String;
      16: aload_0
      17: ldc           #5                  // String SHA1PRNG
      19: putfield      #6                  // Field secureRandomAlgorithm:Ljava/lang/String;
      22: aload_0
      23: invokestatic  #7                  // Method javax/net/ssl/KeyManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      26: putfield      #8                  // Field keyStoreAlgorithm:Ljava/lang/String;
      29: aload_0
      30: invokestatic  #9                  // Method javax/net/ssl/TrustManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      33: putfield      #10                 // Field trustStoreAlgorithm:Ljava/lang/String;
      36: return

  private void postConstruct();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method afterPropertiesSet:()V
       4: goto          17
       7: astore_1
       8: new           #13                 // class java/lang/RuntimeException
      11: dup
      12: aload_1
      13: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field keyManagers:Ljava/util/List;
       4: aload_0
       5: invokespecial #16                 // Method createKeyManagers:()Ljava/util/Collection;
       8: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: getfield      #18                 // Field trustManagers:Ljava/util/List;
      18: aload_0
      19: invokespecial #19                 // Method createTrustManagers:()Ljava/util/Collection;
      22: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: aload_0
      29: getfield      #20                 // Field secureRandom:Ljava/security/SecureRandom;
      32: ifnonnull     43
      35: aload_0
      36: aload_0
      37: invokespecial #21                 // Method createSecureRandom:()Ljava/security/SecureRandom;
      40: putfield      #20                 // Field secureRandom:Ljava/security/SecureRandom;
      43: return

  private java.security.SecureRandom createSecureRandom() throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field secureRandomAlgorithm:Ljava/lang/String;
       4: invokestatic  #22                 // Method java/security/SecureRandom.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;
       7: areturn

  private java.util.Collection<javax.net.ssl.TrustManager> createTrustManagers() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #23                 // Method createTrustManagerKeyStore:()Ljava/security/KeyStore;
       4: astore_1
       5: aload_1
       6: ifnonnull     18
       9: new           #24                 // class java/util/ArrayList
      12: dup
      13: iconst_0
      14: invokespecial #25                 // Method java/util/ArrayList."<init>":(I)V
      17: areturn
      18: aload_0
      19: getfield      #10                 // Field trustStoreAlgorithm:Ljava/lang/String;
      22: invokestatic  #26                 // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
      25: astore_2
      26: aload_2
      27: aload_1
      28: invokevirtual #27                 // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
      31: aload_2
      32: invokevirtual #28                 // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
      35: invokestatic  #29                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      38: areturn

  private java.util.Collection<javax.net.ssl.KeyManager> createKeyManagers() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method createKeyManagerKeyStore:()Ljava/security/KeyStore;
       4: astore_1
       5: aload_1
       6: ifnonnull     18
       9: new           #24                 // class java/util/ArrayList
      12: dup
      13: iconst_0
      14: invokespecial #25                 // Method java/util/ArrayList."<init>":(I)V
      17: areturn
      18: aload_0
      19: getfield      #8                  // Field keyStoreAlgorithm:Ljava/lang/String;
      22: invokestatic  #31                 // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
      25: astore_2
      26: aload_2
      27: aload_1
      28: aload_0
      29: getfield      #32                 // Field keyStoreKeyPassword:Ljava/lang/String;
      32: ifnonnull     56
      35: aload_0
      36: getfield      #33                 // Field keyStorePassword:Ljava/lang/String;
      39: ifnonnull     46
      42: aconst_null
      43: goto          63
      46: aload_0
      47: getfield      #33                 // Field keyStorePassword:Ljava/lang/String;
      50: invokevirtual #34                 // Method java/lang/String.toCharArray:()[C
      53: goto          63
      56: aload_0
      57: getfield      #32                 // Field keyStoreKeyPassword:Ljava/lang/String;
      60: invokevirtual #34                 // Method java/lang/String.toCharArray:()[C
      63: invokevirtual #35                 // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
      66: aload_2
      67: invokevirtual #36                 // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      70: invokestatic  #29                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      73: areturn

  private java.security.KeyStore createTrustManagerKeyStore() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #37                 // Field trustStore:Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field trustStoreType:Ljava/lang/String;
      13: invokestatic  #38                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      16: astore_1
      17: aload_0
      18: getfield      #37                 // Field trustStore:Ljava/lang/String;
      21: invokestatic  #39                 // Method org/apache/activemq/spring/Utils.resourceFromString:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      24: invokeinterface #40,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
      29: astore_2
      30: aload_1
      31: aload_2
      32: aload_0
      33: getfield      #41                 // Field trustStorePassword:Ljava/lang/String;
      36: ifnonnull     43
      39: aconst_null
      40: goto          50
      43: aload_0
      44: getfield      #41                 // Field trustStorePassword:Ljava/lang/String;
      47: invokevirtual #34                 // Method java/lang/String.toCharArray:()[C
      50: invokevirtual #42                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      53: aload_2
      54: invokevirtual #43                 // Method java/io/InputStream.close:()V
      57: goto          67
      60: astore_3
      61: aload_2
      62: invokevirtual #43                 // Method java/io/InputStream.close:()V
      65: aload_3
      66: athrow
      67: aload_1
      68: areturn
    Exception table:
       from    to  target type
          30    53    60   any
          60    61    60   any

  private java.security.KeyStore createKeyManagerKeyStore() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #44                 // Field keyStore:Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #3                  // Field keyStoreType:Ljava/lang/String;
      13: invokestatic  #38                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      16: astore_1
      17: aload_0
      18: getfield      #44                 // Field keyStore:Ljava/lang/String;
      21: invokestatic  #39                 // Method org/apache/activemq/spring/Utils.resourceFromString:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      24: invokeinterface #40,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
      29: astore_2
      30: aload_1
      31: aload_2
      32: aload_0
      33: getfield      #33                 // Field keyStorePassword:Ljava/lang/String;
      36: ifnonnull     43
      39: aconst_null
      40: goto          50
      43: aload_0
      44: getfield      #33                 // Field keyStorePassword:Ljava/lang/String;
      47: invokevirtual #34                 // Method java/lang/String.toCharArray:()[C
      50: invokevirtual #42                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      53: aload_2
      54: invokevirtual #43                 // Method java/io/InputStream.close:()V
      57: goto          67
      60: astore_3
      61: aload_2
      62: invokevirtual #43                 // Method java/io/InputStream.close:()V
      65: aload_3
      66: athrow
      67: aload_1
      68: areturn
    Exception table:
       from    to  target type
          30    53    60   any
          60    61    60   any

  public java.lang.String getTrustStoreType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field trustStoreType:Ljava/lang/String;
       4: areturn

  public java.lang.String getKeyStoreType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field keyStoreType:Ljava/lang/String;
       4: areturn

  public java.lang.String getKeyStore();
    Code:
       0: aload_0
       1: getfield      #44                 // Field keyStore:Ljava/lang/String;
       4: areturn

  public void setKeyStore(java.lang.String) throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field keyStore:Ljava/lang/String;
       5: return

  public java.lang.String getTrustStore();
    Code:
       0: aload_0
       1: getfield      #37                 // Field trustStore:Ljava/lang/String;
       4: areturn

  public void setTrustStore(java.lang.String) throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field trustStore:Ljava/lang/String;
       5: return

  public java.lang.String getKeyStoreAlgorithm();
    Code:
       0: aload_0
       1: getfield      #8                  // Field keyStoreAlgorithm:Ljava/lang/String;
       4: areturn

  public void setKeyStoreAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field keyStoreAlgorithm:Ljava/lang/String;
       5: return

  public java.lang.String getTrustStoreAlgorithm();
    Code:
       0: aload_0
       1: getfield      #10                 // Field trustStoreAlgorithm:Ljava/lang/String;
       4: areturn

  public void setTrustStoreAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field trustStoreAlgorithm:Ljava/lang/String;
       5: return

  public java.lang.String getKeyStoreKeyPassword();
    Code:
       0: aload_0
       1: getfield      #32                 // Field keyStoreKeyPassword:Ljava/lang/String;
       4: areturn

  public void setKeyStoreKeyPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field keyStoreKeyPassword:Ljava/lang/String;
       5: return

  public java.lang.String getKeyStorePassword();
    Code:
       0: aload_0
       1: getfield      #33                 // Field keyStorePassword:Ljava/lang/String;
       4: areturn

  public void setKeyStorePassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field keyStorePassword:Ljava/lang/String;
       5: return

  public java.lang.String getTrustStorePassword();
    Code:
       0: aload_0
       1: getfield      #41                 // Field trustStorePassword:Ljava/lang/String;
       4: areturn

  public void setTrustStorePassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field trustStorePassword:Ljava/lang/String;
       5: return

  public void setKeyStoreType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field keyStoreType:Ljava/lang/String;
       5: return

  public void setTrustStoreType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field trustStoreType:Ljava/lang/String;
       5: return

  public java.lang.String getSecureRandomAlgorithm();
    Code:
       0: aload_0
       1: getfield      #6                  // Field secureRandomAlgorithm:Ljava/lang/String;
       4: areturn

  public void setSecureRandomAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field secureRandomAlgorithm:Ljava/lang/String;
       5: return
}
