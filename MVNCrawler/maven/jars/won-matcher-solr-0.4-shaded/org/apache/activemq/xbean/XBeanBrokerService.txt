Compiled from "XBeanBrokerService.java"
public class org.apache.activemq.xbean.XBeanBrokerService extends org.apache.activemq.broker.BrokerService {
  private boolean start;

  public org.apache.activemq.xbean.XBeanBrokerService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/broker/BrokerService."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/activemq/broker/BrokerFactory.getStartDefault:()Z
       8: putfield      #3                  // Field start:Z
      11: return

  private void postConstruct();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method afterPropertiesSet:()V
       4: goto          17
       7: astore_1
       8: new           #6                  // class java/lang/RuntimeException
      11: dup
      12: aload_1
      13: invokespecial #7                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method ensureSystemUsageHasStore:()V
       4: aload_0
       5: invokevirtual #9                  // Method shouldAutostart:()Z
       8: ifeq          15
      11: aload_0
      12: invokevirtual #10                 // Method start:()V
      15: return

  protected boolean shouldAutostart();
    Code:
       0: aload_0
       1: getfield      #3                  // Field start:Z
       4: ireturn

  private void ensureSystemUsageHasStore() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getSystemUsage:()Lorg/apache/activemq/usage/SystemUsage;
       4: astore_1
       5: aload_1
       6: invokevirtual #12                 // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
       9: invokevirtual #13                 // Method org/apache/activemq/usage/StoreUsage.getStore:()Lorg/apache/activemq/store/PersistenceAdapter;
      12: ifnonnull     26
      15: aload_1
      16: invokevirtual #12                 // Method org/apache/activemq/usage/SystemUsage.getStoreUsage:()Lorg/apache/activemq/usage/StoreUsage;
      19: aload_0
      20: invokevirtual #14                 // Method getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
      23: invokevirtual #15                 // Method org/apache/activemq/usage/StoreUsage.setStore:(Lorg/apache/activemq/store/PersistenceAdapter;)V
      26: aload_1
      27: invokevirtual #16                 // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
      30: invokevirtual #17                 // Method org/apache/activemq/usage/TempUsage.getStore:()Lorg/apache/activemq/store/PListStore;
      33: ifnonnull     47
      36: aload_1
      37: invokevirtual #16                 // Method org/apache/activemq/usage/SystemUsage.getTempUsage:()Lorg/apache/activemq/usage/TempUsage;
      40: aload_0
      41: invokevirtual #18                 // Method getTempDataStore:()Lorg/apache/activemq/store/PListStore;
      44: invokevirtual #19                 // Method org/apache/activemq/usage/TempUsage.setStore:(Lorg/apache/activemq/store/PListStore;)V
      47: aload_1
      48: invokevirtual #20                 // Method org/apache/activemq/usage/SystemUsage.getJobSchedulerUsage:()Lorg/apache/activemq/usage/JobSchedulerUsage;
      51: invokevirtual #21                 // Method org/apache/activemq/usage/JobSchedulerUsage.getStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      54: ifnonnull     68
      57: aload_1
      58: invokevirtual #20                 // Method org/apache/activemq/usage/SystemUsage.getJobSchedulerUsage:()Lorg/apache/activemq/usage/JobSchedulerUsage;
      61: aload_0
      62: invokevirtual #22                 // Method getJobSchedulerStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      65: invokevirtual #23                 // Method org/apache/activemq/usage/JobSchedulerUsage.setStore:(Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;)V
      68: return

  private void preDestroy();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method destroy:()V
       4: goto          17
       7: astore_1
       8: new           #6                  // class java/lang/RuntimeException
      11: dup
      12: aload_1
      13: invokespecial #7                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method stop:()V
       4: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #27                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #28                 // Method org/springframework/beans/CachedIntrospectionResults.clearClassLoader:(Ljava/lang/ClassLoader;)V
      10: aload_0
      11: invokespecial #29                 // Method org/apache/activemq/broker/BrokerService.stop:()V
      14: return

  public void setStart(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field start:Z
       5: return
}
