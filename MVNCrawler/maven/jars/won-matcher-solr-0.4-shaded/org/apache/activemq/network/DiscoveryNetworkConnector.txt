Compiled from "DiscoveryNetworkConnector.java"
public class org.apache.activemq.network.DiscoveryNetworkConnector extends org.apache.activemq.network.NetworkConnector implements org.apache.activemq.transport.discovery.DiscoveryListener {
  private static final org.slf4j.Logger LOG;

  private org.apache.activemq.transport.discovery.DiscoveryAgent discoveryAgent;

  private java.util.Map<java.lang.String, java.lang.String> parameters;

  private final java.util.concurrent.ConcurrentMap<java.net.URI, org.apache.activemq.command.DiscoveryEvent> activeEvents;

  private java.net.URI discoveryUri;

  public org.apache.activemq.network.DiscoveryNetworkConnector();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/activemq/network/NetworkConnector."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field activeEvents:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public org.apache.activemq.network.DiscoveryNetworkConnector(java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/activemq/network/NetworkConnector."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field activeEvents:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: invokevirtual #6                  // Method setUri:(Ljava/net/URI;)V
      20: return

  public void setUri(java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field discoveryUri:Ljava/net/URI;
       5: aload_0
       6: aload_1
       7: invokestatic  #8                  // Method org/apache/activemq/transport/discovery/DiscoveryAgentFactory.createDiscoveryAgent:(Ljava/net/URI;)Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      10: invokevirtual #9                  // Method setDiscoveryAgent:(Lorg/apache/activemq/transport/discovery/DiscoveryAgent;)V
      13: aload_0
      14: aload_1
      15: invokestatic  #10                 // Method org/apache/activemq/util/URISupport.parseParameters:(Ljava/net/URI;)Ljava/util/Map;
      18: putfield      #11                 // Field parameters:Ljava/util/Map;
      21: aload_0
      22: invokevirtual #12                 // Method getDiscoveryAgent:()Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      25: aload_0
      26: getfield      #11                 // Field parameters:Ljava/util/Map;
      29: invokestatic  #13                 // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;)Z
      32: pop
      33: goto          49
      36: astore_2
      37: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      40: ldc           #16                 // String failed to parse query parameters from discoveryURI: {}
      42: aload_1
      43: aload_2
      44: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      49: return
    Exception table:
       from    to  target type
          13    33    36   Class java/net/URISyntaxException

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #7                  // Field discoveryUri:Ljava/net/URI;
       4: areturn

  public void onServiceAdd(org.apache.activemq.command.DiscoveryEvent);
    Code:
       0: aload_0
       1: getfield      #18                 // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
       4: invokevirtual #19                 // Method org/apache/activemq/util/ServiceSupport.isStopped:()Z
       7: ifne          20
      10: aload_0
      11: getfield      #18                 // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
      14: invokevirtual #20                 // Method org/apache/activemq/util/ServiceSupport.isStopping:()Z
      17: ifeq          21
      20: return
      21: aload_1
      22: invokevirtual #21                 // Method org/apache/activemq/command/DiscoveryEvent.getServiceName:()Ljava/lang/String;
      25: astore_2
      26: aload_2
      27: ifnull        493
      30: new           #22                 // class java/net/URI
      33: dup
      34: aload_2
      35: invokespecial #23                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      38: astore_3
      39: goto          58
      42: astore        4
      44: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #24                 // String Could not connect to remote URI: {} due to bad URI syntax:
      49: aload_2
      50: aload         4
      52: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      57: return
      58: aload_0
      59: getfield      #25                 // Field localURI:Ljava/net/URI;
      62: aload_3
      63: invokevirtual #26                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      66: ifeq          81
      69: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      72: ldc           #27                 // String not connecting loopback: {}
      74: aload_3
      75: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      80: return
      81: aload_0
      82: getfield      #29                 // Field connectionFilter:Lorg/apache/activemq/network/ConnectionFilter;
      85: ifnull        113
      88: aload_0
      89: getfield      #29                 // Field connectionFilter:Lorg/apache/activemq/network/ConnectionFilter;
      92: aload_3
      93: invokeinterface #30,  2           // InterfaceMethod org/apache/activemq/network/ConnectionFilter.connectTo:(Ljava/net/URI;)Z
      98: ifne          113
     101: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     104: ldc           #31                 // String connectionFilter disallows connection to: {}
     106: aload_3
     107: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     112: return
     113: aload_0
     114: getfield      #5                  // Field activeEvents:Ljava/util/concurrent/ConcurrentMap;
     117: aload_3
     118: aload_1
     119: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: ifnull        139
     127: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     130: ldc           #33                 // String Discovery agent generated a duplicate onServiceAdd event for: {}
     132: aload_3
     133: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     138: return
     139: aload_3
     140: astore        4
     142: aload         4
     144: aload_0
     145: getfield      #11                 // Field parameters:Ljava/util/Map;
     148: ldc           #34                 // String discovered.
     150: invokestatic  #35                 // Method org/apache/activemq/util/URISupport.applyParameters:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/String;)Ljava/net/URI;
     153: astore        4
     155: goto          188
     158: astore        5
     160: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     163: ldc           #36                 // String could not apply query parameters: {} to: {}
     165: iconst_2
     166: anewarray     #37                 // class java/lang/Object
     169: dup
     170: iconst_0
     171: aload_0
     172: getfield      #11                 // Field parameters:Ljava/util/Map;
     175: aastore
     176: dup
     177: iconst_1
     178: aload         4
     180: aastore
     181: aload         5
     183: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     188: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     191: ldc           #38                 // String Establishing network connection from {} to {}
     193: aload_0
     194: getfield      #25                 // Field localURI:Ljava/net/URI;
     197: aload         4
     199: invokeinterface #39,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     204: aload_0
     205: invokevirtual #40                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
     208: invokevirtual #41                 // Method org/apache/activemq/broker/BrokerService.getSslContext:()Lorg/apache/activemq/broker/SslContext;
     211: invokestatic  #42                 // Method org/apache/activemq/broker/SslContext.setCurrentSslContext:(Lorg/apache/activemq/broker/SslContext;)V
     214: aload         4
     216: invokestatic  #43                 // Method org/apache/activemq/transport/TransportFactory.connect:(Ljava/net/URI;)Lorg/apache/activemq/transport/Transport;
     219: astore        5
     221: goto          271
     224: astore        7
     226: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     229: ldc           #45                 // String Could not connect to remote URI: {}: {}
     231: aload         4
     233: aload         7
     235: invokevirtual #46                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     238: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     243: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     246: ldc           #47                 // String Connection failure exception:
     248: aload         7
     250: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     255: aload_0
     256: getfield      #5                  // Field activeEvents:Ljava/util/concurrent/ConcurrentMap;
     259: aload_3
     260: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     265: pop
     266: aconst_null
     267: invokestatic  #42                 // Method org/apache/activemq/broker/SslContext.setCurrentSslContext:(Lorg/apache/activemq/broker/SslContext;)V
     270: return
     271: aload_0
     272: invokevirtual #50                 // Method createLocalTransport:()Lorg/apache/activemq/transport/Transport;
     275: astore        6
     277: goto          334
     280: astore        7
     282: aload         5
     284: invokestatic  #51                 // Method org/apache/activemq/util/ServiceSupport.dispose:(Lorg/apache/activemq/Service;)V
     287: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     290: ldc           #52                 // String Could not connect to local URI: {}: {}
     292: aload_0
     293: getfield      #25                 // Field localURI:Ljava/net/URI;
     296: aload         7
     298: invokevirtual #46                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     301: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     306: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     309: ldc           #47                 // String Connection failure exception:
     311: aload         7
     313: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     318: aload_0
     319: getfield      #5                  // Field activeEvents:Ljava/util/concurrent/ConcurrentMap;
     322: aload_3
     323: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     328: pop
     329: aconst_null
     330: invokestatic  #42                 // Method org/apache/activemq/broker/SslContext.setCurrentSslContext:(Lorg/apache/activemq/broker/SslContext;)V
     333: return
     334: aconst_null
     335: invokestatic  #42                 // Method org/apache/activemq/broker/SslContext.setCurrentSslContext:(Lorg/apache/activemq/broker/SslContext;)V
     338: goto          350
     341: astore        8
     343: aconst_null
     344: invokestatic  #42                 // Method org/apache/activemq/broker/SslContext.setCurrentSslContext:(Lorg/apache/activemq/broker/SslContext;)V
     347: aload         8
     349: athrow
     350: aload_0
     351: aload         6
     353: aload         5
     355: aload_1
     356: invokevirtual #53                 // Method createBridge:(Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/command/DiscoveryEvent;)Lorg/apache/activemq/network/NetworkBridge;
     359: astore        7
     361: aload_0
     362: getfield      #54                 // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
     365: dup
     366: astore        8
     368: monitorenter
     369: aload_0
     370: getfield      #54                 // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
     373: aload_3
     374: aload         7
     376: invokevirtual #55                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     379: pop
     380: aload         8
     382: monitorexit
     383: goto          394
     386: astore        9
     388: aload         8
     390: monitorexit
     391: aload         9
     393: athrow
     394: aload         7
     396: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/network/NetworkBridge.start:()V
     401: goto          493
     404: astore        8
     406: aload         6
     408: invokestatic  #51                 // Method org/apache/activemq/util/ServiceSupport.dispose:(Lorg/apache/activemq/Service;)V
     411: aload         5
     413: invokestatic  #51                 // Method org/apache/activemq/util/ServiceSupport.dispose:(Lorg/apache/activemq/Service;)V
     416: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     419: ldc           #57                 // String Could not start network bridge between: {} and: {} due to: {}
     421: iconst_3
     422: anewarray     #37                 // class java/lang/Object
     425: dup
     426: iconst_0
     427: aload_0
     428: getfield      #25                 // Field localURI:Ljava/net/URI;
     431: aastore
     432: dup
     433: iconst_1
     434: aload_3
     435: aastore
     436: dup
     437: iconst_2
     438: aload         8
     440: invokevirtual #46                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     443: aastore
     444: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     449: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     452: ldc           #59                 // String Start failure exception:
     454: aload         8
     456: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     461: aload_0
     462: getfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
     465: aload_1
     466: invokeinterface #60,  2           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryAgent.serviceFailed:(Lorg/apache/activemq/command/DiscoveryEvent;)V
     471: goto          493
     474: astore        9
     476: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     479: ldc           #62                 // String Discovery agent failure while handling failure event: {}
     481: aload         9
     483: invokevirtual #63                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     486: aload         9
     488: invokeinterface #64,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     493: return
    Exception table:
       from    to  target type
          30    39    42   Class java/net/URISyntaxException
         142   155   158   Class java/net/URISyntaxException
         214   221   224   Class java/lang/Exception
         271   277   280   Class java/lang/Exception
         204   266   341   any
         271   329   341   any
         341   343   341   any
         369   383   386   any
         386   391   386   any
         361   401   404   Class java/lang/Exception
         461   471   474   Class java/io/IOException

  public void onServiceRemove(org.apache.activemq.command.DiscoveryEvent);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method org/apache/activemq/command/DiscoveryEvent.getServiceName:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        82
       9: new           #22                 // class java/net/URI
      12: dup
      13: aload_2
      14: invokespecial #23                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      17: astore_3
      18: goto          37
      21: astore        4
      23: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #24                 // String Could not connect to remote URI: {} due to bad URI syntax:
      28: aload_2
      29: aload         4
      31: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      36: return
      37: aload_0
      38: getfield      #5                  // Field activeEvents:Ljava/util/concurrent/ConcurrentMap;
      41: aload_3
      42: aload_1
      43: invokeinterface #65,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifeq          82
      51: aload_0
      52: getfield      #54                 // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
      55: dup
      56: astore        4
      58: monitorenter
      59: aload_0
      60: getfield      #54                 // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
      63: aload_3
      64: invokevirtual #66                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload         4
      70: monitorexit
      71: goto          82
      74: astore        5
      76: aload         4
      78: monitorexit
      79: aload         5
      81: athrow
      82: return
    Exception table:
       from    to  target type
           9    18    21   Class java/net/URISyntaxException
          59    71    74   any
          74    79    74   any

  public org.apache.activemq.transport.discovery.DiscoveryAgent getDiscoveryAgent();
    Code:
       0: aload_0
       1: getfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
       4: areturn

  public void setDiscoveryAgent(org.apache.activemq.transport.discovery.DiscoveryAgent);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
       5: aload_1
       6: ifnull        19
       9: aload_0
      10: getfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      13: aload_0
      14: invokeinterface #67,  2           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryAgent.setDiscoveryListener:(Lorg/apache/activemq/transport/discovery/DiscoveryListener;)V
      19: return

  protected void handleStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
       4: ifnonnull     17
       7: new           #68                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #69                 // String You must configure the \'discoveryAgent\' property
      13: invokespecial #70                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      21: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryAgent.start:()V
      26: aload_0
      27: invokespecial #72                 // Method org/apache/activemq/network/NetworkConnector.handleStart:()V
      30: return

  protected void handleStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #54                 // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #73                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          53
      22: aload_2
      23: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #77                 // class org/apache/activemq/network/NetworkBridge
      31: astore_3
      32: aload_3
      33: invokeinterface #78,  1           // InterfaceMethod org/apache/activemq/network/NetworkBridge.stop:()V
      38: goto          50
      41: astore        4
      43: aload_1
      44: aload_0
      45: aload         4
      47: invokevirtual #79                 // Method org/apache/activemq/util/ServiceStopper.onException:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      50: goto          13
      53: aload_0
      54: getfield      #54                 // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
      57: invokevirtual #80                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      60: aload_0
      61: getfield      #5                  // Field activeEvents:Ljava/util/concurrent/ConcurrentMap;
      64: invokeinterface #81,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      69: aload_0
      70: getfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
      73: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/transport/discovery/DiscoveryAgent.stop:()V
      78: goto          88
      81: astore_2
      82: aload_1
      83: aload_0
      84: aload_2
      85: invokevirtual #79                 // Method org/apache/activemq/util/ServiceStopper.onException:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      88: aload_0
      89: aload_1
      90: invokespecial #83                 // Method org/apache/activemq/network/NetworkConnector.handleStop:(Lorg/apache/activemq/util/ServiceStopper;)V
      93: return
    Exception table:
       from    to  target type
          32    38    41   Class java/lang/Exception
          69    78    81   Class java/lang/Exception

  protected org.apache.activemq.network.NetworkBridge createBridge(org.apache.activemq.transport.Transport, org.apache.activemq.transport.Transport, org.apache.activemq.command.DiscoveryEvent);
    Code:
       0: new           #84                 // class org/apache/activemq/network/DiscoveryNetworkConnector$1DiscoverNetworkBridgeListener
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #40                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       9: aload_0
      10: invokevirtual #85                 // Method getObjectName:()Ljavax/management/ObjectName;
      13: aload_3
      14: invokespecial #86                 // Method org/apache/activemq/network/DiscoveryNetworkConnector$1DiscoverNetworkBridgeListener."<init>":(Lorg/apache/activemq/network/DiscoveryNetworkConnector;Lorg/apache/activemq/broker/BrokerService;Ljavax/management/ObjectName;Lorg/apache/activemq/command/DiscoveryEvent;)V
      17: astore        4
      19: aload_0
      20: aload_1
      21: aload_2
      22: aload         4
      24: invokestatic  #87                 // Method org/apache/activemq/network/NetworkBridgeFactory.createBridge:(Lorg/apache/activemq/network/NetworkBridgeConfiguration;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/network/NetworkBridgeListener;)Lorg/apache/activemq/network/DemandForwardingBridge;
      27: astore        5
      29: aload         5
      31: aload_0
      32: invokevirtual #40                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      35: invokevirtual #88                 // Method org/apache/activemq/network/DemandForwardingBridge.setBrokerService:(Lorg/apache/activemq/broker/BrokerService;)V
      38: aload_0
      39: aload         5
      41: invokevirtual #89                 // Method configureBridge:(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;)Lorg/apache/activemq/network/NetworkBridge;
      44: areturn

  public java.lang.String toString();
    Code:
       0: new           #90                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #92                 // String DiscoveryNetworkConnector:
       9: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #94                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #95                 // String :
      21: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #40                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      28: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  static org.apache.activemq.transport.discovery.DiscoveryAgent access$000(org.apache.activemq.network.DiscoveryNetworkConnector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field discoveryAgent:Lorg/apache/activemq/transport/discovery/DiscoveryAgent;
       4: areturn

  static {};
    Code:
       0: ldc_w         #98                 // class org/apache/activemq/network/DiscoveryNetworkConnector
       3: invokestatic  #99                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
