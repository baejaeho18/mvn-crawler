Compiled from "MBeanBridgeDestination.java"
public class org.apache.activemq.network.MBeanBridgeDestination {
  private static final org.slf4j.Logger LOG;

  private final org.apache.activemq.broker.BrokerService brokerService;

  private final org.apache.activemq.network.NetworkBridge bridge;

  private final org.apache.activemq.broker.jmx.NetworkBridgeView networkBridgeView;

  private final org.apache.activemq.network.NetworkBridgeConfiguration networkBridgeConfiguration;

  private final org.apache.activemq.thread.Scheduler scheduler;

  private final java.lang.Runnable purgeInactiveDestinationViewTask;

  private java.util.Map<org.apache.activemq.command.ActiveMQDestination, javax.management.ObjectName> destinationObjectNameMap;

  private java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.jmx.NetworkDestinationView> outboundDestinationViewMap;

  private java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.jmx.NetworkDestinationView> inboundDestinationViewMap;

  public org.apache.activemq.network.MBeanBridgeDestination(org.apache.activemq.broker.BrokerService, org.apache.activemq.network.NetworkBridgeConfiguration, org.apache.activemq.network.NetworkBridge, org.apache.activemq.broker.jmx.NetworkBridgeView);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #6                  // Field outboundDestinationViewMap:Ljava/util/Map;
      26: aload_0
      27: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #7                  // Field inboundDestinationViewMap:Ljava/util/Map;
      37: aload_0
      38: aload_1
      39: putfield      #8                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      42: aload_0
      43: aload_2
      44: putfield      #9                  // Field networkBridgeConfiguration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      47: aload_0
      48: aload_3
      49: putfield      #10                 // Field bridge:Lorg/apache/activemq/network/NetworkBridge;
      52: aload_0
      53: aload         4
      55: putfield      #11                 // Field networkBridgeView:Lorg/apache/activemq/broker/jmx/NetworkBridgeView;
      58: aload_0
      59: aload_1
      60: invokevirtual #12                 // Method org/apache/activemq/broker/BrokerService.getScheduler:()Lorg/apache/activemq/thread/Scheduler;
      63: putfield      #13                 // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      66: aload_0
      67: new           #14                 // class org/apache/activemq/network/MBeanBridgeDestination$1
      70: dup
      71: aload_0
      72: invokespecial #15                 // Method org/apache/activemq/network/MBeanBridgeDestination$1."<init>":(Lorg/apache/activemq/network/MBeanBridgeDestination;)V
      75: putfield      #16                 // Field purgeInactiveDestinationViewTask:Ljava/lang/Runnable;
      78: return

  public void onOutboundMessage(org.apache.activemq.command.Message);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field outboundDestinationViewMap:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
      18: astore_3
      19: aload_3
      20: ifnonnull     170
      23: aload_0
      24: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
      27: dup
      28: astore        4
      30: monitorenter
      31: aload_0
      32: getfield      #6                  // Field outboundDestinationViewMap:Ljava/util/Map;
      35: aload_2
      36: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
      44: dup
      45: astore_3
      46: ifnonnull     156
      49: aload_0
      50: getfield      #10                 // Field bridge:Lorg/apache/activemq/network/NetworkBridge;
      53: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/network/NetworkBridge.getMbeanObjectName:()Ljavax/management/ObjectName;
      58: astore        5
      60: aload         5
      62: aload_2
      63: invokestatic  #21                 // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createNetworkOutBoundDestinationObjectName:(Ljavax/management/ObjectName;Lorg/apache/activemq/command/ActiveMQDestination;)Ljavax/management/ObjectName;
      66: astore        6
      68: new           #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
      71: dup
      72: aload_0
      73: getfield      #11                 // Field networkBridgeView:Lorg/apache/activemq/broker/jmx/NetworkBridgeView;
      76: aload_2
      77: invokevirtual #22                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      80: invokespecial #23                 // Method org/apache/activemq/broker/jmx/NetworkDestinationView."<init>":(Lorg/apache/activemq/broker/jmx/NetworkBridgeView;Ljava/lang/String;)V
      83: astore_3
      84: aload_0
      85: getfield      #8                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      88: invokevirtual #24                 // Method org/apache/activemq/broker/BrokerService.getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      91: aload_3
      92: aload         6
      94: invokestatic  #25                 // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      97: aload_0
      98: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
     101: aload_2
     102: aload         6
     104: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: getfield      #6                  // Field outboundDestinationViewMap:Ljava/util/Map;
     114: aload_2
     115: aload_3
     116: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     121: pop
     122: goto          156
     125: astore        6
     127: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
     130: new           #29                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #31                 // String Failed to register
     139: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_2
     143: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: aload         6
     151: invokeinterface #35,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     156: aload         4
     158: monitorexit
     159: goto          170
     162: astore        7
     164: aload         4
     166: monitorexit
     167: aload         7
     169: athrow
     170: aload_3
     171: invokevirtual #36                 // Method org/apache/activemq/broker/jmx/NetworkDestinationView.messageSent:()V
     174: return
    Exception table:
       from    to  target type
          60   122   125   Class java/lang/Exception
          31   159   162   any
         162   167   162   any

  public void onInboundMessage(org.apache.activemq.command.Message);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_2
       5: aload_0
       6: getfield      #7                  // Field inboundDestinationViewMap:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
      18: astore_3
      19: aload_3
      20: ifnonnull     178
      23: aload_0
      24: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
      27: dup
      28: astore        4
      30: monitorenter
      31: aload_0
      32: getfield      #7                  // Field inboundDestinationViewMap:Ljava/util/Map;
      35: aload_2
      36: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
      44: dup
      45: astore_3
      46: ifnonnull     164
      49: aload_0
      50: getfield      #10                 // Field bridge:Lorg/apache/activemq/network/NetworkBridge;
      53: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/network/NetworkBridge.getMbeanObjectName:()Ljavax/management/ObjectName;
      58: astore        5
      60: aload         5
      62: aload_2
      63: invokestatic  #37                 // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createNetworkInBoundDestinationObjectName:(Ljavax/management/ObjectName;Lorg/apache/activemq/command/ActiveMQDestination;)Ljavax/management/ObjectName;
      66: astore        6
      68: new           #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
      71: dup
      72: aload_0
      73: getfield      #11                 // Field networkBridgeView:Lorg/apache/activemq/broker/jmx/NetworkBridgeView;
      76: aload_2
      77: invokevirtual #22                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      80: invokespecial #23                 // Method org/apache/activemq/broker/jmx/NetworkDestinationView."<init>":(Lorg/apache/activemq/broker/jmx/NetworkBridgeView;Ljava/lang/String;)V
      83: astore_3
      84: aload_0
      85: getfield      #11                 // Field networkBridgeView:Lorg/apache/activemq/broker/jmx/NetworkBridgeView;
      88: aload_3
      89: invokevirtual #38                 // Method org/apache/activemq/broker/jmx/NetworkBridgeView.addNetworkDestinationView:(Lorg/apache/activemq/broker/jmx/NetworkDestinationView;)V
      92: aload_0
      93: getfield      #8                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      96: invokevirtual #24                 // Method org/apache/activemq/broker/BrokerService.getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      99: aload_3
     100: aload         6
     102: invokestatic  #25                 // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
     105: aload_0
     106: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
     109: aload_2
     110: aload         6
     112: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: aload_0
     119: getfield      #7                  // Field inboundDestinationViewMap:Ljava/util/Map;
     122: aload_2
     123: aload_3
     124: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: goto          164
     133: astore        6
     135: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
     138: new           #29                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc           #31                 // String Failed to register
     147: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_2
     151: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     154: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: aload         6
     159: invokeinterface #35,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     164: aload         4
     166: monitorexit
     167: goto          178
     170: astore        7
     172: aload         4
     174: monitorexit
     175: aload         7
     177: athrow
     178: aload_3
     179: invokevirtual #36                 // Method org/apache/activemq/broker/jmx/NetworkDestinationView.messageSent:()V
     182: return
    Exception table:
       from    to  target type
          60   130   133   Class java/lang/Exception
          31   167   170   any
         170   175   170   any

  public void start();
    Code:
       0: aload_0
       1: getfield      #9                  // Field networkBridgeConfiguration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
       4: invokevirtual #39                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.isGcDestinationViews:()Z
       7: ifeq          36
      10: aload_0
      11: getfield      #9                  // Field networkBridgeConfiguration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      14: invokevirtual #40                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getGcSweepTime:()J
      17: lstore_1
      18: lload_1
      19: lconst_0
      20: lcmp
      21: ifle          36
      24: aload_0
      25: getfield      #13                 // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      28: aload_0
      29: getfield      #16                 // Field purgeInactiveDestinationViewTask:Ljava/lang/Runnable;
      32: lload_1
      33: invokevirtual #41                 // Method org/apache/activemq/thread/Scheduler.executePeriodically:(Ljava/lang/Runnable;J)V
      36: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #42                 // Method org/apache/activemq/broker/BrokerService.isUseJmx:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #13                 // Field scheduler:Lorg/apache/activemq/thread/Scheduler;
      15: aload_0
      16: getfield      #16                 // Field purgeInactiveDestinationViewTask:Ljava/lang/Runnable;
      19: invokevirtual #43                 // Method org/apache/activemq/thread/Scheduler.cancel:(Ljava/lang/Runnable;)V
      22: aload_0
      23: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
      26: invokeinterface #44,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      31: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      36: astore_1
      37: aload_1
      38: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          93
      46: aload_1
      47: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #48                 // class javax/management/ObjectName
      55: astore_2
      56: aload_2
      57: ifnull        71
      60: aload_0
      61: getfield      #8                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      64: invokevirtual #24                 // Method org/apache/activemq/broker/BrokerService.getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      67: aload_2
      68: invokevirtual #49                 // Method org/apache/activemq/broker/jmx/ManagementContext.unregisterMBean:(Ljavax/management/ObjectName;)V
      71: goto          90
      74: astore_3
      75: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
      78: ldc           #51                 // String Network bridge could not be unregistered in JMX: {}
      80: aload_3
      81: invokevirtual #52                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      84: aload_3
      85: invokeinterface #53,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      90: goto          37
      93: aload_0
      94: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
      97: invokeinterface #54,  1           // InterfaceMethod java/util/Map.clear:()V
     102: aload_0
     103: getfield      #6                  // Field outboundDestinationViewMap:Ljava/util/Map;
     106: invokeinterface #54,  1           // InterfaceMethod java/util/Map.clear:()V
     111: aload_0
     112: getfield      #7                  // Field inboundDestinationViewMap:Ljava/util/Map;
     115: invokeinterface #54,  1           // InterfaceMethod java/util/Map.clear:()V
     120: return
    Exception table:
       from    to  target type
          56    71    74   Class java/lang/Throwable

  private void purgeInactiveDestinationViews();
    Code:
       0: aload_0
       1: getfield      #8                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #42                 // Method org/apache/activemq/broker/BrokerService.isUseJmx:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: aload_0
      13: getfield      #7                  // Field inboundDestinationViewMap:Ljava/util/Map;
      16: invokespecial #55                 // Method purgeInactiveDestinationView:(Ljava/util/Map;)V
      19: aload_0
      20: aload_0
      21: getfield      #6                  // Field outboundDestinationViewMap:Ljava/util/Map;
      24: invokespecial #55                 // Method purgeInactiveDestinationView:(Ljava/util/Map;)V
      27: return

  private void purgeInactiveDestinationView(java.util.Map<org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.broker.jmx.NetworkDestinationView>);
    Code:
       0: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #9                  // Field networkBridgeConfiguration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
       7: invokevirtual #40                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getGcSweepTime:()J
      10: lsub
      11: lstore_2
      12: aload_1
      13: invokeinterface #57,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #58,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          182
      35: aload         4
      37: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #59                 // class java/util/Map$Entry
      45: astore        5
      47: aload         5
      49: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      54: checkcast     #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
      57: invokevirtual #61                 // Method org/apache/activemq/broker/jmx/NetworkDestinationView.getLastAccessTime:()J
      60: lload_2
      61: lcmp
      62: ifgt          179
      65: aload_0
      66: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
      69: dup
      70: astore        6
      72: monitorenter
      73: aload_1
      74: aload         5
      76: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      81: invokeinterface #63,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload_0
      88: getfield      #5                  // Field destinationObjectNameMap:Ljava/util/Map;
      91: aload         5
      93: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      98: invokeinterface #63,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #48                 // class javax/management/ObjectName
     106: astore        7
     108: aload         7
     110: ifnull        152
     113: aload         7
     115: ifnull        130
     118: aload_0
     119: getfield      #8                  // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     122: invokevirtual #24                 // Method org/apache/activemq/broker/BrokerService.getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
     125: aload         7
     127: invokevirtual #49                 // Method org/apache/activemq/broker/jmx/ManagementContext.unregisterMBean:(Ljavax/management/ObjectName;)V
     130: goto          152
     133: astore        8
     135: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
     138: ldc           #51                 // String Network bridge could not be unregistered in JMX: {}
     140: aload         8
     142: invokevirtual #52                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     145: aload         8
     147: invokeinterface #53,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     152: aload         5
     154: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     159: checkcast     #19                 // class org/apache/activemq/broker/jmx/NetworkDestinationView
     162: invokevirtual #64                 // Method org/apache/activemq/broker/jmx/NetworkDestinationView.close:()V
     165: aload         6
     167: monitorexit
     168: goto          179
     171: astore        9
     173: aload         6
     175: monitorexit
     176: aload         9
     178: athrow
     179: goto          25
     182: return
    Exception table:
       from    to  target type
         113   130   133   Class java/lang/Throwable
          73   168   171   any
         171   176   171   any

  static void access$000(org.apache.activemq.network.MBeanBridgeDestination);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method purgeInactiveDestinationViews:()V
       4: return

  static {};
    Code:
       0: ldc_w         #65                 // class org/apache/activemq/network/MBeanBridgeDestination
       3: invokestatic  #66                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
