Compiled from "DemandForwardingBridgeSupport.java"
public abstract class org.apache.activemq.network.DemandForwardingBridgeSupport implements org.apache.activemq.network.NetworkBridge,org.apache.activemq.broker.BrokerServiceAware {
  private static final org.slf4j.Logger LOG;

  protected static final java.lang.String DURABLE_SUB_PREFIX;

  protected final org.apache.activemq.transport.Transport localBroker;

  protected final org.apache.activemq.transport.Transport remoteBroker;

  protected org.apache.activemq.util.IdGenerator idGenerator;

  protected final org.apache.activemq.util.LongSequenceGenerator consumerIdGenerator;

  protected org.apache.activemq.command.ConnectionInfo localConnectionInfo;

  protected org.apache.activemq.command.ConnectionInfo remoteConnectionInfo;

  protected org.apache.activemq.command.SessionInfo localSessionInfo;

  protected org.apache.activemq.command.ProducerInfo producerInfo;

  protected java.lang.String remoteBrokerName;

  protected java.lang.String localClientId;

  protected org.apache.activemq.command.ConsumerInfo demandConsumerInfo;

  protected int demandConsumerDispatched;

  protected final java.util.concurrent.atomic.AtomicBoolean localBridgeStarted;

  protected final java.util.concurrent.atomic.AtomicBoolean remoteBridgeStarted;

  protected final java.util.concurrent.atomic.AtomicBoolean bridgeFailed;

  protected final java.util.concurrent.atomic.AtomicBoolean disposed;

  protected org.apache.activemq.command.BrokerId localBrokerId;

  protected org.apache.activemq.command.ActiveMQDestination[] excludedDestinations;

  protected org.apache.activemq.command.ActiveMQDestination[] dynamicallyIncludedDestinations;

  protected org.apache.activemq.command.ActiveMQDestination[] staticallyIncludedDestinations;

  protected org.apache.activemq.command.ActiveMQDestination[] durableDestinations;

  protected final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ConsumerId, org.apache.activemq.network.DemandSubscription> subscriptionMapByLocalId;

  protected final java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ConsumerId, org.apache.activemq.network.DemandSubscription> subscriptionMapByRemoteId;

  protected final org.apache.activemq.command.BrokerId[] localBrokerPath;

  protected final java.util.concurrent.CountDownLatch startedLatch;

  protected final java.util.concurrent.CountDownLatch localStartedLatch;

  protected final java.util.concurrent.atomic.AtomicBoolean lastConnectSucceeded;

  protected org.apache.activemq.network.NetworkBridgeConfiguration configuration;

  protected final org.apache.activemq.network.NetworkBridgeFilterFactory defaultFilterFactory;

  protected final org.apache.activemq.command.BrokerId[] remoteBrokerPath;

  protected org.apache.activemq.command.BrokerId remoteBrokerId;

  final java.util.concurrent.atomic.AtomicLong enqueueCounter;

  final java.util.concurrent.atomic.AtomicLong dequeueCounter;

  private org.apache.activemq.network.NetworkBridgeListener networkBridgeListener;

  private boolean createdByDuplex;

  private org.apache.activemq.command.BrokerInfo localBrokerInfo;

  private org.apache.activemq.command.BrokerInfo remoteBrokerInfo;

  private final org.apache.activemq.network.DemandForwardingBridgeSupport$FutureBrokerInfo futureRemoteBrokerInfo;

  private final org.apache.activemq.network.DemandForwardingBridgeSupport$FutureBrokerInfo futureLocalBrokerInfo;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private org.apache.activemq.broker.TransportConnection duplexInitiatingConnection;

  private final java.util.concurrent.atomic.AtomicBoolean duplexInitiatingConnectionInfoReceived;

  protected org.apache.activemq.broker.BrokerService brokerService;

  private javax.management.ObjectName mbeanObjectName;

  private final java.util.concurrent.ExecutorService serialExecutor;

  private org.apache.activemq.transport.Transport duplexInboundLocalBroker;

  private org.apache.activemq.command.ProducerInfo duplexInboundLocalProducerInfo;

  public org.apache.activemq.network.DemandForwardingBridgeSupport(org.apache.activemq.network.NetworkBridgeConfiguration, org.apache.activemq.transport.Transport, org.apache.activemq.transport.Transport);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class org/apache/activemq/util/IdGenerator
       8: dup
       9: invokespecial #9                  // Method org/apache/activemq/util/IdGenerator."<init>":()V
      12: putfield      #10                 // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
      15: aload_0
      16: new           #11                 // class org/apache/activemq/util/LongSequenceGenerator
      19: dup
      20: invokespecial #12                 // Method org/apache/activemq/util/LongSequenceGenerator."<init>":()V
      23: putfield      #13                 // Field consumerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      26: aload_0
      27: ldc           #14                 // String Unknown
      29: putfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
      32: aload_0
      33: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      36: dup
      37: iconst_0
      38: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      41: putfield      #18                 // Field localBridgeStarted:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: aload_0
      45: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      48: dup
      49: iconst_0
      50: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      53: putfield      #19                 // Field remoteBridgeStarted:Ljava/util/concurrent/atomic/AtomicBoolean;
      56: aload_0
      57: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      60: dup
      61: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      64: putfield      #21                 // Field bridgeFailed:Ljava/util/concurrent/atomic/AtomicBoolean;
      67: aload_0
      68: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      71: dup
      72: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      75: putfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      78: aload_0
      79: new           #23                 // class java/util/concurrent/ConcurrentHashMap
      82: dup
      83: invokespecial #24                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      86: putfield      #25                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
      89: aload_0
      90: new           #23                 // class java/util/concurrent/ConcurrentHashMap
      93: dup
      94: invokespecial #24                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      97: putfield      #26                 // Field subscriptionMapByRemoteId:Ljava/util/concurrent/ConcurrentHashMap;
     100: aload_0
     101: iconst_1
     102: anewarray     #27                 // class org/apache/activemq/command/BrokerId
     105: dup
     106: iconst_0
     107: aconst_null
     108: aastore
     109: putfield      #28                 // Field localBrokerPath:[Lorg/apache/activemq/command/BrokerId;
     112: aload_0
     113: new           #29                 // class java/util/concurrent/CountDownLatch
     116: dup
     117: iconst_2
     118: invokespecial #30                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     121: putfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     124: aload_0
     125: new           #29                 // class java/util/concurrent/CountDownLatch
     128: dup
     129: iconst_1
     130: invokespecial #30                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     133: putfield      #32                 // Field localStartedLatch:Ljava/util/concurrent/CountDownLatch;
     136: aload_0
     137: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
     140: dup
     141: iconst_0
     142: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     145: putfield      #33                 // Field lastConnectSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
     148: aload_0
     149: new           #34                 // class org/apache/activemq/network/DefaultNetworkBridgeFilterFactory
     152: dup
     153: invokespecial #35                 // Method org/apache/activemq/network/DefaultNetworkBridgeFilterFactory."<init>":()V
     156: putfield      #36                 // Field defaultFilterFactory:Lorg/apache/activemq/network/NetworkBridgeFilterFactory;
     159: aload_0
     160: iconst_1
     161: anewarray     #27                 // class org/apache/activemq/command/BrokerId
     164: dup
     165: iconst_0
     166: aconst_null
     167: aastore
     168: putfield      #37                 // Field remoteBrokerPath:[Lorg/apache/activemq/command/BrokerId;
     171: aload_0
     172: new           #38                 // class java/util/concurrent/atomic/AtomicLong
     175: dup
     176: invokespecial #39                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
     179: putfield      #40                 // Field enqueueCounter:Ljava/util/concurrent/atomic/AtomicLong;
     182: aload_0
     183: new           #38                 // class java/util/concurrent/atomic/AtomicLong
     186: dup
     187: invokespecial #39                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
     190: putfield      #41                 // Field dequeueCounter:Ljava/util/concurrent/atomic/AtomicLong;
     193: aload_0
     194: new           #42                 // class org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo
     197: dup
     198: aload_0
     199: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     202: aload_0
     203: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
     206: invokespecial #44                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo."<init>":(Lorg/apache/activemq/command/BrokerInfo;Ljava/util/concurrent/atomic/AtomicBoolean;)V
     209: putfield      #5                  // Field futureRemoteBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
     212: aload_0
     213: new           #42                 // class org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo
     216: dup
     217: aload_0
     218: getfield      #45                 // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     221: aload_0
     222: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
     225: invokespecial #44                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo."<init>":(Lorg/apache/activemq/command/BrokerInfo;Ljava/util/concurrent/atomic/AtomicBoolean;)V
     228: putfield      #6                  // Field futureLocalBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
     231: aload_0
     232: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
     235: dup
     236: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
     239: putfield      #46                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     242: aload_0
     243: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
     246: dup
     247: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
     250: putfield      #47                 // Field duplexInitiatingConnectionInfoReceived:Ljava/util/concurrent/atomic/AtomicBoolean;
     253: aload_0
     254: aconst_null
     255: putfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     258: aload_0
     259: invokestatic  #49                 // Method java/util/concurrent/Executors.newSingleThreadExecutor:()Ljava/util/concurrent/ExecutorService;
     262: putfield      #4                  // Field serialExecutor:Ljava/util/concurrent/ExecutorService;
     265: aload_0
     266: aconst_null
     267: putfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     270: aload_0
     271: aload_1
     272: putfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     275: aload_0
     276: aload_2
     277: putfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     280: aload_0
     281: aload_3
     282: putfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     285: return

  public void duplexStart(org.apache.activemq.broker.TransportConnection, org.apache.activemq.command.BrokerInfo, org.apache.activemq.command.BrokerInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #45                 // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       5: aload_0
       6: aload_3
       7: putfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      10: aload_0
      11: aload_1
      12: putfield      #54                 // Field duplexInitiatingConnection:Lorg/apache/activemq/broker/TransportConnection;
      15: aload_0
      16: invokevirtual #55                 // Method start:()V
      19: aload_0
      20: aload_3
      21: invokevirtual #56                 // Method serviceRemoteCommand:(Lorg/apache/activemq/command/Command;)V
      24: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #46                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          195
      12: aload_0
      13: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      16: ifnonnull     46
      19: new           #58                 // class java/lang/IllegalArgumentException
      22: dup
      23: new           #59                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #61                 // String BrokerService is null on
      32: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #65                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: invokevirtual #66                 // Method isDuplex:()Z
      50: ifeq          93
      53: aload_0
      54: aload_0
      55: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      58: invokevirtual #67                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
      61: invokestatic  #68                 // Method org/apache/activemq/network/NetworkBridgeFactory.createLocalTransport:(Lorg/apache/activemq/broker/Broker;)Lorg/apache/activemq/transport/Transport;
      64: putfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
      67: aload_0
      68: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
      71: new           #69                 // class org/apache/activemq/network/DemandForwardingBridgeSupport$1
      74: dup
      75: aload_0
      76: invokespecial #70                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport$1."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;)V
      79: invokeinterface #71,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      84: aload_0
      85: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
      88: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/transport/Transport.start:()V
      93: aload_0
      94: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      97: new           #73                 // class org/apache/activemq/network/DemandForwardingBridgeSupport$2
     100: dup
     101: aload_0
     102: invokespecial #74                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport$2."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;)V
     105: invokeinterface #71,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
     110: aload_0
     111: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     114: new           #75                 // class org/apache/activemq/network/DemandForwardingBridgeSupport$3
     117: dup
     118: aload_0
     119: invokespecial #76                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport$3."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;)V
     122: invokeinterface #71,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
     127: aload_0
     128: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     131: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/transport/Transport.start:()V
     136: aload_0
     137: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     140: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/transport/Transport.start:()V
     145: aload_0
     146: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
     149: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     152: ifne          177
     155: aload_0
     156: invokevirtual #78                 // Method triggerStartAsyncNetworkBridgeCreation:()V
     159: goto          195
     162: astore_1
     163: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     166: ldc           #80                 // String Caught exception from remote start
     168: aload_1
     169: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     174: goto          195
     177: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     180: ldc           #82                 // String Bridge was disposed before the start() method was fully executed.
     182: invokeinterface #83,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     187: new           #84                 // class org/apache/activemq/transport/TransportDisposedIOException
     190: dup
     191: invokespecial #85                 // Method org/apache/activemq/transport/TransportDisposedIOException."<init>":()V
     194: athrow
     195: return
    Exception table:
       from    to  target type
         155   159   162   Class java/io/IOException

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #46                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          368
      12: aload_0
      13: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: iconst_0
      17: iconst_1
      18: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      21: ifeq          347
      24: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      27: ldc           #86                 // String  stopping {} bridge to {}
      29: aload_0
      30: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      33: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      36: aload_0
      37: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
      40: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #5                  // Field futureRemoteBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
      49: iconst_1
      50: invokevirtual #89                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo.cancel:(Z)Z
      53: pop
      54: aload_0
      55: getfield      #6                  // Field futureLocalBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
      58: iconst_1
      59: invokevirtual #89                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo.cancel:(Z)Z
      62: pop
      63: aload_0
      64: getfield      #90                 // Field networkBridgeListener:Lorg/apache/activemq/network/NetworkBridgeListener;
      67: astore_1
      68: aload_1
      69: ifnull        79
      72: aload_1
      73: aload_0
      74: invokeinterface #91,  2           // InterfaceMethod org/apache/activemq/network/NetworkBridgeListener.onStop:(Lorg/apache/activemq/network/NetworkBridge;)V
      79: aload_0
      80: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
      83: invokevirtual #92                 // Method java/util/concurrent/CountDownLatch.getCount:()J
      86: ldc2_w        #93                 // long 2l
      89: lcmp
      90: ifge          161
      93: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      96: ldc           #95                 // String {} unregister bridge ({}) to {}
      98: iconst_3
      99: anewarray     #96                 // class java/lang/Object
     102: dup
     103: iconst_0
     104: aload_0
     105: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     108: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     111: aastore
     112: dup
     113: iconst_1
     114: aload_0
     115: aastore
     116: dup
     117: iconst_2
     118: aload_0
     119: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     122: aastore
     123: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     128: aload_0
     129: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     132: invokevirtual #67                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
     135: aconst_null
     136: aload_0
     137: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     140: invokeinterface #98,  3           // InterfaceMethod org/apache/activemq/broker/Broker.removeBroker:(Lorg/apache/activemq/broker/Connection;Lorg/apache/activemq/command/BrokerInfo;)V
     145: aload_0
     146: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     149: invokevirtual #67                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
     152: aload_0
     153: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     156: invokeinterface #99,  2           // InterfaceMethod org/apache/activemq/broker/Broker.networkBridgeStopped:(Lorg/apache/activemq/command/BrokerInfo;)V
     161: aload_0
     162: getfield      #19                 // Field remoteBridgeStarted:Ljava/util/concurrent/atomic/AtomicBoolean;
     165: iconst_0
     166: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     169: new           #29                 // class java/util/concurrent/CountDownLatch
     172: dup
     173: iconst_1
     174: invokespecial #30                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     177: astore_2
     178: aload_0
     179: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     182: invokevirtual #101                // Method org/apache/activemq/broker/BrokerService.getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
     185: new           #102                // class org/apache/activemq/network/DemandForwardingBridgeSupport$4
     188: dup
     189: aload_0
     190: aload_2
     191: invokespecial #103                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$4."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;Ljava/util/concurrent/CountDownLatch;)V
     194: ldc           #104                // String ActiveMQ ForwardingBridge StopTask
     196: invokevirtual #105                // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;Ljava/lang/String;)V
     199: aload_2
     200: ldc2_w        #106                // long 10l
     203: getstatic     #108                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     206: invokevirtual #109                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
     209: ifne          222
     212: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     215: ldc           #110                // String Network Could not shutdown in a timely manner
     217: invokeinterface #111,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     222: new           #112                // class org/apache/activemq/util/ServiceStopper
     225: dup
     226: invokespecial #113                // Method org/apache/activemq/util/ServiceStopper."<init>":()V
     229: astore_2
     230: aload_2
     231: aload_0
     232: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     235: invokevirtual #114                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     238: aload_2
     239: aload_0
     240: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     243: invokevirtual #114                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     246: aload_2
     247: aload_0
     248: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     251: invokevirtual #114                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     254: aload_0
     255: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     258: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     261: aload_0
     262: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     265: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     268: aload_0
     269: getfield      #32                 // Field localStartedLatch:Ljava/util/concurrent/CountDownLatch;
     272: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     275: aload_2
     276: invokevirtual #116                // Method org/apache/activemq/util/ServiceStopper.throwFirstException:()V
     279: goto          347
     282: astore_3
     283: new           #112                // class org/apache/activemq/util/ServiceStopper
     286: dup
     287: invokespecial #113                // Method org/apache/activemq/util/ServiceStopper."<init>":()V
     290: astore        4
     292: aload         4
     294: aload_0
     295: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     298: invokevirtual #114                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     301: aload         4
     303: aload_0
     304: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     307: invokevirtual #114                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     310: aload         4
     312: aload_0
     313: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     316: invokevirtual #114                // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     319: aload_0
     320: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     323: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     326: aload_0
     327: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     330: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     333: aload_0
     334: getfield      #32                 // Field localStartedLatch:Ljava/util/concurrent/CountDownLatch;
     337: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     340: aload         4
     342: invokevirtual #116                // Method org/apache/activemq/util/ServiceStopper.throwFirstException:()V
     345: aload_3
     346: athrow
     347: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     350: ldc           #117                // String {} bridge to {} stopped
     352: aload_0
     353: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     356: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     359: aload_0
     360: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     363: invokeinterface #118,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     368: return
    Exception table:
       from    to  target type
          79   222   282   any
         282   283   282   any

  protected void triggerStartAsyncNetworkBridgeCreation() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #101                // Method org/apache/activemq/broker/BrokerService.getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
       7: new           #119                // class org/apache/activemq/network/DemandForwardingBridgeSupport$5
      10: dup
      11: aload_0
      12: invokespecial #120                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$5."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;)V
      15: invokevirtual #121                // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;)V
      18: return

  private void collectBrokerInfos();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field futureRemoteBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
       5: invokevirtual #122                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo.get:()Lorg/apache/activemq/command/BrokerInfo;
       8: putfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      11: aload_0
      12: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      15: ifnonnull     32
      18: aload_0
      19: new           #123                // class java/lang/Throwable
      22: dup
      23: ldc           #124                // String remoteBrokerInfo is null
      25: invokespecial #125                // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      28: invokespecial #126                // Method fireBridgeFailed:(Ljava/lang/Throwable;)V
      31: return
      32: goto          42
      35: astore_1
      36: aload_0
      37: aload_1
      38: invokevirtual #128                // Method serviceRemoteException:(Ljava/lang/Throwable;)V
      41: return
      42: aload_0
      43: aload_0
      44: getfield      #6                  // Field futureLocalBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
      47: invokevirtual #122                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo.get:()Lorg/apache/activemq/command/BrokerInfo;
      50: putfield      #45                 // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      53: aload_0
      54: getfield      #45                 // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      57: ifnonnull     74
      60: aload_0
      61: new           #123                // class java/lang/Throwable
      64: dup
      65: ldc           #129                // String localBrokerInfo is null
      67: invokespecial #125                // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      70: invokespecial #126                // Method fireBridgeFailed:(Ljava/lang/Throwable;)V
      73: return
      74: aload_0
      75: aload_0
      76: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      79: invokevirtual #130                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      82: putfield      #131                // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
      85: aload_0
      86: getfield      #132                // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
      89: aload_0
      90: getfield      #131                // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
      93: invokevirtual #133                // Method org/apache/activemq/command/BrokerId.equals:(Ljava/lang/Object;)Z
      96: ifeq          152
      99: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     102: ldc           #134                // String {} disconnecting remote loop back connector for: {}, with id: {}
     104: iconst_3
     105: anewarray     #96                 // class java/lang/Object
     108: dup
     109: iconst_0
     110: aload_0
     111: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     114: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     117: aastore
     118: dup
     119: iconst_1
     120: aload_0
     121: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     124: aastore
     125: dup
     126: iconst_2
     127: aload_0
     128: getfield      #131                // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
     131: aastore
     132: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     137: aload_0
     138: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     141: invokestatic  #135                // Method org/apache/activemq/util/ServiceSupport.dispose:(Lorg/apache/activemq/Service;)V
     144: aload_0
     145: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     148: invokestatic  #135                // Method org/apache/activemq/util/ServiceSupport.dispose:(Lorg/apache/activemq/Service;)V
     151: return
     152: aload_0
     153: getfield      #37                 // Field remoteBrokerPath:[Lorg/apache/activemq/command/BrokerId;
     156: iconst_0
     157: aload_0
     158: getfield      #131                // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
     161: aastore
     162: aload_0
     163: aload_0
     164: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     167: invokevirtual #136                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
     170: putfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     173: aload_0
     174: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     177: invokevirtual #137                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isUseBrokerNamesAsIdSeed:()Z
     180: ifeq          226
     183: aload_0
     184: new           #8                  // class org/apache/activemq/util/IdGenerator
     187: dup
     188: new           #59                 // class java/lang/StringBuilder
     191: dup
     192: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     195: aload_0
     196: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     199: invokevirtual #138                // Method org/apache/activemq/broker/BrokerService.getBrokerName:()Ljava/lang/String;
     202: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: ldc           #139                // String ->
     207: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: aload_0
     211: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     214: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     220: invokespecial #140                // Method org/apache/activemq/util/IdGenerator."<init>":(Ljava/lang/String;)V
     223: putfield      #10                 // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
     226: goto          235
     229: astore_1
     230: aload_0
     231: aload_1
     232: invokevirtual #141                // Method serviceLocalException:(Ljava/lang/Throwable;)V
     235: return
    Exception table:
       from    to  target type
           0    31    35   Class java/lang/Exception
          42    73   229   Class java/lang/Throwable
          74   151   229   Class java/lang/Throwable
         152   226   229   Class java/lang/Throwable

  private void doStartLocalAndRemoteBridges();
    Code:
       0: aload_0
       1: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: invokevirtual #142                // Method isCreatedByDuplex:()Z
      15: ifeq          189
      18: aconst_null
      19: astore_1
      20: aload_0
      21: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      24: invokevirtual #143                // Method org/apache/activemq/command/BrokerInfo.getNetworkProperties:()Ljava/lang/String;
      27: invokestatic  #144                // Method org/apache/activemq/util/MarshallingSupport.stringToProperties:(Ljava/lang/String;)Ljava/util/Properties;
      30: astore_1
      31: aload_0
      32: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      35: aload_1
      36: aconst_null
      37: invokestatic  #145                // Method org/apache/activemq/util/IntrospectionSupport.getProperties:(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)Z
      40: pop
      41: aload_0
      42: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      45: invokevirtual #146                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getExcludedDestinations:()Ljava/util/List;
      48: ifnull        85
      51: aload_0
      52: aload_0
      53: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      56: invokevirtual #146                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getExcludedDestinations:()Ljava/util/List;
      59: aload_0
      60: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      63: invokevirtual #146                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getExcludedDestinations:()Ljava/util/List;
      66: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      71: anewarray     #148                // class org/apache/activemq/command/ActiveMQDestination
      74: invokeinterface #149,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      79: checkcast     #150                // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
      82: putfield      #151                // Field excludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
      85: aload_0
      86: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      89: invokevirtual #152                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getStaticallyIncludedDestinations:()Ljava/util/List;
      92: ifnull        129
      95: aload_0
      96: aload_0
      97: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     100: invokevirtual #152                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getStaticallyIncludedDestinations:()Ljava/util/List;
     103: aload_0
     104: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     107: invokevirtual #152                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getStaticallyIncludedDestinations:()Ljava/util/List;
     110: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
     115: anewarray     #148                // class org/apache/activemq/command/ActiveMQDestination
     118: invokeinterface #149,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     123: checkcast     #150                // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
     126: putfield      #153                // Field staticallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
     129: aload_0
     130: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     133: invokevirtual #154                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getDynamicallyIncludedDestinations:()Ljava/util/List;
     136: ifnull        173
     139: aload_0
     140: aload_0
     141: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     144: invokevirtual #154                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getDynamicallyIncludedDestinations:()Ljava/util/List;
     147: aload_0
     148: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     151: invokevirtual #154                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getDynamicallyIncludedDestinations:()Ljava/util/List;
     154: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
     159: anewarray     #148                // class org/apache/activemq/command/ActiveMQDestination
     162: invokeinterface #149,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     167: checkcast     #150                // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
     170: putfield      #155                // Field dynamicallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
     173: goto          189
     176: astore_2
     177: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     180: ldc           #156                // String Error mapping remote configuration: {}
     182: aload_1
     183: aload_2
     184: invokeinterface #157,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     189: aload_0
     190: invokespecial #158                // Method startLocalBridge:()V
     193: goto          203
     196: astore_1
     197: aload_0
     198: aload_1
     199: invokevirtual #141                // Method serviceLocalException:(Ljava/lang/Throwable;)V
     202: return
     203: aload_0
     204: invokevirtual #159                // Method startRemoteBridge:()V
     207: goto          217
     210: astore_1
     211: aload_0
     212: aload_1
     213: invokevirtual #128                // Method serviceRemoteException:(Ljava/lang/Throwable;)V
     216: return
     217: aload_0
     218: invokevirtual #160                // Method safeWaitUntilStarted:()Z
     221: ifeq          228
     224: aload_0
     225: invokevirtual #161                // Method setupStaticDestinations:()V
     228: goto          237
     231: astore_1
     232: aload_0
     233: aload_1
     234: invokevirtual #141                // Method serviceLocalException:(Ljava/lang/Throwable;)V
     237: return
    Exception table:
       from    to  target type
          20   173   176   Class java/lang/Throwable
         189   193   196   Class java/lang/Throwable
         203   207   210   Class java/lang/Throwable
         217   228   231   Class java/lang/Throwable

  private void startLocalBridge() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #21                 // Field bridgeFailed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          699
      10: aload_0
      11: getfield      #18                 // Field localBridgeStarted:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: iconst_0
      15: iconst_1
      16: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      19: ifeq          699
      22: aload_0
      23: dup
      24: astore_1
      25: monitorenter
      26: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #162                // String {} starting local Bridge, localBroker={}
      31: aload_0
      32: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      35: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      38: aload_0
      39: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      42: invokeinterface #163,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      47: aload_0
      48: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      51: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      54: ifne          663
      57: aload_0
      58: getfield      #10                 // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
      61: ifnonnull     74
      64: new           #164                // class java/lang/IllegalStateException
      67: dup
      68: ldc           #165                // String Id Generator cannot be null
      70: invokespecial #166                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: new           #167                // class org/apache/activemq/command/ConnectionInfo
      78: dup
      79: invokespecial #168                // Method org/apache/activemq/command/ConnectionInfo."<init>":()V
      82: putfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      85: aload_0
      86: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      89: new           #170                // class org/apache/activemq/command/ConnectionId
      92: dup
      93: aload_0
      94: getfield      #10                 // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
      97: invokevirtual #171                // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
     100: invokespecial #172                // Method org/apache/activemq/command/ConnectionId."<init>":(Ljava/lang/String;)V
     103: invokevirtual #173                // Method org/apache/activemq/command/ConnectionInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
     106: aload_0
     107: new           #59                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     114: aload_0
     115: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     118: invokevirtual #174                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getName:()Ljava/lang/String;
     121: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #175                // String _
     126: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     133: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: ldc           #176                // String _inbound_
     138: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_0
     142: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     145: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     148: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: putfield      #177                // Field localClientId:Ljava/lang/String;
     157: aload_0
     158: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     161: aload_0
     162: getfield      #177                // Field localClientId:Ljava/lang/String;
     165: invokevirtual #178                // Method org/apache/activemq/command/ConnectionInfo.setClientId:(Ljava/lang/String;)V
     168: aload_0
     169: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     172: aload_0
     173: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     176: invokevirtual #179                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getUserName:()Ljava/lang/String;
     179: invokevirtual #180                // Method org/apache/activemq/command/ConnectionInfo.setUserName:(Ljava/lang/String;)V
     182: aload_0
     183: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     186: aload_0
     187: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     190: invokevirtual #181                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getPassword:()Ljava/lang/String;
     193: invokevirtual #182                // Method org/apache/activemq/command/ConnectionInfo.setPassword:(Ljava/lang/String;)V
     196: aload_0
     197: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     200: astore_2
     201: aload_2
     202: instanceof    #183                // class org/apache/activemq/transport/TransportFilter
     205: ifeq          219
     208: aload_2
     209: checkcast     #183                // class org/apache/activemq/transport/TransportFilter
     212: invokevirtual #184                // Method org/apache/activemq/transport/TransportFilter.getNext:()Lorg/apache/activemq/transport/Transport;
     215: astore_2
     216: goto          201
     219: aload_2
     220: instanceof    #185                // class org/apache/activemq/transport/tcp/SslTransport
     223: ifeq          242
     226: aload_2
     227: checkcast     #185                // class org/apache/activemq/transport/tcp/SslTransport
     230: invokevirtual #186                // Method org/apache/activemq/transport/tcp/SslTransport.getPeerCertificates:()[Ljava/security/cert/X509Certificate;
     233: astore_3
     234: aload_0
     235: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     238: aload_3
     239: invokevirtual #187                // Method org/apache/activemq/command/ConnectionInfo.setTransportContext:(Ljava/lang/Object;)V
     242: aload_0
     243: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     246: aload_0
     247: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     250: invokeinterface #188,  2          // InterfaceMethod org/apache/activemq/transport/Transport.request:(Ljava/lang/Object;)Ljava/lang/Object;
     255: astore_3
     256: aload_3
     257: instanceof    #189                // class org/apache/activemq/command/ExceptionResponse
     260: ifeq          271
     263: aload_3
     264: checkcast     #189                // class org/apache/activemq/command/ExceptionResponse
     267: invokevirtual #190                // Method org/apache/activemq/command/ExceptionResponse.getException:()Ljava/lang/Throwable;
     270: athrow
     271: aload_0
     272: new           #191                // class org/apache/activemq/command/SessionInfo
     275: dup
     276: aload_0
     277: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     280: lconst_1
     281: invokespecial #192                // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
     284: putfield      #193                // Field localSessionInfo:Lorg/apache/activemq/command/SessionInfo;
     287: aload_0
     288: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     291: aload_0
     292: getfield      #193                // Field localSessionInfo:Lorg/apache/activemq/command/SessionInfo;
     295: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     300: aload_0
     301: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     304: invokevirtual #195                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isDuplex:()Z
     307: ifeq          514
     310: new           #167                // class org/apache/activemq/command/ConnectionInfo
     313: dup
     314: invokespecial #168                // Method org/apache/activemq/command/ConnectionInfo."<init>":()V
     317: astore        4
     319: aload         4
     321: new           #170                // class org/apache/activemq/command/ConnectionId
     324: dup
     325: aload_0
     326: getfield      #10                 // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
     329: invokevirtual #171                // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
     332: invokespecial #172                // Method org/apache/activemq/command/ConnectionId."<init>":(Ljava/lang/String;)V
     335: invokevirtual #173                // Method org/apache/activemq/command/ConnectionInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
     338: aload         4
     340: new           #59                 // class java/lang/StringBuilder
     343: dup
     344: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     347: aload_0
     348: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     351: invokevirtual #174                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getName:()Ljava/lang/String;
     354: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     357: ldc           #175                // String _
     359: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     362: aload_0
     363: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     366: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     369: ldc           #196                // String _inbound_duplex_
     371: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     374: aload_0
     375: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     378: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     381: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     384: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     387: invokevirtual #178                // Method org/apache/activemq/command/ConnectionInfo.setClientId:(Ljava/lang/String;)V
     390: aload         4
     392: aload_0
     393: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     396: invokevirtual #179                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getUserName:()Ljava/lang/String;
     399: invokevirtual #180                // Method org/apache/activemq/command/ConnectionInfo.setUserName:(Ljava/lang/String;)V
     402: aload         4
     404: aload_0
     405: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     408: invokevirtual #181                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getPassword:()Ljava/lang/String;
     411: invokevirtual #182                // Method org/apache/activemq/command/ConnectionInfo.setPassword:(Ljava/lang/String;)V
     414: aload_2
     415: instanceof    #185                // class org/apache/activemq/transport/tcp/SslTransport
     418: ifeq          437
     421: aload_2
     422: checkcast     #185                // class org/apache/activemq/transport/tcp/SslTransport
     425: invokevirtual #186                // Method org/apache/activemq/transport/tcp/SslTransport.getPeerCertificates:()[Ljava/security/cert/X509Certificate;
     428: astore        5
     430: aload         4
     432: aload         5
     434: invokevirtual #187                // Method org/apache/activemq/command/ConnectionInfo.setTransportContext:(Ljava/lang/Object;)V
     437: aload_0
     438: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     441: aload         4
     443: invokeinterface #188,  2          // InterfaceMethod org/apache/activemq/transport/Transport.request:(Ljava/lang/Object;)Ljava/lang/Object;
     448: astore_3
     449: aload_3
     450: instanceof    #189                // class org/apache/activemq/command/ExceptionResponse
     453: ifeq          464
     456: aload_3
     457: checkcast     #189                // class org/apache/activemq/command/ExceptionResponse
     460: invokevirtual #190                // Method org/apache/activemq/command/ExceptionResponse.getException:()Ljava/lang/Throwable;
     463: athrow
     464: new           #191                // class org/apache/activemq/command/SessionInfo
     467: dup
     468: aload         4
     470: lconst_1
     471: invokespecial #192                // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
     474: astore        5
     476: aload_0
     477: new           #197                // class org/apache/activemq/command/ProducerInfo
     480: dup
     481: aload         5
     483: lconst_1
     484: invokespecial #198                // Method org/apache/activemq/command/ProducerInfo."<init>":(Lorg/apache/activemq/command/SessionInfo;J)V
     487: putfield      #199                // Field duplexInboundLocalProducerInfo:Lorg/apache/activemq/command/ProducerInfo;
     490: aload_0
     491: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     494: aload         5
     496: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     501: aload_0
     502: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     505: aload_0
     506: getfield      #199                // Field duplexInboundLocalProducerInfo:Lorg/apache/activemq/command/ProducerInfo;
     509: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     514: aload_0
     515: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     518: invokevirtual #67                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
     521: aload_0
     522: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     525: aload_0
     526: getfield      #200                // Field createdByDuplex:Z
     529: aload_0
     530: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     533: invokevirtual #201                // Method java/lang/Object.toString:()Ljava/lang/String;
     536: invokeinterface #202,  4          // InterfaceMethod org/apache/activemq/broker/Broker.networkBridgeStarted:(Lorg/apache/activemq/command/BrokerInfo;ZLjava/lang/String;)V
     541: aload_0
     542: getfield      #90                 // Field networkBridgeListener:Lorg/apache/activemq/network/NetworkBridgeListener;
     545: astore        4
     547: aload         4
     549: ifnull        560
     552: aload         4
     554: aload_0
     555: invokeinterface #203,  2          // InterfaceMethod org/apache/activemq/network/NetworkBridgeListener.onStart:(Lorg/apache/activemq/network/NetworkBridge;)V
     560: aload_0
     561: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     564: aload_0
     565: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     568: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     573: aload_0
     574: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     577: invokevirtual #67                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
     580: aconst_null
     581: aload_0
     582: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     585: invokeinterface #204,  3          // InterfaceMethod org/apache/activemq/broker/Broker.addBroker:(Lorg/apache/activemq/broker/Connection;Lorg/apache/activemq/command/BrokerInfo;)V
     590: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     593: ldc           #205                // String Network connection between {} and {} ({}) has been established.
     595: iconst_3
     596: anewarray     #96                 // class java/lang/Object
     599: dup
     600: iconst_0
     601: aload_0
     602: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     605: aastore
     606: dup
     607: iconst_1
     608: aload_0
     609: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     612: aastore
     613: dup
     614: iconst_2
     615: aload_0
     616: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     619: aastore
     620: invokeinterface #206,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     625: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     628: ldc           #207                // String {} register bridge ({}) to {}
     630: iconst_3
     631: anewarray     #96                 // class java/lang/Object
     634: dup
     635: iconst_0
     636: aload_0
     637: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     640: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     643: aastore
     644: dup
     645: iconst_1
     646: aload_0
     647: aastore
     648: dup
     649: iconst_2
     650: aload_0
     651: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     654: aastore
     655: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     660: goto          673
     663: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     666: ldc           #208                // String Bridge was disposed before the startLocalBridge() method was fully executed.
     668: invokeinterface #83,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     673: aload_0
     674: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     677: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     680: aload_0
     681: getfield      #32                 // Field localStartedLatch:Ljava/util/concurrent/CountDownLatch;
     684: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     687: aload_1
     688: monitorexit
     689: goto          699
     692: astore        6
     694: aload_1
     695: monitorexit
     696: aload         6
     698: athrow
     699: return
    Exception table:
       from    to  target type
          26   689   692   any
         692   696   692   any

  protected void startRemoteBridge() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field bridgeFailed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          491
      10: aload_0
      11: getfield      #19                 // Field remoteBridgeStarted:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: iconst_0
      15: iconst_1
      16: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      19: ifeq          491
      22: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      25: ldc           #209                // String {} starting remote Bridge, remoteBroker={}
      27: aload_0
      28: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      31: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      34: aload_0
      35: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      38: invokeinterface #163,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      43: aload_0
      44: dup
      45: astore_1
      46: monitorenter
      47: aload_0
      48: invokevirtual #142                // Method isCreatedByDuplex:()Z
      51: ifne          155
      54: new           #210                // class org/apache/activemq/command/BrokerInfo
      57: dup
      58: invokespecial #211                // Method org/apache/activemq/command/BrokerInfo."<init>":()V
      61: astore_2
      62: aload_2
      63: aload_0
      64: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      67: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      70: invokevirtual #212                // Method org/apache/activemq/command/BrokerInfo.setBrokerName:(Ljava/lang/String;)V
      73: aload_2
      74: aload_0
      75: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      78: invokevirtual #213                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerURL:()Ljava/lang/String;
      81: invokevirtual #214                // Method org/apache/activemq/command/BrokerInfo.setBrokerURL:(Ljava/lang/String;)V
      84: aload_2
      85: iconst_1
      86: invokevirtual #215                // Method org/apache/activemq/command/BrokerInfo.setNetworkConnection:(Z)V
      89: aload_2
      90: aload_0
      91: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      94: invokevirtual #195                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isDuplex:()Z
      97: invokevirtual #216                // Method org/apache/activemq/command/BrokerInfo.setDuplexConnection:(Z)V
     100: new           #217                // class java/util/Properties
     103: dup
     104: invokespecial #218                // Method java/util/Properties."<init>":()V
     107: astore_3
     108: aload_0
     109: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     112: aload_3
     113: aconst_null
     114: invokestatic  #145                // Method org/apache/activemq/util/IntrospectionSupport.getProperties:(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)Z
     117: pop
     118: aload_3
     119: ldc           #219                // String networkTTL
     121: invokevirtual #220                // Method java/util/Properties.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: aload_3
     126: invokestatic  #221                // Method org/apache/activemq/util/MarshallingSupport.propertiesToString:(Ljava/util/Properties;)Ljava/lang/String;
     129: astore        4
     131: aload_2
     132: aload         4
     134: invokevirtual #222                // Method org/apache/activemq/command/BrokerInfo.setNetworkProperties:(Ljava/lang/String;)V
     137: aload_2
     138: aload_0
     139: getfield      #132                // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
     142: invokevirtual #223                // Method org/apache/activemq/command/BrokerInfo.setBrokerId:(Lorg/apache/activemq/command/BrokerId;)V
     145: aload_0
     146: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     149: aload_2
     150: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     155: aload_0
     156: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     159: ifnull        178
     162: aload_0
     163: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     166: aload_0
     167: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     170: invokevirtual #225                // Method org/apache/activemq/command/ConnectionInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
     173: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     178: aload_0
     179: new           #167                // class org/apache/activemq/command/ConnectionInfo
     182: dup
     183: invokespecial #168                // Method org/apache/activemq/command/ConnectionInfo."<init>":()V
     186: putfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     189: aload_0
     190: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     193: new           #170                // class org/apache/activemq/command/ConnectionId
     196: dup
     197: aload_0
     198: getfield      #10                 // Field idGenerator:Lorg/apache/activemq/util/IdGenerator;
     201: invokevirtual #171                // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
     204: invokespecial #172                // Method org/apache/activemq/command/ConnectionId."<init>":(Ljava/lang/String;)V
     207: invokevirtual #173                // Method org/apache/activemq/command/ConnectionInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
     210: aload_0
     211: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     214: new           #59                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     221: aload_0
     222: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     225: invokevirtual #174                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getName:()Ljava/lang/String;
     228: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: ldc           #175                // String _
     233: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload_0
     237: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     240: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     243: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: ldc           #226                // String _outbound
     248: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: invokevirtual #178                // Method org/apache/activemq/command/ConnectionInfo.setClientId:(Ljava/lang/String;)V
     257: aload_0
     258: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     261: aload_0
     262: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     265: invokevirtual #179                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getUserName:()Ljava/lang/String;
     268: invokevirtual #180                // Method org/apache/activemq/command/ConnectionInfo.setUserName:(Ljava/lang/String;)V
     271: aload_0
     272: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     275: aload_0
     276: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     279: invokevirtual #181                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getPassword:()Ljava/lang/String;
     282: invokevirtual #182                // Method org/apache/activemq/command/ConnectionInfo.setPassword:(Ljava/lang/String;)V
     285: aload_0
     286: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     289: aload_0
     290: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     293: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     298: new           #191                // class org/apache/activemq/command/SessionInfo
     301: dup
     302: aload_0
     303: getfield      #224                // Field remoteConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     306: lconst_1
     307: invokespecial #192                // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
     310: astore_2
     311: aload_0
     312: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     315: aload_2
     316: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     321: aload_0
     322: new           #197                // class org/apache/activemq/command/ProducerInfo
     325: dup
     326: aload_2
     327: lconst_1
     328: invokespecial #198                // Method org/apache/activemq/command/ProducerInfo."<init>":(Lorg/apache/activemq/command/SessionInfo;J)V
     331: putfield      #227                // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
     334: aload_0
     335: getfield      #227                // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
     338: iconst_0
     339: invokevirtual #228                // Method org/apache/activemq/command/ProducerInfo.setResponseRequired:(Z)V
     342: aload_0
     343: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     346: aload_0
     347: getfield      #227                // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
     350: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     355: aload_0
     356: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     359: invokevirtual #229                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isStaticBridge:()Z
     362: ifne          472
     365: aload_0
     366: new           #230                // class org/apache/activemq/command/ConsumerInfo
     369: dup
     370: aload_2
     371: lconst_1
     372: invokespecial #231                // Method org/apache/activemq/command/ConsumerInfo."<init>":(Lorg/apache/activemq/command/SessionInfo;J)V
     375: putfield      #232                // Field demandConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     378: aload_0
     379: getfield      #232                // Field demandConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     382: iconst_1
     383: invokevirtual #233                // Method org/apache/activemq/command/ConsumerInfo.setDispatchAsync:(Z)V
     386: aload_0
     387: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     390: invokevirtual #234                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getDestinationFilter:()Ljava/lang/String;
     393: astore_3
     394: aload_0
     395: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     398: invokevirtual #235                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isBridgeTempDestinations:()Z
     401: ifeq          430
     404: new           #59                 // class java/lang/StringBuilder
     407: dup
     408: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     411: aload_3
     412: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     415: ldc           #236                // String ,
     417: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     420: getstatic     #237                // Field org/apache/activemq/advisory/AdvisorySupport.TEMP_DESTINATION_COMPOSITE_ADVISORY_TOPIC:Lorg/apache/activemq/command/ActiveMQTopic;
     423: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     426: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     429: astore_3
     430: aload_0
     431: getfield      #232                // Field demandConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     434: new           #238                // class org/apache/activemq/command/ActiveMQTopic
     437: dup
     438: aload_3
     439: invokespecial #239                // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
     442: invokevirtual #240                // Method org/apache/activemq/command/ConsumerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     445: aload_0
     446: getfield      #232                // Field demandConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     449: aload_0
     450: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     453: invokevirtual #241                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getPrefetchSize:()I
     456: invokevirtual #242                // Method org/apache/activemq/command/ConsumerInfo.setPrefetchSize:(I)V
     459: aload_0
     460: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     463: aload_0
     464: getfield      #232                // Field demandConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     467: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     472: aload_0
     473: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
     476: invokevirtual #115                // Method java/util/concurrent/CountDownLatch.countDown:()V
     479: aload_1
     480: monitorexit
     481: goto          491
     484: astore        5
     486: aload_1
     487: monitorexit
     488: aload         5
     490: athrow
     491: return
    Exception table:
       from    to  target type
          47   481   484   any
         484   488   484   any

  public void serviceRemoteException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          126
      10: aload_1
      11: instanceof    #243                // class java/lang/SecurityException
      14: ifne          24
      17: aload_1
      18: instanceof    #244                // class java/security/GeneralSecurityException
      21: ifeq          59
      24: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      27: ldc           #245                // String Network connection between {} and {} shutdown due to a remote error: {}
      29: iconst_3
      30: anewarray     #96                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_0
      36: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      39: aastore
      40: dup
      41: iconst_1
      42: aload_0
      43: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      46: aastore
      47: dup
      48: iconst_2
      49: aload_1
      50: aastore
      51: invokeinterface #246,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      56: goto          91
      59: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      62: ldc           #245                // String Network connection between {} and {} shutdown due to a remote error: {}
      64: iconst_3
      65: anewarray     #96                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_0
      71: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      74: aastore
      75: dup
      76: iconst_1
      77: aload_0
      78: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      81: aastore
      82: dup
      83: iconst_2
      84: aload_1
      85: aastore
      86: invokeinterface #247,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      91: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      94: ldc           #248                // String The remote Exception was: {}
      96: aload_1
      97: aload_1
      98: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     103: aload_0
     104: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     107: invokevirtual #101                // Method org/apache/activemq/broker/BrokerService.getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
     110: new           #249                // class org/apache/activemq/network/DemandForwardingBridgeSupport$6
     113: dup
     114: aload_0
     115: invokespecial #250                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$6."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;)V
     118: invokevirtual #121                // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;)V
     121: aload_0
     122: aload_1
     123: invokespecial #126                // Method fireBridgeFailed:(Ljava/lang/Throwable;)V
     126: return

  protected void serviceRemoteCommand(org.apache.activemq.command.Command);
    Code:
       0: aload_0
       1: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          709
      10: aload_1
      11: invokeinterface #251,  1          // InterfaceMethod org/apache/activemq/command/Command.isMessageDispatch:()Z
      16: ifeq          51
      19: aload_0
      20: invokevirtual #160                // Method safeWaitUntilStarted:()Z
      23: pop
      24: aload_1
      25: checkcast     #252                // class org/apache/activemq/command/MessageDispatch
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      34: invokevirtual #254                // Method org/apache/activemq/command/Message.getDataStructure:()Lorg/apache/activemq/command/DataStructure;
      37: invokespecial #255                // Method serviceRemoteConsumerAdvisory:(Lorg/apache/activemq/command/DataStructure;)V
      40: aload_0
      41: aload_2
      42: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      45: invokespecial #256                // Method ackAdvisory:(Lorg/apache/activemq/command/Message;)V
      48: goto          687
      51: aload_1
      52: invokeinterface #257,  1          // InterfaceMethod org/apache/activemq/command/Command.isBrokerInfo:()Z
      57: ifeq          74
      60: aload_0
      61: getfield      #5                  // Field futureRemoteBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
      64: aload_1
      65: checkcast     #210                // class org/apache/activemq/command/BrokerInfo
      68: invokevirtual #258                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo.set:(Lorg/apache/activemq/command/BrokerInfo;)V
      71: goto          687
      74: aload_1
      75: invokevirtual #259                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      78: ldc_w         #260                // class org/apache/activemq/command/ConnectionError
      81: if_acmpne     100
      84: aload_1
      85: checkcast     #260                // class org/apache/activemq/command/ConnectionError
      88: astore_2
      89: aload_0
      90: aload_2
      91: invokevirtual #261                // Method org/apache/activemq/command/ConnectionError.getException:()Ljava/lang/Throwable;
      94: invokevirtual #128                // Method serviceRemoteException:(Ljava/lang/Throwable;)V
      97: goto          687
     100: aload_0
     101: invokevirtual #66                 // Method isDuplex:()Z
     104: ifeq          633
     107: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     110: ldc_w         #262                // String {} duplex command type: {}
     113: aload_0
     114: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     117: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     120: aload_1
     121: invokeinterface #263,  1          // InterfaceMethod org/apache/activemq/command/Command.getDataStructureType:()B
     126: invokestatic  #264                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     129: invokeinterface #163,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     134: aload_1
     135: invokeinterface #265,  1          // InterfaceMethod org/apache/activemq/command/Command.isMessage:()Z
     140: ifeq          320
     143: aload_1
     144: checkcast     #266                // class org/apache/activemq/command/ActiveMQMessage
     147: astore_2
     148: aload_2
     149: invokevirtual #267                // Method org/apache/activemq/command/ActiveMQMessage.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     152: invokestatic  #268                // Method org/apache/activemq/advisory/AdvisorySupport.isConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     155: ifne          168
     158: aload_2
     159: invokevirtual #267                // Method org/apache/activemq/command/ActiveMQMessage.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     162: invokestatic  #269                // Method org/apache/activemq/advisory/AdvisorySupport.isDestinationAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     165: ifeq          184
     168: aload_0
     169: aload_2
     170: invokevirtual #270                // Method org/apache/activemq/command/ActiveMQMessage.getDataStructure:()Lorg/apache/activemq/command/DataStructure;
     173: invokespecial #255                // Method serviceRemoteConsumerAdvisory:(Lorg/apache/activemq/command/DataStructure;)V
     176: aload_0
     177: aload_2
     178: invokespecial #256                // Method ackAdvisory:(Lorg/apache/activemq/command/Message;)V
     181: goto          317
     184: aload_0
     185: aload_2
     186: invokevirtual #267                // Method org/apache/activemq/command/ActiveMQMessage.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     189: iconst_1
     190: invokevirtual #271                // Method isPermissableDestination:(Lorg/apache/activemq/command/ActiveMQDestination;Z)Z
     193: ifne          197
     196: return
     197: aload_0
     198: aload_2
     199: invokevirtual #272                // Method canDuplexDispatch:(Lorg/apache/activemq/command/Message;)Z
     202: ifeq          274
     205: aload_2
     206: aload_0
     207: getfield      #199                // Field duplexInboundLocalProducerInfo:Lorg/apache/activemq/command/ProducerInfo;
     210: invokevirtual #273                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
     213: invokevirtual #274                // Method org/apache/activemq/command/ActiveMQMessage.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
     216: aload_2
     217: invokevirtual #275                // Method org/apache/activemq/command/ActiveMQMessage.isResponseRequired:()Z
     220: ifne          233
     223: aload_0
     224: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     227: invokevirtual #276                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isAlwaysSyncSend:()Z
     230: ifeq          256
     233: aload_0
     234: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     237: aload_2
     238: new           #277                // class org/apache/activemq/network/DemandForwardingBridgeSupport$7
     241: dup
     242: aload_0
     243: aload_2
     244: invokespecial #278                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$7."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;Lorg/apache/activemq/command/ActiveMQMessage;)V
     247: invokeinterface #279,  3          // InterfaceMethod org/apache/activemq/transport/Transport.asyncRequest:(Ljava/lang/Object;Lorg/apache/activemq/transport/ResponseCallback;)Lorg/apache/activemq/transport/FutureResponse;
     252: pop
     253: goto          266
     256: aload_0
     257: getfield      #50                 // Field duplexInboundLocalBroker:Lorg/apache/activemq/transport/Transport;
     260: aload_2
     261: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     266: aload_0
     267: aload_2
     268: invokevirtual #280                // Method serviceInboundMessage:(Lorg/apache/activemq/command/Message;)V
     271: goto          317
     274: aload_2
     275: invokevirtual #275                // Method org/apache/activemq/command/ActiveMQMessage.isResponseRequired:()Z
     278: ifne          291
     281: aload_0
     282: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     285: invokevirtual #276                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isAlwaysSyncSend:()Z
     288: ifeq          317
     291: new           #281                // class org/apache/activemq/command/Response
     294: dup
     295: invokespecial #282                // Method org/apache/activemq/command/Response."<init>":()V
     298: astore_3
     299: aload_3
     300: aload_2
     301: invokevirtual #283                // Method org/apache/activemq/command/ActiveMQMessage.getCommandId:()I
     304: invokevirtual #284                // Method org/apache/activemq/command/Response.setCorrelationId:(I)V
     307: aload_0
     308: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     311: aload_3
     312: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     317: goto          687
     320: aload_1
     321: invokeinterface #263,  1          // InterfaceMethod org/apache/activemq/command/Command.getDataStructureType:()B
     326: tableswitch   { // 3 to 22
                     3: 420
                     4: 467
                     5: 546
                     6: 480
                     7: 618
                     8: 618
                     9: 618
                    10: 618
                    11: 589
                    12: 618
                    13: 618
                    14: 618
                    15: 618
                    16: 618
                    17: 618
                    18: 618
                    19: 618
                    20: 618
                    21: 618
                    22: 483
               default: 618
          }
     420: aload_0
     421: getfield      #54                 // Field duplexInitiatingConnection:Lorg/apache/activemq/broker/TransportConnection;
     424: ifnull        454
     427: aload_0
     428: getfield      #47                 // Field duplexInitiatingConnectionInfoReceived:Ljava/util/concurrent/atomic/AtomicBoolean;
     431: iconst_0
     432: iconst_1
     433: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     436: ifeq          454
     439: aload_0
     440: getfield      #54                 // Field duplexInitiatingConnection:Lorg/apache/activemq/broker/TransportConnection;
     443: aload_1
     444: checkcast     #167                // class org/apache/activemq/command/ConnectionInfo
     447: invokevirtual #285                // Method org/apache/activemq/broker/TransportConnection.processAddConnection:(Lorg/apache/activemq/command/ConnectionInfo;)Lorg/apache/activemq/command/Response;
     450: pop
     451: goto          630
     454: aload_0
     455: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     458: aload_1
     459: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     464: goto          630
     467: aload_0
     468: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     471: aload_1
     472: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     477: goto          630
     480: goto          630
     483: aload_1
     484: checkcast     #286                // class org/apache/activemq/command/MessageAck
     487: astore_2
     488: aload_0
     489: getfield      #26                 // Field subscriptionMapByRemoteId:Ljava/util/concurrent/ConcurrentHashMap;
     492: aload_2
     493: invokevirtual #287                // Method org/apache/activemq/command/MessageAck.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     496: invokevirtual #288                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     499: checkcast     #289                // class org/apache/activemq/network/DemandSubscription
     502: astore_3
     503: aload_3
     504: ifnull        531
     507: aload_2
     508: aload_3
     509: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     512: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     515: invokevirtual #292                // Method org/apache/activemq/command/MessageAck.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
     518: aload_0
     519: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     522: aload_2
     523: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     528: goto          630
     531: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     534: ldc_w         #293                // String Matching local subscription not found for ack: {}
     537: aload_2
     538: invokeinterface #294,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     543: goto          630
     546: aload_0
     547: getfield      #32                 // Field localStartedLatch:Ljava/util/concurrent/CountDownLatch;
     550: invokevirtual #295                // Method java/util/concurrent/CountDownLatch.await:()V
     553: aload_0
     554: getfield      #46                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     557: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     560: ifeq          574
     563: aload_0
     564: aload_1
     565: checkcast     #230                // class org/apache/activemq/command/ConsumerInfo
     568: invokevirtual #296                // Method addConsumerInfo:(Lorg/apache/activemq/command/ConsumerInfo;)V
     571: goto          630
     574: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     577: ldc_w         #297                // String Stopping - ignoring ConsumerInfo: {}
     580: aload_1
     581: invokeinterface #294,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     586: goto          630
     589: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     592: ldc_w         #298                // String Stopping network bridge on shutdown of remote broker
     595: invokeinterface #111,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     600: aload_0
     601: new           #79                 // class java/io/IOException
     604: dup
     605: aload_1
     606: invokevirtual #201                // Method java/lang/Object.toString:()Ljava/lang/String;
     609: invokespecial #299                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     612: invokevirtual #128                // Method serviceRemoteException:(Ljava/lang/Throwable;)V
     615: goto          630
     618: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     621: ldc_w         #300                // String Ignoring remote command: {}
     624: aload_1
     625: invokeinterface #301,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     630: goto          687
     633: aload_1
     634: invokeinterface #263,  1          // InterfaceMethod org/apache/activemq/command/Command.getDataStructureType:()B
     639: lookupswitch  { // 3
                     1: 672
                    10: 672
                    11: 672
               default: 675
          }
     672: goto          687
     675: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     678: ldc_w         #302                // String Unexpected remote command: {}
     681: aload_1
     682: invokeinterface #294,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     687: goto          709
     690: astore_2
     691: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     694: ldc_w         #303                // String Exception processing remote command: {}
     697: aload_1
     698: aload_2
     699: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     704: aload_0
     705: aload_2
     706: invokevirtual #128                // Method serviceRemoteException:(Ljava/lang/Throwable;)V
     709: return
    Exception table:
       from    to  target type
          10   196   690   Class java/lang/Throwable
         197   687   690   Class java/lang/Throwable

  private void ackAdvisory(org.apache.activemq.command.Message) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #304                // Field demandConsumerDispatched:I
       5: iconst_1
       6: iadd
       7: putfield      #304                // Field demandConsumerDispatched:I
      10: aload_0
      11: getfield      #304                // Field demandConsumerDispatched:I
      14: i2d
      15: aload_0
      16: getfield      #232                // Field demandConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
      19: invokevirtual #305                // Method org/apache/activemq/command/ConsumerInfo.getPrefetchSize:()I
      22: i2d
      23: ldc2_w        #306                // double 0.75d
      26: dmul
      27: dcmpl
      28: ifle          71
      31: new           #286                // class org/apache/activemq/command/MessageAck
      34: dup
      35: aload_1
      36: iconst_2
      37: aload_0
      38: getfield      #304                // Field demandConsumerDispatched:I
      41: invokespecial #308                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/Message;BI)V
      44: astore_2
      45: aload_2
      46: aload_0
      47: getfield      #232                // Field demandConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
      50: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      53: invokevirtual #292                // Method org/apache/activemq/command/MessageAck.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      56: aload_0
      57: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      60: aload_2
      61: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      66: aload_0
      67: iconst_0
      68: putfield      #304                // Field demandConsumerDispatched:I
      71: return

  private void serviceRemoteConsumerAdvisory(org.apache.activemq.command.DataStructure) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
       4: invokevirtual #309                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getConsumerTTL:()I
       7: istore_2
       8: aload_1
       9: invokevirtual #259                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: ldc_w         #230                // class org/apache/activemq/command/ConsumerInfo
      15: if_acmpne     259
      18: aload_1
      19: checkcast     #230                // class org/apache/activemq/command/ConsumerInfo
      22: astore_3
      23: aload_3
      24: invokevirtual #310                // Method org/apache/activemq/command/ConsumerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      27: astore        4
      29: aload_3
      30: invokevirtual #311                // Method org/apache/activemq/command/ConsumerInfo.isBrowser:()Z
      33: ifeq          59
      36: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      39: ldc_w         #312                // String {} Ignoring sub from {}, browsers explicitly suppressed
      42: aload_0
      43: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      46: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      49: aload_0
      50: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
      53: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      58: return
      59: aload         4
      61: ifnull        120
      64: iload_2
      65: iconst_m1
      66: if_icmple     120
      69: aload         4
      71: arraylength
      72: iload_2
      73: if_icmplt     120
      76: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      79: ldc_w         #313                // String {} Ignoring sub from {}, restricted to {} network hops only: {}
      82: iconst_4
      83: anewarray     #96                 // class java/lang/Object
      86: dup
      87: iconst_0
      88: aload_0
      89: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      92: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      95: aastore
      96: dup
      97: iconst_1
      98: aload_0
      99: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     102: aastore
     103: dup
     104: iconst_2
     105: iload_2
     106: invokestatic  #314                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     109: aastore
     110: dup
     111: iconst_3
     112: aload_3
     113: aastore
     114: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     119: return
     120: aload         4
     122: aload_0
     123: getfield      #28                 // Field localBrokerPath:[Lorg/apache/activemq/command/BrokerId;
     126: iconst_0
     127: aaload
     128: invokestatic  #316                // Method contains:([Lorg/apache/activemq/command/BrokerId;Lorg/apache/activemq/command/BrokerId;)Z
     131: ifeq          171
     134: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     137: ldc_w         #317                // String {} Ignoring sub from {}, already routed through this broker once: {}
     140: iconst_3
     141: anewarray     #96                 // class java/lang/Object
     144: dup
     145: iconst_0
     146: aload_0
     147: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     150: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     153: aastore
     154: dup
     155: iconst_1
     156: aload_0
     157: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     160: aastore
     161: dup
     162: iconst_2
     163: aload_3
     164: aastore
     165: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     170: return
     171: aload_0
     172: aload_3
     173: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     176: invokevirtual #319                // Method isPermissableDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     179: ifne          226
     182: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     185: ldc_w         #320                // String {} Ignoring sub from {}, destination {} is not permitted: {}
     188: iconst_4
     189: anewarray     #96                 // class java/lang/Object
     192: dup
     193: iconst_0
     194: aload_0
     195: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     198: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     201: aastore
     202: dup
     203: iconst_1
     204: aload_0
     205: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     208: aastore
     209: dup
     210: iconst_2
     211: aload_3
     212: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     215: aastore
     216: dup
     217: iconst_3
     218: aload_3
     219: aastore
     220: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     225: return
     226: aload_0
     227: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     230: invokevirtual #321                // Method org/apache/activemq/broker/BrokerService.getVmConnectorURI:()Ljava/net/URI;
     233: dup
     234: astore        5
     236: monitorenter
     237: aload_0
     238: aload_3
     239: invokevirtual #296                // Method addConsumerInfo:(Lorg/apache/activemq/command/ConsumerInfo;)V
     242: aload         5
     244: monitorexit
     245: goto          256
     248: astore        6
     250: aload         5
     252: monitorexit
     253: aload         6
     255: athrow
     256: goto          748
     259: aload_1
     260: invokevirtual #259                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     263: ldc_w         #322                // class org/apache/activemq/command/DestinationInfo
     266: if_acmpne     534
     269: aload_1
     270: checkcast     #322                // class org/apache/activemq/command/DestinationInfo
     273: astore_3
     274: aload_3
     275: invokevirtual #323                // Method org/apache/activemq/command/DestinationInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     278: astore        4
     280: aload         4
     282: ifnull        334
     285: iload_2
     286: iconst_m1
     287: if_icmple     334
     290: aload         4
     292: arraylength
     293: iload_2
     294: if_icmplt     334
     297: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     300: ldc_w         #324                // String {} Ignoring destination {} restricted to {} network hops only
     303: iconst_3
     304: anewarray     #96                 // class java/lang/Object
     307: dup
     308: iconst_0
     309: aload_0
     310: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     313: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     316: aastore
     317: dup
     318: iconst_1
     319: aload_3
     320: aastore
     321: dup
     322: iconst_2
     323: iload_2
     324: invokestatic  #314                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     327: aastore
     328: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     333: return
     334: aload_3
     335: invokevirtual #323                // Method org/apache/activemq/command/DestinationInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     338: aload_0
     339: getfield      #28                 // Field localBrokerPath:[Lorg/apache/activemq/command/BrokerId;
     342: iconst_0
     343: aaload
     344: invokestatic  #316                // Method contains:([Lorg/apache/activemq/command/BrokerId;Lorg/apache/activemq/command/BrokerId;)Z
     347: ifeq          370
     350: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     353: ldc_w         #325                // String {} Ignoring destination {} already routed through this broker once
     356: aload_0
     357: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     360: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     363: aload_3
     364: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     369: return
     370: aload_3
     371: aload_0
     372: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     375: invokevirtual #326                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     378: invokevirtual #327                // Method org/apache/activemq/command/DestinationInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
     381: aload_3
     382: invokevirtual #328                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     385: instanceof    #329                // class org/apache/activemq/command/ActiveMQTempDestination
     388: ifeq          415
     391: aload_3
     392: invokevirtual #328                // Method org/apache/activemq/command/DestinationInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     395: checkcast     #329                // class org/apache/activemq/command/ActiveMQTempDestination
     398: astore        5
     400: aload         5
     402: aload_0
     403: getfield      #193                // Field localSessionInfo:Lorg/apache/activemq/command/SessionInfo;
     406: invokevirtual #330                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
     409: invokevirtual #331                // Method org/apache/activemq/command/SessionId.getConnectionId:()Ljava/lang/String;
     412: invokevirtual #332                // Method org/apache/activemq/command/ActiveMQTempDestination.setConnectionId:(Ljava/lang/String;)V
     415: aload_3
     416: aload_0
     417: aload_3
     418: invokevirtual #323                // Method org/apache/activemq/command/DestinationInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     421: aload_0
     422: invokevirtual #333                // Method getRemoteBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     425: invokevirtual #334                // Method appendToBrokerPath:([Lorg/apache/activemq/command/BrokerId;[Lorg/apache/activemq/command/BrokerId;)[Lorg/apache/activemq/command/BrokerId;
     428: invokevirtual #335                // Method org/apache/activemq/command/DestinationInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
     431: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     434: ldc_w         #336                // String {} bridging {} destination on {} from {}, destination: {}
     437: iconst_5
     438: anewarray     #96                 // class java/lang/Object
     441: dup
     442: iconst_0
     443: aload_0
     444: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     447: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     450: aastore
     451: dup
     452: iconst_1
     453: aload_3
     454: invokevirtual #337                // Method org/apache/activemq/command/DestinationInfo.isAddOperation:()Z
     457: ifeq          466
     460: ldc_w         #338                // String add
     463: goto          469
     466: ldc_w         #339                // String remove
     469: aastore
     470: dup
     471: iconst_2
     472: aload_0
     473: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     476: aastore
     477: dup
     478: iconst_3
     479: aload_0
     480: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     483: aastore
     484: dup
     485: iconst_4
     486: aload_3
     487: aastore
     488: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     493: aload_3
     494: invokevirtual #340                // Method org/apache/activemq/command/DestinationInfo.isRemoveOperation:()Z
     497: ifeq          521
     500: aload_0
     501: getfield      #4                  // Field serialExecutor:Ljava/util/concurrent/ExecutorService;
     504: new           #341                // class org/apache/activemq/network/DemandForwardingBridgeSupport$8
     507: dup
     508: aload_0
     509: aload_3
     510: invokespecial #342                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$8."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;Lorg/apache/activemq/command/DestinationInfo;)V
     513: invokeinterface #343,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     518: goto          531
     521: aload_0
     522: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     525: aload_3
     526: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     531: goto          748
     534: aload_1
     535: invokevirtual #259                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     538: ldc_w         #344                // class org/apache/activemq/command/RemoveInfo
     541: if_acmpne     563
     544: aload_1
     545: checkcast     #344                // class org/apache/activemq/command/RemoveInfo
     548: invokevirtual #345                // Method org/apache/activemq/command/RemoveInfo.getObjectId:()Lorg/apache/activemq/command/DataStructure;
     551: checkcast     #346                // class org/apache/activemq/command/ConsumerId
     554: astore_3
     555: aload_0
     556: aload_3
     557: invokevirtual #347                // Method removeDemandSubscription:(Lorg/apache/activemq/command/ConsumerId;)V
     560: goto          748
     563: aload_1
     564: invokevirtual #259                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     567: ldc_w         #348                // class org/apache/activemq/command/RemoveSubscriptionInfo
     570: if_acmpne     748
     573: aload_1
     574: checkcast     #348                // class org/apache/activemq/command/RemoveSubscriptionInfo
     577: astore_3
     578: new           #349                // class org/apache/activemq/command/SubscriptionInfo
     581: dup
     582: aload_3
     583: invokevirtual #350                // Method org/apache/activemq/command/RemoveSubscriptionInfo.getClientId:()Ljava/lang/String;
     586: aload_3
     587: invokevirtual #351                // Method org/apache/activemq/command/RemoveSubscriptionInfo.getSubscriptionName:()Ljava/lang/String;
     590: invokespecial #352                // Method org/apache/activemq/command/SubscriptionInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     593: astore        4
     595: aload_0
     596: getfield      #25                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
     599: invokevirtual #353                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     602: invokeinterface #354,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     607: astore        5
     609: aload         5
     611: invokeinterface #355,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     616: ifeq          748
     619: aload         5
     621: invokeinterface #356,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     626: checkcast     #289                // class org/apache/activemq/network/DemandSubscription
     629: astore        6
     631: aload         6
     633: invokevirtual #357                // Method org/apache/activemq/network/DemandSubscription.getDurableRemoteSubs:()Ljava/util/Set;
     636: aload         4
     638: invokeinterface #358,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     643: istore        7
     645: iload         7
     647: ifeq          745
     650: aload         6
     652: invokevirtual #357                // Method org/apache/activemq/network/DemandSubscription.getDurableRemoteSubs:()Ljava/util/Set;
     655: invokeinterface #359,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     660: ifeq          745
     663: new           #344                // class org/apache/activemq/command/RemoveInfo
     666: dup
     667: aload         6
     669: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     672: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     675: invokespecial #360                // Method org/apache/activemq/command/RemoveInfo."<init>":(Lorg/apache/activemq/command/DataStructure;)V
     678: astore        8
     680: aload_0
     681: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     684: aload         8
     686: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     691: new           #348                // class org/apache/activemq/command/RemoveSubscriptionInfo
     694: dup
     695: invokespecial #361                // Method org/apache/activemq/command/RemoveSubscriptionInfo."<init>":()V
     698: astore        9
     700: aload         9
     702: aload_0
     703: getfield      #177                // Field localClientId:Ljava/lang/String;
     706: invokevirtual #362                // Method org/apache/activemq/command/RemoveSubscriptionInfo.setClientId:(Ljava/lang/String;)V
     709: aload         9
     711: aload         6
     713: invokevirtual #363                // Method org/apache/activemq/network/DemandSubscription.getLocalDurableSubscriber:()Lorg/apache/activemq/command/SubscriptionInfo;
     716: invokevirtual #364                // Method org/apache/activemq/command/SubscriptionInfo.getSubscriptionName:()Ljava/lang/String;
     719: invokevirtual #365                // Method org/apache/activemq/command/RemoveSubscriptionInfo.setSubscriptionName:(Ljava/lang/String;)V
     722: aload         9
     724: aload_0
     725: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     728: invokevirtual #326                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
     731: invokevirtual #366                // Method org/apache/activemq/command/RemoveSubscriptionInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
     734: aload_0
     735: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     738: aload         9
     740: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     745: goto          609
     748: return
    Exception table:
       from    to  target type
         237   245   248   any
         248   253   248   any

  public void serviceLocalException(java.lang.Throwable);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #367                // Method serviceLocalException:(Lorg/apache/activemq/command/MessageDispatch;Ljava/lang/Throwable;)V
       6: return

  public void serviceLocalException(org.apache.activemq.command.MessageDispatch, java.lang.Throwable);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #368                // String serviceLocalException: disposed {} ex
       6: aload_0
       7: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      10: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      13: invokestatic  #369                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      16: aload_2
      17: invokeinterface #163,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: aload_0
      23: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      29: ifne          205
      32: aload_2
      33: instanceof    #370                // class org/apache/activemq/DestinationDoesNotExistException
      36: ifeq          136
      39: aload_2
      40: checkcast     #370                // class org/apache/activemq/DestinationDoesNotExistException
      43: invokevirtual #371                // Method org/apache/activemq/DestinationDoesNotExistException.isTemporary:()Z
      46: ifeq          136
      49: aload_1
      50: ifnull        123
      53: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      56: ldc_w         #372                // String PoisonAck of {} on forwarding error: {}
      59: aload_1
      60: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      63: invokevirtual #373                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      66: aload_2
      67: invokeinterface #374,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      72: new           #286                // class org/apache/activemq/command/MessageAck
      75: dup
      76: aload_1
      77: iconst_1
      78: iconst_1
      79: invokespecial #375                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
      82: astore_3
      83: aload_3
      84: aload_2
      85: invokevirtual #376                // Method org/apache/activemq/command/MessageAck.setPoisonCause:(Ljava/lang/Throwable;)V
      88: aload_0
      89: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      92: aload_3
      93: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      98: goto          114
     101: astore_3
     102: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     105: ldc_w         #377                // String Failed to posion ack message following forward failure:
     108: aload_3
     109: invokeinterface #378,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     114: aload_0
     115: aload_1
     116: aload_2
     117: invokespecial #379                // Method fireFailedForwardAdvisory:(Lorg/apache/activemq/command/MessageDispatch;Ljava/lang/Throwable;)V
     120: goto          135
     123: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     126: ldc_w         #380                // String Ignoring exception on forwarding to non existent temp dest:
     129: aload_2
     130: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     135: return
     136: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     139: ldc_w         #381                // String Network connection between {} and {} shutdown due to a local error: {}
     142: iconst_3
     143: anewarray     #96                 // class java/lang/Object
     146: dup
     147: iconst_0
     148: aload_0
     149: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     152: aastore
     153: dup
     154: iconst_1
     155: aload_0
     156: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     159: aastore
     160: dup
     161: iconst_2
     162: aload_2
     163: aastore
     164: invokeinterface #206,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     169: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     172: ldc_w         #382                // String The local Exception was: {}
     175: aload_2
     176: aload_2
     177: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     182: aload_0
     183: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
     186: invokevirtual #101                // Method org/apache/activemq/broker/BrokerService.getTaskRunnerFactory:()Lorg/apache/activemq/thread/TaskRunnerFactory;
     189: new           #383                // class org/apache/activemq/network/DemandForwardingBridgeSupport$9
     192: dup
     193: aload_0
     194: invokespecial #384                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$9."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;)V
     197: invokevirtual #121                // Method org/apache/activemq/thread/TaskRunnerFactory.execute:(Ljava/lang/Runnable;)V
     200: aload_0
     201: aload_2
     202: invokespecial #126                // Method fireBridgeFailed:(Ljava/lang/Throwable;)V
     205: return
    Exception table:
       from    to  target type
          72    98   101   Class java/io/IOException

  private void fireFailedForwardAdvisory(org.apache.activemq.command.MessageDispatch, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
       4: invokevirtual #385                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isAdvisoryForFailedForward:()Z
       7: ifeq          132
      10: aconst_null
      11: astore_3
      12: aload_0
      13: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      16: invokevirtual #67                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
      19: ldc_w         #386                // class org/apache/activemq/advisory/AdvisoryBroker
      22: invokeinterface #387,  2          // InterfaceMethod org/apache/activemq/broker/Broker.getAdaptor:(Ljava/lang/Class;)Lorg/apache/activemq/broker/Broker;
      27: checkcast     #386                // class org/apache/activemq/advisory/AdvisoryBroker
      30: astore_3
      31: aload_3
      32: ifnull        101
      35: new           #388                // class org/apache/activemq/broker/ConnectionContext
      38: dup
      39: invokespecial #389                // Method org/apache/activemq/broker/ConnectionContext."<init>":()V
      42: astore        4
      44: aload         4
      46: getstatic     #390                // Field org/apache/activemq/security/SecurityContext.BROKER_SECURITY_CONTEXT:Lorg/apache/activemq/security/SecurityContext;
      49: invokevirtual #391                // Method org/apache/activemq/broker/ConnectionContext.setSecurityContext:(Lorg/apache/activemq/security/SecurityContext;)V
      52: aload         4
      54: aload_0
      55: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      58: invokevirtual #67                 // Method org/apache/activemq/broker/BrokerService.getBroker:()Lorg/apache/activemq/broker/Broker;
      61: invokevirtual #392                // Method org/apache/activemq/broker/ConnectionContext.setBroker:(Lorg/apache/activemq/broker/Broker;)V
      64: new           #266                // class org/apache/activemq/command/ActiveMQMessage
      67: dup
      68: invokespecial #393                // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
      71: astore        5
      73: aload         5
      75: ldc_w         #394                // String cause
      78: aload_2
      79: invokevirtual #395                // Method java/lang/Throwable.getLocalizedMessage:()Ljava/lang/String;
      82: invokevirtual #396                // Method org/apache/activemq/command/ActiveMQMessage.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      85: aload_3
      86: aload         4
      88: invokestatic  #397                // Method org/apache/activemq/advisory/AdvisorySupport.getNetworkBridgeForwardFailureAdvisoryTopic:()Lorg/apache/activemq/command/ActiveMQTopic;
      91: aload_1
      92: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      95: aconst_null
      96: aload         5
      98: invokevirtual #398                // Method org/apache/activemq/advisory/AdvisoryBroker.fireAdvisory:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ActiveMQTopic;Lorg/apache/activemq/command/Command;Lorg/apache/activemq/command/ConsumerId;Lorg/apache/activemq/command/ActiveMQMessage;)V
     101: goto          132
     104: astore        4
     106: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     109: ldc_w         #399                // String failed to fire forward failure advisory, cause: {}
     112: aload         4
     114: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     119: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     122: ldc_w         #400                // String detail
     125: aload         4
     127: invokeinterface #401,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     132: return
    Exception table:
       from    to  target type
          12   101   104   Class java/lang/Exception

  protected org.apache.activemq.Service getControllingService();
    Code:
       0: aload_0
       1: getfield      #54                 // Field duplexInitiatingConnection:Lorg/apache/activemq/broker/TransportConnection;
       4: ifnull        14
       7: aload_0
       8: getfield      #54                 // Field duplexInitiatingConnection:Lorg/apache/activemq/broker/TransportConnection;
      11: goto          15
      14: aload_0
      15: areturn

  protected void addSubscription(org.apache.activemq.network.DemandSubscription) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        41
       4: aload_0
       5: invokevirtual #66                 // Method isDuplex:()Z
       8: ifeq          28
      11: aload_0
      12: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      15: aload_1
      16: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      19: invokeinterface #188,  2          // InterfaceMethod org/apache/activemq/transport/Transport.request:(Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: goto          41
      28: aload_0
      29: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      32: aload_1
      33: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      36: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      41: return

  protected void removeSubscription(org.apache.activemq.network.DemandSubscription) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        97
       4: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       7: ldc_w         #402                // String {} remove local subscription: {} for remote {}
      10: iconst_3
      11: anewarray     #96                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      20: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      23: aastore
      24: dup
      25: iconst_1
      26: aload_1
      27: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      30: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      33: aastore
      34: dup
      35: iconst_2
      36: aload_1
      37: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      40: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      43: aastore
      44: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      49: aload_0
      50: getfield      #25                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
      53: aload_1
      54: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      57: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      60: invokevirtual #404                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: getfield      #26                 // Field subscriptionMapByRemoteId:Ljava/util/concurrent/ConcurrentHashMap;
      68: aload_1
      69: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      72: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      75: invokevirtual #404                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: getfield      #4                  // Field serialExecutor:Ljava/util/concurrent/ExecutorService;
      83: new           #405                // class org/apache/activemq/network/DemandForwardingBridgeSupport$10
      86: dup
      87: aload_0
      88: aload_1
      89: invokespecial #406                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$10."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;Lorg/apache/activemq/network/DemandSubscription;)V
      92: invokeinterface #343,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      97: return

  protected org.apache.activemq.command.Message configureMessage(org.apache.activemq.command.MessageDispatch) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
       4: invokevirtual #407                // Method org/apache/activemq/command/Message.copy:()Lorg/apache/activemq/command/Message;
       7: astore_2
       8: aload_2
       9: aload_0
      10: aload_2
      11: invokevirtual #408                // Method org/apache/activemq/command/Message.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      14: aload_0
      15: getfield      #28                 // Field localBrokerPath:[Lorg/apache/activemq/command/BrokerId;
      18: invokevirtual #334                // Method appendToBrokerPath:([Lorg/apache/activemq/command/BrokerId;[Lorg/apache/activemq/command/BrokerId;)[Lorg/apache/activemq/command/BrokerId;
      21: invokevirtual #409                // Method org/apache/activemq/command/Message.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
      24: aload_2
      25: aload_0
      26: getfield      #227                // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
      29: invokevirtual #273                // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      32: invokevirtual #410                // Method org/apache/activemq/command/Message.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
      35: aload_2
      36: aload_1
      37: invokevirtual #411                // Method org/apache/activemq/command/MessageDispatch.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      40: invokevirtual #412                // Method org/apache/activemq/command/Message.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      43: aload_2
      44: aconst_null
      45: invokevirtual #413                // Method org/apache/activemq/command/Message.setMemoryUsage:(Lorg/apache/activemq/usage/MemoryUsage;)V
      48: aload_2
      49: invokevirtual #414                // Method org/apache/activemq/command/Message.getOriginalTransactionId:()Lorg/apache/activemq/command/TransactionId;
      52: ifnonnull     63
      55: aload_2
      56: aload_2
      57: invokevirtual #415                // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      60: invokevirtual #416                // Method org/apache/activemq/command/Message.setOriginalTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      63: aload_2
      64: aconst_null
      65: invokevirtual #417                // Method org/apache/activemq/command/Message.setTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      68: aload_0
      69: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      72: invokevirtual #418                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isUseCompression:()Z
      75: ifeq          82
      78: aload_2
      79: invokevirtual #419                // Method org/apache/activemq/command/Message.compress:()V
      82: aload_2
      83: areturn

  protected void serviceLocalCommand(org.apache.activemq.command.Command);
    Code:
       0: aload_0
       1: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          584
      10: aload_1
      11: invokeinterface #251,  1          // InterfaceMethod org/apache/activemq/command/Command.isMessageDispatch:()Z
      16: ifeq          440
      19: aload_0
      20: invokevirtual #160                // Method safeWaitUntilStarted:()Z
      23: pop
      24: aload_0
      25: getfield      #40                 // Field enqueueCounter:Ljava/util/concurrent/atomic/AtomicLong;
      28: invokevirtual #420                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      31: pop2
      32: aload_1
      33: checkcast     #252                // class org/apache/activemq/command/MessageDispatch
      36: astore_2
      37: aload_0
      38: getfield      #25                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
      41: aload_2
      42: invokevirtual #421                // Method org/apache/activemq/command/MessageDispatch.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      45: invokevirtual #288                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #289                // class org/apache/activemq/network/DemandSubscription
      51: astore_3
      52: aload_3
      53: ifnull        418
      56: aload_2
      57: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      60: ifnull        418
      63: aload_3
      64: invokevirtual #422                // Method org/apache/activemq/network/DemandSubscription.incrementOutstandingResponses:()Z
      67: ifeq          418
      70: aload_0
      71: aload_2
      72: aload_3
      73: invokespecial #423                // Method suppressMessageDispatch:(Lorg/apache/activemq/command/MessageDispatch;Lorg/apache/activemq/network/DemandSubscription;)Z
      76: ifeq          167
      79: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      82: ldc_w         #424                // String {} message not forwarded to {} because message came from there or fails TTL, brokerPath: {}, message: {}
      85: iconst_4
      86: anewarray     #96                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_0
      92: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      95: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      98: aastore
      99: dup
     100: iconst_1
     101: aload_0
     102: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     105: aastore
     106: dup
     107: iconst_2
     108: aload_2
     109: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     112: invokevirtual #408                // Method org/apache/activemq/command/Message.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     115: invokestatic  #425                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     118: aastore
     119: dup
     120: iconst_3
     121: aload_2
     122: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     125: aastore
     126: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     131: aload_0
     132: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     135: new           #286                // class org/apache/activemq/command/MessageAck
     138: dup
     139: aload_2
     140: iconst_4
     141: iconst_1
     142: invokespecial #375                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
     145: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     150: aload_3
     151: invokevirtual #426                // Method org/apache/activemq/network/DemandSubscription.decrementOutstandingResponses:()V
     154: goto          166
     157: astore        4
     159: aload_3
     160: invokevirtual #426                // Method org/apache/activemq/network/DemandSubscription.decrementOutstandingResponses:()V
     163: aload         4
     165: athrow
     166: return
     167: aload_0
     168: aload_2
     169: invokevirtual #427                // Method configureMessage:(Lorg/apache/activemq/command/MessageDispatch;)Lorg/apache/activemq/command/Message;
     172: astore        4
     174: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     177: ldc_w         #428                // String bridging ({} -> {}), consumer: {}, destinaition: {}, brokerPath: {}, message: {}
     180: bipush        7
     182: anewarray     #96                 // class java/lang/Object
     185: dup
     186: iconst_0
     187: aload_0
     188: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     191: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     194: aastore
     195: dup
     196: iconst_1
     197: aload_0
     198: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     201: aastore
     202: dup
     203: iconst_2
     204: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     207: invokeinterface #429,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     212: ifeq          220
     215: aload         4
     217: goto          225
     220: aload         4
     222: invokevirtual #373                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
     225: aastore
     226: dup
     227: iconst_3
     228: aload_2
     229: invokevirtual #421                // Method org/apache/activemq/command/MessageDispatch.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     232: aastore
     233: dup
     234: iconst_4
     235: aload         4
     237: invokevirtual #430                // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     240: aastore
     241: dup
     242: iconst_5
     243: aload         4
     245: invokevirtual #408                // Method org/apache/activemq/command/Message.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     248: invokestatic  #425                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     251: aastore
     252: dup
     253: bipush        6
     255: aload         4
     257: aastore
     258: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     263: aload_0
     264: invokevirtual #66                 // Method isDuplex:()Z
     267: ifeq          312
     270: ldc_w         #431                // String Advisory
     273: aload         4
     275: invokevirtual #432                // Method org/apache/activemq/command/Message.getType:()Ljava/lang/String;
     278: invokevirtual #433                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     281: ifeq          312
     284: aload_0
     285: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     288: aload         4
     290: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     295: aload_3
     296: invokevirtual #426                // Method org/apache/activemq/network/DemandSubscription.decrementOutstandingResponses:()V
     299: goto          311
     302: astore        5
     304: aload_3
     305: invokevirtual #426                // Method org/apache/activemq/network/DemandSubscription.decrementOutstandingResponses:()V
     308: aload         5
     310: athrow
     311: return
     312: aload         4
     314: invokevirtual #434                // Method org/apache/activemq/command/Message.isPersistent:()Z
     317: ifne          330
     320: aload_0
     321: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     324: invokevirtual #276                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isAlwaysSyncSend:()Z
     327: ifeq          355
     330: aload_0
     331: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     334: aload         4
     336: new           #435                // class org/apache/activemq/network/DemandForwardingBridgeSupport$11
     339: dup
     340: aload_0
     341: aload_2
     342: aload_3
     343: invokespecial #436                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$11."<init>":(Lorg/apache/activemq/network/DemandForwardingBridgeSupport;Lorg/apache/activemq/command/MessageDispatch;Lorg/apache/activemq/network/DemandSubscription;)V
     346: invokeinterface #279,  3          // InterfaceMethod org/apache/activemq/transport/Transport.asyncRequest:(Ljava/lang/Object;Lorg/apache/activemq/transport/ResponseCallback;)Lorg/apache/activemq/transport/FutureResponse;
     351: pop
     352: goto          409
     355: aload_0
     356: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     359: aload         4
     361: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     366: aload_0
     367: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
     370: new           #286                // class org/apache/activemq/command/MessageAck
     373: dup
     374: aload_2
     375: iconst_4
     376: iconst_1
     377: invokespecial #375                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
     380: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     385: aload_0
     386: getfield      #41                 // Field dequeueCounter:Ljava/util/concurrent/atomic/AtomicLong;
     389: invokevirtual #420                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     392: pop2
     393: aload_3
     394: invokevirtual #426                // Method org/apache/activemq/network/DemandSubscription.decrementOutstandingResponses:()V
     397: goto          409
     400: astore        6
     402: aload_3
     403: invokevirtual #426                // Method org/apache/activemq/network/DemandSubscription.decrementOutstandingResponses:()V
     406: aload         6
     408: athrow
     409: aload_0
     410: aload         4
     412: invokevirtual #437                // Method serviceOutbound:(Lorg/apache/activemq/command/Message;)V
     415: goto          437
     418: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     421: ldc_w         #438                // String No subscription registered with this network bridge for consumerId: {} for message: {}
     424: aload_2
     425: invokevirtual #421                // Method org/apache/activemq/command/MessageDispatch.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     428: aload_2
     429: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
     432: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     437: goto          563
     440: aload_1
     441: invokeinterface #257,  1          // InterfaceMethod org/apache/activemq/command/Command.isBrokerInfo:()Z
     446: ifeq          463
     449: aload_0
     450: getfield      #6                  // Field futureLocalBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
     453: aload_1
     454: checkcast     #210                // class org/apache/activemq/command/BrokerInfo
     457: invokevirtual #258                // Method org/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo.set:(Lorg/apache/activemq/command/BrokerInfo;)V
     460: goto          563
     463: aload_1
     464: invokeinterface #439,  1          // InterfaceMethod org/apache/activemq/command/Command.isShutdownInfo:()Z
     469: ifeq          497
     472: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     475: ldc_w         #440                // String {} Shutting down
     478: aload_0
     479: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     482: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     485: invokeinterface #441,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     490: aload_0
     491: invokevirtual #442                // Method stop:()V
     494: goto          563
     497: aload_1
     498: invokevirtual #259                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     501: ldc_w         #260                // class org/apache/activemq/command/ConnectionError
     504: if_acmpne     523
     507: aload_1
     508: checkcast     #260                // class org/apache/activemq/command/ConnectionError
     511: astore_2
     512: aload_0
     513: aload_2
     514: invokevirtual #261                // Method org/apache/activemq/command/ConnectionError.getException:()Ljava/lang/Throwable;
     517: invokevirtual #141                // Method serviceLocalException:(Ljava/lang/Throwable;)V
     520: goto          563
     523: aload_1
     524: invokeinterface #263,  1          // InterfaceMethod org/apache/activemq/command/Command.getDataStructureType:()B
     529: lookupswitch  { // 1
                     1: 548
               default: 551
          }
     548: goto          563
     551: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     554: ldc_w         #443                // String Unexpected local command: {}
     557: aload_1
     558: invokeinterface #294,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     563: goto          584
     566: astore_2
     567: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     570: ldc_w         #444                // String Caught an exception processing local command
     573: aload_2
     574: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     579: aload_0
     580: aload_2
     581: invokevirtual #141                // Method serviceLocalException:(Ljava/lang/Throwable;)V
     584: return
    Exception table:
       from    to  target type
         131   150   157   any
         157   159   157   any
         284   295   302   any
         302   304   302   any
         355   393   400   any
         400   402   400   any
          10   166   566   Class java/lang/Throwable
         167   311   566   Class java/lang/Throwable
         312   563   566   Class java/lang/Throwable

  private boolean suppressMessageDispatch(org.apache.activemq.command.MessageDispatch, org.apache.activemq.network.DemandSubscription) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       6: invokevirtual #445                // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
       9: ifeq          57
      12: new           #446                // class org/apache/activemq/filter/MessageEvaluationContext
      15: dup
      16: invokespecial #447                // Method org/apache/activemq/filter/MessageEvaluationContext."<init>":()V
      19: astore        4
      21: aload         4
      23: aload_1
      24: invokevirtual #253                // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      27: invokevirtual #448                // Method org/apache/activemq/filter/MessageEvaluationContext.setMessageReference:(Lorg/apache/activemq/broker/region/MessageReference;)V
      30: aload         4
      32: aload_1
      33: invokevirtual #411                // Method org/apache/activemq/command/MessageDispatch.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      36: invokevirtual #449                // Method org/apache/activemq/filter/MessageEvaluationContext.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      39: aload_2
      40: invokevirtual #450                // Method org/apache/activemq/network/DemandSubscription.getNetworkBridgeFilter:()Lorg/apache/activemq/command/NetworkBridgeFilter;
      43: aload         4
      45: invokevirtual #451                // Method org/apache/activemq/command/NetworkBridgeFilter.matches:(Lorg/apache/activemq/filter/MessageEvaluationContext;)Z
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: istore_3
      57: iload_3
      58: ireturn

  public static boolean contains(org.apache.activemq.command.BrokerId[], org.apache.activemq.command.BrokerId);
    Code:
       0: aload_0
       1: ifnull        41
       4: aload_0
       5: astore_2
       6: aload_2
       7: arraylength
       8: istore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: iload_3
      15: if_icmpge     41
      18: aload_2
      19: iload         4
      21: aaload
      22: astore        5
      24: aload_1
      25: aload         5
      27: invokevirtual #133                // Method org/apache/activemq/command/BrokerId.equals:(Ljava/lang/Object;)Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: iinc          4, 1
      38: goto          12
      41: iconst_0
      42: ireturn

  protected org.apache.activemq.command.BrokerId[] appendToBrokerPath(org.apache.activemq.command.BrokerId[], org.apache.activemq.command.BrokerId[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_2
      10: areturn
      11: aload_1
      12: arraylength
      13: aload_2
      14: arraylength
      15: iadd
      16: anewarray     #27                 // class org/apache/activemq/command/BrokerId
      19: astore_3
      20: aload_1
      21: iconst_0
      22: aload_3
      23: iconst_0
      24: aload_1
      25: arraylength
      26: invokestatic  #452                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_2
      30: iconst_0
      31: aload_3
      32: aload_1
      33: arraylength
      34: aload_2
      35: arraylength
      36: invokestatic  #452                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_3
      40: areturn

  protected org.apache.activemq.command.BrokerId[] appendToBrokerPath(org.apache.activemq.command.BrokerId[], org.apache.activemq.command.BrokerId);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          18
       9: iconst_1
      10: anewarray     #27                 // class org/apache/activemq/command/BrokerId
      13: dup
      14: iconst_0
      15: aload_2
      16: aastore
      17: areturn
      18: aload_1
      19: arraylength
      20: iconst_1
      21: iadd
      22: anewarray     #27                 // class org/apache/activemq/command/BrokerId
      25: astore_3
      26: aload_1
      27: iconst_0
      28: aload_3
      29: iconst_0
      30: aload_1
      31: arraylength
      32: invokestatic  #452                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: aload_3
      36: aload_1
      37: arraylength
      38: aload_2
      39: aastore
      40: aload_3
      41: areturn

  protected boolean isPermissableDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #271                // Method isPermissableDestination:(Lorg/apache/activemq/command/ActiveMQDestination;Z)Z
       6: ireturn

  protected boolean isPermissableDestination(org.apache.activemq.command.ActiveMQDestination, boolean);
    Code:
       0: aload_1
       1: invokevirtual #453                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
       4: ifeq          21
       7: iload_2
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      17: invokevirtual #235                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isBridgeTempDestinations:()Z
      20: ireturn
      21: aload_0
      22: getfield      #153                // Field staticallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
      25: astore_3
      26: aload_3
      27: ifnull        101
      30: aload_3
      31: arraylength
      32: ifle          101
      35: aload_3
      36: astore        4
      38: aload         4
      40: arraylength
      41: istore        5
      43: iconst_0
      44: istore        6
      46: iload         6
      48: iload         5
      50: if_icmpge     101
      53: aload         4
      55: iload         6
      57: aaload
      58: astore        7
      60: aload         7
      62: invokestatic  #454                // Method org/apache/activemq/filter/DestinationFilter.parseFilter:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/filter/DestinationFilter;
      65: astore        8
      67: aload         7
      69: ifnull        95
      72: aload         8
      74: aload_1
      75: invokevirtual #455                // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      78: ifeq          95
      81: aload         7
      83: invokevirtual #456                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
      86: aload_1
      87: invokevirtual #456                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
      90: if_icmpne     95
      93: iconst_1
      94: ireturn
      95: iinc          6, 1
      98: goto          46
     101: aload_0
     102: getfield      #151                // Field excludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
     105: astore_3
     106: aload_3
     107: ifnull        181
     110: aload_3
     111: arraylength
     112: ifle          181
     115: aload_3
     116: astore        4
     118: aload         4
     120: arraylength
     121: istore        5
     123: iconst_0
     124: istore        6
     126: iload         6
     128: iload         5
     130: if_icmpge     181
     133: aload         4
     135: iload         6
     137: aaload
     138: astore        7
     140: aload         7
     142: invokestatic  #454                // Method org/apache/activemq/filter/DestinationFilter.parseFilter:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/filter/DestinationFilter;
     145: astore        8
     147: aload         7
     149: ifnull        175
     152: aload         8
     154: aload_1
     155: invokevirtual #455                // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     158: ifeq          175
     161: aload         7
     163: invokevirtual #456                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
     166: aload_1
     167: invokevirtual #456                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
     170: if_icmpne     175
     173: iconst_0
     174: ireturn
     175: iinc          6, 1
     178: goto          126
     181: aload_0
     182: getfield      #155                // Field dynamicallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
     185: astore_3
     186: aload_3
     187: ifnull        263
     190: aload_3
     191: arraylength
     192: ifle          263
     195: aload_3
     196: astore        4
     198: aload         4
     200: arraylength
     201: istore        5
     203: iconst_0
     204: istore        6
     206: iload         6
     208: iload         5
     210: if_icmpge     261
     213: aload         4
     215: iload         6
     217: aaload
     218: astore        7
     220: aload         7
     222: invokestatic  #454                // Method org/apache/activemq/filter/DestinationFilter.parseFilter:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/filter/DestinationFilter;
     225: astore        8
     227: aload         7
     229: ifnull        255
     232: aload         8
     234: aload_1
     235: invokevirtual #455                // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
     238: ifeq          255
     241: aload         7
     243: invokevirtual #456                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
     246: aload_1
     247: invokevirtual #456                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
     250: if_icmpne     255
     253: iconst_1
     254: ireturn
     255: iinc          6, 1
     258: goto          206
     261: iconst_0
     262: ireturn
     263: iconst_1
     264: ireturn

  protected void setupStaticDestinations();
    Code:
       0: aload_0
       1: getfield      #153                // Field staticallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: astore_1
       5: aload_1
       6: ifnull        95
       9: aload_1
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_3
      20: if_icmpge     95
      23: aload_2
      24: iload         4
      26: aaload
      27: astore        5
      29: aload_0
      30: aload         5
      32: invokevirtual #457                // Method createDemandSubscription:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/network/DemandSubscription;
      35: astore        6
      37: aload         6
      39: iconst_1
      40: invokevirtual #458                // Method org/apache/activemq/network/DemandSubscription.setStaticallyIncluded:(Z)V
      43: aload_0
      44: aload         6
      46: invokevirtual #459                // Method addSubscription:(Lorg/apache/activemq/network/DemandSubscription;)V
      49: goto          69
      52: astore        7
      54: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      57: ldc_w         #460                // String Failed to add static destination {}
      60: aload         5
      62: aload         7
      64: invokeinterface #157,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      69: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      72: ldc_w         #461                // String {}, bridging messages for static destination: {}
      75: aload_0
      76: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      79: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      82: aload         5
      84: invokeinterface #163,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      89: iinc          4, 1
      92: goto          17
      95: return
    Exception table:
       from    to  target type
          43    49    52   Class java/io/IOException

  protected void addConsumerInfo(org.apache.activemq.command.ConsumerInfo) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #462                // Method org/apache/activemq/command/ConsumerInfo.copy:()Lorg/apache/activemq/command/ConsumerInfo;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #463                // Method addRemoteBrokerToBrokerPath:(Lorg/apache/activemq/command/ConsumerInfo;)V
      10: aload_0
      11: aload_2
      12: invokevirtual #464                // Method createDemandSubscription:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/network/DemandSubscription;
      15: astore_3
      16: aload_3
      17: ifnull        95
      20: aload_0
      21: aload_3
      22: invokespecial #465                // Method duplicateSuppressionIsRequired:(Lorg/apache/activemq/network/DemandSubscription;)Z
      25: ifeq          36
      28: aload_0
      29: aload_3
      30: invokespecial #466                // Method undoMapRegistration:(Lorg/apache/activemq/network/DemandSubscription;)V
      33: goto          95
      36: aload_1
      37: invokevirtual #445                // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
      40: ifeq          71
      43: aload_3
      44: invokevirtual #357                // Method org/apache/activemq/network/DemandSubscription.getDurableRemoteSubs:()Ljava/util/Set;
      47: new           #349                // class org/apache/activemq/command/SubscriptionInfo
      50: dup
      51: aload_3
      52: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      55: invokevirtual #467                // Method org/apache/activemq/command/ConsumerInfo.getClientId:()Ljava/lang/String;
      58: aload_1
      59: invokevirtual #468                // Method org/apache/activemq/command/ConsumerInfo.getSubscriptionName:()Ljava/lang/String;
      62: invokespecial #352                // Method org/apache/activemq/command/SubscriptionInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      65: invokeinterface #469,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_0
      72: aload_3
      73: invokevirtual #459                // Method addSubscription:(Lorg/apache/activemq/network/DemandSubscription;)V
      76: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      79: ldc_w         #470                // String {} new demand subscription: {}
      82: aload_0
      83: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      86: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      89: aload_3
      90: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      95: return

  private void undoMapRegistration(org.apache.activemq.network.DemandSubscription);
    Code:
       0: aload_0
       1: getfield      #25                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       8: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      11: invokevirtual #404                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: getfield      #26                 // Field subscriptionMapByRemoteId:Ljava/util/concurrent/ConcurrentHashMap;
      19: aload_1
      20: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      23: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      26: invokevirtual #404                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  private boolean duplicateSuppressionIsRequired(org.apache.activemq.network.DemandSubscription);
    Code:
       0: aload_1
       1: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_2
       8: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      11: invokevirtual #471                // Method org/apache/activemq/command/ActiveMQDestination.isQueue:()Z
      14: ifeq          27
      17: aload_0
      18: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      21: invokevirtual #472                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isSuppressDuplicateQueueSubscriptions:()Z
      24: ifeq          47
      27: aload_2
      28: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      31: invokevirtual #473                // Method org/apache/activemq/command/ActiveMQDestination.isTopic:()Z
      34: ifeq          49
      37: aload_0
      38: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      41: invokevirtual #474                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isSuppressDuplicateTopicSubscriptions:()Z
      44: ifne          49
      47: iload_3
      48: ireturn
      49: aload_2
      50: invokevirtual #475                // Method org/apache/activemq/command/ConsumerInfo.getNetworkConsumerIds:()Ljava/util/List;
      53: astore        4
      55: aload_0
      56: aload_2
      57: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      60: invokevirtual #476                // Method getRegionSubscriptions:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/util/Collection;
      63: astore        5
      65: aload         5
      67: invokeinterface #477,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      72: astore        6
      74: aload         6
      76: invokeinterface #355,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          160
      84: aload         6
      86: invokeinterface #356,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #478                // class org/apache/activemq/broker/region/Subscription
      94: astore        7
      96: aload         7
      98: invokeinterface #479,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     103: invokevirtual #475                // Method org/apache/activemq/command/ConsumerInfo.getNetworkConsumerIds:()Ljava/util/List;
     106: astore        8
     108: aload         8
     110: invokeinterface #480,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     115: ifne          157
     118: aload_0
     119: aload         4
     121: aload         8
     123: invokespecial #481                // Method matchFound:(Ljava/util/List;Ljava/util/List;)Z
     126: ifeq          157
     129: aload_0
     130: aload         7
     132: invokespecial #482                // Method isInActiveDurableSub:(Lorg/apache/activemq/broker/region/Subscription;)Z
     135: ifeq          143
     138: iconst_0
     139: istore_3
     140: goto          160
     143: aload_0
     144: aload         7
     146: aload_1
     147: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     150: invokespecial #483                // Method hasLowerPriority:(Lorg/apache/activemq/broker/region/Subscription;Lorg/apache/activemq/command/ConsumerInfo;)Z
     153: istore_3
     154: goto          160
     157: goto          74
     160: iload_3
     161: ireturn

  private boolean isInActiveDurableSub(org.apache.activemq.broker.region.Subscription);
    Code:
       0: aload_1
       1: invokeinterface #479,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       6: invokevirtual #445                // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
       9: ifeq          33
      12: aload_1
      13: instanceof    #484                // class org/apache/activemq/broker/region/DurableTopicSubscription
      16: ifeq          33
      19: aload_1
      20: checkcast     #484                // class org/apache/activemq/broker/region/DurableTopicSubscription
      23: invokevirtual #485                // Method org/apache/activemq/broker/region/DurableTopicSubscription.isActive:()Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  private boolean hasLowerPriority(org.apache.activemq.broker.region.Subscription, org.apache.activemq.command.ConsumerInfo);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokeinterface #479,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
       8: invokevirtual #486                // Method org/apache/activemq/command/ConsumerInfo.getPriority:()B
      11: aload_2
      12: invokevirtual #486                // Method org/apache/activemq/command/ConsumerInfo.getPriority:()B
      15: if_icmplt     75
      18: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      21: ldc_w         #487                // String {} Ignoring duplicate subscription from {}, sub: {} is duplicate by network subscription with equal or higher network priority: {}, networkConsumerIds: {}
      24: iconst_5
      25: anewarray     #96                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_0
      31: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      34: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      37: aastore
      38: dup
      39: iconst_1
      40: aload_0
      41: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
      44: aastore
      45: dup
      46: iconst_2
      47: aload_2
      48: aastore
      49: dup
      50: iconst_3
      51: aload_1
      52: aastore
      53: dup
      54: iconst_4
      55: aload_1
      56: invokeinterface #479,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      61: invokevirtual #475                // Method org/apache/activemq/command/ConsumerInfo.getNetworkConsumerIds:()Ljava/util/List;
      64: aastore
      65: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      70: iconst_1
      71: istore_3
      72: goto          151
      75: aload_0
      76: aload_1
      77: invokespecial #488                // Method removeDuplicateSubscription:(Lorg/apache/activemq/broker/region/Subscription;)V
      80: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      83: ldc_w         #489                // String {} Replacing duplicate subscription {} with sub from {}, which has a higher priority, new sub: {}, networkConsumerIds: {}
      86: iconst_5
      87: anewarray     #96                 // class java/lang/Object
      90: dup
      91: iconst_0
      92: aload_0
      93: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      96: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      99: aastore
     100: dup
     101: iconst_1
     102: aload_1
     103: invokeinterface #479,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     108: aastore
     109: dup
     110: iconst_2
     111: aload_0
     112: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     115: aastore
     116: dup
     117: iconst_3
     118: aload_2
     119: aastore
     120: dup
     121: iconst_4
     122: aload_2
     123: invokevirtual #475                // Method org/apache/activemq/command/ConsumerInfo.getNetworkConsumerIds:()Ljava/util/List;
     126: aastore
     127: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     132: goto          151
     135: astore        4
     137: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     140: ldc_w         #490                // String Failed to remove duplicated sub as a result of sub with higher priority, sub: {}
     143: aload_1
     144: aload         4
     146: invokeinterface #157,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     151: iload_3
     152: ireturn
    Exception table:
       from    to  target type
          75   132   135   Class java/io/IOException

  private void removeDuplicateSubscription(org.apache.activemq.broker.region.Subscription) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #491                // Method org/apache/activemq/broker/BrokerService.getNetworkConnectors:()Ljava/util/List;
       7: invokeinterface #492,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #355,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          54
      22: aload_2
      23: invokeinterface #356,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #493                // class org/apache/activemq/network/NetworkConnector
      31: astore_3
      32: aload_3
      33: aload_1
      34: invokeinterface #479,  1          // InterfaceMethod org/apache/activemq/broker/region/Subscription.getConsumerInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      39: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      42: invokevirtual #494                // Method org/apache/activemq/network/NetworkConnector.removeDemandSubscription:(Lorg/apache/activemq/command/ConsumerId;)Z
      45: ifeq          51
      48: goto          54
      51: goto          13
      54: return

  private boolean matchFound(java.util.List<org.apache.activemq.command.ConsumerId>, java.util.List<org.apache.activemq.command.ConsumerId>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: invokeinterface #492,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #355,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          51
      20: aload         4
      22: invokeinterface #356,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #346                // class org/apache/activemq/command/ConsumerId
      30: astore        5
      32: aload_1
      33: aload         5
      35: invokeinterface #495,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      40: ifeq          48
      43: iconst_1
      44: istore_3
      45: goto          51
      48: goto          10
      51: iload_3
      52: ireturn

  protected final java.util.Collection<org.apache.activemq.broker.region.Subscription> getRegionSubscriptions(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #496                // Method org/apache/activemq/broker/BrokerService.getRegionBroker:()Lorg/apache/activemq/broker/Broker;
       7: checkcast     #497                // class org/apache/activemq/broker/region/RegionBroker
      10: astore_2
      11: aconst_null
      12: astore_3
      13: aload_1
      14: invokevirtual #456                // Method org/apache/activemq/command/ActiveMQDestination.getDestinationType:()B
      17: tableswitch   { // 1 to 6
                     1: 56
                     2: 64
                     3: 85
                     4: 85
                     5: 72
                     6: 80
               default: 85
          }
      56: aload_2
      57: invokevirtual #498                // Method org/apache/activemq/broker/region/RegionBroker.getQueueRegion:()Lorg/apache/activemq/broker/region/Region;
      60: astore_3
      61: goto          85
      64: aload_2
      65: invokevirtual #499                // Method org/apache/activemq/broker/region/RegionBroker.getTopicRegion:()Lorg/apache/activemq/broker/region/Region;
      68: astore_3
      69: goto          85
      72: aload_2
      73: invokevirtual #500                // Method org/apache/activemq/broker/region/RegionBroker.getTempQueueRegion:()Lorg/apache/activemq/broker/region/Region;
      76: astore_3
      77: goto          85
      80: aload_2
      81: invokevirtual #501                // Method org/apache/activemq/broker/region/RegionBroker.getTempTopicRegion:()Lorg/apache/activemq/broker/region/Region;
      84: astore_3
      85: aload_3
      86: instanceof    #502                // class org/apache/activemq/broker/region/AbstractRegion
      89: ifeq          109
      92: aload_3
      93: checkcast     #502                // class org/apache/activemq/broker/region/AbstractRegion
      96: invokevirtual #503                // Method org/apache/activemq/broker/region/AbstractRegion.getSubscriptions:()Ljava/util/Map;
      99: invokeinterface #504,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     104: astore        4
     106: goto          112
     109: aconst_null
     110: astore        4
     112: aload         4
     114: areturn

  protected org.apache.activemq.network.DemandSubscription createDemandSubscription(org.apache.activemq.command.ConsumerInfo) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       5: invokevirtual #505                // Method org/apache/activemq/command/ConsumerInfo.addNetworkConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #506                // Method doCreateDemandSubscription:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/network/DemandSubscription;
      13: areturn

  protected org.apache.activemq.network.DemandSubscription doCreateDemandSubscription(org.apache.activemq.command.ConsumerInfo) throws java.io.IOException;
    Code:
       0: new           #289                // class org/apache/activemq/network/DemandSubscription
       3: dup
       4: aload_1
       5: invokespecial #507                // Method org/apache/activemq/network/DemandSubscription."<init>":(Lorg/apache/activemq/command/ConsumerInfo;)V
       8: astore_2
       9: aload_2
      10: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      13: new           #346                // class org/apache/activemq/command/ConsumerId
      16: dup
      17: aload_0
      18: getfield      #193                // Field localSessionInfo:Lorg/apache/activemq/command/SessionInfo;
      21: invokevirtual #330                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      24: aload_0
      25: getfield      #13                 // Field consumerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      28: invokevirtual #508                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
      31: invokespecial #509                // Method org/apache/activemq/command/ConsumerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      34: invokevirtual #510                // Method org/apache/activemq/command/ConsumerInfo.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      37: aload_1
      38: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      41: invokevirtual #453                // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      44: ifeq          72
      47: aload_2
      48: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      51: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      54: checkcast     #329                // class org/apache/activemq/command/ActiveMQTempDestination
      57: astore_3
      58: aload_3
      59: aload_0
      60: getfield      #169                // Field localConnectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      63: invokevirtual #326                // Method org/apache/activemq/command/ConnectionInfo.getConnectionId:()Lorg/apache/activemq/command/ConnectionId;
      66: invokevirtual #511                // Method org/apache/activemq/command/ConnectionId.toString:()Ljava/lang/String;
      69: invokevirtual #332                // Method org/apache/activemq/command/ActiveMQTempDestination.setConnectionId:(Ljava/lang/String;)V
      72: aload_0
      73: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      76: invokevirtual #512                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isDecreaseNetworkConsumerPriority:()Z
      79: ifeq          162
      82: aload_0
      83: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      86: invokevirtual #513                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getConsumerPriorityBase:()I
      89: i2b
      90: istore_3
      91: aload_1
      92: invokevirtual #310                // Method org/apache/activemq/command/ConsumerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      95: ifnull        118
      98: aload_1
      99: invokevirtual #310                // Method org/apache/activemq/command/ConsumerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     102: arraylength
     103: iconst_1
     104: if_icmple     118
     107: iload_3
     108: aload_1
     109: invokevirtual #310                // Method org/apache/activemq/command/ConsumerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
     112: arraylength
     113: iconst_1
     114: iadd
     115: isub
     116: i2b
     117: istore_3
     118: aload_2
     119: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     122: iload_3
     123: invokevirtual #514                // Method org/apache/activemq/command/ConsumerInfo.setPriority:(B)V
     126: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     129: ldc_w         #515                // String {} using priority: {} for subscription: {}
     132: iconst_3
     133: anewarray     #96                 // class java/lang/Object
     136: dup
     137: iconst_0
     138: aload_0
     139: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
     142: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
     145: aastore
     146: dup
     147: iconst_1
     148: iload_3
     149: invokestatic  #264                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     152: aastore
     153: dup
     154: iconst_2
     155: aload_1
     156: aastore
     157: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     162: aload_0
     163: aload_1
     164: aload_2
     165: invokevirtual #516                // Method configureDemandSubscription:(Lorg/apache/activemq/command/ConsumerInfo;Lorg/apache/activemq/network/DemandSubscription;)V
     168: aload_2
     169: areturn

  protected final org.apache.activemq.network.DemandSubscription createDemandSubscription(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: new           #230                // class org/apache/activemq/command/ConsumerInfo
       3: dup
       4: invokespecial #517                // Method org/apache/activemq/command/ConsumerInfo."<init>":()V
       7: astore_2
       8: aload_2
       9: iconst_1
      10: invokevirtual #518                // Method org/apache/activemq/command/ConsumerInfo.setNetworkSubscription:(Z)V
      13: aload_2
      14: aload_1
      15: invokevirtual #240                // Method org/apache/activemq/command/ConsumerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
      18: aload_2
      19: iconst_1
      20: anewarray     #27                 // class org/apache/activemq/command/BrokerId
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #131                // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
      29: aastore
      30: invokevirtual #519                // Method org/apache/activemq/command/ConsumerInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
      33: aload_2
      34: new           #346                // class org/apache/activemq/command/ConsumerId
      37: dup
      38: aload_0
      39: getfield      #193                // Field localSessionInfo:Lorg/apache/activemq/command/SessionInfo;
      42: invokevirtual #330                // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      45: aload_0
      46: getfield      #13                 // Field consumerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      49: invokevirtual #508                // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
      52: invokespecial #509                // Method org/apache/activemq/command/ConsumerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      55: invokevirtual #510                // Method org/apache/activemq/command/ConsumerInfo.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      58: aconst_null
      59: astore_3
      60: aload_0
      61: aload_2
      62: invokevirtual #464                // Method createDemandSubscription:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/network/DemandSubscription;
      65: astore_3
      66: goto          84
      69: astore        4
      71: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      74: ldc_w         #520                // String Failed to create DemandSubscription
      77: aload         4
      79: invokeinterface #378,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: aload_3
      85: areturn
    Exception table:
       from    to  target type
          60    66    69   Class java/io/IOException

  protected void configureDemandSubscription(org.apache.activemq.command.ConsumerInfo, org.apache.activemq.network.DemandSubscription) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: invokestatic  #268                // Method org/apache/activemq/advisory/AdvisorySupport.isConsumerAdvisoryTopic:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
       7: ifeq          21
      10: aload_2
      11: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      14: iconst_1
      15: invokevirtual #233                // Method org/apache/activemq/command/ConsumerInfo.setDispatchAsync:(Z)V
      18: goto          35
      21: aload_2
      22: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      25: aload_0
      26: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      29: invokevirtual #521                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isDispatchAsync:()Z
      32: invokevirtual #233                // Method org/apache/activemq/command/ConsumerInfo.setDispatchAsync:(Z)V
      35: aload_2
      36: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      39: aload_0
      40: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      43: invokevirtual #241                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getPrefetchSize:()I
      46: invokevirtual #242                // Method org/apache/activemq/command/ConsumerInfo.setPrefetchSize:(I)V
      49: aload_0
      50: getfield      #25                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
      53: aload_2
      54: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      57: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      60: aload_2
      61: invokevirtual #522                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_0
      66: getfield      #26                 // Field subscriptionMapByRemoteId:Ljava/util/concurrent/ConcurrentHashMap;
      69: aload_2
      70: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      73: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      76: aload_2
      77: invokevirtual #522                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: aload_2
      82: aload_0
      83: aload_1
      84: invokevirtual #523                // Method createNetworkBridgeFilter:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/command/NetworkBridgeFilter;
      87: invokevirtual #524                // Method org/apache/activemq/network/DemandSubscription.setNetworkBridgeFilter:(Lorg/apache/activemq/command/NetworkBridgeFilter;)V
      90: aload_1
      91: invokevirtual #445                // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
      94: ifne          111
      97: aload_2
      98: invokevirtual #290                // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     101: aload_2
     102: invokevirtual #450                // Method org/apache/activemq/network/DemandSubscription.getNetworkBridgeFilter:()Lorg/apache/activemq/command/NetworkBridgeFilter;
     105: invokevirtual #525                // Method org/apache/activemq/command/ConsumerInfo.setAdditionalPredicate:(Lorg/apache/activemq/filter/BooleanExpression;)V
     108: goto          130
     111: aload_2
     112: new           #349                // class org/apache/activemq/command/SubscriptionInfo
     115: dup
     116: aload_1
     117: invokevirtual #467                // Method org/apache/activemq/command/ConsumerInfo.getClientId:()Ljava/lang/String;
     120: aload_1
     121: invokevirtual #468                // Method org/apache/activemq/command/ConsumerInfo.getSubscriptionName:()Ljava/lang/String;
     124: invokespecial #352                // Method org/apache/activemq/command/SubscriptionInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     127: invokevirtual #526                // Method org/apache/activemq/network/DemandSubscription.setLocalDurableSubscriber:(Lorg/apache/activemq/command/SubscriptionInfo;)V
     130: return

  protected void removeDemandSubscription(org.apache.activemq.command.ConsumerId) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field subscriptionMapByRemoteId:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #404                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #289                // class org/apache/activemq/network/DemandSubscription
      11: astore_2
      12: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      15: ldc_w         #527                // String {} remove request on {} from {}, consumer id: {}, matching sub: {}
      18: iconst_5
      19: anewarray     #96                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      28: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_0
      35: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      38: aastore
      39: dup
      40: iconst_2
      41: aload_0
      42: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
      45: aastore
      46: dup
      47: iconst_3
      48: aload_1
      49: aastore
      50: dup
      51: iconst_4
      52: aload_2
      53: aastore
      54: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      59: aload_2
      60: ifnull        114
      63: aload_0
      64: aload_2
      65: invokevirtual #528                // Method removeSubscription:(Lorg/apache/activemq/network/DemandSubscription;)V
      68: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      71: ldc_w         #529                // String {} removed sub on {} from {}: {}
      74: iconst_4
      75: anewarray     #96                 // class java/lang/Object
      78: dup
      79: iconst_0
      80: aload_0
      81: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      84: invokevirtual #87                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      87: aastore
      88: dup
      89: iconst_1
      90: aload_0
      91: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
      94: aastore
      95: dup
      96: iconst_2
      97: aload_0
      98: getfield      #15                 // Field remoteBrokerName:Ljava/lang/String;
     101: aastore
     102: dup
     103: iconst_3
     104: aload_2
     105: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
     108: aastore
     109: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     114: return

  protected boolean removeDemandSubscriptionByLocalId(org.apache.activemq.command.ConsumerId);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #25                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
       6: aload_1
       7: invokevirtual #288                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #289                // class org/apache/activemq/network/DemandSubscription
      13: astore_3
      14: aload_3
      15: ifnull        50
      18: aload_0
      19: aload_3
      20: invokevirtual #403                // Method org/apache/activemq/network/DemandSubscription.getRemoteInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      23: invokevirtual #291                // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      26: invokevirtual #347                // Method removeDemandSubscription:(Lorg/apache/activemq/command/ConsumerId;)V
      29: iconst_1
      30: istore_2
      31: goto          50
      34: astore        4
      36: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      39: ldc_w         #530                // String removeDemandSubscriptionByLocalId failed for localId: {}
      42: aload_1
      43: aload         4
      45: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      50: iload_2
      51: ireturn
    Exception table:
       from    to  target type
          18    31    34   Class java/io/IOException

  protected boolean safeWaitUntilStarted() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          27
      10: aload_0
      11: getfield      #31                 // Field startedLatch:Ljava/util/concurrent/CountDownLatch;
      14: lconst_1
      15: getstatic     #108                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokevirtual #109                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      21: ifeq          0
      24: goto          27
      27: aload_0
      28: getfield      #22                 // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      31: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  protected org.apache.activemq.command.NetworkBridgeFilter createNetworkBridgeFilter(org.apache.activemq.command.ConsumerInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field defaultFilterFactory:Lorg/apache/activemq/network/NetworkBridgeFilterFactory;
       4: astore_2
       5: aload_0
       6: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       9: ifnull        53
      12: aload_0
      13: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      16: invokevirtual #531                // Method org/apache/activemq/broker/BrokerService.getDestinationPolicy:()Lorg/apache/activemq/broker/region/policy/PolicyMap;
      19: ifnull        53
      22: aload_0
      23: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
      26: invokevirtual #531                // Method org/apache/activemq/broker/BrokerService.getDestinationPolicy:()Lorg/apache/activemq/broker/region/policy/PolicyMap;
      29: aload_1
      30: invokevirtual #318                // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      33: invokevirtual #532                // Method org/apache/activemq/broker/region/policy/PolicyMap.getEntryFor:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/broker/region/policy/PolicyEntry;
      36: astore_3
      37: aload_3
      38: ifnull        53
      41: aload_3
      42: invokevirtual #533                // Method org/apache/activemq/broker/region/policy/PolicyEntry.getNetworkBridgeFilterFactory:()Lorg/apache/activemq/network/NetworkBridgeFilterFactory;
      45: ifnull        53
      48: aload_3
      49: invokevirtual #533                // Method org/apache/activemq/broker/region/policy/PolicyEntry.getNetworkBridgeFilterFactory:()Lorg/apache/activemq/network/NetworkBridgeFilterFactory;
      52: astore_2
      53: aload_2
      54: aload_1
      55: aload_0
      56: invokevirtual #333                // Method getRemoteBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      59: aload_0
      60: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      63: invokevirtual #534                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getMessageTTL:()I
      66: aload_0
      67: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      70: invokevirtual #309                // Method org/apache/activemq/network/NetworkBridgeConfiguration.getConsumerTTL:()I
      73: invokeinterface #535,  5          // InterfaceMethod org/apache/activemq/network/NetworkBridgeFilterFactory.create:(Lorg/apache/activemq/command/ConsumerInfo;[Lorg/apache/activemq/command/BrokerId;II)Lorg/apache/activemq/command/NetworkBridgeFilter;
      78: areturn

  protected void addRemoteBrokerToBrokerPath(org.apache.activemq.command.ConsumerInfo) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokevirtual #310                // Method org/apache/activemq/command/ConsumerInfo.getBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
       6: aload_0
       7: invokevirtual #333                // Method getRemoteBrokerPath:()[Lorg/apache/activemq/command/BrokerId;
      10: invokevirtual #334                // Method appendToBrokerPath:([Lorg/apache/activemq/command/BrokerId;[Lorg/apache/activemq/command/BrokerId;)[Lorg/apache/activemq/command/BrokerId;
      13: invokevirtual #519                // Method org/apache/activemq/command/ConsumerInfo.setBrokerPath:([Lorg/apache/activemq/command/BrokerId;)V
      16: return

  protected org.apache.activemq.command.BrokerId[] getRemoteBrokerPath();
    Code:
       0: aload_0
       1: getfield      #37                 // Field remoteBrokerPath:[Lorg/apache/activemq/command/BrokerId;
       4: areturn

  public void setNetworkBridgeListener(org.apache.activemq.network.NetworkBridgeListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field networkBridgeListener:Lorg/apache/activemq/network/NetworkBridgeListener;
       5: return

  private void fireBridgeFailed(java.lang.Throwable);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #536                // String fire bridge failed, listener: {}
       6: aload_0
       7: getfield      #90                 // Field networkBridgeListener:Lorg/apache/activemq/network/NetworkBridgeListener;
      10: aload_1
      11: invokeinterface #163,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #90                 // Field networkBridgeListener:Lorg/apache/activemq/network/NetworkBridgeListener;
      20: astore_2
      21: aload_2
      22: ifnull        43
      25: aload_0
      26: getfield      #21                 // Field bridgeFailed:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: iconst_0
      30: iconst_1
      31: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      34: ifeq          43
      37: aload_2
      38: invokeinterface #537,  1          // InterfaceMethod org/apache/activemq/network/NetworkBridgeListener.bridgeFailed:()V
      43: return

  public org.apache.activemq.command.ActiveMQDestination[] getDynamicallyIncludedDestinations();
    Code:
       0: aload_0
       1: getfield      #155                // Field dynamicallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setDynamicallyIncludedDestinations(org.apache.activemq.command.ActiveMQDestination[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field dynamicallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public org.apache.activemq.command.ActiveMQDestination[] getExcludedDestinations();
    Code:
       0: aload_0
       1: getfield      #151                // Field excludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setExcludedDestinations(org.apache.activemq.command.ActiveMQDestination[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #151                // Field excludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public org.apache.activemq.command.ActiveMQDestination[] getStaticallyIncludedDestinations();
    Code:
       0: aload_0
       1: getfield      #153                // Field staticallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setStaticallyIncludedDestinations(org.apache.activemq.command.ActiveMQDestination[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field staticallyIncludedDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public org.apache.activemq.command.ActiveMQDestination[] getDurableDestinations();
    Code:
       0: aload_0
       1: getfield      #538                // Field durableDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setDurableDestinations(org.apache.activemq.command.ActiveMQDestination[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #538                // Field durableDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public org.apache.activemq.transport.Transport getLocalBroker();
    Code:
       0: aload_0
       1: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
       4: areturn

  public org.apache.activemq.transport.Transport getRemoteBroker();
    Code:
       0: aload_0
       1: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
       4: areturn

  public boolean isCreatedByDuplex();
    Code:
       0: aload_0
       1: getfield      #200                // Field createdByDuplex:Z
       4: ireturn

  public void setCreatedByDuplex(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #200                // Field createdByDuplex:Z
       5: return

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #53                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #539,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
       9: areturn

  public java.lang.String getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #52                 // Field localBroker:Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #539,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
       9: areturn

  public java.lang.String getRemoteBrokerName();
    Code:
       0: aload_0
       1: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      15: invokevirtual #136                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      18: areturn

  public java.lang.String getRemoteBrokerId();
    Code:
       0: aload_0
       1: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       4: ifnull        17
       7: aload_0
       8: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      11: invokevirtual #130                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      14: ifnonnull     21
      17: aconst_null
      18: goto          31
      21: aload_0
      22: getfield      #43                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      25: invokevirtual #130                // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      28: invokevirtual #540                // Method org/apache/activemq/command/BrokerId.toString:()Ljava/lang/String;
      31: areturn

  public java.lang.String getLocalBrokerName();
    Code:
       0: aload_0
       1: getfield      #45                 // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #45                 // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      15: invokevirtual #136                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      18: areturn

  public long getDequeueCounter();
    Code:
       0: aload_0
       1: getfield      #41                 // Field dequeueCounter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #541                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getEnqueueCounter();
    Code:
       0: aload_0
       1: getfield      #40                 // Field enqueueCounter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #541                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  protected boolean isDuplex();
    Code:
       0: aload_0
       1: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
       4: invokevirtual #195                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isDuplex:()Z
       7: ifne          17
      10: aload_0
      11: getfield      #200                // Field createdByDuplex:Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.util.concurrent.ConcurrentHashMap<org.apache.activemq.command.ConsumerId, org.apache.activemq.network.DemandSubscription> getLocalSubscriptionMap();
    Code:
       0: aload_0
       1: getfield      #26                 // Field subscriptionMapByRemoteId:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public void setBrokerService(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       5: aload_0
       6: aload_1
       7: invokevirtual #496                // Method org/apache/activemq/broker/BrokerService.getRegionBroker:()Lorg/apache/activemq/broker/Broker;
      10: invokeinterface #542,  1          // InterfaceMethod org/apache/activemq/broker/Broker.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      15: putfield      #132                // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
      18: aload_0
      19: getfield      #28                 // Field localBrokerPath:[Lorg/apache/activemq/command/BrokerId;
      22: iconst_0
      23: aload_0
      24: getfield      #132                // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
      27: aastore
      28: return

  public void setMbeanObjectName(javax.management.ObjectName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #543                // Field mbeanObjectName:Ljavax/management/ObjectName;
       5: return

  public javax.management.ObjectName getMbeanObjectName();
    Code:
       0: aload_0
       1: getfield      #543                // Field mbeanObjectName:Ljavax/management/ObjectName;
       4: areturn

  public void resetStats();
    Code:
       0: aload_0
       1: getfield      #40                 // Field enqueueCounter:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #544                // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: aload_0
       9: getfield      #41                 // Field dequeueCounter:Ljava/util/concurrent/atomic/AtomicLong;
      12: lconst_0
      13: invokevirtual #544                // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      16: return

  protected void serviceOutbound(org.apache.activemq.command.Message);
    Code:
       0: aload_0
       1: getfield      #90                 // Field networkBridgeListener:Lorg/apache/activemq/network/NetworkBridgeListener;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_0
      11: aload_1
      12: invokeinterface #545,  3          // InterfaceMethod org/apache/activemq/network/NetworkBridgeListener.onOutboundMessage:(Lorg/apache/activemq/network/NetworkBridge;Lorg/apache/activemq/command/Message;)V
      17: return

  protected void serviceInboundMessage(org.apache.activemq.command.Message);
    Code:
       0: aload_0
       1: getfield      #90                 // Field networkBridgeListener:Lorg/apache/activemq/network/NetworkBridgeListener;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_0
      11: aload_1
      12: invokeinterface #546,  3          // InterfaceMethod org/apache/activemq/network/NetworkBridgeListener.onInboundMessage:(Lorg/apache/activemq/network/NetworkBridge;Lorg/apache/activemq/command/Message;)V
      17: return

  protected boolean canDuplexDispatch(org.apache.activemq.command.Message);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #51                 // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
       6: invokevirtual #547                // Method org/apache/activemq/network/NetworkBridgeConfiguration.isCheckDuplicateMessagesOnDuplex:()Z
       9: ifeq          91
      12: aload_1
      13: invokevirtual #373                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      16: invokevirtual #548                // Method org/apache/activemq/command/MessageId.getProducerSequenceId:()J
      19: lstore_3
      20: aload_0
      21: aload_1
      22: invokevirtual #373                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      25: invokevirtual #549                // Method getStoredSequenceIdForMessage:(Lorg/apache/activemq/command/MessageId;)J
      28: lstore        5
      30: lload_3
      31: lload         5
      33: lcmp
      34: ifgt          91
      37: iconst_0
      38: istore_2
      39: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      42: ldc_w         #550                // String suppressing duplicate message send [{}] from network producer with producerSequence [{}] less than last stored: {}
      45: iconst_3
      46: anewarray     #96                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      54: invokeinterface #429,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      59: ifeq          66
      62: aload_1
      63: goto          70
      66: aload_1
      67: invokevirtual #373                // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      70: aastore
      71: dup
      72: iconst_1
      73: lload_3
      74: invokestatic  #551                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      77: aastore
      78: dup
      79: iconst_2
      80: lload         5
      82: invokestatic  #551                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      85: aastore
      86: invokeinterface #315,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      91: iload_2
      92: ireturn

  protected long getStoredSequenceIdForMessage(org.apache.activemq.command.MessageId);
    Code:
       0: aload_0
       1: getfield      #48                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #552                // Method org/apache/activemq/broker/BrokerService.getPersistenceAdapter:()Lorg/apache/activemq/store/PersistenceAdapter;
       7: aload_1
       8: invokevirtual #553                // Method org/apache/activemq/command/MessageId.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      11: invokeinterface #554,  2          // InterfaceMethod org/apache/activemq/store/PersistenceAdapter.getLastProducerSequenceId:(Lorg/apache/activemq/command/ProducerId;)J
      16: lreturn
      17: astore_2
      18: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      21: ldc_w         #555                // String Failed to determine last producer sequence id for: {}
      24: aload_1
      25: aload_2
      26: invokeinterface #88,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      31: ldc2_w        #556                // long -1l
      34: lreturn
    Exception table:
       from    to  target type
           0    16    17   Class java/io/IOException

  static org.apache.activemq.network.DemandForwardingBridgeSupport$FutureBrokerInfo access$000(org.apache.activemq.network.DemandForwardingBridgeSupport);
    Code:
       0: aload_0
       1: getfield      #6                  // Field futureLocalBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
       4: areturn

  static org.apache.activemq.network.DemandForwardingBridgeSupport$FutureBrokerInfo access$100(org.apache.activemq.network.DemandForwardingBridgeSupport);
    Code:
       0: aload_0
       1: getfield      #5                  // Field futureRemoteBrokerInfo:Lorg/apache/activemq/network/DemandForwardingBridgeSupport$FutureBrokerInfo;
       4: areturn

  static java.util.concurrent.ExecutorService access$200(org.apache.activemq.network.DemandForwardingBridgeSupport);
    Code:
       0: aload_0
       1: getfield      #4                  // Field serialExecutor:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static org.slf4j.Logger access$300();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static void access$400(org.apache.activemq.network.DemandForwardingBridgeSupport);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method collectBrokerInfos:()V
       4: return

  static void access$500(org.apache.activemq.network.DemandForwardingBridgeSupport);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method doStartLocalAndRemoteBridges:()V
       4: return

  static {};
    Code:
       0: ldc_w         #558                // class org/apache/activemq/network/DemandForwardingBridgeSupport
       3: invokestatic  #559                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       9: return
}
