Compiled from "ReconnectionPolicy.java"
public class org.apache.activemq.network.jms.ReconnectionPolicy {
  private int maxSendRetries;

  private long sendRetryDelay;

  private int maxReconnectAttempts;

  private int maxInitialConnectAttempts;

  private long maximumReconnectDelay;

  private long initialReconnectDelay;

  private boolean useExponentialBackOff;

  private double backOffMultiplier;

  public org.apache.activemq.network.jms.ReconnectionPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        10
       7: putfield      #2                  // Field maxSendRetries:I
      10: aload_0
      11: ldc2_w        #3                  // long 1000l
      14: putfield      #5                  // Field sendRetryDelay:J
      17: aload_0
      18: iconst_m1
      19: putfield      #6                  // Field maxReconnectAttempts:I
      22: aload_0
      23: iconst_m1
      24: putfield      #7                  // Field maxInitialConnectAttempts:I
      27: aload_0
      28: ldc2_w        #8                  // long 30000l
      31: putfield      #10                 // Field maximumReconnectDelay:J
      34: aload_0
      35: ldc2_w        #3                  // long 1000l
      38: putfield      #11                 // Field initialReconnectDelay:J
      41: aload_0
      42: iconst_0
      43: putfield      #12                 // Field useExponentialBackOff:Z
      46: aload_0
      47: ldc2_w        #13                 // double 2.0d
      50: putfield      #15                 // Field backOffMultiplier:D
      53: return

  public int getMaxSendRetries();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxSendRetries:I
       4: ireturn

  public void setMaxSendRetries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxSendRetries:I
       5: return

  public long getSendRetryDelay();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sendRetryDelay:J
       4: lreturn

  public void setSendRetyDelay(long);
    Code:
       0: lload_1
       1: ldc2_w        #3                  // long 1000l
       4: lcmp
       5: ifge          15
       8: aload_0
       9: ldc2_w        #3                  // long 1000l
      12: putfield      #5                  // Field sendRetryDelay:J
      15: aload_0
      16: lload_1
      17: putfield      #5                  // Field sendRetryDelay:J
      20: return

  public int getMaxReconnectAttempts();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxReconnectAttempts:I
       4: ireturn

  public void setMaxReconnectAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field maxReconnectAttempts:I
       5: return

  public int getMaxInitialConnectAttempts();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxInitialConnectAttempts:I
       4: ireturn

  public void setMaxInitialConnectAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field maxInitialConnectAttempts:I
       5: return

  public long getMaximumReconnectDelay();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maximumReconnectDelay:J
       4: lreturn

  public void setMaximumReconnectDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field maximumReconnectDelay:J
       5: return

  public long getInitialReconnectDelay();
    Code:
       0: aload_0
       1: getfield      #11                 // Field initialReconnectDelay:J
       4: lreturn

  public void setInitialReconnectDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field initialReconnectDelay:J
       5: return

  public boolean isUseExponentialBackOff();
    Code:
       0: aload_0
       1: getfield      #12                 // Field useExponentialBackOff:Z
       4: ireturn

  public void setUseExponentialBackOff(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field useExponentialBackOff:Z
       5: return

  public double getBackOffMultiplier();
    Code:
       0: aload_0
       1: getfield      #15                 // Field backOffMultiplier:D
       4: dreturn

  public void setBackOffMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #15                 // Field backOffMultiplier:D
       5: return

  public long getNextDelay(int);
    Code:
       0: iload_1
       1: ifne          6
       4: lconst_0
       5: lreturn
       6: aload_0
       7: getfield      #11                 // Field initialReconnectDelay:J
      10: lstore_2
      11: aload_0
      12: getfield      #12                 // Field useExponentialBackOff:Z
      15: ifeq          29
      18: lload_2
      19: iload_1
      20: i2d
      21: aload_0
      22: getfield      #15                 // Field backOffMultiplier:D
      25: dmul
      26: d2l
      27: lmul
      28: lstore_2
      29: aload_0
      30: getfield      #10                 // Field maximumReconnectDelay:J
      33: lconst_0
      34: lcmp
      35: ifle          52
      38: lload_2
      39: aload_0
      40: getfield      #10                 // Field maximumReconnectDelay:J
      43: lcmp
      44: ifle          52
      47: aload_0
      48: getfield      #10                 // Field maximumReconnectDelay:J
      51: lstore_2
      52: lload_2
      53: lreturn
}
