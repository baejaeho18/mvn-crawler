Compiled from "NetworkBridgeConfiguration.java"
public class org.apache.activemq.network.NetworkBridgeConfiguration {
  private boolean conduitSubscriptions;

  private boolean dynamicOnly;

  private boolean dispatchAsync;

  private boolean decreaseNetworkConsumerPriority;

  private int consumerPriorityBase;

  private boolean duplex;

  private boolean bridgeTempDestinations;

  private int prefetchSize;

  private int networkTTL;

  private int consumerTTL;

  private int messageTTL;

  private java.lang.String brokerName;

  private java.lang.String brokerURL;

  private java.lang.String userName;

  private java.lang.String password;

  private java.lang.String destinationFilter;

  private java.lang.String name;

  protected java.util.List<org.apache.activemq.command.ActiveMQDestination> excludedDestinations;

  protected java.util.List<org.apache.activemq.command.ActiveMQDestination> dynamicallyIncludedDestinations;

  protected java.util.List<org.apache.activemq.command.ActiveMQDestination> staticallyIncludedDestinations;

  private boolean suppressDuplicateQueueSubscriptions;

  private boolean suppressDuplicateTopicSubscriptions;

  private boolean alwaysSyncSend;

  private boolean staticBridge;

  private boolean useCompression;

  private boolean advisoryForFailedForward;

  private boolean useBrokerNamesAsIdSeed;

  private boolean gcDestinationViews;

  private long gcSweepTime;

  private boolean checkDuplicateMessagesOnDuplex;

  public org.apache.activemq.network.NetworkBridgeConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field conduitSubscriptions:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field dispatchAsync:Z
      14: aload_0
      15: bipush        -5
      17: putfield      #4                  // Field consumerPriorityBase:I
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field bridgeTempDestinations:Z
      25: aload_0
      26: sipush        1000
      29: putfield      #6                  // Field prefetchSize:I
      32: aload_0
      33: iconst_1
      34: putfield      #7                  // Field networkTTL:I
      37: aload_0
      38: aload_0
      39: getfield      #7                  // Field networkTTL:I
      42: putfield      #8                  // Field consumerTTL:I
      45: aload_0
      46: aload_0
      47: getfield      #7                  // Field networkTTL:I
      50: putfield      #9                  // Field messageTTL:I
      53: aload_0
      54: ldc           #10                 // String localhost
      56: putfield      #11                 // Field brokerName:Ljava/lang/String;
      59: aload_0
      60: ldc           #12                 // String
      62: putfield      #13                 // Field brokerURL:Ljava/lang/String;
      65: aload_0
      66: aconst_null
      67: putfield      #14                 // Field destinationFilter:Ljava/lang/String;
      70: aload_0
      71: ldc           #15                 // String NC
      73: putfield      #16                 // Field name:Ljava/lang/String;
      76: aload_0
      77: new           #17                 // class java/util/concurrent/CopyOnWriteArrayList
      80: dup
      81: invokespecial #18                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      84: putfield      #19                 // Field excludedDestinations:Ljava/util/List;
      87: aload_0
      88: new           #17                 // class java/util/concurrent/CopyOnWriteArrayList
      91: dup
      92: invokespecial #18                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      95: putfield      #20                 // Field dynamicallyIncludedDestinations:Ljava/util/List;
      98: aload_0
      99: new           #17                 // class java/util/concurrent/CopyOnWriteArrayList
     102: dup
     103: invokespecial #18                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
     106: putfield      #21                 // Field staticallyIncludedDestinations:Ljava/util/List;
     109: aload_0
     110: iconst_0
     111: putfield      #22                 // Field suppressDuplicateQueueSubscriptions:Z
     114: aload_0
     115: iconst_1
     116: putfield      #23                 // Field suppressDuplicateTopicSubscriptions:Z
     119: aload_0
     120: iconst_1
     121: putfield      #24                 // Field alwaysSyncSend:Z
     124: aload_0
     125: iconst_0
     126: putfield      #25                 // Field staticBridge:Z
     129: aload_0
     130: iconst_0
     131: putfield      #26                 // Field useCompression:Z
     134: aload_0
     135: iconst_0
     136: putfield      #27                 // Field advisoryForFailedForward:Z
     139: aload_0
     140: iconst_1
     141: putfield      #28                 // Field useBrokerNamesAsIdSeed:Z
     144: aload_0
     145: iconst_1
     146: putfield      #29                 // Field gcDestinationViews:Z
     149: aload_0
     150: ldc2_w        #30                 // long 60000l
     153: putfield      #32                 // Field gcSweepTime:J
     156: aload_0
     157: iconst_0
     158: putfield      #33                 // Field checkDuplicateMessagesOnDuplex:Z
     161: return

  public boolean isConduitSubscriptions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conduitSubscriptions:Z
       4: ireturn

  public void setConduitSubscriptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field conduitSubscriptions:Z
       5: return

  public boolean isDynamicOnly();
    Code:
       0: aload_0
       1: getfield      #34                 // Field dynamicOnly:Z
       4: ireturn

  public void setDynamicOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field dynamicOnly:Z
       5: return

  public boolean isBridgeTempDestinations();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bridgeTempDestinations:Z
       4: ireturn

  public void setBridgeTempDestinations(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field bridgeTempDestinations:Z
       5: return

  public boolean isDecreaseNetworkConsumerPriority();
    Code:
       0: aload_0
       1: getfield      #35                 // Field decreaseNetworkConsumerPriority:Z
       4: ireturn

  public void setDecreaseNetworkConsumerPriority(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field decreaseNetworkConsumerPriority:Z
       5: return

  public boolean isDispatchAsync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field dispatchAsync:Z
       4: ireturn

  public void setDispatchAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field dispatchAsync:Z
       5: return

  public boolean isDuplex();
    Code:
       0: aload_0
       1: getfield      #36                 // Field duplex:Z
       4: ireturn

  public void setDuplex(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field duplex:Z
       5: return

  public java.lang.String getBrokerName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field brokerName:Ljava/lang/String;
       4: areturn

  public void setBrokerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field brokerName:Ljava/lang/String;
       5: return

  public int getNetworkTTL();
    Code:
       0: aload_0
       1: getfield      #7                  // Field networkTTL:I
       4: ireturn

  public void setNetworkTTL(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field networkTTL:I
       5: aload_0
       6: iload_1
       7: invokevirtual #37                 // Method setConsumerTTL:(I)V
      10: aload_0
      11: iload_1
      12: invokevirtual #38                 // Method setMessageTTL:(I)V
      15: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #39                 // Field password:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field password:Ljava/lang/String;
       5: return

  public int getPrefetchSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field prefetchSize:I
       4: ireturn

  public void setPrefetchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field prefetchSize:I
       5: return

  public java.lang.String getUserName();
    Code:
       0: aload_0
       1: getfield      #40                 // Field userName:Ljava/lang/String;
       4: areturn

  public void setUserName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field userName:Ljava/lang/String;
       5: return

  public java.lang.String getDestinationFilter();
    Code:
       0: aload_0
       1: getfield      #14                 // Field destinationFilter:Ljava/lang/String;
       4: ifnonnull     129
       7: aload_0
       8: getfield      #20                 // Field dynamicallyIncludedDestinations:Ljava/util/List;
      11: ifnull        126
      14: aload_0
      15: getfield      #20                 // Field dynamicallyIncludedDestinations:Ljava/util/List;
      18: invokeinterface #41,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      23: ifne          126
      26: new           #42                 // class java/lang/StringBuffer
      29: dup
      30: invokespecial #43                 // Method java/lang/StringBuffer."<init>":()V
      33: astore_1
      34: ldc           #12                 // String
      36: astore_2
      37: aload_0
      38: getfield      #20                 // Field dynamicallyIncludedDestinations:Ljava/util/List;
      41: invokeinterface #44,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      46: astore_3
      47: aload_3
      48: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          121
      56: aload_3
      57: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #47                 // class org/apache/activemq/command/ActiveMQDestination
      65: astore        4
      67: aload         4
      69: invokevirtual #48                 // Method org/apache/activemq/command/ActiveMQDestination.isTemporary:()Z
      72: ifne          118
      75: aload_1
      76: aload_2
      77: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      80: pop
      81: aload_1
      82: ldc           #50                 // String ActiveMQ.Advisory.Consumer.
      84: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: pop
      88: aload_1
      89: aload         4
      91: invokevirtual #51                 // Method org/apache/activemq/command/ActiveMQDestination.getDestinationTypeAsString:()Ljava/lang/String;
      94: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      97: pop
      98: aload_1
      99: ldc           #52                 // String .
     101: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: pop
     105: aload_1
     106: aload         4
     108: invokevirtual #53                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
     111: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     114: pop
     115: ldc           #54                 // String ,
     117: astore_2
     118: goto          47
     121: aload_1
     122: invokevirtual #55                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     125: areturn
     126: ldc           #56                 // String ActiveMQ.Advisory.Consumer.>
     128: areturn
     129: aload_0
     130: getfield      #14                 // Field destinationFilter:Ljava/lang/String;
     133: ldc           #50                 // String ActiveMQ.Advisory.Consumer.
     135: invokevirtual #57                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     138: ifne          164
     141: new           #58                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
     148: ldc           #50                 // String ActiveMQ.Advisory.Consumer.
     150: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload_0
     154: getfield      #14                 // Field destinationFilter:Ljava/lang/String;
     157: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: areturn
     164: aload_0
     165: getfield      #14                 // Field destinationFilter:Ljava/lang/String;
     168: areturn

  public void setDestinationFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field destinationFilter:Ljava/lang/String;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field name:Ljava/lang/String;
       5: return

  public java.util.List<org.apache.activemq.command.ActiveMQDestination> getExcludedDestinations();
    Code:
       0: aload_0
       1: getfield      #19                 // Field excludedDestinations:Ljava/util/List;
       4: areturn

  public void setExcludedDestinations(java.util.List<org.apache.activemq.command.ActiveMQDestination>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field excludedDestinations:Ljava/util/List;
       5: return

  public java.util.List<org.apache.activemq.command.ActiveMQDestination> getDynamicallyIncludedDestinations();
    Code:
       0: aload_0
       1: getfield      #20                 // Field dynamicallyIncludedDestinations:Ljava/util/List;
       4: areturn

  public void setDynamicallyIncludedDestinations(java.util.List<org.apache.activemq.command.ActiveMQDestination>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field dynamicallyIncludedDestinations:Ljava/util/List;
       5: return

  public java.util.List<org.apache.activemq.command.ActiveMQDestination> getStaticallyIncludedDestinations();
    Code:
       0: aload_0
       1: getfield      #21                 // Field staticallyIncludedDestinations:Ljava/util/List;
       4: areturn

  public void setStaticallyIncludedDestinations(java.util.List<org.apache.activemq.command.ActiveMQDestination>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field staticallyIncludedDestinations:Ljava/util/List;
       5: return

  public boolean isSuppressDuplicateQueueSubscriptions();
    Code:
       0: aload_0
       1: getfield      #22                 // Field suppressDuplicateQueueSubscriptions:Z
       4: ireturn

  public void setSuppressDuplicateQueueSubscriptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field suppressDuplicateQueueSubscriptions:Z
       5: return

  public boolean isSuppressDuplicateTopicSubscriptions();
    Code:
       0: aload_0
       1: getfield      #23                 // Field suppressDuplicateTopicSubscriptions:Z
       4: ireturn

  public void setSuppressDuplicateTopicSubscriptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field suppressDuplicateTopicSubscriptions:Z
       5: return

  public java.lang.String getBrokerURL();
    Code:
       0: aload_0
       1: getfield      #13                 // Field brokerURL:Ljava/lang/String;
       4: areturn

  public void setBrokerURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field brokerURL:Ljava/lang/String;
       5: return

  public boolean isAlwaysSyncSend();
    Code:
       0: aload_0
       1: getfield      #24                 // Field alwaysSyncSend:Z
       4: ireturn

  public void setAlwaysSyncSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field alwaysSyncSend:Z
       5: return

  public int getConsumerPriorityBase();
    Code:
       0: aload_0
       1: getfield      #4                  // Field consumerPriorityBase:I
       4: ireturn

  public void setConsumerPriorityBase(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field consumerPriorityBase:I
       5: return

  public boolean isStaticBridge();
    Code:
       0: aload_0
       1: getfield      #25                 // Field staticBridge:Z
       4: ireturn

  public void setStaticBridge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field staticBridge:Z
       5: return

  public void setUseCompression(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field useCompression:Z
       5: return

  public boolean isUseCompression();
    Code:
       0: aload_0
       1: getfield      #26                 // Field useCompression:Z
       4: ireturn

  public boolean isAdvisoryForFailedForward();
    Code:
       0: aload_0
       1: getfield      #27                 // Field advisoryForFailedForward:Z
       4: ireturn

  public void setAdvisoryForFailedForward(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field advisoryForFailedForward:Z
       5: return

  public void setConsumerTTL(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field consumerTTL:I
       5: return

  public int getConsumerTTL();
    Code:
       0: aload_0
       1: getfield      #8                  // Field consumerTTL:I
       4: ireturn

  public void setMessageTTL(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field messageTTL:I
       5: return

  public int getMessageTTL();
    Code:
       0: aload_0
       1: getfield      #9                  // Field messageTTL:I
       4: ireturn

  public boolean isUseBrokerNamesAsIdSeed();
    Code:
       0: aload_0
       1: getfield      #28                 // Field useBrokerNamesAsIdSeed:Z
       4: ireturn

  public void setUseBrokerNameAsIdSees(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field useBrokerNamesAsIdSeed:Z
       5: return

  public boolean isGcDestinationViews();
    Code:
       0: aload_0
       1: getfield      #29                 // Field gcDestinationViews:Z
       4: ireturn

  public void setGcDestinationViews(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field gcDestinationViews:Z
       5: return

  public long getGcSweepTime();
    Code:
       0: aload_0
       1: getfield      #32                 // Field gcSweepTime:J
       4: lreturn

  public void setGcSweepTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #32                 // Field gcSweepTime:J
       5: return

  public boolean isCheckDuplicateMessagesOnDuplex();
    Code:
       0: aload_0
       1: getfield      #33                 // Field checkDuplicateMessagesOnDuplex:Z
       4: ireturn

  public void setCheckDuplicateMessagesOnDuplex(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field checkDuplicateMessagesOnDuplex:Z
       5: return
}
