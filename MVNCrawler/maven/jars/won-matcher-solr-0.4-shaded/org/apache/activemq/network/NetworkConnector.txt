Compiled from "NetworkConnector.java"
public abstract class org.apache.activemq.network.NetworkConnector extends org.apache.activemq.network.NetworkBridgeConfiguration implements org.apache.activemq.Service {
  private static final org.slf4j.Logger LOG;

  protected java.net.URI localURI;

  protected org.apache.activemq.network.ConnectionFilter connectionFilter;

  protected java.util.concurrent.ConcurrentHashMap<java.net.URI, org.apache.activemq.network.NetworkBridge> bridges;

  protected org.apache.activemq.util.ServiceSupport serviceSupport;

  private java.util.Set<org.apache.activemq.command.ActiveMQDestination> durableDestinations;

  private org.apache.activemq.broker.BrokerService brokerService;

  private javax.management.ObjectName objectName;

  public org.apache.activemq.network.NetworkConnector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/network/NetworkBridgeConfiguration."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #5                  // class org/apache/activemq/network/NetworkConnector$1
      19: dup
      20: aload_0
      21: invokespecial #6                  // Method org/apache/activemq/network/NetworkConnector$1."<init>":(Lorg/apache/activemq/network/NetworkConnector;)V
      24: putfield      #7                  // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
      27: return

  public org.apache.activemq.network.NetworkConnector(java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/network/NetworkBridgeConfiguration."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #5                  // class org/apache/activemq/network/NetworkConnector$1
      19: dup
      20: aload_0
      21: invokespecial #6                  // Method org/apache/activemq/network/NetworkConnector$1."<init>":(Lorg/apache/activemq/network/NetworkConnector;)V
      24: putfield      #7                  // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field localURI:Ljava/net/URI;
      32: return

  public java.net.URI getLocalUri() throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field localURI:Ljava/net/URI;
       4: areturn

  public void setLocalUri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field localURI:Ljava/net/URI;
       5: return

  public java.util.Set<org.apache.activemq.command.ActiveMQDestination> getDurableDestinations();
    Code:
       0: aload_0
       1: getfield      #9                  // Field durableDestinations:Ljava/util/Set;
       4: areturn

  public void setDurableDestinations(java.util.Set<org.apache.activemq.command.ActiveMQDestination>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field durableDestinations:Ljava/util/Set;
       5: return

  public void addExcludedDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #10                 // Field excludedDestinations:Ljava/util/List;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addStaticallyIncludedDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #12                 // Field staticallyIncludedDestinations:Ljava/util/List;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addDynamicallyIncludedDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: getfield      #13                 // Field dynamicallyIncludedDestinations:Ljava/util/List;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.apache.activemq.network.ConnectionFilter getConnectionFilter();
    Code:
       0: aload_0
       1: getfield      #14                 // Field connectionFilter:Lorg/apache/activemq/network/ConnectionFilter;
       4: areturn

  public void setConnectionFilter(org.apache.activemq.network.ConnectionFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field connectionFilter:Lorg/apache/activemq/network/ConnectionFilter;
       5: return

  protected org.apache.activemq.network.NetworkBridge configureBridge(org.apache.activemq.network.DemandForwardingBridgeSupport);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getDynamicallyIncludedDestinations:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: aload_2
       7: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      12: anewarray     #17                 // class org/apache/activemq/command/ActiveMQDestination
      15: invokeinterface #18,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      20: checkcast     #19                 // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
      23: astore_3
      24: aload_1
      25: aload_3
      26: invokevirtual #20                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport.setDynamicallyIncludedDestinations:([Lorg/apache/activemq/command/ActiveMQDestination;)V
      29: aload_0
      30: invokevirtual #21                 // Method getExcludedDestinations:()Ljava/util/List;
      33: astore_2
      34: aload_2
      35: aload_2
      36: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      41: anewarray     #17                 // class org/apache/activemq/command/ActiveMQDestination
      44: invokeinterface #18,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      49: checkcast     #19                 // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
      52: astore_3
      53: aload_1
      54: aload_3
      55: invokevirtual #22                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport.setExcludedDestinations:([Lorg/apache/activemq/command/ActiveMQDestination;)V
      58: aload_0
      59: invokevirtual #23                 // Method getStaticallyIncludedDestinations:()Ljava/util/List;
      62: astore_2
      63: aload_2
      64: aload_2
      65: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      70: anewarray     #17                 // class org/apache/activemq/command/ActiveMQDestination
      73: invokeinterface #18,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      78: checkcast     #19                 // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
      81: astore_3
      82: aload_1
      83: aload_3
      84: invokevirtual #24                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport.setStaticallyIncludedDestinations:([Lorg/apache/activemq/command/ActiveMQDestination;)V
      87: aload_0
      88: getfield      #9                  // Field durableDestinations:Ljava/util/Set;
      91: ifnull        183
      94: new           #25                 // class java/util/HashSet
      97: dup
      98: invokespecial #26                 // Method java/util/HashSet."<init>":()V
     101: astore        4
     103: aload_0
     104: getfield      #9                  // Field durableDestinations:Ljava/util/Set;
     107: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     112: astore        5
     114: aload         5
     116: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     121: ifeq          155
     124: aload         5
     126: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     131: checkcast     #17                 // class org/apache/activemq/command/ActiveMQDestination
     134: astore        6
     136: aload         6
     138: invokevirtual #30                 // Method org/apache/activemq/command/ActiveMQDestination.isTopic:()Z
     141: ifeq          152
     144: aload         4
     146: aload         6
     148: invokevirtual #31                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     151: pop
     152: goto          114
     155: aload         4
     157: invokevirtual #32                 // Method java/util/HashSet.size:()I
     160: anewarray     #17                 // class org/apache/activemq/command/ActiveMQDestination
     163: astore        5
     165: aload         4
     167: aload         5
     169: invokevirtual #33                 // Method java/util/HashSet.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     172: checkcast     #19                 // class "[Lorg/apache/activemq/command/ActiveMQDestination;"
     175: astore        5
     177: aload_1
     178: aload         5
     180: invokevirtual #34                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport.setDurableDestinations:([Lorg/apache/activemq/command/ActiveMQDestination;)V
     183: aload_1
     184: areturn

  protected org.apache.activemq.transport.Transport createLocalTransport() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field localURI:Ljava/net/URI;
       4: invokestatic  #35                 // Method org/apache/activemq/transport/TransportFactory.connect:(Ljava/net/URI;)Lorg/apache/activemq/transport/Transport;
       7: areturn

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
       4: invokevirtual #36                 // Method org/apache/activemq/util/ServiceSupport.start:()V
       7: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
       4: invokevirtual #37                 // Method org/apache/activemq/util/ServiceSupport.stop:()V
       7: return

  protected void handleStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field localURI:Ljava/net/URI;
       4: ifnonnull     17
       7: new           #38                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #39                 // String You must configure the \'localURI\' property
      13: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #42                 // String Network Connector {} started
      22: aload_0
      23: invokeinterface #43,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      28: return

  protected void handleStop(org.apache.activemq.util.ServiceStopper) throws java.lang.Exception;
    Code:
       0: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #44                 // String Network Connector {} stopped
       5: aload_0
       6: invokeinterface #43,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      11: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #7                  // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
       4: invokevirtual #45                 // Method org/apache/activemq/util/ServiceSupport.isStarted:()Z
       7: ireturn

  public boolean isStopped();
    Code:
       0: aload_0
       1: getfield      #7                  // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
       4: invokevirtual #46                 // Method org/apache/activemq/util/ServiceSupport.isStopped:()Z
       7: ireturn

  public boolean isStopping();
    Code:
       0: aload_0
       1: getfield      #7                  // Field serviceSupport:Lorg/apache/activemq/util/ServiceSupport;
       4: invokevirtual #47                 // Method org/apache/activemq/util/ServiceSupport.isStopping:()Z
       7: ireturn

  public javax.management.ObjectName getObjectName();
    Code:
       0: aload_0
       1: getfield      #48                 // Field objectName:Ljavax/management/ObjectName;
       4: areturn

  public void setObjectName(javax.management.ObjectName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field objectName:Ljavax/management/ObjectName;
       5: return

  public org.apache.activemq.broker.BrokerService getBrokerService();
    Code:
       0: aload_0
       1: getfield      #49                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       4: areturn

  public void setBrokerService(org.apache.activemq.broker.BrokerService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field brokerService:Lorg/apache/activemq/broker/BrokerService;
       5: return

  protected void registerNetworkBridgeMBean(org.apache.activemq.network.NetworkBridge);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #51                 // Method org/apache/activemq/broker/BrokerService.isUseJmx:()Z
       7: ifne          11
      10: return
      11: new           #52                 // class org/apache/activemq/broker/jmx/NetworkBridgeView
      14: dup
      15: aload_1
      16: invokespecial #53                 // Method org/apache/activemq/broker/jmx/NetworkBridgeView."<init>":(Lorg/apache/activemq/network/NetworkBridge;)V
      19: astore_2
      20: aload_0
      21: aload_1
      22: invokevirtual #54                 // Method createNetworkBridgeObjectName:(Lorg/apache/activemq/network/NetworkBridge;)Ljavax/management/ObjectName;
      25: astore_3
      26: aload_0
      27: invokevirtual #50                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      30: invokevirtual #55                 // Method org/apache/activemq/broker/BrokerService.getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      33: aload_2
      34: aload_3
      35: invokestatic  #56                 // Method org/apache/activemq/broker/jmx/AnnotatedMBean.registerMBean:(Lorg/apache/activemq/broker/jmx/ManagementContext;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      38: goto          57
      41: astore_3
      42: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      45: ldc           #58                 // String Network bridge could not be registered in JMX: {}
      47: aload_3
      48: invokevirtual #59                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      51: aload_3
      52: invokeinterface #60,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      57: return
    Exception table:
       from    to  target type
          20    38    41   Class java/lang/Throwable

  protected void unregisterNetworkBridgeMBean(org.apache.activemq.network.NetworkBridge);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
       4: invokevirtual #51                 // Method org/apache/activemq/broker/BrokerService.isUseJmx:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: aload_1
      13: invokevirtual #54                 // Method createNetworkBridgeObjectName:(Lorg/apache/activemq/network/NetworkBridge;)Ljavax/management/ObjectName;
      16: astore_2
      17: aload_0
      18: invokevirtual #50                 // Method getBrokerService:()Lorg/apache/activemq/broker/BrokerService;
      21: invokevirtual #55                 // Method org/apache/activemq/broker/BrokerService.getManagementContext:()Lorg/apache/activemq/broker/jmx/ManagementContext;
      24: aload_2
      25: invokevirtual #61                 // Method org/apache/activemq/broker/jmx/ManagementContext.unregisterMBean:(Ljavax/management/ObjectName;)V
      28: goto          47
      31: astore_2
      32: getstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      35: ldc           #62                 // String Network bridge could not be unregistered in JMX: {}
      37: aload_2
      38: invokevirtual #59                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      41: aload_2
      42: invokeinterface #60,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      47: return
    Exception table:
       from    to  target type
          11    28    31   Class java/lang/Throwable

  protected javax.management.ObjectName createNetworkBridgeObjectName(org.apache.activemq.network.NetworkBridge) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getObjectName:()Ljavax/management/ObjectName;
       4: aload_1
       5: invokeinterface #64,  1           // InterfaceMethod org/apache/activemq/network/NetworkBridge.getRemoteAddress:()Ljava/lang/String;
      10: invokestatic  #65                 // Method org/apache/activemq/broker/jmx/BrokerMBeanSupport.createNetworkBridgeObjectName:(Ljavax/management/ObjectName;Ljava/lang/String;)Ljavax/management/ObjectName;
      13: areturn

  public boolean removeDemandSubscription(org.apache.activemq.command.ConsumerId);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #4                  // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
       6: invokevirtual #66                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       9: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          67
      24: aload_3
      25: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #68                 // class org/apache/activemq/network/NetworkBridge
      33: astore        4
      35: aload         4
      37: instanceof    #69                 // class org/apache/activemq/network/DemandForwardingBridgeSupport
      40: ifeq          64
      43: aload         4
      45: checkcast     #69                 // class org/apache/activemq/network/DemandForwardingBridgeSupport
      48: astore        5
      50: aload         5
      52: aload_1
      53: invokevirtual #70                 // Method org/apache/activemq/network/DemandForwardingBridgeSupport.removeDemandSubscriptionByLocalId:(Lorg/apache/activemq/command/ConsumerId;)Z
      56: ifeq          64
      59: iconst_1
      60: istore_2
      61: goto          67
      64: goto          15
      67: iload_2
      68: ireturn

  public java.util.Collection<org.apache.activemq.network.NetworkBridge> activeBridges();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bridges:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #66                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: areturn

  static {};
    Code:
       0: ldc_w         #71                 // class org/apache/activemq/network/NetworkConnector
       3: invokestatic  #72                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
