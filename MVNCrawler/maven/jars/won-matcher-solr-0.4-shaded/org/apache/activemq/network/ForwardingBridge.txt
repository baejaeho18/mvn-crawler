Compiled from "ForwardingBridge.java"
public class org.apache.activemq.network.ForwardingBridge implements org.apache.activemq.Service {
  private static final org.apache.activemq.util.IdGenerator ID_GENERATOR;

  private static final org.slf4j.Logger LOG;

  final java.util.concurrent.atomic.AtomicLong enqueueCounter;

  final java.util.concurrent.atomic.AtomicLong dequeueCounter;

  org.apache.activemq.command.ConnectionInfo connectionInfo;

  org.apache.activemq.command.SessionInfo sessionInfo;

  org.apache.activemq.command.ProducerInfo producerInfo;

  org.apache.activemq.command.ConsumerInfo queueConsumerInfo;

  org.apache.activemq.command.ConsumerInfo topicConsumerInfo;

  org.apache.activemq.command.BrokerId localBrokerId;

  org.apache.activemq.command.BrokerId remoteBrokerId;

  org.apache.activemq.command.BrokerInfo localBrokerInfo;

  org.apache.activemq.command.BrokerInfo remoteBrokerInfo;

  private final org.apache.activemq.transport.Transport localBroker;

  private final org.apache.activemq.transport.Transport remoteBroker;

  private java.lang.String clientId;

  private int prefetchSize;

  private boolean dispatchAsync;

  private java.lang.String destinationFilter;

  private org.apache.activemq.network.NetworkBridgeListener bridgeFailedListener;

  private boolean useCompression;

  public org.apache.activemq.network.ForwardingBridge(org.apache.activemq.transport.Transport, org.apache.activemq.transport.Transport);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #6                  // Field enqueueCounter:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #7                  // Field dequeueCounter:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: sipush        1000
      30: putfield      #8                  // Field prefetchSize:I
      33: aload_0
      34: ldc           #9                  // String >
      36: putfield      #10                 // Field destinationFilter:Ljava/lang/String;
      39: aload_0
      40: iconst_0
      41: putfield      #11                 // Field useCompression:Z
      44: aload_0
      45: aload_1
      46: putfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      49: aload_0
      50: aload_2
      51: putfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      54: return

  public void start() throws java.lang.Exception;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #13                 // String Starting a network connection between {} and {} has been established.
       5: aload_0
       6: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
       9: aload_0
      10: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      13: invokeinterface #14,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      22: new           #15                 // class org/apache/activemq/network/ForwardingBridge$1
      25: dup
      26: aload_0
      27: invokespecial #16                 // Method org/apache/activemq/network/ForwardingBridge$1."<init>":(Lorg/apache/activemq/network/ForwardingBridge;)V
      30: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      35: aload_0
      36: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      39: new           #18                 // class org/apache/activemq/network/ForwardingBridge$2
      42: dup
      43: aload_0
      44: invokespecial #19                 // Method org/apache/activemq/network/ForwardingBridge$2."<init>":(Lorg/apache/activemq/network/ForwardingBridge;)V
      47: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      52: aload_0
      53: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      56: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/transport/Transport.start:()V
      61: aload_0
      62: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      65: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/transport/Transport.start:()V
      70: return

  protected void triggerStartBridge() throws java.io.IOException;
    Code:
       0: new           #21                 // class org/apache/activemq/network/ForwardingBridge$3
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method org/apache/activemq/network/ForwardingBridge$3."<init>":(Lorg/apache/activemq/network/ForwardingBridge;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #23                 // Method java/lang/Thread.start:()V
      13: return

  final void startBridge() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #24                 // class org/apache/activemq/command/ConnectionInfo
       4: dup
       5: invokespecial #25                 // Method org/apache/activemq/command/ConnectionInfo."<init>":()V
       8: putfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      11: aload_0
      12: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      15: new           #27                 // class org/apache/activemq/command/ConnectionId
      18: dup
      19: getstatic     #28                 // Field ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
      22: invokevirtual #29                 // Method org/apache/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      25: invokespecial #30                 // Method org/apache/activemq/command/ConnectionId."<init>":(Ljava/lang/String;)V
      28: invokevirtual #31                 // Method org/apache/activemq/command/ConnectionInfo.setConnectionId:(Lorg/apache/activemq/command/ConnectionId;)V
      31: aload_0
      32: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      35: aload_0
      36: getfield      #32                 // Field clientId:Ljava/lang/String;
      39: invokevirtual #33                 // Method org/apache/activemq/command/ConnectionInfo.setClientId:(Ljava/lang/String;)V
      42: aload_0
      43: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      46: aload_0
      47: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      50: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      55: aload_0
      56: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      59: aload_0
      60: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      63: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      68: aload_0
      69: new           #35                 // class org/apache/activemq/command/SessionInfo
      72: dup
      73: aload_0
      74: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      77: lconst_1
      78: invokespecial #36                 // Method org/apache/activemq/command/SessionInfo."<init>":(Lorg/apache/activemq/command/ConnectionInfo;J)V
      81: putfield      #37                 // Field sessionInfo:Lorg/apache/activemq/command/SessionInfo;
      84: aload_0
      85: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      88: aload_0
      89: getfield      #37                 // Field sessionInfo:Lorg/apache/activemq/command/SessionInfo;
      92: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      97: aload_0
      98: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     101: aload_0
     102: getfield      #37                 // Field sessionInfo:Lorg/apache/activemq/command/SessionInfo;
     105: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     110: aload_0
     111: new           #38                 // class org/apache/activemq/command/ConsumerInfo
     114: dup
     115: aload_0
     116: getfield      #37                 // Field sessionInfo:Lorg/apache/activemq/command/SessionInfo;
     119: lconst_1
     120: invokespecial #39                 // Method org/apache/activemq/command/ConsumerInfo."<init>":(Lorg/apache/activemq/command/SessionInfo;J)V
     123: putfield      #40                 // Field queueConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     126: aload_0
     127: getfield      #40                 // Field queueConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     130: aload_0
     131: getfield      #41                 // Field dispatchAsync:Z
     134: invokevirtual #42                 // Method org/apache/activemq/command/ConsumerInfo.setDispatchAsync:(Z)V
     137: aload_0
     138: getfield      #40                 // Field queueConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     141: new           #43                 // class org/apache/activemq/command/ActiveMQQueue
     144: dup
     145: aload_0
     146: getfield      #10                 // Field destinationFilter:Ljava/lang/String;
     149: invokespecial #44                 // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
     152: invokevirtual #45                 // Method org/apache/activemq/command/ConsumerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     155: aload_0
     156: getfield      #40                 // Field queueConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     159: aload_0
     160: getfield      #8                  // Field prefetchSize:I
     163: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.setPrefetchSize:(I)V
     166: aload_0
     167: getfield      #40                 // Field queueConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     170: bipush        -5
     172: invokevirtual #47                 // Method org/apache/activemq/command/ConsumerInfo.setPriority:(B)V
     175: aload_0
     176: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
     179: aload_0
     180: getfield      #40                 // Field queueConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     183: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     188: aload_0
     189: new           #48                 // class org/apache/activemq/command/ProducerInfo
     192: dup
     193: aload_0
     194: getfield      #37                 // Field sessionInfo:Lorg/apache/activemq/command/SessionInfo;
     197: lconst_1
     198: invokespecial #49                 // Method org/apache/activemq/command/ProducerInfo."<init>":(Lorg/apache/activemq/command/SessionInfo;J)V
     201: putfield      #50                 // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
     204: aload_0
     205: getfield      #50                 // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
     208: iconst_0
     209: invokevirtual #51                 // Method org/apache/activemq/command/ProducerInfo.setResponseRequired:(Z)V
     212: aload_0
     213: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     216: aload_0
     217: getfield      #50                 // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
     220: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     225: aload_0
     226: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
     229: invokevirtual #52                 // Method org/apache/activemq/command/ConnectionInfo.getClientId:()Ljava/lang/String;
     232: ifnull        332
     235: aload_0
     236: new           #38                 // class org/apache/activemq/command/ConsumerInfo
     239: dup
     240: aload_0
     241: getfield      #37                 // Field sessionInfo:Lorg/apache/activemq/command/SessionInfo;
     244: ldc2_w        #53                 // long 2l
     247: invokespecial #39                 // Method org/apache/activemq/command/ConsumerInfo."<init>":(Lorg/apache/activemq/command/SessionInfo;J)V
     250: putfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     253: aload_0
     254: getfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     257: aload_0
     258: getfield      #41                 // Field dispatchAsync:Z
     261: invokevirtual #42                 // Method org/apache/activemq/command/ConsumerInfo.setDispatchAsync:(Z)V
     264: aload_0
     265: getfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     268: ldc           #56                 // String topic-bridge
     270: invokevirtual #57                 // Method org/apache/activemq/command/ConsumerInfo.setSubscriptionName:(Ljava/lang/String;)V
     273: aload_0
     274: getfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     277: iconst_1
     278: invokevirtual #58                 // Method org/apache/activemq/command/ConsumerInfo.setRetroactive:(Z)V
     281: aload_0
     282: getfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     285: new           #59                 // class org/apache/activemq/command/ActiveMQTopic
     288: dup
     289: aload_0
     290: getfield      #10                 // Field destinationFilter:Ljava/lang/String;
     293: invokespecial #60                 // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
     296: invokevirtual #45                 // Method org/apache/activemq/command/ConsumerInfo.setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
     299: aload_0
     300: getfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     303: aload_0
     304: getfield      #8                  // Field prefetchSize:I
     307: invokevirtual #46                 // Method org/apache/activemq/command/ConsumerInfo.setPrefetchSize:(I)V
     310: aload_0
     311: getfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     314: bipush        -5
     316: invokevirtual #47                 // Method org/apache/activemq/command/ConsumerInfo.setPriority:(B)V
     319: aload_0
     320: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
     323: aload_0
     324: getfield      #55                 // Field topicConsumerInfo:Lorg/apache/activemq/command/ConsumerInfo;
     327: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     332: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     335: ldc           #61                 // String Network connection between {} and {} has been established.
     337: aload_0
     338: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
     341: aload_0
     342: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     345: invokeinterface #14,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     350: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
       4: ifnull        41
       7: aload_0
       8: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      11: aload_0
      12: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      15: invokevirtual #62                 // Method org/apache/activemq/command/ConnectionInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      18: invokeinterface #63,  2           // InterfaceMethod org/apache/activemq/transport/Transport.request:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      28: aload_0
      29: getfield      #26                 // Field connectionInfo:Lorg/apache/activemq/command/ConnectionInfo;
      32: invokevirtual #62                 // Method org/apache/activemq/command/ConnectionInfo.createRemoveCommand:()Lorg/apache/activemq/command/RemoveInfo;
      35: invokeinterface #63,  2           // InterfaceMethod org/apache/activemq/transport/Transport.request:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      45: aconst_null
      46: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      51: aload_0
      52: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      55: aconst_null
      56: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/transport/Transport.setTransportListener:(Lorg/apache/activemq/transport/TransportListener;)V
      61: aload_0
      62: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      65: new           #64                 // class org/apache/activemq/command/ShutdownInfo
      68: dup
      69: invokespecial #65                 // Method org/apache/activemq/command/ShutdownInfo."<init>":()V
      72: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      77: aload_0
      78: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      81: new           #64                 // class org/apache/activemq/command/ShutdownInfo
      84: dup
      85: invokespecial #65                 // Method org/apache/activemq/command/ShutdownInfo."<init>":()V
      88: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      93: new           #66                 // class org/apache/activemq/util/ServiceStopper
      96: dup
      97: invokespecial #67                 // Method org/apache/activemq/util/ServiceStopper."<init>":()V
     100: astore_1
     101: aload_1
     102: aload_0
     103: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
     106: invokevirtual #68                 // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     109: aload_1
     110: aload_0
     111: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     114: invokevirtual #68                 // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     117: aload_1
     118: invokevirtual #69                 // Method org/apache/activemq/util/ServiceStopper.throwFirstException:()V
     121: goto          155
     124: astore_2
     125: new           #66                 // class org/apache/activemq/util/ServiceStopper
     128: dup
     129: invokespecial #67                 // Method org/apache/activemq/util/ServiceStopper."<init>":()V
     132: astore_3
     133: aload_3
     134: aload_0
     135: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
     138: invokevirtual #68                 // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     141: aload_3
     142: aload_0
     143: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     146: invokevirtual #68                 // Method org/apache/activemq/util/ServiceStopper.stop:(Lorg/apache/activemq/Service;)V
     149: aload_3
     150: invokevirtual #69                 // Method org/apache/activemq/util/ServiceStopper.throwFirstException:()V
     153: aload_2
     154: athrow
     155: return
    Exception table:
       from    to  target type
           0    93   124   any
         124   125   124   any

  public void serviceRemoteException(java.lang.Throwable);
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #70                 // String Unexpected remote exception: {}
       5: aload_1
       6: invokevirtual #71                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       9: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #73                 // String Exception trace:
      19: aload_1
      20: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  protected void serviceRemoteCommand(org.apache.activemq.command.Command);
    Code:
       0: aload_1
       1: invokeinterface #75,  1           // InterfaceMethod org/apache/activemq/command/Command.isBrokerInfo:()Z
       6: ifeq          87
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: aload_1
      15: checkcast     #76                 // class org/apache/activemq/command/BrokerInfo
      18: putfield      #77                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      21: aload_0
      22: aload_0
      23: getfield      #77                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      26: invokevirtual #78                 // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
      29: putfield      #79                 // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
      32: aload_0
      33: getfield      #80                 // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
      36: ifnull        74
      39: aload_0
      40: getfield      #80                 // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
      43: aload_0
      44: getfield      #79                 // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
      47: invokevirtual #81                 // Method org/apache/activemq/command/BrokerId.equals:(Ljava/lang/Object;)Z
      50: ifeq          70
      53: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      56: ldc           #82                 // String Disconnecting loop back connection.
      58: invokeinterface #83,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      63: aload_0
      64: invokestatic  #84                 // Method org/apache/activemq/util/ServiceSupport.dispose:(Lorg/apache/activemq/Service;)V
      67: goto          74
      70: aload_0
      71: invokevirtual #85                 // Method triggerStartBridge:()V
      74: aload_2
      75: monitorexit
      76: goto          84
      79: astore_3
      80: aload_2
      81: monitorexit
      82: aload_3
      83: athrow
      84: goto          98
      87: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      90: ldc           #86                 // String Unexpected remote command: {}
      92: aload_1
      93: invokeinterface #87,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      98: goto          107
     101: astore_2
     102: aload_0
     103: aload_2
     104: invokevirtual #89                 // Method serviceLocalException:(Ljava/lang/Throwable;)V
     107: return
    Exception table:
       from    to  target type
          13    76    79   any
          79    82    79   any
           0    98   101   Class java/io/IOException

  public void serviceLocalException(java.lang.Throwable);
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #90                 // String Unexpected local exception: {}
       5: aload_1
       6: invokevirtual #71                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       9: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #73                 // String Exception trace:
      19: aload_1
      20: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: aload_0
      26: invokespecial #91                 // Method fireBridgeFailed:()V
      29: return

  protected void serviceLocalCommand(org.apache.activemq.command.Command);
    Code:
       0: aload_1
       1: invokeinterface #92,  1           // InterfaceMethod org/apache/activemq/command/Command.isMessageDispatch:()Z
       6: ifeq          143
       9: aload_0
      10: getfield      #6                  // Field enqueueCounter:Ljava/util/concurrent/atomic/AtomicLong;
      13: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      16: pop2
      17: aload_1
      18: checkcast     #94                 // class org/apache/activemq/command/MessageDispatch
      21: astore_2
      22: aload_2
      23: invokevirtual #95                 // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      26: astore_3
      27: aload_3
      28: aload_0
      29: getfield      #50                 // Field producerInfo:Lorg/apache/activemq/command/ProducerInfo;
      32: invokevirtual #96                 // Method org/apache/activemq/command/ProducerInfo.getProducerId:()Lorg/apache/activemq/command/ProducerId;
      35: invokevirtual #97                 // Method org/apache/activemq/command/Message.setProducerId:(Lorg/apache/activemq/command/ProducerId;)V
      38: aload_3
      39: invokevirtual #98                 // Method org/apache/activemq/command/Message.getOriginalTransactionId:()Lorg/apache/activemq/command/TransactionId;
      42: ifnonnull     53
      45: aload_3
      46: aload_3
      47: invokevirtual #99                 // Method org/apache/activemq/command/Message.getTransactionId:()Lorg/apache/activemq/command/TransactionId;
      50: invokevirtual #100                // Method org/apache/activemq/command/Message.setOriginalTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      53: aload_3
      54: aconst_null
      55: invokevirtual #101                // Method org/apache/activemq/command/Message.setTransactionId:(Lorg/apache/activemq/command/TransactionId;)V
      58: aload_0
      59: invokevirtual #102                // Method isUseCompression:()Z
      62: ifeq          69
      65: aload_3
      66: invokevirtual #103                // Method org/apache/activemq/command/Message.compress:()V
      69: aload_3
      70: invokevirtual #104                // Method org/apache/activemq/command/Message.isResponseRequired:()Z
      73: ifne          116
      76: aload_0
      77: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
      80: aload_3
      81: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
      86: aload_0
      87: getfield      #7                  // Field dequeueCounter:Ljava/util/concurrent/atomic/AtomicLong;
      90: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      93: pop2
      94: aload_0
      95: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
      98: new           #105                // class org/apache/activemq/command/MessageAck
     101: dup
     102: aload_2
     103: iconst_2
     104: iconst_1
     105: invokespecial #106                // Method org/apache/activemq/command/MessageAck."<init>":(Lorg/apache/activemq/command/MessageDispatch;BI)V
     108: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/transport/Transport.oneway:(Ljava/lang/Object;)V
     113: goto          140
     116: new           #107                // class org/apache/activemq/network/ForwardingBridge$4
     119: dup
     120: aload_0
     121: aload_2
     122: invokespecial #108                // Method org/apache/activemq/network/ForwardingBridge$4."<init>":(Lorg/apache/activemq/network/ForwardingBridge;Lorg/apache/activemq/command/MessageDispatch;)V
     125: astore        4
     127: aload_0
     128: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
     131: aload_3
     132: aload         4
     134: invokeinterface #109,  3          // InterfaceMethod org/apache/activemq/transport/Transport.asyncRequest:(Ljava/lang/Object;Lorg/apache/activemq/transport/ResponseCallback;)Lorg/apache/activemq/transport/FutureResponse;
     139: pop
     140: goto          243
     143: aload_1
     144: invokeinterface #75,  1           // InterfaceMethod org/apache/activemq/command/Command.isBrokerInfo:()Z
     149: ifeq          232
     152: aload_0
     153: dup
     154: astore_2
     155: monitorenter
     156: aload_0
     157: aload_1
     158: checkcast     #76                 // class org/apache/activemq/command/BrokerInfo
     161: putfield      #110                // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     164: aload_0
     165: aload_0
     166: getfield      #110                // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
     169: invokevirtual #78                 // Method org/apache/activemq/command/BrokerInfo.getBrokerId:()Lorg/apache/activemq/command/BrokerId;
     172: putfield      #80                 // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
     175: aload_0
     176: getfield      #79                 // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
     179: ifnull        217
     182: aload_0
     183: getfield      #79                 // Field remoteBrokerId:Lorg/apache/activemq/command/BrokerId;
     186: aload_0
     187: getfield      #80                 // Field localBrokerId:Lorg/apache/activemq/command/BrokerId;
     190: invokevirtual #81                 // Method org/apache/activemq/command/BrokerId.equals:(Ljava/lang/Object;)Z
     193: ifeq          213
     196: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     199: ldc           #82                 // String Disconnecting loop back connection.
     201: invokeinterface #83,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     206: aload_0
     207: invokestatic  #84                 // Method org/apache/activemq/util/ServiceSupport.dispose:(Lorg/apache/activemq/Service;)V
     210: goto          217
     213: aload_0
     214: invokevirtual #85                 // Method triggerStartBridge:()V
     217: aload_2
     218: monitorexit
     219: goto          229
     222: astore        5
     224: aload_2
     225: monitorexit
     226: aload         5
     228: athrow
     229: goto          243
     232: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     235: ldc           #111                // String Unexpected local command: {}
     237: aload_1
     238: invokeinterface #112,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     243: goto          252
     246: astore_2
     247: aload_0
     248: aload_2
     249: invokevirtual #89                 // Method serviceLocalException:(Ljava/lang/Throwable;)V
     252: return
    Exception table:
       from    to  target type
         156   219   222   any
         222   226   222   any
           0   243   246   Class java/io/IOException

  public java.lang.String getClientId();
    Code:
       0: aload_0
       1: getfield      #32                 // Field clientId:Ljava/lang/String;
       4: areturn

  public void setClientId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field clientId:Ljava/lang/String;
       5: return

  public int getPrefetchSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefetchSize:I
       4: ireturn

  public void setPrefetchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field prefetchSize:I
       5: return

  public boolean isDispatchAsync();
    Code:
       0: aload_0
       1: getfield      #41                 // Field dispatchAsync:Z
       4: ireturn

  public void setDispatchAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field dispatchAsync:Z
       5: return

  public java.lang.String getDestinationFilter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field destinationFilter:Ljava/lang/String;
       4: areturn

  public void setDestinationFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field destinationFilter:Ljava/lang/String;
       5: return

  public void setNetworkBridgeFailedListener(org.apache.activemq.network.NetworkBridgeListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field bridgeFailedListener:Lorg/apache/activemq/network/NetworkBridgeListener;
       5: return

  private void fireBridgeFailed();
    Code:
       0: aload_0
       1: getfield      #113                // Field bridgeFailedListener:Lorg/apache/activemq/network/NetworkBridgeListener;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #114,  1          // InterfaceMethod org/apache/activemq/network/NetworkBridgeListener.bridgeFailed:()V
      15: return

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field remoteBroker:Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #115,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
       9: areturn

  public java.lang.String getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
       4: invokeinterface #115,  1          // InterfaceMethod org/apache/activemq/transport/Transport.getRemoteAddress:()Ljava/lang/String;
       9: areturn

  public java.lang.String getLocalBrokerName();
    Code:
       0: aload_0
       1: getfield      #110                // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #110                // Field localBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      15: invokevirtual #116                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      18: areturn

  public java.lang.String getRemoteBrokerName();
    Code:
       0: aload_0
       1: getfield      #77                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #77                 // Field remoteBrokerInfo:Lorg/apache/activemq/command/BrokerInfo;
      15: invokevirtual #116                // Method org/apache/activemq/command/BrokerInfo.getBrokerName:()Ljava/lang/String;
      18: areturn

  public long getDequeueCounter();
    Code:
       0: aload_0
       1: getfield      #7                  // Field dequeueCounter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #117                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getEnqueueCounter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field enqueueCounter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #117                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void setUseCompression(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field useCompression:Z
       5: return

  public boolean isUseCompression();
    Code:
       0: aload_0
       1: getfield      #11                 // Field useCompression:Z
       4: ireturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.activemq.transport.Transport access$100(org.apache.activemq.network.ForwardingBridge);
    Code:
       0: aload_0
       1: getfield      #1                  // Field localBroker:Lorg/apache/activemq/transport/Transport;
       4: areturn

  static {};
    Code:
       0: new           #118                // class org/apache/activemq/util/IdGenerator
       3: dup
       4: invokespecial #119                // Method org/apache/activemq/util/IdGenerator."<init>":()V
       7: putstatic     #28                 // Field ID_GENERATOR:Lorg/apache/activemq/util/IdGenerator;
      10: ldc_w         #120                // class org/apache/activemq/network/ForwardingBridge
      13: invokestatic  #121                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      16: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      19: return
}
