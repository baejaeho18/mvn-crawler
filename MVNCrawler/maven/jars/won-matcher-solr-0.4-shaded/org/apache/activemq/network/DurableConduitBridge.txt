Compiled from "DurableConduitBridge.java"
public class org.apache.activemq.network.DurableConduitBridge extends org.apache.activemq.network.ConduitBridge {
  private static final org.slf4j.Logger LOG;

  public java.lang.String toString();
    Code:
       0: new           #1                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #3                  // String DurableConduitBridge:
       9: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      16: invokevirtual #6                  // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      19: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #7                  // String ->
      24: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #8                  // Method getRemoteBrokerName:()Ljava/lang/String;
      31: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public org.apache.activemq.network.DurableConduitBridge(org.apache.activemq.network.NetworkBridgeConfiguration, org.apache.activemq.transport.Transport, org.apache.activemq.transport.Transport);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #10                 // Method org/apache/activemq/network/ConduitBridge."<init>":(Lorg/apache/activemq/network/NetworkBridgeConfiguration;Lorg/apache/activemq/transport/Transport;Lorg/apache/activemq/transport/Transport;)V
       7: return

  protected void setupStaticDestinations();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/apache/activemq/network/ConduitBridge.setupStaticDestinations:()V
       4: aload_0
       5: getfield      #5                  // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
       8: invokevirtual #12                 // Method org/apache/activemq/network/NetworkBridgeConfiguration.isDynamicOnly:()Z
      11: ifeq          18
      14: aconst_null
      15: goto          22
      18: aload_0
      19: getfield      #13                 // Field durableDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
      22: astore_1
      23: aload_1
      24: ifnull        144
      27: aload_1
      28: astore_2
      29: aload_2
      30: arraylength
      31: istore_3
      32: iconst_0
      33: istore        4
      35: iload         4
      37: iload_3
      38: if_icmpge     144
      41: aload_2
      42: iload         4
      44: aaload
      45: astore        5
      47: aload_0
      48: aload         5
      50: invokevirtual #14                 // Method isPermissableDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      53: ifeq          138
      56: aload_0
      57: aload         5
      59: invokevirtual #15                 // Method doesConsumerExist:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      62: ifne          138
      65: aload_0
      66: aload         5
      68: invokevirtual #16                 // Method createDemandSubscription:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/network/DemandSubscription;
      71: astore        6
      73: aload         6
      75: iconst_1
      76: invokevirtual #17                 // Method org/apache/activemq/network/DemandSubscription.setStaticallyIncluded:(Z)V
      79: aload         5
      81: invokevirtual #18                 // Method org/apache/activemq/command/ActiveMQDestination.isTopic:()Z
      84: ifeq          101
      87: aload         6
      89: invokevirtual #19                 // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      92: aload_0
      93: aload         5
      95: invokevirtual #20                 // Method getSubscriberName:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/lang/String;
      98: invokevirtual #21                 // Method org/apache/activemq/command/ConsumerInfo.setSubscriptionName:(Ljava/lang/String;)V
     101: aload_0
     102: aload         6
     104: invokevirtual #22                 // Method addSubscription:(Lorg/apache/activemq/network/DemandSubscription;)V
     107: goto          126
     110: astore        7
     112: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     115: ldc           #25                 // String Failed to add static destination {}
     117: aload         5
     119: aload         7
     121: invokeinterface #26,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     126: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     129: ldc           #27                 // String Forwarding messages for durable destination: {}
     131: aload         5
     133: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     138: iinc          4, 1
     141: goto          35
     144: return
    Exception table:
       from    to  target type
         101   107   110   Class java/io/IOException

  protected org.apache.activemq.network.DemandSubscription createDemandSubscription(org.apache.activemq.command.ConsumerInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method addToAlreadyInterestedConsumers:(Lorg/apache/activemq/command/ConsumerInfo;)Z
       5: ifeq          10
       8: aconst_null
       9: areturn
      10: aload_1
      11: aload_1
      12: invokevirtual #30                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      15: invokevirtual #31                 // Method org/apache/activemq/command/ConsumerInfo.addNetworkConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      18: aload_1
      19: invokevirtual #32                 // Method org/apache/activemq/command/ConsumerInfo.isDurable:()Z
      22: ifeq          62
      25: aload_1
      26: aload_0
      27: aload_1
      28: invokevirtual #33                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      31: invokevirtual #20                 // Method getSubscriberName:(Lorg/apache/activemq/command/ActiveMQDestination;)Ljava/lang/String;
      34: invokevirtual #21                 // Method org/apache/activemq/command/ConsumerInfo.setSubscriptionName:(Ljava/lang/String;)V
      37: aload_1
      38: new           #34                 // class org/apache/activemq/command/ConsumerId
      41: dup
      42: aload_0
      43: getfield      #35                 // Field localSessionInfo:Lorg/apache/activemq/command/SessionInfo;
      46: invokevirtual #36                 // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      49: aload_0
      50: getfield      #37                 // Field consumerIdGenerator:Lorg/apache/activemq/util/LongSequenceGenerator;
      53: invokevirtual #38                 // Method org/apache/activemq/util/LongSequenceGenerator.getNextSequenceId:()J
      56: invokespecial #39                 // Method org/apache/activemq/command/ConsumerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      59: invokevirtual #40                 // Method org/apache/activemq/command/ConsumerInfo.setConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      62: aload_1
      63: aconst_null
      64: invokevirtual #41                 // Method org/apache/activemq/command/ConsumerInfo.setSelector:(Ljava/lang/String;)V
      67: aload_0
      68: aload_1
      69: invokevirtual #42                 // Method doCreateDemandSubscription:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/network/DemandSubscription;
      72: areturn

  protected java.lang.String getSubscriberName(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: new           #1                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #43                 // String NC-DS_
       9: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field configuration:Lorg/apache/activemq/network/NetworkBridgeConfiguration;
      16: invokevirtual #6                  // Method org/apache/activemq/network/NetworkBridgeConfiguration.getBrokerName:()Ljava/lang/String;
      19: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #44                 // String _
      24: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #45                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
      31: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: astore_2
      38: aload_2
      39: areturn

  protected boolean doesConsumerExist(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_1
       1: invokestatic  #46                 // Method org/apache/activemq/filter/DestinationFilter.parseFilter:(Lorg/apache/activemq/command/ActiveMQDestination;)Lorg/apache/activemq/filter/DestinationFilter;
       4: astore_2
       5: aload_0
       6: getfield      #47                 // Field subscriptionMapByLocalId:Ljava/util/concurrent/ConcurrentHashMap;
       9: invokevirtual #48                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      12: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          58
      27: aload_3
      28: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #52                 // class org/apache/activemq/network/DemandSubscription
      36: astore        4
      38: aload_2
      39: aload         4
      41: invokevirtual #19                 // Method org/apache/activemq/network/DemandSubscription.getLocalInfo:()Lorg/apache/activemq/command/ConsumerInfo;
      44: invokevirtual #33                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      47: invokevirtual #53                 // Method org/apache/activemq/filter/DestinationFilter.matches:(Lorg/apache/activemq/command/ActiveMQDestination;)Z
      50: ifeq          55
      53: iconst_1
      54: ireturn
      55: goto          18
      58: iconst_0
      59: ireturn

  static {};
    Code:
       0: ldc_w         #54                 // class org/apache/activemq/network/DurableConduitBridge
       3: invokestatic  #55                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
