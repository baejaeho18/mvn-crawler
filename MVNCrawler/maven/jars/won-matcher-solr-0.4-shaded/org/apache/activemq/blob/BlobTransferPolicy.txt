Compiled from "BlobTransferPolicy.java"
public class org.apache.activemq.blob.BlobTransferPolicy {
  private java.lang.String defaultUploadUrl;

  private java.lang.String brokerUploadUrl;

  private java.lang.String uploadUrl;

  private int bufferSize;

  private org.apache.activemq.blob.BlobUploadStrategy uploadStrategy;

  private org.apache.activemq.blob.BlobDownloadStrategy downloadStrategy;

  public org.apache.activemq.blob.BlobTransferPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String http://localhost:8080/uploads/
       7: putfield      #3                  // Field defaultUploadUrl:Ljava/lang/String;
      10: aload_0
      11: ldc           #4                  // int 131072
      13: putfield      #5                  // Field bufferSize:I
      16: return

  public org.apache.activemq.blob.BlobTransferPolicy copy();
    Code:
       0: new           #6                  // class org/apache/activemq/blob/BlobTransferPolicy
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field defaultUploadUrl:Ljava/lang/String;
      13: putfield      #3                  // Field defaultUploadUrl:Ljava/lang/String;
      16: aload_1
      17: aload_0
      18: getfield      #8                  // Field brokerUploadUrl:Ljava/lang/String;
      21: putfield      #8                  // Field brokerUploadUrl:Ljava/lang/String;
      24: aload_1
      25: aload_0
      26: getfield      #9                  // Field uploadUrl:Ljava/lang/String;
      29: putfield      #9                  // Field uploadUrl:Ljava/lang/String;
      32: aload_1
      33: aload_0
      34: getfield      #5                  // Field bufferSize:I
      37: putfield      #5                  // Field bufferSize:I
      40: aload_1
      41: aload_0
      42: getfield      #10                 // Field uploadStrategy:Lorg/apache/activemq/blob/BlobUploadStrategy;
      45: putfield      #10                 // Field uploadStrategy:Lorg/apache/activemq/blob/BlobUploadStrategy;
      48: aload_1
      49: aload_0
      50: getfield      #11                 // Field downloadStrategy:Lorg/apache/activemq/blob/BlobDownloadStrategy;
      53: putfield      #11                 // Field downloadStrategy:Lorg/apache/activemq/blob/BlobDownloadStrategy;
      56: aload_1
      57: areturn

  public java.lang.String getUploadUrl();
    Code:
       0: aload_0
       1: getfield      #9                  // Field uploadUrl:Ljava/lang/String;
       4: ifnonnull     30
       7: aload_0
       8: aload_0
       9: invokevirtual #12                 // Method getBrokerUploadUrl:()Ljava/lang/String;
      12: putfield      #9                  // Field uploadUrl:Ljava/lang/String;
      15: aload_0
      16: getfield      #9                  // Field uploadUrl:Ljava/lang/String;
      19: ifnonnull     30
      22: aload_0
      23: aload_0
      24: invokevirtual #13                 // Method getDefaultUploadUrl:()Ljava/lang/String;
      27: putfield      #9                  // Field uploadUrl:Ljava/lang/String;
      30: aload_0
      31: getfield      #9                  // Field uploadUrl:Ljava/lang/String;
      34: areturn

  public void setUploadUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field uploadUrl:Ljava/lang/String;
       5: return

  public java.lang.String getBrokerUploadUrl();
    Code:
       0: aload_0
       1: getfield      #8                  // Field brokerUploadUrl:Ljava/lang/String;
       4: areturn

  public void setBrokerUploadUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field brokerUploadUrl:Ljava/lang/String;
       5: return

  public java.lang.String getDefaultUploadUrl();
    Code:
       0: aload_0
       1: getfield      #3                  // Field defaultUploadUrl:Ljava/lang/String;
       4: areturn

  public void setDefaultUploadUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field defaultUploadUrl:Ljava/lang/String;
       5: return

  public org.apache.activemq.blob.BlobUploadStrategy getUploadStrategy();
    Code:
       0: aload_0
       1: getfield      #10                 // Field uploadStrategy:Lorg/apache/activemq/blob/BlobUploadStrategy;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #14                 // Method createUploadStrategy:()Lorg/apache/activemq/blob/BlobUploadStrategy;
      12: putfield      #10                 // Field uploadStrategy:Lorg/apache/activemq/blob/BlobUploadStrategy;
      15: aload_0
      16: getfield      #10                 // Field uploadStrategy:Lorg/apache/activemq/blob/BlobUploadStrategy;
      19: areturn

  public org.apache.activemq.blob.BlobDownloadStrategy getDownloadStrategy();
    Code:
       0: aload_0
       1: getfield      #11                 // Field downloadStrategy:Lorg/apache/activemq/blob/BlobDownloadStrategy;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #15                 // Method createDownloadStrategy:()Lorg/apache/activemq/blob/BlobDownloadStrategy;
      12: putfield      #11                 // Field downloadStrategy:Lorg/apache/activemq/blob/BlobDownloadStrategy;
      15: aload_0
      16: getfield      #11                 // Field downloadStrategy:Lorg/apache/activemq/blob/BlobDownloadStrategy;
      19: areturn

  public void setUploadStrategy(org.apache.activemq.blob.BlobUploadStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field uploadStrategy:Lorg/apache/activemq/blob/BlobUploadStrategy;
       5: return

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufferSize:I
       4: ireturn

  public void setBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field bufferSize:I
       5: return

  protected org.apache.activemq.blob.BlobUploadStrategy createUploadStrategy();
    Code:
       0: new           #16                 // class java/net/URL
       3: dup
       4: aload_0
       5: invokevirtual #17                 // Method getUploadUrl:()Ljava/lang/String;
       8: invokespecial #18                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
      11: astore_2
      12: aload_2
      13: invokevirtual #19                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      16: ldc           #20                 // String FTP
      18: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ifeq          36
      24: new           #22                 // class org/apache/activemq/blob/FTPBlobUploadStrategy
      27: dup
      28: aload_0
      29: invokespecial #23                 // Method org/apache/activemq/blob/FTPBlobUploadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      32: astore_1
      33: goto          69
      36: aload_2
      37: invokevirtual #19                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      40: ldc           #24                 // String FILE
      42: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      45: ifeq          60
      48: new           #25                 // class org/apache/activemq/blob/FileSystemBlobStrategy
      51: dup
      52: aload_0
      53: invokespecial #26                 // Method org/apache/activemq/blob/FileSystemBlobStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      56: astore_1
      57: goto          69
      60: new           #27                 // class org/apache/activemq/blob/DefaultBlobUploadStrategy
      63: dup
      64: aload_0
      65: invokespecial #28                 // Method org/apache/activemq/blob/DefaultBlobUploadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      68: astore_1
      69: goto          95
      72: astore_2
      73: new           #27                 // class org/apache/activemq/blob/DefaultBlobUploadStrategy
      76: dup
      77: aload_0
      78: invokespecial #28                 // Method org/apache/activemq/blob/DefaultBlobUploadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      81: astore_1
      82: goto          95
      85: astore_2
      86: new           #27                 // class org/apache/activemq/blob/DefaultBlobUploadStrategy
      89: dup
      90: aload_0
      91: invokespecial #28                 // Method org/apache/activemq/blob/DefaultBlobUploadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      94: astore_1
      95: aload_1
      96: areturn
    Exception table:
       from    to  target type
           0    69    72   Class java/net/MalformedURLException
           0    69    85   Class java/net/URISyntaxException

  protected org.apache.activemq.blob.BlobDownloadStrategy createDownloadStrategy();
    Code:
       0: new           #16                 // class java/net/URL
       3: dup
       4: aload_0
       5: invokevirtual #17                 // Method getUploadUrl:()Ljava/lang/String;
       8: invokespecial #18                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
      11: astore_2
      12: aload_2
      13: invokevirtual #19                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      16: ldc           #20                 // String FTP
      18: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ifeq          36
      24: new           #31                 // class org/apache/activemq/blob/FTPBlobDownloadStrategy
      27: dup
      28: aload_0
      29: invokespecial #32                 // Method org/apache/activemq/blob/FTPBlobDownloadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      32: astore_1
      33: goto          69
      36: aload_2
      37: invokevirtual #19                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      40: ldc           #24                 // String FILE
      42: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      45: ifeq          60
      48: new           #25                 // class org/apache/activemq/blob/FileSystemBlobStrategy
      51: dup
      52: aload_0
      53: invokespecial #26                 // Method org/apache/activemq/blob/FileSystemBlobStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      56: astore_1
      57: goto          69
      60: new           #33                 // class org/apache/activemq/blob/DefaultBlobDownloadStrategy
      63: dup
      64: aload_0
      65: invokespecial #34                 // Method org/apache/activemq/blob/DefaultBlobDownloadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      68: astore_1
      69: goto          95
      72: astore_2
      73: new           #33                 // class org/apache/activemq/blob/DefaultBlobDownloadStrategy
      76: dup
      77: aload_0
      78: invokespecial #34                 // Method org/apache/activemq/blob/DefaultBlobDownloadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      81: astore_1
      82: goto          95
      85: astore_2
      86: new           #33                 // class org/apache/activemq/blob/DefaultBlobDownloadStrategy
      89: dup
      90: aload_0
      91: invokespecial #34                 // Method org/apache/activemq/blob/DefaultBlobDownloadStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
      94: astore_1
      95: aload_1
      96: areturn
    Exception table:
       from    to  target type
           0    69    72   Class java/net/MalformedURLException
           0    69    85   Class java/net/URISyntaxException
}
