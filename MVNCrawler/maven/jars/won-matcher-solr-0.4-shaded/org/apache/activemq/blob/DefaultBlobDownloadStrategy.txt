Compiled from "DefaultBlobDownloadStrategy.java"
public class org.apache.activemq.blob.DefaultBlobDownloadStrategy extends org.apache.activemq.blob.DefaultStrategy implements org.apache.activemq.blob.BlobDownloadStrategy {
  public org.apache.activemq.blob.DefaultBlobDownloadStrategy(org.apache.activemq.blob.BlobTransferPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/blob/DefaultStrategy."<init>":(Lorg/apache/activemq/blob/BlobTransferPolicy;)V
       5: return

  public java.io.InputStream getInputStream(org.apache.activemq.command.ActiveMQBlobMessage) throws java.io.IOException, javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/apache/activemq/command/ActiveMQBlobMessage.getURL:()Ljava/net/URL;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_2
      12: invokevirtual #3                  // Method java/net/URL.openStream:()Ljava/io/InputStream;
      15: areturn

  public void deleteFile(org.apache.activemq.command.ActiveMQBlobMessage) throws java.io.IOException, javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method createMessageURL:(Lorg/apache/activemq/command/ActiveMQBlobMessage;)Ljava/net/URL;
       5: astore_2
       6: aload_2
       7: invokevirtual #5                  // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
      10: checkcast     #6                  // class java/net/HttpURLConnection
      13: astore_3
      14: aload_3
      15: ldc           #7                  // String DELETE
      17: invokevirtual #8                  // Method java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
      20: aload_3
      21: invokevirtual #9                  // Method java/net/HttpURLConnection.connect:()V
      24: aload_3
      25: invokevirtual #10                 // Method java/net/HttpURLConnection.disconnect:()V
      28: aload_0
      29: aload_3
      30: invokevirtual #11                 // Method java/net/HttpURLConnection.getResponseCode:()I
      33: invokevirtual #12                 // Method isSuccessfulCode:(I)Z
      36: ifne          81
      39: new           #13                 // class java/io/IOException
      42: dup
      43: new           #14                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #16                 // String DELETE was not successful:
      52: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #11                 // Method java/net/HttpURLConnection.getResponseCode:()I
      59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: ldc           #19                 // String
      64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_3
      68: invokevirtual #20                 // Method java/net/HttpURLConnection.getResponseMessage:()Ljava/lang/String;
      71: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #22                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return
}
