Compiled from "Usage.java"
public abstract class org.apache.activemq.usage.Usage<T extends org.apache.activemq.usage.Usage> implements org.apache.activemq.Service {
  private static final org.slf4j.Logger LOG;

  protected final java.util.concurrent.locks.ReentrantReadWriteLock usageLock;

  protected final java.util.concurrent.locks.Condition waitForSpaceCondition;

  protected int percentUsage;

  protected T parent;

  protected java.lang.String name;

  private org.apache.activemq.usage.UsageCapacity limiter;

  private int percentUsageMinDelta;

  private final java.util.List<org.apache.activemq.usage.UsageListener> listeners;

  private final boolean debug;

  private float usagePortion;

  private final java.util.List<T> children;

  private final java.util.List<java.lang.Runnable> callbacks;

  private int pollingTime;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private java.util.concurrent.ThreadPoolExecutor executor;

  public org.apache.activemq.usage.Usage(T, java.lang.String, float);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      20: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      23: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      26: putfield      #9                  // Field waitForSpaceCondition:Ljava/util/concurrent/locks/Condition;
      29: aload_0
      30: new           #10                 // class org/apache/activemq/usage/DefaultUsageCapacity
      33: dup
      34: invokespecial #11                 // Method org/apache/activemq/usage/DefaultUsageCapacity."<init>":()V
      37: putfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
      40: aload_0
      41: iconst_1
      42: putfield      #13                 // Field percentUsageMinDelta:I
      45: aload_0
      46: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList
      49: dup
      50: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      53: putfield      #2                  // Field listeners:Ljava/util/List;
      56: aload_0
      57: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      60: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      65: putfield      #18                 // Field debug:Z
      68: aload_0
      69: fconst_1
      70: putfield      #19                 // Field usagePortion:F
      73: aload_0
      74: new           #14                 // class java/util/concurrent/CopyOnWriteArrayList
      77: dup
      78: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      81: putfield      #20                 // Field children:Ljava/util/List;
      84: aload_0
      85: new           #21                 // class java/util/LinkedList
      88: dup
      89: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
      92: putfield      #1                  // Field callbacks:Ljava/util/List;
      95: aload_0
      96: bipush        100
      98: putfield      #23                 // Field pollingTime:I
     101: aload_0
     102: new           #24                 // class java/util/concurrent/atomic/AtomicBoolean
     105: dup
     106: invokespecial #25                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
     109: putfield      #26                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     112: aload_0
     113: aload_1
     114: putfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
     117: aload_0
     118: fload_3
     119: putfield      #19                 // Field usagePortion:F
     122: aload_1
     123: ifnull        171
     126: aload_0
     127: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
     130: aload_1
     131: invokevirtual #28                 // Method getLimit:()J
     134: l2d
     135: fload_3
     136: f2d
     137: dmul
     138: d2l
     139: invokeinterface #29,  3           // InterfaceMethod org/apache/activemq/usage/UsageCapacity.setLimit:(J)V
     144: new           #30                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     151: aload_1
     152: getfield      #32                 // Field name:Ljava/lang/String;
     155: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: ldc           #34                 // String :
     160: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: aload_2
     164: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     170: astore_2
     171: aload_0
     172: aload_2
     173: putfield      #32                 // Field name:Ljava/lang/String;
     176: return

  protected abstract long retrieveUsage();

  public void waitForSpace() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #36                 // Method waitForSpace:(J)Z
       5: pop
       6: return

  public boolean waitForSpace(long) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: bipush        100
       4: invokevirtual #37                 // Method waitForSpace:(JI)Z
       7: ireturn

  public boolean waitForSpace(long, int) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
       4: ifnull        21
       7: aload_0
       8: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      11: lload_1
      12: iload_3
      13: invokevirtual #37                 // Method waitForSpace:(JI)Z
      16: ifne          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      25: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      28: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      31: aload_0
      32: aload_0
      33: invokevirtual #39                 // Method caclPercentUsage:()I
      36: putfield      #40                 // Field percentUsage:I
      39: aload_0
      40: getfield      #40                 // Field percentUsage:I
      43: iload_3
      44: if_icmplt     122
      47: lload_1
      48: lconst_0
      49: lcmp
      50: ifle          61
      53: invokestatic  #41                 // Method java/lang/System.currentTimeMillis:()J
      56: lload_1
      57: ladd
      58: goto          64
      61: ldc2_w        #42                 // long 9223372036854775807l
      64: lstore        4
      66: lload         4
      68: lstore        6
      70: lload         6
      72: lconst_0
      73: lcmp
      74: ifle          122
      77: aload_0
      78: aload_0
      79: invokevirtual #39                 // Method caclPercentUsage:()I
      82: putfield      #40                 // Field percentUsage:I
      85: aload_0
      86: getfield      #40                 // Field percentUsage:I
      89: iload_3
      90: if_icmplt     122
      93: aload_0
      94: getfield      #9                  // Field waitForSpaceCondition:Ljava/util/concurrent/locks/Condition;
      97: aload_0
      98: getfield      #23                 // Field pollingTime:I
     101: i2l
     102: getstatic     #44                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     105: invokeinterface #45,  4           // InterfaceMethod java/util/concurrent/locks/Condition.await:(JLjava/util/concurrent/TimeUnit;)Z
     110: pop
     111: lload         4
     113: invokestatic  #41                 // Method java/lang/System.currentTimeMillis:()J
     116: lsub
     117: lstore        6
     119: goto          70
     122: aload_0
     123: getfield      #40                 // Field percentUsage:I
     126: iload_3
     127: if_icmpge     134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: istore        4
     137: aload_0
     138: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     141: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     144: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     147: iload         4
     149: ireturn
     150: astore        8
     152: aload_0
     153: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     156: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     159: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     162: aload         8
     164: athrow
    Exception table:
       from    to  target type
          31   137   150   any
         150   152   150   any

  public boolean isFull();
    Code:
       0: aload_0
       1: bipush        100
       3: invokevirtual #47                 // Method isFull:(I)Z
       6: ireturn

  public boolean isFull(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
       4: ifnull        20
       7: aload_0
       8: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      11: iload_1
      12: invokevirtual #47                 // Method isFull:(I)Z
      15: ifeq          20
      18: iconst_1
      19: ireturn
      20: aload_0
      21: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      24: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      27: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      30: aload_0
      31: aload_0
      32: invokevirtual #39                 // Method caclPercentUsage:()I
      35: putfield      #40                 // Field percentUsage:I
      38: aload_0
      39: getfield      #40                 // Field percentUsage:I
      42: iload_1
      43: if_icmplt     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: istore_2
      52: aload_0
      53: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      56: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      59: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      62: iload_2
      63: ireturn
      64: astore_3
      65: aload_0
      66: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      69: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      72: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      75: aload_3
      76: athrow
    Exception table:
       from    to  target type
          30    52    64   any
          64    65    64   any

  public void addUsageListener(org.apache.activemq.usage.UsageListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeUsageListener(org.apache.activemq.usage.UsageListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public long getLimit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
      14: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/usage/UsageCapacity.getLimit:()J
      19: lstore_1
      20: aload_0
      21: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      24: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      27: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      30: lload_1
      31: lreturn
      32: astore_3
      33: aload_0
      34: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      37: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      40: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      43: aload_3
      44: athrow
    Exception table:
       from    to  target type
          10    20    32   any
          32    33    32   any

  public void setLimit(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field percentUsageMinDelta:I
       4: ifge          17
       7: new           #54                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #55                 // String percentUsageMinDelta must be greater or equal to 0
      13: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      21: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      24: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      27: aload_0
      28: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
      31: lload_1
      32: invokeinterface #29,  3           // InterfaceMethod org/apache/activemq/usage/UsageCapacity.setLimit:(J)V
      37: aload_0
      38: fconst_0
      39: putfield      #19                 // Field usagePortion:F
      42: aload_0
      43: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      46: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      49: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      52: goto          68
      55: astore_3
      56: aload_0
      57: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      60: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      63: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      66: aload_3
      67: athrow
      68: aload_0
      69: invokevirtual #57                 // Method onLimitChange:()V
      72: return
    Exception table:
       from    to  target type
          27    42    55   any
          55    56    55   any

  protected void onLimitChange();
    Code:
       0: aload_0
       1: getfield      #19                 // Field usagePortion:F
       4: fconst_0
       5: fcmpl
       6: ifle          76
       9: aload_0
      10: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      13: ifnull        76
      16: aload_0
      17: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      20: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      23: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      26: aload_0
      27: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
      30: aload_0
      31: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      34: invokevirtual #28                 // Method getLimit:()J
      37: l2d
      38: aload_0
      39: getfield      #19                 // Field usagePortion:F
      42: f2d
      43: dmul
      44: d2l
      45: invokeinterface #29,  3           // InterfaceMethod org/apache/activemq/usage/UsageCapacity.setLimit:(J)V
      50: aload_0
      51: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      54: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      57: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      60: goto          76
      63: astore_1
      64: aload_0
      65: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      68: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      71: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      74: aload_1
      75: athrow
      76: aload_0
      77: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      80: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      83: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      86: aload_0
      87: aload_0
      88: invokevirtual #39                 // Method caclPercentUsage:()I
      91: invokevirtual #58                 // Method setPercentUsage:(I)V
      94: aload_0
      95: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      98: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     101: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     104: goto          120
     107: astore_2
     108: aload_0
     109: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     112: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     115: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     118: aload_2
     119: athrow
     120: aload_0
     121: getfield      #20                 // Field children:Ljava/util/List;
     124: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     129: astore_1
     130: aload_1
     131: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     136: ifeq          156
     139: aload_1
     140: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #62                 // class org/apache/activemq/usage/Usage
     148: astore_2
     149: aload_2
     150: invokevirtual #57                 // Method onLimitChange:()V
     153: goto          130
     156: return
    Exception table:
       from    to  target type
          26    50    63   any
          63    64    63   any
          86    94   107   any
         107   108   107   any

  public float getUsagePortion();
    Code:
       0: aload_0
       1: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #19                 // Field usagePortion:F
      14: fstore_1
      15: aload_0
      16: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      19: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      22: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      25: fload_1
      26: freturn
      27: astore_2
      28: aload_0
      29: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      32: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      35: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      38: aload_2
      39: athrow
    Exception table:
       from    to  target type
          10    15    27   any
          27    28    27   any

  public void setUsagePortion(float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_0
      11: fload_1
      12: putfield      #19                 // Field usagePortion:F
      15: aload_0
      16: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      19: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      22: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      25: goto          41
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      33: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      36: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      39: aload_2
      40: athrow
      41: aload_0
      42: invokevirtual #57                 // Method onLimitChange:()V
      45: return
    Exception table:
       from    to  target type
          10    15    28   any
          28    29    28   any

  public int getPercentUsage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #40                 // Field percentUsage:I
      14: istore_1
      15: aload_0
      16: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      19: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      22: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      25: iload_1
      26: ireturn
      27: astore_2
      28: aload_0
      29: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      32: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      35: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      38: aload_2
      39: athrow
    Exception table:
       from    to  target type
          10    15    27   any
          27    28    27   any

  public int getPercentUsageMinDelta();
    Code:
       0: aload_0
       1: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #13                 // Field percentUsageMinDelta:I
      14: istore_1
      15: aload_0
      16: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      19: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      22: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      25: iload_1
      26: ireturn
      27: astore_2
      28: aload_0
      29: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      32: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      35: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      38: aload_2
      39: athrow
    Exception table:
       from    to  target type
          10    15    27   any
          27    28    27   any

  public void setPercentUsageMinDelta(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #54                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #63                 // String percentUsageMinDelta must be greater than 0
      11: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      19: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      22: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      25: aload_0
      26: iload_1
      27: putfield      #13                 // Field percentUsageMinDelta:I
      30: aload_0
      31: aload_0
      32: invokevirtual #39                 // Method caclPercentUsage:()I
      35: invokevirtual #58                 // Method setPercentUsage:(I)V
      38: aload_0
      39: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      42: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      45: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      48: goto          64
      51: astore_2
      52: aload_0
      53: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      56: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      59: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      62: aload_2
      63: athrow
      64: return
    Exception table:
       from    to  target type
          25    38    51   any
          51    52    51   any

  public long getUsage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: invokevirtual #64                 // Method retrieveUsage:()J
      14: lstore_1
      15: aload_0
      16: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      19: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      22: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      25: lload_1
      26: lreturn
      27: astore_3
      28: aload_0
      29: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      32: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      35: invokevirtual #53                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      38: aload_3
      39: athrow
    Exception table:
       from    to  target type
          10    15    27   any
          27    28    27   any

  protected void setPercentUsage(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_0
      11: getfield      #40                 // Field percentUsage:I
      14: istore_2
      15: aload_0
      16: iload_1
      17: putfield      #40                 // Field percentUsage:I
      20: iload_2
      21: iload_1
      22: if_icmpeq     31
      25: aload_0
      26: iload_2
      27: iload_1
      28: invokespecial #65                 // Method fireEvent:(II)V
      31: aload_0
      32: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      35: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      38: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      41: goto          57
      44: astore_3
      45: aload_0
      46: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      49: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      52: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      55: aload_3
      56: athrow
      57: return
    Exception table:
       from    to  target type
          10    31    44   any
          44    45    44   any

  protected int caclPercentUsage();
    Code:
       0: aload_0
       1: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
       4: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/usage/UsageCapacity.getLimit:()J
       9: lconst_0
      10: lcmp
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #64                 // Method retrieveUsage:()J
      20: ldc2_w        #66                 // long 100l
      23: lmul
      24: aload_0
      25: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
      28: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/usage/UsageCapacity.getLimit:()J
      33: ldiv
      34: aload_0
      35: getfield      #13                 // Field percentUsageMinDelta:I
      38: i2l
      39: ldiv
      40: aload_0
      41: getfield      #13                 // Field percentUsageMinDelta:I
      44: i2l
      45: lmul
      46: l2i
      47: ireturn

  private void fireEvent(int, int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field debug:Z
       4: ifeq          55
       7: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      10: new           #30                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_0
      18: invokevirtual #68                 // Method getName:()Ljava/lang/String;
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #69                 // String : usage change from:
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: iload_1
      30: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #71                 // String % of available memory, to:
      35: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_2
      39: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #72                 // String % of available memory
      44: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #73,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      55: aload_0
      56: getfield      #26                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      59: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      62: ifeq          203
      65: iload_1
      66: bipush        100
      68: if_icmplt     149
      71: iload_2
      72: bipush        100
      74: if_icmpge     149
      77: aload_0
      78: getfield      #9                  // Field waitForSpaceCondition:Ljava/util/concurrent/locks/Condition;
      81: invokeinterface #75,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      86: aload_0
      87: getfield      #1                  // Field callbacks:Ljava/util/List;
      90: invokeinterface #76,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      95: ifne          149
      98: aload_0
      99: getfield      #1                  // Field callbacks:Ljava/util/List;
     102: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     107: astore_3
     108: aload_3
     109: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     114: ifeq          140
     117: aload_3
     118: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #77                 // class java/lang/Runnable
     126: astore        4
     128: aload_0
     129: invokevirtual #78                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     132: aload         4
     134: invokevirtual #79                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     137: goto          108
     140: aload_0
     141: getfield      #1                  // Field callbacks:Ljava/util/List;
     144: invokeinterface #80,  1           // InterfaceMethod java/util/List.clear:()V
     149: aload_0
     150: getfield      #2                  // Field listeners:Ljava/util/List;
     153: invokeinterface #76,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     158: ifne          203
     161: new           #81                 // class org/apache/activemq/usage/Usage$1
     164: dup
     165: aload_0
     166: iload_1
     167: iload_2
     168: invokespecial #82                 // Method org/apache/activemq/usage/Usage$1."<init>":(Lorg/apache/activemq/usage/Usage;II)V
     171: astore_3
     172: aload_0
     173: getfield      #26                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
     176: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     179: ifeq          193
     182: aload_0
     183: invokevirtual #78                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     186: aload_3
     187: invokevirtual #79                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     190: goto          203
     193: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
     196: ldc           #83                 // String Not notifying memory usage change to listeners on shutdown
     198: invokeinterface #84,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     203: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #32                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #85                 // String Usage(
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #68                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #86                 // String ) percentUsage=
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #40                 // Field percentUsage:I
      28: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #87                 // String %, usage=
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #64                 // Method retrieveUsage:()J
      40: invokevirtual #88                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #89                 // String , limit=
      45: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
      52: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/usage/UsageCapacity.getLimit:()J
      57: invokevirtual #88                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      60: ldc           #90                 // String , percentUsageMinDelta=
      62: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #13                 // Field percentUsageMinDelta:I
      69: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: ldc           #91                 // String %
      74: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      81: ifnull        112
      84: new           #30                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #92                 // String ;Parent:
      93: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
     100: invokevirtual #93                 // Method toString:()Ljava/lang/String;
     103: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: goto          114
     112: ldc           #94                 // String
     114: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #26                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #95                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          122
      12: aload_0
      13: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      16: ifnull        86
      19: aload_0
      20: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      23: aload_0
      24: invokevirtual #96                 // Method addChild:(Lorg/apache/activemq/usage/Usage;)V
      27: aload_0
      28: invokevirtual #28                 // Method getLimit:()J
      31: aload_0
      32: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      35: invokevirtual #28                 // Method getLimit:()J
      38: lcmp
      39: ifle          86
      42: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      45: ldc           #97                 // String Usage({}) limit={} should be smaller than its parent limit={}
      47: iconst_3
      48: anewarray     #98                 // class java/lang/Object
      51: dup
      52: iconst_0
      53: aload_0
      54: invokevirtual #68                 // Method getName:()Ljava/lang/String;
      57: aastore
      58: dup
      59: iconst_1
      60: aload_0
      61: invokevirtual #28                 // Method getLimit:()J
      64: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      67: aastore
      68: dup
      69: iconst_2
      70: aload_0
      71: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      74: invokevirtual #28                 // Method getLimit:()J
      77: invokestatic  #99                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      80: aastore
      81: invokeinterface #100,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      86: aload_0
      87: getfield      #20                 // Field children:Ljava/util/List;
      90: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      95: astore_1
      96: aload_1
      97: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          122
     105: aload_1
     106: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #62                 // class org/apache/activemq/usage/Usage
     114: astore_2
     115: aload_2
     116: invokevirtual #101                // Method start:()V
     119: goto          96
     122: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #26                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #95                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          155
      12: aload_0
      13: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      16: ifnull        27
      19: aload_0
      20: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      23: aload_0
      24: invokevirtual #102                // Method removeChild:(Lorg/apache/activemq/usage/Usage;)V
      27: aload_0
      28: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      34: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      37: aload_0
      38: getfield      #9                  // Field waitForSpaceCondition:Ljava/util/concurrent/locks/Condition;
      41: invokeinterface #75,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      46: aload_0
      47: getfield      #1                  // Field callbacks:Ljava/util/List;
      50: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: astore_1
      56: aload_1
      57: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          84
      65: aload_1
      66: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #77                 // class java/lang/Runnable
      74: astore_2
      75: aload_2
      76: invokeinterface #103,  1          // InterfaceMethod java/lang/Runnable.run:()V
      81: goto          56
      84: aload_0
      85: getfield      #1                  // Field callbacks:Ljava/util/List;
      88: invokeinterface #80,  1           // InterfaceMethod java/util/List.clear:()V
      93: aload_0
      94: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      97: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     100: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     103: goto          119
     106: astore_3
     107: aload_0
     108: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     111: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     114: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     117: aload_3
     118: athrow
     119: aload_0
     120: getfield      #20                 // Field children:Ljava/util/List;
     123: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     128: astore_1
     129: aload_1
     130: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     135: ifeq          155
     138: aload_1
     139: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     144: checkcast     #62                 // class org/apache/activemq/usage/Usage
     147: astore_2
     148: aload_2
     149: invokevirtual #104                // Method stop:()V
     152: goto          129
     155: return
    Exception table:
       from    to  target type
          37    93   106   any
         106   107   106   any

  protected void addChild(T);
    Code:
       0: aload_0
       1: getfield      #20                 // Field children:Ljava/util/List;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #26                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      18: ifeq          25
      21: aload_1
      22: invokevirtual #101                // Method start:()V
      25: return

  protected void removeChild(T);
    Code:
       0: aload_0
       1: getfield      #20                 // Field children:Ljava/util/List;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean notifyCallbackWhenNotFull(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
       4: ifnull        30
       7: new           #105                // class org/apache/activemq/usage/Usage$2
      10: dup
      11: aload_0
      12: aload_1
      13: invokespecial #106                // Method org/apache/activemq/usage/Usage$2."<init>":(Lorg/apache/activemq/usage/Usage;Ljava/lang/Runnable;)V
      16: astore_2
      17: aload_0
      18: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
      21: aload_2
      22: invokevirtual #107                // Method notifyCallbackWhenNotFull:(Ljava/lang/Runnable;)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: aload_0
      31: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      34: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      37: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      40: aload_0
      41: getfield      #40                 // Field percentUsage:I
      44: bipush        100
      46: if_icmplt     74
      49: aload_0
      50: getfield      #1                  // Field callbacks:Ljava/util/List;
      53: aload_1
      54: invokeinterface #48,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: iconst_1
      61: istore_2
      62: aload_0
      63: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      66: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      69: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      72: iload_2
      73: ireturn
      74: iconst_0
      75: istore_2
      76: aload_0
      77: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      80: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      83: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      86: iload_2
      87: ireturn
      88: astore_3
      89: aload_0
      90: getfield      #6                  // Field usageLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      93: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      96: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      99: aload_3
     100: athrow
    Exception table:
       from    to  target type
          40    62    88   any
          74    76    88   any
          88    89    88   any

  public org.apache.activemq.usage.UsageCapacity getLimiter();
    Code:
       0: aload_0
       1: getfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
       4: areturn

  public void setLimiter(org.apache.activemq.usage.UsageCapacity);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field limiter:Lorg/apache/activemq/usage/UsageCapacity;
       5: return

  public int getPollingTime();
    Code:
       0: aload_0
       1: getfield      #23                 // Field pollingTime:I
       4: ireturn

  public void setPollingTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field pollingTime:I
       5: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field name:Ljava/lang/String;
       5: return

  public T getParent();
    Code:
       0: aload_0
       1: getfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
       4: areturn

  public void setParent(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field parent:Lorg/apache/activemq/usage/Usage;
       5: return

  public void setExecutor(java.util.concurrent.ThreadPoolExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       5: return

  public java.util.concurrent.ThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #108                // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #26                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  static java.util.List access$000(org.apache.activemq.usage.Usage);
    Code:
       0: aload_0
       1: getfield      #2                  // Field listeners:Ljava/util/List;
       4: areturn

  static java.util.List access$100(org.apache.activemq.usage.Usage);
    Code:
       0: aload_0
       1: getfield      #1                  // Field callbacks:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc_w         #62                 // class org/apache/activemq/usage/Usage
       3: invokestatic  #109                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
