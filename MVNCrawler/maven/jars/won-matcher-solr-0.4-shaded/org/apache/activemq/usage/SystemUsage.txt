Compiled from "SystemUsage.java"
public class org.apache.activemq.usage.SystemUsage implements org.apache.activemq.Service {
  private org.apache.activemq.usage.SystemUsage parent;

  private java.lang.String name;

  private org.apache.activemq.usage.MemoryUsage memoryUsage;

  private org.apache.activemq.usage.StoreUsage storeUsage;

  private org.apache.activemq.usage.TempUsage tempUsage;

  private java.util.concurrent.ThreadPoolExecutor executor;

  private org.apache.activemq.usage.JobSchedulerUsage jobSchedulerUsage;

  private java.lang.String checkLimitsLogLevel;

  private boolean sendFailIfNoSpaceExplicitySet;

  private boolean sendFailIfNoSpace;

  private boolean sendFailIfNoSpaceAfterTimeoutExplicitySet;

  private long sendFailIfNoSpaceAfterTimeout;

  private final java.util.List<org.apache.activemq.usage.SystemUsage> children;

  public org.apache.activemq.usage.SystemUsage();
    Code:
       0: aload_0
       1: ldc           #1                  // String default
       3: aconst_null
       4: aconst_null
       5: aconst_null
       6: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lorg/apache/activemq/store/PersistenceAdapter;Lorg/apache/activemq/store/PListStore;Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;)V
       9: return

  public org.apache.activemq.usage.SystemUsage(java.lang.String, org.apache.activemq.store.PersistenceAdapter, org.apache.activemq.store.PListStore, org.apache.activemq.broker.scheduler.JobSchedulerStore);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String warn
       7: putfield      #5                  // Field checkLimitsLogLevel:Ljava/lang/String;
      10: aload_0
      11: lconst_0
      12: putfield      #6                  // Field sendFailIfNoSpaceAfterTimeout:J
      15: aload_0
      16: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      23: putfield      #9                  // Field children:Ljava/util/List;
      26: aload_0
      27: aconst_null
      28: putfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      31: aload_0
      32: aload_1
      33: putfield      #11                 // Field name:Ljava/lang/String;
      36: aload_0
      37: new           #12                 // class org/apache/activemq/usage/MemoryUsage
      40: dup
      41: new           #13                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      48: aload_1
      49: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #16                 // String :memory
      54: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #18                 // Method org/apache/activemq/usage/MemoryUsage."<init>":(Ljava/lang/String;)V
      63: putfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      66: aload_0
      67: new           #20                 // class org/apache/activemq/usage/StoreUsage
      70: dup
      71: new           #13                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      78: aload_1
      79: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #21                 // String :store
      84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: aload_2
      91: invokespecial #22                 // Method org/apache/activemq/usage/StoreUsage."<init>":(Ljava/lang/String;Lorg/apache/activemq/store/PersistenceAdapter;)V
      94: putfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      97: aload_0
      98: new           #24                 // class org/apache/activemq/usage/TempUsage
     101: dup
     102: new           #13                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     109: aload_1
     110: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #25                 // String :temp
     115: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: aload_3
     122: invokespecial #26                 // Method org/apache/activemq/usage/TempUsage."<init>":(Ljava/lang/String;Lorg/apache/activemq/store/PListStore;)V
     125: putfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
     128: aload_0
     129: new           #28                 // class org/apache/activemq/usage/JobSchedulerUsage
     132: dup
     133: new           #13                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     140: aload_1
     141: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #29                 // String :jobScheduler
     146: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: aload         4
     154: invokespecial #30                 // Method org/apache/activemq/usage/JobSchedulerUsage."<init>":(Ljava/lang/String;Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;)V
     157: putfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
     160: aload_0
     161: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     164: aload_0
     165: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     168: invokevirtual #33                 // Method org/apache/activemq/usage/MemoryUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
     171: aload_0
     172: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
     175: aload_0
     176: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     179: invokevirtual #34                 // Method org/apache/activemq/usage/StoreUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
     182: aload_0
     183: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
     186: aload_0
     187: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     190: invokevirtual #35                 // Method org/apache/activemq/usage/TempUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
     193: return

  public org.apache.activemq.usage.SystemUsage(org.apache.activemq.usage.SystemUsage, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String warn
       7: putfield      #5                  // Field checkLimitsLogLevel:Ljava/lang/String;
      10: aload_0
      11: lconst_0
      12: putfield      #6                  // Field sendFailIfNoSpaceAfterTimeout:J
      15: aload_0
      16: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      23: putfield      #9                  // Field children:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: putfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      31: aload_0
      32: aload_1
      33: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      36: putfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      39: aload_0
      40: aload_2
      41: putfield      #11                 // Field name:Ljava/lang/String;
      44: aload_0
      45: new           #12                 // class org/apache/activemq/usage/MemoryUsage
      48: dup
      49: aload_1
      50: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      53: new           #13                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      60: aload_2
      61: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #16                 // String :memory
      66: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #37                 // Method org/apache/activemq/usage/MemoryUsage."<init>":(Lorg/apache/activemq/usage/MemoryUsage;Ljava/lang/String;)V
      75: putfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      78: aload_0
      79: new           #20                 // class org/apache/activemq/usage/StoreUsage
      82: dup
      83: aload_1
      84: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      87: new           #13                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      94: aload_2
      95: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #21                 // String :store
     100: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #38                 // Method org/apache/activemq/usage/StoreUsage."<init>":(Lorg/apache/activemq/usage/StoreUsage;Ljava/lang/String;)V
     109: putfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
     112: aload_0
     113: new           #24                 // class org/apache/activemq/usage/TempUsage
     116: dup
     117: aload_1
     118: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
     121: new           #13                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     128: aload_2
     129: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #25                 // String :temp
     134: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokespecial #39                 // Method org/apache/activemq/usage/TempUsage."<init>":(Lorg/apache/activemq/usage/TempUsage;Ljava/lang/String;)V
     143: putfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
     146: aload_0
     147: new           #28                 // class org/apache/activemq/usage/JobSchedulerUsage
     150: dup
     151: aload_1
     152: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
     155: new           #13                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     162: aload_2
     163: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: ldc           #29                 // String :jobScheduler
     168: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: invokespecial #40                 // Method org/apache/activemq/usage/JobSchedulerUsage."<init>":(Lorg/apache/activemq/usage/JobSchedulerUsage;Ljava/lang/String;)V
     177: putfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
     180: aload_0
     181: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
     184: aload_0
     185: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     188: invokevirtual #33                 // Method org/apache/activemq/usage/MemoryUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
     191: aload_0
     192: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
     195: aload_0
     196: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     199: invokevirtual #34                 // Method org/apache/activemq/usage/StoreUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
     202: aload_0
     203: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
     206: aload_0
     207: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
     210: invokevirtual #35                 // Method org/apache/activemq/usage/TempUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
     213: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.usage.MemoryUsage getMemoryUsage();
    Code:
       0: aload_0
       1: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
       4: areturn

  public org.apache.activemq.usage.StoreUsage getStoreUsage();
    Code:
       0: aload_0
       1: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
       4: areturn

  public org.apache.activemq.usage.TempUsage getTempUsage();
    Code:
       0: aload_0
       1: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
       4: areturn

  public org.apache.activemq.usage.JobSchedulerUsage getJobSchedulerUsage();
    Code:
       0: aload_0
       1: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #41                 // String UsageManager(
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #42                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #43                 // String )
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnull        15
       7: aload_0
       8: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      11: aload_0
      12: invokespecial #44                 // Method addChild:(Lorg/apache/activemq/usage/SystemUsage;)V
      15: aload_0
      16: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      19: invokevirtual #45                 // Method org/apache/activemq/usage/MemoryUsage.start:()V
      22: aload_0
      23: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      26: invokevirtual #46                 // Method org/apache/activemq/usage/StoreUsage.start:()V
      29: aload_0
      30: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      33: invokevirtual #47                 // Method org/apache/activemq/usage/TempUsage.start:()V
      36: aload_0
      37: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      40: invokevirtual #48                 // Method org/apache/activemq/usage/JobSchedulerUsage.start:()V
      43: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
       4: ifnull        15
       7: aload_0
       8: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      11: aload_0
      12: invokespecial #49                 // Method removeChild:(Lorg/apache/activemq/usage/SystemUsage;)V
      15: aload_0
      16: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      19: invokevirtual #50                 // Method org/apache/activemq/usage/MemoryUsage.stop:()V
      22: aload_0
      23: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      26: invokevirtual #51                 // Method org/apache/activemq/usage/StoreUsage.stop:()V
      29: aload_0
      30: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      33: invokevirtual #52                 // Method org/apache/activemq/usage/TempUsage.stop:()V
      36: aload_0
      37: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      40: invokevirtual #53                 // Method org/apache/activemq/usage/JobSchedulerUsage.stop:()V
      43: return

  public void setSendFailIfNoSpace(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #54                 // Field sendFailIfNoSpaceExplicitySet:Z
       5: aload_0
       6: iload_1
       7: putfield      #55                 // Field sendFailIfNoSpace:Z
      10: return

  public boolean isSendFailIfNoSpace();
    Code:
       0: aload_0
       1: getfield      #54                 // Field sendFailIfNoSpaceExplicitySet:Z
       4: ifne          14
       7: aload_0
       8: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      11: ifnonnull     19
      14: aload_0
      15: getfield      #55                 // Field sendFailIfNoSpace:Z
      18: ireturn
      19: aload_0
      20: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      23: invokevirtual #56                 // Method isSendFailIfNoSpace:()Z
      26: ireturn

  private void addChild(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: getfield      #9                  // Field children:Ljava/util/List;
       4: aload_1
       5: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private void removeChild(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: getfield      #9                  // Field children:Ljava/util/List;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.apache.activemq.usage.SystemUsage getParent();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
       4: areturn

  public void setParent(org.apache.activemq.usage.SystemUsage);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
       5: return

  public boolean isSendFailIfNoSpaceExplicitySet();
    Code:
       0: aload_0
       1: getfield      #54                 // Field sendFailIfNoSpaceExplicitySet:Z
       4: ireturn

  public void setSendFailIfNoSpaceExplicitySet(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #54                 // Field sendFailIfNoSpaceExplicitySet:Z
       5: return

  public long getSendFailIfNoSpaceAfterTimeout();
    Code:
       0: aload_0
       1: getfield      #59                 // Field sendFailIfNoSpaceAfterTimeoutExplicitySet:Z
       4: ifne          14
       7: aload_0
       8: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      11: ifnonnull     19
      14: aload_0
      15: getfield      #6                  // Field sendFailIfNoSpaceAfterTimeout:J
      18: lreturn
      19: aload_0
      20: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      23: invokevirtual #60                 // Method getSendFailIfNoSpaceAfterTimeout:()J
      26: lreturn

  public void setSendFailIfNoSpaceAfterTimeout(long);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #59                 // Field sendFailIfNoSpaceAfterTimeoutExplicitySet:Z
       5: aload_0
       6: lload_1
       7: putfield      #6                  // Field sendFailIfNoSpaceAfterTimeout:J
      10: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field name:Ljava/lang/String;
       5: aload_0
       6: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
       9: new           #13                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_1
      17: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #16                 // String :memory
      22: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokevirtual #61                 // Method org/apache/activemq/usage/MemoryUsage.setName:(Ljava/lang/String;)V
      31: aload_0
      32: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      35: new           #13                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_1
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #21                 // String :store
      48: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokevirtual #62                 // Method org/apache/activemq/usage/StoreUsage.setName:(Ljava/lang/String;)V
      57: aload_0
      58: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      61: new           #13                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      68: aload_1
      69: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #25                 // String :temp
      74: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokevirtual #63                 // Method org/apache/activemq/usage/TempUsage.setName:(Ljava/lang/String;)V
      83: aload_0
      84: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      87: new           #13                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      94: aload_1
      95: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #29                 // String :jobScheduler
     100: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokevirtual #64                 // Method org/apache/activemq/usage/JobSchedulerUsage.setName:(Ljava/lang/String;)V
     109: return

  public void setMemoryUsage(org.apache.activemq.usage.MemoryUsage);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method org/apache/activemq/usage/MemoryUsage.getName:()Ljava/lang/String;
       4: ifnonnull     18
       7: aload_1
       8: aload_0
       9: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      12: invokevirtual #65                 // Method org/apache/activemq/usage/MemoryUsage.getName:()Ljava/lang/String;
      15: invokevirtual #61                 // Method org/apache/activemq/usage/MemoryUsage.setName:(Ljava/lang/String;)V
      18: aload_0
      19: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      22: ifnull        36
      25: aload_1
      26: aload_0
      27: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      30: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      33: invokevirtual #66                 // Method org/apache/activemq/usage/MemoryUsage.setParent:(Lorg/apache/activemq/usage/Usage;)V
      36: aload_0
      37: aload_1
      38: putfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      41: aload_0
      42: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      45: aload_0
      46: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      49: invokevirtual #33                 // Method org/apache/activemq/usage/MemoryUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      52: return

  public void setStoreUsage(org.apache.activemq.usage.StoreUsage);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method org/apache/activemq/usage/StoreUsage.getStore:()Lorg/apache/activemq/store/PersistenceAdapter;
       4: ifnonnull     18
       7: aload_1
       8: aload_0
       9: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      12: invokevirtual #67                 // Method org/apache/activemq/usage/StoreUsage.getStore:()Lorg/apache/activemq/store/PersistenceAdapter;
      15: invokevirtual #68                 // Method org/apache/activemq/usage/StoreUsage.setStore:(Lorg/apache/activemq/store/PersistenceAdapter;)V
      18: aload_1
      19: invokevirtual #69                 // Method org/apache/activemq/usage/StoreUsage.getName:()Ljava/lang/String;
      22: ifnonnull     36
      25: aload_1
      26: aload_0
      27: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      30: invokevirtual #69                 // Method org/apache/activemq/usage/StoreUsage.getName:()Ljava/lang/String;
      33: invokevirtual #62                 // Method org/apache/activemq/usage/StoreUsage.setName:(Ljava/lang/String;)V
      36: aload_0
      37: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      40: ifnull        54
      43: aload_1
      44: aload_0
      45: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      48: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      51: invokevirtual #70                 // Method org/apache/activemq/usage/StoreUsage.setParent:(Lorg/apache/activemq/usage/Usage;)V
      54: aload_0
      55: aload_1
      56: putfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      59: aload_0
      60: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      63: aload_0
      64: getfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      67: invokevirtual #34                 // Method org/apache/activemq/usage/StoreUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      70: return

  public void setTempUsage(org.apache.activemq.usage.TempUsage);
    Code:
       0: aload_1
       1: invokevirtual #71                 // Method org/apache/activemq/usage/TempUsage.getStore:()Lorg/apache/activemq/store/PListStore;
       4: ifnonnull     18
       7: aload_1
       8: aload_0
       9: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      12: invokevirtual #71                 // Method org/apache/activemq/usage/TempUsage.getStore:()Lorg/apache/activemq/store/PListStore;
      15: invokevirtual #72                 // Method org/apache/activemq/usage/TempUsage.setStore:(Lorg/apache/activemq/store/PListStore;)V
      18: aload_1
      19: invokevirtual #73                 // Method org/apache/activemq/usage/TempUsage.getName:()Ljava/lang/String;
      22: ifnonnull     36
      25: aload_1
      26: aload_0
      27: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      30: invokevirtual #73                 // Method org/apache/activemq/usage/TempUsage.getName:()Ljava/lang/String;
      33: invokevirtual #63                 // Method org/apache/activemq/usage/TempUsage.setName:(Ljava/lang/String;)V
      36: aload_0
      37: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      40: ifnull        54
      43: aload_1
      44: aload_0
      45: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      48: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      51: invokevirtual #74                 // Method org/apache/activemq/usage/TempUsage.setParent:(Lorg/apache/activemq/usage/Usage;)V
      54: aload_0
      55: aload_1
      56: putfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      59: aload_0
      60: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      63: aload_0
      64: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      67: invokevirtual #35                 // Method org/apache/activemq/usage/TempUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      70: return

  public void setJobSchedulerUsage(org.apache.activemq.usage.JobSchedulerUsage);
    Code:
       0: aload_1
       1: invokevirtual #75                 // Method org/apache/activemq/usage/JobSchedulerUsage.getStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
       4: ifnonnull     18
       7: aload_1
       8: aload_0
       9: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      12: invokevirtual #75                 // Method org/apache/activemq/usage/JobSchedulerUsage.getStore:()Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;
      15: invokevirtual #76                 // Method org/apache/activemq/usage/JobSchedulerUsage.setStore:(Lorg/apache/activemq/broker/scheduler/JobSchedulerStore;)V
      18: aload_1
      19: invokevirtual #77                 // Method org/apache/activemq/usage/JobSchedulerUsage.getName:()Ljava/lang/String;
      22: ifnonnull     36
      25: aload_1
      26: aload_0
      27: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      30: invokevirtual #77                 // Method org/apache/activemq/usage/JobSchedulerUsage.getName:()Ljava/lang/String;
      33: invokevirtual #64                 // Method org/apache/activemq/usage/JobSchedulerUsage.setName:(Ljava/lang/String;)V
      36: aload_0
      37: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      40: ifnull        54
      43: aload_1
      44: aload_0
      45: getfield      #10                 // Field parent:Lorg/apache/activemq/usage/SystemUsage;
      48: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      51: invokevirtual #78                 // Method org/apache/activemq/usage/JobSchedulerUsage.setParent:(Lorg/apache/activemq/usage/Usage;)V
      54: aload_0
      55: aload_1
      56: putfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      59: aload_0
      60: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      63: aload_0
      64: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      67: invokevirtual #79                 // Method org/apache/activemq/usage/JobSchedulerUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      70: return

  public java.util.concurrent.ThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  public void setExecutor(java.util.concurrent.ThreadPoolExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       5: aload_0
       6: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
       9: ifnull        23
      12: aload_0
      13: getfield      #19                 // Field memoryUsage:Lorg/apache/activemq/usage/MemoryUsage;
      16: aload_0
      17: getfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      20: invokevirtual #33                 // Method org/apache/activemq/usage/MemoryUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      23: aload_0
      24: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      27: ifnull        41
      30: aload_0
      31: getfield      #23                 // Field storeUsage:Lorg/apache/activemq/usage/StoreUsage;
      34: aload_0
      35: getfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      38: invokevirtual #34                 // Method org/apache/activemq/usage/StoreUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      41: aload_0
      42: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      45: ifnull        59
      48: aload_0
      49: getfield      #27                 // Field tempUsage:Lorg/apache/activemq/usage/TempUsage;
      52: aload_0
      53: getfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      56: invokevirtual #35                 // Method org/apache/activemq/usage/TempUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      59: aload_0
      60: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      63: ifnull        77
      66: aload_0
      67: getfield      #31                 // Field jobSchedulerUsage:Lorg/apache/activemq/usage/JobSchedulerUsage;
      70: aload_0
      71: getfield      #36                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      74: invokevirtual #79                 // Method org/apache/activemq/usage/JobSchedulerUsage.setExecutor:(Ljava/util/concurrent/ThreadPoolExecutor;)V
      77: return

  public java.lang.String getCheckLimitsLogLevel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field checkLimitsLogLevel:Ljava/lang/String;
       4: areturn

  public void setCheckLimitsLogLevel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field checkLimitsLogLevel:Ljava/lang/String;
       5: return
}
