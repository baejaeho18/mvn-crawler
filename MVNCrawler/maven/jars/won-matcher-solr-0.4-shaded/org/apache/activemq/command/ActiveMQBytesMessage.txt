Compiled from "ActiveMQBytesMessage.java"
public class org.apache.activemq.command.ActiveMQBytesMessage extends org.apache.activemq.command.ActiveMQMessage implements javax.jms.BytesMessage {
  public static final byte DATA_STRUCTURE_TYPE;

  protected transient java.io.DataOutputStream dataOut;

  protected transient org.apache.activemq.util.ByteArrayOutputStream bytesOut;

  protected transient java.io.DataInputStream dataIn;

  protected transient int length;

  public org.apache.activemq.command.ActiveMQBytesMessage();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
       4: return

  public org.apache.activemq.command.Message copy();
    Code:
       0: new           #2                  // class org/apache/activemq/command/ActiveMQBytesMessage
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #4                  // Method copy:(Lorg/apache/activemq/command/ActiveMQBytesMessage;)V
      13: aload_1
      14: areturn

  private void copy(org.apache.activemq.command.ActiveMQBytesMessage);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method storeContent:()V
       4: aload_0
       5: aload_1
       6: invokespecial #6                  // Method org/apache/activemq/command/ActiveMQMessage.copy:(Lorg/apache/activemq/command/ActiveMQMessage;)V
       9: aload_1
      10: aconst_null
      11: putfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      14: aload_1
      15: aconst_null
      16: putfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      19: aload_1
      20: aconst_null
      21: putfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      24: return

  public void onSend() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/apache/activemq/command/ActiveMQMessage.onSend:()V
       4: aload_0
       5: invokevirtual #5                  // Method storeContent:()V
       8: return

  public void storeContent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       4: ifnull        152
       7: aload_0
       8: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      11: invokevirtual #11                 // Method java/io/DataOutputStream.close:()V
      14: aload_0
      15: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      18: invokevirtual #12                 // Method org/apache/activemq/util/ByteArrayOutputStream.toByteSequence:()Lorg/apache/activemq/util/ByteSequence;
      21: astore_1
      22: aload_0
      23: aload_1
      24: invokevirtual #13                 // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
      27: aload_0
      28: invokevirtual #14                 // Method getConnection:()Lorg/apache/activemq/ActiveMQConnection;
      31: astore_2
      32: aload_2
      33: ifnull        47
      36: aload_2
      37: invokevirtual #15                 // Method org/apache/activemq/ActiveMQConnection.isUseCompression:()Z
      40: ifeq          47
      43: aload_0
      44: invokevirtual #16                 // Method doCompress:()V
      47: aload_0
      48: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      51: ifnull        66
      54: aload_0
      55: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      58: invokevirtual #17                 // Method org/apache/activemq/util/ByteArrayOutputStream.close:()V
      61: aload_0
      62: aconst_null
      63: putfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      66: aload_0
      67: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      70: ifnull        85
      73: aload_0
      74: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      77: invokevirtual #11                 // Method java/io/DataOutputStream.close:()V
      80: aload_0
      81: aconst_null
      82: putfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      85: goto          152
      88: astore_1
      89: goto          152
      92: astore_1
      93: new           #19                 // class java/lang/RuntimeException
      96: dup
      97: aload_1
      98: invokevirtual #20                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     101: aload_1
     102: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: athrow
     106: astore_3
     107: aload_0
     108: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
     111: ifnull        126
     114: aload_0
     115: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
     118: invokevirtual #17                 // Method org/apache/activemq/util/ByteArrayOutputStream.close:()V
     121: aload_0
     122: aconst_null
     123: putfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
     126: aload_0
     127: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
     130: ifnull        145
     133: aload_0
     134: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
     137: invokevirtual #11                 // Method java/io/DataOutputStream.close:()V
     140: aload_0
     141: aconst_null
     142: putfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
     145: goto          150
     148: astore        4
     150: aload_3
     151: athrow
     152: return
    Exception table:
       from    to  target type
          47    85    88   Class java/io/IOException
           7    47    92   Class java/io/IOException
           7    47   106   any
         107   145   148   Class java/io/IOException
          92   107   106   any

  public byte getDataStructureType();
    Code:
       0: bipush        24
       2: ireturn

  public java.lang.String getJMSXMimeType();
    Code:
       0: ldc           #22                 // String jms/bytes-message
       2: areturn

  public void clearBody() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/apache/activemq/command/ActiveMQMessage.clearBody:()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       9: aload_0
      10: aconst_null
      11: putfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      14: aload_0
      15: aconst_null
      16: putfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      19: return

  public long getBodyLength() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #25                 // Field length:I
       8: i2l
       9: lreturn

  public boolean readBoolean() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #26                 // Method java/io/DataInputStream.readBoolean:()Z
      11: ireturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public byte readByte() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #30                 // Method java/io/DataInputStream.readByte:()B
      11: ireturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public int readUnsignedByte() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #31                 // Method java/io/DataInputStream.readUnsignedByte:()I
      11: ireturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public short readShort() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #32                 // Method java/io/DataInputStream.readShort:()S
      11: ireturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public int readUnsignedShort() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #33                 // Method java/io/DataInputStream.readUnsignedShort:()I
      11: ireturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public char readChar() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #34                 // Method java/io/DataInputStream.readChar:()C
      11: ireturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public int readInt() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #35                 // Method java/io/DataInputStream.readInt:()I
      11: ireturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public long readLong() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #36                 // Method java/io/DataInputStream.readLong:()J
      11: lreturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public float readFloat() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #37                 // Method java/io/DataInputStream.readFloat:()F
      11: freturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public double readDouble() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #38                 // Method java/io/DataInputStream.readDouble:()D
      11: dreturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public java.lang.String readUTF() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: invokevirtual #39                 // Method java/io/DataInputStream.readUTF:()Ljava/lang/String;
      11: areturn
      12: astore_1
      13: aload_1
      14: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      17: athrow
      18: astore_1
      19: aload_1
      20: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      23: athrow
    Exception table:
       from    to  target type
           4    11    12   Class java/io/EOFException
           4    11    18   Class java/io/IOException

  public int readBytes(byte[]) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: arraylength
       4: invokevirtual #40                 // Method readBytes:([BI)I
       7: ireturn

  public int readBytes(byte[], int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initializeReading:()V
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_2
       8: if_icmpge     41
      11: aload_0
      12: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      15: aload_1
      16: iload_3
      17: iload_2
      18: iload_3
      19: isub
      20: invokevirtual #41                 // Method java/io/DataInputStream.read:([BII)I
      23: istore        4
      25: iload         4
      27: ifge          33
      30: goto          41
      33: iload_3
      34: iload         4
      36: iadd
      37: istore_3
      38: goto          6
      41: iload_3
      42: ifne          51
      45: iload_2
      46: ifle          51
      49: iconst_m1
      50: istore_3
      51: iload_3
      52: ireturn
      53: astore_3
      54: aload_3
      55: invokestatic  #28                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageEOFException:(Ljava/lang/Exception;)Ljavax/jms/MessageEOFException;
      58: athrow
      59: astore_3
      60: aload_3
      61: invokestatic  #29                 // Method org/apache/activemq/util/JMSExceptionSupport.createMessageFormatException:(Ljava/lang/Exception;)Ljavax/jms/MessageFormatException;
      64: athrow
    Exception table:
       from    to  target type
           4    52    53   Class java/io/EOFException
           4    52    59   Class java/io/IOException

  public void writeBoolean(boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: iload_1
       9: invokevirtual #43                 // Method java/io/DataOutputStream.writeBoolean:(Z)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeByte(byte) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: iload_1
       9: invokevirtual #45                 // Method java/io/DataOutputStream.writeByte:(I)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeShort(short) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: iload_1
       9: invokevirtual #46                 // Method java/io/DataOutputStream.writeShort:(I)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeChar(char) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: iload_1
       9: invokevirtual #47                 // Method java/io/DataOutputStream.writeChar:(I)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeInt(int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: iload_1
       9: invokevirtual #48                 // Method java/io/DataOutputStream.writeInt:(I)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeLong(long) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: lload_1
       9: invokevirtual #49                 // Method java/io/DataOutputStream.writeLong:(J)V
      12: goto          21
      15: astore_3
      16: aload_3
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeFloat(float) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: fload_1
       9: invokevirtual #50                 // Method java/io/DataOutputStream.writeFloat:(F)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeDouble(double) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: dload_1
       9: invokevirtual #51                 // Method java/io/DataOutputStream.writeDouble:(D)V
      12: goto          21
      15: astore_3
      16: aload_3
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeUTF(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: aload_1
       9: invokevirtual #52                 // Method java/io/DataOutputStream.writeUTF:(Ljava/lang/String;)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeBytes(byte[]) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: aload_1
       9: invokevirtual #53                 // Method java/io/DataOutputStream.write:([B)V
      12: goto          21
      15: astore_2
      16: aload_2
      17: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           4    12    15   Class java/io/IOException

  public void writeBytes(byte[], int, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #54                 // Method java/io/DataOutputStream.write:([BII)V
      14: goto          25
      17: astore        4
      19: aload         4
      21: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      24: athrow
      25: return
    Exception table:
       from    to  target type
           4    14    17   Class java/io/IOException

  public void writeObject(java.lang.Object) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #55                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #56                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokespecial #42                 // Method initializeWriting:()V
      16: aload_1
      17: instanceof    #57                 // class java/lang/Boolean
      20: ifeq          37
      23: aload_0
      24: aload_1
      25: checkcast     #57                 // class java/lang/Boolean
      28: invokevirtual #58                 // Method java/lang/Boolean.booleanValue:()Z
      31: invokevirtual #59                 // Method writeBoolean:(Z)V
      34: goto          253
      37: aload_1
      38: instanceof    #60                 // class java/lang/Character
      41: ifeq          58
      44: aload_0
      45: aload_1
      46: checkcast     #60                 // class java/lang/Character
      49: invokevirtual #61                 // Method java/lang/Character.charValue:()C
      52: invokevirtual #62                 // Method writeChar:(C)V
      55: goto          253
      58: aload_1
      59: instanceof    #63                 // class java/lang/Byte
      62: ifeq          79
      65: aload_0
      66: aload_1
      67: checkcast     #63                 // class java/lang/Byte
      70: invokevirtual #64                 // Method java/lang/Byte.byteValue:()B
      73: invokevirtual #65                 // Method writeByte:(B)V
      76: goto          253
      79: aload_1
      80: instanceof    #66                 // class java/lang/Short
      83: ifeq          100
      86: aload_0
      87: aload_1
      88: checkcast     #66                 // class java/lang/Short
      91: invokevirtual #67                 // Method java/lang/Short.shortValue:()S
      94: invokevirtual #68                 // Method writeShort:(S)V
      97: goto          253
     100: aload_1
     101: instanceof    #69                 // class java/lang/Integer
     104: ifeq          121
     107: aload_0
     108: aload_1
     109: checkcast     #69                 // class java/lang/Integer
     112: invokevirtual #70                 // Method java/lang/Integer.intValue:()I
     115: invokevirtual #71                 // Method writeInt:(I)V
     118: goto          253
     121: aload_1
     122: instanceof    #72                 // class java/lang/Long
     125: ifeq          142
     128: aload_0
     129: aload_1
     130: checkcast     #72                 // class java/lang/Long
     133: invokevirtual #73                 // Method java/lang/Long.longValue:()J
     136: invokevirtual #74                 // Method writeLong:(J)V
     139: goto          253
     142: aload_1
     143: instanceof    #75                 // class java/lang/Float
     146: ifeq          163
     149: aload_0
     150: aload_1
     151: checkcast     #75                 // class java/lang/Float
     154: invokevirtual #76                 // Method java/lang/Float.floatValue:()F
     157: invokevirtual #77                 // Method writeFloat:(F)V
     160: goto          253
     163: aload_1
     164: instanceof    #78                 // class java/lang/Double
     167: ifeq          184
     170: aload_0
     171: aload_1
     172: checkcast     #78                 // class java/lang/Double
     175: invokevirtual #79                 // Method java/lang/Double.doubleValue:()D
     178: invokevirtual #80                 // Method writeDouble:(D)V
     181: goto          253
     184: aload_1
     185: instanceof    #81                 // class java/lang/String
     188: ifeq          202
     191: aload_0
     192: aload_1
     193: invokevirtual #82                 // Method java/lang/Object.toString:()Ljava/lang/String;
     196: invokevirtual #83                 // Method writeUTF:(Ljava/lang/String;)V
     199: goto          253
     202: aload_1
     203: instanceof    #84                 // class "[B"
     206: ifeq          223
     209: aload_0
     210: aload_1
     211: checkcast     #84                 // class "[B"
     214: checkcast     #84                 // class "[B"
     217: invokevirtual #85                 // Method writeBytes:([B)V
     220: goto          253
     223: new           #86                 // class javax/jms/MessageFormatException
     226: dup
     227: new           #87                 // class java/lang/StringBuilder
     230: dup
     231: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
     234: ldc           #89                 // String Cannot write non-primitive type:
     236: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: aload_1
     240: invokevirtual #91                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     243: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     246: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: invokespecial #94                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     252: athrow
     253: return

  public void reset() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method storeContent:()V
       4: aload_0
       5: iconst_1
       6: invokevirtual #95                 // Method setReadOnlyBody:(Z)V
       9: aload_0
      10: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      13: ifnull        28
      16: aload_0
      17: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      20: invokevirtual #17                 // Method org/apache/activemq/util/ByteArrayOutputStream.close:()V
      23: aload_0
      24: aconst_null
      25: putfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      28: aload_0
      29: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      32: ifnull        47
      35: aload_0
      36: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      39: invokevirtual #96                 // Method java/io/DataInputStream.close:()V
      42: aload_0
      43: aconst_null
      44: putfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      47: aload_0
      48: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      51: ifnull        66
      54: aload_0
      55: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      58: invokevirtual #11                 // Method java/io/DataOutputStream.close:()V
      61: aload_0
      62: aconst_null
      63: putfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      66: goto          75
      69: astore_1
      70: aload_1
      71: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      74: athrow
      75: return
    Exception table:
       from    to  target type
           9    66    69   Class java/io/IOException

  private void initializeWriting() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method checkReadOnlyBody:()V
       4: aload_0
       5: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
       8: ifnonnull     39
      11: aload_0
      12: new           #98                 // class org/apache/activemq/util/ByteArrayOutputStream
      15: dup
      16: invokespecial #99                 // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":()V
      19: putfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      22: aload_0
      23: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      26: astore_1
      27: aload_0
      28: new           #100                // class java/io/DataOutputStream
      31: dup
      32: aload_1
      33: invokespecial #101                // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      36: putfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      39: aload_0
      40: invokespecial #102                // Method restoreOldContent:()V
      43: return

  private void restoreOldContent() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #103                // Field content:Lorg/apache/activemq/util/ByteSequence;
       4: ifnull        78
       7: aload_0
       8: getfield      #103                // Field content:Lorg/apache/activemq/util/ByteSequence;
      11: getfield      #104                // Field org/apache/activemq/util/ByteSequence.length:I
      14: ifle          78
      17: aload_0
      18: getfield      #103                // Field content:Lorg/apache/activemq/util/ByteSequence;
      21: astore_1
      22: aload_0
      23: getfield      #105                // Field compressed:Z
      26: ifeq          45
      29: new           #106                // class org/apache/activemq/util/ByteSequence
      32: dup
      33: aload_0
      34: aload_0
      35: getfield      #103                // Field content:Lorg/apache/activemq/util/ByteSequence;
      38: invokevirtual #107                // Method decompress:(Lorg/apache/activemq/util/ByteSequence;)[B
      41: invokespecial #108                // Method org/apache/activemq/util/ByteSequence."<init>":([B)V
      44: astore_1
      45: aload_0
      46: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      49: aload_1
      50: invokevirtual #109                // Method org/apache/activemq/util/ByteSequence.getData:()[B
      53: aload_1
      54: invokevirtual #110                // Method org/apache/activemq/util/ByteSequence.getOffset:()I
      57: aload_1
      58: invokevirtual #111                // Method org/apache/activemq/util/ByteSequence.getLength:()I
      61: invokevirtual #54                 // Method java/io/DataOutputStream.write:([BII)V
      64: aload_0
      65: aconst_null
      66: putfield      #103                // Field content:Lorg/apache/activemq/util/ByteSequence;
      69: goto          78
      72: astore_1
      73: aload_1
      74: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      77: athrow
      78: return
    Exception table:
       from    to  target type
          17    69    72   Class java/io/IOException

  protected void checkWriteOnlyBody() throws javax.jms.MessageNotReadableException;
    Code:
       0: aload_0
       1: getfield      #112                // Field readOnlyBody:Z
       4: ifne          17
       7: new           #113                // class javax/jms/MessageNotReadableException
      10: dup
      11: ldc           #114                // String Message body is write-only
      13: invokespecial #115                // Method javax/jms/MessageNotReadableException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private void initializeReading() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #116                // Method checkWriteOnlyBody:()V
       4: aload_0
       5: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
       8: ifnonnull     101
      11: aload_0
      12: invokevirtual #117                // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
      15: astore_1
      16: aload_1
      17: ifnonnull     33
      20: new           #106                // class org/apache/activemq/util/ByteSequence
      23: dup
      24: iconst_0
      25: newarray       byte
      27: iconst_0
      28: iconst_0
      29: invokespecial #118                // Method org/apache/activemq/util/ByteSequence."<init>":([BII)V
      32: astore_1
      33: new           #119                // class org/apache/activemq/util/ByteArrayInputStream
      36: dup
      37: aload_1
      38: invokespecial #120                // Method org/apache/activemq/util/ByteArrayInputStream."<init>":(Lorg/apache/activemq/util/ByteSequence;)V
      41: astore_2
      42: aload_0
      43: invokevirtual #121                // Method isCompressed:()Z
      46: ifeq          72
      49: aload_1
      50: getfield      #104                // Field org/apache/activemq/util/ByteSequence.length:I
      53: ifeq          80
      56: new           #119                // class org/apache/activemq/util/ByteArrayInputStream
      59: dup
      60: aload_0
      61: aload_1
      62: invokevirtual #107                // Method decompress:(Lorg/apache/activemq/util/ByteSequence;)[B
      65: invokespecial #122                // Method org/apache/activemq/util/ByteArrayInputStream."<init>":([B)V
      68: astore_2
      69: goto          80
      72: aload_0
      73: aload_1
      74: invokevirtual #111                // Method org/apache/activemq/util/ByteSequence.getLength:()I
      77: putfield      #25                 // Field length:I
      80: aload_0
      81: new           #123                // class java/io/DataInputStream
      84: dup
      85: aload_2
      86: invokespecial #124                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      89: putfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      92: goto          101
      95: astore_1
      96: aload_1
      97: invokestatic  #44                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
     100: athrow
     101: return
    Exception table:
       from    to  target type
          11    92    95   Class java/io/IOException

  protected byte[] decompress(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: new           #125                // class java/util/zip/Inflater
       3: dup
       4: invokespecial #126                // Method java/util/zip/Inflater."<init>":()V
       7: astore_2
       8: new           #98                 // class org/apache/activemq/util/ByteArrayOutputStream
      11: dup
      12: invokespecial #99                 // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":()V
      15: astore_3
      16: aload_0
      17: aload_1
      18: invokestatic  #127                // Method org/apache/activemq/util/ByteSequenceData.readIntBig:(Lorg/apache/activemq/util/ByteSequence;)I
      21: putfield      #25                 // Field length:I
      24: aload_1
      25: iconst_0
      26: putfield      #128                // Field org/apache/activemq/util/ByteSequence.offset:I
      29: aload_1
      30: invokevirtual #109                // Method org/apache/activemq/util/ByteSequence.getData:()[B
      33: iconst_4
      34: aload_1
      35: invokevirtual #111                // Method org/apache/activemq/util/ByteSequence.getLength:()I
      38: invokestatic  #129                // Method java/util/Arrays.copyOfRange:([BII)[B
      41: astore        4
      43: aload_2
      44: aload         4
      46: invokevirtual #130                // Method java/util/zip/Inflater.setInput:([B)V
      49: aload_0
      50: getfield      #25                 // Field length:I
      53: newarray       byte
      55: astore        5
      57: aload_2
      58: aload         5
      60: invokevirtual #131                // Method java/util/zip/Inflater.inflate:([B)I
      63: istore        6
      65: aload_3
      66: aload         5
      68: iconst_0
      69: iload         6
      71: invokevirtual #132                // Method org/apache/activemq/util/ByteArrayOutputStream.write:([BII)V
      74: aload_3
      75: invokevirtual #133                // Method org/apache/activemq/util/ByteArrayOutputStream.toByteArray:()[B
      78: astore        7
      80: aload_2
      81: invokevirtual #134                // Method java/util/zip/Inflater.end:()V
      84: aload_3
      85: invokevirtual #17                 // Method org/apache/activemq/util/ByteArrayOutputStream.close:()V
      88: aload         7
      90: areturn
      91: astore        4
      93: new           #18                 // class java/io/IOException
      96: dup
      97: aload         4
      99: invokespecial #136                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     102: athrow
     103: astore        8
     105: aload_2
     106: invokevirtual #134                // Method java/util/zip/Inflater.end:()V
     109: aload_3
     110: invokevirtual #17                 // Method org/apache/activemq/util/ByteArrayOutputStream.close:()V
     113: aload         8
     115: athrow
    Exception table:
       from    to  target type
          16    80    91   Class java/lang/Exception
          16    80   103   any
          91   105   103   any

  public void setObjectProperty(java.lang.String, java.lang.Object) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #137                // Method org/apache/activemq/command/ActiveMQMessage.setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public java.lang.String toString();
    Code:
       0: new           #87                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #138                // Method org/apache/activemq/command/ActiveMQMessage.toString:()Ljava/lang/String;
      11: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #139                // String  ActiveMQBytesMessage{
      16: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #140                // String bytesOut =
      21: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #8                  // Field bytesOut:Lorg/apache/activemq/util/ByteArrayOutputStream;
      28: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #141                // String , dataOut =
      33: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #7                  // Field dataOut:Ljava/io/DataOutputStream;
      40: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #142                // String , dataIn =
      45: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #9                  // Field dataIn:Ljava/io/DataInputStream;
      52: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #143                // String  }
      57: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  protected void doCompress() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #105                // Field compressed:Z
       5: aload_0
       6: invokevirtual #117                // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
       9: astore_1
      10: aload_1
      11: ifnull        139
      14: aload_1
      15: invokevirtual #111                // Method org/apache/activemq/util/ByteSequence.getLength:()I
      18: istore_2
      19: new           #98                 // class org/apache/activemq/util/ByteArrayOutputStream
      22: dup
      23: invokespecial #99                 // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":()V
      26: astore_3
      27: aload_3
      28: iconst_4
      29: newarray       byte
      31: invokevirtual #144                // Method org/apache/activemq/util/ByteArrayOutputStream.write:([B)V
      34: new           #145                // class java/util/zip/Deflater
      37: dup
      38: invokespecial #146                // Method java/util/zip/Deflater."<init>":()V
      41: astore        4
      43: aload         4
      45: aload_1
      46: getfield      #147                // Field org/apache/activemq/util/ByteSequence.data:[B
      49: invokevirtual #148                // Method java/util/zip/Deflater.setInput:([B)V
      52: aload         4
      54: invokevirtual #149                // Method java/util/zip/Deflater.finish:()V
      57: sipush        1024
      60: newarray       byte
      62: astore        5
      64: aload         4
      66: invokevirtual #150                // Method java/util/zip/Deflater.finished:()Z
      69: ifne          93
      72: aload         4
      74: aload         5
      76: invokevirtual #151                // Method java/util/zip/Deflater.deflate:([B)I
      79: istore        6
      81: aload_3
      82: aload         5
      84: iconst_0
      85: iload         6
      87: invokevirtual #132                // Method org/apache/activemq/util/ByteArrayOutputStream.write:([BII)V
      90: goto          64
      93: aload_3
      94: invokevirtual #12                 // Method org/apache/activemq/util/ByteArrayOutputStream.toByteSequence:()Lorg/apache/activemq/util/ByteSequence;
      97: astore_1
      98: aload_1
      99: iload_2
     100: invokestatic  #152                // Method org/apache/activemq/util/ByteSequenceData.writeIntBig:(Lorg/apache/activemq/util/ByteSequence;I)V
     103: aload_1
     104: iconst_0
     105: putfield      #128                // Field org/apache/activemq/util/ByteSequence.offset:I
     108: aload_0
     109: aload_1
     110: invokevirtual #13                 // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
     113: aload         4
     115: invokevirtual #153                // Method java/util/zip/Deflater.end:()V
     118: aload_3
     119: invokevirtual #17                 // Method org/apache/activemq/util/ByteArrayOutputStream.close:()V
     122: goto          139
     125: astore        7
     127: aload         4
     129: invokevirtual #153                // Method java/util/zip/Deflater.end:()V
     132: aload_3
     133: invokevirtual #17                 // Method org/apache/activemq/util/ByteArrayOutputStream.close:()V
     136: aload         7
     138: athrow
     139: return
    Exception table:
       from    to  target type
          43   113   125   any
         125   127   125   any
}
