Compiled from "MessageAck.java"
public class org.apache.activemq.command.MessageAck extends org.apache.activemq.command.BaseCommand {
  public static final byte DATA_STRUCTURE_TYPE;

  public static final byte DELIVERED_ACK_TYPE;

  public static final byte STANDARD_ACK_TYPE;

  public static final byte POSION_ACK_TYPE;

  public static final byte REDELIVERED_ACK_TYPE;

  public static final byte INDIVIDUAL_ACK_TYPE;

  public static final byte UNMATCHED_ACK_TYPE;

  public static final byte EXPIRED_ACK_TYPE;

  protected byte ackType;

  protected org.apache.activemq.command.ConsumerId consumerId;

  protected org.apache.activemq.command.MessageId firstMessageId;

  protected org.apache.activemq.command.MessageId lastMessageId;

  protected org.apache.activemq.command.ActiveMQDestination destination;

  protected org.apache.activemq.command.TransactionId transactionId;

  protected int messageCount;

  protected java.lang.Throwable poisonCause;

  protected transient java.lang.String consumerKey;

  public org.apache.activemq.command.MessageAck();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: return

  public org.apache.activemq.command.MessageAck(org.apache.activemq.command.MessageDispatch, byte, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #2                  // Field ackType:B
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method org/apache/activemq/command/MessageDispatch.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      14: putfield      #4                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      17: aload_0
      18: aload_1
      19: invokevirtual #5                  // Method org/apache/activemq/command/MessageDispatch.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      22: putfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      25: aload_0
      26: aload_1
      27: invokevirtual #7                  // Method org/apache/activemq/command/MessageDispatch.getMessage:()Lorg/apache/activemq/command/Message;
      30: invokevirtual #8                  // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      33: putfield      #9                  // Field lastMessageId:Lorg/apache/activemq/command/MessageId;
      36: aload_0
      37: iload_3
      38: putfield      #10                 // Field messageCount:I
      41: return

  public org.apache.activemq.command.MessageAck(org.apache.activemq.command.Message, byte, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #2                  // Field ackType:B
       9: aload_0
      10: aload_1
      11: invokevirtual #11                 // Method org/apache/activemq/command/Message.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      14: putfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      17: aload_0
      18: aload_1
      19: invokevirtual #8                  // Method org/apache/activemq/command/Message.getMessageId:()Lorg/apache/activemq/command/MessageId;
      22: putfield      #9                  // Field lastMessageId:Lorg/apache/activemq/command/MessageId;
      25: aload_0
      26: iload_3
      27: putfield      #10                 // Field messageCount:I
      30: return

  public void copy(org.apache.activemq.command.MessageAck);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/apache/activemq/command/BaseCommand.copy:(Lorg/apache/activemq/command/BaseCommand;)V
       5: aload_1
       6: aload_0
       7: getfield      #13                 // Field firstMessageId:Lorg/apache/activemq/command/MessageId;
      10: putfield      #13                 // Field firstMessageId:Lorg/apache/activemq/command/MessageId;
      13: aload_1
      14: aload_0
      15: getfield      #9                  // Field lastMessageId:Lorg/apache/activemq/command/MessageId;
      18: putfield      #9                  // Field lastMessageId:Lorg/apache/activemq/command/MessageId;
      21: aload_1
      22: aload_0
      23: getfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      26: putfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      29: aload_1
      30: aload_0
      31: getfield      #14                 // Field transactionId:Lorg/apache/activemq/command/TransactionId;
      34: putfield      #14                 // Field transactionId:Lorg/apache/activemq/command/TransactionId;
      37: aload_1
      38: aload_0
      39: getfield      #2                  // Field ackType:B
      42: putfield      #2                  // Field ackType:B
      45: aload_1
      46: aload_0
      47: getfield      #4                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      50: putfield      #4                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      53: return

  public byte getDataStructureType();
    Code:
       0: bipush        22
       2: ireturn

  public boolean isMessageAck();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isPoisonAck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isStandardAck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDeliveredAck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isRedeliveredAck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isIndividualAck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isUnmatchedAck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: iconst_5
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isExpiredAck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public org.apache.activemq.command.ActiveMQDestination getDestination();
    Code:
       0: aload_0
       1: getfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public org.apache.activemq.command.TransactionId getTransactionId();
    Code:
       0: aload_0
       1: getfield      #14                 // Field transactionId:Lorg/apache/activemq/command/TransactionId;
       4: areturn

  public void setTransactionId(org.apache.activemq.command.TransactionId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field transactionId:Lorg/apache/activemq/command/TransactionId;
       5: return

  public boolean isInTransaction();
    Code:
       0: aload_0
       1: getfield      #14                 // Field transactionId:Lorg/apache/activemq/command/TransactionId;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.activemq.command.ConsumerId getConsumerId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
       4: areturn

  public void setConsumerId(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
       5: return

  public byte getAckType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ackType:B
       4: ireturn

  public void setAckType(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ackType:B
       5: return

  public org.apache.activemq.command.MessageId getFirstMessageId();
    Code:
       0: aload_0
       1: getfield      #13                 // Field firstMessageId:Lorg/apache/activemq/command/MessageId;
       4: areturn

  public void setFirstMessageId(org.apache.activemq.command.MessageId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field firstMessageId:Lorg/apache/activemq/command/MessageId;
       5: return

  public org.apache.activemq.command.MessageId getLastMessageId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lastMessageId:Lorg/apache/activemq/command/MessageId;
       4: areturn

  public void setLastMessageId(org.apache.activemq.command.MessageId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field lastMessageId:Lorg/apache/activemq/command/MessageId;
       5: return

  public int getMessageCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field messageCount:I
       4: ireturn

  public void setMessageCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field messageCount:I
       5: return

  public java.lang.Throwable getPoisonCause();
    Code:
       0: aload_0
       1: getfield      #15                 // Field poisonCause:Ljava/lang/Throwable;
       4: areturn

  public void setPoisonCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field poisonCause:Ljava/lang/Throwable;
       5: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #16,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processMessageAck:(Lorg/apache/activemq/command/MessageAck;)Lorg/apache/activemq/command/Response;
       7: areturn

  public void setMessageID(org.apache.activemq.command.MessageId);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setFirstMessageId:(Lorg/apache/activemq/command/MessageId;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #18                 // Method setLastMessageId:(Lorg/apache/activemq/command/MessageId;)V
      10: aload_0
      11: iconst_1
      12: invokevirtual #19                 // Method setMessageCount:(I)V
      15: return
}
