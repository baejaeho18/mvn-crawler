Compiled from "WireFormatInfo.java"
public class org.apache.activemq.command.WireFormatInfo implements org.apache.activemq.command.Command,org.apache.activemq.command.MarshallAware {
  public static final byte DATA_STRUCTURE_TYPE;

  private static final int MAX_PROPERTY_SIZE;

  private static final byte[] MAGIC;

  protected byte[] magic;

  protected int version;

  protected org.apache.activemq.util.ByteSequence marshalledProperties;

  protected transient java.util.Map<java.lang.String, java.lang.Object> properties;

  private transient org.apache.activemq.command.Endpoint from;

  private transient org.apache.activemq.command.Endpoint to;

  public org.apache.activemq.command.WireFormatInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field MAGIC:[B
       8: putfield      #3                  // Field magic:[B
      11: return

  public byte getDataStructureType();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isWireFormatInfo();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isMarshallAware();
    Code:
       0: iconst_1
       1: ireturn

  public byte[] getMagic();
    Code:
       0: aload_0
       1: getfield      #3                  // Field magic:[B
       4: areturn

  public void setMagic(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field magic:[B
       5: return

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #4                  // Field version:I
       4: ireturn

  public void setVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field version:I
       5: return

  public org.apache.activemq.util.ByteSequence getMarshalledProperties();
    Code:
       0: aload_0
       1: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
       4: areturn

  public void setMarshalledProperties(org.apache.activemq.util.ByteSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
       5: return

  public org.apache.activemq.command.Endpoint getFrom();
    Code:
       0: aload_0
       1: getfield      #6                  // Field from:Lorg/apache/activemq/command/Endpoint;
       4: areturn

  public void setFrom(org.apache.activemq.command.Endpoint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field from:Lorg/apache/activemq/command/Endpoint;
       5: return

  public org.apache.activemq.command.Endpoint getTo();
    Code:
       0: aload_0
       1: getfield      #7                  // Field to:Lorg/apache/activemq/command/Endpoint;
       4: areturn

  public void setTo(org.apache.activemq.command.Endpoint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field to:Lorg/apache/activemq/command/Endpoint;
       5: return

  public java.lang.Object getProperty(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field properties:Ljava/util/Map;
       4: ifnonnull     28
       7: aload_0
       8: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: aload_0
      18: aload_0
      19: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      22: invokespecial #9                  // Method unmarsallProperties:(Lorg/apache/activemq/util/ByteSequence;)Ljava/util/Map;
      25: putfield      #8                  // Field properties:Ljava/util/Map;
      28: aload_0
      29: getfield      #8                  // Field properties:Ljava/util/Map;
      32: aload_1
      33: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getProperties() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field properties:Ljava/util/Map;
       4: ifnonnull     30
       7: aload_0
       8: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      11: ifnonnull     18
      14: getstatic     #11                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
      17: areturn
      18: aload_0
      19: aload_0
      20: aload_0
      21: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      24: invokespecial #9                  // Method unmarsallProperties:(Lorg/apache/activemq/util/ByteSequence;)Ljava/util/Map;
      27: putfield      #8                  // Field properties:Ljava/util/Map;
      30: aload_0
      31: getfield      #8                  // Field properties:Ljava/util/Map;
      34: invokestatic  #12                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      37: areturn

  public void clearProperties();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
       5: aload_0
       6: aconst_null
       7: putfield      #8                  // Field properties:Ljava/util/Map;
      10: return

  public void setProperty(java.lang.String, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method lazyCreateProperties:()V
       4: aload_0
       5: getfield      #8                  // Field properties:Ljava/util/Map;
       8: aload_1
       9: aload_2
      10: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  protected void lazyCreateProperties() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field properties:Ljava/util/Map;
       4: ifnonnull     45
       7: aload_0
       8: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      11: ifnonnull     28
      14: aload_0
      15: new           #15                 // class java/util/HashMap
      18: dup
      19: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      22: putfield      #8                  // Field properties:Ljava/util/Map;
      25: goto          45
      28: aload_0
      29: aload_0
      30: aload_0
      31: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      34: invokespecial #9                  // Method unmarsallProperties:(Lorg/apache/activemq/util/ByteSequence;)Ljava/util/Map;
      37: putfield      #8                  // Field properties:Ljava/util/Map;
      40: aload_0
      41: aconst_null
      42: putfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      45: return

  private java.util.Map<java.lang.String, java.lang.Object> unmarsallProperties(org.apache.activemq.util.ByteSequence) throws java.io.IOException;
    Code:
       0: new           #17                 // class java/io/DataInputStream
       3: dup
       4: new           #18                 // class org/apache/activemq/util/ByteArrayInputStream
       7: dup
       8: aload_1
       9: invokespecial #19                 // Method org/apache/activemq/util/ByteArrayInputStream."<init>":(Lorg/apache/activemq/util/ByteSequence;)V
      12: invokespecial #20                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      15: sipush        4096
      18: invokestatic  #21                 // Method org/apache/activemq/util/MarshallingSupport.unmarshalPrimitiveMap:(Ljava/io/DataInputStream;I)Ljava/util/Map;
      21: areturn

  public void beforeMarshall(org.apache.activemq.wireformat.WireFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
       4: ifnonnull     51
       7: aload_0
       8: getfield      #8                  // Field properties:Ljava/util/Map;
      11: ifnull        51
      14: new           #22                 // class org/apache/activemq/util/ByteArrayOutputStream
      17: dup
      18: invokespecial #23                 // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":()V
      21: astore_2
      22: new           #24                 // class java/io/DataOutputStream
      25: dup
      26: aload_2
      27: invokespecial #25                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      30: astore_3
      31: aload_0
      32: getfield      #8                  // Field properties:Ljava/util/Map;
      35: aload_3
      36: invokestatic  #26                 // Method org/apache/activemq/util/MarshallingSupport.marshalPrimitiveMap:(Ljava/util/Map;Ljava/io/DataOutputStream;)V
      39: aload_3
      40: invokevirtual #27                 // Method java/io/DataOutputStream.close:()V
      43: aload_0
      44: aload_2
      45: invokevirtual #28                 // Method org/apache/activemq/util/ByteArrayOutputStream.toByteSequence:()Lorg/apache/activemq/util/ByteSequence;
      48: putfield      #5                  // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      51: return

  public void afterMarshall(org.apache.activemq.wireformat.WireFormat) throws java.io.IOException;
    Code:
       0: return

  public void beforeUnmarshall(org.apache.activemq.wireformat.WireFormat) throws java.io.IOException;
    Code:
       0: return

  public void afterUnmarshall(org.apache.activemq.wireformat.WireFormat) throws java.io.IOException;
    Code:
       0: return

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #3                  // Field magic:[B
       4: ifnull        24
       7: aload_0
       8: getfield      #3                  // Field magic:[B
      11: getstatic     #2                  // Field MAGIC:[B
      14: invokestatic  #29                 // Method java/util/Arrays.equals:([B[B)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void setResponseRequired(boolean);
    Code:
       0: return

  public boolean isCacheEnabled() throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: ldc           #31                 // String CacheEnabled
       6: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setCacheEnabled(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #31                 // String CacheEnabled
       3: iload_1
       4: ifeq          13
       7: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: goto          16
      13: getstatic     #33                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  public boolean isStackTraceEnabled() throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: ldc           #35                 // String StackTraceEnabled
       6: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setStackTraceEnabled(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #35                 // String StackTraceEnabled
       3: iload_1
       4: ifeq          13
       7: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: goto          16
      13: getstatic     #33                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  public boolean isTcpNoDelayEnabled() throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: ldc           #36                 // String TcpNoDelayEnabled
       6: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setTcpNoDelayEnabled(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #36                 // String TcpNoDelayEnabled
       3: iload_1
       4: ifeq          13
       7: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: goto          16
      13: getstatic     #33                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  public boolean isSizePrefixDisabled() throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: ldc           #37                 // String SizePrefixDisabled
       6: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setSizePrefixDisabled(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #37                 // String SizePrefixDisabled
       3: iload_1
       4: ifeq          13
       7: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: goto          16
      13: getstatic     #33                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  public boolean isTightEncodingEnabled() throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: ldc           #38                 // String TightEncodingEnabled
       6: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setTightEncodingEnabled(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #38                 // String TightEncodingEnabled
       3: iload_1
       4: ifeq          13
       7: getstatic     #30                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: goto          16
      13: getstatic     #33                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  public java.lang.String getHost() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #39                 // String Host
       3: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #40                 // class org/fusesource/hawtbuf/UTF8Buffer
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: invokevirtual #41                 // Method org/fusesource/hawtbuf/UTF8Buffer.toString:()Ljava/lang/String;
      20: areturn

  public void setHost(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #39                 // String Host
       3: aload_1
       4: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public long getMaxInactivityDuration() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #42                 // String MaxInactivityDuration
       3: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #43                 // class java/lang/Long
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: lconst_0
      15: goto          22
      18: aload_1
      19: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      22: lreturn

  public void setMaxInactivityDuration(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #42                 // String MaxInactivityDuration
       3: new           #43                 // class java/lang/Long
       6: dup
       7: lload_1
       8: invokespecial #45                 // Method java/lang/Long."<init>":(J)V
      11: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public long getMaxInactivityDurationInitalDelay() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #46                 // String MaxInactivityDurationInitalDelay
       3: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #43                 // class java/lang/Long
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: lconst_0
      15: goto          22
      18: aload_1
      19: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      22: lreturn

  public void setMaxInactivityDurationInitalDelay(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #46                 // String MaxInactivityDurationInitalDelay
       3: new           #43                 // class java/lang/Long
       6: dup
       7: lload_1
       8: invokespecial #45                 // Method java/lang/Long."<init>":(J)V
      11: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public long getMaxFrameSize() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #47                 // String MaxFrameSize
       3: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #43                 // class java/lang/Long
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: lconst_0
      15: goto          22
      18: aload_1
      19: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      22: lreturn

  public void setMaxFrameSize(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #47                 // String MaxFrameSize
       3: new           #43                 // class java/lang/Long
       6: dup
       7: lload_1
       8: invokespecial #45                 // Method java/lang/Long."<init>":(J)V
      11: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public int getCacheSize() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #48                 // String CacheSize
       3: invokevirtual #32                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #49                 // class java/lang/Integer
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: iconst_0
      15: goto          22
      18: aload_1
      19: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      22: ireturn

  public void setCacheSize(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #48                 // String CacheSize
       3: new           #49                 // class java/lang/Integer
       6: dup
       7: iload_1
       8: invokespecial #51                 // Method java/lang/Integer."<init>":(I)V
      11: invokevirtual #34                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processWireFormat:(Lorg/apache/activemq/command/WireFormatInfo;)Lorg/apache/activemq/command/Response;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #53                 // Method getProperties:()Ljava/util/Map;
       6: astore_1
       7: goto          11
      10: astore_2
      11: new           #55                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #57                 // String WireFormatInfo { version=
      20: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #4                  // Field version:I
      27: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #60                 // String , properties=
      32: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #62                 // String , magic=
      41: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: aload_0
      46: getfield      #3                  // Field magic:[B
      49: invokespecial #63                 // Method toString:([B)Ljava/lang/String;
      52: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #64                 // String }
      57: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn
    Exception table:
       from    to  target type
           2     7    10   Class java/io/IOException

  private java.lang.String toString(byte[]);
    Code:
       0: new           #66                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #67                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_2
       9: bipush        91
      11: invokevirtual #68                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      14: pop
      15: iconst_0
      16: istore_3
      17: iload_3
      18: aload_1
      19: arraylength
      20: if_icmpge     49
      23: iload_3
      24: ifeq          34
      27: aload_2
      28: bipush        44
      30: invokevirtual #68                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      33: pop
      34: aload_2
      35: aload_1
      36: iload_3
      37: baload
      38: i2c
      39: invokevirtual #68                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      42: pop
      43: iinc          3, 1
      46: goto          17
      49: aload_2
      50: bipush        93
      52: invokevirtual #68                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      55: pop
      56: aload_2
      57: invokevirtual #69                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      60: areturn

  public void setCommandId(int);
    Code:
       0: return

  public int getCommandId();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isResponseRequired();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isResponse();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isBrokerInfo();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMessageDispatch();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMessage();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMessageAck();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMessageDispatchNotification();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isShutdownInfo();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isConnectionControl();
    Code:
       0: iconst_0
       1: ireturn

  public void setCachedMarshalledForm(org.apache.activemq.wireformat.WireFormat, org.apache.activemq.util.ByteSequence);
    Code:
       0: return

  public org.apache.activemq.util.ByteSequence getCachedMarshalledForm(org.apache.activemq.wireformat.WireFormat);
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: bipush        8
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        65
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        99
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        116
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        105
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        118
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        101
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        77
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        81
      45: bastore
      46: putstatic     #2                  // Field MAGIC:[B
      49: return
}
