Compiled from "ActiveMQDestination.java"
public abstract class org.apache.activemq.command.ActiveMQDestination extends org.apache.activemq.jndi.JNDIBaseStorable implements org.apache.activemq.command.DataStructure, javax.jms.Destination, java.io.Externalizable, java.lang.Comparable<java.lang.Object> {
  public static final java.lang.String PATH_SEPERATOR;

  public static final char COMPOSITE_SEPERATOR;

  public static final byte QUEUE_TYPE;

  public static final byte TOPIC_TYPE;

  public static final byte TEMP_MASK;

  public static final byte TEMP_TOPIC_TYPE;

  public static final byte TEMP_QUEUE_TYPE;

  public static final java.lang.String QUEUE_QUALIFIED_PREFIX;

  public static final java.lang.String TOPIC_QUALIFIED_PREFIX;

  public static final java.lang.String TEMP_QUEUE_QUALIFED_PREFIX;

  public static final java.lang.String TEMP_TOPIC_QUALIFED_PREFIX;

  public static final java.lang.String TEMP_DESTINATION_NAME_PREFIX;

  private static final long serialVersionUID;

  protected java.lang.String physicalName;

  protected transient org.apache.activemq.command.ActiveMQDestination[] compositeDestinations;

  protected transient java.lang.String[] destinationPaths;

  protected transient boolean isPattern;

  protected transient int hashValue;

  protected java.util.Map<java.lang.String, java.lang.String> options;

  protected static org.apache.activemq.command.UnresolvedDestinationTransformer unresolvableDestinationTransformer;

  public org.apache.activemq.command.ActiveMQDestination();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/jndi/JNDIBaseStorable."<init>":()V
       4: return

  protected org.apache.activemq.command.ActiveMQDestination(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/jndi/JNDIBaseStorable."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setPhysicalName:(Ljava/lang/String;)V
       9: return

  public org.apache.activemq.command.ActiveMQDestination(org.apache.activemq.command.ActiveMQDestination[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/jndi/JNDIBaseStorable."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method setCompositeDestinations:([Lorg/apache/activemq/command/ActiveMQDestination;)V
       9: return

  public static org.apache.activemq.command.ActiveMQDestination createDestination(java.lang.String, byte);
    Code:
       0: aload_0
       1: ldc           #4                  // String queue://
       3: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          26
       9: new           #6                  // class org/apache/activemq/command/ActiveMQQueue
      12: dup
      13: aload_0
      14: ldc           #4                  // String queue://
      16: invokevirtual #7                  // Method java/lang/String.length:()I
      19: invokevirtual #8                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      22: invokespecial #9                  // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
      25: areturn
      26: aload_0
      27: ldc           #10                 // String topic://
      29: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      32: ifeq          52
      35: new           #11                 // class org/apache/activemq/command/ActiveMQTopic
      38: dup
      39: aload_0
      40: ldc           #10                 // String topic://
      42: invokevirtual #7                  // Method java/lang/String.length:()I
      45: invokevirtual #8                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      48: invokespecial #12                 // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
      51: areturn
      52: aload_0
      53: ldc           #13                 // String temp-queue://
      55: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      58: ifeq          78
      61: new           #14                 // class org/apache/activemq/command/ActiveMQTempQueue
      64: dup
      65: aload_0
      66: ldc           #13                 // String temp-queue://
      68: invokevirtual #7                  // Method java/lang/String.length:()I
      71: invokevirtual #8                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      74: invokespecial #15                 // Method org/apache/activemq/command/ActiveMQTempQueue."<init>":(Ljava/lang/String;)V
      77: areturn
      78: aload_0
      79: ldc           #16                 // String temp-topic://
      81: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      84: ifeq          104
      87: new           #17                 // class org/apache/activemq/command/ActiveMQTempTopic
      90: dup
      91: aload_0
      92: ldc           #16                 // String temp-topic://
      94: invokevirtual #7                  // Method java/lang/String.length:()I
      97: invokevirtual #8                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     100: invokespecial #18                 // Method org/apache/activemq/command/ActiveMQTempTopic."<init>":(Ljava/lang/String;)V
     103: areturn
     104: iload_1
     105: tableswitch   { // 1 to 6
                     1: 144
                     2: 153
                     3: 180
                     4: 180
                     5: 162
                     6: 171
               default: 180
          }
     144: new           #6                  // class org/apache/activemq/command/ActiveMQQueue
     147: dup
     148: aload_0
     149: invokespecial #9                  // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
     152: areturn
     153: new           #11                 // class org/apache/activemq/command/ActiveMQTopic
     156: dup
     157: aload_0
     158: invokespecial #12                 // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
     161: areturn
     162: new           #14                 // class org/apache/activemq/command/ActiveMQTempQueue
     165: dup
     166: aload_0
     167: invokespecial #15                 // Method org/apache/activemq/command/ActiveMQTempQueue."<init>":(Ljava/lang/String;)V
     170: areturn
     171: new           #17                 // class org/apache/activemq/command/ActiveMQTempTopic
     174: dup
     175: aload_0
     176: invokespecial #18                 // Method org/apache/activemq/command/ActiveMQTempTopic."<init>":(Ljava/lang/String;)V
     179: areturn
     180: new           #19                 // class java/lang/IllegalArgumentException
     183: dup
     184: new           #20                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #22                 // String Invalid default destination type:
     193: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: iload_1
     197: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     200: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     206: athrow

  public static org.apache.activemq.command.ActiveMQDestination transform(javax.jms.Destination) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #27                 // class org/apache/activemq/command/ActiveMQDestination
      10: ifeq          18
      13: aload_0
      14: checkcast     #27                 // class org/apache/activemq/command/ActiveMQDestination
      17: areturn
      18: aload_0
      19: instanceof    #28                 // class javax/jms/Queue
      22: ifeq          96
      25: aload_0
      26: instanceof    #29                 // class javax/jms/Topic
      29: ifeq          96
      32: aload_0
      33: checkcast     #28                 // class javax/jms/Queue
      36: invokeinterface #30,  1           // InterfaceMethod javax/jms/Queue.getQueueName:()Ljava/lang/String;
      41: astore_1
      42: aload_0
      43: checkcast     #29                 // class javax/jms/Topic
      46: invokeinterface #31,  1           // InterfaceMethod javax/jms/Topic.getTopicName:()Ljava/lang/String;
      51: astore_2
      52: aload_1
      53: ifnull        69
      56: aload_2
      57: ifnonnull     69
      60: new           #6                  // class org/apache/activemq/command/ActiveMQQueue
      63: dup
      64: aload_1
      65: invokespecial #9                  // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
      68: areturn
      69: aload_1
      70: ifnonnull     86
      73: aload_2
      74: ifnull        86
      77: new           #11                 // class org/apache/activemq/command/ActiveMQTopic
      80: dup
      81: aload_2
      82: invokespecial #12                 // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
      85: areturn
      86: getstatic     #32                 // Field unresolvableDestinationTransformer:Lorg/apache/activemq/command/UnresolvedDestinationTransformer;
      89: aload_0
      90: invokeinterface #33,  2           // InterfaceMethod org/apache/activemq/command/UnresolvedDestinationTransformer.transform:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
      95: areturn
      96: aload_0
      97: instanceof    #34                 // class javax/jms/TemporaryQueue
     100: ifeq          120
     103: new           #14                 // class org/apache/activemq/command/ActiveMQTempQueue
     106: dup
     107: aload_0
     108: checkcast     #34                 // class javax/jms/TemporaryQueue
     111: invokeinterface #35,  1           // InterfaceMethod javax/jms/TemporaryQueue.getQueueName:()Ljava/lang/String;
     116: invokespecial #15                 // Method org/apache/activemq/command/ActiveMQTempQueue."<init>":(Ljava/lang/String;)V
     119: areturn
     120: aload_0
     121: instanceof    #36                 // class javax/jms/TemporaryTopic
     124: ifeq          144
     127: new           #17                 // class org/apache/activemq/command/ActiveMQTempTopic
     130: dup
     131: aload_0
     132: checkcast     #36                 // class javax/jms/TemporaryTopic
     135: invokeinterface #37,  1           // InterfaceMethod javax/jms/TemporaryTopic.getTopicName:()Ljava/lang/String;
     140: invokespecial #18                 // Method org/apache/activemq/command/ActiveMQTempTopic."<init>":(Ljava/lang/String;)V
     143: areturn
     144: aload_0
     145: instanceof    #28                 // class javax/jms/Queue
     148: ifeq          168
     151: new           #6                  // class org/apache/activemq/command/ActiveMQQueue
     154: dup
     155: aload_0
     156: checkcast     #28                 // class javax/jms/Queue
     159: invokeinterface #30,  1           // InterfaceMethod javax/jms/Queue.getQueueName:()Ljava/lang/String;
     164: invokespecial #9                  // Method org/apache/activemq/command/ActiveMQQueue."<init>":(Ljava/lang/String;)V
     167: areturn
     168: aload_0
     169: instanceof    #29                 // class javax/jms/Topic
     172: ifeq          192
     175: new           #11                 // class org/apache/activemq/command/ActiveMQTopic
     178: dup
     179: aload_0
     180: checkcast     #29                 // class javax/jms/Topic
     183: invokeinterface #31,  1           // InterfaceMethod javax/jms/Topic.getTopicName:()Ljava/lang/String;
     188: invokespecial #12                 // Method org/apache/activemq/command/ActiveMQTopic."<init>":(Ljava/lang/String;)V
     191: areturn
     192: new           #38                 // class javax/jms/JMSException
     195: dup
     196: new           #20                 // class java/lang/StringBuilder
     199: dup
     200: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     203: ldc           #39                 // String Could not transform the destination into a ActiveMQ destination:
     205: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_0
     209: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokespecial #41                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     218: athrow

  public static int compare(org.apache.activemq.command.ActiveMQDestination, org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: ifnonnull     13
      11: iconst_m1
      12: ireturn
      13: aload_1
      14: ifnonnull     19
      17: iconst_1
      18: ireturn
      19: aload_0
      20: invokevirtual #42                 // Method isQueue:()Z
      23: aload_1
      24: invokevirtual #42                 // Method isQueue:()Z
      27: if_icmpne     42
      30: aload_0
      31: invokevirtual #43                 // Method getPhysicalName:()Ljava/lang/String;
      34: aload_1
      35: invokevirtual #43                 // Method getPhysicalName:()Ljava/lang/String;
      38: invokevirtual #44                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      41: ireturn
      42: aload_0
      43: invokevirtual #42                 // Method isQueue:()Z
      46: ifeq          53
      49: iconst_m1
      50: goto          54
      53: iconst_1
      54: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #27                 // class org/apache/activemq/command/ActiveMQDestination
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #27                 // class org/apache/activemq/command/ActiveMQDestination
      12: invokestatic  #45                 // Method compare:(Lorg/apache/activemq/command/ActiveMQDestination;Lorg/apache/activemq/command/ActiveMQDestination;)I
      15: ireturn
      16: aload_1
      17: ifnonnull     22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
      29: aload_1
      30: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokevirtual #44                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      39: ireturn

  public boolean isComposite();
    Code:
       0: aload_0
       1: getfield      #48                 // Field compositeDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.activemq.command.ActiveMQDestination[] getCompositeDestinations();
    Code:
       0: aload_0
       1: getfield      #48                 // Field compositeDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setCompositeDestinations(org.apache.activemq.command.ActiveMQDestination[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field compositeDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
       5: aload_0
       6: aconst_null
       7: putfield      #49                 // Field destinationPaths:[Ljava/lang/String;
      10: aload_0
      11: iconst_0
      12: putfield      #50                 // Field hashValue:I
      15: aload_0
      16: iconst_0
      17: putfield      #51                 // Field isPattern:Z
      20: new           #52                 // class java/lang/StringBuffer
      23: dup
      24: invokespecial #53                 // Method java/lang/StringBuffer."<init>":()V
      27: astore_2
      28: iconst_0
      29: istore_3
      30: iload_3
      31: aload_1
      32: arraylength
      33: if_icmpge     91
      36: iload_3
      37: ifeq          47
      40: aload_2
      41: bipush        44
      43: invokevirtual #54                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      46: pop
      47: aload_0
      48: invokevirtual #55                 // Method getDestinationType:()B
      51: aload_1
      52: iload_3
      53: aaload
      54: invokevirtual #55                 // Method getDestinationType:()B
      57: if_icmpne     74
      60: aload_2
      61: aload_1
      62: iload_3
      63: aaload
      64: invokevirtual #43                 // Method getPhysicalName:()Ljava/lang/String;
      67: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: pop
      71: goto          85
      74: aload_2
      75: aload_1
      76: iload_3
      77: aaload
      78: invokevirtual #57                 // Method getQualifiedName:()Ljava/lang/String;
      81: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: pop
      85: iinc          3, 1
      88: goto          30
      91: aload_0
      92: aload_2
      93: invokevirtual #58                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      96: putfield      #59                 // Field physicalName:Ljava/lang/String;
      99: return

  public java.lang.String getQualifiedName();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method isComposite:()Z
       4: ifeq          12
       7: aload_0
       8: getfield      #59                 // Field physicalName:Ljava/lang/String;
      11: areturn
      12: new           #20                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_0
      20: invokevirtual #61                 // Method getQualifiedPrefix:()Ljava/lang/String;
      23: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #59                 // Field physicalName:Ljava/lang/String;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  protected abstract java.lang.String getQualifiedPrefix();

  public java.lang.String getPhysicalName();
    Code:
       0: aload_0
       1: getfield      #59                 // Field physicalName:Ljava/lang/String;
       4: areturn

  public void setPhysicalName(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: invokevirtual #7                  // Method java/lang/String.length:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #63                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          27
      17: new           #19                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #64                 // String Invalid destination name: a non-empty name is required
      23: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: iconst_m1
      28: istore_3
      29: iconst_0
      30: istore        4
      32: iconst_0
      33: istore        5
      35: iload         5
      37: iload_2
      38: if_icmpge     110
      41: aload_1
      42: iload         5
      44: invokevirtual #65                 // Method java/lang/String.charAt:(I)C
      47: istore        6
      49: iload         6
      51: bipush        63
      53: if_icmpne     62
      56: iload         5
      58: istore_3
      59: goto          110
      62: iload         6
      64: bipush        44
      66: if_icmpne     80
      69: aload_0
      70: iconst_0
      71: putfield      #51                 // Field isPattern:Z
      74: iconst_1
      75: istore        4
      77: goto          104
      80: iload         4
      82: ifne          104
      85: iload         6
      87: bipush        42
      89: if_icmpeq     99
      92: iload         6
      94: bipush        62
      96: if_icmpne     104
      99: aload_0
     100: iconst_1
     101: putfield      #51                 // Field isPattern:Z
     104: iinc          5, 1
     107: goto          35
     110: iload_3
     111: iflt          181
     114: aload_1
     115: iload_3
     116: iconst_1
     117: iadd
     118: invokevirtual #8                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     121: astore        5
     123: aload_1
     124: iconst_0
     125: iload_3
     126: invokevirtual #66                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     129: astore_1
     130: aload_0
     131: aload         5
     133: invokestatic  #67                 // Method org/apache/activemq/util/URISupport.parseQuery:(Ljava/lang/String;)Ljava/util/Map;
     136: putfield      #68                 // Field options:Ljava/util/Map;
     139: goto          181
     142: astore        6
     144: new           #19                 // class java/lang/IllegalArgumentException
     147: dup
     148: new           #20                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #70                 // String Invalid destination name:
     157: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_1
     161: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: ldc           #71                 // String , it\'s options are not encoded properly:
     166: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload         6
     171: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     180: athrow
     181: aload_0
     182: aload_1
     183: putfield      #59                 // Field physicalName:Ljava/lang/String;
     186: aload_0
     187: aconst_null
     188: putfield      #49                 // Field destinationPaths:[Ljava/lang/String;
     191: aload_0
     192: iconst_0
     193: putfield      #50                 // Field hashValue:I
     196: iload         4
     198: ifeq          331
     201: new           #72                 // class java/util/HashSet
     204: dup
     205: invokespecial #73                 // Method java/util/HashSet."<init>":()V
     208: astore        5
     210: new           #74                 // class java/util/StringTokenizer
     213: dup
     214: aload_1
     215: ldc           #75                 // String ,
     217: invokespecial #76                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     220: astore        6
     222: aload         6
     224: invokevirtual #77                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
     227: ifeq          264
     230: aload         6
     232: invokevirtual #78                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
     235: invokevirtual #62                 // Method java/lang/String.trim:()Ljava/lang/String;
     238: astore        7
     240: aload         7
     242: invokevirtual #7                  // Method java/lang/String.length:()I
     245: ifne          251
     248: goto          222
     251: aload         5
     253: aload         7
     255: invokeinterface #79,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     260: pop
     261: goto          222
     264: aload_0
     265: aload         5
     267: invokeinterface #80,  1           // InterfaceMethod java/util/Set.size:()I
     272: anewarray     #27                 // class org/apache/activemq/command/ActiveMQDestination
     275: putfield      #48                 // Field compositeDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
     278: iconst_0
     279: istore        7
     281: aload         5
     283: invokeinterface #81,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     288: astore        8
     290: aload         8
     292: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     297: ifeq          331
     300: aload         8
     302: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     307: checkcast     #84                 // class java/lang/String
     310: astore        9
     312: aload_0
     313: getfield      #48                 // Field compositeDestinations:[Lorg/apache/activemq/command/ActiveMQDestination;
     316: iload         7
     318: iinc          7, 1
     321: aload_0
     322: aload         9
     324: invokevirtual #85                 // Method createDestination:(Ljava/lang/String;)Lorg/apache/activemq/command/ActiveMQDestination;
     327: aastore
     328: goto          290
     331: return
    Exception table:
       from    to  target type
         130   139   142   Class java/net/URISyntaxException

  public org.apache.activemq.command.ActiveMQDestination createDestination(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #55                 // Method getDestinationType:()B
       5: invokestatic  #86                 // Method createDestination:(Ljava/lang/String;B)Lorg/apache/activemq/command/ActiveMQDestination;
       8: areturn

  public java.lang.String[] getDestinationPaths();
    Code:
       0: aload_0
       1: getfield      #49                 // Field destinationPaths:[Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #49                 // Field destinationPaths:[Ljava/lang/String;
      11: areturn
      12: new           #87                 // class java/util/ArrayList
      15: dup
      16: invokespecial #88                 // Method java/util/ArrayList."<init>":()V
      19: astore_1
      20: new           #20                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      27: astore_2
      28: ldc           #89                 // String .
      30: iconst_0
      31: invokevirtual #65                 // Method java/lang/String.charAt:(I)C
      34: istore_3
      35: aload_0
      36: getfield      #59                 // Field physicalName:Ljava/lang/String;
      39: invokevirtual #90                 // Method java/lang/String.toCharArray:()[C
      42: astore        4
      44: aload         4
      46: arraylength
      47: istore        5
      49: iconst_0
      50: istore        6
      52: iload         6
      54: iload         5
      56: if_icmpge     109
      59: aload         4
      61: iload         6
      63: caload
      64: istore        7
      66: iload         7
      68: iload_3
      69: if_icmpne     96
      72: aload_1
      73: aload_2
      74: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokeinterface #91,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: aload_2
      84: iconst_0
      85: aload_2
      86: invokevirtual #92                 // Method java/lang/StringBuilder.length:()I
      89: invokevirtual #93                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      92: pop
      93: goto          103
      96: aload_2
      97: iload         7
      99: invokevirtual #94                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     102: pop
     103: iinc          6, 1
     106: goto          52
     109: aload_1
     110: aload_2
     111: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokeinterface #91,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     119: pop
     120: aload_0
     121: aload_1
     122: invokeinterface #95,  1           // InterfaceMethod java/util/List.size:()I
     127: anewarray     #84                 // class java/lang/String
     130: putfield      #49                 // Field destinationPaths:[Ljava/lang/String;
     133: aload_1
     134: aload_0
     135: getfield      #49                 // Field destinationPaths:[Ljava/lang/String;
     138: invokeinterface #96,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     143: pop
     144: aload_0
     145: getfield      #49                 // Field destinationPaths:[Ljava/lang/String;
     148: areturn

  public abstract byte getDestinationType();

  public boolean isQueue();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isTopic();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isTemporary();
    Code:
       0: iconst_0
       1: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #27                 // class org/apache/activemq/command/ActiveMQDestination
      28: astore_2
      29: aload_0
      30: getfield      #59                 // Field physicalName:Ljava/lang/String;
      33: aload_2
      34: getfield      #59                 // Field physicalName:Ljava/lang/String;
      37: invokevirtual #97                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #50                 // Field hashValue:I
       4: ifne          18
       7: aload_0
       8: aload_0
       9: getfield      #59                 // Field physicalName:Ljava/lang/String;
      12: invokevirtual #98                 // Method java/lang/String.hashCode:()I
      15: putfield      #50                 // Field hashValue:I
      18: aload_0
      19: getfield      #50                 // Field hashValue:I
      22: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getQualifiedName:()Ljava/lang/String;
       4: areturn

  public void writeExternal(java.io.ObjectOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #43                 // Method getPhysicalName:()Ljava/lang/String;
       5: invokeinterface #99,  2           // InterfaceMethod java/io/ObjectOutput.writeUTF:(Ljava/lang/String;)V
      10: aload_1
      11: aload_0
      12: getfield      #68                 // Field options:Ljava/util/Map;
      15: invokeinterface #100,  2          // InterfaceMethod java/io/ObjectOutput.writeObject:(Ljava/lang/Object;)V
      20: return

  public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #101,  1          // InterfaceMethod java/io/ObjectInput.readUTF:()Ljava/lang/String;
       7: invokevirtual #2                  // Method setPhysicalName:(Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #102,  1          // InterfaceMethod java/io/ObjectInput.readObject:()Ljava/lang/Object;
      17: checkcast     #103                // class java/util/Map
      20: putfield      #68                 // Field options:Ljava/util/Map;
      23: return

  public java.lang.String getDestinationTypeAsString();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getDestinationType:()B
       4: tableswitch   { // 1 to 6
                     1: 44
                     2: 47
                     3: 56
                     4: 56
                     5: 50
                     6: 53
               default: 56
          }
      44: ldc           #104                // String Queue
      46: areturn
      47: ldc           #105                // String Topic
      49: areturn
      50: ldc           #106                // String TempQueue
      52: areturn
      53: ldc           #107                // String TempTopic
      55: areturn
      56: new           #19                 // class java/lang/IllegalArgumentException
      59: dup
      60: new           #20                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #108                // String Invalid destination type:
      69: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #55                 // Method getDestinationType:()B
      76: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow

  public java.util.Map<java.lang.String, java.lang.String> getOptions();
    Code:
       0: aload_0
       1: getfield      #68                 // Field options:Ljava/util/Map;
       4: areturn

  public boolean isMarshallAware();
    Code:
       0: iconst_0
       1: ireturn

  public void buildFromProperties(java.util.Properties);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #109                // class java/util/Properties
       7: dup
       8: invokespecial #110                // Method java/util/Properties."<init>":()V
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokestatic  #111                // Method org/apache/activemq/util/IntrospectionSupport.setProperties:(Ljava/lang/Object;Ljava/util/Map;)Z
      17: pop
      18: return

  public void populateProperties(java.util.Properties);
    Code:
       0: aload_1
       1: ldc           #112                // String physicalName
       3: aload_0
       4: invokevirtual #43                 // Method getPhysicalName:()Ljava/lang/String;
       7: invokevirtual #113                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: return

  public boolean isPattern();
    Code:
       0: aload_0
       1: getfield      #51                 // Field isPattern:Z
       4: ireturn

  public static org.apache.activemq.command.UnresolvedDestinationTransformer getUnresolvableDestinationTransformer();
    Code:
       0: getstatic     #32                 // Field unresolvableDestinationTransformer:Lorg/apache/activemq/command/UnresolvedDestinationTransformer;
       3: areturn

  public static void setUnresolvableDestinationTransformer(org.apache.activemq.command.UnresolvedDestinationTransformer);
    Code:
       0: aload_0
       1: putstatic     #32                 // Field unresolvableDestinationTransformer:Lorg/apache/activemq/command/UnresolvedDestinationTransformer;
       4: return

  static {};
    Code:
       0: new           #114                // class org/apache/activemq/command/DefaultUnresolvedDestinationTransformer
       3: dup
       4: invokespecial #115                // Method org/apache/activemq/command/DefaultUnresolvedDestinationTransformer."<init>":()V
       7: putstatic     #32                 // Field unresolvableDestinationTransformer:Lorg/apache/activemq/command/UnresolvedDestinationTransformer;
      10: return
}
