Compiled from "BrokerInfo.java"
public class org.apache.activemq.command.BrokerInfo extends org.apache.activemq.command.BaseCommand {
  private static final java.lang.String PASSIVE_SLAVE_KEY;

  public static final byte DATA_STRUCTURE_TYPE;

  org.apache.activemq.command.BrokerId brokerId;

  java.lang.String brokerURL;

  boolean slaveBroker;

  boolean masterBroker;

  boolean faultTolerantConfiguration;

  boolean networkConnection;

  boolean duplexConnection;

  org.apache.activemq.command.BrokerInfo[] peerBrokerInfos;

  java.lang.String brokerName;

  long connectionId;

  java.lang.String brokerUploadUrl;

  java.lang.String networkProperties;

  transient int refCount;

  public org.apache.activemq.command.BrokerInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field refCount:I
       9: return

  public org.apache.activemq.command.BrokerInfo copy();
    Code:
       0: new           #3                  // class org/apache/activemq/command/BrokerInfo
       3: dup
       4: invokespecial #4                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #5                  // Method copy:(Lorg/apache/activemq/command/BrokerInfo;)V
      13: aload_1
      14: areturn

  private void copy(org.apache.activemq.command.BrokerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/activemq/command/BaseCommand.copy:(Lorg/apache/activemq/command/BaseCommand;)V
       5: aload_1
       6: aload_0
       7: getfield      #7                  // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      10: putfield      #7                  // Field brokerId:Lorg/apache/activemq/command/BrokerId;
      13: aload_1
      14: aload_0
      15: getfield      #8                  // Field brokerURL:Ljava/lang/String;
      18: putfield      #8                  // Field brokerURL:Ljava/lang/String;
      21: aload_1
      22: aload_0
      23: getfield      #9                  // Field slaveBroker:Z
      26: putfield      #9                  // Field slaveBroker:Z
      29: aload_1
      30: aload_0
      31: getfield      #10                 // Field masterBroker:Z
      34: putfield      #10                 // Field masterBroker:Z
      37: aload_1
      38: aload_0
      39: getfield      #11                 // Field faultTolerantConfiguration:Z
      42: putfield      #11                 // Field faultTolerantConfiguration:Z
      45: aload_1
      46: aload_0
      47: getfield      #12                 // Field networkConnection:Z
      50: putfield      #12                 // Field networkConnection:Z
      53: aload_1
      54: aload_0
      55: getfield      #13                 // Field duplexConnection:Z
      58: putfield      #13                 // Field duplexConnection:Z
      61: aload_1
      62: aload_0
      63: getfield      #14                 // Field peerBrokerInfos:[Lorg/apache/activemq/command/BrokerInfo;
      66: putfield      #14                 // Field peerBrokerInfos:[Lorg/apache/activemq/command/BrokerInfo;
      69: aload_1
      70: aload_0
      71: getfield      #15                 // Field brokerName:Ljava/lang/String;
      74: putfield      #15                 // Field brokerName:Ljava/lang/String;
      77: aload_1
      78: aload_0
      79: getfield      #16                 // Field connectionId:J
      82: putfield      #16                 // Field connectionId:J
      85: aload_1
      86: aload_0
      87: getfield      #17                 // Field brokerUploadUrl:Ljava/lang/String;
      90: putfield      #17                 // Field brokerUploadUrl:Ljava/lang/String;
      93: aload_1
      94: aload_0
      95: getfield      #18                 // Field networkProperties:Ljava/lang/String;
      98: putfield      #18                 // Field networkProperties:Ljava/lang/String;
     101: return

  public boolean isBrokerInfo();
    Code:
       0: iconst_1
       1: ireturn

  public byte getDataStructureType();
    Code:
       0: iconst_2
       1: ireturn

  public org.apache.activemq.command.BrokerId getBrokerId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field brokerId:Lorg/apache/activemq/command/BrokerId;
       4: areturn

  public void setBrokerId(org.apache.activemq.command.BrokerId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field brokerId:Lorg/apache/activemq/command/BrokerId;
       5: return

  public java.lang.String getBrokerURL();
    Code:
       0: aload_0
       1: getfield      #8                  // Field brokerURL:Ljava/lang/String;
       4: areturn

  public void setBrokerURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field brokerURL:Ljava/lang/String;
       5: return

  public org.apache.activemq.command.BrokerInfo[] getPeerBrokerInfos();
    Code:
       0: aload_0
       1: getfield      #14                 // Field peerBrokerInfos:[Lorg/apache/activemq/command/BrokerInfo;
       4: areturn

  public void setPeerBrokerInfos(org.apache.activemq.command.BrokerInfo[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field peerBrokerInfos:[Lorg/apache/activemq/command/BrokerInfo;
       5: return

  public java.lang.String getBrokerName();
    Code:
       0: aload_0
       1: getfield      #15                 // Field brokerName:Ljava/lang/String;
       4: areturn

  public void setBrokerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field brokerName:Ljava/lang/String;
       5: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #19,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processBrokerInfo:(Lorg/apache/activemq/command/BrokerInfo;)Lorg/apache/activemq/command/Response;
       7: areturn

  public boolean isSlaveBroker();
    Code:
       0: aload_0
       1: getfield      #9                  // Field slaveBroker:Z
       4: ireturn

  public void setSlaveBroker(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field slaveBroker:Z
       5: return

  public boolean isMasterBroker();
    Code:
       0: aload_0
       1: getfield      #10                 // Field masterBroker:Z
       4: ireturn

  public void setMasterBroker(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field masterBroker:Z
       5: return

  public boolean isFaultTolerantConfiguration();
    Code:
       0: aload_0
       1: getfield      #11                 // Field faultTolerantConfiguration:Z
       4: ireturn

  public void setFaultTolerantConfiguration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field faultTolerantConfiguration:Z
       5: return

  public boolean isDuplexConnection();
    Code:
       0: aload_0
       1: getfield      #13                 // Field duplexConnection:Z
       4: ireturn

  public void setDuplexConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field duplexConnection:Z
       5: return

  public boolean isNetworkConnection();
    Code:
       0: aload_0
       1: getfield      #12                 // Field networkConnection:Z
       4: ireturn

  public void setNetworkConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field networkConnection:Z
       5: return

  public long getConnectionId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field connectionId:J
       4: lreturn

  public void setConnectionId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field connectionId:J
       5: return

  public java.lang.String getBrokerUploadUrl();
    Code:
       0: aload_0
       1: getfield      #17                 // Field brokerUploadUrl:Ljava/lang/String;
       4: areturn

  public void setBrokerUploadUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field brokerUploadUrl:Ljava/lang/String;
       5: return

  public java.lang.String getNetworkProperties();
    Code:
       0: aload_0
       1: getfield      #18                 // Field networkProperties:Ljava/lang/String;
       4: areturn

  public void setNetworkProperties(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field networkProperties:Ljava/lang/String;
       5: return

  public boolean isPassiveSlave();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #20                 // Method getProperties:()Ljava/util/Properties;
       6: astore_2
       7: aload_2
       8: ifnull        23
      11: aload_2
      12: ldc           #21                 // String passiveSlave
      14: ldc           #22                 // String false
      16: invokevirtual #23                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: invokestatic  #24                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      22: istore_1
      23: iload_1
      24: ireturn

  public void setPassiveSlave(boolean);
    Code:
       0: new           #25                 // class java/util/Properties
       3: dup
       4: invokespecial #26                 // Method java/util/Properties."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #21                 // String passiveSlave
      11: iload_1
      12: invokestatic  #27                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      15: invokevirtual #28                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: aload_2
      21: invokestatic  #29                 // Method org/apache/activemq/util/MarshallingSupport.propertiesToString:(Ljava/util/Properties;)Ljava/lang/String;
      24: putfield      #18                 // Field networkProperties:Ljava/lang/String;
      27: goto          35
      30: astore_3
      31: aload_3
      32: invokevirtual #31                 // Method java/io/IOException.printStackTrace:()V
      35: return
    Exception table:
       from    to  target type
          19    27    30   Class java/io/IOException

  public java.util.Properties getProperties();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #32                 // Method getNetworkProperties:()Ljava/lang/String;
       6: invokestatic  #33                 // Method org/apache/activemq/util/MarshallingSupport.stringToProperties:(Ljava/lang/String;)Ljava/util/Properties;
       9: astore_1
      10: goto          18
      13: astore_2
      14: aload_2
      15: invokevirtual #31                 // Method java/io/IOException.printStackTrace:()V
      18: aload_1
      19: areturn
    Exception table:
       from    to  target type
           2    10    13   Class java/io/IOException

  public int getRefCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field refCount:I
       4: ireturn

  public void incrementRefCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field refCount:I
       5: iconst_1
       6: iadd
       7: putfield      #2                  // Field refCount:I
      10: return

  public int decrementRefCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field refCount:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #2                  // Field refCount:I
      11: ireturn
}
