Compiled from "ConsumerInfo.java"
public class org.apache.activemq.command.ConsumerInfo extends org.apache.activemq.command.BaseCommand {
  public static final byte DATA_STRUCTURE_TYPE;

  public static final byte HIGH_PRIORITY;

  public static final byte NORMAL_PRIORITY;

  public static final byte NETWORK_CONSUMER_PRIORITY;

  public static final byte LOW_PRIORITY;

  protected org.apache.activemq.command.ConsumerId consumerId;

  protected org.apache.activemq.command.ActiveMQDestination destination;

  protected int prefetchSize;

  protected int maximumPendingMessageLimit;

  protected boolean browser;

  protected boolean dispatchAsync;

  protected java.lang.String selector;

  protected java.lang.String clientId;

  protected java.lang.String subscriptionName;

  protected boolean noLocal;

  protected boolean exclusive;

  protected boolean retroactive;

  protected byte priority;

  protected org.apache.activemq.command.BrokerId[] brokerPath;

  protected boolean optimizedAcknowledge;

  protected transient int currentPrefetchSize;

  protected boolean noRangeAcks;

  protected org.apache.activemq.filter.BooleanExpression additionalPredicate;

  protected transient boolean networkSubscription;

  protected transient java.util.List<org.apache.activemq.command.ConsumerId> networkConsumerIds;

  private transient long lastDeliveredSequenceId;

  public org.apache.activemq.command.ConsumerInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: return

  public org.apache.activemq.command.ConsumerInfo(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
       9: return

  public org.apache.activemq.command.ConsumerInfo(org.apache.activemq.command.SessionInfo, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: new           #3                  // class org/apache/activemq/command/ConsumerId
       8: dup
       9: aload_1
      10: invokevirtual #4                  // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      13: lload_2
      14: invokespecial #5                  // Method org/apache/activemq/command/ConsumerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      17: putfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      20: return

  public org.apache.activemq.command.ConsumerInfo copy();
    Code:
       0: new           #6                  // class org/apache/activemq/command/ConsumerInfo
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #8                  // Method copy:(Lorg/apache/activemq/command/ConsumerInfo;)V
      13: aload_1
      14: areturn

  public void copy(org.apache.activemq.command.ConsumerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/apache/activemq/command/BaseCommand.copy:(Lorg/apache/activemq/command/BaseCommand;)V
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      10: putfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      13: aload_1
      14: aload_0
      15: getfield      #10                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      18: putfield      #10                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      21: aload_1
      22: aload_0
      23: getfield      #11                 // Field prefetchSize:I
      26: putfield      #11                 // Field prefetchSize:I
      29: aload_1
      30: aload_0
      31: getfield      #12                 // Field maximumPendingMessageLimit:I
      34: putfield      #12                 // Field maximumPendingMessageLimit:I
      37: aload_1
      38: aload_0
      39: getfield      #13                 // Field browser:Z
      42: putfield      #13                 // Field browser:Z
      45: aload_1
      46: aload_0
      47: getfield      #14                 // Field dispatchAsync:Z
      50: putfield      #14                 // Field dispatchAsync:Z
      53: aload_1
      54: aload_0
      55: getfield      #15                 // Field selector:Ljava/lang/String;
      58: putfield      #15                 // Field selector:Ljava/lang/String;
      61: aload_1
      62: aload_0
      63: getfield      #16                 // Field clientId:Ljava/lang/String;
      66: putfield      #16                 // Field clientId:Ljava/lang/String;
      69: aload_1
      70: aload_0
      71: getfield      #17                 // Field subscriptionName:Ljava/lang/String;
      74: putfield      #17                 // Field subscriptionName:Ljava/lang/String;
      77: aload_1
      78: aload_0
      79: getfield      #18                 // Field noLocal:Z
      82: putfield      #18                 // Field noLocal:Z
      85: aload_1
      86: aload_0
      87: getfield      #19                 // Field exclusive:Z
      90: putfield      #19                 // Field exclusive:Z
      93: aload_1
      94: aload_0
      95: getfield      #20                 // Field retroactive:Z
      98: putfield      #20                 // Field retroactive:Z
     101: aload_1
     102: aload_0
     103: getfield      #21                 // Field priority:B
     106: putfield      #21                 // Field priority:B
     109: aload_1
     110: aload_0
     111: getfield      #22                 // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
     114: putfield      #22                 // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
     117: aload_1
     118: aload_0
     119: getfield      #23                 // Field networkSubscription:Z
     122: putfield      #23                 // Field networkSubscription:Z
     125: aload_0
     126: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
     129: ifnull        164
     132: aload_1
     133: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
     136: ifnonnull     150
     139: aload_1
     140: new           #25                 // class java/util/ArrayList
     143: dup
     144: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
     147: putfield      #24                 // Field networkConsumerIds:Ljava/util/List;
     150: aload_1
     151: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
     154: aload_0
     155: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
     158: invokeinterface #27,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     163: pop
     164: return

  public boolean isDurable();
    Code:
       0: aload_0
       1: getfield      #17                 // Field subscriptionName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public byte getDataStructureType();
    Code:
       0: iconst_5
       1: ireturn

  public org.apache.activemq.command.ConsumerId getConsumerId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
       4: areturn

  public void setConsumerId(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
       5: return

  public boolean isBrowser();
    Code:
       0: aload_0
       1: getfield      #13                 // Field browser:Z
       4: ireturn

  public void setBrowser(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field browser:Z
       5: return

  public org.apache.activemq.command.ActiveMQDestination getDestination();
    Code:
       0: aload_0
       1: getfield      #10                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public int getPrefetchSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field prefetchSize:I
       4: ireturn

  public void setPrefetchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field prefetchSize:I
       5: aload_0
       6: iload_1
       7: putfield      #28                 // Field currentPrefetchSize:I
      10: return

  public int getMaximumPendingMessageLimit();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maximumPendingMessageLimit:I
       4: ireturn

  public void setMaximumPendingMessageLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field maximumPendingMessageLimit:I
       5: return

  public boolean isDispatchAsync();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dispatchAsync:Z
       4: ireturn

  public void setDispatchAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field dispatchAsync:Z
       5: return

  public java.lang.String getSelector();
    Code:
       0: aload_0
       1: getfield      #15                 // Field selector:Ljava/lang/String;
       4: areturn

  public void setSelector(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field selector:Ljava/lang/String;
       5: return

  public java.lang.String getClientId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field clientId:Ljava/lang/String;
       4: areturn

  public void setClientId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field clientId:Ljava/lang/String;
       5: return

  public java.lang.String getSubscriptionName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field subscriptionName:Ljava/lang/String;
       4: areturn

  public void setSubscriptionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field subscriptionName:Ljava/lang/String;
       5: return

  public boolean isNoLocal();
    Code:
       0: aload_0
       1: getfield      #18                 // Field noLocal:Z
       4: ireturn

  public void setNoLocal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field noLocal:Z
       5: return

  public boolean isExclusive();
    Code:
       0: aload_0
       1: getfield      #19                 // Field exclusive:Z
       4: ireturn

  public void setExclusive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field exclusive:Z
       5: return

  public boolean isRetroactive();
    Code:
       0: aload_0
       1: getfield      #20                 // Field retroactive:Z
       4: ireturn

  public void setRetroactive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field retroactive:Z
       5: return

  public org.apache.activemq.command.RemoveInfo createRemoveCommand();
    Code:
       0: new           #29                 // class org/apache/activemq/command/RemoveInfo
       3: dup
       4: aload_0
       5: invokevirtual #30                 // Method getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       8: invokespecial #31                 // Method org/apache/activemq/command/RemoveInfo."<init>":(Lorg/apache/activemq/command/DataStructure;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #32                 // Method isResponseRequired:()Z
      17: invokevirtual #33                 // Method org/apache/activemq/command/RemoveInfo.setResponseRequired:(Z)V
      20: aload_1
      21: areturn

  public byte getPriority();
    Code:
       0: aload_0
       1: getfield      #21                 // Field priority:B
       4: ireturn

  public void setPriority(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field priority:B
       5: return

  public org.apache.activemq.command.BrokerId[] getBrokerPath();
    Code:
       0: aload_0
       1: getfield      #22                 // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
       4: areturn

  public void setBrokerPath(org.apache.activemq.command.BrokerId[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
       5: return

  public org.apache.activemq.filter.BooleanExpression getAdditionalPredicate();
    Code:
       0: aload_0
       1: getfield      #34                 // Field additionalPredicate:Lorg/apache/activemq/filter/BooleanExpression;
       4: areturn

  public void setAdditionalPredicate(org.apache.activemq.filter.BooleanExpression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field additionalPredicate:Lorg/apache/activemq/filter/BooleanExpression;
       5: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #35,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processAddConsumer:(Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/command/Response;
       7: areturn

  public boolean isNetworkSubscription();
    Code:
       0: aload_0
       1: getfield      #23                 // Field networkSubscription:Z
       4: ireturn

  public void setNetworkSubscription(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field networkSubscription:Z
       5: return

  public boolean isOptimizedAcknowledge();
    Code:
       0: aload_0
       1: getfield      #36                 // Field optimizedAcknowledge:Z
       4: ireturn

  public void setOptimizedAcknowledge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field optimizedAcknowledge:Z
       5: return

  public int getCurrentPrefetchSize();
    Code:
       0: aload_0
       1: getfield      #28                 // Field currentPrefetchSize:I
       4: ireturn

  public void setCurrentPrefetchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field currentPrefetchSize:I
       5: return

  public boolean isNoRangeAcks();
    Code:
       0: aload_0
       1: getfield      #37                 // Field noRangeAcks:Z
       4: ireturn

  public void setNoRangeAcks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field noRangeAcks:Z
       5: return

  public synchronized void addNetworkConsumerId(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #25                 // class java/util/ArrayList
      11: dup
      12: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      18: aload_0
      19: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      22: aload_1
      23: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public synchronized void removeNetworkConsumerId(org.apache.activemq.command.ConsumerId);
    Code:
       0: aload_0
       1: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
       4: ifnull        35
       7: aload_0
       8: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      11: aload_1
      12: invokeinterface #39,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      22: invokeinterface #40,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      27: ifeq          35
      30: aload_0
      31: aconst_null
      32: putfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      35: return

  public synchronized boolean isNetworkConsumersEmpty();
    Code:
       0: aload_0
       1: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      11: invokeinterface #40,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public synchronized java.util.List<org.apache.activemq.command.ConsumerId> getNetworkConsumerIds();
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      12: ifnull        26
      15: aload_1
      16: aload_0
      17: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      20: invokeinterface #27,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      15: invokevirtual #41                 // Method org/apache/activemq/command/ConsumerId.hashCode:()I
      18: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #6                  // class org/apache/activemq/command/ConsumerInfo
      30: astore_2
      31: aload_0
      32: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      42: ifnull        47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      51: aload_2
      52: getfield      #2                  // Field consumerId:Lorg/apache/activemq/command/ConsumerId;
      55: invokevirtual #43                 // Method org/apache/activemq/command/ConsumerId.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: iconst_1
      64: ireturn

  public org.apache.activemq.command.ConsumerId[] getNetworkConsumerPath();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
       6: ifnull        26
       9: aload_0
      10: getfield      #24                 // Field networkConsumerIds:Ljava/util/List;
      13: iconst_0
      14: anewarray     #3                  // class org/apache/activemq/command/ConsumerId
      17: invokeinterface #44,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      22: checkcast     #45                 // class "[Lorg/apache/activemq/command/ConsumerId;"
      25: astore_1
      26: aload_1
      27: areturn

  public void setNetworkConsumerPath(org.apache.activemq.command.ConsumerId[]);
    Code:
       0: aload_1
       1: ifnull        25
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_1
       8: arraylength
       9: if_icmpge     25
      12: aload_0
      13: aload_1
      14: iload_2
      15: aaload
      16: invokevirtual #46                 // Method addNetworkConsumerId:(Lorg/apache/activemq/command/ConsumerId;)V
      19: iinc          2, 1
      22: goto          6
      25: return

  public void setLastDeliveredSequenceId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #47                 // Field lastDeliveredSequenceId:J
       5: return

  public long getLastDeliveredSequenceId();
    Code:
       0: aload_0
       1: getfield      #47                 // Field lastDeliveredSequenceId:J
       4: lreturn
}
